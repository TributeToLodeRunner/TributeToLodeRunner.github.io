(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Infinner"] = factory();
	else
		root["Infinner"] = factory();
})(this, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "../../node_modules/pako/index.js":
/*!****************************************!*\
  !*** ../../node_modules/pako/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Top level file is just a mixin of submodules & constants


const { Deflate, deflate, deflateRaw, gzip } = __webpack_require__(/*! ./lib/deflate */ "../../node_modules/pako/lib/deflate.js");

const { Inflate, inflate, inflateRaw, ungzip } = __webpack_require__(/*! ./lib/inflate */ "../../node_modules/pako/lib/inflate.js");

const constants = __webpack_require__(/*! ./lib/zlib/constants */ "../../node_modules/pako/lib/zlib/constants.js");

module.exports.Deflate = Deflate;
module.exports.deflate = deflate;
module.exports.deflateRaw = deflateRaw;
module.exports.gzip = gzip;
module.exports.Inflate = Inflate;
module.exports.inflate = inflate;
module.exports.inflateRaw = inflateRaw;
module.exports.ungzip = ungzip;
module.exports.constants = constants;


/***/ }),

/***/ "../../node_modules/pako/lib/deflate.js":
/*!**********************************************!*\
  !*** ../../node_modules/pako/lib/deflate.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";



const zlib_deflate = __webpack_require__(/*! ./zlib/deflate */ "../../node_modules/pako/lib/zlib/deflate.js");
const utils        = __webpack_require__(/*! ./utils/common */ "../../node_modules/pako/lib/utils/common.js");
const strings      = __webpack_require__(/*! ./utils/strings */ "../../node_modules/pako/lib/utils/strings.js");
const msg          = __webpack_require__(/*! ./zlib/messages */ "../../node_modules/pako/lib/zlib/messages.js");
const ZStream      = __webpack_require__(/*! ./zlib/zstream */ "../../node_modules/pako/lib/zlib/zstream.js");

const toString = Object.prototype.toString;

/* Public constants ==========================================================*/
/* ===========================================================================*/

const {
  Z_NO_FLUSH, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH,
  Z_OK, Z_STREAM_END,
  Z_DEFAULT_COMPRESSION,
  Z_DEFAULT_STRATEGY,
  Z_DEFLATED
} = __webpack_require__(/*! ./zlib/constants */ "../../node_modules/pako/lib/zlib/constants.js");

/* ===========================================================================*/


/**
 * class Deflate
 *
 * Generic JS-style wrapper for zlib calls. If you don't need
 * streaming behaviour - use more simple functions: [[deflate]],
 * [[deflateRaw]] and [[gzip]].
 **/

/* internal
 * Deflate.chunks -> Array
 *
 * Chunks of output data, if [[Deflate#onData]] not overridden.
 **/

/**
 * Deflate.result -> Uint8Array
 *
 * Compressed result, generated by default [[Deflate#onData]]
 * and [[Deflate#onEnd]] handlers. Filled after you push last chunk
 * (call [[Deflate#push]] with `Z_FINISH` / `true` param).
 **/

/**
 * Deflate.err -> Number
 *
 * Error code after deflate finished. 0 (Z_OK) on success.
 * You will not need it in real life, because deflate errors
 * are possible only on wrong options or bad `onData` / `onEnd`
 * custom handlers.
 **/

/**
 * Deflate.msg -> String
 *
 * Error message, if [[Deflate.err]] != 0
 **/


/**
 * new Deflate(options)
 * - options (Object): zlib deflate options.
 *
 * Creates new deflator instance with specified params. Throws exception
 * on bad params. Supported options:
 *
 * - `level`
 * - `windowBits`
 * - `memLevel`
 * - `strategy`
 * - `dictionary`
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Additional options, for internal needs:
 *
 * - `chunkSize` - size of generated data chunks (16K by default)
 * - `raw` (Boolean) - do raw deflate
 * - `gzip` (Boolean) - create gzip wrapper
 * - `header` (Object) - custom header for gzip
 *   - `text` (Boolean) - true if compressed data believed to be text
 *   - `time` (Number) - modification time, unix timestamp
 *   - `os` (Number) - operation system code
 *   - `extra` (Array) - array of bytes with extra data (max 65536)
 *   - `name` (String) - file name (binary string)
 *   - `comment` (String) - comment (binary string)
 *   - `hcrc` (Boolean) - true if header crc should be added
 *
 * ##### Example:
 *
 * ```javascript
 * const pako = require('pako')
 *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])
 *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);
 *
 * const deflate = new pako.Deflate({ level: 3});
 *
 * deflate.push(chunk1, false);
 * deflate.push(chunk2, true);  // true -> last chunk
 *
 * if (deflate.err) { throw new Error(deflate.err); }
 *
 * console.log(deflate.result);
 * ```
 **/
function Deflate(options) {
  this.options = utils.assign({
    level: Z_DEFAULT_COMPRESSION,
    method: Z_DEFLATED,
    chunkSize: 16384,
    windowBits: 15,
    memLevel: 8,
    strategy: Z_DEFAULT_STRATEGY
  }, options || {});

  let opt = this.options;

  if (opt.raw && (opt.windowBits > 0)) {
    opt.windowBits = -opt.windowBits;
  }

  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {
    opt.windowBits += 16;
  }

  this.err    = 0;      // error code, if happens (0 = Z_OK)
  this.msg    = '';     // error message
  this.ended  = false;  // used to avoid multiple onEnd() calls
  this.chunks = [];     // chunks of compressed data

  this.strm = new ZStream();
  this.strm.avail_out = 0;

  let status = zlib_deflate.deflateInit2(
    this.strm,
    opt.level,
    opt.method,
    opt.windowBits,
    opt.memLevel,
    opt.strategy
  );

  if (status !== Z_OK) {
    throw new Error(msg[status]);
  }

  if (opt.header) {
    zlib_deflate.deflateSetHeader(this.strm, opt.header);
  }

  if (opt.dictionary) {
    let dict;
    // Convert data if needed
    if (typeof opt.dictionary === 'string') {
      // If we need to compress text, change encoding to utf8.
      dict = strings.string2buf(opt.dictionary);
    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {
      dict = new Uint8Array(opt.dictionary);
    } else {
      dict = opt.dictionary;
    }

    status = zlib_deflate.deflateSetDictionary(this.strm, dict);

    if (status !== Z_OK) {
      throw new Error(msg[status]);
    }

    this._dict_set = true;
  }
}

/**
 * Deflate#push(data[, flush_mode]) -> Boolean
 * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be
 *   converted to utf8 byte sequence.
 * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.
 *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.
 *
 * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with
 * new compressed chunks. Returns `true` on success. The last data block must
 * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending
 * buffers and call [[Deflate#onEnd]].
 *
 * On fail call [[Deflate#onEnd]] with error code and return false.
 *
 * ##### Example
 *
 * ```javascript
 * push(chunk, false); // push one of data chunks
 * ...
 * push(chunk, true);  // push last chunk
 * ```
 **/
Deflate.prototype.push = function (data, flush_mode) {
  const strm = this.strm;
  const chunkSize = this.options.chunkSize;
  let status, _flush_mode;

  if (this.ended) { return false; }

  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;
  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;

  // Convert data if needed
  if (typeof data === 'string') {
    // If we need to compress text, change encoding to utf8.
    strm.input = strings.string2buf(data);
  } else if (toString.call(data) === '[object ArrayBuffer]') {
    strm.input = new Uint8Array(data);
  } else {
    strm.input = data;
  }

  strm.next_in = 0;
  strm.avail_in = strm.input.length;

  for (;;) {
    if (strm.avail_out === 0) {
      strm.output = new Uint8Array(chunkSize);
      strm.next_out = 0;
      strm.avail_out = chunkSize;
    }

    // Make sure avail_out > 6 to avoid repeating markers
    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {
      this.onData(strm.output.subarray(0, strm.next_out));
      strm.avail_out = 0;
      continue;
    }

    status = zlib_deflate.deflate(strm, _flush_mode);

    // Ended => flush and finish
    if (status === Z_STREAM_END) {
      if (strm.next_out > 0) {
        this.onData(strm.output.subarray(0, strm.next_out));
      }
      status = zlib_deflate.deflateEnd(this.strm);
      this.onEnd(status);
      this.ended = true;
      return status === Z_OK;
    }

    // Flush if out buffer full
    if (strm.avail_out === 0) {
      this.onData(strm.output);
      continue;
    }

    // Flush if requested and has data
    if (_flush_mode > 0 && strm.next_out > 0) {
      this.onData(strm.output.subarray(0, strm.next_out));
      strm.avail_out = 0;
      continue;
    }

    if (strm.avail_in === 0) break;
  }

  return true;
};


/**
 * Deflate#onData(chunk) -> Void
 * - chunk (Uint8Array): output data.
 *
 * By default, stores data blocks in `chunks[]` property and glue
 * those in `onEnd`. Override this handler, if you need another behaviour.
 **/
Deflate.prototype.onData = function (chunk) {
  this.chunks.push(chunk);
};


/**
 * Deflate#onEnd(status) -> Void
 * - status (Number): deflate status. 0 (Z_OK) on success,
 *   other if not.
 *
 * Called once after you tell deflate that the input stream is
 * complete (Z_FINISH). By default - join collected chunks,
 * free memory and fill `results` / `err` properties.
 **/
Deflate.prototype.onEnd = function (status) {
  // On success - join
  if (status === Z_OK) {
    this.result = utils.flattenChunks(this.chunks);
  }
  this.chunks = [];
  this.err = status;
  this.msg = this.strm.msg;
};


/**
 * deflate(data[, options]) -> Uint8Array
 * - data (Uint8Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * Compress `data` with deflate algorithm and `options`.
 *
 * Supported options are:
 *
 * - level
 * - windowBits
 * - memLevel
 * - strategy
 * - dictionary
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Sugar (options):
 *
 * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify
 *   negative windowBits implicitly.
 *
 * ##### Example:
 *
 * ```javascript
 * const pako = require('pako')
 * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);
 *
 * console.log(pako.deflate(data));
 * ```
 **/
function deflate(input, options) {
  const deflator = new Deflate(options);

  deflator.push(input, true);

  // That will never happens, if you don't cheat with options :)
  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }

  return deflator.result;
}


/**
 * deflateRaw(data[, options]) -> Uint8Array
 * - data (Uint8Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * The same as [[deflate]], but creates raw data, without wrapper
 * (header and adler32 crc).
 **/
function deflateRaw(input, options) {
  options = options || {};
  options.raw = true;
  return deflate(input, options);
}


/**
 * gzip(data[, options]) -> Uint8Array
 * - data (Uint8Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * The same as [[deflate]], but create gzip wrapper instead of
 * deflate one.
 **/
function gzip(input, options) {
  options = options || {};
  options.gzip = true;
  return deflate(input, options);
}


module.exports.Deflate = Deflate;
module.exports.deflate = deflate;
module.exports.deflateRaw = deflateRaw;
module.exports.gzip = gzip;
module.exports.constants = __webpack_require__(/*! ./zlib/constants */ "../../node_modules/pako/lib/zlib/constants.js");


/***/ }),

/***/ "../../node_modules/pako/lib/inflate.js":
/*!**********************************************!*\
  !*** ../../node_modules/pako/lib/inflate.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";



const zlib_inflate = __webpack_require__(/*! ./zlib/inflate */ "../../node_modules/pako/lib/zlib/inflate.js");
const utils        = __webpack_require__(/*! ./utils/common */ "../../node_modules/pako/lib/utils/common.js");
const strings      = __webpack_require__(/*! ./utils/strings */ "../../node_modules/pako/lib/utils/strings.js");
const msg          = __webpack_require__(/*! ./zlib/messages */ "../../node_modules/pako/lib/zlib/messages.js");
const ZStream      = __webpack_require__(/*! ./zlib/zstream */ "../../node_modules/pako/lib/zlib/zstream.js");
const GZheader     = __webpack_require__(/*! ./zlib/gzheader */ "../../node_modules/pako/lib/zlib/gzheader.js");

const toString = Object.prototype.toString;

/* Public constants ==========================================================*/
/* ===========================================================================*/

const {
  Z_NO_FLUSH, Z_FINISH,
  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR
} = __webpack_require__(/*! ./zlib/constants */ "../../node_modules/pako/lib/zlib/constants.js");

/* ===========================================================================*/


/**
 * class Inflate
 *
 * Generic JS-style wrapper for zlib calls. If you don't need
 * streaming behaviour - use more simple functions: [[inflate]]
 * and [[inflateRaw]].
 **/

/* internal
 * inflate.chunks -> Array
 *
 * Chunks of output data, if [[Inflate#onData]] not overridden.
 **/

/**
 * Inflate.result -> Uint8Array|String
 *
 * Uncompressed result, generated by default [[Inflate#onData]]
 * and [[Inflate#onEnd]] handlers. Filled after you push last chunk
 * (call [[Inflate#push]] with `Z_FINISH` / `true` param).
 **/

/**
 * Inflate.err -> Number
 *
 * Error code after inflate finished. 0 (Z_OK) on success.
 * Should be checked if broken data possible.
 **/

/**
 * Inflate.msg -> String
 *
 * Error message, if [[Inflate.err]] != 0
 **/


/**
 * new Inflate(options)
 * - options (Object): zlib inflate options.
 *
 * Creates new inflator instance with specified params. Throws exception
 * on bad params. Supported options:
 *
 * - `windowBits`
 * - `dictionary`
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Additional options, for internal needs:
 *
 * - `chunkSize` - size of generated data chunks (16K by default)
 * - `raw` (Boolean) - do raw inflate
 * - `to` (String) - if equal to 'string', then result will be converted
 *   from utf8 to utf16 (javascript) string. When string output requested,
 *   chunk length can differ from `chunkSize`, depending on content.
 *
 * By default, when no options set, autodetect deflate/gzip data format via
 * wrapper header.
 *
 * ##### Example:
 *
 * ```javascript
 * const pako = require('pako')
 * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])
 * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);
 *
 * const inflate = new pako.Inflate({ level: 3});
 *
 * inflate.push(chunk1, false);
 * inflate.push(chunk2, true);  // true -> last chunk
 *
 * if (inflate.err) { throw new Error(inflate.err); }
 *
 * console.log(inflate.result);
 * ```
 **/
function Inflate(options) {
  this.options = utils.assign({
    chunkSize: 1024 * 64,
    windowBits: 15,
    to: ''
  }, options || {});

  const opt = this.options;

  // Force window size for `raw` data, if not set directly,
  // because we have no header for autodetect.
  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {
    opt.windowBits = -opt.windowBits;
    if (opt.windowBits === 0) { opt.windowBits = -15; }
  }

  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate
  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&
      !(options && options.windowBits)) {
    opt.windowBits += 32;
  }

  // Gzip header has no info about windows size, we can do autodetect only
  // for deflate. So, if window size not set, force it to max when gzip possible
  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {
    // bit 3 (16) -> gzipped data
    // bit 4 (32) -> autodetect gzip/deflate
    if ((opt.windowBits & 15) === 0) {
      opt.windowBits |= 15;
    }
  }

  this.err    = 0;      // error code, if happens (0 = Z_OK)
  this.msg    = '';     // error message
  this.ended  = false;  // used to avoid multiple onEnd() calls
  this.chunks = [];     // chunks of compressed data

  this.strm   = new ZStream();
  this.strm.avail_out = 0;

  let status  = zlib_inflate.inflateInit2(
    this.strm,
    opt.windowBits
  );

  if (status !== Z_OK) {
    throw new Error(msg[status]);
  }

  this.header = new GZheader();

  zlib_inflate.inflateGetHeader(this.strm, this.header);

  // Setup dictionary
  if (opt.dictionary) {
    // Convert data if needed
    if (typeof opt.dictionary === 'string') {
      opt.dictionary = strings.string2buf(opt.dictionary);
    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {
      opt.dictionary = new Uint8Array(opt.dictionary);
    }
    if (opt.raw) { //In raw mode we need to set the dictionary early
      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);
      if (status !== Z_OK) {
        throw new Error(msg[status]);
      }
    }
  }
}

/**
 * Inflate#push(data[, flush_mode]) -> Boolean
 * - data (Uint8Array|ArrayBuffer): input data
 * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE
 *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,
 *   `true` means Z_FINISH.
 *
 * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with
 * new output chunks. Returns `true` on success. If end of stream detected,
 * [[Inflate#onEnd]] will be called.
 *
 * `flush_mode` is not needed for normal operation, because end of stream
 * detected automatically. You may try to use it for advanced things, but
 * this functionality was not tested.
 *
 * On fail call [[Inflate#onEnd]] with error code and return false.
 *
 * ##### Example
 *
 * ```javascript
 * push(chunk, false); // push one of data chunks
 * ...
 * push(chunk, true);  // push last chunk
 * ```
 **/
Inflate.prototype.push = function (data, flush_mode) {
  const strm = this.strm;
  const chunkSize = this.options.chunkSize;
  const dictionary = this.options.dictionary;
  let status, _flush_mode, last_avail_out;

  if (this.ended) return false;

  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;
  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;

  // Convert data if needed
  if (toString.call(data) === '[object ArrayBuffer]') {
    strm.input = new Uint8Array(data);
  } else {
    strm.input = data;
  }

  strm.next_in = 0;
  strm.avail_in = strm.input.length;

  for (;;) {
    if (strm.avail_out === 0) {
      strm.output = new Uint8Array(chunkSize);
      strm.next_out = 0;
      strm.avail_out = chunkSize;
    }

    status = zlib_inflate.inflate(strm, _flush_mode);

    if (status === Z_NEED_DICT && dictionary) {
      status = zlib_inflate.inflateSetDictionary(strm, dictionary);

      if (status === Z_OK) {
        status = zlib_inflate.inflate(strm, _flush_mode);
      } else if (status === Z_DATA_ERROR) {
        // Replace code with more verbose
        status = Z_NEED_DICT;
      }
    }

    // Skip snyc markers if more data follows and not raw mode
    while (strm.avail_in > 0 &&
           status === Z_STREAM_END &&
           strm.state.wrap > 0 &&
           data[strm.next_in] !== 0)
    {
      zlib_inflate.inflateReset(strm);
      status = zlib_inflate.inflate(strm, _flush_mode);
    }

    switch (status) {
      case Z_STREAM_ERROR:
      case Z_DATA_ERROR:
      case Z_NEED_DICT:
      case Z_MEM_ERROR:
        this.onEnd(status);
        this.ended = true;
        return false;
    }

    // Remember real `avail_out` value, because we may patch out buffer content
    // to align utf8 strings boundaries.
    last_avail_out = strm.avail_out;

    if (strm.next_out) {
      if (strm.avail_out === 0 || status === Z_STREAM_END) {

        if (this.options.to === 'string') {

          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);

          let tail = strm.next_out - next_out_utf8;
          let utf8str = strings.buf2string(strm.output, next_out_utf8);

          // move tail & realign counters
          strm.next_out = tail;
          strm.avail_out = chunkSize - tail;
          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);

          this.onData(utf8str);

        } else {
          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));
        }
      }
    }

    // Must repeat iteration if out buffer is full
    if (status === Z_OK && last_avail_out === 0) continue;

    // Finalize if end of stream reached.
    if (status === Z_STREAM_END) {
      status = zlib_inflate.inflateEnd(this.strm);
      this.onEnd(status);
      this.ended = true;
      return true;
    }

    if (strm.avail_in === 0) break;
  }

  return true;
};


/**
 * Inflate#onData(chunk) -> Void
 * - chunk (Uint8Array|String): output data. When string output requested,
 *   each chunk will be string.
 *
 * By default, stores data blocks in `chunks[]` property and glue
 * those in `onEnd`. Override this handler, if you need another behaviour.
 **/
Inflate.prototype.onData = function (chunk) {
  this.chunks.push(chunk);
};


/**
 * Inflate#onEnd(status) -> Void
 * - status (Number): inflate status. 0 (Z_OK) on success,
 *   other if not.
 *
 * Called either after you tell inflate that the input stream is
 * complete (Z_FINISH). By default - join collected chunks,
 * free memory and fill `results` / `err` properties.
 **/
Inflate.prototype.onEnd = function (status) {
  // On success - join
  if (status === Z_OK) {
    if (this.options.to === 'string') {
      this.result = this.chunks.join('');
    } else {
      this.result = utils.flattenChunks(this.chunks);
    }
  }
  this.chunks = [];
  this.err = status;
  this.msg = this.strm.msg;
};


/**
 * inflate(data[, options]) -> Uint8Array|String
 * - data (Uint8Array): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * Decompress `data` with inflate/ungzip and `options`. Autodetect
 * format via wrapper header by default. That's why we don't provide
 * separate `ungzip` method.
 *
 * Supported options are:
 *
 * - windowBits
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information.
 *
 * Sugar (options):
 *
 * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify
 *   negative windowBits implicitly.
 * - `to` (String) - if equal to 'string', then result will be converted
 *   from utf8 to utf16 (javascript) string. When string output requested,
 *   chunk length can differ from `chunkSize`, depending on content.
 *
 *
 * ##### Example:
 *
 * ```javascript
 * const pako = require('pako');
 * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));
 * let output;
 *
 * try {
 *   output = pako.inflate(input);
 * } catch (err) {
 *   console.log(err);
 * }
 * ```
 **/
function inflate(input, options) {
  const inflator = new Inflate(options);

  inflator.push(input);

  // That will never happens, if you don't cheat with options :)
  if (inflator.err) throw inflator.msg || msg[inflator.err];

  return inflator.result;
}


/**
 * inflateRaw(data[, options]) -> Uint8Array|String
 * - data (Uint8Array): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * The same as [[inflate]], but creates raw data, without wrapper
 * (header and adler32 crc).
 **/
function inflateRaw(input, options) {
  options = options || {};
  options.raw = true;
  return inflate(input, options);
}


/**
 * ungzip(data[, options]) -> Uint8Array|String
 * - data (Uint8Array): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * Just shortcut to [[inflate]], because it autodetects format
 * by header.content. Done for convenience.
 **/


module.exports.Inflate = Inflate;
module.exports.inflate = inflate;
module.exports.inflateRaw = inflateRaw;
module.exports.ungzip = inflate;
module.exports.constants = __webpack_require__(/*! ./zlib/constants */ "../../node_modules/pako/lib/zlib/constants.js");


/***/ }),

/***/ "../../node_modules/pako/lib/utils/common.js":
/*!***************************************************!*\
  !*** ../../node_modules/pako/lib/utils/common.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";



const _has = (obj, key) => {
  return Object.prototype.hasOwnProperty.call(obj, key);
};

module.exports.assign = function (obj /*from1, from2, from3, ...*/) {
  const sources = Array.prototype.slice.call(arguments, 1);
  while (sources.length) {
    const source = sources.shift();
    if (!source) { continue; }

    if (typeof source !== 'object') {
      throw new TypeError(source + 'must be non-object');
    }

    for (const p in source) {
      if (_has(source, p)) {
        obj[p] = source[p];
      }
    }
  }

  return obj;
};


// Join array of chunks to single array.
module.exports.flattenChunks = (chunks) => {
  // calculate data length
  let len = 0;

  for (let i = 0, l = chunks.length; i < l; i++) {
    len += chunks[i].length;
  }

  // join chunks
  const result = new Uint8Array(len);

  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {
    let chunk = chunks[i];
    result.set(chunk, pos);
    pos += chunk.length;
  }

  return result;
};


/***/ }),

/***/ "../../node_modules/pako/lib/utils/strings.js":
/*!****************************************************!*\
  !*** ../../node_modules/pako/lib/utils/strings.js ***!
  \****************************************************/
/***/ ((module) => {

"use strict";
// String encode/decode helpers



// Quick check if we can use fast array to bin string conversion
//
// - apply(Array) can fail on Android 2.2
// - apply(Uint8Array) can fail on iOS 5.1 Safari
//
let STR_APPLY_UIA_OK = true;

try { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }


// Table with utf8 lengths (calculated by first byte of sequence)
// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,
// because max possible codepoint is 0x10ffff
const _utf8len = new Uint8Array(256);
for (let q = 0; q < 256; q++) {
  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);
}
_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start


// convert string to array (typed, when possible)
module.exports.string2buf = (str) => {
  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {
    return new TextEncoder().encode(str);
  }

  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;

  // count binary size
  for (m_pos = 0; m_pos < str_len; m_pos++) {
    c = str.charCodeAt(m_pos);
    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {
      c2 = str.charCodeAt(m_pos + 1);
      if ((c2 & 0xfc00) === 0xdc00) {
        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);
        m_pos++;
      }
    }
    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;
  }

  // allocate buffer
  buf = new Uint8Array(buf_len);

  // convert
  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {
    c = str.charCodeAt(m_pos);
    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {
      c2 = str.charCodeAt(m_pos + 1);
      if ((c2 & 0xfc00) === 0xdc00) {
        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);
        m_pos++;
      }
    }
    if (c < 0x80) {
      /* one byte */
      buf[i++] = c;
    } else if (c < 0x800) {
      /* two bytes */
      buf[i++] = 0xC0 | (c >>> 6);
      buf[i++] = 0x80 | (c & 0x3f);
    } else if (c < 0x10000) {
      /* three bytes */
      buf[i++] = 0xE0 | (c >>> 12);
      buf[i++] = 0x80 | (c >>> 6 & 0x3f);
      buf[i++] = 0x80 | (c & 0x3f);
    } else {
      /* four bytes */
      buf[i++] = 0xf0 | (c >>> 18);
      buf[i++] = 0x80 | (c >>> 12 & 0x3f);
      buf[i++] = 0x80 | (c >>> 6 & 0x3f);
      buf[i++] = 0x80 | (c & 0x3f);
    }
  }

  return buf;
};

// Helper
const buf2binstring = (buf, len) => {
  // On Chrome, the arguments in a function call that are allowed is `65534`.
  // If the length of the buffer is smaller than that, we can use this optimization,
  // otherwise we will take a slower path.
  if (len < 65534) {
    if (buf.subarray && STR_APPLY_UIA_OK) {
      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));
    }
  }

  let result = '';
  for (let i = 0; i < len; i++) {
    result += String.fromCharCode(buf[i]);
  }
  return result;
};


// convert array to string
module.exports.buf2string = (buf, max) => {
  const len = max || buf.length;

  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {
    return new TextDecoder().decode(buf.subarray(0, max));
  }

  let i, out;

  // Reserve max possible length (2 words per char)
  // NB: by unknown reasons, Array is significantly faster for
  //     String.fromCharCode.apply than Uint16Array.
  const utf16buf = new Array(len * 2);

  for (out = 0, i = 0; i < len;) {
    let c = buf[i++];
    // quick process ascii
    if (c < 0x80) { utf16buf[out++] = c; continue; }

    let c_len = _utf8len[c];
    // skip 5 & 6 byte codes
    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }

    // apply mask on first byte
    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;
    // join the rest
    while (c_len > 1 && i < len) {
      c = (c << 6) | (buf[i++] & 0x3f);
      c_len--;
    }

    // terminated by end of string?
    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }

    if (c < 0x10000) {
      utf16buf[out++] = c;
    } else {
      c -= 0x10000;
      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);
      utf16buf[out++] = 0xdc00 | (c & 0x3ff);
    }
  }

  return buf2binstring(utf16buf, out);
};


// Calculate max possible position in utf8 buffer,
// that will not break sequence. If that's not possible
// - (very small limits) return max size as is.
//
// buf[] - utf8 bytes array
// max   - length limit (mandatory);
module.exports.utf8border = (buf, max) => {

  max = max || buf.length;
  if (max > buf.length) { max = buf.length; }

  // go back from last position, until start of sequence found
  let pos = max - 1;
  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }

  // Very small and broken sequence,
  // return max, because we should return something anyway.
  if (pos < 0) { return max; }

  // If we came to start of buffer - that means buffer is too small,
  // return max too.
  if (pos === 0) { return max; }

  return (pos + _utf8len[buf[pos]] > max) ? pos : max;
};


/***/ }),

/***/ "../../node_modules/pako/lib/zlib/adler32.js":
/*!***************************************************!*\
  !*** ../../node_modules/pako/lib/zlib/adler32.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";


// Note: adler32 takes 12% for level 0 and 2% for level 6.
// It isn't worth it to make additional optimizations as in original.
// Small size is preferable.

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

const adler32 = (adler, buf, len, pos) => {
  let s1 = (adler & 0xffff) |0,
      s2 = ((adler >>> 16) & 0xffff) |0,
      n = 0;

  while (len !== 0) {
    // Set limit ~ twice less than 5552, to keep
    // s2 in 31-bits, because we force signed ints.
    // in other case %= will fail.
    n = len > 2000 ? 2000 : len;
    len -= n;

    do {
      s1 = (s1 + buf[pos++]) |0;
      s2 = (s2 + s1) |0;
    } while (--n);

    s1 %= 65521;
    s2 %= 65521;
  }

  return (s1 | (s2 << 16)) |0;
};


module.exports = adler32;


/***/ }),

/***/ "../../node_modules/pako/lib/zlib/constants.js":
/*!*****************************************************!*\
  !*** ../../node_modules/pako/lib/zlib/constants.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

module.exports = {

  /* Allowed flush values; see deflate() and inflate() below for details */
  Z_NO_FLUSH:         0,
  Z_PARTIAL_FLUSH:    1,
  Z_SYNC_FLUSH:       2,
  Z_FULL_FLUSH:       3,
  Z_FINISH:           4,
  Z_BLOCK:            5,
  Z_TREES:            6,

  /* Return codes for the compression/decompression functions. Negative values
  * are errors, positive values are used for special but normal events.
  */
  Z_OK:               0,
  Z_STREAM_END:       1,
  Z_NEED_DICT:        2,
  Z_ERRNO:           -1,
  Z_STREAM_ERROR:    -2,
  Z_DATA_ERROR:      -3,
  Z_MEM_ERROR:       -4,
  Z_BUF_ERROR:       -5,
  //Z_VERSION_ERROR: -6,

  /* compression levels */
  Z_NO_COMPRESSION:         0,
  Z_BEST_SPEED:             1,
  Z_BEST_COMPRESSION:       9,
  Z_DEFAULT_COMPRESSION:   -1,


  Z_FILTERED:               1,
  Z_HUFFMAN_ONLY:           2,
  Z_RLE:                    3,
  Z_FIXED:                  4,
  Z_DEFAULT_STRATEGY:       0,

  /* Possible values of the data_type field (though see inflate()) */
  Z_BINARY:                 0,
  Z_TEXT:                   1,
  //Z_ASCII:                1, // = Z_TEXT (deprecated)
  Z_UNKNOWN:                2,

  /* The deflate compression method */
  Z_DEFLATED:               8
  //Z_NULL:                 null // Use -1 or null inline, depending on var type
};


/***/ }),

/***/ "../../node_modules/pako/lib/zlib/crc32.js":
/*!*************************************************!*\
  !*** ../../node_modules/pako/lib/zlib/crc32.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";


// Note: we can't get significant speed boost here.
// So write code to minimize size - no pregenerated tables
// and array tools dependencies.

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

// Use ordinary array, since untyped makes no boost here
const makeTable = () => {
  let c, table = [];

  for (var n = 0; n < 256; n++) {
    c = n;
    for (var k = 0; k < 8; k++) {
      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));
    }
    table[n] = c;
  }

  return table;
};

// Create table on load. Just 255 signed longs. Not a problem.
const crcTable = new Uint32Array(makeTable());


const crc32 = (crc, buf, len, pos) => {
  const t = crcTable;
  const end = pos + len;

  crc ^= -1;

  for (let i = pos; i < end; i++) {
    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];
  }

  return (crc ^ (-1)); // >>> 0;
};


module.exports = crc32;


/***/ }),

/***/ "../../node_modules/pako/lib/zlib/deflate.js":
/*!***************************************************!*\
  !*** ../../node_modules/pako/lib/zlib/deflate.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

const { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = __webpack_require__(/*! ./trees */ "../../node_modules/pako/lib/zlib/trees.js");
const adler32 = __webpack_require__(/*! ./adler32 */ "../../node_modules/pako/lib/zlib/adler32.js");
const crc32   = __webpack_require__(/*! ./crc32 */ "../../node_modules/pako/lib/zlib/crc32.js");
const msg     = __webpack_require__(/*! ./messages */ "../../node_modules/pako/lib/zlib/messages.js");

/* Public constants ==========================================================*/
/* ===========================================================================*/

const {
  Z_NO_FLUSH, Z_PARTIAL_FLUSH, Z_FULL_FLUSH, Z_FINISH, Z_BLOCK,
  Z_OK, Z_STREAM_END, Z_STREAM_ERROR, Z_DATA_ERROR, Z_BUF_ERROR,
  Z_DEFAULT_COMPRESSION,
  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY,
  Z_UNKNOWN,
  Z_DEFLATED
} = __webpack_require__(/*! ./constants */ "../../node_modules/pako/lib/zlib/constants.js");

/*============================================================================*/


const MAX_MEM_LEVEL = 9;
/* Maximum value for memLevel in deflateInit2 */
const MAX_WBITS = 15;
/* 32K LZ77 window */
const DEF_MEM_LEVEL = 8;


const LENGTH_CODES  = 29;
/* number of length codes, not counting the special END_BLOCK code */
const LITERALS      = 256;
/* number of literal bytes 0..255 */
const L_CODES       = LITERALS + 1 + LENGTH_CODES;
/* number of Literal or Length codes, including the END_BLOCK code */
const D_CODES       = 30;
/* number of distance codes */
const BL_CODES      = 19;
/* number of codes used to transfer the bit lengths */
const HEAP_SIZE     = 2 * L_CODES + 1;
/* maximum heap size */
const MAX_BITS  = 15;
/* All codes must not exceed MAX_BITS bits */

const MIN_MATCH = 3;
const MAX_MATCH = 258;
const MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);

const PRESET_DICT = 0x20;

const INIT_STATE = 42;
const EXTRA_STATE = 69;
const NAME_STATE = 73;
const COMMENT_STATE = 91;
const HCRC_STATE = 103;
const BUSY_STATE = 113;
const FINISH_STATE = 666;

const BS_NEED_MORE      = 1; /* block not completed, need more input or more output */
const BS_BLOCK_DONE     = 2; /* block flush performed */
const BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */
const BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */

const OS_CODE = 0x03; // Unix :) . Don't detect, use this default.

const err = (strm, errorCode) => {
  strm.msg = msg[errorCode];
  return errorCode;
};

const rank = (f) => {
  return ((f) << 1) - ((f) > 4 ? 9 : 0);
};

const zero = (buf) => {
  let len = buf.length; while (--len >= 0) { buf[len] = 0; }
};


/* eslint-disable new-cap */
let HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;
// This hash causes less collisions, https://github.com/nodeca/pako/issues/135
// But breaks binary compatibility
//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;
let HASH = HASH_ZLIB;

/* =========================================================================
 * Flush as much pending output as possible. All deflate() output goes
 * through this function so some applications may wish to modify it
 * to avoid allocating a large strm->output buffer and copying into it.
 * (See also read_buf()).
 */
const flush_pending = (strm) => {
  const s = strm.state;

  //_tr_flush_bits(s);
  let len = s.pending;
  if (len > strm.avail_out) {
    len = strm.avail_out;
  }
  if (len === 0) { return; }

  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);
  strm.next_out += len;
  s.pending_out += len;
  strm.total_out += len;
  strm.avail_out -= len;
  s.pending -= len;
  if (s.pending === 0) {
    s.pending_out = 0;
  }
};


const flush_block_only = (s, last) => {
  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);
  s.block_start = s.strstart;
  flush_pending(s.strm);
};


const put_byte = (s, b) => {
  s.pending_buf[s.pending++] = b;
};


/* =========================================================================
 * Put a short in the pending buffer. The 16-bit value is put in MSB order.
 * IN assertion: the stream state is correct and there is enough room in
 * pending_buf.
 */
const putShortMSB = (s, b) => {

  //  put_byte(s, (Byte)(b >> 8));
//  put_byte(s, (Byte)(b & 0xff));
  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;
  s.pending_buf[s.pending++] = b & 0xff;
};


/* ===========================================================================
 * Read a new buffer from the current input stream, update the adler32
 * and total number of bytes read.  All deflate() input goes through
 * this function so some applications may wish to modify it to avoid
 * allocating a large strm->input buffer and copying from it.
 * (See also flush_pending()).
 */
const read_buf = (strm, buf, start, size) => {

  let len = strm.avail_in;

  if (len > size) { len = size; }
  if (len === 0) { return 0; }

  strm.avail_in -= len;

  // zmemcpy(buf, strm->next_in, len);
  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);
  if (strm.state.wrap === 1) {
    strm.adler = adler32(strm.adler, buf, len, start);
  }

  else if (strm.state.wrap === 2) {
    strm.adler = crc32(strm.adler, buf, len, start);
  }

  strm.next_in += len;
  strm.total_in += len;

  return len;
};


/* ===========================================================================
 * Set match_start to the longest match starting at the given string and
 * return its length. Matches shorter or equal to prev_length are discarded,
 * in which case the result is equal to prev_length and match_start is
 * garbage.
 * IN assertions: cur_match is the head of the hash chain for the current
 *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1
 * OUT assertion: the match length is not greater than s->lookahead.
 */
const longest_match = (s, cur_match) => {

  let chain_length = s.max_chain_length;      /* max hash chain length */
  let scan = s.strstart; /* current string */
  let match;                       /* matched string */
  let len;                           /* length of current match */
  let best_len = s.prev_length;              /* best match length so far */
  let nice_match = s.nice_match;             /* stop if match long enough */
  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?
      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;

  const _win = s.window; // shortcut

  const wmask = s.w_mask;
  const prev  = s.prev;

  /* Stop when cur_match becomes <= limit. To simplify the code,
   * we prevent matches with the string of window index 0.
   */

  const strend = s.strstart + MAX_MATCH;
  let scan_end1  = _win[scan + best_len - 1];
  let scan_end   = _win[scan + best_len];

  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.
   * It is easy to get rid of this optimization if necessary.
   */
  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");

  /* Do not waste too much time if we already have a good match: */
  if (s.prev_length >= s.good_match) {
    chain_length >>= 2;
  }
  /* Do not look for matches beyond the end of the input. This is necessary
   * to make deflate deterministic.
   */
  if (nice_match > s.lookahead) { nice_match = s.lookahead; }

  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");

  do {
    // Assert(cur_match < s->strstart, "no future");
    match = cur_match;

    /* Skip to next match if the match length cannot increase
     * or if the match length is less than 2.  Note that the checks below
     * for insufficient lookahead only occur occasionally for performance
     * reasons.  Therefore uninitialized memory will be accessed, and
     * conditional jumps will be made that depend on those values.
     * However the length of the match is limited to the lookahead, so
     * the output of deflate is not affected by the uninitialized values.
     */

    if (_win[match + best_len]     !== scan_end  ||
        _win[match + best_len - 1] !== scan_end1 ||
        _win[match]                !== _win[scan] ||
        _win[++match]              !== _win[scan + 1]) {
      continue;
    }

    /* The check at best_len-1 can be removed because it will be made
     * again later. (This heuristic is not always a win.)
     * It is not necessary to compare scan[2] and match[2] since they
     * are always equal when the other bytes match, given that
     * the hash keys are equal and that HASH_BITS >= 8.
     */
    scan += 2;
    match++;
    // Assert(*scan == *match, "match[2]?");

    /* We check for insufficient lookahead only every 8th comparison;
     * the 256th check will be made at strstart+258.
     */
    do {
      /*jshint noempty:false*/
    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             scan < strend);

    // Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");

    len = MAX_MATCH - (strend - scan);
    scan = strend - MAX_MATCH;

    if (len > best_len) {
      s.match_start = cur_match;
      best_len = len;
      if (len >= nice_match) {
        break;
      }
      scan_end1  = _win[scan + best_len - 1];
      scan_end   = _win[scan + best_len];
    }
  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);

  if (best_len <= s.lookahead) {
    return best_len;
  }
  return s.lookahead;
};


/* ===========================================================================
 * Fill the window when the lookahead becomes insufficient.
 * Updates strstart and lookahead.
 *
 * IN assertion: lookahead < MIN_LOOKAHEAD
 * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD
 *    At least one byte has been read, or avail_in == 0; reads are
 *    performed for at least two bytes (required for the zip translate_eol
 *    option -- not supported here).
 */
const fill_window = (s) => {

  const _w_size = s.w_size;
  let p, n, m, more, str;

  //Assert(s->lookahead < MIN_LOOKAHEAD, "already enough lookahead");

  do {
    more = s.window_size - s.lookahead - s.strstart;

    // JS ints have 32 bit, block below not needed
    /* Deal with !@#$% 64K limit: */
    //if (sizeof(int) <= 2) {
    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {
    //        more = wsize;
    //
    //  } else if (more == (unsigned)(-1)) {
    //        /* Very unlikely, but possible on 16 bit machine if
    //         * strstart == 0 && lookahead == 1 (input done a byte at time)
    //         */
    //        more--;
    //    }
    //}


    /* If the window is almost full and there is insufficient lookahead,
     * move the upper half to the lower one to make room in the upper half.
     */
    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {

      s.window.set(s.window.subarray(_w_size, _w_size + _w_size), 0);
      s.match_start -= _w_size;
      s.strstart -= _w_size;
      /* we now have strstart >= MAX_DIST */
      s.block_start -= _w_size;

      /* Slide the hash table (could be avoided with 32 bit values
       at the expense of memory usage). We slide even when level == 0
       to keep the hash table consistent if we switch back to level > 0
       later. (Using level 0 permanently is not an optimal usage of
       zlib, so we don't care about this pathological case.)
       */

      n = s.hash_size;
      p = n;

      do {
        m = s.head[--p];
        s.head[p] = (m >= _w_size ? m - _w_size : 0);
      } while (--n);

      n = _w_size;
      p = n;

      do {
        m = s.prev[--p];
        s.prev[p] = (m >= _w_size ? m - _w_size : 0);
        /* If n is not on any hash chain, prev[n] is garbage but
         * its value will never be used.
         */
      } while (--n);

      more += _w_size;
    }
    if (s.strm.avail_in === 0) {
      break;
    }

    /* If there was no sliding:
     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&
     *    more == window_size - lookahead - strstart
     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)
     * => more >= window_size - 2*WSIZE + 2
     * In the BIG_MEM or MMAP case (not yet supported),
     *   window_size == input_size + MIN_LOOKAHEAD  &&
     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.
     * Otherwise, window_size == 2*WSIZE so more >= 2.
     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.
     */
    //Assert(more >= 2, "more < 2");
    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);
    s.lookahead += n;

    /* Initialize the hash value now that we have some input: */
    if (s.lookahead + s.insert >= MIN_MATCH) {
      str = s.strstart - s.insert;
      s.ins_h = s.window[str];

      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */
      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);
//#if MIN_MATCH != 3
//        Call update_hash() MIN_MATCH-3 more times
//#endif
      while (s.insert) {
        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);

        s.prev[str & s.w_mask] = s.head[s.ins_h];
        s.head[s.ins_h] = str;
        str++;
        s.insert--;
        if (s.lookahead + s.insert < MIN_MATCH) {
          break;
        }
      }
    }
    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,
     * but this is not important since only literal bytes will be emitted.
     */

  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);

  /* If the WIN_INIT bytes after the end of the current data have never been
   * written, then zero those bytes in order to avoid memory check reports of
   * the use of uninitialized (or uninitialised as Julian writes) bytes by
   * the longest match routines.  Update the high water mark for the next
   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match
   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.
   */
//  if (s.high_water < s.window_size) {
//    const curr = s.strstart + s.lookahead;
//    let init = 0;
//
//    if (s.high_water < curr) {
//      /* Previous high water mark below current data -- zero WIN_INIT
//       * bytes or up to end of window, whichever is less.
//       */
//      init = s.window_size - curr;
//      if (init > WIN_INIT)
//        init = WIN_INIT;
//      zmemzero(s->window + curr, (unsigned)init);
//      s->high_water = curr + init;
//    }
//    else if (s->high_water < (ulg)curr + WIN_INIT) {
//      /* High water mark at or above current data, but below current data
//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up
//       * to end of window, whichever is less.
//       */
//      init = (ulg)curr + WIN_INIT - s->high_water;
//      if (init > s->window_size - s->high_water)
//        init = s->window_size - s->high_water;
//      zmemzero(s->window + s->high_water, (unsigned)init);
//      s->high_water += init;
//    }
//  }
//
//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,
//    "not enough room for search");
};

/* ===========================================================================
 * Copy without compression as much as possible from the input stream, return
 * the current block state.
 * This function does not insert new strings in the dictionary since
 * uncompressible data is probably not useful. This function is used
 * only for the level=0 compression option.
 * NOTE: this function should be optimized to avoid extra copying from
 * window to pending_buf.
 */
const deflate_stored = (s, flush) => {

  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited
   * to pending_buf_size, and each stored block has a 5 byte header:
   */
  let max_block_size = 0xffff;

  if (max_block_size > s.pending_buf_size - 5) {
    max_block_size = s.pending_buf_size - 5;
  }

  /* Copy as much as possible from input to output: */
  for (;;) {
    /* Fill the window as much as possible: */
    if (s.lookahead <= 1) {

      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||
      //  s->block_start >= (long)s->w_size, "slide too late");
//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||
//        s.block_start >= s.w_size)) {
//        throw  new Error("slide too late");
//      }

      fill_window(s);
      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }

      if (s.lookahead === 0) {
        break;
      }
      /* flush the current block */
    }
    //Assert(s->block_start >= 0L, "block gone");
//    if (s.block_start < 0) throw new Error("block gone");

    s.strstart += s.lookahead;
    s.lookahead = 0;

    /* Emit a stored block if pending_buf will be full: */
    const max_start = s.block_start + max_block_size;

    if (s.strstart === 0 || s.strstart >= max_start) {
      /* strstart == 0 is possible when wraparound on 16-bit machine */
      s.lookahead = s.strstart - max_start;
      s.strstart = max_start;
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/


    }
    /* Flush if we may have to slide, otherwise block_start may become
     * negative and the data will be gone:
     */
    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }

  s.insert = 0;

  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }

  if (s.strstart > s.block_start) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }

  return BS_NEED_MORE;
};

/* ===========================================================================
 * Compress as much as possible from the input stream, return the current
 * block state.
 * This function does not perform lazy evaluation of matches and inserts
 * new strings in the dictionary only for unmatched strings or for short
 * matches. It is used only for the fast compression options.
 */
const deflate_fast = (s, flush) => {

  let hash_head;        /* head of the hash chain */
  let bflush;           /* set if current block must be flushed */

  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) {
        break; /* flush the current block */
      }
    }

    /* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */
    hash_head = 0/*NIL*/;
    if (s.lookahead >= MIN_MATCH) {
      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
      /***/
    }

    /* Find the longest match, discarding those <= prev_length.
     * At this point we have always match_length < MIN_MATCH
     */
    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {
      /* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */
      s.match_length = longest_match(s, hash_head);
      /* longest_match() sets match_start */
    }
    if (s.match_length >= MIN_MATCH) {
      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only

      /*** _tr_tally_dist(s, s.strstart - s.match_start,
                     s.match_length - MIN_MATCH, bflush); ***/
      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);

      s.lookahead -= s.match_length;

      /* Insert new strings in the hash table only if the match length
       * is not too large. This saves time but degrades compression.
       */
      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {
        s.match_length--; /* string at strstart already in table */
        do {
          s.strstart++;
          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
          /***/
          /* strstart never exceeds WSIZE-MAX_MATCH, so there are
           * always MIN_MATCH bytes ahead.
           */
        } while (--s.match_length !== 0);
        s.strstart++;
      } else
      {
        s.strstart += s.match_length;
        s.match_length = 0;
        s.ins_h = s.window[s.strstart];
        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */
        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);

//#if MIN_MATCH != 3
//                Call UPDATE_HASH() MIN_MATCH-3 more times
//#endif
        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not
         * matter since it will be recomputed at next deflate call.
         */
      }
    } else {
      /* No match, output a literal byte */
      //Tracevv((stderr,"%c", s.window[s.strstart]));
      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
      bflush = _tr_tally(s, 0, s.window[s.strstart]);

      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
};

/* ===========================================================================
 * Same as above, but achieves better compression. We use a lazy
 * evaluation for matches: a match is finally adopted only if there is
 * no better match at the next window position.
 */
const deflate_slow = (s, flush) => {

  let hash_head;          /* head of hash chain */
  let bflush;              /* set if current block must be flushed */

  let max_insert;

  /* Process the input block. */
  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) { break; } /* flush the current block */
    }

    /* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */
    hash_head = 0/*NIL*/;
    if (s.lookahead >= MIN_MATCH) {
      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
      /***/
    }

    /* Find the longest match, discarding those <= prev_length.
     */
    s.prev_length = s.match_length;
    s.prev_match = s.match_start;
    s.match_length = MIN_MATCH - 1;

    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&
        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {
      /* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */
      s.match_length = longest_match(s, hash_head);
      /* longest_match() sets match_start */

      if (s.match_length <= 5 &&
         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {

        /* If prev_match is also MIN_MATCH, match_start is garbage
         * but we will ignore the current match anyway.
         */
        s.match_length = MIN_MATCH - 1;
      }
    }
    /* If there was a match at the previous step and the current
     * match is not better, output the previous match:
     */
    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {
      max_insert = s.strstart + s.lookahead - MIN_MATCH;
      /* Do not insert strings in hash table beyond this. */

      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);

      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,
                     s.prev_length - MIN_MATCH, bflush);***/
      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);
      /* Insert in hash table all strings up to the end of the match.
       * strstart-1 and strstart are already inserted. If there is not
       * enough lookahead, the last two strings are not inserted in
       * the hash table.
       */
      s.lookahead -= s.prev_length - 1;
      s.prev_length -= 2;
      do {
        if (++s.strstart <= max_insert) {
          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
          /***/
        }
      } while (--s.prev_length !== 0);
      s.match_available = 0;
      s.match_length = MIN_MATCH - 1;
      s.strstart++;

      if (bflush) {
        /*** FLUSH_BLOCK(s, 0); ***/
        flush_block_only(s, false);
        if (s.strm.avail_out === 0) {
          return BS_NEED_MORE;
        }
        /***/
      }

    } else if (s.match_available) {
      /* If there was no match at the previous position, output a
       * single literal. If there was a match but the current match
       * is longer, truncate the previous match to a single literal.
       */
      //Tracevv((stderr,"%c", s->window[s->strstart-1]));
      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);

      if (bflush) {
        /*** FLUSH_BLOCK_ONLY(s, 0) ***/
        flush_block_only(s, false);
        /***/
      }
      s.strstart++;
      s.lookahead--;
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
    } else {
      /* There is no previous match to compare with, wait for
       * the next step to decide.
       */
      s.match_available = 1;
      s.strstart++;
      s.lookahead--;
    }
  }
  //Assert (flush != Z_NO_FLUSH, "no flush?");
  if (s.match_available) {
    //Tracevv((stderr,"%c", s->window[s->strstart-1]));
    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);

    s.match_available = 0;
  }
  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }

  return BS_BLOCK_DONE;
};


/* ===========================================================================
 * For Z_RLE, simply look for runs of bytes, generate matches only of distance
 * one.  Do not maintain a hash table.  (It will be regenerated if this run of
 * deflate switches away from Z_RLE.)
 */
const deflate_rle = (s, flush) => {

  let bflush;            /* set if current block must be flushed */
  let prev;              /* byte at distance one to match */
  let scan, strend;      /* scan goes up to strend for length of run */

  const _win = s.window;

  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the longest run, plus one for the unrolled loop.
     */
    if (s.lookahead <= MAX_MATCH) {
      fill_window(s);
      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) { break; } /* flush the current block */
    }

    /* See how many times the previous byte repeats */
    s.match_length = 0;
    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {
      scan = s.strstart - 1;
      prev = _win[scan];
      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {
        strend = s.strstart + MAX_MATCH;
        do {
          /*jshint noempty:false*/
        } while (prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 scan < strend);
        s.match_length = MAX_MATCH - (strend - scan);
        if (s.match_length > s.lookahead) {
          s.match_length = s.lookahead;
        }
      }
      //Assert(scan <= s->window+(uInt)(s->window_size-1), "wild scan");
    }

    /* Emit match if have run of MIN_MATCH or longer, else emit literal */
    if (s.match_length >= MIN_MATCH) {
      //check_match(s, s.strstart, s.strstart - 1, s.match_length);

      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/
      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);

      s.lookahead -= s.match_length;
      s.strstart += s.match_length;
      s.match_length = 0;
    } else {
      /* No match, output a literal byte */
      //Tracevv((stderr,"%c", s->window[s->strstart]));
      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
      bflush = _tr_tally(s, 0, s.window[s.strstart]);

      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
};

/* ===========================================================================
 * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.
 * (It will be regenerated if this run of deflate switches away from Huffman.)
 */
const deflate_huff = (s, flush) => {

  let bflush;             /* set if current block must be flushed */

  for (;;) {
    /* Make sure that we have a literal to write. */
    if (s.lookahead === 0) {
      fill_window(s);
      if (s.lookahead === 0) {
        if (flush === Z_NO_FLUSH) {
          return BS_NEED_MORE;
        }
        break;      /* flush the current block */
      }
    }

    /* Output a literal byte */
    s.match_length = 0;
    //Tracevv((stderr,"%c", s->window[s->strstart]));
    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
    bflush = _tr_tally(s, 0, s.window[s.strstart]);
    s.lookahead--;
    s.strstart++;
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
};

/* Values for max_lazy_match, good_match and max_chain_length, depending on
 * the desired pack level (0..9). The values given below have been tuned to
 * exclude worst case performance for pathological files. Better values may be
 * found for specific files.
 */
function Config(good_length, max_lazy, nice_length, max_chain, func) {

  this.good_length = good_length;
  this.max_lazy = max_lazy;
  this.nice_length = nice_length;
  this.max_chain = max_chain;
  this.func = func;
}

const configuration_table = [
  /*      good lazy nice chain */
  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */
  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */
  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */
  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */

  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */
  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */
  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */
  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */
  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */
  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */
];


/* ===========================================================================
 * Initialize the "longest match" routines for a new zlib stream
 */
const lm_init = (s) => {

  s.window_size = 2 * s.w_size;

  /*** CLEAR_HASH(s); ***/
  zero(s.head); // Fill with NIL (= 0);

  /* Set the default configuration parameters:
   */
  s.max_lazy_match = configuration_table[s.level].max_lazy;
  s.good_match = configuration_table[s.level].good_length;
  s.nice_match = configuration_table[s.level].nice_length;
  s.max_chain_length = configuration_table[s.level].max_chain;

  s.strstart = 0;
  s.block_start = 0;
  s.lookahead = 0;
  s.insert = 0;
  s.match_length = s.prev_length = MIN_MATCH - 1;
  s.match_available = 0;
  s.ins_h = 0;
};


function DeflateState() {
  this.strm = null;            /* pointer back to this zlib stream */
  this.status = 0;            /* as the name implies */
  this.pending_buf = null;      /* output still pending */
  this.pending_buf_size = 0;  /* size of pending_buf */
  this.pending_out = 0;       /* next pending byte to output to the stream */
  this.pending = 0;           /* nb of bytes in the pending buffer */
  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
  this.gzhead = null;         /* gzip header information to write */
  this.gzindex = 0;           /* where in extra, name, or comment */
  this.method = Z_DEFLATED; /* can only be DEFLATED */
  this.last_flush = -1;   /* value of flush param for previous deflate call */

  this.w_size = 0;  /* LZ77 window size (32K by default) */
  this.w_bits = 0;  /* log2(w_size)  (8..16) */
  this.w_mask = 0;  /* w_size - 1 */

  this.window = null;
  /* Sliding window. Input bytes are read into the second half of the window,
   * and move to the first half later to keep a dictionary of at least wSize
   * bytes. With this organization, matches are limited to a distance of
   * wSize-MAX_MATCH bytes, but this ensures that IO is always
   * performed with a length multiple of the block size.
   */

  this.window_size = 0;
  /* Actual size of window: 2*wSize, except when the user input buffer
   * is directly used as sliding window.
   */

  this.prev = null;
  /* Link to older string with same hash index. To limit the size of this
   * array to 64K, this link is maintained only for the last 32K strings.
   * An index in this array is thus a window index modulo 32K.
   */

  this.head = null;   /* Heads of the hash chains or NIL. */

  this.ins_h = 0;       /* hash index of string to be inserted */
  this.hash_size = 0;   /* number of elements in hash table */
  this.hash_bits = 0;   /* log2(hash_size) */
  this.hash_mask = 0;   /* hash_size-1 */

  this.hash_shift = 0;
  /* Number of bits by which ins_h must be shifted at each input
   * step. It must be such that after MIN_MATCH steps, the oldest
   * byte no longer takes part in the hash key, that is:
   *   hash_shift * MIN_MATCH >= hash_bits
   */

  this.block_start = 0;
  /* Window position at the beginning of the current output block. Gets
   * negative when the window is moved backwards.
   */

  this.match_length = 0;      /* length of best match */
  this.prev_match = 0;        /* previous match */
  this.match_available = 0;   /* set if previous match exists */
  this.strstart = 0;          /* start of string to insert */
  this.match_start = 0;       /* start of matching string */
  this.lookahead = 0;         /* number of valid bytes ahead in window */

  this.prev_length = 0;
  /* Length of the best match at previous step. Matches not greater than this
   * are discarded. This is used in the lazy match evaluation.
   */

  this.max_chain_length = 0;
  /* To speed up deflation, hash chains are never searched beyond this
   * length.  A higher limit improves compression ratio but degrades the
   * speed.
   */

  this.max_lazy_match = 0;
  /* Attempt to find a better match only when the current match is strictly
   * smaller than this value. This mechanism is used only for compression
   * levels >= 4.
   */
  // That's alias to max_lazy_match, don't use directly
  //this.max_insert_length = 0;
  /* Insert new strings in the hash table only if the match length is not
   * greater than this length. This saves time but degrades compression.
   * max_insert_length is used only for compression levels <= 3.
   */

  this.level = 0;     /* compression level (1..9) */
  this.strategy = 0;  /* favor or force Huffman coding*/

  this.good_match = 0;
  /* Use a faster search when the previous match is longer than this */

  this.nice_match = 0; /* Stop searching when current match exceeds this */

              /* used by trees.c: */

  /* Didn't use ct_data typedef below to suppress compiler warning */

  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */
  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */
  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */

  // Use flat array of DOUBLE size, with interleaved fata,
  // because JS does not support effective
  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);
  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);
  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);
  zero(this.dyn_ltree);
  zero(this.dyn_dtree);
  zero(this.bl_tree);

  this.l_desc   = null;         /* desc. for literal tree */
  this.d_desc   = null;         /* desc. for distance tree */
  this.bl_desc  = null;         /* desc. for bit length tree */

  //ush bl_count[MAX_BITS+1];
  this.bl_count = new Uint16Array(MAX_BITS + 1);
  /* number of codes at each bit length for an optimal tree */

  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */
  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */
  zero(this.heap);

  this.heap_len = 0;               /* number of elements in the heap */
  this.heap_max = 0;               /* element of largest frequency */
  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.
   * The same heap array is used to build all trees.
   */

  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];
  zero(this.depth);
  /* Depth of each subtree used as tie breaker for trees of equal frequency
   */

  this.l_buf = 0;          /* buffer index for literals or lengths */

  this.lit_bufsize = 0;
  /* Size of match buffer for literals/lengths.  There are 4 reasons for
   * limiting lit_bufsize to 64K:
   *   - frequencies can be kept in 16 bit counters
   *   - if compression is not successful for the first block, all input
   *     data is still in the window so we can still emit a stored block even
   *     when input comes from standard input.  (This can also be done for
   *     all blocks if lit_bufsize is not greater than 32K.)
   *   - if compression is not successful for a file smaller than 64K, we can
   *     even emit a stored file instead of a stored block (saving 5 bytes).
   *     This is applicable only for zip (not gzip or zlib).
   *   - creating new Huffman trees less frequently may not provide fast
   *     adaptation to changes in the input data statistics. (Take for
   *     example a binary file with poorly compressible code followed by
   *     a highly compressible string table.) Smaller buffer sizes give
   *     fast adaptation but have of course the overhead of transmitting
   *     trees more frequently.
   *   - I can't count above 4
   */

  this.last_lit = 0;      /* running index in l_buf */

  this.d_buf = 0;
  /* Buffer index for distances. To simplify the code, d_buf and l_buf have
   * the same number of elements. To use different lengths, an extra flag
   * array would be necessary.
   */

  this.opt_len = 0;       /* bit length of current block with optimal trees */
  this.static_len = 0;    /* bit length of current block with static trees */
  this.matches = 0;       /* number of string matches in current block */
  this.insert = 0;        /* bytes at end of window left to insert */


  this.bi_buf = 0;
  /* Output buffer. bits are inserted starting at the bottom (least
   * significant bits).
   */
  this.bi_valid = 0;
  /* Number of valid bits in bi_buf.  All bits above the last valid bit
   * are always zero.
   */

  // Used for window memory init. We safely ignore it for JS. That makes
  // sense only for pointers and memory check tools.
  //this.high_water = 0;
  /* High water mark offset in window for initialized bytes -- bytes above
   * this are set to zero in order to avoid memory check warnings when
   * longest match routines access bytes past the input.  This is then
   * updated to the new high water mark.
   */
}


const deflateResetKeep = (strm) => {

  if (!strm || !strm.state) {
    return err(strm, Z_STREAM_ERROR);
  }

  strm.total_in = strm.total_out = 0;
  strm.data_type = Z_UNKNOWN;

  const s = strm.state;
  s.pending = 0;
  s.pending_out = 0;

  if (s.wrap < 0) {
    s.wrap = -s.wrap;
    /* was made negative by deflate(..., Z_FINISH); */
  }
  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);
  strm.adler = (s.wrap === 2) ?
    0  // crc32(0, Z_NULL, 0)
  :
    1; // adler32(0, Z_NULL, 0)
  s.last_flush = Z_NO_FLUSH;
  _tr_init(s);
  return Z_OK;
};


const deflateReset = (strm) => {

  const ret = deflateResetKeep(strm);
  if (ret === Z_OK) {
    lm_init(strm.state);
  }
  return ret;
};


const deflateSetHeader = (strm, head) => {

  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }
  strm.state.gzhead = head;
  return Z_OK;
};


const deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {

  if (!strm) { // === Z_NULL
    return Z_STREAM_ERROR;
  }
  let wrap = 1;

  if (level === Z_DEFAULT_COMPRESSION) {
    level = 6;
  }

  if (windowBits < 0) { /* suppress zlib wrapper */
    wrap = 0;
    windowBits = -windowBits;
  }

  else if (windowBits > 15) {
    wrap = 2;           /* write gzip wrapper instead */
    windowBits -= 16;
  }


  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||
    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||
    strategy < 0 || strategy > Z_FIXED) {
    return err(strm, Z_STREAM_ERROR);
  }


  if (windowBits === 8) {
    windowBits = 9;
  }
  /* until 256-byte window bug fixed */

  const s = new DeflateState();

  strm.state = s;
  s.strm = strm;

  s.wrap = wrap;
  s.gzhead = null;
  s.w_bits = windowBits;
  s.w_size = 1 << s.w_bits;
  s.w_mask = s.w_size - 1;

  s.hash_bits = memLevel + 7;
  s.hash_size = 1 << s.hash_bits;
  s.hash_mask = s.hash_size - 1;
  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);

  s.window = new Uint8Array(s.w_size * 2);
  s.head = new Uint16Array(s.hash_size);
  s.prev = new Uint16Array(s.w_size);

  // Don't need mem init magic for JS.
  //s.high_water = 0;  /* nothing written to s->window yet */

  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */

  s.pending_buf_size = s.lit_bufsize * 4;

  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);
  //s->pending_buf = (uchf *) overlay;
  s.pending_buf = new Uint8Array(s.pending_buf_size);

  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)
  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);
  s.d_buf = 1 * s.lit_bufsize;

  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;
  s.l_buf = (1 + 2) * s.lit_bufsize;

  s.level = level;
  s.strategy = strategy;
  s.method = method;

  return deflateReset(strm);
};

const deflateInit = (strm, level) => {

  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);
};


const deflate = (strm, flush) => {

  let beg, val; // for gzip header write only

  if (!strm || !strm.state ||
    flush > Z_BLOCK || flush < 0) {
    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;
  }

  const s = strm.state;

  if (!strm.output ||
      (!strm.input && strm.avail_in !== 0) ||
      (s.status === FINISH_STATE && flush !== Z_FINISH)) {
    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);
  }

  s.strm = strm; /* just in case */
  const old_flush = s.last_flush;
  s.last_flush = flush;

  /* Write the header */
  if (s.status === INIT_STATE) {

    if (s.wrap === 2) { // GZIP header
      strm.adler = 0;  //crc32(0L, Z_NULL, 0);
      put_byte(s, 31);
      put_byte(s, 139);
      put_byte(s, 8);
      if (!s.gzhead) { // s->gzhead == Z_NULL
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, s.level === 9 ? 2 :
                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
                     4 : 0));
        put_byte(s, OS_CODE);
        s.status = BUSY_STATE;
      }
      else {
        put_byte(s, (s.gzhead.text ? 1 : 0) +
                    (s.gzhead.hcrc ? 2 : 0) +
                    (!s.gzhead.extra ? 0 : 4) +
                    (!s.gzhead.name ? 0 : 8) +
                    (!s.gzhead.comment ? 0 : 16)
        );
        put_byte(s, s.gzhead.time & 0xff);
        put_byte(s, (s.gzhead.time >> 8) & 0xff);
        put_byte(s, (s.gzhead.time >> 16) & 0xff);
        put_byte(s, (s.gzhead.time >> 24) & 0xff);
        put_byte(s, s.level === 9 ? 2 :
                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
                     4 : 0));
        put_byte(s, s.gzhead.os & 0xff);
        if (s.gzhead.extra && s.gzhead.extra.length) {
          put_byte(s, s.gzhead.extra.length & 0xff);
          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);
        }
        if (s.gzhead.hcrc) {
          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);
        }
        s.gzindex = 0;
        s.status = EXTRA_STATE;
      }
    }
    else // DEFLATE header
    {
      let header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;
      let level_flags = -1;

      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {
        level_flags = 0;
      } else if (s.level < 6) {
        level_flags = 1;
      } else if (s.level === 6) {
        level_flags = 2;
      } else {
        level_flags = 3;
      }
      header |= (level_flags << 6);
      if (s.strstart !== 0) { header |= PRESET_DICT; }
      header += 31 - (header % 31);

      s.status = BUSY_STATE;
      putShortMSB(s, header);

      /* Save the adler32 of the preset dictionary: */
      if (s.strstart !== 0) {
        putShortMSB(s, strm.adler >>> 16);
        putShortMSB(s, strm.adler & 0xffff);
      }
      strm.adler = 1; // adler32(0L, Z_NULL, 0);
    }
  }

//#ifdef GZIP
  if (s.status === EXTRA_STATE) {
    if (s.gzhead.extra/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */

      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            break;
          }
        }
        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);
        s.gzindex++;
      }
      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (s.gzindex === s.gzhead.extra.length) {
        s.gzindex = 0;
        s.status = NAME_STATE;
      }
    }
    else {
      s.status = NAME_STATE;
    }
  }
  if (s.status === NAME_STATE) {
    if (s.gzhead.name/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */
      //int val;

      do {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            val = 1;
            break;
          }
        }
        // JS specific: little magic to add zero terminator to end of string
        if (s.gzindex < s.gzhead.name.length) {
          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);

      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (val === 0) {
        s.gzindex = 0;
        s.status = COMMENT_STATE;
      }
    }
    else {
      s.status = COMMENT_STATE;
    }
  }
  if (s.status === COMMENT_STATE) {
    if (s.gzhead.comment/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */
      //int val;

      do {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            val = 1;
            break;
          }
        }
        // JS specific: little magic to add zero terminator to end of string
        if (s.gzindex < s.gzhead.comment.length) {
          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);

      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (val === 0) {
        s.status = HCRC_STATE;
      }
    }
    else {
      s.status = HCRC_STATE;
    }
  }
  if (s.status === HCRC_STATE) {
    if (s.gzhead.hcrc) {
      if (s.pending + 2 > s.pending_buf_size) {
        flush_pending(strm);
      }
      if (s.pending + 2 <= s.pending_buf_size) {
        put_byte(s, strm.adler & 0xff);
        put_byte(s, (strm.adler >> 8) & 0xff);
        strm.adler = 0; //crc32(0L, Z_NULL, 0);
        s.status = BUSY_STATE;
      }
    }
    else {
      s.status = BUSY_STATE;
    }
  }
//#endif

  /* Flush as much pending output as possible */
  if (s.pending !== 0) {
    flush_pending(strm);
    if (strm.avail_out === 0) {
      /* Since avail_out is 0, deflate will be called again with
       * more output space, but possibly with both pending and
       * avail_in equal to zero. There won't be anything to do,
       * but this is not an error situation so make sure we
       * return OK instead of BUF_ERROR at next call of deflate:
       */
      s.last_flush = -1;
      return Z_OK;
    }

    /* Make sure there is something to do and avoid duplicate consecutive
     * flushes. For repeated and useless calls with Z_FINISH, we keep
     * returning Z_STREAM_END instead of Z_BUF_ERROR.
     */
  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&
    flush !== Z_FINISH) {
    return err(strm, Z_BUF_ERROR);
  }

  /* User must not provide more input after the first FINISH: */
  if (s.status === FINISH_STATE && strm.avail_in !== 0) {
    return err(strm, Z_BUF_ERROR);
  }

  /* Start a new block or continue the current one.
   */
  if (strm.avail_in !== 0 || s.lookahead !== 0 ||
    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {
    let bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :
      (s.strategy === Z_RLE ? deflate_rle(s, flush) :
        configuration_table[s.level].func(s, flush));

    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {
      s.status = FINISH_STATE;
    }
    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {
      if (strm.avail_out === 0) {
        s.last_flush = -1;
        /* avoid BUF_ERROR next call, see above */
      }
      return Z_OK;
      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call
       * of deflate should use the same flush parameter to make sure
       * that the flush is complete. So we don't have to output an
       * empty block here, this will be done at next call. This also
       * ensures that for a very small output buffer, we emit at most
       * one empty block.
       */
    }
    if (bstate === BS_BLOCK_DONE) {
      if (flush === Z_PARTIAL_FLUSH) {
        _tr_align(s);
      }
      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */

        _tr_stored_block(s, 0, 0, false);
        /* For a full flush, this empty block will be recognized
         * as a special marker by inflate_sync().
         */
        if (flush === Z_FULL_FLUSH) {
          /*** CLEAR_HASH(s); ***/             /* forget history */
          zero(s.head); // Fill with NIL (= 0);

          if (s.lookahead === 0) {
            s.strstart = 0;
            s.block_start = 0;
            s.insert = 0;
          }
        }
      }
      flush_pending(strm);
      if (strm.avail_out === 0) {
        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */
        return Z_OK;
      }
    }
  }
  //Assert(strm->avail_out > 0, "bug2");
  //if (strm.avail_out <= 0) { throw new Error("bug2");}

  if (flush !== Z_FINISH) { return Z_OK; }
  if (s.wrap <= 0) { return Z_STREAM_END; }

  /* Write the trailer */
  if (s.wrap === 2) {
    put_byte(s, strm.adler & 0xff);
    put_byte(s, (strm.adler >> 8) & 0xff);
    put_byte(s, (strm.adler >> 16) & 0xff);
    put_byte(s, (strm.adler >> 24) & 0xff);
    put_byte(s, strm.total_in & 0xff);
    put_byte(s, (strm.total_in >> 8) & 0xff);
    put_byte(s, (strm.total_in >> 16) & 0xff);
    put_byte(s, (strm.total_in >> 24) & 0xff);
  }
  else
  {
    putShortMSB(s, strm.adler >>> 16);
    putShortMSB(s, strm.adler & 0xffff);
  }

  flush_pending(strm);
  /* If avail_out is zero, the application will call deflate again
   * to flush the rest.
   */
  if (s.wrap > 0) { s.wrap = -s.wrap; }
  /* write the trailer only once! */
  return s.pending !== 0 ? Z_OK : Z_STREAM_END;
};


const deflateEnd = (strm) => {

  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {
    return Z_STREAM_ERROR;
  }

  const status = strm.state.status;
  if (status !== INIT_STATE &&
    status !== EXTRA_STATE &&
    status !== NAME_STATE &&
    status !== COMMENT_STATE &&
    status !== HCRC_STATE &&
    status !== BUSY_STATE &&
    status !== FINISH_STATE
  ) {
    return err(strm, Z_STREAM_ERROR);
  }

  strm.state = null;

  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;
};


/* =========================================================================
 * Initializes the compression dictionary from the given byte
 * sequence without producing any compressed output.
 */
const deflateSetDictionary = (strm, dictionary) => {

  let dictLength = dictionary.length;

  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {
    return Z_STREAM_ERROR;
  }

  const s = strm.state;
  const wrap = s.wrap;

  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {
    return Z_STREAM_ERROR;
  }

  /* when using zlib wrappers, compute Adler-32 for provided dictionary */
  if (wrap === 1) {
    /* adler32(strm->adler, dictionary, dictLength); */
    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);
  }

  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */

  /* if dictionary would fill window, just replace the history */
  if (dictLength >= s.w_size) {
    if (wrap === 0) {            /* already empty otherwise */
      /*** CLEAR_HASH(s); ***/
      zero(s.head); // Fill with NIL (= 0);
      s.strstart = 0;
      s.block_start = 0;
      s.insert = 0;
    }
    /* use the tail */
    // dictionary = dictionary.slice(dictLength - s.w_size);
    let tmpDict = new Uint8Array(s.w_size);
    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);
    dictionary = tmpDict;
    dictLength = s.w_size;
  }
  /* insert dictionary into window and hash */
  const avail = strm.avail_in;
  const next = strm.next_in;
  const input = strm.input;
  strm.avail_in = dictLength;
  strm.next_in = 0;
  strm.input = dictionary;
  fill_window(s);
  while (s.lookahead >= MIN_MATCH) {
    let str = s.strstart;
    let n = s.lookahead - (MIN_MATCH - 1);
    do {
      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);

      s.prev[str & s.w_mask] = s.head[s.ins_h];

      s.head[s.ins_h] = str;
      str++;
    } while (--n);
    s.strstart = str;
    s.lookahead = MIN_MATCH - 1;
    fill_window(s);
  }
  s.strstart += s.lookahead;
  s.block_start = s.strstart;
  s.insert = s.lookahead;
  s.lookahead = 0;
  s.match_length = s.prev_length = MIN_MATCH - 1;
  s.match_available = 0;
  strm.next_in = next;
  strm.input = input;
  strm.avail_in = avail;
  s.wrap = wrap;
  return Z_OK;
};


module.exports.deflateInit = deflateInit;
module.exports.deflateInit2 = deflateInit2;
module.exports.deflateReset = deflateReset;
module.exports.deflateResetKeep = deflateResetKeep;
module.exports.deflateSetHeader = deflateSetHeader;
module.exports.deflate = deflate;
module.exports.deflateEnd = deflateEnd;
module.exports.deflateSetDictionary = deflateSetDictionary;
module.exports.deflateInfo = 'pako deflate (from Nodeca project)';

/* Not implemented
module.exports.deflateBound = deflateBound;
module.exports.deflateCopy = deflateCopy;
module.exports.deflateParams = deflateParams;
module.exports.deflatePending = deflatePending;
module.exports.deflatePrime = deflatePrime;
module.exports.deflateTune = deflateTune;
*/


/***/ }),

/***/ "../../node_modules/pako/lib/zlib/gzheader.js":
/*!****************************************************!*\
  !*** ../../node_modules/pako/lib/zlib/gzheader.js ***!
  \****************************************************/
/***/ ((module) => {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

function GZheader() {
  /* true if compressed data believed to be text */
  this.text       = 0;
  /* modification time */
  this.time       = 0;
  /* extra flags (not used when writing a gzip file) */
  this.xflags     = 0;
  /* operating system */
  this.os         = 0;
  /* pointer to extra field or Z_NULL if none */
  this.extra      = null;
  /* extra field length (valid if extra != Z_NULL) */
  this.extra_len  = 0; // Actually, we don't need it in JS,
                       // but leave for few code modifications

  //
  // Setup limits is not necessary because in js we should not preallocate memory
  // for inflate use constant limit in 65536 bytes
  //

  /* space at extra (only when reading header) */
  // this.extra_max  = 0;
  /* pointer to zero-terminated file name or Z_NULL */
  this.name       = '';
  /* space at name (only when reading header) */
  // this.name_max   = 0;
  /* pointer to zero-terminated comment or Z_NULL */
  this.comment    = '';
  /* space at comment (only when reading header) */
  // this.comm_max   = 0;
  /* true if there was or will be a header crc */
  this.hcrc       = 0;
  /* true when done reading gzip header (not used when writing a gzip file) */
  this.done       = false;
}

module.exports = GZheader;


/***/ }),

/***/ "../../node_modules/pako/lib/zlib/inffast.js":
/*!***************************************************!*\
  !*** ../../node_modules/pako/lib/zlib/inffast.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

// See state defs from inflate.js
const BAD = 30;       /* got a data error -- remain here until reset */
const TYPE = 12;      /* i: waiting for type bits, including last-flag bit */

/*
   Decode literal, length, and distance codes and write out the resulting
   literal and match bytes until either not enough input or output is
   available, an end-of-block is encountered, or a data error is encountered.
   When large enough input and output buffers are supplied to inflate(), for
   example, a 16K input buffer and a 64K output buffer, more than 95% of the
   inflate execution time is spent in this routine.

   Entry assumptions:

        state.mode === LEN
        strm.avail_in >= 6
        strm.avail_out >= 258
        start >= strm.avail_out
        state.bits < 8

   On return, state.mode is one of:

        LEN -- ran out of enough output space or enough available input
        TYPE -- reached end of block code, inflate() to interpret next block
        BAD -- error in block data

   Notes:

    - The maximum input bits used by a length/distance pair is 15 bits for the
      length code, 5 bits for the length extra, 15 bits for the distance code,
      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.
      Therefore if strm.avail_in >= 6, then there is enough input to avoid
      checking for available input while decoding.

    - The maximum bytes that a single length/distance pair can output is 258
      bytes, which is the maximum length that can be coded.  inflate_fast()
      requires strm.avail_out >= 258 for each loop to avoid checking for
      output space.
 */
module.exports = function inflate_fast(strm, start) {
  let _in;                    /* local strm.input */
  let last;                   /* have enough input while in < last */
  let _out;                   /* local strm.output */
  let beg;                    /* inflate()'s initial strm.output */
  let end;                    /* while out < end, enough space available */
//#ifdef INFLATE_STRICT
  let dmax;                   /* maximum distance from zlib header */
//#endif
  let wsize;                  /* window size or zero if not using window */
  let whave;                  /* valid bytes in the window */
  let wnext;                  /* window write index */
  // Use `s_window` instead `window`, avoid conflict with instrumentation tools
  let s_window;               /* allocated sliding window, if wsize != 0 */
  let hold;                   /* local strm.hold */
  let bits;                   /* local strm.bits */
  let lcode;                  /* local strm.lencode */
  let dcode;                  /* local strm.distcode */
  let lmask;                  /* mask for first level of length codes */
  let dmask;                  /* mask for first level of distance codes */
  let here;                   /* retrieved table entry */
  let op;                     /* code bits, operation, extra bits, or */
                              /*  window position, window bytes to copy */
  let len;                    /* match length, unused bytes */
  let dist;                   /* match distance */
  let from;                   /* where to copy match from */
  let from_source;


  let input, output; // JS specific, because we have no pointers

  /* copy state to local variables */
  const state = strm.state;
  //here = state.here;
  _in = strm.next_in;
  input = strm.input;
  last = _in + (strm.avail_in - 5);
  _out = strm.next_out;
  output = strm.output;
  beg = _out - (start - strm.avail_out);
  end = _out + (strm.avail_out - 257);
//#ifdef INFLATE_STRICT
  dmax = state.dmax;
//#endif
  wsize = state.wsize;
  whave = state.whave;
  wnext = state.wnext;
  s_window = state.window;
  hold = state.hold;
  bits = state.bits;
  lcode = state.lencode;
  dcode = state.distcode;
  lmask = (1 << state.lenbits) - 1;
  dmask = (1 << state.distbits) - 1;


  /* decode literals and length/distances until end-of-block or not enough
     input data or output space */

  top:
  do {
    if (bits < 15) {
      hold += input[_in++] << bits;
      bits += 8;
      hold += input[_in++] << bits;
      bits += 8;
    }

    here = lcode[hold & lmask];

    dolen:
    for (;;) { // Goto emulation
      op = here >>> 24/*here.bits*/;
      hold >>>= op;
      bits -= op;
      op = (here >>> 16) & 0xff/*here.op*/;
      if (op === 0) {                          /* literal */
        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
        //        "inflate:         literal '%c'\n" :
        //        "inflate:         literal 0x%02x\n", here.val));
        output[_out++] = here & 0xffff/*here.val*/;
      }
      else if (op & 16) {                     /* length base */
        len = here & 0xffff/*here.val*/;
        op &= 15;                           /* number of extra bits */
        if (op) {
          if (bits < op) {
            hold += input[_in++] << bits;
            bits += 8;
          }
          len += hold & ((1 << op) - 1);
          hold >>>= op;
          bits -= op;
        }
        //Tracevv((stderr, "inflate:         length %u\n", len));
        if (bits < 15) {
          hold += input[_in++] << bits;
          bits += 8;
          hold += input[_in++] << bits;
          bits += 8;
        }
        here = dcode[hold & dmask];

        dodist:
        for (;;) { // goto emulation
          op = here >>> 24/*here.bits*/;
          hold >>>= op;
          bits -= op;
          op = (here >>> 16) & 0xff/*here.op*/;

          if (op & 16) {                      /* distance base */
            dist = here & 0xffff/*here.val*/;
            op &= 15;                       /* number of extra bits */
            if (bits < op) {
              hold += input[_in++] << bits;
              bits += 8;
              if (bits < op) {
                hold += input[_in++] << bits;
                bits += 8;
              }
            }
            dist += hold & ((1 << op) - 1);
//#ifdef INFLATE_STRICT
            if (dist > dmax) {
              strm.msg = 'invalid distance too far back';
              state.mode = BAD;
              break top;
            }
//#endif
            hold >>>= op;
            bits -= op;
            //Tracevv((stderr, "inflate:         distance %u\n", dist));
            op = _out - beg;                /* max distance in output */
            if (dist > op) {                /* see if copy from window */
              op = dist - op;               /* distance back in window */
              if (op > whave) {
                if (state.sane) {
                  strm.msg = 'invalid distance too far back';
                  state.mode = BAD;
                  break top;
                }

// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//                if (len <= op - whave) {
//                  do {
//                    output[_out++] = 0;
//                  } while (--len);
//                  continue top;
//                }
//                len -= op - whave;
//                do {
//                  output[_out++] = 0;
//                } while (--op > whave);
//                if (op === 0) {
//                  from = _out - dist;
//                  do {
//                    output[_out++] = output[from++];
//                  } while (--len);
//                  continue top;
//                }
//#endif
              }
              from = 0; // window index
              from_source = s_window;
              if (wnext === 0) {           /* very common case */
                from += wsize - op;
                if (op < len) {         /* some from window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = _out - dist;  /* rest from output */
                  from_source = output;
                }
              }
              else if (wnext < op) {      /* wrap around window */
                from += wsize + wnext - op;
                op -= wnext;
                if (op < len) {         /* some from end of window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = 0;
                  if (wnext < len) {  /* some from start of window */
                    op = wnext;
                    len -= op;
                    do {
                      output[_out++] = s_window[from++];
                    } while (--op);
                    from = _out - dist;      /* rest from output */
                    from_source = output;
                  }
                }
              }
              else {                      /* contiguous in window */
                from += wnext - op;
                if (op < len) {         /* some from window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = _out - dist;  /* rest from output */
                  from_source = output;
                }
              }
              while (len > 2) {
                output[_out++] = from_source[from++];
                output[_out++] = from_source[from++];
                output[_out++] = from_source[from++];
                len -= 3;
              }
              if (len) {
                output[_out++] = from_source[from++];
                if (len > 1) {
                  output[_out++] = from_source[from++];
                }
              }
            }
            else {
              from = _out - dist;          /* copy direct from output */
              do {                        /* minimum length is three */
                output[_out++] = output[from++];
                output[_out++] = output[from++];
                output[_out++] = output[from++];
                len -= 3;
              } while (len > 2);
              if (len) {
                output[_out++] = output[from++];
                if (len > 1) {
                  output[_out++] = output[from++];
                }
              }
            }
          }
          else if ((op & 64) === 0) {          /* 2nd level distance code */
            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
            continue dodist;
          }
          else {
            strm.msg = 'invalid distance code';
            state.mode = BAD;
            break top;
          }

          break; // need to emulate goto via "continue"
        }
      }
      else if ((op & 64) === 0) {              /* 2nd level length code */
        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
        continue dolen;
      }
      else if (op & 32) {                     /* end-of-block */
        //Tracevv((stderr, "inflate:         end of block\n"));
        state.mode = TYPE;
        break top;
      }
      else {
        strm.msg = 'invalid literal/length code';
        state.mode = BAD;
        break top;
      }

      break; // need to emulate goto via "continue"
    }
  } while (_in < last && _out < end);

  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */
  len = bits >> 3;
  _in -= len;
  bits -= len << 3;
  hold &= (1 << bits) - 1;

  /* update state and return */
  strm.next_in = _in;
  strm.next_out = _out;
  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));
  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));
  state.hold = hold;
  state.bits = bits;
  return;
};


/***/ }),

/***/ "../../node_modules/pako/lib/zlib/inflate.js":
/*!***************************************************!*\
  !*** ../../node_modules/pako/lib/zlib/inflate.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

const adler32       = __webpack_require__(/*! ./adler32 */ "../../node_modules/pako/lib/zlib/adler32.js");
const crc32         = __webpack_require__(/*! ./crc32 */ "../../node_modules/pako/lib/zlib/crc32.js");
const inflate_fast  = __webpack_require__(/*! ./inffast */ "../../node_modules/pako/lib/zlib/inffast.js");
const inflate_table = __webpack_require__(/*! ./inftrees */ "../../node_modules/pako/lib/zlib/inftrees.js");

const CODES = 0;
const LENS = 1;
const DISTS = 2;

/* Public constants ==========================================================*/
/* ===========================================================================*/

const {
  Z_FINISH, Z_BLOCK, Z_TREES,
  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR, Z_BUF_ERROR,
  Z_DEFLATED
} = __webpack_require__(/*! ./constants */ "../../node_modules/pako/lib/zlib/constants.js");


/* STATES ====================================================================*/
/* ===========================================================================*/


const    HEAD = 1;       /* i: waiting for magic header */
const    FLAGS = 2;      /* i: waiting for method and flags (gzip) */
const    TIME = 3;       /* i: waiting for modification time (gzip) */
const    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */
const    EXLEN = 5;      /* i: waiting for extra length (gzip) */
const    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */
const    NAME = 7;       /* i: waiting for end of file name (gzip) */
const    COMMENT = 8;    /* i: waiting for end of comment (gzip) */
const    HCRC = 9;       /* i: waiting for header crc (gzip) */
const    DICTID = 10;    /* i: waiting for dictionary check value */
const    DICT = 11;      /* waiting for inflateSetDictionary() call */
const        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */
const        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */
const        STORED = 14;    /* i: waiting for stored size (length and complement) */
const        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */
const        COPY = 16;      /* i/o: waiting for input or output to copy stored block */
const        TABLE = 17;     /* i: waiting for dynamic block table lengths */
const        LENLENS = 18;   /* i: waiting for code length code lengths */
const        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */
const            LEN_ = 20;      /* i: same as LEN below, but only first time in */
const            LEN = 21;       /* i: waiting for length/lit/eob code */
const            LENEXT = 22;    /* i: waiting for length extra bits */
const            DIST = 23;      /* i: waiting for distance code */
const            DISTEXT = 24;   /* i: waiting for distance extra bits */
const            MATCH = 25;     /* o: waiting for output space to copy string */
const            LIT = 26;       /* o: waiting for output space to write literal */
const    CHECK = 27;     /* i: waiting for 32-bit check value */
const    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */
const    DONE = 29;      /* finished check, done -- remain here until reset */
const    BAD = 30;       /* got a data error -- remain here until reset */
const    MEM = 31;       /* got an inflate() memory error -- remain here until reset */
const    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */

/* ===========================================================================*/



const ENOUGH_LENS = 852;
const ENOUGH_DISTS = 592;
//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);

const MAX_WBITS = 15;
/* 32K LZ77 window */
const DEF_WBITS = MAX_WBITS;


const zswap32 = (q) => {

  return  (((q >>> 24) & 0xff) +
          ((q >>> 8) & 0xff00) +
          ((q & 0xff00) << 8) +
          ((q & 0xff) << 24));
};


function InflateState() {
  this.mode = 0;             /* current inflate mode */
  this.last = false;          /* true if processing last block */
  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
  this.havedict = false;      /* true if dictionary provided */
  this.flags = 0;             /* gzip header method and flags (0 if zlib) */
  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */
  this.check = 0;             /* protected copy of check value */
  this.total = 0;             /* protected copy of output count */
  // TODO: may be {}
  this.head = null;           /* where to save gzip header information */

  /* sliding window */
  this.wbits = 0;             /* log base 2 of requested window size */
  this.wsize = 0;             /* window size or zero if not using window */
  this.whave = 0;             /* valid bytes in the window */
  this.wnext = 0;             /* window write index */
  this.window = null;         /* allocated sliding window, if needed */

  /* bit accumulator */
  this.hold = 0;              /* input bit accumulator */
  this.bits = 0;              /* number of bits in "in" */

  /* for string and stored block copying */
  this.length = 0;            /* literal or length of data to copy */
  this.offset = 0;            /* distance back to copy string from */

  /* for table and code decoding */
  this.extra = 0;             /* extra bits needed */

  /* fixed and dynamic code tables */
  this.lencode = null;          /* starting table for length/literal codes */
  this.distcode = null;         /* starting table for distance codes */
  this.lenbits = 0;           /* index bits for lencode */
  this.distbits = 0;          /* index bits for distcode */

  /* dynamic table building */
  this.ncode = 0;             /* number of code length code lengths */
  this.nlen = 0;              /* number of length code lengths */
  this.ndist = 0;             /* number of distance code lengths */
  this.have = 0;              /* number of code lengths in lens[] */
  this.next = null;              /* next available space in codes[] */

  this.lens = new Uint16Array(320); /* temporary storage for code lengths */
  this.work = new Uint16Array(288); /* work area for code table building */

  /*
   because we don't have pointers in js, we use lencode and distcode directly
   as buffers so we don't need codes
  */
  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */
  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */
  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */
  this.sane = 0;                   /* if false, allow invalid distance too far */
  this.back = 0;                   /* bits back of last unprocessed length/lit */
  this.was = 0;                    /* initial length of match */
}


const inflateResetKeep = (strm) => {

  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  const state = strm.state;
  strm.total_in = strm.total_out = state.total = 0;
  strm.msg = ''; /*Z_NULL*/
  if (state.wrap) {       /* to support ill-conceived Java test suite */
    strm.adler = state.wrap & 1;
  }
  state.mode = HEAD;
  state.last = 0;
  state.havedict = 0;
  state.dmax = 32768;
  state.head = null/*Z_NULL*/;
  state.hold = 0;
  state.bits = 0;
  //state.lencode = state.distcode = state.next = state.codes;
  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);
  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);

  state.sane = 1;
  state.back = -1;
  //Tracev((stderr, "inflate: reset\n"));
  return Z_OK;
};


const inflateReset = (strm) => {

  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  const state = strm.state;
  state.wsize = 0;
  state.whave = 0;
  state.wnext = 0;
  return inflateResetKeep(strm);

};


const inflateReset2 = (strm, windowBits) => {
  let wrap;

  /* get the state */
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  const state = strm.state;

  /* extract wrap request from windowBits parameter */
  if (windowBits < 0) {
    wrap = 0;
    windowBits = -windowBits;
  }
  else {
    wrap = (windowBits >> 4) + 1;
    if (windowBits < 48) {
      windowBits &= 15;
    }
  }

  /* set number of window bits, free window if different */
  if (windowBits && (windowBits < 8 || windowBits > 15)) {
    return Z_STREAM_ERROR;
  }
  if (state.window !== null && state.wbits !== windowBits) {
    state.window = null;
  }

  /* update state and reset the rest of it */
  state.wrap = wrap;
  state.wbits = windowBits;
  return inflateReset(strm);
};


const inflateInit2 = (strm, windowBits) => {

  if (!strm) { return Z_STREAM_ERROR; }
  //strm.msg = Z_NULL;                 /* in case we return an error */

  const state = new InflateState();

  //if (state === Z_NULL) return Z_MEM_ERROR;
  //Tracev((stderr, "inflate: allocated\n"));
  strm.state = state;
  state.window = null/*Z_NULL*/;
  const ret = inflateReset2(strm, windowBits);
  if (ret !== Z_OK) {
    strm.state = null/*Z_NULL*/;
  }
  return ret;
};


const inflateInit = (strm) => {

  return inflateInit2(strm, DEF_WBITS);
};


/*
 Return state with length and distance decoding tables and index sizes set to
 fixed code decoding.  Normally this returns fixed tables from inffixed.h.
 If BUILDFIXED is defined, then instead this routine builds the tables the
 first time it's called, and returns those tables the first time and
 thereafter.  This reduces the size of the code by about 2K bytes, in
 exchange for a little execution time.  However, BUILDFIXED should not be
 used for threaded applications, since the rewriting of the tables and virgin
 may not be thread-safe.
 */
let virgin = true;

let lenfix, distfix; // We have no pointers in JS, so keep tables separate


const fixedtables = (state) => {

  /* build fixed huffman tables if first call (may not be thread safe) */
  if (virgin) {
    lenfix = new Int32Array(512);
    distfix = new Int32Array(32);

    /* literal/length table */
    let sym = 0;
    while (sym < 144) { state.lens[sym++] = 8; }
    while (sym < 256) { state.lens[sym++] = 9; }
    while (sym < 280) { state.lens[sym++] = 7; }
    while (sym < 288) { state.lens[sym++] = 8; }

    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });

    /* distance table */
    sym = 0;
    while (sym < 32) { state.lens[sym++] = 5; }

    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });

    /* do this just once */
    virgin = false;
  }

  state.lencode = lenfix;
  state.lenbits = 9;
  state.distcode = distfix;
  state.distbits = 5;
};


/*
 Update the window with the last wsize (normally 32K) bytes written before
 returning.  If window does not exist yet, create it.  This is only called
 when a window is already in use, or when output has been written during this
 inflate call, but the end of the deflate stream has not been reached yet.
 It is also called to create a window for dictionary data when a dictionary
 is loaded.

 Providing output buffers larger than 32K to inflate() should provide a speed
 advantage, since only the last 32K of output is copied to the sliding window
 upon return from inflate(), and since all distances after the first 32K of
 output will fall in the output data, making match copies simpler and faster.
 The advantage may be dependent on the size of the processor's data caches.
 */
const updatewindow = (strm, src, end, copy) => {

  let dist;
  const state = strm.state;

  /* if it hasn't been done already, allocate space for the window */
  if (state.window === null) {
    state.wsize = 1 << state.wbits;
    state.wnext = 0;
    state.whave = 0;

    state.window = new Uint8Array(state.wsize);
  }

  /* copy state->wsize or less output bytes into the circular window */
  if (copy >= state.wsize) {
    state.window.set(src.subarray(end - state.wsize, end), 0);
    state.wnext = 0;
    state.whave = state.wsize;
  }
  else {
    dist = state.wsize - state.wnext;
    if (dist > copy) {
      dist = copy;
    }
    //zmemcpy(state->window + state->wnext, end - copy, dist);
    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);
    copy -= dist;
    if (copy) {
      //zmemcpy(state->window, end - copy, copy);
      state.window.set(src.subarray(end - copy, end), 0);
      state.wnext = copy;
      state.whave = state.wsize;
    }
    else {
      state.wnext += dist;
      if (state.wnext === state.wsize) { state.wnext = 0; }
      if (state.whave < state.wsize) { state.whave += dist; }
    }
  }
  return 0;
};


const inflate = (strm, flush) => {

  let state;
  let input, output;          // input/output buffers
  let next;                   /* next input INDEX */
  let put;                    /* next output INDEX */
  let have, left;             /* available input and output */
  let hold;                   /* bit buffer */
  let bits;                   /* bits in bit buffer */
  let _in, _out;              /* save starting available input and output */
  let copy;                   /* number of stored or match bytes to copy */
  let from;                   /* where to copy match bytes from */
  let from_source;
  let here = 0;               /* current decoding table entry */
  let here_bits, here_op, here_val; // paked "here" denormalized (JS specific)
  //let last;                   /* parent table entry */
  let last_bits, last_op, last_val; // paked "last" denormalized (JS specific)
  let len;                    /* length to copy for repeats, bits to drop */
  let ret;                    /* return code */
  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */
  let opts;

  let n; // temporary variable for NEED_BITS

  const order = /* permutation of code lengths */
    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);


  if (!strm || !strm.state || !strm.output ||
      (!strm.input && strm.avail_in !== 0)) {
    return Z_STREAM_ERROR;
  }

  state = strm.state;
  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */


  //--- LOAD() ---
  put = strm.next_out;
  output = strm.output;
  left = strm.avail_out;
  next = strm.next_in;
  input = strm.input;
  have = strm.avail_in;
  hold = state.hold;
  bits = state.bits;
  //---

  _in = have;
  _out = left;
  ret = Z_OK;

  inf_leave: // goto emulation
  for (;;) {
    switch (state.mode) {
      case HEAD:
        if (state.wrap === 0) {
          state.mode = TYPEDO;
          break;
        }
        //=== NEEDBITS(16);
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */
          state.check = 0/*crc32(0L, Z_NULL, 0)*/;
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//

          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          state.mode = FLAGS;
          break;
        }
        state.flags = 0;           /* expect zlib header */
        if (state.head) {
          state.head.done = false;
        }
        if (!(state.wrap & 1) ||   /* check if zlib header allowed */
          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {
          strm.msg = 'incorrect header check';
          state.mode = BAD;
          break;
        }
        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {
          strm.msg = 'unknown compression method';
          state.mode = BAD;
          break;
        }
        //--- DROPBITS(4) ---//
        hold >>>= 4;
        bits -= 4;
        //---//
        len = (hold & 0x0f)/*BITS(4)*/ + 8;
        if (state.wbits === 0) {
          state.wbits = len;
        }
        else if (len > state.wbits) {
          strm.msg = 'invalid window size';
          state.mode = BAD;
          break;
        }

        // !!! pako patch. Force use `options.windowBits` if passed.
        // Required to always use max window size by default.
        state.dmax = 1 << state.wbits;
        //state.dmax = 1 << len;

        //Tracev((stderr, "inflate:   zlib header ok\n"));
        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
        state.mode = hold & 0x200 ? DICTID : TYPE;
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        break;
      case FLAGS:
        //=== NEEDBITS(16); */
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.flags = hold;
        if ((state.flags & 0xff) !== Z_DEFLATED) {
          strm.msg = 'unknown compression method';
          state.mode = BAD;
          break;
        }
        if (state.flags & 0xe000) {
          strm.msg = 'unknown header flags set';
          state.mode = BAD;
          break;
        }
        if (state.head) {
          state.head.text = ((hold >> 8) & 1);
        }
        if (state.flags & 0x0200) {
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = TIME;
        /* falls through */
      case TIME:
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if (state.head) {
          state.head.time = hold;
        }
        if (state.flags & 0x0200) {
          //=== CRC4(state.check, hold)
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          hbuf[2] = (hold >>> 16) & 0xff;
          hbuf[3] = (hold >>> 24) & 0xff;
          state.check = crc32(state.check, hbuf, 4, 0);
          //===
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = OS;
        /* falls through */
      case OS:
        //=== NEEDBITS(16); */
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if (state.head) {
          state.head.xflags = (hold & 0xff);
          state.head.os = (hold >> 8);
        }
        if (state.flags & 0x0200) {
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = EXLEN;
        /* falls through */
      case EXLEN:
        if (state.flags & 0x0400) {
          //=== NEEDBITS(16); */
          while (bits < 16) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.length = hold;
          if (state.head) {
            state.head.extra_len = hold;
          }
          if (state.flags & 0x0200) {
            //=== CRC2(state.check, hold);
            hbuf[0] = hold & 0xff;
            hbuf[1] = (hold >>> 8) & 0xff;
            state.check = crc32(state.check, hbuf, 2, 0);
            //===//
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
        }
        else if (state.head) {
          state.head.extra = null/*Z_NULL*/;
        }
        state.mode = EXTRA;
        /* falls through */
      case EXTRA:
        if (state.flags & 0x0400) {
          copy = state.length;
          if (copy > have) { copy = have; }
          if (copy) {
            if (state.head) {
              len = state.head.extra_len - state.length;
              if (!state.head.extra) {
                // Use untyped array for more convenient processing later
                state.head.extra = new Uint8Array(state.head.extra_len);
              }
              state.head.extra.set(
                input.subarray(
                  next,
                  // extra field is limited to 65536 bytes
                  // - no need for additional size check
                  next + copy
                ),
                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
                len
              );
              //zmemcpy(state.head.extra + len, next,
              //        len + copy > state.head.extra_max ?
              //        state.head.extra_max - len : copy);
            }
            if (state.flags & 0x0200) {
              state.check = crc32(state.check, input, copy, next);
            }
            have -= copy;
            next += copy;
            state.length -= copy;
          }
          if (state.length) { break inf_leave; }
        }
        state.length = 0;
        state.mode = NAME;
        /* falls through */
      case NAME:
        if (state.flags & 0x0800) {
          if (have === 0) { break inf_leave; }
          copy = 0;
          do {
            // TODO: 2 or 1 bytes?
            len = input[next + copy++];
            /* use constant limit because in js we should not preallocate memory */
            if (state.head && len &&
                (state.length < 65536 /*state.head.name_max*/)) {
              state.head.name += String.fromCharCode(len);
            }
          } while (len && copy < have);

          if (state.flags & 0x0200) {
            state.check = crc32(state.check, input, copy, next);
          }
          have -= copy;
          next += copy;
          if (len) { break inf_leave; }
        }
        else if (state.head) {
          state.head.name = null;
        }
        state.length = 0;
        state.mode = COMMENT;
        /* falls through */
      case COMMENT:
        if (state.flags & 0x1000) {
          if (have === 0) { break inf_leave; }
          copy = 0;
          do {
            len = input[next + copy++];
            /* use constant limit because in js we should not preallocate memory */
            if (state.head && len &&
                (state.length < 65536 /*state.head.comm_max*/)) {
              state.head.comment += String.fromCharCode(len);
            }
          } while (len && copy < have);
          if (state.flags & 0x0200) {
            state.check = crc32(state.check, input, copy, next);
          }
          have -= copy;
          next += copy;
          if (len) { break inf_leave; }
        }
        else if (state.head) {
          state.head.comment = null;
        }
        state.mode = HCRC;
        /* falls through */
      case HCRC:
        if (state.flags & 0x0200) {
          //=== NEEDBITS(16); */
          while (bits < 16) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          if (hold !== (state.check & 0xffff)) {
            strm.msg = 'header crc mismatch';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
        }
        if (state.head) {
          state.head.hcrc = ((state.flags >> 9) & 1);
          state.head.done = true;
        }
        strm.adler = state.check = 0;
        state.mode = TYPE;
        break;
      case DICTID:
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        strm.adler = state.check = zswap32(hold);
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = DICT;
        /* falls through */
      case DICT:
        if (state.havedict === 0) {
          //--- RESTORE() ---
          strm.next_out = put;
          strm.avail_out = left;
          strm.next_in = next;
          strm.avail_in = have;
          state.hold = hold;
          state.bits = bits;
          //---
          return Z_NEED_DICT;
        }
        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
        state.mode = TYPE;
        /* falls through */
      case TYPE:
        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case TYPEDO:
        if (state.last) {
          //--- BYTEBITS() ---//
          hold >>>= bits & 7;
          bits -= bits & 7;
          //---//
          state.mode = CHECK;
          break;
        }
        //=== NEEDBITS(3); */
        while (bits < 3) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.last = (hold & 0x01)/*BITS(1)*/;
        //--- DROPBITS(1) ---//
        hold >>>= 1;
        bits -= 1;
        //---//

        switch ((hold & 0x03)/*BITS(2)*/) {
          case 0:                             /* stored block */
            //Tracev((stderr, "inflate:     stored block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = STORED;
            break;
          case 1:                             /* fixed block */
            fixedtables(state);
            //Tracev((stderr, "inflate:     fixed codes block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = LEN_;             /* decode codes */
            if (flush === Z_TREES) {
              //--- DROPBITS(2) ---//
              hold >>>= 2;
              bits -= 2;
              //---//
              break inf_leave;
            }
            break;
          case 2:                             /* dynamic block */
            //Tracev((stderr, "inflate:     dynamic codes block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = TABLE;
            break;
          case 3:
            strm.msg = 'invalid block type';
            state.mode = BAD;
        }
        //--- DROPBITS(2) ---//
        hold >>>= 2;
        bits -= 2;
        //---//
        break;
      case STORED:
        //--- BYTEBITS() ---// /* go to byte boundary */
        hold >>>= bits & 7;
        bits -= bits & 7;
        //---//
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {
          strm.msg = 'invalid stored block lengths';
          state.mode = BAD;
          break;
        }
        state.length = hold & 0xffff;
        //Tracev((stderr, "inflate:       stored length %u\n",
        //        state.length));
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = COPY_;
        if (flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case COPY_:
        state.mode = COPY;
        /* falls through */
      case COPY:
        copy = state.length;
        if (copy) {
          if (copy > have) { copy = have; }
          if (copy > left) { copy = left; }
          if (copy === 0) { break inf_leave; }
          //--- zmemcpy(put, next, copy); ---
          output.set(input.subarray(next, next + copy), put);
          //---//
          have -= copy;
          next += copy;
          left -= copy;
          put += copy;
          state.length -= copy;
          break;
        }
        //Tracev((stderr, "inflate:       stored end\n"));
        state.mode = TYPE;
        break;
      case TABLE:
        //=== NEEDBITS(14); */
        while (bits < 14) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;
        //--- DROPBITS(5) ---//
        hold >>>= 5;
        bits -= 5;
        //---//
        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;
        //--- DROPBITS(5) ---//
        hold >>>= 5;
        bits -= 5;
        //---//
        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;
        //--- DROPBITS(4) ---//
        hold >>>= 4;
        bits -= 4;
        //---//
//#ifndef PKZIP_BUG_WORKAROUND
        if (state.nlen > 286 || state.ndist > 30) {
          strm.msg = 'too many length or distance symbols';
          state.mode = BAD;
          break;
        }
//#endif
        //Tracev((stderr, "inflate:       table sizes ok\n"));
        state.have = 0;
        state.mode = LENLENS;
        /* falls through */
      case LENLENS:
        while (state.have < state.ncode) {
          //=== NEEDBITS(3);
          while (bits < 3) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);
          //--- DROPBITS(3) ---//
          hold >>>= 3;
          bits -= 3;
          //---//
        }
        while (state.have < 19) {
          state.lens[order[state.have++]] = 0;
        }
        // We have separate tables & no pointers. 2 commented lines below not needed.
        //state.next = state.codes;
        //state.lencode = state.next;
        // Switch to use dynamic table
        state.lencode = state.lendyn;
        state.lenbits = 7;

        opts = { bits: state.lenbits };
        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);
        state.lenbits = opts.bits;

        if (ret) {
          strm.msg = 'invalid code lengths set';
          state.mode = BAD;
          break;
        }
        //Tracev((stderr, "inflate:       code lengths ok\n"));
        state.have = 0;
        state.mode = CODELENS;
        /* falls through */
      case CODELENS:
        while (state.have < state.nlen + state.ndist) {
          for (;;) {
            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          if (here_val < 16) {
            //--- DROPBITS(here.bits) ---//
            hold >>>= here_bits;
            bits -= here_bits;
            //---//
            state.lens[state.have++] = here_val;
          }
          else {
            if (here_val === 16) {
              //=== NEEDBITS(here.bits + 2);
              n = here_bits + 2;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              if (state.have === 0) {
                strm.msg = 'invalid bit length repeat';
                state.mode = BAD;
                break;
              }
              len = state.lens[state.have - 1];
              copy = 3 + (hold & 0x03);//BITS(2);
              //--- DROPBITS(2) ---//
              hold >>>= 2;
              bits -= 2;
              //---//
            }
            else if (here_val === 17) {
              //=== NEEDBITS(here.bits + 3);
              n = here_bits + 3;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              len = 0;
              copy = 3 + (hold & 0x07);//BITS(3);
              //--- DROPBITS(3) ---//
              hold >>>= 3;
              bits -= 3;
              //---//
            }
            else {
              //=== NEEDBITS(here.bits + 7);
              n = here_bits + 7;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              len = 0;
              copy = 11 + (hold & 0x7f);//BITS(7);
              //--- DROPBITS(7) ---//
              hold >>>= 7;
              bits -= 7;
              //---//
            }
            if (state.have + copy > state.nlen + state.ndist) {
              strm.msg = 'invalid bit length repeat';
              state.mode = BAD;
              break;
            }
            while (copy--) {
              state.lens[state.have++] = len;
            }
          }
        }

        /* handle error breaks in while */
        if (state.mode === BAD) { break; }

        /* check for end-of-block code (better have one) */
        if (state.lens[256] === 0) {
          strm.msg = 'invalid code -- missing end-of-block';
          state.mode = BAD;
          break;
        }

        /* build code tables -- note: do not change the lenbits or distbits
           values here (9 and 6) without reading the comments in inftrees.h
           concerning the ENOUGH constants, which depend on those values */
        state.lenbits = 9;

        opts = { bits: state.lenbits };
        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);
        // We have separate tables & no pointers. 2 commented lines below not needed.
        // state.next_index = opts.table_index;
        state.lenbits = opts.bits;
        // state.lencode = state.next;

        if (ret) {
          strm.msg = 'invalid literal/lengths set';
          state.mode = BAD;
          break;
        }

        state.distbits = 6;
        //state.distcode.copy(state.codes);
        // Switch to use dynamic table
        state.distcode = state.distdyn;
        opts = { bits: state.distbits };
        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);
        // We have separate tables & no pointers. 2 commented lines below not needed.
        // state.next_index = opts.table_index;
        state.distbits = opts.bits;
        // state.distcode = state.next;

        if (ret) {
          strm.msg = 'invalid distances set';
          state.mode = BAD;
          break;
        }
        //Tracev((stderr, 'inflate:       codes ok\n'));
        state.mode = LEN_;
        if (flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case LEN_:
        state.mode = LEN;
        /* falls through */
      case LEN:
        if (have >= 6 && left >= 258) {
          //--- RESTORE() ---
          strm.next_out = put;
          strm.avail_out = left;
          strm.next_in = next;
          strm.avail_in = have;
          state.hold = hold;
          state.bits = bits;
          //---
          inflate_fast(strm, _out);
          //--- LOAD() ---
          put = strm.next_out;
          output = strm.output;
          left = strm.avail_out;
          next = strm.next_in;
          input = strm.input;
          have = strm.avail_in;
          hold = state.hold;
          bits = state.bits;
          //---

          if (state.mode === TYPE) {
            state.back = -1;
          }
          break;
        }
        state.back = 0;
        for (;;) {
          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if (here_bits <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        if (here_op && (here_op & 0xf0) === 0) {
          last_bits = here_bits;
          last_op = here_op;
          last_val = here_val;
          for (;;) {
            here = state.lencode[last_val +
                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((last_bits + here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          //--- DROPBITS(last.bits) ---//
          hold >>>= last_bits;
          bits -= last_bits;
          //---//
          state.back += last_bits;
        }
        //--- DROPBITS(here.bits) ---//
        hold >>>= here_bits;
        bits -= here_bits;
        //---//
        state.back += here_bits;
        state.length = here_val;
        if (here_op === 0) {
          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
          //        "inflate:         literal '%c'\n" :
          //        "inflate:         literal 0x%02x\n", here.val));
          state.mode = LIT;
          break;
        }
        if (here_op & 32) {
          //Tracevv((stderr, "inflate:         end of block\n"));
          state.back = -1;
          state.mode = TYPE;
          break;
        }
        if (here_op & 64) {
          strm.msg = 'invalid literal/length code';
          state.mode = BAD;
          break;
        }
        state.extra = here_op & 15;
        state.mode = LENEXT;
        /* falls through */
      case LENEXT:
        if (state.extra) {
          //=== NEEDBITS(state.extra);
          n = state.extra;
          while (bits < n) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;
          //--- DROPBITS(state.extra) ---//
          hold >>>= state.extra;
          bits -= state.extra;
          //---//
          state.back += state.extra;
        }
        //Tracevv((stderr, "inflate:         length %u\n", state.length));
        state.was = state.length;
        state.mode = DIST;
        /* falls through */
      case DIST:
        for (;;) {
          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if ((here_bits) <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        if ((here_op & 0xf0) === 0) {
          last_bits = here_bits;
          last_op = here_op;
          last_val = here_val;
          for (;;) {
            here = state.distcode[last_val +
                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((last_bits + here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          //--- DROPBITS(last.bits) ---//
          hold >>>= last_bits;
          bits -= last_bits;
          //---//
          state.back += last_bits;
        }
        //--- DROPBITS(here.bits) ---//
        hold >>>= here_bits;
        bits -= here_bits;
        //---//
        state.back += here_bits;
        if (here_op & 64) {
          strm.msg = 'invalid distance code';
          state.mode = BAD;
          break;
        }
        state.offset = here_val;
        state.extra = (here_op) & 15;
        state.mode = DISTEXT;
        /* falls through */
      case DISTEXT:
        if (state.extra) {
          //=== NEEDBITS(state.extra);
          n = state.extra;
          while (bits < n) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;
          //--- DROPBITS(state.extra) ---//
          hold >>>= state.extra;
          bits -= state.extra;
          //---//
          state.back += state.extra;
        }
//#ifdef INFLATE_STRICT
        if (state.offset > state.dmax) {
          strm.msg = 'invalid distance too far back';
          state.mode = BAD;
          break;
        }
//#endif
        //Tracevv((stderr, "inflate:         distance %u\n", state.offset));
        state.mode = MATCH;
        /* falls through */
      case MATCH:
        if (left === 0) { break inf_leave; }
        copy = _out - left;
        if (state.offset > copy) {         /* copy from window */
          copy = state.offset - copy;
          if (copy > state.whave) {
            if (state.sane) {
              strm.msg = 'invalid distance too far back';
              state.mode = BAD;
              break;
            }
// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//          Trace((stderr, "inflate.c too far\n"));
//          copy -= state.whave;
//          if (copy > state.length) { copy = state.length; }
//          if (copy > left) { copy = left; }
//          left -= copy;
//          state.length -= copy;
//          do {
//            output[put++] = 0;
//          } while (--copy);
//          if (state.length === 0) { state.mode = LEN; }
//          break;
//#endif
          }
          if (copy > state.wnext) {
            copy -= state.wnext;
            from = state.wsize - copy;
          }
          else {
            from = state.wnext - copy;
          }
          if (copy > state.length) { copy = state.length; }
          from_source = state.window;
        }
        else {                              /* copy from output */
          from_source = output;
          from = put - state.offset;
          copy = state.length;
        }
        if (copy > left) { copy = left; }
        left -= copy;
        state.length -= copy;
        do {
          output[put++] = from_source[from++];
        } while (--copy);
        if (state.length === 0) { state.mode = LEN; }
        break;
      case LIT:
        if (left === 0) { break inf_leave; }
        output[put++] = state.length;
        left--;
        state.mode = LEN;
        break;
      case CHECK:
        if (state.wrap) {
          //=== NEEDBITS(32);
          while (bits < 32) {
            if (have === 0) { break inf_leave; }
            have--;
            // Use '|' instead of '+' to make sure that result is signed
            hold |= input[next++] << bits;
            bits += 8;
          }
          //===//
          _out -= left;
          strm.total_out += _out;
          state.total += _out;
          if (_out) {
            strm.adler = state.check =
                /*UPDATE(state.check, put - _out, _out);*/
                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));

          }
          _out = left;
          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too
          if ((state.flags ? hold : zswap32(hold)) !== state.check) {
            strm.msg = 'incorrect data check';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          //Tracev((stderr, "inflate:   check matches trailer\n"));
        }
        state.mode = LENGTH;
        /* falls through */
      case LENGTH:
        if (state.wrap && state.flags) {
          //=== NEEDBITS(32);
          while (bits < 32) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          if (hold !== (state.total & 0xffffffff)) {
            strm.msg = 'incorrect length check';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          //Tracev((stderr, "inflate:   length matches trailer\n"));
        }
        state.mode = DONE;
        /* falls through */
      case DONE:
        ret = Z_STREAM_END;
        break inf_leave;
      case BAD:
        ret = Z_DATA_ERROR;
        break inf_leave;
      case MEM:
        return Z_MEM_ERROR;
      case SYNC:
        /* falls through */
      default:
        return Z_STREAM_ERROR;
    }
  }

  // inf_leave <- here is real place for "goto inf_leave", emulated via "break inf_leave"

  /*
     Return from inflate(), updating the total counts and the check value.
     If there was no progress during the inflate() call, return a buffer
     error.  Call updatewindow() to create and/or update the window state.
     Note: a memory error from inflate() is non-recoverable.
   */

  //--- RESTORE() ---
  strm.next_out = put;
  strm.avail_out = left;
  strm.next_in = next;
  strm.avail_in = have;
  state.hold = hold;
  state.bits = bits;
  //---

  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&
                      (state.mode < CHECK || flush !== Z_FINISH))) {
    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {
      state.mode = MEM;
      return Z_MEM_ERROR;
    }
  }
  _in -= strm.avail_in;
  _out -= strm.avail_out;
  strm.total_in += _in;
  strm.total_out += _out;
  state.total += _out;
  if (state.wrap && _out) {
    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/
      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));
  }
  strm.data_type = state.bits + (state.last ? 64 : 0) +
                    (state.mode === TYPE ? 128 : 0) +
                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);
  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {
    ret = Z_BUF_ERROR;
  }
  return ret;
};


const inflateEnd = (strm) => {

  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {
    return Z_STREAM_ERROR;
  }

  let state = strm.state;
  if (state.window) {
    state.window = null;
  }
  strm.state = null;
  return Z_OK;
};


const inflateGetHeader = (strm, head) => {

  /* check state */
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  const state = strm.state;
  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }

  /* save header structure */
  state.head = head;
  head.done = false;
  return Z_OK;
};


const inflateSetDictionary = (strm, dictionary) => {
  const dictLength = dictionary.length;

  let state;
  let dictid;
  let ret;

  /* check state */
  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }
  state = strm.state;

  if (state.wrap !== 0 && state.mode !== DICT) {
    return Z_STREAM_ERROR;
  }

  /* check for correct dictionary identifier */
  if (state.mode === DICT) {
    dictid = 1; /* adler32(0, null, 0)*/
    /* dictid = adler32(dictid, dictionary, dictLength); */
    dictid = adler32(dictid, dictionary, dictLength, 0);
    if (dictid !== state.check) {
      return Z_DATA_ERROR;
    }
  }
  /* copy dictionary to window using updatewindow(), which will amend the
   existing dictionary if appropriate */
  ret = updatewindow(strm, dictionary, dictLength, dictLength);
  if (ret) {
    state.mode = MEM;
    return Z_MEM_ERROR;
  }
  state.havedict = 1;
  // Tracev((stderr, "inflate:   dictionary set\n"));
  return Z_OK;
};


module.exports.inflateReset = inflateReset;
module.exports.inflateReset2 = inflateReset2;
module.exports.inflateResetKeep = inflateResetKeep;
module.exports.inflateInit = inflateInit;
module.exports.inflateInit2 = inflateInit2;
module.exports.inflate = inflate;
module.exports.inflateEnd = inflateEnd;
module.exports.inflateGetHeader = inflateGetHeader;
module.exports.inflateSetDictionary = inflateSetDictionary;
module.exports.inflateInfo = 'pako inflate (from Nodeca project)';

/* Not implemented
module.exports.inflateCopy = inflateCopy;
module.exports.inflateGetDictionary = inflateGetDictionary;
module.exports.inflateMark = inflateMark;
module.exports.inflatePrime = inflatePrime;
module.exports.inflateSync = inflateSync;
module.exports.inflateSyncPoint = inflateSyncPoint;
module.exports.inflateUndermine = inflateUndermine;
*/


/***/ }),

/***/ "../../node_modules/pako/lib/zlib/inftrees.js":
/*!****************************************************!*\
  !*** ../../node_modules/pako/lib/zlib/inftrees.js ***!
  \****************************************************/
/***/ ((module) => {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

const MAXBITS = 15;
const ENOUGH_LENS = 852;
const ENOUGH_DISTS = 592;
//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);

const CODES = 0;
const LENS = 1;
const DISTS = 2;

const lbase = new Uint16Array([ /* Length codes 257..285 base */
  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,
  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0
]);

const lext = new Uint8Array([ /* Length codes 257..285 extra */
  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,
  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78
]);

const dbase = new Uint16Array([ /* Distance codes 0..29 base */
  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,
  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,
  8193, 12289, 16385, 24577, 0, 0
]);

const dext = new Uint8Array([ /* Distance codes 0..29 extra */
  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,
  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,
  28, 28, 29, 29, 64, 64
]);

const inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>
{
  const bits = opts.bits;
      //here = opts.here; /* table entry for duplication */

  let len = 0;               /* a code's length in bits */
  let sym = 0;               /* index of code symbols */
  let min = 0, max = 0;          /* minimum and maximum code lengths */
  let root = 0;              /* number of index bits for root table */
  let curr = 0;              /* number of index bits for current table */
  let drop = 0;              /* code bits to drop for sub-table */
  let left = 0;                   /* number of prefix codes available */
  let used = 0;              /* code entries in table used */
  let huff = 0;              /* Huffman code */
  let incr;              /* for incrementing code, index */
  let fill;              /* index for replicating entries */
  let low;               /* low bits for current root entry */
  let mask;              /* mask for low root bits */
  let next;             /* next available space in table */
  let base = null;     /* base value table to use */
  let base_index = 0;
//  let shoextra;    /* extra bits table to use */
  let end;                    /* use base and extra for symbol > end */
  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */
  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */
  let extra = null;
  let extra_index = 0;

  let here_bits, here_op, here_val;

  /*
   Process a set of code lengths to create a canonical Huffman code.  The
   code lengths are lens[0..codes-1].  Each length corresponds to the
   symbols 0..codes-1.  The Huffman code is generated by first sorting the
   symbols by length from short to long, and retaining the symbol order
   for codes with equal lengths.  Then the code starts with all zero bits
   for the first code of the shortest length, and the codes are integer
   increments for the same length, and zeros are appended as the length
   increases.  For the deflate format, these bits are stored backwards
   from their more natural integer increment ordering, and so when the
   decoding tables are built in the large loop below, the integer codes
   are incremented backwards.

   This routine assumes, but does not check, that all of the entries in
   lens[] are in the range 0..MAXBITS.  The caller must assure this.
   1..MAXBITS is interpreted as that code length.  zero means that that
   symbol does not occur in this code.

   The codes are sorted by computing a count of codes for each length,
   creating from that a table of starting indices for each length in the
   sorted table, and then entering the symbols in order in the sorted
   table.  The sorted table is work[], with that space being provided by
   the caller.

   The length counts are used for other purposes as well, i.e. finding
   the minimum and maximum length codes, determining if there are any
   codes at all, checking for a valid set of lengths, and looking ahead
   at length counts to determine sub-table sizes when building the
   decoding tables.
   */

  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */
  for (len = 0; len <= MAXBITS; len++) {
    count[len] = 0;
  }
  for (sym = 0; sym < codes; sym++) {
    count[lens[lens_index + sym]]++;
  }

  /* bound code lengths, force root to be within code lengths */
  root = bits;
  for (max = MAXBITS; max >= 1; max--) {
    if (count[max] !== 0) { break; }
  }
  if (root > max) {
    root = max;
  }
  if (max === 0) {                     /* no symbols to code at all */
    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */
    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;
    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;
    table[table_index++] = (1 << 24) | (64 << 16) | 0;


    //table.op[opts.table_index] = 64;
    //table.bits[opts.table_index] = 1;
    //table.val[opts.table_index++] = 0;
    table[table_index++] = (1 << 24) | (64 << 16) | 0;

    opts.bits = 1;
    return 0;     /* no symbols, but wait for decoding to report error */
  }
  for (min = 1; min < max; min++) {
    if (count[min] !== 0) { break; }
  }
  if (root < min) {
    root = min;
  }

  /* check for an over-subscribed or incomplete set of lengths */
  left = 1;
  for (len = 1; len <= MAXBITS; len++) {
    left <<= 1;
    left -= count[len];
    if (left < 0) {
      return -1;
    }        /* over-subscribed */
  }
  if (left > 0 && (type === CODES || max !== 1)) {
    return -1;                      /* incomplete set */
  }

  /* generate offsets into symbol table for each length for sorting */
  offs[1] = 0;
  for (len = 1; len < MAXBITS; len++) {
    offs[len + 1] = offs[len] + count[len];
  }

  /* sort symbols by length, by symbol order within each length */
  for (sym = 0; sym < codes; sym++) {
    if (lens[lens_index + sym] !== 0) {
      work[offs[lens[lens_index + sym]]++] = sym;
    }
  }

  /*
   Create and fill in decoding tables.  In this loop, the table being
   filled is at next and has curr index bits.  The code being used is huff
   with length len.  That code is converted to an index by dropping drop
   bits off of the bottom.  For codes where len is less than drop + curr,
   those top drop + curr - len bits are incremented through all values to
   fill the table with replicated entries.

   root is the number of index bits for the root table.  When len exceeds
   root, sub-tables are created pointed to by the root entry with an index
   of the low root bits of huff.  This is saved in low to check for when a
   new sub-table should be started.  drop is zero when the root table is
   being filled, and drop is root when sub-tables are being filled.

   When a new sub-table is needed, it is necessary to look ahead in the
   code lengths to determine what size sub-table is needed.  The length
   counts are used for this, and so count[] is decremented as codes are
   entered in the tables.

   used keeps track of how many table entries have been allocated from the
   provided *table space.  It is checked for LENS and DIST tables against
   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in
   the initial root table size constants.  See the comments in inftrees.h
   for more information.

   sym increments through all symbols, and the loop terminates when
   all codes of length max, i.e. all codes, have been processed.  This
   routine permits incomplete codes, so another loop after this one fills
   in the rest of the decoding tables with invalid code markers.
   */

  /* set up for code type */
  // poor man optimization - use if-else instead of switch,
  // to avoid deopts in old v8
  if (type === CODES) {
    base = extra = work;    /* dummy value--not used */
    end = 19;

  } else if (type === LENS) {
    base = lbase;
    base_index -= 257;
    extra = lext;
    extra_index -= 257;
    end = 256;

  } else {                    /* DISTS */
    base = dbase;
    extra = dext;
    end = -1;
  }

  /* initialize opts for loop */
  huff = 0;                   /* starting code */
  sym = 0;                    /* starting code symbol */
  len = min;                  /* starting code length */
  next = table_index;              /* current table to fill in */
  curr = root;                /* current table index bits */
  drop = 0;                   /* current bits to drop from code for index */
  low = -1;                   /* trigger new sub-table when len > root */
  used = 1 << root;          /* use root table entries */
  mask = used - 1;            /* mask for comparing low */

  /* check available table space */
  if ((type === LENS && used > ENOUGH_LENS) ||
    (type === DISTS && used > ENOUGH_DISTS)) {
    return 1;
  }

  /* process all codes and make table entries */
  for (;;) {
    /* create table entry */
    here_bits = len - drop;
    if (work[sym] < end) {
      here_op = 0;
      here_val = work[sym];
    }
    else if (work[sym] > end) {
      here_op = extra[extra_index + work[sym]];
      here_val = base[base_index + work[sym]];
    }
    else {
      here_op = 32 + 64;         /* end of block */
      here_val = 0;
    }

    /* replicate for those indices with low len bits equal to huff */
    incr = 1 << (len - drop);
    fill = 1 << curr;
    min = fill;                 /* save offset to next table */
    do {
      fill -= incr;
      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;
    } while (fill !== 0);

    /* backwards increment the len-bit code huff */
    incr = 1 << (len - 1);
    while (huff & incr) {
      incr >>= 1;
    }
    if (incr !== 0) {
      huff &= incr - 1;
      huff += incr;
    } else {
      huff = 0;
    }

    /* go to next symbol, update count, len */
    sym++;
    if (--count[len] === 0) {
      if (len === max) { break; }
      len = lens[lens_index + work[sym]];
    }

    /* create new sub-table if needed */
    if (len > root && (huff & mask) !== low) {
      /* if first time, transition to sub-tables */
      if (drop === 0) {
        drop = root;
      }

      /* increment past last table */
      next += min;            /* here min is 1 << curr */

      /* determine length of next table */
      curr = len - drop;
      left = 1 << curr;
      while (curr + drop < max) {
        left -= count[curr + drop];
        if (left <= 0) { break; }
        curr++;
        left <<= 1;
      }

      /* check for enough space */
      used += 1 << curr;
      if ((type === LENS && used > ENOUGH_LENS) ||
        (type === DISTS && used > ENOUGH_DISTS)) {
        return 1;
      }

      /* point entry in root table to sub-table */
      low = huff & mask;
      /*table.op[low] = curr;
      table.bits[low] = root;
      table.val[low] = next - opts.table_index;*/
      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;
    }
  }

  /* fill in remaining table entry if code is incomplete (guaranteed to have
   at most one remaining entry, since if the code is incomplete, the
   maximum code length that was allowed to get this far is one bit) */
  if (huff !== 0) {
    //table.op[next + huff] = 64;            /* invalid code marker */
    //table.bits[next + huff] = len - drop;
    //table.val[next + huff] = 0;
    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;
  }

  /* set return parameters */
  //opts.table_index += used;
  opts.bits = root;
  return 0;
};


module.exports = inflate_table;


/***/ }),

/***/ "../../node_modules/pako/lib/zlib/messages.js":
/*!****************************************************!*\
  !*** ../../node_modules/pako/lib/zlib/messages.js ***!
  \****************************************************/
/***/ ((module) => {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

module.exports = {
  2:      'need dictionary',     /* Z_NEED_DICT       2  */
  1:      'stream end',          /* Z_STREAM_END      1  */
  0:      '',                    /* Z_OK              0  */
  '-1':   'file error',          /* Z_ERRNO         (-1) */
  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */
  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */
  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */
  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */
  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */
};


/***/ }),

/***/ "../../node_modules/pako/lib/zlib/trees.js":
/*!*************************************************!*\
  !*** ../../node_modules/pako/lib/zlib/trees.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

/* eslint-disable space-unary-ops */

/* Public constants ==========================================================*/
/* ===========================================================================*/


//const Z_FILTERED          = 1;
//const Z_HUFFMAN_ONLY      = 2;
//const Z_RLE               = 3;
const Z_FIXED               = 4;
//const Z_DEFAULT_STRATEGY  = 0;

/* Possible values of the data_type field (though see inflate()) */
const Z_BINARY              = 0;
const Z_TEXT                = 1;
//const Z_ASCII             = 1; // = Z_TEXT
const Z_UNKNOWN             = 2;

/*============================================================================*/


function zero(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }

// From zutil.h

const STORED_BLOCK = 0;
const STATIC_TREES = 1;
const DYN_TREES    = 2;
/* The three kinds of block type */

const MIN_MATCH    = 3;
const MAX_MATCH    = 258;
/* The minimum and maximum match lengths */

// From deflate.h
/* ===========================================================================
 * Internal compression state.
 */

const LENGTH_CODES  = 29;
/* number of length codes, not counting the special END_BLOCK code */

const LITERALS      = 256;
/* number of literal bytes 0..255 */

const L_CODES       = LITERALS + 1 + LENGTH_CODES;
/* number of Literal or Length codes, including the END_BLOCK code */

const D_CODES       = 30;
/* number of distance codes */

const BL_CODES      = 19;
/* number of codes used to transfer the bit lengths */

const HEAP_SIZE     = 2 * L_CODES + 1;
/* maximum heap size */

const MAX_BITS      = 15;
/* All codes must not exceed MAX_BITS bits */

const Buf_size      = 16;
/* size of bit buffer in bi_buf */


/* ===========================================================================
 * Constants
 */

const MAX_BL_BITS = 7;
/* Bit length codes must not exceed MAX_BL_BITS bits */

const END_BLOCK   = 256;
/* end of block literal code */

const REP_3_6     = 16;
/* repeat previous bit length 3-6 times (2 bits of repeat count) */

const REPZ_3_10   = 17;
/* repeat a zero length 3-10 times  (3 bits of repeat count) */

const REPZ_11_138 = 18;
/* repeat a zero length 11-138 times  (7 bits of repeat count) */

/* eslint-disable comma-spacing,array-bracket-spacing */
const extra_lbits =   /* extra bits for each length code */
  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);

const extra_dbits =   /* extra bits for each distance code */
  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);

const extra_blbits =  /* extra bits for each bit length code */
  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);

const bl_order =
  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);
/* eslint-enable comma-spacing,array-bracket-spacing */

/* The lengths of the bit length codes are sent in order of decreasing
 * probability, to avoid transmitting the lengths for unused bit length codes.
 */

/* ===========================================================================
 * Local data. These are initialized only once.
 */

// We pre-fill arrays with 0 to avoid uninitialized gaps

const DIST_CODE_LEN = 512; /* see definition of array dist_code below */

// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1
const static_ltree  = new Array((L_CODES + 2) * 2);
zero(static_ltree);
/* The static literal tree. Since the bit lengths are imposed, there is no
 * need for the L_CODES extra codes used during heap construction. However
 * The codes 286 and 287 are needed to build a canonical tree (see _tr_init
 * below).
 */

const static_dtree  = new Array(D_CODES * 2);
zero(static_dtree);
/* The static distance tree. (Actually a trivial tree since all codes use
 * 5 bits.)
 */

const _dist_code    = new Array(DIST_CODE_LEN);
zero(_dist_code);
/* Distance codes. The first 256 values correspond to the distances
 * 3 .. 258, the last 256 values correspond to the top 8 bits of
 * the 15 bit distances.
 */

const _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);
zero(_length_code);
/* length code for each normalized match length (0 == MIN_MATCH) */

const base_length   = new Array(LENGTH_CODES);
zero(base_length);
/* First normalized length for each code (0 = MIN_MATCH) */

const base_dist     = new Array(D_CODES);
zero(base_dist);
/* First normalized distance for each code (0 = distance of 1) */


function StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {

  this.static_tree  = static_tree;  /* static tree or NULL */
  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */
  this.extra_base   = extra_base;   /* base index for extra_bits */
  this.elems        = elems;        /* max number of elements in the tree */
  this.max_length   = max_length;   /* max bit length for the codes */

  // show if `static_tree` has data or dummy - needed for monomorphic objects
  this.has_stree    = static_tree && static_tree.length;
}


let static_l_desc;
let static_d_desc;
let static_bl_desc;


function TreeDesc(dyn_tree, stat_desc) {
  this.dyn_tree = dyn_tree;     /* the dynamic tree */
  this.max_code = 0;            /* largest code with non zero frequency */
  this.stat_desc = stat_desc;   /* the corresponding static tree */
}



const d_code = (dist) => {

  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];
};


/* ===========================================================================
 * Output a short LSB first on the stream.
 * IN assertion: there is enough room in pendingBuf.
 */
const put_short = (s, w) => {
//    put_byte(s, (uch)((w) & 0xff));
//    put_byte(s, (uch)((ush)(w) >> 8));
  s.pending_buf[s.pending++] = (w) & 0xff;
  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;
};


/* ===========================================================================
 * Send a value on a given number of bits.
 * IN assertion: length <= 16 and value fits in length bits.
 */
const send_bits = (s, value, length) => {

  if (s.bi_valid > (Buf_size - length)) {
    s.bi_buf |= (value << s.bi_valid) & 0xffff;
    put_short(s, s.bi_buf);
    s.bi_buf = value >> (Buf_size - s.bi_valid);
    s.bi_valid += length - Buf_size;
  } else {
    s.bi_buf |= (value << s.bi_valid) & 0xffff;
    s.bi_valid += length;
  }
};


const send_code = (s, c, tree) => {

  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);
};


/* ===========================================================================
 * Reverse the first len bits of a code, using straightforward code (a faster
 * method would use a table)
 * IN assertion: 1 <= len <= 15
 */
const bi_reverse = (code, len) => {

  let res = 0;
  do {
    res |= code & 1;
    code >>>= 1;
    res <<= 1;
  } while (--len > 0);
  return res >>> 1;
};


/* ===========================================================================
 * Flush the bit buffer, keeping at most 7 bits in it.
 */
const bi_flush = (s) => {

  if (s.bi_valid === 16) {
    put_short(s, s.bi_buf);
    s.bi_buf = 0;
    s.bi_valid = 0;

  } else if (s.bi_valid >= 8) {
    s.pending_buf[s.pending++] = s.bi_buf & 0xff;
    s.bi_buf >>= 8;
    s.bi_valid -= 8;
  }
};


/* ===========================================================================
 * Compute the optimal bit lengths for a tree and update the total bit length
 * for the current block.
 * IN assertion: the fields freq and dad are set, heap[heap_max] and
 *    above are the tree nodes sorted by increasing frequency.
 * OUT assertions: the field len is set to the optimal bit length, the
 *     array bl_count contains the frequencies for each bit length.
 *     The length opt_len is updated; static_len is also updated if stree is
 *     not null.
 */
const gen_bitlen = (s, desc) =>
//    deflate_state *s;
//    tree_desc *desc;    /* the tree descriptor */
{
  const tree            = desc.dyn_tree;
  const max_code        = desc.max_code;
  const stree           = desc.stat_desc.static_tree;
  const has_stree       = desc.stat_desc.has_stree;
  const extra           = desc.stat_desc.extra_bits;
  const base            = desc.stat_desc.extra_base;
  const max_length      = desc.stat_desc.max_length;
  let h;              /* heap index */
  let n, m;           /* iterate over the tree elements */
  let bits;           /* bit length */
  let xbits;          /* extra bits */
  let f;              /* frequency */
  let overflow = 0;   /* number of elements with bit length too large */

  for (bits = 0; bits <= MAX_BITS; bits++) {
    s.bl_count[bits] = 0;
  }

  /* In a first pass, compute the optimal bit lengths (which may
   * overflow in the case of the bit length tree).
   */
  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */

  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {
    n = s.heap[h];
    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;
    if (bits > max_length) {
      bits = max_length;
      overflow++;
    }
    tree[n * 2 + 1]/*.Len*/ = bits;
    /* We overwrite tree[n].Dad which is no longer needed */

    if (n > max_code) { continue; } /* not a leaf node */

    s.bl_count[bits]++;
    xbits = 0;
    if (n >= base) {
      xbits = extra[n - base];
    }
    f = tree[n * 2]/*.Freq*/;
    s.opt_len += f * (bits + xbits);
    if (has_stree) {
      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);
    }
  }
  if (overflow === 0) { return; }

  // Trace((stderr,"\nbit length overflow\n"));
  /* This happens for example on obj2 and pic of the Calgary corpus */

  /* Find the first bit length which could increase: */
  do {
    bits = max_length - 1;
    while (s.bl_count[bits] === 0) { bits--; }
    s.bl_count[bits]--;      /* move one leaf down the tree */
    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */
    s.bl_count[max_length]--;
    /* The brother of the overflow item also moves one step up,
     * but this does not affect bl_count[max_length]
     */
    overflow -= 2;
  } while (overflow > 0);

  /* Now recompute all bit lengths, scanning in increasing frequency.
   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all
   * lengths instead of fixing only the wrong ones. This idea is taken
   * from 'ar' written by Haruhiko Okumura.)
   */
  for (bits = max_length; bits !== 0; bits--) {
    n = s.bl_count[bits];
    while (n !== 0) {
      m = s.heap[--h];
      if (m > max_code) { continue; }
      if (tree[m * 2 + 1]/*.Len*/ !== bits) {
        // Trace((stderr,"code %d bits %d->%d\n", m, tree[m].Len, bits));
        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;
        tree[m * 2 + 1]/*.Len*/ = bits;
      }
      n--;
    }
  }
};


/* ===========================================================================
 * Generate the codes for a given tree and bit counts (which need not be
 * optimal).
 * IN assertion: the array bl_count contains the bit length statistics for
 * the given tree and the field len is set for all tree elements.
 * OUT assertion: the field code is set for all tree elements of non
 *     zero code length.
 */
const gen_codes = (tree, max_code, bl_count) =>
//    ct_data *tree;             /* the tree to decorate */
//    int max_code;              /* largest code with non zero frequency */
//    ushf *bl_count;            /* number of codes at each bit length */
{
  const next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */
  let code = 0;              /* running code value */
  let bits;                  /* bit index */
  let n;                     /* code index */

  /* The distribution counts are first used to generate the code values
   * without bit reversal.
   */
  for (bits = 1; bits <= MAX_BITS; bits++) {
    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;
  }
  /* Check that the bit counts in bl_count are consistent. The last code
   * must be all ones.
   */
  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,
  //        "inconsistent bit counts");
  //Tracev((stderr,"\ngen_codes: max_code %d ", max_code));

  for (n = 0;  n <= max_code; n++) {
    let len = tree[n * 2 + 1]/*.Len*/;
    if (len === 0) { continue; }
    /* Now reverse the bits */
    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);

    //Tracecv(tree != static_ltree, (stderr,"\nn %3d %c l %2d c %4x (%x) ",
    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));
  }
};


/* ===========================================================================
 * Initialize the various 'constant' tables.
 */
const tr_static_init = () => {

  let n;        /* iterates over tree elements */
  let bits;     /* bit counter */
  let length;   /* length value */
  let code;     /* code value */
  let dist;     /* distance index */
  const bl_count = new Array(MAX_BITS + 1);
  /* number of codes at each bit length for an optimal tree */

  // do check in _tr_init()
  //if (static_init_done) return;

  /* For some embedded targets, global variables are not initialized: */
/*#ifdef NO_INIT_GLOBAL_POINTERS
  static_l_desc.static_tree = static_ltree;
  static_l_desc.extra_bits = extra_lbits;
  static_d_desc.static_tree = static_dtree;
  static_d_desc.extra_bits = extra_dbits;
  static_bl_desc.extra_bits = extra_blbits;
#endif*/

  /* Initialize the mapping length (0..255) -> length code (0..28) */
  length = 0;
  for (code = 0; code < LENGTH_CODES - 1; code++) {
    base_length[code] = length;
    for (n = 0; n < (1 << extra_lbits[code]); n++) {
      _length_code[length++] = code;
    }
  }
  //Assert (length == 256, "tr_static_init: length != 256");
  /* Note that the length 255 (match length 258) can be represented
   * in two different ways: code 284 + 5 bits or code 285, so we
   * overwrite length_code[255] to use the best encoding:
   */
  _length_code[length - 1] = code;

  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */
  dist = 0;
  for (code = 0; code < 16; code++) {
    base_dist[code] = dist;
    for (n = 0; n < (1 << extra_dbits[code]); n++) {
      _dist_code[dist++] = code;
    }
  }
  //Assert (dist == 256, "tr_static_init: dist != 256");
  dist >>= 7; /* from now on, all distances are divided by 128 */
  for (; code < D_CODES; code++) {
    base_dist[code] = dist << 7;
    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {
      _dist_code[256 + dist++] = code;
    }
  }
  //Assert (dist == 256, "tr_static_init: 256+dist != 512");

  /* Construct the codes of the static literal tree */
  for (bits = 0; bits <= MAX_BITS; bits++) {
    bl_count[bits] = 0;
  }

  n = 0;
  while (n <= 143) {
    static_ltree[n * 2 + 1]/*.Len*/ = 8;
    n++;
    bl_count[8]++;
  }
  while (n <= 255) {
    static_ltree[n * 2 + 1]/*.Len*/ = 9;
    n++;
    bl_count[9]++;
  }
  while (n <= 279) {
    static_ltree[n * 2 + 1]/*.Len*/ = 7;
    n++;
    bl_count[7]++;
  }
  while (n <= 287) {
    static_ltree[n * 2 + 1]/*.Len*/ = 8;
    n++;
    bl_count[8]++;
  }
  /* Codes 286 and 287 do not exist, but we must include them in the
   * tree construction to get a canonical Huffman tree (longest code
   * all ones)
   */
  gen_codes(static_ltree, L_CODES + 1, bl_count);

  /* The static distance tree is trivial: */
  for (n = 0; n < D_CODES; n++) {
    static_dtree[n * 2 + 1]/*.Len*/ = 5;
    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);
  }

  // Now data ready and we can init static trees
  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);
  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);
  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);

  //static_init_done = true;
};


/* ===========================================================================
 * Initialize a new block.
 */
const init_block = (s) => {

  let n; /* iterates over tree elements */

  /* Initialize the trees. */
  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }
  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }
  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }

  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;
  s.opt_len = s.static_len = 0;
  s.last_lit = s.matches = 0;
};


/* ===========================================================================
 * Flush the bit buffer and align the output on a byte boundary
 */
const bi_windup = (s) =>
{
  if (s.bi_valid > 8) {
    put_short(s, s.bi_buf);
  } else if (s.bi_valid > 0) {
    //put_byte(s, (Byte)s->bi_buf);
    s.pending_buf[s.pending++] = s.bi_buf;
  }
  s.bi_buf = 0;
  s.bi_valid = 0;
};

/* ===========================================================================
 * Copy a stored block, storing first the length and its
 * one's complement if requested.
 */
const copy_block = (s, buf, len, header) =>
//DeflateState *s;
//charf    *buf;    /* the input data */
//unsigned len;     /* its length */
//int      header;  /* true if block header must be written */
{
  bi_windup(s);        /* align on byte boundary */

  if (header) {
    put_short(s, len);
    put_short(s, ~len);
  }
//  while (len--) {
//    put_byte(s, *buf++);
//  }
  s.pending_buf.set(s.window.subarray(buf, buf + len), s.pending);
  s.pending += len;
};

/* ===========================================================================
 * Compares to subtrees, using the tree depth as tie breaker when
 * the subtrees have equal frequency. This minimizes the worst case length.
 */
const smaller = (tree, n, m, depth) => {

  const _n2 = n * 2;
  const _m2 = m * 2;
  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||
         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));
};

/* ===========================================================================
 * Restore the heap property by moving down the tree starting at node k,
 * exchanging a node with the smallest of its two sons if necessary, stopping
 * when the heap property is re-established (each father smaller than its
 * two sons).
 */
const pqdownheap = (s, tree, k) =>
//    deflate_state *s;
//    ct_data *tree;  /* the tree to restore */
//    int k;               /* node to move down */
{
  const v = s.heap[k];
  let j = k << 1;  /* left son of k */
  while (j <= s.heap_len) {
    /* Set j to the smallest of the two sons: */
    if (j < s.heap_len &&
      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {
      j++;
    }
    /* Exit if v is smaller than both sons */
    if (smaller(tree, v, s.heap[j], s.depth)) { break; }

    /* Exchange v with the smallest son */
    s.heap[k] = s.heap[j];
    k = j;

    /* And continue down the tree, setting j to the left son of k */
    j <<= 1;
  }
  s.heap[k] = v;
};


// inlined manually
// const SMALLEST = 1;

/* ===========================================================================
 * Send the block data compressed using the given Huffman trees
 */
const compress_block = (s, ltree, dtree) =>
//    deflate_state *s;
//    const ct_data *ltree; /* literal tree */
//    const ct_data *dtree; /* distance tree */
{
  let dist;           /* distance of matched string */
  let lc;             /* match length or unmatched char (if dist == 0) */
  let lx = 0;         /* running index in l_buf */
  let code;           /* the code to send */
  let extra;          /* number of extra bits to send */

  if (s.last_lit !== 0) {
    do {
      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);
      lc = s.pending_buf[s.l_buf + lx];
      lx++;

      if (dist === 0) {
        send_code(s, lc, ltree); /* send a literal byte */
        //Tracecv(isgraph(lc), (stderr," '%c' ", lc));
      } else {
        /* Here, lc is the match length - MIN_MATCH */
        code = _length_code[lc];
        send_code(s, code + LITERALS + 1, ltree); /* send the length code */
        extra = extra_lbits[code];
        if (extra !== 0) {
          lc -= base_length[code];
          send_bits(s, lc, extra);       /* send the extra length bits */
        }
        dist--; /* dist is now the match distance - 1 */
        code = d_code(dist);
        //Assert (code < D_CODES, "bad d_code");

        send_code(s, code, dtree);       /* send the distance code */
        extra = extra_dbits[code];
        if (extra !== 0) {
          dist -= base_dist[code];
          send_bits(s, dist, extra);   /* send the extra distance bits */
        }
      } /* literal or match pair ? */

      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */
      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,
      //       "pendingBuf overflow");

    } while (lx < s.last_lit);
  }

  send_code(s, END_BLOCK, ltree);
};


/* ===========================================================================
 * Construct one Huffman tree and assigns the code bit strings and lengths.
 * Update the total bit length for the current block.
 * IN assertion: the field freq is set for all tree elements.
 * OUT assertions: the fields len and code are set to the optimal bit length
 *     and corresponding code. The length opt_len is updated; static_len is
 *     also updated if stree is not null. The field max_code is set.
 */
const build_tree = (s, desc) =>
//    deflate_state *s;
//    tree_desc *desc; /* the tree descriptor */
{
  const tree     = desc.dyn_tree;
  const stree    = desc.stat_desc.static_tree;
  const has_stree = desc.stat_desc.has_stree;
  const elems    = desc.stat_desc.elems;
  let n, m;          /* iterate over heap elements */
  let max_code = -1; /* largest code with non zero frequency */
  let node;          /* new node being created */

  /* Construct the initial heap, with least frequent element in
   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].
   * heap[0] is not used.
   */
  s.heap_len = 0;
  s.heap_max = HEAP_SIZE;

  for (n = 0; n < elems; n++) {
    if (tree[n * 2]/*.Freq*/ !== 0) {
      s.heap[++s.heap_len] = max_code = n;
      s.depth[n] = 0;

    } else {
      tree[n * 2 + 1]/*.Len*/ = 0;
    }
  }

  /* The pkzip format requires that at least one distance code exists,
   * and that at least one bit should be sent even if there is only one
   * possible code. So to avoid special checks later on we force at least
   * two codes of non zero frequency.
   */
  while (s.heap_len < 2) {
    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);
    tree[node * 2]/*.Freq*/ = 1;
    s.depth[node] = 0;
    s.opt_len--;

    if (has_stree) {
      s.static_len -= stree[node * 2 + 1]/*.Len*/;
    }
    /* node is 0 or 1 so it does not have extra bits */
  }
  desc.max_code = max_code;

  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,
   * establish sub-heaps of increasing lengths:
   */
  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }

  /* Construct the Huffman tree by repeatedly combining the least two
   * frequent nodes.
   */
  node = elems;              /* next internal node of the tree */
  do {
    //pqremove(s, tree, n);  /* n = node of least frequency */
    /*** pqremove ***/
    n = s.heap[1/*SMALLEST*/];
    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];
    pqdownheap(s, tree, 1/*SMALLEST*/);
    /***/

    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */

    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */
    s.heap[--s.heap_max] = m;

    /* Create a new node father of n and m */
    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;
    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;
    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;

    /* and insert the new node in the heap */
    s.heap[1/*SMALLEST*/] = node++;
    pqdownheap(s, tree, 1/*SMALLEST*/);

  } while (s.heap_len >= 2);

  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];

  /* At this point, the fields freq and dad are set. We can now
   * generate the bit lengths.
   */
  gen_bitlen(s, desc);

  /* The field len is now set, we can generate the bit codes */
  gen_codes(tree, max_code, s.bl_count);
};


/* ===========================================================================
 * Scan a literal or distance tree to determine the frequencies of the codes
 * in the bit length tree.
 */
const scan_tree = (s, tree, max_code) =>
//    deflate_state *s;
//    ct_data *tree;   /* the tree to be scanned */
//    int max_code;    /* and its largest code of non zero frequency */
{
  let n;                     /* iterates over all tree elements */
  let prevlen = -1;          /* last emitted length */
  let curlen;                /* length of current code */

  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */

  let count = 0;             /* repeat count of the current code */
  let max_count = 7;         /* max repeat count */
  let min_count = 4;         /* min repeat count */

  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }
  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */

  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;

    if (++count < max_count && curlen === nextlen) {
      continue;

    } else if (count < min_count) {
      s.bl_tree[curlen * 2]/*.Freq*/ += count;

    } else if (curlen !== 0) {

      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }
      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;

    } else if (count <= 10) {
      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;

    } else {
      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;
    }

    count = 0;
    prevlen = curlen;

    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;

    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;

    } else {
      max_count = 7;
      min_count = 4;
    }
  }
};


/* ===========================================================================
 * Send a literal or distance tree in compressed form, using the codes in
 * bl_tree.
 */
const send_tree = (s, tree, max_code) =>
//    deflate_state *s;
//    ct_data *tree; /* the tree to be scanned */
//    int max_code;       /* and its largest code of non zero frequency */
{
  let n;                     /* iterates over all tree elements */
  let prevlen = -1;          /* last emitted length */
  let curlen;                /* length of current code */

  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */

  let count = 0;             /* repeat count of the current code */
  let max_count = 7;         /* max repeat count */
  let min_count = 4;         /* min repeat count */

  /* tree[max_code+1].Len = -1; */  /* guard already set */
  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }

  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;

    if (++count < max_count && curlen === nextlen) {
      continue;

    } else if (count < min_count) {
      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);

    } else if (curlen !== 0) {
      if (curlen !== prevlen) {
        send_code(s, curlen, s.bl_tree);
        count--;
      }
      //Assert(count >= 3 && count <= 6, " 3_6?");
      send_code(s, REP_3_6, s.bl_tree);
      send_bits(s, count - 3, 2);

    } else if (count <= 10) {
      send_code(s, REPZ_3_10, s.bl_tree);
      send_bits(s, count - 3, 3);

    } else {
      send_code(s, REPZ_11_138, s.bl_tree);
      send_bits(s, count - 11, 7);
    }

    count = 0;
    prevlen = curlen;
    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;

    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;

    } else {
      max_count = 7;
      min_count = 4;
    }
  }
};


/* ===========================================================================
 * Construct the Huffman tree for the bit lengths and return the index in
 * bl_order of the last bit length code to send.
 */
const build_bl_tree = (s) => {

  let max_blindex;  /* index of last bit length code of non zero freq */

  /* Determine the bit length frequencies for literal and distance trees */
  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);
  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);

  /* Build the bit length tree: */
  build_tree(s, s.bl_desc);
  /* opt_len now includes the length of the tree representations, except
   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.
   */

  /* Determine the number of bit length codes to send. The pkzip format
   * requires that at least 4 bit length codes be sent. (appnote.txt says
   * 3 but the actual value used is 4.)
   */
  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {
    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {
      break;
    }
  }
  /* Update opt_len to include the bit length tree and counts */
  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;
  //Tracev((stderr, "\ndyn trees: dyn %ld, stat %ld",
  //        s->opt_len, s->static_len));

  return max_blindex;
};


/* ===========================================================================
 * Send the header for a block using dynamic Huffman trees: the counts, the
 * lengths of the bit length codes, the literal tree and the distance tree.
 * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.
 */
const send_all_trees = (s, lcodes, dcodes, blcodes) =>
//    deflate_state *s;
//    int lcodes, dcodes, blcodes; /* number of codes for each tree */
{
  let rank;                    /* index in bl_order */

  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, "not enough codes");
  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,
  //        "too many codes");
  //Tracev((stderr, "\nbl counts: "));
  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */
  send_bits(s, dcodes - 1,   5);
  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */
  for (rank = 0; rank < blcodes; rank++) {
    //Tracev((stderr, "\nbl code %2d ", bl_order[rank]));
    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);
  }
  //Tracev((stderr, "\nbl tree: sent %ld", s->bits_sent));

  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */
  //Tracev((stderr, "\nlit tree: sent %ld", s->bits_sent));

  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */
  //Tracev((stderr, "\ndist tree: sent %ld", s->bits_sent));
};


/* ===========================================================================
 * Check if the data type is TEXT or BINARY, using the following algorithm:
 * - TEXT if the two conditions below are satisfied:
 *    a) There are no non-portable control characters belonging to the
 *       "black list" (0..6, 14..25, 28..31).
 *    b) There is at least one printable character belonging to the
 *       "white list" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).
 * - BINARY otherwise.
 * - The following partially-portable control characters form a
 *   "gray list" that is ignored in this detection algorithm:
 *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).
 * IN assertion: the fields Freq of dyn_ltree are set.
 */
const detect_data_type = (s) => {
  /* black_mask is the bit mask of black-listed bytes
   * set bits 0..6, 14..25, and 28..31
   * 0xf3ffc07f = binary 11110011111111111100000001111111
   */
  let black_mask = 0xf3ffc07f;
  let n;

  /* Check for non-textual ("black-listed") bytes. */
  for (n = 0; n <= 31; n++, black_mask >>>= 1) {
    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {
      return Z_BINARY;
    }
  }

  /* Check for textual ("white-listed") bytes. */
  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||
      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {
    return Z_TEXT;
  }
  for (n = 32; n < LITERALS; n++) {
    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {
      return Z_TEXT;
    }
  }

  /* There are no "black-listed" or "white-listed" bytes:
   * this stream either is empty or has tolerated ("gray-listed") bytes only.
   */
  return Z_BINARY;
};


let static_init_done = false;

/* ===========================================================================
 * Initialize the tree data structures for a new zlib stream.
 */
const _tr_init = (s) =>
{

  if (!static_init_done) {
    tr_static_init();
    static_init_done = true;
  }

  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);
  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);
  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);

  s.bi_buf = 0;
  s.bi_valid = 0;

  /* Initialize the first block of the first file: */
  init_block(s);
};


/* ===========================================================================
 * Send a stored block
 */
const _tr_stored_block = (s, buf, stored_len, last) =>
//DeflateState *s;
//charf *buf;       /* input block */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */
{
  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */
  copy_block(s, buf, stored_len, true); /* with header */
};


/* ===========================================================================
 * Send one empty static block to give enough lookahead for inflate.
 * This takes 10 bits, of which 7 may remain in the bit buffer.
 */
const _tr_align = (s) => {
  send_bits(s, STATIC_TREES << 1, 3);
  send_code(s, END_BLOCK, static_ltree);
  bi_flush(s);
};


/* ===========================================================================
 * Determine the best encoding for the current block: dynamic trees, static
 * trees or store, and output the encoded block to the zip file.
 */
const _tr_flush_block = (s, buf, stored_len, last) =>
//DeflateState *s;
//charf *buf;       /* input block, or NULL if too old */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */
{
  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */
  let max_blindex = 0;        /* index of last bit length code of non zero freq */

  /* Build the Huffman trees unless a stored block is forced */
  if (s.level > 0) {

    /* Check if the file is binary or text */
    if (s.strm.data_type === Z_UNKNOWN) {
      s.strm.data_type = detect_data_type(s);
    }

    /* Construct the literal and distance trees */
    build_tree(s, s.l_desc);
    // Tracev((stderr, "\nlit data: dyn %ld, stat %ld", s->opt_len,
    //        s->static_len));

    build_tree(s, s.d_desc);
    // Tracev((stderr, "\ndist data: dyn %ld, stat %ld", s->opt_len,
    //        s->static_len));
    /* At this point, opt_len and static_len are the total bit lengths of
     * the compressed block data, excluding the tree representations.
     */

    /* Build the bit length tree for the above two trees, and get the index
     * in bl_order of the last bit length code to send.
     */
    max_blindex = build_bl_tree(s);

    /* Determine the best encoding. Compute the block lengths in bytes. */
    opt_lenb = (s.opt_len + 3 + 7) >>> 3;
    static_lenb = (s.static_len + 3 + 7) >>> 3;

    // Tracev((stderr, "\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u ",
    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,
    //        s->last_lit));

    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }

  } else {
    // Assert(buf != (char*)0, "lost buf");
    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */
  }

  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {
    /* 4: two words for the lengths */

    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.
     * Otherwise we can't have processed more than WSIZE input bytes since
     * the last block flush, because compression would have been
     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to
     * transform a block into a stored block.
     */
    _tr_stored_block(s, buf, stored_len, last);

  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {

    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);
    compress_block(s, static_ltree, static_dtree);

  } else {
    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);
    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);
    compress_block(s, s.dyn_ltree, s.dyn_dtree);
  }
  // Assert (s->compressed_len == s->bits_sent, "bad compressed size");
  /* The above check is made mod 2^32, for files larger than 512 MB
   * and uLong implemented on 32 bits.
   */
  init_block(s);

  if (last) {
    bi_windup(s);
  }
  // Tracev((stderr,"\ncomprlen %lu(%lu) ", s->compressed_len>>3,
  //       s->compressed_len-7*last));
};

/* ===========================================================================
 * Save the match info and tally the frequency counts. Return true if
 * the current block must be flushed.
 */
const _tr_tally = (s, dist, lc) =>
//    deflate_state *s;
//    unsigned dist;  /* distance of matched string */
//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */
{
  //let out_length, in_length, dcode;

  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;
  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;

  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;
  s.last_lit++;

  if (dist === 0) {
    /* lc is the unmatched char */
    s.dyn_ltree[lc * 2]/*.Freq*/++;
  } else {
    s.matches++;
    /* Here, lc is the match length - MIN_MATCH */
    dist--;             /* dist = match distance - 1 */
    //Assert((ush)dist < (ush)MAX_DIST(s) &&
    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&
    //       (ush)d_code(dist) < (ush)D_CODES,  "_tr_tally: bad match");

    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;
    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;
  }

// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility

//#ifdef TRUNCATE_BLOCK
//  /* Try to guess if it is profitable to stop the current block here */
//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {
//    /* Compute an upper bound for the compressed length */
//    out_length = s.last_lit*8;
//    in_length = s.strstart - s.block_start;
//
//    for (dcode = 0; dcode < D_CODES; dcode++) {
//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);
//    }
//    out_length >>>= 3;
//    //Tracev((stderr,"\nlast_lit %u, in %ld, out ~%ld(%ld%%) ",
//    //       s->last_lit, in_length, out_length,
//    //       100L - out_length*100L/in_length));
//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {
//      return true;
//    }
//  }
//#endif

  return (s.last_lit === s.lit_bufsize - 1);
  /* We avoid equality with lit_bufsize because of wraparound at 64K
   * on 16 bit machines and because stored blocks are restricted to
   * 64K-1 bytes.
   */
};

module.exports._tr_init  = _tr_init;
module.exports._tr_stored_block = _tr_stored_block;
module.exports._tr_flush_block  = _tr_flush_block;
module.exports._tr_tally = _tr_tally;
module.exports._tr_align = _tr_align;


/***/ }),

/***/ "../../node_modules/pako/lib/zlib/zstream.js":
/*!***************************************************!*\
  !*** ../../node_modules/pako/lib/zlib/zstream.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

function ZStream() {
  /* next input byte */
  this.input = null; // JS specific, because we have no pointers
  this.next_in = 0;
  /* number of bytes available at input */
  this.avail_in = 0;
  /* total number of input bytes read so far */
  this.total_in = 0;
  /* next output byte should be put there */
  this.output = null; // JS specific, because we have no pointers
  this.next_out = 0;
  /* remaining free space at output */
  this.avail_out = 0;
  /* total number of bytes output so far */
  this.total_out = 0;
  /* last error message, NULL if no error */
  this.msg = ''/*Z_NULL*/;
  /* not visible by applications */
  this.state = null;
  /* best guess about the data type: binary or text */
  this.data_type = 2/*Z_UNKNOWN*/;
  /* adler32 value of the uncompressed data */
  this.adler = 0;
}

module.exports = ZStream;


/***/ }),

/***/ "./kotlin/88b0986a7186d029-atomicfu-js-ir.js":
/*!***************************************************!*\
  !*** ./kotlin/88b0986a7186d029-atomicfu-js-ir.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
  if (true)
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ./kotlin-kotlin-stdlib-js-ir.js */ "./kotlin/kotlin-kotlin-stdlib-js-ir.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
}(this, function (_, kotlin_kotlin) {
  'use strict';
  //region block: imports
  var objectMeta = kotlin_kotlin.$_$.q9;
  var classMeta = kotlin_kotlin.$_$.o8;
  var toString = kotlin_kotlin.$_$.pd;
  //endregion
  //region block: pre-declaration
  None.prototype = Object.create(atomicfu$TraceBase.prototype);
  None.prototype.constructor = None;
  //endregion
  function loop(_this__u8e3s4, action) {
    while (true) {
      action(_this__u8e3s4.z16_1);
    }
  }
  function loop_0(_this__u8e3s4, action) {
    while (true) {
      action(_this__u8e3s4.a17_1);
    }
  }
  function None() {
    None_instance = this;
    atomicfu$TraceBase.call(this);
  }
  None.$metadata$ = objectMeta('None', undefined, undefined, undefined, undefined, atomicfu$TraceBase.prototype);
  var None_instance;
  function None_getInstance() {
    if (None_instance == null)
      new None();
    return None_instance;
  }
  function atomicfu$TraceBase() {
  }
  atomicfu$TraceBase.prototype.atomicfu$Trace$append$1 = function (event) {
  };
  atomicfu$TraceBase.prototype.atomicfu$Trace$append$2 = function (event1, event2) {
  };
  atomicfu$TraceBase.prototype.atomicfu$Trace$append$3 = function (event1, event2, event3) {
  };
  atomicfu$TraceBase.prototype.atomicfu$Trace$append$4 = function (event1, event2, event3, event4) {
  };
  atomicfu$TraceBase.$metadata$ = classMeta('TraceBase');
  function AtomicRef(value) {
    this.z16_1 = value;
  }
  AtomicRef.prototype.b17 = function (_set____db54di) {
    this.z16_1 = _set____db54di;
  };
  AtomicRef.prototype.c17 = function () {
    return this.z16_1;
  };
  AtomicRef.prototype.atomicfu$compareAndSet = function (expect, update) {
    if (!(this.z16_1 === expect))
      return false;
    this.z16_1 = update;
    return true;
  };
  AtomicRef.prototype.atomicfu$getAndSet = function (value) {
    var oldValue = this.z16_1;
    this.z16_1 = value;
    return oldValue;
  };
  AtomicRef.prototype.toString = function () {
    return toString(this.z16_1);
  };
  AtomicRef.$metadata$ = classMeta('AtomicRef');
  Object.defineProperty(AtomicRef.prototype, 'kotlinx$atomicfu$value', {
    configurable: true,
    get: AtomicRef.prototype.c17,
    set: AtomicRef.prototype.b17
  });
  function atomic$ref$1(initial) {
    return atomic(initial, None_getInstance());
  }
  function AtomicBoolean(value) {
    this.d17_1 = value;
  }
  AtomicBoolean.prototype.e17 = function (_set____db54di) {
    this.d17_1 = _set____db54di;
  };
  AtomicBoolean.prototype.c17 = function () {
    return this.d17_1;
  };
  AtomicBoolean.prototype.atomicfu$compareAndSet = function (expect, update) {
    if (!(this.d17_1 === expect))
      return false;
    this.d17_1 = update;
    return true;
  };
  AtomicBoolean.prototype.atomicfu$getAndSet = function (value) {
    var oldValue = this.d17_1;
    this.d17_1 = value;
    return oldValue;
  };
  AtomicBoolean.prototype.toString = function () {
    return this.d17_1.toString();
  };
  AtomicBoolean.$metadata$ = classMeta('AtomicBoolean');
  Object.defineProperty(AtomicBoolean.prototype, 'kotlinx$atomicfu$value', {
    configurable: true,
    get: AtomicBoolean.prototype.c17,
    set: AtomicBoolean.prototype.e17
  });
  function atomic$boolean$1(initial) {
    return atomic_0(initial, None_getInstance());
  }
  function AtomicInt(value) {
    this.a17_1 = value;
  }
  AtomicInt.prototype.f17 = function (_set____db54di) {
    this.a17_1 = _set____db54di;
  };
  AtomicInt.prototype.c17 = function () {
    return this.a17_1;
  };
  AtomicInt.prototype.atomicfu$compareAndSet = function (expect, update) {
    if (!(this.a17_1 === expect))
      return false;
    this.a17_1 = update;
    return true;
  };
  AtomicInt.prototype.atomicfu$getAndSet = function (value) {
    var oldValue = this.a17_1;
    this.a17_1 = value;
    return oldValue;
  };
  AtomicInt.prototype.atomicfu$getAndIncrement = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this.a17_1;
    tmp0_this.a17_1 = tmp1 + 1 | 0;
    return tmp1;
  };
  AtomicInt.prototype.atomicfu$getAndDecrement = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this.a17_1;
    tmp0_this.a17_1 = tmp1 - 1 | 0;
    return tmp1;
  };
  AtomicInt.prototype.atomicfu$getAndAdd = function (delta) {
    var oldValue = this.a17_1;
    var tmp0_this = this;
    tmp0_this.a17_1 = tmp0_this.a17_1 + delta | 0;
    return oldValue;
  };
  AtomicInt.prototype.atomicfu$addAndGet = function (delta) {
    var tmp0_this = this;
    tmp0_this.a17_1 = tmp0_this.a17_1 + delta | 0;
    return this.a17_1;
  };
  AtomicInt.prototype.atomicfu$incrementAndGet = function () {
    var tmp0_this = this;
    tmp0_this.a17_1 = tmp0_this.a17_1 + 1 | 0;
    return tmp0_this.a17_1;
  };
  AtomicInt.prototype.atomicfu$decrementAndGet = function () {
    var tmp0_this = this;
    tmp0_this.a17_1 = tmp0_this.a17_1 - 1 | 0;
    return tmp0_this.a17_1;
  };
  AtomicInt.prototype.toString = function () {
    return this.a17_1.toString();
  };
  AtomicInt.$metadata$ = classMeta('AtomicInt');
  Object.defineProperty(AtomicInt.prototype, 'kotlinx$atomicfu$value', {
    configurable: true,
    get: AtomicInt.prototype.c17,
    set: AtomicInt.prototype.f17
  });
  function atomic$int$1(initial) {
    return atomic_1(initial, None_getInstance());
  }
  function AtomicLong(value) {
    this.g17_1 = value;
  }
  AtomicLong.prototype.h17 = function (_set____db54di) {
    this.g17_1 = _set____db54di;
  };
  AtomicLong.prototype.c17 = function () {
    return this.g17_1;
  };
  AtomicLong.prototype.atomicfu$compareAndSet = function (expect, update) {
    if (!this.g17_1.equals(expect))
      return false;
    this.g17_1 = update;
    return true;
  };
  AtomicLong.prototype.atomicfu$getAndSet = function (value) {
    var oldValue = this.g17_1;
    this.g17_1 = value;
    return oldValue;
  };
  AtomicLong.prototype.atomicfu$getAndIncrement$long = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this.g17_1;
    tmp0_this.g17_1 = tmp1.yl();
    return tmp1;
  };
  AtomicLong.prototype.atomicfu$getAndDecrement$long = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this.g17_1;
    tmp0_this.g17_1 = tmp1.zl();
    return tmp1;
  };
  AtomicLong.prototype.atomicfu$getAndAdd$long = function (delta) {
    var oldValue = this.g17_1;
    var tmp0_this = this;
    tmp0_this.g17_1 = tmp0_this.g17_1.ka(delta);
    return oldValue;
  };
  AtomicLong.prototype.atomicfu$addAndGet$long = function (delta) {
    var tmp0_this = this;
    tmp0_this.g17_1 = tmp0_this.g17_1.ka(delta);
    return this.g17_1;
  };
  AtomicLong.prototype.atomicfu$incrementAndGet$long = function () {
    var tmp0_this = this;
    tmp0_this.g17_1 = tmp0_this.g17_1.yl();
    return tmp0_this.g17_1;
  };
  AtomicLong.prototype.atomicfu$decrementAndGet$long = function () {
    var tmp0_this = this;
    tmp0_this.g17_1 = tmp0_this.g17_1.zl();
    return tmp0_this.g17_1;
  };
  AtomicLong.prototype.toString = function () {
    return this.g17_1.toString();
  };
  AtomicLong.$metadata$ = classMeta('AtomicLong');
  Object.defineProperty(AtomicLong.prototype, 'kotlinx$atomicfu$value', {
    configurable: true,
    get: AtomicLong.prototype.c17,
    set: AtomicLong.prototype.h17
  });
  function atomic$long$1(initial) {
    return atomic_2(initial, None_getInstance());
  }
  function atomic(initial, trace) {
    return new AtomicRef(initial);
  }
  function atomic_0(initial, trace) {
    return new AtomicBoolean(initial);
  }
  function atomic_1(initial, trace) {
    return new AtomicInt(initial);
  }
  function atomic_2(initial, trace) {
    return new AtomicLong(initial);
  }
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = atomic$boolean$1;
  _.$_$.b = atomic$long$1;
  _.$_$.c = atomic$ref$1;
  _.$_$.d = atomic$int$1;
  //endregion
  return _;
}));



/***/ }),

/***/ "./kotlin/Infinner.js":
/*!****************************!*\
  !*** ./kotlin/Infinner.js ***!
  \****************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
  if (true)
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ./kotlin-kotlin-stdlib-js-ir.js */ "./kotlin/kotlin-kotlin-stdlib-js-ir.js"), __webpack_require__(/*! ./kotlinx-serialization-kotlinx-serialization-json-js-ir.js */ "./kotlin/kotlinx-serialization-kotlinx-serialization-json-js-ir.js"), __webpack_require__(/*! ./kotlinx-serialization-kotlinx-serialization-core-js-ir.js */ "./kotlin/kotlinx-serialization-kotlinx-serialization-core-js-ir.js"), __webpack_require__(/*! ./kool-kool-core.js */ "./kotlin/kool-kool-core.js"), __webpack_require__(/*! ./MultiplatformSettings-multiplatform-settings-js-ir.js */ "./kotlin/MultiplatformSettings-multiplatform-settings-js-ir.js"), __webpack_require__(/*! ./kotlinx.coroutines-kotlinx-coroutines-core-js-ir.js */ "./kotlin/kotlinx.coroutines-kotlinx-coroutines-core-js-ir.js"), __webpack_require__(/*! ./MultiplatformSettings-multiplatform-settings-no-arg-js-ir.js */ "./kotlin/MultiplatformSettings-multiplatform-settings-no-arg-js-ir.js"), __webpack_require__(/*! ./kotlin_org_mifek_wfc_WFC_Kotlin.js */ "./kotlin/kotlin_org_mifek_wfc_WFC_Kotlin.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
}(this, function (_, kotlin_kotlin, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core, kotlin_de_fabmax_kool_kool_core, kotlin_com_russhwolf_multiplatform_settings, kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core, kotlin_com_russhwolf_multiplatform_settings_no_arg, kotlin_org_mifek_wfc_WFC_Kotlin) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var sign = Math.sign;
  var Unit_getInstance = kotlin_kotlin.$_$.j3;
  var CoroutineImpl = kotlin_kotlin.$_$.z7;
  var get_COROUTINE_SUSPENDED = kotlin_kotlin.$_$.k7;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.r;
  var joinToString$default = kotlin_kotlin.$_$.h;
  var println = kotlin_kotlin.$_$.e8;
  var classMeta = kotlin_kotlin.$_$.o8;
  var Default_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.a;
  var ensureNotNull = kotlin_kotlin.$_$.dd;
  var decodeToString = kotlin_kotlin.$_$.db;
  var JsonObject = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.d;
  var getKClass = kotlin_kotlin.$_$.d;
  var arrayOf = kotlin_kotlin.$_$.ad;
  var createKType = kotlin_kotlin.$_$.a;
  var serializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.v1;
  var THROW_CCE = kotlin_kotlin.$_$.tc;
  var KSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.q1;
  var isInterface = kotlin_kotlin.$_$.g9;
  var collectionSizeOrDefault = kotlin_kotlin.$_$.n4;
  var mapCapacity = kotlin_kotlin.$_$.z5;
  var coerceAtLeast = kotlin_kotlin.$_$.ca;
  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.a1;
  var JsonArray = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.c;
  var get_jsonPrimitive = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.h;
  var get_int = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.f;
  var LinkedHashMap_init_$Create$_0 = kotlin_kotlin.$_$.b1;
  var THROW_ISE = kotlin_kotlin.$_$.uc;
  var Enum = kotlin_kotlin.$_$.ic;
  var removePrefix = kotlin_kotlin.$_$.mb;
  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.f2;
  var replace$default = kotlin_kotlin.$_$.o;
  var Vec2i = kotlin_de_fabmax_kool_kool_core.$_$.d;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.s1;
  var objectMeta = kotlin_kotlin.$_$.q9;
  var contains = kotlin_kotlin.$_$.o4;
  var numberToInt = kotlin_kotlin.$_$.p9;
  var ArrayList_init_$Create$_0 = kotlin_kotlin.$_$.s;
  var UiScene$default = kotlin_de_fabmax_kool_kool_core.$_$.o3;
  var UniversalKeyCode_init_$Create$ = kotlin_de_fabmax_kool_kool_core.$_$.z3;
  var Companion_getInstance = kotlin_de_fabmax_kool_kool_core.$_$.q4;
  var int$default = kotlin_com_russhwolf_multiplatform_settings.$_$.c;
  var float$default = kotlin_com_russhwolf_multiplatform_settings.$_$.b;
  var boolean$default = kotlin_com_russhwolf_multiplatform_settings.$_$.a;
  var mutableStateOf = kotlin_de_fabmax_kool_kool_core.$_$.t1;
  var MutableStateValue = kotlin_de_fabmax_kool_kool_core.$_$.l1;
  var CoroutineScope = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.k;
  var AssetManager = kotlin_de_fabmax_kool_kool_core.$_$.x2;
  var OrthographicCamera = kotlin_de_fabmax_kool_kool_core.$_$.s2;
  var ProjCorrectionMode_ONSCREEN_getInstance = kotlin_de_fabmax_kool_kool_core.$_$.l3;
  var Texture2d_init_$Create$ = kotlin_de_fabmax_kool_kool_core.$_$.b4;
  var AssertionError_init_$Create$ = kotlin_kotlin.$_$.j1;
  var contentHashCode = kotlin_kotlin.$_$.t4;
  var arrayIterator = kotlin_kotlin.$_$.h8;
  var checkIndexOverflow = kotlin_kotlin.$_$.m4;
  var first = kotlin_kotlin.$_$.k5;
  var println_0 = kotlin_kotlin.$_$.f8;
  var Job$default = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.d;
  var CoroutineScope_0 = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.j;
  var Settings = kotlin_com_russhwolf_multiplatform_settings_no_arg.$_$.a;
  var asIterable = kotlin_kotlin.$_$.g4;
  var launch$default = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.f;
  var Random = kotlin_kotlin.$_$.ba;
  var until = kotlin_kotlin.$_$.ha;
  var sum = kotlin_kotlin.$_$.t6;
  var to = kotlin_kotlin.$_$.qd;
  var toMap = kotlin_kotlin.$_$.b7;
  var listOf = kotlin_kotlin.$_$.y5;
  var interfaceMeta = kotlin_kotlin.$_$.x8;
  var KMutableProperty1 = kotlin_kotlin.$_$.ka;
  var getPropertyCallableRef = kotlin_kotlin.$_$.t8;
  var TexFormat_RGBA_getInstance = kotlin_de_fabmax_kool_kool_core.$_$.h3;
  var AddressMode_CLAMP_TO_EDGE_getInstance = kotlin_de_fabmax_kool_kool_core.$_$.c3;
  var FilterMethod_NEAREST_getInstance = kotlin_de_fabmax_kool_kool_core.$_$.g3;
  var TextureProps = kotlin_de_fabmax_kool_kool_core.$_$.h2;
  var TexFormat_R_getInstance = kotlin_de_fabmax_kool_kool_core.$_$.i3;
  var SuspendFunction2 = kotlin_kotlin.$_$.b8;
  var SuspendFunction1 = kotlin_kotlin.$_$.a8;
  var serializer_0 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.u1;
  var toString = kotlin_kotlin.$_$.u9;
  var PluginGeneratedSerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.k1;
  var IntSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.m;
  var UnknownFieldException_init_$Create$ = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.d;
  var typeParametersSerializers = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.h1;
  var GeneratedSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.i1;
  var throwMissingFieldException = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.n1;
  var IllegalStateException_init_$Create$_0 = kotlin_kotlin.$_$.u1;
  var noWhenBranchMatchedException = kotlin_kotlin.$_$.md;
  var NotImplementedError_init_$Create$ = kotlin_kotlin.$_$.q;
  var JsonNull_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.b;
  var equals = kotlin_kotlin.$_$.q8;
  var JsonPrimitive = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.e;
  var get_jsonObject = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.g;
  var BufferedTextureLoader = kotlin_de_fabmax_kool_kool_core.$_$.b2;
  var Texture3d = kotlin_de_fabmax_kool_kool_core.$_$.f2;
  var padStart = kotlin_kotlin.$_$.kb;
  var IntCompanionObject_getInstance = kotlin_kotlin.$_$.z2;
  var lazy = kotlin_kotlin.$_$.ld;
  var Companion_getInstance_0 = kotlin_de_fabmax_kool_kool_core.$_$.f4;
  var MutableVec2i_init_$Create$ = kotlin_de_fabmax_kool_kool_core.$_$.v3;
  var MutableVec2i_init_$Create$_0 = kotlin_de_fabmax_kool_kool_core.$_$.u3;
  var KProperty1 = kotlin_kotlin.$_$.la;
  var Long = kotlin_kotlin.$_$.nc;
  var delay = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.a;
  var async$default = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.e;
  var throwUninitializedPropertyAccessException = kotlin_kotlin.$_$.od;
  var NoSuchElementException_init_$Create$ = kotlin_kotlin.$_$.z1;
  var sum_0 = kotlin_kotlin.$_$.v6;
  var LocalKeyCode_init_$Create$ = kotlin_de_fabmax_kool_kool_core.$_$.y3;
  var Default_getInstance_0 = kotlin_kotlin.$_$.c3;
  var generateSequence = kotlin_kotlin.$_$.va;
  var abs = kotlin_kotlin.$_$.w9;
  var shuffled = kotlin_kotlin.$_$.p6;
  var randomI = kotlin_de_fabmax_kool_kool_core.$_$.g;
  var min = kotlin_de_fabmax_kool_kool_core.$_$.f;
  var Char = kotlin_kotlin.$_$.dc;
  var _UInt___get_data__impl__f0vqqw = kotlin_kotlin.$_$.p2;
  var _UInt___init__impl__l7qpdl = kotlin_kotlin.$_$.o2;
  var toByte = kotlin_kotlin.$_$.r9;
  var joinToString$default_0 = kotlin_kotlin.$_$.i;
  var IntArray2D = kotlin_org_mifek_wfc_WFC_Kotlin.$_$.c;
  var fillArrayVal = kotlin_kotlin.$_$.r8;
  var toList = kotlin_kotlin.$_$.a7;
  var Cartesian2DModelOptions_init_$Create$ = kotlin_org_mifek_wfc_WFC_Kotlin.$_$.a;
  var getStringHashCode = kotlin_kotlin.$_$.u8;
  var createUint8Buffer = kotlin_de_fabmax_kool_kool_core.$_$.w2;
  var charSequenceGet = kotlin_kotlin.$_$.l8;
  var charSequenceLength = kotlin_kotlin.$_$.m8;
  var TextureData2d = kotlin_de_fabmax_kool_kool_core.$_$.g2;
  var sequenceOf = kotlin_kotlin.$_$.za;
  var asSequence = kotlin_kotlin.$_$.l4;
  var chunked = kotlin_kotlin.$_$.ra;
  var flatMap = kotlin_kotlin.$_$.ua;
  var toString_0 = kotlin_kotlin.$_$.j2;
  var OverlappingCartesian2DModel_init_$Create$ = kotlin_org_mifek_wfc_WFC_Kotlin.$_$.b;
  var Monotonic_getInstance = kotlin_kotlin.$_$.f3;
  var ValueTimeMark__elapsedNow_impl_eonqvs = kotlin_kotlin.$_$.e2;
  var TimedValue = kotlin_kotlin.$_$.bc;
  var Duration = kotlin_kotlin.$_$.ac;
  var Pair = kotlin_kotlin.$_$.rc;
  var filter = kotlin_kotlin.$_$.ta;
  var last = kotlin_kotlin.$_$.w5;
  var Scene = kotlin_de_fabmax_kool_kool_core.$_$.t2;
  var Companion_getInstance_1 = kotlin_de_fabmax_kool_kool_core.$_$.o4;
  var InterpolatedFloat = kotlin_de_fabmax_kool_kool_core.$_$.j2;
  var InverseSquareAnimator = kotlin_de_fabmax_kool_kool_core.$_$.l2;
  var CosAnimator = kotlin_de_fabmax_kool_kool_core.$_$.i2;
  var NotImplementedError = kotlin_kotlin.$_$.pc;
  var FitContent_getInstance = kotlin_de_fabmax_kool_kool_core.$_$.h4;
  var Grow_init_$Create$ = kotlin_de_fabmax_kool_kool_core.$_$.a4;
  var width = kotlin_de_fabmax_kool_kool_core.$_$.a2;
  var height = kotlin_de_fabmax_kool_kool_core.$_$.r1;
  var margin$default = kotlin_de_fabmax_kool_kool_core.$_$.q3;
  var ColumnLayout_getInstance = kotlin_de_fabmax_kool_kool_core.$_$.g4;
  var layout = kotlin_de_fabmax_kool_kool_core.$_$.s1;
  var AlignmentX_End_getInstance = kotlin_de_fabmax_kool_kool_core.$_$.z2;
  var alignX = kotlin_de_fabmax_kool_kool_core.$_$.p1;
  var AlignmentY_Bottom_getInstance = kotlin_de_fabmax_kool_kool_core.$_$.a3;
  var alignY = kotlin_de_fabmax_kool_kool_core.$_$.q1;
  var RowNode = kotlin_de_fabmax_kool_kool_core.$_$.m1;
  var Companion_getInstance_2 = kotlin_de_fabmax_kool_kool_core.$_$.k4;
  var size = kotlin_de_fabmax_kool_kool_core.$_$.w1;
  var RowLayout_getInstance = kotlin_de_fabmax_kool_kool_core.$_$.j4;
  var TextNode = kotlin_de_fabmax_kool_kool_core.$_$.o1;
  var Companion_getInstance_3 = kotlin_de_fabmax_kool_kool_core.$_$.m4;
  var text = kotlin_de_fabmax_kool_kool_core.$_$.x1;
  var toggle = kotlin_de_fabmax_kool_kool_core.$_$.z1;
  var Panel$default = kotlin_de_fabmax_kool_kool_core.$_$.n3;
  var AlignmentY_Center_getInstance = kotlin_de_fabmax_kool_kool_core.$_$.b3;
  var align$default = kotlin_de_fabmax_kool_kool_core.$_$.p3;
  var Companion_getInstance_4 = kotlin_de_fabmax_kool_kool_core.$_$.i4;
  var onClick = kotlin_de_fabmax_kool_kool_core.$_$.u1;
  var SwitchNode = kotlin_de_fabmax_kool_kool_core.$_$.n1;
  var Companion_getInstance_5 = kotlin_de_fabmax_kool_kool_core.$_$.l4;
  var toggleState = kotlin_de_fabmax_kool_kool_core.$_$.y1;
  var onToggle = kotlin_de_fabmax_kool_kool_core.$_$.v1;
  var RectProps = kotlin_de_fabmax_kool_kool_core.$_$.o2;
  var textureMesh$default = kotlin_de_fabmax_kool_kool_core.$_$.t3;
  var LinearAnimator = kotlin_de_fabmax_kool_kool_core.$_$.m2;
  var Companion_getInstance_6 = kotlin_de_fabmax_kool_kool_core.$_$.p4;
  var ConfigBuilder = kotlin_de_fabmax_kool_kool_core.$_$.c2;
  var Config = kotlin_de_fabmax_kool_kool_core.$_$.d2;
  var OffscreenRenderPass2d = kotlin_de_fabmax_kool_kool_core.$_$.e2;
  var ProjCorrectionMode_OFFSCREEN_getInstance = kotlin_de_fabmax_kool_kool_core.$_$.k3;
  var Color = kotlin_de_fabmax_kool_kool_core.$_$.v2;
  var group$default = kotlin_de_fabmax_kool_kool_core.$_$.s3;
  var hashCode = kotlin_kotlin.$_$.v8;
  var getNumberHashCode = kotlin_kotlin.$_$.s8;
  var padEnd = kotlin_kotlin.$_$.jb;
  var mvpMatrix = kotlin_de_fabmax_kool_kool_core.$_$.i;
  var Companion_getInstance_7 = kotlin_de_fabmax_kool_kool_core.$_$.n4;
  var times = kotlin_de_fabmax_kool_kool_core.$_$.z;
  var fragmentColorBlock$default = kotlin_de_fabmax_kool_kool_core.$_$.m3;
  var float4Port = kotlin_de_fabmax_kool_kool_core.$_$.p;
  var get_rgb = kotlin_de_fabmax_kool_kool_core.$_$.v;
  var convertColorSpace = kotlin_de_fabmax_kool_kool_core.$_$.h;
  var get_a = kotlin_de_fabmax_kool_kool_core.$_$.k;
  var times_0 = kotlin_de_fabmax_kool_kool_core.$_$.x;
  var BlendMode_BLEND_PREMULTIPLIED_ALPHA_getInstance = kotlin_de_fabmax_kool_kool_core.$_$.d3;
  var toFloat2 = kotlin_de_fabmax_kool_kool_core.$_$.a1;
  var minus = kotlin_de_fabmax_kool_kool_core.$_$.s;
  var times_1 = kotlin_de_fabmax_kool_kool_core.$_$.w;
  var div = kotlin_de_fabmax_kool_kool_core.$_$.l;
  var div_0 = kotlin_de_fabmax_kool_kool_core.$_$.m;
  var ge = kotlin_de_fabmax_kool_kool_core.$_$.q;
  var UnlitShaderConfig = kotlin_de_fabmax_kool_kool_core.$_$.j1;
  var KslProgram = kotlin_de_fabmax_kool_kool_core.$_$.j;
  var KslUnlitShader = kotlin_de_fabmax_kool_kool_core.$_$.k1;
  var toInt2 = kotlin_de_fabmax_kool_kool_core.$_$.d1;
  var get_r = kotlin_de_fabmax_kool_kool_core.$_$.u;
  var times_2 = kotlin_de_fabmax_kool_kool_core.$_$.y;
  var toInt1 = kotlin_de_fabmax_kool_kool_core.$_$.c1;
  var div_1 = kotlin_de_fabmax_kool_kool_core.$_$.n;
  var get_x = kotlin_de_fabmax_kool_kool_core.$_$.e1;
  var get_y = kotlin_de_fabmax_kool_kool_core.$_$.g1;
  var KslShader = kotlin_de_fabmax_kool_kool_core.$_$.i1;
  var PipelineConfig = kotlin_de_fabmax_kool_kool_core.$_$.h1;
  var CullMethod_NO_CULLING_getInstance = kotlin_de_fabmax_kool_kool_core.$_$.e3;
  var DepthCompareOp_DISABLED_getInstance = kotlin_de_fabmax_kool_kool_core.$_$.f3;
  var removeLastOrNull = kotlin_kotlin.$_$.j6;
  var lastOrNull = kotlin_kotlin.$_$.v5;
  var Collection = kotlin_kotlin.$_$.l3;
  var Comparator = kotlin_kotlin.$_$.fc;
  var compareValues = kotlin_kotlin.$_$.g7;
  var sortWith = kotlin_kotlin.$_$.r6;
  var reversed = kotlin_kotlin.$_$.n6;
  var toString_1 = kotlin_kotlin.$_$.pd;
  var isObject = kotlin_kotlin.$_$.i9;
  var ReadWriteProperty = kotlin_kotlin.$_$.aa;
  var Vec3f = kotlin_de_fabmax_kool_kool_core.$_$.e;
  var InterpolatedValue = kotlin_de_fabmax_kool_kool_core.$_$.k2;
  var BoundingBox = kotlin_de_fabmax_kool_kool_core.$_$.a;
  var MutableVec3f_init_$Create$ = kotlin_de_fabmax_kool_kool_core.$_$.w3;
  var Node = kotlin_de_fabmax_kool_kool_core.$_$.r2;
  var Node_init_$Init$ = kotlin_de_fabmax_kool_kool_core.$_$.e4;
  var Texture2d_init_$Create$_0 = kotlin_de_fabmax_kool_kool_core.$_$.c4;
  var Vec2f = kotlin_de_fabmax_kool_kool_core.$_$.c;
  var Group = kotlin_de_fabmax_kool_kool_core.$_$.p2;
  var Group_init_$Init$ = kotlin_de_fabmax_kool_kool_core.$_$.d4;
  var IndexedVertexList = kotlin_de_fabmax_kool_kool_core.$_$.n2;
  var Mesh = kotlin_de_fabmax_kool_kool_core.$_$.q2;
  var float3 = kotlin_de_fabmax_kool_kool_core.$_$.o;
  var plus = kotlin_de_fabmax_kool_kool_core.$_$.t;
  var gt = kotlin_de_fabmax_kool_kool_core.$_$.r;
  var group = kotlin_de_fabmax_kool_kool_core.$_$.u2;
  var LoadingState_LOADED_getInstance = kotlin_de_fabmax_kool_kool_core.$_$.j3;
  var MutableVec2i = kotlin_de_fabmax_kool_kool_core.$_$.b;
  var toFloat3 = kotlin_de_fabmax_kool_kool_core.$_$.b1;
  var get_xy = kotlin_de_fabmax_kool_kool_core.$_$.f1;
  var Char__plus_impl_qi7pgj = kotlin_kotlin.$_$.h2;
  var Char__minus_impl_a2frrh = kotlin_kotlin.$_$.g2;
  var KslUnlitShader_init_$Create$ = kotlin_de_fabmax_kool_kool_core.$_$.x3;
  var colorMesh$default = kotlin_de_fabmax_kool_kool_core.$_$.r3;
  var createDefaultContext = kotlin_de_fabmax_kool_kool_core.$_$.y2;
  //endregion
  //region block: pre-declaration
  $loadAnimationsCOROUTINE$0.prototype = Object.create(CoroutineImpl.prototype);
  $loadAnimationsCOROUTINE$0.prototype.constructor = $loadAnimationsCOROUTINE$0;
  $loadAndPrepareAnimsCOROUTINE$1.prototype = Object.create(CoroutineImpl.prototype);
  $loadAndPrepareAnimsCOROUTINE$1.prototype.constructor = $loadAndPrepareAnimsCOROUTINE$1;
  GameSpeed.prototype = Object.create(Enum.prototype);
  GameSpeed.prototype.constructor = GameSpeed;
  MainMenuState.prototype = Object.create(State.prototype);
  MainMenuState.prototype.constructor = MainMenuState;
  RunGameState.prototype = Object.create(State.prototype);
  RunGameState.prototype.constructor = RunGameState;
  Exit.prototype = Object.create(State.prototype);
  Exit.prototype.constructor = Exit;
  App$Companion$bg$slambda.prototype = Object.create(CoroutineImpl.prototype);
  App$Companion$bg$slambda.prototype.constructor = App$Companion$bg$slambda;
  GameCamera.prototype = Object.create(OrthographicCamera.prototype);
  GameCamera.prototype.constructor = GameCamera;
  AppActions.prototype = Object.create(Enum.prototype);
  AppActions.prototype.constructor = AppActions;
  App$slambda.prototype = Object.create(CoroutineImpl.prototype);
  App$slambda.prototype.constructor = App$slambda;
  $test4COROUTINE$2.prototype = Object.create(CoroutineImpl.prototype);
  $test4COROUTINE$2.prototype.constructor = $test4COROUTINE$2;
  TileSet.prototype = Object.create(Enum.prototype);
  TileSet.prototype.constructor = TileSet;
  $loadCOROUTINE$3.prototype = Object.create(CoroutineImpl.prototype);
  $loadCOROUTINE$3.prototype.constructor = $loadCOROUTINE$3;
  $loadGeomCOROUTINE$4.prototype = Object.create(CoroutineImpl.prototype);
  $loadGeomCOROUTINE$4.prototype.constructor = $loadGeomCOROUTINE$4;
  $loadAtlasCOROUTINE$5.prototype = Object.create(CoroutineImpl.prototype);
  $loadAtlasCOROUTINE$5.prototype.constructor = $loadAtlasCOROUTINE$5;
  LevelSet.prototype = Object.create(Enum.prototype);
  LevelSet.prototype.constructor = LevelSet;
  $loadCOROUTINE$6.prototype = Object.create(CoroutineImpl.prototype);
  $loadCOROUTINE$6.prototype.constructor = $loadCOROUTINE$6;
  $loadSoundsCOROUTINE$7.prototype = Object.create(CoroutineImpl.prototype);
  $loadSoundsCOROUTINE$7.prototype.constructor = $loadSoundsCOROUTINE$7;
  Action_0.prototype = Object.create(Enum.prototype);
  Action_0.prototype.constructor = Action_0;
  ActorSequence.prototype = Object.create(Enum.prototype);
  ActorSequence.prototype.constructor = ActorSequence;
  ActorState.prototype = Object.create(StackedState.prototype);
  ActorState.prototype.constructor = ActorState;
  ControllableState.prototype = Object.create(ActorState.prototype);
  ControllableState.prototype.constructor = ControllableState;
  MovementState.prototype = Object.create(ControllableState.prototype);
  MovementState.prototype.constructor = MovementState;
  MoveLeft.prototype = Object.create(MovementState.prototype);
  MoveLeft.prototype.constructor = MoveLeft;
  BarLeft.prototype = Object.create(MoveLeft.prototype);
  BarLeft.prototype.constructor = BarLeft;
  RunLeft.prototype = Object.create(MoveLeft.prototype);
  RunLeft.prototype.constructor = RunLeft;
  StopState.prototype = Object.create(ControllableState.prototype);
  StopState.prototype.constructor = StopState;
  FallState.prototype = Object.create(ActorState.prototype);
  FallState.prototype.constructor = FallState;
  MoveRight.prototype = Object.create(MovementState.prototype);
  MoveRight.prototype.constructor = MoveRight;
  RunRight.prototype = Object.create(MoveRight.prototype);
  RunRight.prototype.constructor = RunRight;
  BarRight.prototype = Object.create(MoveRight.prototype);
  BarRight.prototype.constructor = BarRight;
  RunDown.prototype = Object.create(MovementState.prototype);
  RunDown.prototype.constructor = RunDown;
  MoveUp.prototype = Object.create(MovementState.prototype);
  MoveUp.prototype.constructor = MoveUp;
  RunUp.prototype = Object.create(MoveUp.prototype);
  RunUp.prototype.constructor = RunUp;
  GameState.prototype = Object.create(Enum.prototype);
  GameState.prototype.constructor = GameState;
  Sound.prototype = Object.create(Enum.prototype);
  Sound.prototype.constructor = Sound;
  Game$slambda.prototype = Object.create(CoroutineImpl.prototype);
  Game$slambda.prototype.constructor = Game$slambda;
  InHole.prototype = Object.create(ActorState.prototype);
  InHole.prototype.constructor = InHole;
  Shake.prototype = Object.create(ActorState.prototype);
  Shake.prototype.constructor = Shake;
  Guard.prototype = Object.create(Actor.prototype);
  Guard.prototype.constructor = Guard;
  TileLogicType.prototype = Object.create(Enum.prototype);
  TileLogicType.prototype.constructor = TileLogicType;
  Tile.prototype = Object.create(Enum.prototype);
  Tile.prototype.constructor = Tile;
  Status.prototype = Object.create(Enum.prototype);
  Status.prototype.constructor = Status;
  NeighborhoodNeumann2d.prototype = Object.create(NeighbourhoodTopology.prototype);
  NeighborhoodNeumann2d.prototype.constructor = NeighborhoodNeumann2d;
  generateGameLevel$slambda.prototype = Object.create(CoroutineImpl.prototype);
  generateGameLevel$slambda.prototype.constructor = generateGameLevel$slambda;
  DigState.prototype = Object.create(ActorState.prototype);
  DigState.prototype.constructor = DigState;
  DigLeft.prototype = Object.create(DigState.prototype);
  DigLeft.prototype.constructor = DigLeft;
  DigRight.prototype = Object.create(DigState.prototype);
  DigRight.prototype.constructor = DigRight;
  Runner.prototype = Object.create(Actor.prototype);
  Runner.prototype.constructor = Runner;
  State_0.prototype = Object.create(Enum.prototype);
  State_0.prototype.constructor = State_0;
  AsyncScene$checkState$slambda.prototype = Object.create(CoroutineImpl.prototype);
  AsyncScene$checkState$slambda.prototype.constructor = AsyncScene$checkState$slambda;
  AsyncScene.prototype = Object.create(Scene.prototype);
  AsyncScene.prototype.constructor = AsyncScene;
  $loadResourcesCOROUTINE$8.prototype = Object.create(CoroutineImpl.prototype);
  $loadResourcesCOROUTINE$8.prototype.constructor = $loadResourcesCOROUTINE$8;
  GameScene.prototype = Object.create(AsyncScene.prototype);
  GameScene.prototype.constructor = GameScene;
  GameLevelScene.prototype = Object.create(GameScene.prototype);
  GameLevelScene.prototype.constructor = GameLevelScene;
  GameScene$lambda$slambda.prototype = Object.create(CoroutineImpl.prototype);
  GameScene$lambda$slambda.prototype.constructor = GameScene$lambda$slambda;
  $reloadCOROUTINE$10.prototype = Object.create(CoroutineImpl.prototype);
  $reloadCOROUTINE$10.prototype.constructor = $reloadCOROUTINE$10;
  $loadResourcesCOROUTINE$11.prototype = Object.create(CoroutineImpl.prototype);
  $loadResourcesCOROUTINE$11.prototype.constructor = $loadResourcesCOROUTINE$11;
  $loadResourcesCOROUTINE$12.prototype = Object.create(CoroutineImpl.prototype);
  $loadResourcesCOROUTINE$12.prototype.constructor = $loadResourcesCOROUTINE$12;
  GameUI.prototype = Object.create(AsyncScene.prototype);
  GameUI.prototype.constructor = GameUI;
  LabeledMenuCommand.prototype = Object.create(MenuCommand.prototype);
  LabeledMenuCommand.prototype.constructor = LabeledMenuCommand;
  MainMenuScene$_get_reloadLevels_$slambda_m0t77b.prototype = Object.create(CoroutineImpl.prototype);
  MainMenuScene$_get_reloadLevels_$slambda_m0t77b.prototype.constructor = MainMenuScene$_get_reloadLevels_$slambda_m0t77b;
  MainMenuScene.prototype = Object.create(GameScene.prototype);
  MainMenuScene.prototype.constructor = MainMenuScene;
  MaskModel.prototype = Object.create(KslProgram.prototype);
  MaskModel.prototype.constructor = MaskModel;
  MaskShader.prototype = Object.create(KslUnlitShader.prototype);
  MaskShader.prototype.constructor = MaskShader;
  Program.prototype = Object.create(KslProgram.prototype);
  Program.prototype.constructor = Program;
  TileMapShader.prototype = Object.create(KslShader.prototype);
  TileMapShader.prototype.constructor = TileMapShader;
  Sprite3d.prototype = Object.create(Group.prototype);
  Sprite3d.prototype.constructor = Sprite3d;
  ActorView.prototype = Object.create(Sprite3d.prototype);
  ActorView.prototype.constructor = ActorView;
  InterpolatedVec3f.prototype = Object.create(InterpolatedValue.prototype);
  InterpolatedVec3f.prototype.constructor = InterpolatedVec3f;
  CameraController.prototype = Object.create(Node.prototype);
  CameraController.prototype.constructor = CameraController;
  GameControls.prototype = Object.create(Node.prototype);
  GameControls.prototype.constructor = GameControls;
  GameAction.prototype = Object.create(Enum.prototype);
  GameAction.prototype.constructor = GameAction;
  LevelView.prototype = Object.create(Group.prototype);
  LevelView.prototype.constructor = LevelView;
  RunnerAction.prototype = Object.create(Enum.prototype);
  RunnerAction.prototype.constructor = RunnerAction;
  RunnerController.prototype = Object.create(Node.prototype);
  RunnerController.prototype.constructor = RunnerController;
  Model.prototype = Object.create(KslProgram.prototype);
  Model.prototype.constructor = Model;
  SpriteShader.prototype = Object.create(KslShader.prototype);
  SpriteShader.prototype.constructor = SpriteShader;
  Sprite.prototype = Object.create(Group.prototype);
  Sprite.prototype.constructor = Sprite;
  Model_0.prototype = Object.create(KslProgram.prototype);
  Model_0.prototype.constructor = Model_0;
  SpriteAtlasShader.prototype = Object.create(KslShader.prototype);
  SpriteAtlasShader.prototype.constructor = SpriteAtlasShader;
  TextView.prototype = Object.create(Group.prototype);
  TextView.prototype.constructor = TextView;
  //endregion
  function AnimationFrames_init_$Init$(asset, tryDir, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      tryDir = '.';
    AnimationFrames.call($this, asset, tryDir);
    return $this;
  }
  function AnimationFrames_init_$Create$(asset, tryDir, $mask0, $marker) {
    return AnimationFrames_init_$Init$(asset, tryDir, $mask0, $marker, Object.create(AnimationFrames.prototype));
  }
  function loadAndPrepareAnims(_this__u8e3s4, $this, assetPath, $cont) {
    var tmp = new $loadAndPrepareAnimsCOROUTINE$1($this, _this__u8e3s4, assetPath, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  }
  function $loadAnimationsCOROUTINE$0(_this__u8e3s4, tileSpec, assetMgr, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.s6k_1 = _this__u8e3s4;
    this.t6k_1 = tileSpec;
    this.u6k_1 = assetMgr;
  }
  $loadAnimationsCOROUTINE$0.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 5;
            this.s6k_1.a6l_1.t7();
            this.v6k_1 = this.s6k_1.a6l_1;
            this.l7_1 = 2;
            this.k7_1 = 1;
            suspendResult = loadAndPrepareAnims(this.u6k_1, this.s6k_1, 'sprites/' + this.t6k_1.g6l_1.d6l_1 + '/anims/' + this.s6k_1.y6k_1 + '.json', this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.w6k_1 = suspendResult;
            this.l7_1 = 5;
            this.k7_1 = 4;
            continue $sm;
          case 2:
            this.l7_1 = 5;
            var tmp_0 = this.n7_1;
            if (tmp_0 instanceof Error) {
              this.x6k_1 = this.n7_1;
              this.k7_1 = 3;
              suspendResult = loadAndPrepareAnims(this.u6k_1, this.s6k_1, 'anims/' + this.s6k_1.y6k_1 + '.json', this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              throw this.n7_1;
            }

            break;
          case 3:
            this.w6k_1 = suspendResult;
            this.k7_1 = 4;
            continue $sm;
          case 4:
            this.l7_1 = 5;
            var ARGUMENT = this.w6k_1;
            this.v6k_1.b4(ARGUMENT);
            var tmp0_map = this.s6k_1.a6l_1;
            var tmp0_mapTo = ArrayList_init_$Create$(tmp0_map.m());
            var tmp0_iterator = tmp0_map.a1().h();
            while (tmp0_iterator.n()) {
              var item = tmp0_iterator.o();
              tmp0_mapTo.b(item.l2() + ' len: ' + item.n2().m());
            }

            println('loaded anims: ' + joinToString$default(tmp0_mapTo, '\n', null, null, 0, null, null, 62, null));
            return Unit_getInstance();
          case 5:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 5) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  $loadAnimationsCOROUTINE$0.$metadata$ = classMeta('$loadAnimationsCOROUTINE$0', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $loadAndPrepareAnimsCOROUTINE$1(_this__u8e3s4, _this__u8e3s4_0, assetPath, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.g6k_1 = _this__u8e3s4;
    this.h6k_1 = _this__u8e3s4_0;
    this.i6k_1 = assetPath;
  }
  $loadAndPrepareAnimsCOROUTINE$1.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 2;
            var tmp_0 = this;
            tmp_0.j6k_1 = Default_getInstance();
            this.k7_1 = 1;
            suspendResult = this.h6k_1.p1y(this.i6k_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var ARGUMENT = suspendResult;
            var ARGUMENT_0 = ensureNotNull(ARGUMENT);
            var ARGUMENT_1 = ARGUMENT_0.e6();
            var tmp1_decodeFromString = decodeToString(ARGUMENT_1);
            var tmp1_serializer = this.j6k_1.yn();
            var tmp0_cast = serializer(tmp1_serializer, createKType(getKClass(JsonObject), arrayOf([]), false));
            var root = this.j6k_1.xn(isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE(), tmp1_decodeFromString);
            var tmp_1 = root.p10('sequence');
            var frames = tmp_1 instanceof JsonObject ? tmp_1 : THROW_CCE();
            var tmp2_associateWith = frames.c3();
            var result = LinkedHashMap_init_$Create$(coerceAtLeast(mapCapacity(collectionSizeOrDefault(tmp2_associateWith, 10)), 16));
            var tmp0_iterator = tmp2_associateWith.h();
            while (tmp0_iterator.n()) {
              var element = tmp0_iterator.o();
              var tmp_2 = ensureNotNull(frames.p10(element));
              var tmp0_map = tmp_2 instanceof JsonArray ? tmp_2 : THROW_CCE();
              var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
              var tmp0_iterator_0 = tmp0_map.h();
              while (tmp0_iterator_0.n()) {
                var item = tmp0_iterator_0.o();
                tmp0_mapTo.b(get_int(get_jsonPrimitive(item)));
              }
              result.a(element, tmp0_mapTo);
            }

            return result;
          case 2:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 2) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  $loadAndPrepareAnimsCOROUTINE$1.$metadata$ = classMeta('$loadAndPrepareAnimsCOROUTINE$1', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function AnimationFrames(asset, tryDir) {
    this.y6k_1 = asset;
    this.z6k_1 = tryDir;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$_0();
    }
    tmp.a6l_1 = tmp$ret$0;
  }
  AnimationFrames.prototype.k6l = function (tileSpec, assetMgr, $cont) {
    var tmp = new $loadAnimationsCOROUTINE$0(this, tileSpec, assetMgr, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  AnimationFrames.$metadata$ = classMeta('AnimationFrames');
  function get_simpleTextureProps() {
    init_properties_App_kt_kz6q5v();
    return simpleTextureProps;
  }
  var simpleTextureProps;
  function get_simpleValueTextureProps() {
    init_properties_App_kt_kz6q5v();
    return simpleValueTextureProps;
  }
  var simpleValueTextureProps;
  var GameSpeed_SPEED_VERY_SLOW_instance;
  var GameSpeed_SPEED_SLOW_instance;
  var GameSpeed_SPEED_NORMAL_instance;
  var GameSpeed_SPEED_FAST_instance;
  var GameSpeed_SPEED_VERY_FAST_instance;
  function values() {
    return [GameSpeed_SPEED_VERY_SLOW_getInstance(), GameSpeed_SPEED_SLOW_getInstance(), GameSpeed_SPEED_NORMAL_getInstance(), GameSpeed_SPEED_FAST_getInstance(), GameSpeed_SPEED_VERY_FAST_getInstance()];
  }
  function valueOf(value) {
    switch (value) {
      case 'SPEED_VERY_SLOW':
        return GameSpeed_SPEED_VERY_SLOW_getInstance();
      case 'SPEED_SLOW':
        return GameSpeed_SPEED_SLOW_getInstance();
      case 'SPEED_NORMAL':
        return GameSpeed_SPEED_NORMAL_getInstance();
      case 'SPEED_FAST':
        return GameSpeed_SPEED_FAST_getInstance();
      case 'SPEED_VERY_FAST':
        return GameSpeed_SPEED_VERY_FAST_getInstance();
      default:
        GameSpeed_initEntries();
        THROW_ISE();
        break;
    }
  }
  var GameSpeed_entriesInitialized;
  function GameSpeed_initEntries() {
    if (GameSpeed_entriesInitialized)
      return Unit_getInstance();
    GameSpeed_entriesInitialized = true;
    GameSpeed_SPEED_VERY_SLOW_instance = new GameSpeed('SPEED_VERY_SLOW', 0, 14);
    GameSpeed_SPEED_SLOW_instance = new GameSpeed('SPEED_SLOW', 1, 18);
    GameSpeed_SPEED_NORMAL_instance = new GameSpeed('SPEED_NORMAL', 2, 23);
    GameSpeed_SPEED_FAST_instance = new GameSpeed('SPEED_FAST', 3, 29);
    GameSpeed_SPEED_VERY_FAST_instance = new GameSpeed('SPEED_VERY_FAST', 4, 35);
  }
  function GameSpeed(name, ordinal, fps) {
    Enum.call(this, name, ordinal);
    this.n6l_1 = fps;
  }
  GameSpeed.prototype.o6l = function () {
    return 1000 / this.n6l_1 | 0;
  };
  GameSpeed.prototype.p6l = function () {
    var tmp$ret$1;
    {
      var tmp0_lowercase = removePrefix(this.il(), 'SPEED_');
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_lowercase;
      }
      tmp$ret$1 = tmp$ret$0.toLowerCase();
    }
    var tmp = tmp$ret$1;
    var tmp_0 = _Char___init__impl__6a9atx(95);
    var tmp_1 = _Char___init__impl__6a9atx(32);
    return replace$default(tmp, tmp_0, tmp_1, false, 4, null);
  };
  GameSpeed.$metadata$ = classMeta('GameSpeed', undefined, undefined, undefined, undefined, Enum.prototype);
  function ViewSpec_init_$Init$(tileSize, visibleSize, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      tileSize = new Vec2i(20, 22);
    if (!(($mask0 & 2) === 0))
      visibleSize = new Vec2i(28, 18);
    ViewSpec.call($this, tileSize, visibleSize);
    return $this;
  }
  function ViewSpec_init_$Create$(tileSize, visibleSize, $mask0, $marker) {
    return ViewSpec_init_$Init$(tileSize, visibleSize, $mask0, $marker, Object.create(ViewSpec.prototype));
  }
  function ViewSpec(tileSize, visibleSize) {
    this.q6l_1 = tileSize;
    this.r6l_1 = visibleSize;
  }
  ViewSpec.prototype.s6l = function () {
    return this.q6l_1;
  };
  ViewSpec.prototype.t6l = function () {
    return this.r6l_1;
  };
  ViewSpec.prototype.u6l = function () {
    return imul(this.r6l_1.e23(), this.q6l_1.e23());
  };
  ViewSpec.prototype.v6l = function () {
    return imul(this.r6l_1.g23(), this.q6l_1.g23());
  };
  ViewSpec.$metadata$ = classMeta('ViewSpec');
  function State() {
  }
  State.prototype.w6l = function (obj) {
  };
  State.prototype.x6l = function (obj) {
  };
  State.$metadata$ = classMeta('State');
  function MainMenuState$exitState$lambda($tmp0_safe_receiver, $app) {
    return function (it) {
      $tmp0_safe_receiver.l4k($app.z6l_1);
      return Unit_getInstance();
    };
  }
  function MainMenuState$exitState$lambda_0($tmp1_safe_receiver, $app) {
    return function (it) {
      $tmp1_safe_receiver.l4k($app.z6l_1);
      return Unit_getInstance();
    };
  }
  function MainMenuState() {
    MainMenuState_instance = this;
    State.call(this);
    this.h6m_1 = false;
    this.i6m_1 = false;
    this.j6m_1 = false;
    this.k6m_1 = null;
    this.l6m_1 = null;
  }
  MainMenuState.prototype.m6m = function () {
    var tmp = this.k6m_1;
    var tmp0_safe_receiver = tmp instanceof MainMenuScene ? tmp : null;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.t6o_1;
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$();
    } else {
      tmp_0 = tmp1_elvis_lhs;
    }
    return tmp_0;
  };
  MainMenuState.prototype.g6p = function (app) {
    State.prototype.w6l.call(this, app);
    var game = new Game(app.e6m_1);
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_also = new MainMenuScene(app.e6m_1, game, app.z6l_1.q2d());
      {
      }
      {
        var tmp0_this = app.z6l_1;
        {
          var tmp0_plusAssign = tmp0_this.b2c_1;
          tmp0_plusAssign.b(tmp0_also);
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    tmp.k6m_1 = tmp$ret$0;
    var tmp0_safe_receiver = this.l6m_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      {
        {
        }
        var tmp0_this_0 = app.z6l_1;
        var tmp0_plusAssign_0 = tmp0_this_0.b2c_1;
        tmp0_plusAssign_0.b(tmp0_safe_receiver);
        tmp$ret$1 = Unit_getInstance();
      }
    }
    game.l4q();
  };
  MainMenuState.prototype.w6l = function (obj) {
    return this.g6p(obj instanceof App ? obj : THROW_CCE());
  };
  MainMenuState.prototype.w6p = function (app) {
    State.prototype.x6l.call(this, app);
    var tmp0_safe_receiver = this.l6m_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        var tmp0_this = app.z6l_1;
        {
          var tmp0_minusAssign = tmp0_this.b2c_1;
          tmp0_minusAssign.c4(tmp0_safe_receiver);
        }
        tmp$ret$0 = app.z6l_1.g2f(1, MainMenuState$exitState$lambda(tmp0_safe_receiver, app));
      }
    }
    this.l6m_1 = null;
    var tmp1_safe_receiver = this.k6m_1;
    if (tmp1_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      {
        {
        }
        var tmp0_this_0 = app.z6l_1;
        {
          var tmp0_minusAssign_0 = tmp0_this_0.b2c_1;
          tmp0_minusAssign_0.c4(tmp1_safe_receiver);
        }
        tmp$ret$1 = app.z6l_1.g2f(1, MainMenuState$exitState$lambda_0(tmp1_safe_receiver, app));
      }
    }
    this.k6m_1 = null;
  };
  MainMenuState.prototype.x6l = function (obj) {
    return this.w6p(obj instanceof App ? obj : THROW_CCE());
  };
  MainMenuState.prototype.x6p = function (obj) {
    if (this.i6m_1 ? true : this.h6m_1) {
      if (this.i6m_1 ? true : obj.e6m_1.g6q_1.b3s_1 <= 0) {
        var tmp$ret$0;
        {
          var tmp0_with = obj.e6m_1;
          {
          }
          tmp0_with.c6q_1.m1e(MainMenuState_getInstance().m6m().i6q_1.b3s_1);
          tmp0_with.b6q_1.m1e(MainMenuState_getInstance().m6m().h6q_1.b3s_1);
          tmp0_with.g6q_1.m1e(get_START_HEALTH());
          tmp$ret$0 = tmp0_with.z6p_1.m1e(0);
        }
      }
      this.i6m_1 = false;
      this.h6m_1 = false;
      return RunGameState_getInstance();
    }
    if (this.j6m_1) {
      this.j6m_1 = false;
      return Exit_getInstance();
    }
    return null;
  };
  MainMenuState.prototype.y6l = function (obj) {
    return this.x6p(obj instanceof App ? obj : THROW_CCE());
  };
  MainMenuState.$metadata$ = objectMeta('MainMenuState', undefined, undefined, undefined, undefined, State.prototype);
  var MainMenuState_instance;
  function MainMenuState_getInstance() {
    if (MainMenuState_instance == null)
      new MainMenuState();
    return MainMenuState_instance;
  }
  function RunGameState$enterState$lambda() {
    return function ($this$UiScene) {
      var tmp0_safe_receiver = RunGameState_getInstance().j6q_1;
      var tmp;
      if (tmp0_safe_receiver == null) {
        tmp = null;
      } else {
        tmp0_safe_receiver.z6s($this$UiScene);
        tmp = Unit_getInstance();
      }
      ensureNotNull(tmp);
      return Unit_getInstance();
    };
  }
  function RunGameState$enterState$lambda_0($app) {
    return function (it) {
      var tmp;
      if (RunGameState_getInstance().l6q_1 == null) {
        tmp = Unit_getInstance();
      } else if (it.p26()) {
        var tmp_0;
        if (contains($app.z6l_1.b2c_1, RunGameState_getInstance().l6q_1)) {
          var tmp0_this = $app.z6l_1;
          var tmp0_minusAssign = tmp0_this.b2c_1;
          var tmp1_minusAssign = ensureNotNull(RunGameState_getInstance().l6q_1);
          tmp0_minusAssign.c4(tmp1_minusAssign);
          tmp_0 = Unit_getInstance();
        } else {
          var tmp1_this = $app.z6l_1;
          var tmp2_plusAssign = tmp1_this.b2c_1;
          var tmp3_plusAssign = ensureNotNull(RunGameState_getInstance().l6q_1);
          tmp2_plusAssign.b(tmp3_plusAssign);
          tmp_0 = Unit_getInstance();
        }
        tmp = tmp_0;
      }
      return Unit_getInstance();
    };
  }
  function RunGameState$enterState$lambda_1($game) {
    return function (it) {
      var tmp;
      if (it.q26()) {
        var tmp_0;
        if ($game.a6t()) {
          RunGameState_getInstance().n6q_1 = true;
          tmp_0 = Unit_getInstance();
        }
        tmp = tmp_0;
      }
      return Unit_getInstance();
    };
  }
  function RunGameState$enterState$lambda$lambda() {
    return function (it) {
      RunGameState_getInstance().n6q_1 = true;
      return Unit_getInstance();
    };
  }
  function RunGameState$enterState$lambda_2($app) {
    return function ($this$null) {
      var tmp0_subject = $this$null.b6t_1;
      var tmp0 = tmp0_subject.y1();
      var tmp;
      if (tmp0 === 8) {
        var tmp_0 = numberToInt($app.z6l_1.a2c_1 * 7);
        tmp = $app.z6l_1.g2f(tmp_0, RunGameState$enterState$lambda$lambda());
      } else {
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function RunGameState$exitState$lambda($tmp0_safe_receiver, $tmp0_with) {
    return function (it) {
      $tmp0_safe_receiver.l4k($tmp0_with);
      return Unit_getInstance();
    };
  }
  function RunGameState$exitState$lambda_0($tmp1_safe_receiver, $tmp0_with) {
    return function (it) {
      $tmp1_safe_receiver.l4k($tmp0_with);
      return Unit_getInstance();
    };
  }
  function RunGameState$exitState$lambda_1($tmp2_safe_receiver, $tmp0_with) {
    return function (it) {
      $tmp2_safe_receiver.l4k($tmp0_with);
      return Unit_getInstance();
    };
  }
  function RunGameState() {
    RunGameState_instance = this;
    State.call(this);
    this.j6q_1 = null;
    this.k6q_1 = null;
    this.l6q_1 = null;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.m6q_1 = tmp$ret$0;
    this.n6q_1 = false;
  }
  RunGameState.prototype.g6p = function (app) {
    State.prototype.w6l.call(this, app);
    this.n6q_1 = false;
    var game = new Game(app.e6m_1);
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_apply = GameLevelScene_init_$Create$(game, app.z6l_1, null, app.e6m_1, 'level', 4, null);
      {
      }
      {
        tmp0_apply.p4q(new GameControls(game, app.z6l_1.r2d()));
      }
      tmp$ret$0 = tmp0_apply;
    }
    tmp.j6q_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp_1 = app.z6l_1.q2d();
    tmp_0.k6q_1 = GameUI_init_$Create$(game, tmp_1, app.e6m_1, null, 8, null);
    var tmp0_this = app.z6l_1;
    {
      var tmp1_plusAssign = tmp0_this.b2c_1;
      var tmp2_plusAssign = ensureNotNull(this.j6q_1);
      tmp1_plusAssign.b(tmp2_plusAssign);
    }
    var tmp1_this = app.z6l_1;
    {
      var tmp3_plusAssign = tmp1_this.b2c_1;
      var tmp4_plusAssign = ensureNotNull(this.k6q_1);
      tmp3_plusAssign.b(tmp4_plusAssign);
    }
    var tmp_2 = this;
    tmp_2.l6q_1 = UiScene$default(null, false, RunGameState$enterState$lambda(), 3, null);
    var tmp_3 = app.z6l_1.r2d();
    var tmp_4 = UniversalKeyCode_init_$Create$(_Char___init__impl__6a9atx(100));
    this.m6q_1.b(tmp_3.z2a(tmp_4, 'toggle debug', null, RunGameState$enterState$lambda_0(app), 4, null));
    var tmp_5 = app.z6l_1.r2d();
    var tmp_6 = Companion_getInstance().j29_1;
    this.m6q_1.b(tmp_5.z2a(tmp_6, 'escape', null, RunGameState$enterState$lambda_1(game), 4, null));
    var tmp2_this = game;
    {
      var tmp5_plusAssign = tmp2_this.u6p_1;
      tmp5_plusAssign.b(RunGameState$enterState$lambda_2(app));
    }
  };
  RunGameState.prototype.w6l = function (obj) {
    return this.g6p(obj instanceof App ? obj : THROW_CCE());
  };
  RunGameState.prototype.w6p = function (app) {
    State.prototype.x6l.call(this, app);
    var tmp$ret$3;
    {
      var tmp0_with = app.z6l_1;
      {
      }
      {
        var tmp0_forEach = RunGameState_getInstance().m6q_1;
        var tmp0_iterator = tmp0_forEach.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          {
            tmp0_with.r2d().a2b(element);
          }
        }
      }
      var tmp0_safe_receiver = RunGameState_getInstance().j6q_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$0;
        {
          {
          }
          var tmp0_this = tmp0_with;
          {
            var tmp0_minusAssign = tmp0_this.b2c_1;
            tmp0_minusAssign.c4(tmp0_safe_receiver);
          }
          tmp$ret$0 = tmp0_with.g2f(1, RunGameState$exitState$lambda(tmp0_safe_receiver, tmp0_with));
        }
      }
      RunGameState_getInstance().j6q_1 = null;
      var tmp1_safe_receiver = RunGameState_getInstance().k6q_1;
      if (tmp1_safe_receiver == null)
        null;
      else {
        var tmp$ret$1;
        {
          {
          }
          var tmp0_this_0 = tmp0_with;
          {
            var tmp0_minusAssign_0 = tmp0_this_0.b2c_1;
            tmp0_minusAssign_0.c4(tmp1_safe_receiver);
          }
          tmp$ret$1 = tmp0_with.g2f(1, RunGameState$exitState$lambda_0(tmp1_safe_receiver, tmp0_with));
        }
      }
      RunGameState_getInstance().k6q_1 = null;
      var tmp2_safe_receiver = RunGameState_getInstance().l6q_1;
      if (tmp2_safe_receiver == null)
        null;
      else {
        var tmp$ret$2;
        {
          {
          }
          var tmp0_this_1 = app.z6l_1;
          {
            var tmp0_minusAssign_1 = tmp0_this_1.b2c_1;
            tmp0_minusAssign_1.c4(tmp2_safe_receiver);
          }
          tmp$ret$2 = tmp0_with.g2f(1, RunGameState$exitState$lambda_1(tmp2_safe_receiver, tmp0_with));
        }
      }
      RunGameState_getInstance().l6q_1 = null;
      tmp$ret$3 = Unit_getInstance();
    }
  };
  RunGameState.prototype.x6l = function (obj) {
    return this.w6p(obj instanceof App ? obj : THROW_CCE());
  };
  RunGameState.prototype.x6p = function (app) {
    if (this.n6q_1)
      return MainMenuState_getInstance();
    return null;
  };
  RunGameState.prototype.y6l = function (obj) {
    return this.x6p(obj instanceof App ? obj : THROW_CCE());
  };
  RunGameState.$metadata$ = objectMeta('RunGameState', undefined, undefined, undefined, undefined, State.prototype);
  var RunGameState_instance;
  function RunGameState_getInstance() {
    if (RunGameState_instance == null)
      new RunGameState();
    return RunGameState_instance;
  }
  function Exit() {
    Exit_instance = this;
    State.call(this);
  }
  Exit.prototype.g6p = function (obj) {
    return obj.z6l_1.d2f();
  };
  Exit.prototype.w6l = function (obj) {
    return this.g6p(obj instanceof App ? obj : THROW_CCE());
  };
  Exit.prototype.x6p = function (obj) {
    return null;
  };
  Exit.prototype.y6l = function (obj) {
    return this.x6p(obj instanceof App ? obj : THROW_CCE());
  };
  Exit.$metadata$ = objectMeta('Exit', undefined, undefined, undefined, undefined, State.prototype);
  var Exit_instance;
  function Exit_getInstance() {
    if (Exit_instance == null)
      new Exit();
    return Exit_instance;
  }
  function GameSettings$speed$delegate$lambda() {
    return function (s) {
      var tmp$ret$0;
      {
        tmp$ret$0 = valueOf(s);
      }
      return tmp$ret$0;
    };
  }
  function GameSettings$spriteMode$delegate$lambda() {
    return function (s) {
      var tmp$ret$0;
      {
        tmp$ret$0 = valueOf_0(s);
      }
      return tmp$ret$0;
    };
  }
  function GameSettings$version$delegate$lambda() {
    return function (s) {
      var tmp$ret$0;
      {
        tmp$ret$0 = valueOf_1(s);
      }
      return tmp$ret$0;
    };
  }
  function GameSettings(settings) {
    this.g6t_1 = settings;
    var tmp = this;
    tmp.h6t_1 = int$default(this.g6t_1, null, 0, 1, null);
    var tmp_0 = this;
    tmp_0.i6t_1 = int$default(this.g6t_1, null, 0, 1, null);
    var tmp_1 = this;
    tmp_1.j6t_1 = int$default(this.g6t_1, null, get_START_HEALTH(), 1, null);
    var tmp_2 = this;
    var tmp$ret$0;
    {
      var tmp0_enumDelegate = this.g6t_1;
      var tmp1_enumDelegate = GameSpeed_SPEED_SLOW_getInstance();
      tmp$ret$0 = new EnumDelegate(tmp0_enumDelegate, null, tmp1_enumDelegate, GameSettings$speed$delegate$lambda());
    }
    tmp_2.k6t_1 = tmp$ret$0;
    var tmp_3 = this;
    var tmp$ret$1;
    {
      var tmp0_enumDelegate_0 = this.g6t_1;
      var tmp1_enumDelegate_0 = TileSet_SPRITES_APPLE2_getInstance();
      tmp$ret$1 = new EnumDelegate(tmp0_enumDelegate_0, null, tmp1_enumDelegate_0, GameSettings$spriteMode$delegate$lambda());
    }
    tmp_3.l6t_1 = tmp$ret$1;
    var tmp_4 = this;
    var tmp$ret$2;
    {
      var tmp0_enumDelegate_1 = this.g6t_1;
      var tmp1_enumDelegate_1 = LevelSet_CLASSIC_getInstance();
      tmp$ret$2 = new EnumDelegate(tmp0_enumDelegate_1, null, tmp1_enumDelegate_1, GameSettings$version$delegate$lambda());
    }
    tmp_4.m6t_1 = tmp$ret$2;
    var tmp_5 = this;
    tmp_5.n6t_1 = float$default(this.g6t_1, null, 60.0, 1, null);
    var tmp_6 = this;
    tmp_6.o6t_1 = boolean$default(this.g6t_1, null, false, 3, null);
    var tmp_7 = this;
    tmp_7.p6t_1 = boolean$default(this.g6t_1, null, true, 1, null);
    var tmp_8 = this;
    tmp_8.q6t_1 = boolean$default(this.g6t_1, null, false, 1, null);
    this.r6t_1 = 4;
    this.s6t_1 = 4;
  }
  GameSettings.prototype.t6t = function (_set____db54di) {
    return this.h6t_1.s8(this, curScore$factory(), _set____db54di);
  };
  GameSettings.prototype.u6t = function () {
    return this.h6t_1.r8(this, curScore$factory_0());
  };
  GameSettings.prototype.v6t = function (_set____db54di) {
    return this.i6t_1.s8(this, currentLevel$factory(), _set____db54di);
  };
  GameSettings.prototype.w6t = function () {
    return this.i6t_1.r8(this, currentLevel$factory_0());
  };
  GameSettings.prototype.x6t = function (_set____db54di) {
    return this.j6t_1.s8(this, runnerLifes$factory(), _set____db54di);
  };
  GameSettings.prototype.y6t = function () {
    return this.j6t_1.r8(this, runnerLifes$factory_0());
  };
  GameSettings.prototype.z6t = function (_set____db54di) {
    return this.k6t_1.e6u(this, speed$factory(), _set____db54di);
  };
  GameSettings.prototype.i5g = function () {
    return this.k6t_1.o2u(this, speed$factory_0());
  };
  GameSettings.prototype.f6u = function (_set____db54di) {
    return this.l6t_1.e6u(this, spriteMode$factory(), _set____db54di);
  };
  GameSettings.prototype.g6u = function () {
    return this.l6t_1.o2u(this, spriteMode$factory_0());
  };
  GameSettings.prototype.h6u = function (_set____db54di) {
    return this.m6t_1.e6u(this, version$factory(), _set____db54di);
  };
  GameSettings.prototype.i6u = function () {
    return this.m6t_1.o2u(this, version$factory_0());
  };
  GameSettings.prototype.j6u = function (_set____db54di) {
    return this.p6t_1.s8(this, immortal$factory(), _set____db54di);
  };
  GameSettings.prototype.k6u = function () {
    return this.p6t_1.r8(this, immortal$factory_0());
  };
  GameSettings.prototype.l6u = function (_set____db54di) {
    return this.q6t_1.s8(this, stopGuards$factory(), _set____db54di);
  };
  GameSettings.prototype.m6u = function () {
    return this.q6t_1.r8(this, stopGuards$factory_0());
  };
  GameSettings.$metadata$ = classMeta('GameSettings');
  function AppContext$score$lambda(this$0) {
    return function (it) {
      this$0.y6p_1.t6t(it);
      return Unit_getInstance();
    };
  }
  function AppContext$spriteMode$lambda(this$0) {
    return function (it) {
      this$0.y6p_1.f6u(it);
      return Unit_getInstance();
    };
  }
  function AppContext$levelSet$lambda(this$0) {
    return function (it) {
      this$0.y6p_1.h6u(it);
      return Unit_getInstance();
    };
  }
  function AppContext$currentLevel$lambda(this$0) {
    return function (it) {
      this$0.y6p_1.v6t(it);
      return Unit_getInstance();
    };
  }
  function AppContext$speed$lambda(this$0) {
    return function (it) {
      this$0.y6p_1.z6t(it);
      return Unit_getInstance();
    };
  }
  function AppContext$stopGuards$lambda(this$0) {
    return function (v) {
      this$0.y6p_1.l6u(v);
      return Unit_getInstance();
    };
  }
  function AppContext$immortal$lambda(this$0) {
    return function (v) {
      this$0.y6p_1.j6u(v);
      return Unit_getInstance();
    };
  }
  function AppContext$runnerLifes$lambda(this$0) {
    return function (v) {
      this$0.y6p_1.x6t(v);
      return Unit_getInstance();
    };
  }
  function AppContext(gameSettings) {
    this.y6p_1 = gameSettings;
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_also = mutableStateOf(this.y6p_1.u6t());
      {
      }
      {
        tmp0_also.h3s(AppContext$score$lambda(this));
      }
      tmp$ret$0 = tmp0_also;
    }
    tmp.z6p_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      var tmp0_also_0 = mutableStateOf(this.y6p_1.g6u());
      {
      }
      {
        tmp0_also_0.h3s(AppContext$spriteMode$lambda(this));
      }
      tmp$ret$1 = tmp0_also_0;
    }
    tmp_0.a6q_1 = tmp$ret$1;
    var tmp_1 = this;
    var tmp$ret$2;
    {
      var tmp0_also_1 = mutableStateOf(this.y6p_1.i6u());
      {
      }
      {
        tmp0_also_1.h3s(AppContext$levelSet$lambda(this));
      }
      tmp$ret$2 = tmp0_also_1;
    }
    tmp_1.b6q_1 = tmp$ret$2;
    var tmp_2 = this;
    var tmp$ret$3;
    {
      var tmp0_also_2 = mutableStateOf(this.y6p_1.w6t());
      {
      }
      {
        tmp0_also_2.h3s(AppContext$currentLevel$lambda(this));
      }
      tmp$ret$3 = tmp0_also_2;
    }
    tmp_2.c6q_1 = tmp$ret$3;
    var tmp_3 = this;
    var tmp$ret$4;
    {
      var tmp0_also_3 = mutableStateOf(this.y6p_1.i5g());
      {
      }
      {
        tmp0_also_3.h3s(AppContext$speed$lambda(this));
      }
      tmp$ret$4 = tmp0_also_3;
    }
    tmp_3.d6q_1 = tmp$ret$4;
    var tmp_4 = this;
    var tmp$ret$5;
    {
      var tmp0_also_4 = new MutableStateValue(this.y6p_1.m6u());
      {
      }
      {
        tmp0_also_4.h3s(AppContext$stopGuards$lambda(this));
      }
      tmp$ret$5 = tmp0_also_4;
    }
    tmp_4.e6q_1 = tmp$ret$5;
    var tmp_5 = this;
    var tmp$ret$6;
    {
      var tmp0_also_5 = new MutableStateValue(this.y6p_1.k6u());
      {
      }
      {
        tmp0_also_5.h3s(AppContext$immortal$lambda(this));
      }
      tmp$ret$6 = tmp0_also_5;
    }
    tmp_5.f6q_1 = tmp$ret$6;
    var tmp_6 = this;
    var tmp$ret$7;
    {
      var tmp0_also_6 = new MutableStateValue(this.y6p_1.y6t());
      {
      }
      {
        tmp0_also_6.h3s(AppContext$runnerLifes$lambda(this));
      }
      tmp$ret$7 = tmp0_also_6;
    }
    tmp_6.g6q_1 = tmp$ret$7;
  }
  AppContext.prototype.n6u = function () {
    return this.y6p_1;
  };
  AppContext.prototype.m6u = function () {
    return this.e6q_1;
  };
  AppContext.prototype.k6u = function () {
    return this.f6q_1;
  };
  AppContext.$metadata$ = classMeta('AppContext');
  function App$Companion$bg$slambda(resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
  }
  App$Companion$bg$slambda.prototype.v54 = function ($this$$receiver, it, $cont) {
    var tmp = this.w54($this$$receiver, it, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  App$Companion$bg$slambda.prototype.kc = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE();
    return this.v54(tmp, p2 instanceof AssetManager ? p2 : THROW_CCE(), $cont);
  };
  App$Companion$bg$slambda.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 2;
            this.k7_1 = 1;
            suspendResult = this.x6u_1.q1y('images/cover.jpg', get_simpleTextureProps().b54_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return suspendResult;
          case 2:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 2) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  App$Companion$bg$slambda.prototype.w54 = function ($this$$receiver, it, completion) {
    var i = new App$Companion$bg$slambda(completion);
    i.w6u_1 = $this$$receiver;
    i.x6u_1 = it;
    return i;
  };
  App$Companion$bg$slambda.$metadata$ = classMeta('App$Companion$bg$slambda', undefined, undefined, undefined, [2], CoroutineImpl.prototype);
  function App$Companion$bg$slambda_0(resultContinuation) {
    var i = new App$Companion$bg$slambda(resultContinuation);
    var l = function ($this$$receiver, it, $cont) {
      return i.v54($this$$receiver, it, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function App$Companion$bg$lambda($this_bg) {
    return function ($this$null, w, h) {
      var tmp$ret$0;
      {
        tmp$ret$0 = Math.min(w, h);
      }
      var imageMinSide = tmp$ret$0;
      var tmp$ret$1;
      {
        var tmp = $this_bg.t2e_1;
        var tmp0_max = get_width(tmp instanceof OrthographicCamera ? tmp : THROW_CCE());
        var tmp_0 = $this_bg.t2e_1;
        var tmp1_max = get_height(tmp_0 instanceof OrthographicCamera ? tmp_0 : THROW_CCE());
        tmp$ret$1 = Math.max(tmp0_max, tmp1_max);
      }
      var camSide = tmp$ret$1;
      $this$null.o4r().q2g();
      $this$null.y2j(camSide / imageMinSide);
      return Unit_getInstance();
    };
  }
  var AppActions_EXIT_instance;
  function values_0() {
    return [AppActions_EXIT_getInstance()];
  }
  function App$AppActions$lambda() {
    return function ($this$null, it) {
      $this$null.g6m_1.c6v();
      changeState($this$null, MainMenuState_getInstance());
      return Unit_getInstance();
    };
  }
  function App$AppActions$lambda_0() {
    return function ($this$null, it) {
      return Unit_getInstance();
    };
  }
  var AppActions_entriesInitialized;
  function AppActions_initEntries() {
    if (AppActions_entriesInitialized)
      return Unit_getInstance();
    AppActions_entriesInitialized = true;
    var tmp = toInputSpec(Companion_getInstance().r29_1, new Int32Array([]));
    var tmp_0 = App$AppActions$lambda();
    AppActions_EXIT_instance = new AppActions('EXIT', 0, tmp, tmp_0, App$AppActions$lambda_0());
  }
  function GameCamera() {
    OrthographicCamera.call(this, 'plain');
  }
  GameCamera.$metadata$ = classMeta('GameCamera', undefined, undefined, undefined, undefined, OrthographicCamera.prototype);
  function Companion() {
    Companion_instance = this;
  }
  Companion.prototype.d6v = function (width, height) {
    var tmp$ret$0;
    {
      var tmp0_apply = new GameCamera();
      {
      }
      {
        tmp0_apply.t4y(ProjCorrectionMode_ONSCREEN_getInstance());
        tmp0_apply.t5b(false);
        tmp0_apply.u5b(true);
        var hw = width / 2.0;
        tmp0_apply.s5b(height * 1.0);
        tmp0_apply.r5b(0.0);
        tmp0_apply.p5b(-hw);
        tmp0_apply.q5b(hw);
        tmp0_apply.k5c(10.0);
        tmp0_apply.j5c(0.1);
      }
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0;
  };
  Companion.prototype.e6v = function (_this__u8e3s4) {
    var tmp$ret$0;
    {
      var tmp = get_simpleTextureProps();
      var tmp_0 = Texture2d_init_$Create$(tmp, null, App$Companion$bg$slambda_0(null), 2, null);
      var tmp0_apply = sprite$default(tmp_0, 'bg', null, null, false, 28, null);
      {
      }
      {
        tmp0_apply.g6w_1 = true;
        var tmp0_this = tmp0_apply;
        {
          var tmp0_plusAssign = tmp0_this.k6w_1;
          tmp0_plusAssign.b(App$Companion$bg$lambda(_this__u8e3s4));
        }
      }
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0;
  };
  Companion.$metadata$ = objectMeta('Companion');
  var Companion_instance;
  function Companion_getInstance_8() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function changeState($this, newState) {
    var tmp0_safe_receiver = $this.f6m_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.x6l($this);
    }
    $this.f6m_1 = newState;
    var tmp1_safe_receiver = $this.f6m_1;
    if (tmp1_safe_receiver == null)
      null;
    else {
      tmp1_safe_receiver.w6l($this);
    }
  }
  function expect($this, cond, msg) {
    if (!cond)
      throw AssertionError_init_$Create$(msg());
  }
  function expect$default($this, cond, msg, $mask0, $handler) {
    if (!(($mask0 & 4) === 0)) {
      msg = App$expect$lambda();
    }
    return expect($this, cond, msg);
  }
  function AppActions(name, ordinal, keyCode, onPress, onRelease) {
    Enum.call(this, name, ordinal);
    this.n6w_1 = keyCode;
    this.o6w_1 = onPress;
    this.p6w_1 = onRelease;
  }
  AppActions.prototype.q6w = function () {
    return this.n6w_1;
  };
  AppActions.prototype.r6w = function () {
    return this.o6w_1;
  };
  AppActions.prototype.s6w = function () {
    return this.p6w_1;
  };
  AppActions.$metadata$ = classMeta('AppActions', [Action], undefined, undefined, undefined, Enum.prototype);
  function App$fsm$lambda$lambda$lambda() {
    return function (it) {
      return Unit_getInstance();
    };
  }
  function App$fsm$lambda$lambda$lambda_0() {
    return function (it) {
      return Unit_getInstance();
    };
  }
  function App$fsm$lambda$lambda$lambda_1() {
    return function ($this$edge) {
      return Unit_getInstance();
    };
  }
  function App$fsm$lambda$lambda() {
    return function ($this$state) {
      $this$state.t6w(App$fsm$lambda$lambda$lambda());
      $this$state.u6w(App$fsm$lambda$lambda$lambda_0());
      $this$state.v6w('play game', false, 0, App$fsm$lambda$lambda$lambda_1(), 6, null);
      return Unit_getInstance();
    };
  }
  function App$fsm$lambda$lambda$lambda_2() {
    return function (it) {
      return Unit_getInstance();
    };
  }
  function App$fsm$lambda$lambda$lambda_3() {
    return function (it) {
      return Unit_getInstance();
    };
  }
  function App$fsm$lambda$lambda_0() {
    return function ($this$state) {
      $this$state.t6w(App$fsm$lambda$lambda$lambda_2());
      $this$state.u6w(App$fsm$lambda$lambda$lambda_3());
      return Unit_getInstance();
    };
  }
  function App$fsm$lambda() {
    return function ($this$buildStateMachine) {
      $this$buildStateMachine.w6w('mainmenu', App$fsm$lambda$lambda());
      $this$buildStateMachine.w6w('play game', App$fsm$lambda$lambda_0());
      return Unit_getInstance();
    };
  }
  function App$lambda(this$0) {
    return function (it) {
      var tmp0_safe_receiver = this$0.f6m_1;
      var newState = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.y6l(this$0);
      var tmp1_safe_receiver = newState;
      if (tmp1_safe_receiver == null)
        null;
      else {
        var tmp$ret$0;
        {
          {
          }
          tmp$ret$0 = changeState(this$0, tmp1_safe_receiver);
        }
      }
      return Unit_getInstance();
    };
  }
  function App$slambda(this$0, resultContinuation) {
    this.f6x_1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  App$slambda.prototype.d1v = function ($this$launch, $cont) {
    var tmp = this.e1v($this$launch, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  App$slambda.prototype.s7 = function (p1, $cont) {
    return this.d1v((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  App$slambda.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 2;
            this.k7_1 = 1;
            suspendResult = this.f6x_1.h6x(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return Unit_getInstance();
          case 2:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 2) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  App$slambda.prototype.e1v = function ($this$launch, completion) {
    var i = new App$slambda(this.f6x_1, completion);
    i.g6x_1 = $this$launch;
    return i;
  };
  App$slambda.$metadata$ = classMeta('App$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function App$slambda_0(this$0, resultContinuation) {
    var i = new App$slambda(this$0, resultContinuation);
    var l = function ($this$launch, $cont) {
      return i.d1v($this$launch, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function App$test2$lambda($item, $resultProbs, $tmp1__anonymous__6ijp4k, $eps) {
    return function () {
      return 'expect ' + $item + ' but got ' + $resultProbs.b3($tmp1__anonymous__6ijp4k) + ' (eps = ' + $eps + ')';
    };
  }
  function App$test3$lambda($a, $b) {
    return function () {
      return 'expect ' + $a + '.hashCode = ' + contentHashCode($a) + ' == ' + $b + '.hashCode = ' + contentHashCode($b);
    };
  }
  function App$expect$lambda() {
    return function () {
      return 'assert error';
    };
  }
  function AppActions_EXIT_getInstance() {
    AppActions_initEntries();
    return AppActions_EXIT_instance;
  }
  function $test4COROUTINE$2(_this__u8e3s4, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.q6x_1 = _this__u8e3s4;
  }
  $test4COROUTINE$2.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 4;
            this.r6x_1 = new LevelsRep(this.q6x_1.z6l_1.q2d(), this.q6x_1.b6m_1);
            this.s6x_1 = arrayIterator(values_2());
            this.k7_1 = 1;
            continue $sm;
          case 1:
            if (!this.s6x_1.n()) {
              this.k7_1 = 3;
              continue $sm;
            }

            this.t6x_1 = this.s6x_1.o();
            this.k7_1 = 2;
            suspendResult = this.r6x_1.y6x(this.t6x_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            println(this.t6x_1.p6l() + ' has ' + this.r6x_1.w6x_1.m() + ' levels:');
            var tmp0_forEachIndexed = this.r6x_1.w6x_1;
            var index = 0;
            var tmp0_iterator = tmp0_forEachIndexed.h();
            while (tmp0_iterator.n()) {
              var item = tmp0_iterator.o();
              var tmp1 = index;
              index = tmp1 + 1 | 0;
              var tmp1__anonymous__uwfjfc = checkIndexOverflow(tmp1);
              println('level #' + (tmp1__anonymous__uwfjfc + 1 | 0) + ': ' + first(item).length + 'x' + item.m());
            }

            println_0();
            this.k7_1 = 1;
            continue $sm;
          case 3:
            return Unit_getInstance();
          case 4:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 4) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  $test4COROUTINE$2.$metadata$ = classMeta('$test4COROUTINE$2', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function App(ctx) {
    Companion_getInstance_8();
    this.z6l_1 = ctx;
    var tmp = this;
    tmp.a6m_1 = Job$default(null, 1, null);
    this.b6m_1 = CoroutineScope_0(this.a6m_1);
    this.c6m_1 = Settings();
    this.d6m_1 = new GameSettings(this.c6m_1);
    this.e6m_1 = new AppContext(this.d6m_1);
    this.f6m_1 = null;
    var tmp_0 = this;
    tmp_0.g6m_1 = buildStateMachine('mainmenu', App$fsm$lambda());
    this.c6y();
    this.d6y(null, 1, null);
    registerActions(this.z6l_1.r2d(), this, asIterable(values_0()));
    changeState(this, MainMenuState_getInstance());
    var tmp0_this = this.z6l_1;
    {
      var tmp0_plusAssign = tmp0_this.z2b_1;
      tmp0_plusAssign.b(App$lambda(this));
    }
    launch$default(this.b6m_1, null, null, App$slambda_0(this, null), 3, null);
    this.z6l_1.m1c();
    this.a6m_1.v18(null, 1, null);
    this.e6y();
  }
  App.prototype.r52 = function () {
    return this.z6l_1;
  };
  App.prototype.e6y = function () {
    var tmp = (new ViewCell(false, 0)).h6y() === get_b(0);
    expect$default(this, tmp, null, 4, null);
    var tmp_0 = (new ViewCell(false, 16)).h6y() === get_b(16);
    expect$default(this, tmp_0, null, 4, null);
    var tmp_1 = (new ViewCell(false, 127)).h6y() === get_b(127);
    expect$default(this, tmp_1, null, 4, null);
  };
  App.prototype.i6y = function (choices) {
    var steps = 10000;
    var eps = 100.0 / steps;
    var r = Random(0);
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$_0();
    }
    var results = tmp$ret$0;
    {
      var tmp0_forEach = until(0, steps);
      var inductionVariable = tmp0_forEach.i9();
      var last = tmp0_forEach.k9();
      if (inductionVariable <= last)
        do {
          var element = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          {
            var c = choice(r, choices);
            {
              var tmp$ret$2;
              {
                var value = results.b3(c);
                var tmp;
                if (value == null) {
                  var tmp$ret$1;
                  {
                    tmp$ret$1 = 0;
                  }
                  var answer = tmp$ret$1;
                  results.a(c, answer);
                  tmp = answer;
                } else {
                  tmp = value;
                }
                tmp$ret$2 = tmp;
              }
              var tmp0_set = tmp$ret$2 + 1 | 0;
              results.a(c, tmp0_set);
            }
          }
        }
         while (!(element === last));
    }
    var t = sum(choices);
    var tmp$ret$5;
    {
      var tmp$ret$4;
      {
        var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(choices, 10));
        var tmp0_iterator = choices.h();
        while (tmp0_iterator.n()) {
          var item = tmp0_iterator.o();
          var tmp$ret$3;
          {
            tmp$ret$3 = item / t;
          }
          tmp0_mapTo.b(tmp$ret$3);
        }
        tmp$ret$4 = tmp0_mapTo;
      }
      tmp$ret$5 = tmp$ret$4;
    }
    var expectedProbs = tmp$ret$5;
    println(expectedProbs);
    var rt = sum(results.d3());
    var tmp$ret$9;
    {
      var tmp$ret$8;
      {
        var tmp0_mapTo_0 = ArrayList_init_$Create$(results.m());
        var tmp$ret$6;
        {
          tmp$ret$6 = results.a1().h();
        }
        var tmp0_iterator_0 = tmp$ret$6;
        while (tmp0_iterator_0.n()) {
          var item_0 = tmp0_iterator_0.o();
          var tmp$ret$7;
          {
            tmp$ret$7 = to(item_0.l2(), item_0.n2() / rt);
          }
          tmp0_mapTo_0.b(tmp$ret$7);
        }
        tmp$ret$8 = tmp0_mapTo_0;
      }
      tmp$ret$9 = tmp$ret$8;
    }
    var resultProbs = toMap(tmp$ret$9);
    {
      var index = 0;
      var tmp0_iterator_1 = expectedProbs.h();
      while (tmp0_iterator_1.n()) {
        var item_1 = tmp0_iterator_1.o();
        {
          var tmp1 = index;
          index = tmp1 + 1 | 0;
          var tmp1__anonymous__uwfjfc = checkIndexOverflow(tmp1);
          var tmp$ret$11;
          {
            var tmp0_isFuzzyZero = item_1 - ensureNotNull(resultProbs.b3(tmp1__anonymous__uwfjfc));
            var tmp$ret$10;
            {
              tmp$ret$10 = Math.abs(tmp0_isFuzzyZero);
            }
            tmp$ret$11 = tmp$ret$10 <= eps;
          }
          var tmp_0 = tmp$ret$11;
          expect(this, tmp_0, App$test2$lambda(item_1, resultProbs, tmp1__anonymous__uwfjfc, eps));
        }
      }
    }
  };
  App.prototype.d6y = function (choices, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      choices = listOf([100, 200, 50, 1000]);
    return this.i6y(choices);
  };
  App.prototype.c6y = function () {
    var tmp$ret$2;
    {
      var tmp0_arrayOf = [Tile_LADDER_getInstance(), Tile_BRICK_getInstance()];
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_arrayOf;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    var a = tmp$ret$2;
    var tmp$ret$5;
    {
      var tmp1_arrayOf = [Tile_LADDER_getInstance(), Tile_BRICK_getInstance()];
      var tmp$ret$4;
      {
        var tmp$ret$3;
        {
          tmp$ret$3 = tmp1_arrayOf;
        }
        tmp$ret$4 = tmp$ret$3;
      }
      tmp$ret$5 = tmp$ret$4;
    }
    var b = tmp$ret$5;
    var tmp$ret$8;
    {
      var tmp2_arrayOf = [Tile_EMPTY_getInstance(), Tile_PLAYER_getInstance()];
      var tmp$ret$7;
      {
        var tmp$ret$6;
        {
          tmp$ret$6 = tmp2_arrayOf;
        }
        tmp$ret$7 = tmp$ret$6;
      }
      tmp$ret$8 = tmp$ret$7;
    }
    var c = tmp$ret$8;
    var tmp = contentHashCode(a) === contentHashCode(b);
    expect(this, tmp, App$test3$lambda(a, b));
    var tmp_0 = !(contentHashCode(a) === contentHashCode(c));
    expect$default(this, tmp_0, null, 4, null);
    var tmp_1 = !(contentHashCode(b) === contentHashCode(c));
    expect$default(this, tmp_1, null, 4, null);
  };
  App.prototype.h6x = function ($cont) {
    var tmp = new $test4COROUTINE$2(this, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  App.$metadata$ = classMeta('App');
  function Action() {
  }
  Action.$metadata$ = interfaceMeta('Action');
  function registerActions(inputManager, root, actions) {
    init_properties_App_kt_kz6q5v();
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(actions, 10));
        var tmp0_iterator = actions.h();
        while (tmp0_iterator.n()) {
          var item = tmp0_iterator.o();
          var tmp$ret$0;
          {
            var tmp = item.q6w().j6y_1;
            var tmp_0 = item.il();
            var tmp_1 = registerActions$lambda(item);
            tmp$ret$0 = inputManager.y2a(tmp, tmp_0, tmp_1, registerActions$lambda_0(item, root));
          }
          tmp0_mapTo.b(tmp$ret$0);
        }
        tmp$ret$1 = tmp0_mapTo;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  }
  function unregisterActions(inputManager, actions) {
    init_properties_App_kt_kz6q5v();
    {
      var tmp0_iterator = actions.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          inputManager.a2b(element);
        }
      }
    }
  }
  function registerActions$lambda($item) {
    return function (ev) {
      return ev.p26() ? (($item.q6w().k6y_1 | ev.l26_1) ^ $item.q6w().k6y_1) === 0 : false;
    };
  }
  function registerActions$lambda_0($item, $root) {
    return function (ev) {
      if (ev.q26())
        $item.s6w()($root, ev);
      else if (ev.p26())
        $item.r6w()($root, ev);
      return Unit_getInstance();
    };
  }
  function GameSpeed_SPEED_VERY_SLOW_getInstance() {
    GameSpeed_initEntries();
    return GameSpeed_SPEED_VERY_SLOW_instance;
  }
  function GameSpeed_SPEED_SLOW_getInstance() {
    GameSpeed_initEntries();
    return GameSpeed_SPEED_SLOW_instance;
  }
  function GameSpeed_SPEED_NORMAL_getInstance() {
    GameSpeed_initEntries();
    return GameSpeed_SPEED_NORMAL_instance;
  }
  function GameSpeed_SPEED_FAST_getInstance() {
    GameSpeed_initEntries();
    return GameSpeed_SPEED_FAST_instance;
  }
  function GameSpeed_SPEED_VERY_FAST_getInstance() {
    GameSpeed_initEntries();
    return GameSpeed_SPEED_VERY_FAST_instance;
  }
  function curScore$factory() {
    return getPropertyCallableRef('curScore', 1, KMutableProperty1, function (receiver) {
      return receiver.u6t();
    }, function (receiver, value) {
      return receiver.t6t(value);
    });
  }
  function curScore$factory_0() {
    return getPropertyCallableRef('curScore', 1, KMutableProperty1, function (receiver) {
      return receiver.u6t();
    }, function (receiver, value) {
      return receiver.t6t(value);
    });
  }
  function currentLevel$factory() {
    return getPropertyCallableRef('currentLevel', 1, KMutableProperty1, function (receiver) {
      return receiver.w6t();
    }, function (receiver, value) {
      return receiver.v6t(value);
    });
  }
  function currentLevel$factory_0() {
    return getPropertyCallableRef('currentLevel', 1, KMutableProperty1, function (receiver) {
      return receiver.w6t();
    }, function (receiver, value) {
      return receiver.v6t(value);
    });
  }
  function runnerLifes$factory() {
    return getPropertyCallableRef('runnerLifes', 1, KMutableProperty1, function (receiver) {
      return receiver.y6t();
    }, function (receiver, value) {
      return receiver.x6t(value);
    });
  }
  function runnerLifes$factory_0() {
    return getPropertyCallableRef('runnerLifes', 1, KMutableProperty1, function (receiver) {
      return receiver.y6t();
    }, function (receiver, value) {
      return receiver.x6t(value);
    });
  }
  function speed$factory() {
    return getPropertyCallableRef('speed', 1, KMutableProperty1, function (receiver) {
      return receiver.i5g();
    }, function (receiver, value) {
      return receiver.z6t(value);
    });
  }
  function speed$factory_0() {
    return getPropertyCallableRef('speed', 1, KMutableProperty1, function (receiver) {
      return receiver.i5g();
    }, function (receiver, value) {
      return receiver.z6t(value);
    });
  }
  function spriteMode$factory() {
    return getPropertyCallableRef('spriteMode', 1, KMutableProperty1, function (receiver) {
      return receiver.g6u();
    }, function (receiver, value) {
      return receiver.f6u(value);
    });
  }
  function spriteMode$factory_0() {
    return getPropertyCallableRef('spriteMode', 1, KMutableProperty1, function (receiver) {
      return receiver.g6u();
    }, function (receiver, value) {
      return receiver.f6u(value);
    });
  }
  function version$factory() {
    return getPropertyCallableRef('version', 1, KMutableProperty1, function (receiver) {
      return receiver.i6u();
    }, function (receiver, value) {
      return receiver.h6u(value);
    });
  }
  function version$factory_0() {
    return getPropertyCallableRef('version', 1, KMutableProperty1, function (receiver) {
      return receiver.i6u();
    }, function (receiver, value) {
      return receiver.h6u(value);
    });
  }
  function immortal$factory() {
    return getPropertyCallableRef('immortal', 1, KMutableProperty1, function (receiver) {
      return receiver.k6u();
    }, function (receiver, value) {
      return receiver.j6u(value);
    });
  }
  function immortal$factory_0() {
    return getPropertyCallableRef('immortal', 1, KMutableProperty1, function (receiver) {
      return receiver.k6u();
    }, function (receiver, value) {
      return receiver.j6u(value);
    });
  }
  function stopGuards$factory() {
    return getPropertyCallableRef('stopGuards', 1, KMutableProperty1, function (receiver) {
      return receiver.m6u();
    }, function (receiver, value) {
      return receiver.l6u(value);
    });
  }
  function stopGuards$factory_0() {
    return getPropertyCallableRef('stopGuards', 1, KMutableProperty1, function (receiver) {
      return receiver.m6u();
    }, function (receiver, value) {
      return receiver.l6u(value);
    });
  }
  var properties_initialized_App_kt_kalemn;
  function init_properties_App_kt_kz6q5v() {
    if (properties_initialized_App_kt_kalemn) {
    } else {
      properties_initialized_App_kt_kalemn = true;
      simpleTextureProps = new TextureProps(TexFormat_RGBA_getInstance(), AddressMode_CLAMP_TO_EDGE_getInstance(), AddressMode_CLAMP_TO_EDGE_getInstance(), AddressMode_CLAMP_TO_EDGE_getInstance(), FilterMethod_NEAREST_getInstance(), FilterMethod_NEAREST_getInstance(), false, 1);
      simpleValueTextureProps = new TextureProps(TexFormat_R_getInstance(), AddressMode_CLAMP_TO_EDGE_getInstance(), AddressMode_CLAMP_TO_EDGE_getInstance(), AddressMode_CLAMP_TO_EDGE_getInstance(), FilterMethod_NEAREST_getInstance(), FilterMethod_NEAREST_getInstance(), false, 1);
    }
  }
  function TileSet_init_$Init$(name, ordinal, path, tileWidth, tileHeight, $mask0, $marker, $this) {
    if (!(($mask0 & 8) === 0))
      tileWidth = 20;
    if (!(($mask0 & 16) === 0))
      tileHeight = 22;
    TileSet.call($this, name, ordinal, path, tileWidth, tileHeight);
    return $this;
  }
  function TileSet_init_$Create$(name, ordinal, path, tileWidth, tileHeight, $mask0, $marker) {
    return TileSet_init_$Init$(name, ordinal, path, tileWidth, tileHeight, $mask0, $marker, Object.create(TileSet.prototype));
  }
  var TileSet_SPRITES_APPLE2_instance;
  var TileSet_SPRITES_ATARI8BIT_instance;
  var TileSet_SPRITES_COMMODORE64_instance;
  var TileSet_SPRITES_ZXSPECTRUM_instance;
  var TileSet_SPRITES_IBM_instance;
  var TileSet_SPRITES_NEC_instance;
  var TileSet_SPRITES_NES_instance;
  function values_1() {
    return [TileSet_SPRITES_APPLE2_getInstance(), TileSet_SPRITES_ATARI8BIT_getInstance(), TileSet_SPRITES_COMMODORE64_getInstance(), TileSet_SPRITES_ZXSPECTRUM_getInstance(), TileSet_SPRITES_IBM_getInstance(), TileSet_SPRITES_NEC_getInstance(), TileSet_SPRITES_NES_getInstance()];
  }
  function valueOf_0(value) {
    switch (value) {
      case 'SPRITES_APPLE2':
        return TileSet_SPRITES_APPLE2_getInstance();
      case 'SPRITES_ATARI8BIT':
        return TileSet_SPRITES_ATARI8BIT_getInstance();
      case 'SPRITES_COMMODORE64':
        return TileSet_SPRITES_COMMODORE64_getInstance();
      case 'SPRITES_ZXSPECTRUM':
        return TileSet_SPRITES_ZXSPECTRUM_getInstance();
      case 'SPRITES_IBM':
        return TileSet_SPRITES_IBM_getInstance();
      case 'SPRITES_NEC':
        return TileSet_SPRITES_NEC_getInstance();
      case 'SPRITES_NES':
        return TileSet_SPRITES_NES_getInstance();
      default:
        TileSet_initEntries();
        THROW_ISE();
        break;
    }
  }
  var TileSet_entriesInitialized;
  function TileSet_initEntries() {
    if (TileSet_entriesInitialized)
      return Unit_getInstance();
    TileSet_entriesInitialized = true;
    TileSet_SPRITES_APPLE2_instance = TileSet_init_$Create$('SPRITES_APPLE2', 0, 'ap2', 0, 0, 24, null);
    TileSet_SPRITES_ATARI8BIT_instance = TileSet_init_$Create$('SPRITES_ATARI8BIT', 1, 'a8b', 0, 0, 24, null);
    TileSet_SPRITES_COMMODORE64_instance = TileSet_init_$Create$('SPRITES_COMMODORE64', 2, 'c64', 0, 0, 24, null);
    TileSet_SPRITES_ZXSPECTRUM_instance = TileSet_init_$Create$('SPRITES_ZXSPECTRUM', 3, 'zxs', 0, 0, 24, null);
    TileSet_SPRITES_IBM_instance = new TileSet('SPRITES_IBM', 4, 'ibm', 24, 22);
    TileSet_SPRITES_NEC_instance = new TileSet('SPRITES_NEC', 5, 'nec', 24, 20);
    TileSet_SPRITES_NES_instance = TileSet_init_$Create$('SPRITES_NES', 6, 'nes', 0, 0, 24, null);
  }
  function TileSet(name, ordinal, path, tileWidth, tileHeight) {
    Enum.call(this, name, ordinal);
    this.d6l_1 = path;
    this.e6l_1 = tileWidth;
    this.f6l_1 = tileHeight;
  }
  TileSet.prototype.p6l = function () {
    return removePrefix(this.il(), 'SPRITES_');
  };
  TileSet.$metadata$ = classMeta('TileSet', undefined, undefined, undefined, undefined, Enum.prototype);
  function Companion_0() {
    Companion_instance_0 = this;
  }
  Companion_0.prototype.l6y = function (e) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_cast = serializer_0(createKType(getKClass(AtlasGeometry), arrayOf([]), false));
        tmp$ret$0 = isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE();
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return this.m6y(tmp$ret$1, e);
  };
  Companion_0.prototype.m6y = function (serializer, e) {
    return Default_getInstance().xn(serializer, toString(e));
  };
  Companion_0.$metadata$ = objectMeta('Companion');
  var Companion_instance_0;
  function Companion_getInstance_9() {
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function $serializer() {
    $serializer_instance = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('AtlasGeometry', this, 2);
    tmp0_serialDesc.wu('cols', false);
    tmp0_serialDesc.wu('rows', false);
    this.n6y_1 = tmp0_serialDesc;
  }
  $serializer.prototype.hn = function () {
    return this.n6y_1;
  };
  $serializer.prototype.tu = function () {
    var tmp$ret$2;
    {
      var tmp0_arrayOf = [IntSerializer_getInstance(), IntSerializer_getInstance()];
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_arrayOf;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  $serializer.prototype.in = function (decoder) {
    var tmp0_desc = this.n6y_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = 0;
    var tmp5_local1 = 0;
    var tmp6_input = decoder.aq(tmp0_desc);
    if (tmp6_input.nq()) {
      tmp4_local0 = tmp6_input.fq(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp6_input.fq(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp6_input.oq(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp6_input.fq(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp6_input.fq(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp6_input.bq(tmp0_desc);
    return AtlasGeometry_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
  };
  $serializer.$metadata$ = objectMeta('$serializer', [GeneratedSerializer]);
  var $serializer_instance;
  function $serializer_getInstance() {
    if ($serializer_instance == null)
      new $serializer();
    return $serializer_instance;
  }
  function AtlasGeometry_init_$Init$(seen1, cols, rows, serializationConstructorMarker, $this) {
    if (!(3 === (3 & seen1)))
      throwMissingFieldException(seen1, 3, $serializer_getInstance().n6y_1);
    $this.o6y_1 = cols;
    $this.p6y_1 = rows;
    return $this;
  }
  function AtlasGeometry_init_$Create$(seen1, cols, rows, serializationConstructorMarker) {
    return AtlasGeometry_init_$Init$(seen1, cols, rows, serializationConstructorMarker, Object.create(AtlasGeometry.prototype));
  }
  function AtlasGeometry(cols, rows) {
    Companion_getInstance_9();
    this.o6y_1 = cols;
    this.p6y_1 = rows;
  }
  AtlasGeometry.prototype.toString = function () {
    return 'AtlasGeometry(cols=' + this.o6y_1 + ', rows=' + this.p6y_1 + ')';
  };
  AtlasGeometry.prototype.hashCode = function () {
    var result = this.o6y_1;
    result = imul(result, 31) + this.p6y_1 | 0;
    return result;
  };
  AtlasGeometry.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof AtlasGeometry))
      return false;
    var tmp0_other_with_cast = other instanceof AtlasGeometry ? other : THROW_CCE();
    if (!(this.o6y_1 === tmp0_other_with_cast.o6y_1))
      return false;
    if (!(this.p6y_1 === tmp0_other_with_cast.p6y_1))
      return false;
    return true;
  };
  AtlasGeometry.$metadata$ = classMeta('AtlasGeometry', undefined, undefined, {0: $serializer_getInstance});
  function GapsSpec_init_$Init$(top, right, bottom, left, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      top = 0;
    if (!(($mask0 & 2) === 0))
      right = 0;
    if (!(($mask0 & 4) === 0))
      bottom = 0;
    if (!(($mask0 & 8) === 0))
      left = 0;
    GapsSpec.call($this, top, right, bottom, left);
    return $this;
  }
  function GapsSpec_init_$Create$(top, right, bottom, left, $mask0, $marker) {
    return GapsSpec_init_$Init$(top, right, bottom, left, $mask0, $marker, Object.create(GapsSpec.prototype));
  }
  function GapsSpec(top, right, bottom, left) {
    this.q6y_1 = top;
    this.r6y_1 = right;
    this.s6y_1 = bottom;
    this.t6y_1 = left;
  }
  GapsSpec.prototype.toString = function () {
    return 'GapsSpec(top=' + this.q6y_1 + ', right=' + this.r6y_1 + ', bottom=' + this.s6y_1 + ', left=' + this.t6y_1 + ')';
  };
  GapsSpec.prototype.hashCode = function () {
    var result = this.q6y_1;
    result = imul(result, 31) + this.r6y_1 | 0;
    result = imul(result, 31) + this.s6y_1 | 0;
    result = imul(result, 31) + this.t6y_1 | 0;
    return result;
  };
  GapsSpec.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof GapsSpec))
      return false;
    var tmp0_other_with_cast = other instanceof GapsSpec ? other : THROW_CCE();
    if (!(this.q6y_1 === tmp0_other_with_cast.q6y_1))
      return false;
    if (!(this.r6y_1 === tmp0_other_with_cast.r6y_1))
      return false;
    if (!(this.s6y_1 === tmp0_other_with_cast.s6y_1))
      return false;
    if (!(this.t6y_1 === tmp0_other_with_cast.t6y_1))
      return false;
    return true;
  };
  GapsSpec.$metadata$ = classMeta('GapsSpec');
  function ImageAtlasSpec_init_$Init$(tileset, tileWidth, tileHeight, gap, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      tileset = TileSet_SPRITES_APPLE2_getInstance();
    if (!(($mask0 & 2) === 0))
      tileWidth = tileset.e6l_1;
    if (!(($mask0 & 4) === 0))
      tileHeight = tileset.f6l_1;
    if (!(($mask0 & 8) === 0)) {
      gap = GapsSpec_init_$Create$(0, 0, 0, 0, 15, null);
    }
    ImageAtlasSpec.call($this, tileset, tileWidth, tileHeight, gap);
    return $this;
  }
  function ImageAtlasSpec_init_$Create$(tileset, tileWidth, tileHeight, gap, $mask0, $marker) {
    return ImageAtlasSpec_init_$Init$(tileset, tileWidth, tileHeight, gap, $mask0, $marker, Object.create(ImageAtlasSpec.prototype));
  }
  function ImageAtlasSpec(tileset, tileWidth, tileHeight, gap) {
    this.g6l_1 = tileset;
    this.h6l_1 = tileWidth;
    this.i6l_1 = tileHeight;
    this.j6l_1 = gap;
  }
  ImageAtlasSpec.prototype.u6y = function () {
    return this.h6l_1;
  };
  ImageAtlasSpec.prototype.v6y = function () {
    return this.i6l_1;
  };
  ImageAtlasSpec.prototype.toString = function () {
    return 'ImageAtlasSpec(tileset=' + this.g6l_1 + ', tileWidth=' + this.h6l_1 + ', tileHeight=' + this.i6l_1 + ', gap=' + this.j6l_1 + ')';
  };
  ImageAtlasSpec.prototype.hashCode = function () {
    var result = this.g6l_1.hashCode();
    result = imul(result, 31) + this.h6l_1 | 0;
    result = imul(result, 31) + this.i6l_1 | 0;
    result = imul(result, 31) + this.j6l_1.hashCode() | 0;
    return result;
  };
  ImageAtlasSpec.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof ImageAtlasSpec))
      return false;
    var tmp0_other_with_cast = other instanceof ImageAtlasSpec ? other : THROW_CCE();
    if (!this.g6l_1.equals(tmp0_other_with_cast.g6l_1))
      return false;
    if (!(this.h6l_1 === tmp0_other_with_cast.h6l_1))
      return false;
    if (!(this.i6l_1 === tmp0_other_with_cast.i6l_1))
      return false;
    if (!this.j6l_1.equals(tmp0_other_with_cast.j6l_1))
      return false;
    return true;
  };
  ImageAtlasSpec.$metadata$ = classMeta('ImageAtlasSpec');
  function Companion_1() {
    Companion_instance_1 = this;
  }
  Companion_1.prototype.l6y = function (e) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_cast = serializer_0(createKType(getKClass(Frame), arrayOf([]), false));
        tmp$ret$0 = isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE();
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return this.w6y(tmp$ret$1, e);
  };
  Companion_1.prototype.w6y = function (serializer, e) {
    return Default_getInstance().xn(serializer, toString(e));
  };
  Companion_1.$metadata$ = objectMeta('Companion');
  var Companion_instance_1;
  function Companion_getInstance_10() {
    if (Companion_instance_1 == null)
      new Companion_1();
    return Companion_instance_1;
  }
  function $serializer_0() {
    $serializer_instance_0 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('Frame', this, 4);
    tmp0_serialDesc.wu('x', false);
    tmp0_serialDesc.wu('y', false);
    tmp0_serialDesc.wu('w', false);
    tmp0_serialDesc.wu('h', false);
    this.x6y_1 = tmp0_serialDesc;
  }
  $serializer_0.prototype.hn = function () {
    return this.x6y_1;
  };
  $serializer_0.prototype.tu = function () {
    var tmp$ret$2;
    {
      var tmp0_arrayOf = [IntSerializer_getInstance(), IntSerializer_getInstance(), IntSerializer_getInstance(), IntSerializer_getInstance()];
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_arrayOf;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  $serializer_0.prototype.in = function (decoder) {
    var tmp0_desc = this.x6y_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = 0;
    var tmp5_local1 = 0;
    var tmp6_local2 = 0;
    var tmp7_local3 = 0;
    var tmp8_input = decoder.aq(tmp0_desc);
    if (tmp8_input.nq()) {
      tmp4_local0 = tmp8_input.fq(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp8_input.fq(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp8_input.fq(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp8_input.fq(tmp0_desc, 3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp8_input.oq(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp8_input.fq(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp8_input.fq(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp8_input.fq(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp8_input.fq(tmp0_desc, 3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp8_input.bq(tmp0_desc);
    return Frame_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, null);
  };
  $serializer_0.$metadata$ = objectMeta('$serializer', [GeneratedSerializer]);
  var $serializer_instance_0;
  function $serializer_getInstance_0() {
    if ($serializer_instance_0 == null)
      new $serializer_0();
    return $serializer_instance_0;
  }
  function Frame_init_$Init$(seen1, x, y, w, h, serializationConstructorMarker, $this) {
    if (!(15 === (15 & seen1)))
      throwMissingFieldException(seen1, 15, $serializer_getInstance_0().x6y_1);
    $this.y6y_1 = x;
    $this.z6y_1 = y;
    $this.a6z_1 = w;
    $this.b6z_1 = h;
    return $this;
  }
  function Frame_init_$Create$(seen1, x, y, w, h, serializationConstructorMarker) {
    return Frame_init_$Init$(seen1, x, y, w, h, serializationConstructorMarker, Object.create(Frame.prototype));
  }
  function Frame(x, y, w, h) {
    Companion_getInstance_10();
    this.y6y_1 = x;
    this.z6y_1 = y;
    this.a6z_1 = w;
    this.b6z_1 = h;
  }
  Frame.prototype.c6z = function (geometry) {
    return (this.y6y_1 / this.a6z_1 | 0) + imul(this.z6y_1 / this.b6z_1 | 0, geometry.o6y_1) | 0;
  };
  Frame.prototype.toString = function () {
    return 'Frame(x=' + this.y6y_1 + ', y=' + this.z6y_1 + ', w=' + this.a6z_1 + ', h=' + this.b6z_1 + ')';
  };
  Frame.prototype.hashCode = function () {
    var result = this.y6y_1;
    result = imul(result, 31) + this.z6y_1 | 0;
    result = imul(result, 31) + this.a6z_1 | 0;
    result = imul(result, 31) + this.b6z_1 | 0;
    return result;
  };
  Frame.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Frame))
      return false;
    var tmp0_other_with_cast = other instanceof Frame ? other : THROW_CCE();
    if (!(this.y6y_1 === tmp0_other_with_cast.y6y_1))
      return false;
    if (!(this.z6y_1 === tmp0_other_with_cast.z6y_1))
      return false;
    if (!(this.a6z_1 === tmp0_other_with_cast.a6z_1))
      return false;
    if (!(this.b6z_1 === tmp0_other_with_cast.b6z_1))
      return false;
    return true;
  };
  Frame.$metadata$ = classMeta('Frame', undefined, undefined, {0: $serializer_getInstance_0});
  function ImageAtlas_init_$Init$(name, whenLoaded, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0)) {
      whenLoaded = ImageAtlas$_init_$lambda_w2rom3();
    }
    ImageAtlas.call($this, name, whenLoaded);
    return $this;
  }
  function ImageAtlas_init_$Create$(name, whenLoaded, $mask0, $marker) {
    return ImageAtlas_init_$Init$(name, whenLoaded, $mask0, $marker, Object.create(ImageAtlas.prototype));
  }
  function loadGeom(_this__u8e3s4, $this, tileset, $cont) {
    var tmp = new $loadGeomCOROUTINE$4($this, _this__u8e3s4, tileset, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  }
  function loadAtlas(_this__u8e3s4, $this, tileset, geometry, $cont) {
    var tmp = new $loadAtlasCOROUTINE$5($this, _this__u8e3s4, tileset, geometry, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  }
  function ImageAtlas$_init_$lambda_w2rom3() {
    return function () {
      return Unit_getInstance();
    };
  }
  function $loadCOROUTINE$3(_this__u8e3s4, tileset, assets, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.k70_1 = _this__u8e3s4;
    this.l70_1 = tileset;
    this.m70_1 = assets;
  }
  $loadCOROUTINE$3.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 3;
            this.k7_1 = 1;
            suspendResult = loadGeom(this.m70_1, this.k70_1, this.l70_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.k7_1 = 2;
            suspendResult = loadAtlas(this.m70_1, this.k70_1, this.l70_1, ensureNotNull(this.k70_1.q70_1), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            var newTex = suspendResult;
            this.k70_1.p70_1.m1e(newTex);
            return Unit_getInstance();
          case 3:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 3) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  $loadCOROUTINE$3.$metadata$ = classMeta('$loadCOROUTINE$3', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $loadGeomCOROUTINE$4(_this__u8e3s4, _this__u8e3s4_0, tileset, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.l6z_1 = _this__u8e3s4;
    this.m6z_1 = _this__u8e3s4_0;
    this.n6z_1 = tileset;
  }
  $loadGeomCOROUTINE$4.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 2;
            this.o6z_1 = 'sprites/' + this.n6z_1.d6l_1 + '/' + this.l6z_1.n70_1 + '.json';
            this.k7_1 = 1;
            suspendResult = this.m6z_1.p1y(this.o6z_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var ARGUMENT = suspendResult;
            var ARGUMENT_0 = ensureNotNull(ARGUMENT);
            var ARGUMENT_1 = ARGUMENT_0.e6();
            var content = decodeToString(ARGUMENT_1);
            var tmp0_decodeFromString = Default_getInstance();
            var tmp1_serializer = tmp0_decodeFromString.yn();
            var tmp0_cast = serializer(tmp1_serializer, createKType(getKClass(JsonObject), arrayOf([]), false));
            var jsonObj = tmp0_decodeFromString.xn(isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE(), content);
            if (!jsonObj.o10('geom'))
              throw IllegalStateException_init_$Create$_0('no geom for atlas ' + this.n6z_1.p6l() + ' ' + this.l6z_1.n70_1);
            this.l6z_1.q70_1 = Companion_getInstance_9().l6y(ensureNotNull(jsonObj.p10('geom')));
            this.l6z_1.r70_1.t7();
            var tmp_0 = jsonObj.p10('frames');
            var tmp0_safe_receiver = tmp_0 instanceof JsonObject ? tmp_0 : null;
            if (tmp0_safe_receiver == null)
              null;
            else {
              var tmp0_iterator = tmp0_safe_receiver.a1().h();
              while (tmp0_iterator.n()) {
                var element = tmp0_iterator.o();
                var tmp0_subject = element.n2();
                var tmp_1;
                if (tmp0_subject instanceof JsonObject) {
                  tmp_1 = Companion_getInstance_10().l6y(ensureNotNull(get_jsonObject(element.n2()).p10('frame'))).c6z(ensureNotNull(this.l6z_1.q70_1));
                } else {
                  if (tmp0_subject instanceof JsonPrimitive) {
                    var tmp_2 = element.n2();
                    tmp_1 = get_int(tmp_2 instanceof JsonPrimitive ? tmp_2 : THROW_CCE());
                  } else {
                    if (equals(tmp0_subject, JsonNull_getInstance())) {
                      throw NotImplementedError_init_$Create$(null, 1, null);
                    } else {
                      if (tmp0_subject instanceof JsonArray) {
                        throw NotImplementedError_init_$Create$(null, 1, null);
                      } else {
                        noWhenBranchMatchedException();
                      }
                    }
                  }
                }
                var ord = tmp_1;
                var tmp0_set = this.l6z_1.r70_1;
                var tmp1_set = element.l2();
                tmp0_set.a(tmp1_set, ord);
              }
            }

            ;
            println('NAMES=' + this.l6z_1.r70_1);
            return Unit_getInstance();
          case 2:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 2) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  $loadGeomCOROUTINE$4.$metadata$ = classMeta('$loadGeomCOROUTINE$4', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $loadAtlasCOROUTINE$5(_this__u8e3s4, _this__u8e3s4_0, tileset, geometry, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.x6z_1 = _this__u8e3s4;
    this.y6z_1 = _this__u8e3s4_0;
    this.z6z_1 = tileset;
    this.a70_1 = geometry;
  }
  $loadAtlasCOROUTINE$5.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 2;
            this.b70_1 = 'sprites/' + this.z6z_1.d6l_1 + '/' + this.x6z_1.n70_1 + '.png';
            this.k7_1 = 1;
            suspendResult = this.y6z_1.s1y(this.b70_1, this.a70_1.o6y_1, this.a70_1.p6y_1, get_simpleTextureProps().b54_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var data = suspendResult;
            return new Texture3d(get_simpleTextureProps(), this.x6z_1.n70_1, new BufferedTextureLoader(data));
          case 2:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 2) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  $loadAtlasCOROUTINE$5.$metadata$ = classMeta('$loadAtlasCOROUTINE$5', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function ImageAtlas(name, whenLoaded) {
    this.n70_1 = name;
    var tmp = this;
    tmp.o70_1 = Job$default(null, 1, null);
    this.p70_1 = mutableStateOf(null);
    this.q70_1 = null;
    var tmp_0 = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$_0();
    }
    tmp_0.r70_1 = tmp$ret$0;
  }
  ImageAtlas.prototype.s70 = function () {
    return this.p70_1;
  };
  ImageAtlas.prototype.u6y = function () {
    var tmp0_safe_receiver = this.p70_1.b3s_1;
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.e55();
    var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.u3z();
    return tmp2_elvis_lhs == null ? 0 : tmp2_elvis_lhs;
  };
  ImageAtlas.prototype.v6y = function () {
    var tmp0_safe_receiver = this.p70_1.b3s_1;
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.e55();
    var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.v3z();
    return tmp2_elvis_lhs == null ? 0 : tmp2_elvis_lhs;
  };
  ImageAtlas.prototype.t70 = function () {
    return this.r70_1;
  };
  ImageAtlas.prototype.u70 = function () {
    return new Vec2i(this.u6y(), this.v6y());
  };
  ImageAtlas.prototype.v70 = function (tileset, assets, $cont) {
    var tmp = new $loadCOROUTINE$3(this, tileset, assets, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  ImageAtlas.$metadata$ = classMeta('ImageAtlas');
  function TileSet_SPRITES_APPLE2_getInstance() {
    TileSet_initEntries();
    return TileSet_SPRITES_APPLE2_instance;
  }
  function TileSet_SPRITES_ATARI8BIT_getInstance() {
    TileSet_initEntries();
    return TileSet_SPRITES_ATARI8BIT_instance;
  }
  function TileSet_SPRITES_COMMODORE64_getInstance() {
    TileSet_initEntries();
    return TileSet_SPRITES_COMMODORE64_instance;
  }
  function TileSet_SPRITES_ZXSPECTRUM_getInstance() {
    TileSet_initEntries();
    return TileSet_SPRITES_ZXSPECTRUM_instance;
  }
  function TileSet_SPRITES_IBM_getInstance() {
    TileSet_initEntries();
    return TileSet_SPRITES_IBM_instance;
  }
  function TileSet_SPRITES_NEC_getInstance() {
    TileSet_initEntries();
    return TileSet_SPRITES_NEC_instance;
  }
  function TileSet_SPRITES_NES_getInstance() {
    TileSet_initEntries();
    return TileSet_SPRITES_NES_instance;
  }
  var LevelSet_CLASSIC_instance;
  var LevelSet_CHAMPIONSHIP_instance;
  var LevelSet_FANBOOK_instance;
  var LevelSet_PROFESSIONAL_instance;
  var LevelSet_REVENGE_instance;
  var LevelSet_CUSTOM_instance;
  function values_2() {
    return [LevelSet_CLASSIC_getInstance(), LevelSet_CHAMPIONSHIP_getInstance(), LevelSet_FANBOOK_getInstance(), LevelSet_PROFESSIONAL_getInstance(), LevelSet_REVENGE_getInstance(), LevelSet_CUSTOM_getInstance()];
  }
  function valueOf_1(value) {
    switch (value) {
      case 'CLASSIC':
        return LevelSet_CLASSIC_getInstance();
      case 'CHAMPIONSHIP':
        return LevelSet_CHAMPIONSHIP_getInstance();
      case 'FANBOOK':
        return LevelSet_FANBOOK_getInstance();
      case 'PROFESSIONAL':
        return LevelSet_PROFESSIONAL_getInstance();
      case 'REVENGE':
        return LevelSet_REVENGE_getInstance();
      case 'CUSTOM':
        return LevelSet_CUSTOM_getInstance();
      default:
        LevelSet_initEntries();
        THROW_ISE();
        break;
    }
  }
  var LevelSet_entriesInitialized;
  function LevelSet_initEntries() {
    if (LevelSet_entriesInitialized)
      return Unit_getInstance();
    LevelSet_entriesInitialized = true;
    LevelSet_CLASSIC_instance = new LevelSet('CLASSIC', 0, 'classic');
    LevelSet_CHAMPIONSHIP_instance = new LevelSet('CHAMPIONSHIP', 1, 'championship');
    LevelSet_FANBOOK_instance = new LevelSet('FANBOOK', 2, 'fanbook');
    LevelSet_PROFESSIONAL_instance = new LevelSet('PROFESSIONAL', 3, 'professional');
    LevelSet_REVENGE_instance = new LevelSet('REVENGE', 4, 'revenge');
    LevelSet_CUSTOM_instance = new LevelSet('CUSTOM', 5, 'custom');
  }
  function LevelSet(name, ordinal, path) {
    Enum.call(this, name, ordinal);
    this.b6y_1 = path;
  }
  LevelSet.prototype.p6l = function () {
    var tmp = this.y1() + 1 | 0;
    var tmp$ret$1;
    {
      var tmp0_lowercase = this.il();
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_lowercase;
      }
      tmp$ret$1 = tmp$ret$0.toLowerCase();
    }
    return '' + tmp + '.' + tmp$ret$1;
  };
  LevelSet.$metadata$ = classMeta('LevelSet', undefined, undefined, undefined, undefined, Enum.prototype);
  function Companion_2() {
    Companion_instance_2 = this;
    var tmp = this;
    var tmp$ret$4;
    {
      var tmp0_associateBy = values_3();
      var capacity = coerceAtLeast(mapCapacity(tmp0_associateBy.length), 16);
      var tmp$ret$3;
      {
        var tmp0_associateByTo = LinkedHashMap_init_$Create$(capacity);
        var indexedObject = tmp0_associateBy;
        var inductionVariable = 0;
        var last = indexedObject.length;
        while (inductionVariable < last) {
          var element = indexedObject[inductionVariable];
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$2;
          {
            var tmp$ret$1;
            {
              var tmp0_lowercase = element.il();
              var tmp$ret$0;
              {
                tmp$ret$0 = tmp0_lowercase;
              }
              tmp$ret$1 = tmp$ret$0.toLowerCase();
            }
            tmp$ret$2 = tmp$ret$1;
          }
          tmp0_associateByTo.a(tmp$ret$2, element);
        }
        tmp$ret$3 = tmp0_associateByTo;
      }
      tmp$ret$4 = tmp$ret$3;
    }
    tmp.w70_1 = tmp$ret$4;
  }
  Companion_2.$metadata$ = objectMeta('Companion');
  var Companion_instance_2;
  function Companion_getInstance_11() {
    if (Companion_instance_2 == null)
      new Companion_2();
    return Companion_instance_2;
  }
  function $loadCOROUTINE$6(_this__u8e3s4, levelSet, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.f71_1 = _this__u8e3s4;
    this.g71_1 = levelSet;
  }
  $loadCOROUTINE$6.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 2;
            this.k7_1 = 1;
            suspendResult = this.f71_1.u6x_1.p1y('maps/' + this.g71_1.b6y_1 + '.json', this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var ARGUMENT = suspendResult;
            var ARGUMENT_0 = ensureNotNull(ARGUMENT);
            var ARGUMENT_1 = ARGUMENT_0.e6();
            var json = decodeToString(ARGUMENT_1);
            var tmp0_decodeFromString = Default_getInstance();
            var tmp1_serializer = tmp0_decodeFromString.yn();
            var tmp0_cast = serializer(tmp1_serializer, createKType(getKClass(JsonObject), arrayOf([]), false));
            var obj = tmp0_decodeFromString.xn(isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE(), json);
            var tmp_0 = obj.p10('levels');
            var tmp1_with = tmp_0 instanceof JsonObject ? tmp_0 : THROW_CCE();
            var tmp_1 = tmp1_with.p10('total');
            var total = tmp_1 instanceof JsonPrimitive ? tmp_1 : THROW_CCE();
            this.f71_1.w6x_1.t7();
            var inductionVariable = 1;
            var last = get_int(total);
            if (inductionVariable <= last)
              do {
                var i = inductionVariable;
                inductionVariable = inductionVariable + 1 | 0;
                var tmp_2 = tmp1_with.p10('level-' + padStart(i.toString(), 3, _Char___init__impl__6a9atx(48)));
                var rows = tmp_2 instanceof JsonArray ? tmp_2 : THROW_CCE();
                var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(rows, 10));
                var tmp0_iterator = rows.h();
                while (tmp0_iterator.n()) {
                  var item = tmp0_iterator.o();
                  tmp0_mapTo.b(get_jsonPrimitive(item).q10());
                }
                var map = tmp0_mapTo;
                this.f71_1.w6x_1.b(map);
              }
               while (!(i === last));
            return Unit_getInstance();
          case 2:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 2) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  $loadCOROUTINE$6.$metadata$ = classMeta('$loadCOROUTINE$6', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function LevelsRep(assets, scope) {
    Companion_getInstance_11();
    this.u6x_1 = assets;
    this.v6x_1 = scope;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.w6x_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = LinkedHashMap_init_$Create$_0();
    }
    tmp_0.x6x_1 = tmp$ret$1;
  }
  LevelsRep.prototype.h71 = function () {
    return this.v6x_1;
  };
  LevelsRep.prototype.i71 = function () {
    return this.w6x_1;
  };
  LevelsRep.prototype.y6x = function (levelSet, $cont) {
    var tmp = new $loadCOROUTINE$6(this, levelSet, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  LevelsRep.prototype.j71 = function (id, tileSet, generated) {
    var tmp$ret$0;
    {
      var tmp0_mod = this.w6x_1.m();
      var r = id % tmp0_mod | 0;
      tmp$ret$0 = r + (tmp0_mod & ((r ^ tmp0_mod) & (r | (-r | 0))) >> 31) | 0;
    }
    var lid = tmp$ret$0;
    var tmp$ret$2;
    {
      var tmp1_getOrPut = this.x6x_1;
      var value = tmp1_getOrPut.b3(lid);
      var tmp;
      if (value == null) {
        var tmp$ret$1;
        {
          var tmp_0;
          if (generated) {
            var fromMap = this.w6x_1.r(lid);
            var tmp_1 = 24 + first(fromMap).length | 0;
            var tmp_2 = 12 + fromMap.m() | 0;
            tmp_0 = generateGameLevel$default(lid, fromMap, 0, 0, tmp_1, tmp_2, 0, 0, null, tileSet.r70_1, this.v6x_1, 460, null);
          } else {
            tmp_0 = loadGameLevel(lid, this.w6x_1.r(lid), tileSet.r70_1);
          }
          tmp$ret$1 = tmp_0;
        }
        var answer = tmp$ret$1;
        tmp1_getOrPut.a(lid, answer);
        tmp = answer;
      } else {
        tmp = value;
      }
      tmp$ret$2 = tmp;
    }
    return tmp$ret$2;
  };
  LevelsRep.$metadata$ = classMeta('LevelsRep');
  function LevelSet_CLASSIC_getInstance() {
    LevelSet_initEntries();
    return LevelSet_CLASSIC_instance;
  }
  function LevelSet_CHAMPIONSHIP_getInstance() {
    LevelSet_initEntries();
    return LevelSet_CHAMPIONSHIP_instance;
  }
  function LevelSet_FANBOOK_getInstance() {
    LevelSet_initEntries();
    return LevelSet_FANBOOK_instance;
  }
  function LevelSet_PROFESSIONAL_getInstance() {
    LevelSet_initEntries();
    return LevelSet_PROFESSIONAL_instance;
  }
  function LevelSet_REVENGE_getInstance() {
    LevelSet_initEntries();
    return LevelSet_REVENGE_instance;
  }
  function LevelSet_CUSTOM_getInstance() {
    LevelSet_initEntries();
    return LevelSet_CUSTOM_instance;
  }
  function $loadSoundsCOROUTINE$7(_this__u8e3s4, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.s71_1 = _this__u8e3s4;
  }
  $loadSoundsCOROUTINE$7.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 5;
            this.t71_1 = 'sounds/ap2';
            this.u71_1 = this.t71_1 + '/sounds.json';
            this.k7_1 = 1;
            suspendResult = this.s71_1.k72_1.p1y(this.u71_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.v71_1 = suspendResult;
            this.w71_1 = ensureNotNull(this.v71_1);
            this.x71_1 = this.w71_1.e6();
            this.y71_1 = decodeToString(this.x71_1);
            var tmp_0 = this;
            var tmp_1 = this;
            tmp_1.z71_1 = Default_getInstance();
            var tmp_2 = this;
            tmp_2.a72_1 = this.z71_1.yn();
            var tmp_3 = this;
            tmp_3.b72_1 = serializer(this.a72_1, createKType(getKClass(JsonObject), arrayOf([]), false));
            var tmp_4 = this.b72_1;
            tmp_0.c72_1 = this.z71_1.xn(isInterface(tmp_4, KSerializer) ? tmp_4 : THROW_CCE(), this.y71_1);
            this.d72_1 = this.s71_1.l72_1;
            var tmp_5 = this;
            var tmp_6 = this.c72_1.p10('clips');
            tmp_5.e72_1 = tmp_6 instanceof JsonObject ? tmp_6 : THROW_CCE();
            var tmp_7 = this;
            tmp_7.f72_1 = ArrayList_init_$Create$(this.e72_1.m());
            var tmp_8 = this;
            tmp_8.g72_1 = this.e72_1.a1().h();
            this.k7_1 = 2;
            continue $sm;
          case 2:
            if (!this.g72_1.n()) {
              this.k7_1 = 4;
              continue $sm;
            }

            this.h72_1 = this.g72_1.o();
            this.i72_1 = this.h72_1.l2();
            var tmp_9 = this;
            var tmp_10 = this.h72_1.n2();
            var tmp_11 = (tmp_10 instanceof JsonObject ? tmp_10 : THROW_CCE()).p10('type');
            tmp_9.j72_1 = (tmp_11 instanceof JsonPrimitive ? tmp_11 : THROW_CCE()).q10();
            this.k7_1 = 3;
            suspendResult = this.s71_1.k72_1.u1y(this.t71_1 + '/' + this.i72_1 + '.' + this.j72_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 3:
            var tmp0_also = suspendResult;
            tmp0_also.h5t(0.2);
            var ARGUMENT = tmp0_also;
            var ARGUMENT_0 = to(this.i72_1, ARGUMENT);
            this.f72_1.b(ARGUMENT_0);
            ;
            this.k7_1 = 2;
            continue $sm;
          case 4:
            var ARGUMENT_1 = this.f72_1;
            var ARGUMENT_2 = toMap(ARGUMENT_1);
            this.d72_1.b4(ARGUMENT_2);
            return Unit_getInstance();
          case 5:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 5) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  $loadSoundsCOROUTINE$7.$metadata$ = classMeta('$loadSoundsCOROUTINE$7', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function SoundPlayer(assets) {
    this.k72_1 = assets;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$_0();
    }
    tmp.l72_1 = tmp$ret$0;
  }
  SoundPlayer.prototype.m72 = function ($cont) {
    var tmp = new $loadSoundsCOROUTINE$7(this, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  SoundPlayer.prototype.n72 = function (s, looped, playSingle) {
    var tmp0_safe_receiver = this.l72_1.b3(s);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        if (playSingle ? !tmp0_safe_receiver.i5t() : false)
          return Unit_getInstance();
        if (!tmp0_safe_receiver.i5t())
          tmp0_safe_receiver.g5t();
        tmp$ret$0 = tmp0_safe_receiver.f5t();
      }
    }
  };
  SoundPlayer.prototype.o72 = function (s, looped, playSingle, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      looped = false;
    if (!(($mask0 & 4) === 0))
      playSingle = true;
    return this.n72(s, looped, playSingle);
  };
  SoundPlayer.prototype.p72 = function (s, delay) {
    var tmp0_safe_receiver = this.l72_1.b3(s);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      tmp0_safe_receiver.g5t();
      tmp = Unit_getInstance();
    }
    return tmp;
  };
  SoundPlayer.prototype.q72 = function (s, delay, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      delay = 0.0;
    return this.p72(s, delay);
  };
  SoundPlayer.$metadata$ = classMeta('SoundPlayer');
  function get_Version() {
    return Version;
  }
  var Version;
  function get_TILE_HEIGHT() {
    return TILE_HEIGHT;
  }
  var TILE_HEIGHT;
  function get_W4() {
    return W4;
  }
  var W4;
  function get_H4() {
    return H4;
  }
  var H4;
  function get_H2() {
    return H2;
  }
  var H2;
  var Action_ACT_NONE_instance;
  var Action_ACT_UP_instance;
  var Action_ACT_DOWN_instance;
  var Action_ACT_LEFT_instance;
  var Action_ACT_RIGHT_instance;
  var Action_ACT_DIG_instance;
  var Action_entriesInitialized;
  function Action_initEntries() {
    if (Action_entriesInitialized)
      return Unit_getInstance();
    Action_entriesInitialized = true;
    Action_ACT_NONE_instance = new Action_0('ACT_NONE', 0);
    Action_ACT_UP_instance = new Action_0('ACT_UP', 1);
    Action_ACT_DOWN_instance = new Action_0('ACT_DOWN', 2);
    Action_ACT_LEFT_instance = new Action_0('ACT_LEFT', 3);
    Action_ACT_RIGHT_instance = new Action_0('ACT_RIGHT', 4);
    Action_ACT_DIG_instance = new Action_0('ACT_DIG', 5);
  }
  function Action_0(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  Action_0.$metadata$ = classMeta('Action', undefined, undefined, undefined, undefined, Enum.prototype);
  var ActorSequence_RunRight_instance;
  var ActorSequence_RunLeft_instance;
  var ActorSequence_RunUpDown_instance;
  var ActorSequence_BarRight_instance;
  var ActorSequence_BarLeft_instance;
  var ActorSequence_FallRight_instance;
  var ActorSequence_FallLeft_instance;
  var ActorSequence_DigRight_instance;
  var ActorSequence_DigLeft_instance;
  var ActorSequence_Reborn_instance;
  var ActorSequence_ShakeRight_instance;
  var ActorSequence_ShakeLeft_instance;
  var ActorSequence_entriesInitialized;
  function ActorSequence_initEntries() {
    if (ActorSequence_entriesInitialized)
      return Unit_getInstance();
    ActorSequence_entriesInitialized = true;
    ActorSequence_RunRight_instance = new ActorSequence('RunRight', 0, 'runRight');
    ActorSequence_RunLeft_instance = new ActorSequence('RunLeft', 1, 'runLeft');
    ActorSequence_RunUpDown_instance = new ActorSequence('RunUpDown', 2, 'runUpDown');
    ActorSequence_BarRight_instance = new ActorSequence('BarRight', 3, 'barRight');
    ActorSequence_BarLeft_instance = new ActorSequence('BarLeft', 4, 'barLeft');
    ActorSequence_FallRight_instance = new ActorSequence('FallRight', 5, 'fallRight');
    ActorSequence_FallLeft_instance = new ActorSequence('FallLeft', 6, 'fallLeft');
    ActorSequence_DigRight_instance = new ActorSequence('DigRight', 7, 'digRight');
    ActorSequence_DigLeft_instance = new ActorSequence('DigLeft', 8, 'digLeft');
    ActorSequence_Reborn_instance = new ActorSequence('Reborn', 9, 'reborn');
    ActorSequence_ShakeRight_instance = new ActorSequence('ShakeRight', 10, 'shakeRight');
    ActorSequence_ShakeLeft_instance = new ActorSequence('ShakeLeft', 11, 'shakeLeft');
  }
  function ActorSequence(name, ordinal, id) {
    Enum.call(this, name, ordinal);
    this.t72_1 = id;
  }
  ActorSequence.prototype.b23 = function () {
    return this.t72_1;
  };
  ActorSequence.$metadata$ = classMeta('ActorSequence', undefined, undefined, undefined, undefined, Enum.prototype);
  function Controllable() {
  }
  Controllable.$metadata$ = interfaceMeta('Controllable');
  function Actor$ActorState$ControllableState$lambda$lambda() {
    return function ($this$validWhen) {
      return !$this$validWhen.o73();
    };
  }
  function Actor$ActorState$ControllableState$lambda$lambda_0() {
    return function ($this$validWhen) {
      var tmp;
      if ($this$validWhen.u72().g23() > 0 ? $this$validWhen.a5o().h74($this$validWhen.e23(), $this$validWhen.g23() + 1 | 0) : false) {
        var tmp_0;
        var tmp_1 = $this$validWhen.a5o();
        var tmp_2 = $this$validWhen.e23();
        var tmp_3 = $this$validWhen.g23();
        if (tmp_1.g74(tmp_2, tmp_3, false, 4, null)) {
          tmp_0 = true;
        } else {
          var tmp_4 = $this$validWhen.a5o();
          var tmp_5 = $this$validWhen.e23();
          var tmp_6 = $this$validWhen.g23() + 1 | 0;
          tmp_0 = tmp_4.g74(tmp_5, tmp_6, false, 4, null);
        }
        tmp = !tmp_0;
      } else {
        tmp = false;
      }
      return tmp;
    };
  }
  function Actor$ActorState$ControllableState$lambda$lambda_1($actor, this$0) {
    return function ($this$action) {
      $actor.i74(ActorSequence_FallLeft_getInstance());
      var tmp0_subject = this$0;
      var tmp;
      if (tmp0_subject instanceof MoveRight) {
        $actor.i74(ActorSequence_FallRight_getInstance());
        $actor.k73_1 = Action_ACT_RIGHT_getInstance();
        tmp = Unit_getInstance();
      } else {
        if (tmp0_subject instanceof MoveLeft) {
          $actor.k73_1 = Action_ACT_LEFT_getInstance();
          tmp = Unit_getInstance();
        } else {
          tmp = Unit_getInstance();
        }
      }
      return Unit_getInstance();
    };
  }
  function Actor$ActorState$ControllableState$lambda($actor, this$0) {
    return function ($this$edge) {
      $this$edge.o74(Actor$ActorState$ControllableState$lambda$lambda());
      $this$edge.o74(Actor$ActorState$ControllableState$lambda$lambda_0());
      $this$edge.p74(Actor$ActorState$ControllableState$lambda$lambda_1($actor, this$0));
      return Unit_getInstance();
    };
  }
  function Actor$ActorState$ControllableState$lambda$lambda_2() {
    return function ($this$validWhen) {
      return $this$validWhen.u72().g23() < 0 ? $this$validWhen.q74() : false;
    };
  }
  function Actor$ActorState$ControllableState$lambda_0() {
    return function ($this$edge) {
      $this$edge.o74(Actor$ActorState$ControllableState$lambda$lambda_2());
      return Unit_getInstance();
    };
  }
  function Actor$ActorState$ControllableState$lambda$lambda_3() {
    return function ($this$validWhen) {
      return $this$validWhen.u72().g23() > 0 ? $this$validWhen.r74() : false;
    };
  }
  function Actor$ActorState$ControllableState$lambda_1() {
    return function ($this$edge) {
      $this$edge.o74(Actor$ActorState$ControllableState$lambda$lambda_3());
      return Unit_getInstance();
    };
  }
  function Actor$ActorState$ControllableState$lambda$lambda_4() {
    return function ($this$validWhen) {
      return $this$validWhen.u72().e23() < 0 ? ($this$validWhen.t74() > 0 ? $this$validWhen.a5o().s74($this$validWhen.e23(), $this$validWhen.g23()) : false) ? true : $this$validWhen.t74() <= 0 ? $this$validWhen.a5o().s74($this$validWhen.e23() - 1 | 0, $this$validWhen.g23()) : false : false;
    };
  }
  function Actor$ActorState$ControllableState$lambda_2() {
    return function ($this$edge) {
      $this$edge.o74(Actor$ActorState$ControllableState$lambda$lambda_4());
      return Unit_getInstance();
    };
  }
  function Actor$ActorState$ControllableState$lambda$lambda_5() {
    return function ($this$validWhen) {
      return $this$validWhen.u72().e23() > 0 ? ($this$validWhen.t74() < 0 ? $this$validWhen.a5o().s74($this$validWhen.e23(), $this$validWhen.g23()) : false) ? true : $this$validWhen.t74() >= 0 ? $this$validWhen.a5o().s74($this$validWhen.e23() + 1 | 0, $this$validWhen.g23()) : false : false;
    };
  }
  function Actor$ActorState$ControllableState$lambda_3() {
    return function ($this$edge) {
      $this$edge.o74(Actor$ActorState$ControllableState$lambda$lambda_5());
      return Unit_getInstance();
    };
  }
  function Actor$ActorState$ControllableState$lambda$lambda_6() {
    return function ($this$validWhen) {
      return ($this$validWhen.u72().e23() < 0 ? $this$validWhen.t74() > 0 ? true : $this$validWhen.t74() <= 0 ? !$this$validWhen.a5o().u74($this$validWhen.e23() - 1 | 0, $this$validWhen.g23()) : false : false) ? !$this$validWhen.a5o().s74($this$validWhen.t74() > 0 ? $this$validWhen.e23() : $this$validWhen.e23() - 1 | 0, $this$validWhen.g23()) : false;
    };
  }
  function Actor$ActorState$ControllableState$lambda_4() {
    return function ($this$edge) {
      $this$edge.o74(Actor$ActorState$ControllableState$lambda$lambda_6());
      return Unit_getInstance();
    };
  }
  function Actor$ActorState$ControllableState$lambda$lambda_7() {
    return function ($this$validWhen) {
      return ($this$validWhen.u72().e23() > 0 ? $this$validWhen.t74() < 0 ? true : $this$validWhen.t74() >= 0 ? !$this$validWhen.a5o().u74($this$validWhen.e23() + 1 | 0, $this$validWhen.g23()) : false : false) ? !$this$validWhen.a5o().s74($this$validWhen.t74() >= 0 ? $this$validWhen.e23() + 1 | 0 : $this$validWhen.e23(), $this$validWhen.g23()) : false;
    };
  }
  function Actor$ActorState$ControllableState$lambda_5() {
    return function ($this$edge) {
      $this$edge.o74(Actor$ActorState$ControllableState$lambda$lambda_7());
      return Unit_getInstance();
    };
  }
  function Actor$ActorState$ControllableState$lambda$lambda_8() {
    return function ($this$validWhen) {
      var tmp;
      var tmp_0;
      if ($this$validWhen instanceof Runner) {
        tmp_0 = $this$validWhen.y72();
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        tmp = $this$validWhen.o75($this$validWhen.e23() + 1 | 0);
      } else {
        tmp = false;
      }
      return tmp;
    };
  }
  function Actor$ActorState$ControllableState$lambda_6() {
    return function ($this$edge) {
      $this$edge.o74(Actor$ActorState$ControllableState$lambda$lambda_8());
      return Unit_getInstance();
    };
  }
  function Actor$ActorState$ControllableState$lambda$lambda_9() {
    return function ($this$validWhen) {
      var tmp;
      var tmp_0;
      if ($this$validWhen instanceof Runner) {
        tmp_0 = $this$validWhen.w72();
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        tmp = $this$validWhen.o75($this$validWhen.e23() - 1 | 0);
      } else {
        tmp = false;
      }
      return tmp;
    };
  }
  function Actor$ActorState$ControllableState$lambda_7() {
    return function ($this$edge) {
      $this$edge.o74(Actor$ActorState$ControllableState$lambda$lambda_9());
      return Unit_getInstance();
    };
  }
  function Actor$ActorState$ControllableState$lambda$lambda_10(this$0) {
    return function ($this$validWhen) {
      var tmp;
      if (!this$0.w75_1 ? !get_anyKeyPressed($this$validWhen) : false) {
        tmp = !(this$0 instanceof StopState);
      } else {
        tmp = false;
      }
      return tmp;
    };
  }
  function Actor$ActorState$ControllableState$lambda_8(this$0) {
    return function ($this$edge) {
      $this$edge.o74(Actor$ActorState$ControllableState$lambda$lambda_10(this$0));
      return Unit_getInstance();
    };
  }
  function Actor$ActorState$ControllableState$lambda_9($actor) {
    return function (it) {
      $actor.k73_1 = Action_ACT_NONE_getInstance();
      return Unit_getInstance();
    };
  }
  function Companion_3() {
    Companion_instance_3 = this;
    this.x75_1 = 'stop';
  }
  Companion_3.prototype.il = function () {
    return this.x75_1;
  };
  Companion_3.$metadata$ = objectMeta('Companion');
  var Companion_instance_3;
  function Companion_getInstance_12() {
    if (Companion_instance_3 == null)
      new Companion_3();
    return Companion_instance_3;
  }
  function Actor$ActorState$StopState$lambda($actor) {
    return function ($this$onUpdate) {
      var tmp;
      if ($this$onUpdate.u72().e23() < 0) {
        tmp = $actor.i74(ActorSequence_RunLeft_getInstance());
      }
      var tmp_0;
      if ($this$onUpdate.u72().e23() > 0) {
        tmp_0 = $actor.i74(ActorSequence_RunRight_getInstance());
      }
      return Unit_getInstance();
    };
  }
  function Companion_4() {
    Companion_instance_4 = this;
    this.y75_1 = 'fall';
  }
  Companion_4.prototype.il = function () {
    return this.y75_1;
  };
  Companion_4.$metadata$ = objectMeta('Companion');
  var Companion_instance_4;
  function Companion_getInstance_13() {
    if (Companion_instance_4 == null)
      new Companion_4();
    return Companion_instance_4;
  }
  function Actor$ActorState$FallState$lambda($actor) {
    return function (it) {
      var tmp$ret$0;
      {
        {
        }
        var tmp;
        if ($actor instanceof Runner) {
          var tmp_0 = Sound_FALL_getInstance();
          var tmp_1 = $actor.e23();
          var tmp_2 = $actor.g23();
          tmp = $actor.z72_1.z75(tmp_0, tmp_1, tmp_2, false, 8, null);
        }
        tmp$ret$0 = tmp;
      }
      return Unit_getInstance();
    };
  }
  function Actor$ActorState$FallState$lambda_0($actor) {
    return function (it) {
      var tmp$ret$0;
      {
        {
        }
        var tmp;
        if ($actor instanceof Runner) {
          $actor.z72_1.a76(Sound_FALL_getInstance());
          tmp = Unit_getInstance();
        }
        tmp$ret$0 = tmp;
      }
      return Unit_getInstance();
    };
  }
  function Actor$ActorState$FallState$lambda$lambda($actor) {
    return function ($this$action) {
      var tmp0_safe_receiver = $actor.b76();
      if (tmp0_safe_receiver == null)
        null;
      else
        tmp0_safe_receiver();
      return Unit_getInstance();
    };
  }
  function Actor$ActorState$FallState$lambda$lambda_0() {
    return function ($this$validWhen) {
      return $this$validWhen.o73();
    };
  }
  function Actor$ActorState$FallState$lambda_1($actor) {
    return function ($this$edge) {
      $this$edge.p74(Actor$ActorState$FallState$lambda$lambda($actor));
      $this$edge.o74(Actor$ActorState$FallState$lambda$lambda_0());
      return Unit_getInstance();
    };
  }
  function Actor$ActorState$FallState$lambda_2($actor) {
    return function ($this$onUpdate) {
      var tmp;
      if ($this$onUpdate.u72().e23() < 0 ? true : $this$onUpdate.w72()) {
        if (!$this$onUpdate.g73_1.equals(ActorSequence_FallLeft_getInstance()))
          $this$onUpdate.i74(ActorSequence_FallLeft_getInstance());
        $actor.k73_1 = $this$onUpdate.w72() ? Action_ACT_DIG_getInstance() : Action_ACT_LEFT_getInstance();
        tmp = Unit_getInstance();
      } else if ($this$onUpdate.u72().e23() > 0 ? true : $this$onUpdate.y72()) {
        if (!$this$onUpdate.g73_1.equals(ActorSequence_FallRight_getInstance()))
          $this$onUpdate.i74(ActorSequence_FallRight_getInstance());
        $actor.k73_1 = $this$onUpdate.y72() ? Action_ACT_DIG_getInstance() : Action_ACT_RIGHT_getInstance();
        tmp = Unit_getInstance();
      } else if ($this$onUpdate.u72().g23() > 0) {
        $actor.k73_1 = Action_ACT_DOWN_getInstance();
        tmp = Unit_getInstance();
      } else if (get_anyKeyPressed($this$onUpdate)) {
        $actor.k73_1 = Action_ACT_NONE_getInstance();
        tmp = Unit_getInstance();
      }
      return null;
    };
  }
  function Actor$ActorState$FallState$lambda_3($actor) {
    return function ($this$BehaviorMoveDown) {
      var isBar = $this$BehaviorMoveDown.a5o().s74($this$BehaviorMoveDown.e23(), $this$BehaviorMoveDown.g23());
      var tmp;
      var tmp_0;
      var tmp_1 = $this$BehaviorMoveDown.a5o();
      var tmp_2 = $this$BehaviorMoveDown.e23();
      var tmp_3 = $this$BehaviorMoveDown.g23() + 1 | 0;
      if (tmp_1.c76(tmp_2, tmp_3, false, false, 12, null)) {
        tmp_0 = true;
      } else {
        tmp_0 = isBar;
      }
      if (tmp_0) {
        $this$BehaviorMoveDown.f73_1.s2i(0);
        var tmp0_subject = $actor.k73_1;
        var tmp0 = tmp0_subject.y1();
        var tmp_4;
        switch (tmp0) {
          case 3:
            tmp_4 = isBar ? ActorSequence_BarLeft_getInstance().t72_1 : ActorSequence_RunLeft_getInstance().t72_1;
            break;
          case 4:
            tmp_4 = isBar ? ActorSequence_BarRight_getInstance().t72_1 : ActorSequence_RunRight_getInstance().t72_1;
            break;
          default:
            if (isBar)
              $this$BehaviorMoveDown.i74(ActorSequence_BarLeft_getInstance());
            Companion_getInstance_12();
            tmp_4 = 'stop';
            break;
        }
        tmp = tmp_4;
      } else {
        tmp = null;
      }
      return tmp;
    };
  }
  function MovementState_init_$Init$(actor, animName, name, $mask0, $marker, $this) {
    if (!(($mask0 & 4) === 0))
      name = ensureNotNull(animName).t72_1;
    MovementState.call($this, actor, animName, name);
    return $this;
  }
  function Actor$ActorState$MovementState$lambda$lambda() {
    return function ($this$validWhen) {
      return $this$validWhen.u72().g23() > 0;
    };
  }
  function Actor$ActorState$MovementState$lambda$lambda_0() {
    return function ($this$validWhen) {
      return $this$validWhen.u72().g23() < 0;
    };
  }
  function Actor$ActorState$MovementState$lambda$lambda_1() {
    return function ($this$validWhen) {
      return $this$validWhen.w72();
    };
  }
  function Actor$ActorState$MovementState$lambda$lambda_2() {
    return function ($this$validWhen) {
      return $this$validWhen.y72();
    };
  }
  function Actor$ActorState$MovementState$lambda() {
    return function ($this$edge) {
      $this$edge.o74(Actor$ActorState$MovementState$lambda$lambda());
      $this$edge.o74(Actor$ActorState$MovementState$lambda$lambda_0());
      $this$edge.o74(Actor$ActorState$MovementState$lambda$lambda_1());
      $this$edge.o74(Actor$ActorState$MovementState$lambda$lambda_2());
      return Unit_getInstance();
    };
  }
  function Actor$ActorState$MovementState$lambda_0(this$0) {
    return function ($this$onUpdate) {
      var tmp;
      if (this$0 instanceof RunDown) {
        var tmp0_this = $this$onUpdate;
        var tmp1 = tmp0_this.h73_1;
        tmp0_this.h73_1 = tmp1 - 1 | 0;
        tmp = Unit_getInstance();
      } else {
        var tmp2_this = $this$onUpdate;
        var tmp3 = tmp2_this.h73_1;
        tmp2_this.h73_1 = tmp3 + 1 | 0;
        tmp = Unit_getInstance();
      }
      return null;
    };
  }
  function Actor$ActorState$MoveLeft$BarLeft$lambda$lambda() {
    return function ($this$validWhen) {
      return !$this$validWhen.a5o().s74($this$validWhen.e23(), $this$validWhen.g23());
    };
  }
  function Actor$ActorState$MoveLeft$BarLeft$lambda() {
    return function ($this$edge) {
      $this$edge.o74(Actor$ActorState$MoveLeft$BarLeft$lambda$lambda());
      return Unit_getInstance();
    };
  }
  function Actor$ActorState$MoveLeft$BarLeft$lambda_0($actor) {
    return function (it) {
      $actor.f73_1.s2i(0);
      return Unit_getInstance();
    };
  }
  function Actor$ActorState$MoveLeft$RunLeft$lambda$lambda() {
    return function ($this$validWhen) {
      return $this$validWhen.a5o().s74($this$validWhen.e23(), $this$validWhen.g23());
    };
  }
  function Actor$ActorState$MoveLeft$RunLeft$lambda() {
    return function ($this$edge) {
      $this$edge.o74(Actor$ActorState$MoveLeft$RunLeft$lambda$lambda());
      return Unit_getInstance();
    };
  }
  function BarLeft(actor) {
    MoveLeft.call(this, actor, ActorSequence_BarLeft_getInstance());
    var tmp = ActorSequence_RunLeft_getInstance().t72_1;
    this.v6w(tmp, false, 0, Actor$ActorState$MoveLeft$BarLeft$lambda(), 6, null);
    this.t6w(Actor$ActorState$MoveLeft$BarLeft$lambda_0(actor));
  }
  BarLeft.$metadata$ = classMeta('BarLeft', undefined, undefined, undefined, undefined, MoveLeft.prototype);
  function RunLeft(actor) {
    MoveLeft.call(this, actor, ActorSequence_RunLeft_getInstance());
    var tmp = ActorSequence_BarLeft_getInstance().t72_1;
    this.v6w(tmp, false, 0, Actor$ActorState$MoveLeft$RunLeft$lambda(), 6, null);
  }
  RunLeft.$metadata$ = classMeta('RunLeft', undefined, undefined, undefined, undefined, MoveLeft.prototype);
  function Actor$ActorState$MoveLeft$lambda$lambda() {
    return function ($this$validWhen) {
      return !$this$validWhen.u76();
    };
  }
  function Actor$ActorState$MoveLeft$lambda() {
    return function ($this$edge) {
      $this$edge.o74(Actor$ActorState$MoveLeft$lambda$lambda());
      return Unit_getInstance();
    };
  }
  function Actor$ActorState$MoveLeft$lambda_0(this$0) {
    return function ($this$onUpdate) {
      var tmp0_this = $this$onUpdate.f73_1;
      tmp0_this.r2i(tmp0_this.e23() - $this$onUpdate.b73_1 | 0);
      this$0.l76($this$onUpdate);
      var tmp;
      if ($this$onUpdate.t74() > 0) {
        return null;
      }
      var tmp_0;
      if (!$this$onUpdate.u76()) {
        $this$onUpdate.f73_1.r2i(($this$onUpdate.a5o().w76($this$onUpdate.e23() - 1 | 0, $this$onUpdate.g23()) ? $this$onUpdate.t74() < $this$onUpdate.z72_1.v76($this$onUpdate.e23() - 1 | 0, $this$onUpdate.g23()).t74() : false) ? $this$onUpdate.z72_1.v76($this$onUpdate.e23() - 1 | 0, $this$onUpdate.g23()).t74() : 0);
        Companion_getInstance_12();
        return 'stop';
      }
      var tmp_1;
      if ($this$onUpdate.t74() < -10) {
        var tmp1_this = $this$onUpdate.e73_1;
        var tmp2 = tmp1_this.e23();
        tmp1_this.r2i(tmp2 - 1 | 0);
        var tmp3_this = $this$onUpdate.f73_1;
        tmp3_this.r2i(tmp3_this.e23() + 20 | 0);
        var tmp_2;
        var tmp_3;
        if ($this$onUpdate instanceof Guard) {
          tmp_3 = $this$onUpdate.o77_1;
        } else {
          tmp_3 = false;
        }
        if (tmp_3) {
          $this$onUpdate.o77_1 = false;
          tmp_2 = Unit_getInstance();
        }
        tmp_1 = tmp_2;
      }
      return null;
    };
  }
  function Actor$ActorState$MoveRight$lambda(this$0) {
    return function ($this$onUpdate) {
      var tmp0_this = $this$onUpdate.f73_1;
      tmp0_this.r2i(tmp0_this.e23() + $this$onUpdate.b73_1 | 0);
      this$0.l76($this$onUpdate);
      var tmp;
      if (!$this$onUpdate.q77()) {
        $this$onUpdate.f73_1.r2i(($this$onUpdate.a5o().w76($this$onUpdate.e23() + 1 | 0, $this$onUpdate.g23()) ? $this$onUpdate.t74() > $this$onUpdate.z72_1.v76($this$onUpdate.e23() + 1 | 0, $this$onUpdate.g23()).t74() : false) ? $this$onUpdate.z72_1.v76($this$onUpdate.e23() + 1 | 0, $this$onUpdate.g23()).t74() : 0);
        Companion_getInstance_12();
        return 'stop';
      }
      var tmp_0;
      if ($this$onUpdate.t74() > 10) {
        var tmp1_this = $this$onUpdate.e73_1;
        var tmp2 = tmp1_this.e23();
        tmp1_this.r2i(tmp2 + 1 | 0);
        var tmp3_this = $this$onUpdate.f73_1;
        tmp3_this.r2i(tmp3_this.e23() - 20 | 0);
        var tmp_1;
        var tmp_2;
        if ($this$onUpdate instanceof Guard) {
          tmp_2 = $this$onUpdate.o77_1;
        } else {
          tmp_2 = false;
        }
        if (tmp_2) {
          $this$onUpdate.o77_1 = false;
          tmp_1 = Unit_getInstance();
        }
        tmp_0 = tmp_1;
      }
      return null;
    };
  }
  function Actor$ActorState$RunRight$lambda$lambda() {
    return function ($this$validWhen) {
      return $this$validWhen.t74() >= 0 ? $this$validWhen.a5o().s74($this$validWhen.e23() + 1 | 0, $this$validWhen.g23()) : false;
    };
  }
  function Actor$ActorState$RunRight$lambda() {
    return function ($this$edge) {
      $this$edge.o74(Actor$ActorState$RunRight$lambda$lambda());
      return Unit_getInstance();
    };
  }
  function Actor$ActorState$BarRight$lambda$lambda() {
    return function ($this$validWhen) {
      return ($this$validWhen.t74() >= 0 ? !$this$validWhen.a5o().u74($this$validWhen.e23() + 1 | 0, $this$validWhen.g23()) : false) ? !$this$validWhen.a5o().s74($this$validWhen.e23() + 1 | 0, $this$validWhen.g23()) : false;
    };
  }
  function Actor$ActorState$BarRight$lambda() {
    return function ($this$edge) {
      $this$edge.o74(Actor$ActorState$BarRight$lambda$lambda());
      return Unit_getInstance();
    };
  }
  function Actor$ActorState$BarRight$lambda_0($actor) {
    return function (it) {
      $actor.f73_1.s2i(0);
      return Unit_getInstance();
    };
  }
  function Companion_5() {
    Companion_instance_5 = this;
    this.r77_1 = 'runDown';
  }
  Companion_5.$metadata$ = objectMeta('Companion');
  var Companion_instance_5;
  function Companion_getInstance_14() {
    if (Companion_instance_5 == null)
      new Companion_5();
    return Companion_instance_5;
  }
  function Actor$ActorState$RunDown$lambda$lambda() {
    return function ($this$validWhen) {
      return !$this$validWhen.r74();
    };
  }
  function Actor$ActorState$RunDown$lambda() {
    return function ($this$edge) {
      $this$edge.o74(Actor$ActorState$RunDown$lambda$lambda());
      return Unit_getInstance();
    };
  }
  function Actor$ActorState$RunDown$lambda_0() {
    return function ($this$BehaviorMoveDown) {
      var tmp;
      if (!$this$BehaviorMoveDown.r74()) {
        var tmp_0 = $this$BehaviorMoveDown.f73_1;
        var tmp0_subject = $this$BehaviorMoveDown;
        var tmp_1;
        if (tmp0_subject instanceof Guard) {
          tmp_1 = ($this$BehaviorMoveDown.a5o().w76($this$BehaviorMoveDown.e23(), $this$BehaviorMoveDown.g23() + 1 | 0) ? $this$BehaviorMoveDown.s77() < $this$BehaviorMoveDown.z72_1.v76($this$BehaviorMoveDown.e23(), $this$BehaviorMoveDown.g23() + 1 | 0).s77() : false) ? $this$BehaviorMoveDown.z72_1.v76($this$BehaviorMoveDown.e23(), $this$BehaviorMoveDown.g23() + 1 | 0).s77() : 0;
        } else {
          tmp_1 = 0;
        }
        tmp = tmp_0.s2i(tmp_1);
      }
      return null;
    };
  }
  function Actor$ActorState$MoveUp$lambda(this$0) {
    return function ($this$onUpdate) {
      var pos = $this$onUpdate.s77() > 0;
      var delta = $this$onUpdate.t77();
      var tmp0_this = $this$onUpdate.f73_1;
      tmp0_this.s2i(tmp0_this.g23() - delta | 0);
      this$0.k76($this$onUpdate, delta / $this$onUpdate.c73_1);
      var tmp;
      if (delta === 0) {
        Companion_getInstance_12();
        return 'stop';
      }
      var tmp_0;
      var tmp_1;
      if (pos ? $this$onUpdate.s77() <= 0 : false) {
        var tmp1_safe_receiver = this$0.c78_1;
        tmp_1 = (tmp1_safe_receiver == null ? null : tmp1_safe_receiver($this$onUpdate)) === true;
      } else {
        tmp_1 = false;
      }
      if (tmp_1) {
        $this$onUpdate.f73_1.s2i(0);
        tmp_0 = Unit_getInstance();
      }
      var tmp_2;
      if ($this$onUpdate.s77() < -11) {
        var tmp2_this = $this$onUpdate.e73_1;
        var tmp3 = tmp2_this.g23();
        tmp2_this.s2i(tmp3 - 1 | 0);
        var tmp4_this = $this$onUpdate.f73_1;
        tmp_2 = tmp4_this.s2i(tmp4_this.g23() + 22 | 0);
      }
      return null;
    };
  }
  function Companion_6() {
    Companion_instance_6 = this;
    this.d78_1 = 'runUp';
  }
  Companion_6.$metadata$ = objectMeta('Companion');
  var Companion_instance_6;
  function Companion_getInstance_15() {
    if (Companion_instance_6 == null)
      new Companion_6();
    return Companion_instance_6;
  }
  function Actor$ActorState$RunUp$_init_$lambda_bf4iwu() {
    return function ($this$null) {
      return !$this$null.q74();
    };
  }
  function Actor$ActorState$RunUp$lambda$lambda(this$0) {
    return function ($this$validWhen) {
      var tmp0_safe_receiver = this$0.e78();
      var tmp;
      if (tmp0_safe_receiver == null) {
        tmp = null;
      } else {
        var tmp$ret$1;
        {
          {
          }
          var tmp$ret$0;
          {
            tmp$ret$0 = tmp0_safe_receiver($this$validWhen);
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp = tmp$ret$1;
      }
      return tmp === true;
    };
  }
  function Actor$ActorState$RunUp$lambda(this$0) {
    return function ($this$edge) {
      $this$edge.o74(Actor$ActorState$RunUp$lambda$lambda(this$0));
      return Unit_getInstance();
    };
  }
  function ControllableState(actor, animName, name) {
    ActorState.call(this, actor, animName, name);
    this.w75_1 = true;
    Companion_getInstance_13();
    this.v6w('fall', false, 0, Actor$ActorState$ControllableState$lambda(actor, this), 6, null);
    Companion_getInstance_15();
    this.v6w('runUp', false, 0, Actor$ActorState$ControllableState$lambda_0(), 6, null);
    Companion_getInstance_14();
    this.v6w('runDown', false, 0, Actor$ActorState$ControllableState$lambda_1(), 6, null);
    var tmp = ActorSequence_BarLeft_getInstance().t72_1;
    this.v6w(tmp, false, 0, Actor$ActorState$ControllableState$lambda_2(), 6, null);
    var tmp_0 = ActorSequence_BarRight_getInstance().t72_1;
    this.v6w(tmp_0, false, 0, Actor$ActorState$ControllableState$lambda_3(), 6, null);
    var tmp_1 = ActorSequence_RunLeft_getInstance().t72_1;
    this.v6w(tmp_1, false, 0, Actor$ActorState$ControllableState$lambda_4(), 6, null);
    var tmp_2 = ActorSequence_RunRight_getInstance().t72_1;
    this.v6w(tmp_2, false, 0, Actor$ActorState$ControllableState$lambda_5(), 6, null);
    var tmp_3 = ActorSequence_DigRight_getInstance().t72_1;
    this.v6w(tmp_3, false, 0, Actor$ActorState$ControllableState$lambda_6(), 6, null);
    var tmp_4 = ActorSequence_DigLeft_getInstance().t72_1;
    this.v6w(tmp_4, false, 0, Actor$ActorState$ControllableState$lambda_7(), 6, null);
    Companion_getInstance_12();
    var tmp_5 = IntCompanionObject_getInstance().d1_1;
    this.v6w('stop', false, tmp_5, Actor$ActorState$ControllableState$lambda_8(this), 2, null);
    this.t6w(Actor$ActorState$ControllableState$lambda_9(actor));
  }
  ControllableState.$metadata$ = classMeta('ControllableState', undefined, undefined, undefined, undefined, ActorState.prototype);
  function StopState(actor) {
    Companion_getInstance_12();
    Companion_getInstance_12();
    ControllableState.call(this, actor, null, 'stop');
    this.m76(Actor$ActorState$StopState$lambda(actor));
  }
  StopState.$metadata$ = classMeta('StopState', undefined, undefined, undefined, undefined, ControllableState.prototype);
  function FallState(actor) {
    Companion_getInstance_13();
    Companion_getInstance_13();
    ActorState.call(this, actor, null, 'fall');
    this.t6w(Actor$ActorState$FallState$lambda(actor));
    this.u6w(Actor$ActorState$FallState$lambda_0(actor));
    Companion_getInstance_12();
    this.v6w('stop', false, 0, Actor$ActorState$FallState$lambda_1(actor), 6, null);
    this.m76(Actor$ActorState$FallState$lambda_2(actor));
    this.f78(this, Actor$ActorState$FallState$lambda_3(actor));
  }
  FallState.$metadata$ = classMeta('FallState', undefined, undefined, undefined, undefined, ActorState.prototype);
  function MovementState(actor, animName, name) {
    ControllableState.call(this, actor, animName, name);
    Companion_getInstance_12();
    var tmp = IntCompanionObject_getInstance().d1_1;
    this.v6w('stop', false, tmp, Actor$ActorState$MovementState$lambda(), 2, null);
    this.m76(Actor$ActorState$MovementState$lambda_0(this));
  }
  MovementState.$metadata$ = classMeta('MovementState', undefined, undefined, undefined, undefined, ControllableState.prototype);
  function MoveLeft(actor, animName) {
    MovementState_init_$Init$(actor, animName, null, 4, null, this);
    Companion_getInstance_12();
    this.v6w('stop', false, 0, Actor$ActorState$MoveLeft$lambda(), 6, null);
    this.m76(Actor$ActorState$MoveLeft$lambda_0(this));
  }
  MoveLeft.$metadata$ = classMeta('MoveLeft', undefined, undefined, undefined, undefined, MovementState.prototype);
  function MoveRight(actor, animName) {
    MovementState_init_$Init$(actor, animName, null, 4, null, this);
    this.m76(Actor$ActorState$MoveRight$lambda(this));
  }
  MoveRight.$metadata$ = classMeta('MoveRight', undefined, undefined, undefined, undefined, MovementState.prototype);
  function RunRight(actor) {
    MoveRight.call(this, actor, ActorSequence_RunRight_getInstance());
    var tmp = ActorSequence_BarRight_getInstance().t72_1;
    this.v6w(tmp, false, 0, Actor$ActorState$RunRight$lambda(), 6, null);
  }
  RunRight.$metadata$ = classMeta('RunRight', undefined, undefined, undefined, undefined, MoveRight.prototype);
  function BarRight(actor) {
    MoveRight.call(this, actor, ActorSequence_BarRight_getInstance());
    var tmp = ActorSequence_RunRight_getInstance().t72_1;
    this.v6w(tmp, false, 0, Actor$ActorState$BarRight$lambda(), 6, null);
    this.t6w(Actor$ActorState$BarRight$lambda_0(actor));
  }
  BarRight.$metadata$ = classMeta('BarRight', undefined, undefined, undefined, undefined, MoveRight.prototype);
  function RunDown(actor) {
    Companion_getInstance_14();
    var tmp = ActorSequence_RunUpDown_getInstance();
    Companion_getInstance_14();
    MovementState.call(this, actor, tmp, 'runDown');
    Companion_getInstance_12();
    this.v6w('stop', false, 0, Actor$ActorState$RunDown$lambda(), 6, null);
    this.f78(this, Actor$ActorState$RunDown$lambda_0());
  }
  RunDown.$metadata$ = classMeta('RunDown', undefined, undefined, undefined, undefined, MovementState.prototype);
  function MoveUp(actor, name, onCenter) {
    MovementState.call(this, actor, ActorSequence_RunUpDown_getInstance(), name);
    this.c78_1 = onCenter;
    this.m76(Actor$ActorState$MoveUp$lambda(this));
  }
  MoveUp.prototype.e78 = function () {
    return this.c78_1;
  };
  MoveUp.$metadata$ = classMeta('MoveUp', undefined, undefined, undefined, undefined, MovementState.prototype);
  function RunUp(actor) {
    Companion_getInstance_15();
    Companion_getInstance_15();
    MoveUp.call(this, actor, 'runUp', Actor$ActorState$RunUp$_init_$lambda_bf4iwu());
    Companion_getInstance_12();
    this.v6w('stop', false, 0, Actor$ActorState$RunUp$lambda(this), 6, null);
  }
  RunUp.$metadata$ = classMeta('RunUp', undefined, undefined, undefined, undefined, MoveUp.prototype);
  function Actor$ActorState$lambda(this$0) {
    return function (it) {
      var tmp0_safe_receiver = this$0.j76_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$0;
        {
          {
          }
          tmp$ret$0 = this$0.i76_1.i74(tmp0_safe_receiver);
        }
      }
      return Unit_getInstance();
    };
  }
  function Actor$ActorState$BehaviorMoveDown$lambda($this_BehaviorMoveDown, $onCenter) {
    return function ($this$onUpdate) {
      var delta = $this$onUpdate.g78();
      var tmp0_this = $this$onUpdate.f73_1;
      tmp0_this.s2i(tmp0_this.g23() + delta | 0);
      $this_BehaviorMoveDown.k76($this$onUpdate, delta / $this$onUpdate.c73_1);
      var tmp;
      if (delta === 0) {
        Companion_getInstance_12();
        return 'stop';
      }
      var tmp_0;
      var containsUpper = $this$onUpdate.c73_1;
      var containsArg = $this$onUpdate.s77();
      if (0 <= containsArg ? containsArg < containsUpper : false) {
        var tmp1_safe_receiver = $onCenter;
        var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver($this$onUpdate);
        if (tmp2_safe_receiver == null)
          null;
        else {
          var tmp$ret$0;
          {
            {
            }
            return tmp2_safe_receiver;
          }
        }
        tmp_0 = Unit_getInstance();
      }
      var tmp_1;
      if ($this$onUpdate.s77() > 11) {
        var tmp3_this = $this$onUpdate.e73_1;
        var tmp4 = tmp3_this.g23();
        tmp3_this.s2i(tmp4 + 1 | 0);
        var tmp5_this = $this$onUpdate.f73_1;
        tmp_1 = tmp5_this.s2i(tmp5_this.g23() - 22 | 0);
      }
      return null;
    };
  }
  function checkGold($this) {
    if (((($this.a5o().j78($this.e23(), $this.g23()) ? $this.t74() > (-$this.b73_1 | 0) : false) ? $this.t74() < $this.b73_1 : false) ? $this.s77() > (-$this.c73_1 | 0) : false) ? $this.s77() < $this.c73_1 : false) {
      if ($this.i78()) {
        $this.a5o().h78($this.e23(), $this.g23());
      }
    }
  }
  function ActorState(actor, animName, name) {
    StackedState.call(this, name);
    this.i76_1 = actor;
    this.j76_1 = animName;
    this.t6w(Actor$ActorState$lambda(this));
  }
  ActorState.prototype.k76 = function (_this__u8e3s4, delta) {
    var dx = numberToInt(_this__u8e3s4.b73_1 * delta);
    if (_this__u8e3s4.t74() > 0) {
      var tmp0_this = _this__u8e3s4.f73_1;
      tmp0_this.r2i(tmp0_this.e23() - dx | 0);
      if (_this__u8e3s4.f73_1.e23() < 0)
        _this__u8e3s4.f73_1.r2i(0);
    } else if (_this__u8e3s4.t74() < 0) {
      var tmp1_this = _this__u8e3s4.f73_1;
      tmp1_this.r2i(tmp1_this.e23() + dx | 0);
      if (_this__u8e3s4.f73_1.e23() > 0)
        _this__u8e3s4.f73_1.r2i(0);
    }
  };
  ActorState.prototype.l76 = function (_this__u8e3s4) {
    if (_this__u8e3s4.f73_1.g23() > 0) {
      var tmp0_this = _this__u8e3s4.f73_1;
      tmp0_this.s2i(tmp0_this.g23() - _this__u8e3s4.c73_1 | 0);
      if (_this__u8e3s4.f73_1.g23() < 0)
        _this__u8e3s4.f73_1.s2i(0);
    } else if (_this__u8e3s4.f73_1.g23() < 0) {
      var tmp1_this = _this__u8e3s4.f73_1;
      tmp1_this.s2i(tmp1_this.g23() + _this__u8e3s4.c73_1 | 0);
      if (_this__u8e3s4.f73_1.g23() > 0)
        _this__u8e3s4.f73_1.s2i(0);
    }
  };
  ActorState.prototype.f78 = function (_this__u8e3s4, onCenter) {
    var tmp$ret$0;
    {
      {
      }
      {
        _this__u8e3s4.m76(Actor$ActorState$BehaviorMoveDown$lambda(_this__u8e3s4, onCenter));
      }
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0;
  };
  ActorState.$metadata$ = classMeta('ActorState', undefined, undefined, undefined, undefined, StackedState.prototype);
  function Actor$fsm$delegate$lambda$lambda($stopState, this$0) {
    return function ($this$buildStateMachine) {
      $this$buildStateMachine.k78($stopState);
      $this$buildStateMachine.k78(new RunLeft(this$0));
      $this$buildStateMachine.k78(new BarLeft(this$0));
      $this$buildStateMachine.k78(new RunRight(this$0));
      $this$buildStateMachine.k78(new RunUp(this$0));
      $this$buildStateMachine.k78(new RunDown(this$0));
      $this$buildStateMachine.k78(new BarRight(this$0));
      $this$buildStateMachine.k78(new FallState(this$0));
      return Unit_getInstance();
    };
  }
  function Actor$fsm$delegate$lambda(this$0) {
    return function () {
      var stopState = new StopState(this$0);
      var tmp = stopState.il();
      return buildStateMachine(tmp, Actor$fsm$delegate$lambda$lambda(stopState, this$0));
    };
  }
  function Actor$lambda(this$0) {
    return function (it) {
      this$0.d73_1 = true;
      this$0.g5t();
      this$0.h73_1 = 0;
      this$0.i74(ActorSequence_RunRight_getInstance());
      this$0.f73_1.r2i(0);
      this$0.f73_1.s2i(0);
      return Unit_getInstance();
    };
  }
  function Actor(game) {
    this.z72_1 = game;
    var tmp = this;
    tmp.a73_1 = lazy(Actor$fsm$delegate$lambda(this));
    this.b73_1 = this.z72_1.h6p_1.y6p_1.r6t_1;
    this.c73_1 = this.z72_1.h6p_1.y6p_1.s6t_1;
    this.d73_1 = true;
    this.e73_1 = MutableVec2i_init_$Create$(Companion_getInstance_0().j2i_1);
    this.f73_1 = MutableVec2i_init_$Create$(Companion_getInstance_0().j2i_1);
    this.g73_1 = ActorSequence_RunRight_getInstance();
    this.h73_1 = 0;
    this.i73_1 = 0;
    var tmp0_this = this.z72_1;
    {
      var tmp0_plusAssign = tmp0_this.i6p_1;
      tmp0_plusAssign.b(Actor$lambda(this));
    }
    this.j73_1 = MutableVec2i_init_$Create$_0();
    this.k73_1 = Action_ACT_NONE_getInstance();
    this.l73_1 = false;
    this.m73_1 = false;
    this.n73_1 = null;
  }
  Actor.prototype.l78 = function () {
    return this.z72_1;
  };
  Actor.prototype.m78 = function () {
    var tmp$ret$0;
    {
      var tmp0_getValue = fsm$factory();
      tmp$ret$0 = this.a73_1.n2();
    }
    return tmp$ret$0;
  };
  Actor.prototype.n78 = function () {
    return this.c73_1;
  };
  Actor.prototype.o78 = function (_set____db54di) {
    this.d73_1 = _set____db54di;
  };
  Actor.prototype.p78 = function () {
    return this.d73_1;
  };
  Actor.prototype.q78 = function () {
    return this.e73_1;
  };
  Actor.prototype.r78 = function () {
    return this.f73_1;
  };
  Actor.prototype.a5o = function () {
    return ensureNotNull(this.z72_1.q6p_1);
  };
  Actor.prototype.s78 = function () {
    return imul(this.e73_1.e23(), 20) + this.f73_1.e23() | 0;
  };
  Actor.prototype.t78 = function () {
    return imul(this.e73_1.g23(), 22) + this.f73_1.g23() | 0;
  };
  Actor.prototype.e23 = function () {
    return this.e73_1.e23();
  };
  Actor.prototype.g23 = function () {
    return this.e73_1.g23();
  };
  Actor.prototype.t74 = function () {
    return this.f73_1.e23();
  };
  Actor.prototype.s77 = function () {
    return this.f73_1.g23();
  };
  Actor.prototype.i74 = function (v) {
    if (!this.g73_1.equals(v)) {
      this.g73_1 = v;
      this.h73_1 = 0;
      this.i73_1 = 0;
    }
  };
  Actor.prototype.u78 = function () {
    return this.g73_1;
  };
  Actor.prototype.v78 = function (_set____db54di) {
    this.h73_1 = _set____db54di;
  };
  Actor.prototype.w78 = function () {
    return this.h73_1;
  };
  Actor.prototype.x78 = function () {
    return this.i73_1;
  };
  Actor.prototype.u72 = function () {
    return this.j73_1;
  };
  Actor.prototype.v72 = function (_set____db54di) {
    this.l73_1 = _set____db54di;
  };
  Actor.prototype.w72 = function () {
    return this.l73_1;
  };
  Actor.prototype.x72 = function (_set____db54di) {
    this.m73_1 = _set____db54di;
  };
  Actor.prototype.y72 = function () {
    return this.m73_1;
  };
  Actor.prototype.y78 = function () {
    var tmp = this.m78();
    tmp.z78(this, false, 2, null);
    checkGold(this);
  };
  Actor.prototype.o73 = function () {
    var tmp;
    var tmp_0;
    var tmp_1;
    var tmp_2 = this.a5o();
    var tmp_3 = this.e23();
    var tmp_4 = this.g23();
    if (tmp_2.g74(tmp_3, tmp_4, false, 4, null)) {
      tmp_1 = true;
    } else {
      tmp_1 = this.s77() === 0 ? this.a5o().s74(this.e23(), this.g23()) : false;
    }
    if (tmp_1) {
      tmp_0 = true;
    } else {
      var tmp_5;
      if (this.s77() >= 0) {
        var tmp_6 = this.a5o();
        var tmp_7 = this.e23();
        var tmp_8 = this.g23() + 1 | 0;
        tmp_5 = tmp_6.c76(tmp_7, tmp_8, false, false, 12, null);
      } else {
        tmp_5 = false;
      }
      tmp_0 = tmp_5;
    }
    if (tmp_0) {
      tmp = true;
    } else {
      tmp = this.a5o().w76(this.e23(), this.g23() + 1 | 0) ? this.s77() >= this.z72_1.v76(this.e23(), this.g23() + 1 | 0).r78().g23() : false;
    }
    return tmp;
  };
  Actor.prototype.b76 = function () {
    return this.n73_1;
  };
  Actor.prototype.g78 = function () {
    return this.a5o().u74(this.e23(), this.g23()) ? 0 : this.s77() < (-this.c73_1 | 0) ? this.c73_1 : this.a5o().h74(this.e23(), this.g23() + 1 | 0) ? this.c73_1 : -this.s77() | 0;
  };
  Actor.prototype.t77 = function () {
    return this.a5o().u74(this.e23(), this.g23()) ? 0 : this.s77() > this.c73_1 ? this.c73_1 : !this.a5o().u74(this.e23(), this.g23() - 1 | 0) ? this.c73_1 : -this.s77() | 0;
  };
  Actor.prototype.q74 = function () {
    var tmp;
    var tmp_0;
    var tmp_1;
    if (this.s77() <= 0) {
      var tmp_2 = this.a5o();
      var tmp_3 = this.e23();
      var tmp_4 = this.g23();
      tmp_1 = tmp_2.g74(tmp_3, tmp_4, false, 4, null);
    } else {
      tmp_1 = false;
    }
    if (tmp_1) {
      tmp_0 = !this.a5o().u74(this.e23(), this.g23() - 1 | 0);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = true;
    } else {
      var tmp_5;
      if (this.s77() > 0) {
        var tmp_6 = this.a5o();
        var tmp_7 = this.e23();
        var tmp_8 = this.g23() + 1 | 0;
        tmp_5 = tmp_6.g74(tmp_7, tmp_8, false, 4, null);
      } else {
        tmp_5 = false;
      }
      tmp = tmp_5;
    }
    return tmp;
  };
  Actor.prototype.r74 = function () {
    var tmp;
    var tmp_0;
    var tmp_1 = this.a5o();
    var tmp_2 = this.e23();
    var tmp_3 = this.g23();
    if (tmp_1.g74(tmp_2, tmp_3, false, 4, null)) {
      tmp_0 = this.s77() < 0;
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = true;
    } else {
      tmp = this.a5o().h74(this.e23(), this.g23() + 1 | 0);
    }
    return tmp;
  };
  Actor.prototype.q77 = function () {
    return this.t74() < 0 ? true : this.t74() >= 0 ? !this.a5o().u74(this.e23() + 1 | 0, this.g23()) : false;
  };
  Actor.prototype.u76 = function () {
    return this.t74() > 0 ? true : this.t74() <= 0 ? !this.a5o().u74(this.e23() - 1 | 0, this.g23()) : false;
  };
  Actor.prototype.g5t = function () {
    var tmp = this.m78();
    return tmp.a79(false, 1, null);
  };
  Actor.$metadata$ = classMeta('Actor', [Controllable]);
  function Action_ACT_NONE_getInstance() {
    Action_initEntries();
    return Action_ACT_NONE_instance;
  }
  function Action_ACT_UP_getInstance() {
    Action_initEntries();
    return Action_ACT_UP_instance;
  }
  function Action_ACT_DOWN_getInstance() {
    Action_initEntries();
    return Action_ACT_DOWN_instance;
  }
  function Action_ACT_LEFT_getInstance() {
    Action_initEntries();
    return Action_ACT_LEFT_instance;
  }
  function Action_ACT_RIGHT_getInstance() {
    Action_initEntries();
    return Action_ACT_RIGHT_instance;
  }
  function Action_ACT_DIG_getInstance() {
    Action_initEntries();
    return Action_ACT_DIG_instance;
  }
  function ActorSequence_RunRight_getInstance() {
    ActorSequence_initEntries();
    return ActorSequence_RunRight_instance;
  }
  function ActorSequence_RunLeft_getInstance() {
    ActorSequence_initEntries();
    return ActorSequence_RunLeft_instance;
  }
  function ActorSequence_RunUpDown_getInstance() {
    ActorSequence_initEntries();
    return ActorSequence_RunUpDown_instance;
  }
  function ActorSequence_BarRight_getInstance() {
    ActorSequence_initEntries();
    return ActorSequence_BarRight_instance;
  }
  function ActorSequence_BarLeft_getInstance() {
    ActorSequence_initEntries();
    return ActorSequence_BarLeft_instance;
  }
  function ActorSequence_FallRight_getInstance() {
    ActorSequence_initEntries();
    return ActorSequence_FallRight_instance;
  }
  function ActorSequence_FallLeft_getInstance() {
    ActorSequence_initEntries();
    return ActorSequence_FallLeft_instance;
  }
  function ActorSequence_DigRight_getInstance() {
    ActorSequence_initEntries();
    return ActorSequence_DigRight_instance;
  }
  function ActorSequence_DigLeft_getInstance() {
    ActorSequence_initEntries();
    return ActorSequence_DigLeft_instance;
  }
  function ActorSequence_Reborn_getInstance() {
    ActorSequence_initEntries();
    return ActorSequence_Reborn_instance;
  }
  function ActorSequence_ShakeRight_getInstance() {
    ActorSequence_initEntries();
    return ActorSequence_ShakeRight_instance;
  }
  function ActorSequence_ShakeLeft_getInstance() {
    ActorSequence_initEntries();
    return ActorSequence_ShakeLeft_instance;
  }
  function fsm$factory() {
    return getPropertyCallableRef('fsm', 1, KProperty1, function (receiver) {
      return receiver.m78();
    }, null);
  }
  var GameState_GAME_START_instance;
  var GameState_GAME_RUNNING_instance;
  var GameState_GAME_FINISH_instance;
  var GameState_GAME_FINISH_SCORE_COUNT_instance;
  var GameState_GAME_WAITING_instance;
  var GameState_GAME_PAUSE_instance;
  var GameState_GAME_NEW_LEVEL_instance;
  var GameState_GAME_RUNNER_DEAD_instance;
  var GameState_GAME_OVER_ANIMATION_instance;
  var GameState_GAME_OVER_instance;
  var GameState_GAME_NEXT_LEVEL_instance;
  var GameState_GAME_PREV_LEVEL_instance;
  var GameState_GAME_LOADING_instance;
  var GameState_GAME_WIN_instance;
  var GameState_entriesInitialized;
  function GameState_initEntries() {
    if (GameState_entriesInitialized)
      return Unit_getInstance();
    GameState_entriesInitialized = true;
    GameState_GAME_START_instance = new GameState('GAME_START', 0);
    GameState_GAME_RUNNING_instance = new GameState('GAME_RUNNING', 1);
    GameState_GAME_FINISH_instance = new GameState('GAME_FINISH', 2);
    GameState_GAME_FINISH_SCORE_COUNT_instance = new GameState('GAME_FINISH_SCORE_COUNT', 3);
    GameState_GAME_WAITING_instance = new GameState('GAME_WAITING', 4);
    GameState_GAME_PAUSE_instance = new GameState('GAME_PAUSE', 5);
    GameState_GAME_NEW_LEVEL_instance = new GameState('GAME_NEW_LEVEL', 6);
    GameState_GAME_RUNNER_DEAD_instance = new GameState('GAME_RUNNER_DEAD', 7);
    GameState_GAME_OVER_ANIMATION_instance = new GameState('GAME_OVER_ANIMATION', 8);
    GameState_GAME_OVER_instance = new GameState('GAME_OVER', 9);
    GameState_GAME_NEXT_LEVEL_instance = new GameState('GAME_NEXT_LEVEL', 10);
    GameState_GAME_PREV_LEVEL_instance = new GameState('GAME_PREV_LEVEL', 11);
    GameState_GAME_LOADING_instance = new GameState('GAME_LOADING', 12);
    GameState_GAME_WIN_instance = new GameState('GAME_WIN', 13);
  }
  function GameState(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  GameState.$metadata$ = classMeta('GameState', undefined, undefined, undefined, undefined, Enum.prototype);
  function Sound_init_$Init$(name, ordinal, fileNameO, fileNameCall, $mask0, $marker, $this) {
    if (!(($mask0 & 4) === 0))
      fileNameO = null;
    if (!(($mask0 & 8) === 0))
      fileNameCall = null;
    Sound.call($this, name, ordinal, fileNameO, fileNameCall);
    return $this;
  }
  function Sound_init_$Create$(name, ordinal, fileNameO, fileNameCall, $mask0, $marker) {
    return Sound_init_$Init$(name, ordinal, fileNameO, fileNameCall, $mask0, $marker, Object.create(Sound.prototype));
  }
  var Sound_BORN_instance;
  var Sound_DEAD_instance;
  var Sound_DIG_instance;
  var Sound_DOWN_instance;
  var Sound_FALL_instance;
  var Sound_GOLD_instance;
  var Sound_FINISH_instance;
  var Sound_PASS_instance;
  var Sound_TRAP_instance;
  var Sound_entriesInitialized;
  function Sound_initEntries() {
    if (Sound_entriesInitialized)
      return Unit_getInstance();
    Sound_entriesInitialized = true;
    Sound_BORN_instance = Sound_init_$Create$('BORN', 0, null, null, 12, null);
    Sound_DEAD_instance = Sound_init_$Create$('DEAD', 1, null, null, 12, null);
    Sound_DIG_instance = Sound_init_$Create$('DIG', 2, null, null, 12, null);
    Sound_DOWN_instance = Sound_init_$Create$('DOWN', 3, null, null, 12, null);
    Sound_FALL_instance = Sound_init_$Create$('FALL', 4, null, null, 12, null);
    Sound_GOLD_instance = Sound_init_$Create$('GOLD', 5, 'getGold', null, 8, null);
    Sound_FINISH_instance = Sound_init_$Create$('FINISH', 6, 'goldFinish', null, 8, null);
    Sound_PASS_instance = Sound_init_$Create$('PASS', 7, null, null, 12, null);
    Sound_TRAP_instance = Sound_init_$Create$('TRAP', 8, null, null, 12, null);
  }
  function Sound(name, ordinal, fileNameO, fileNameCall) {
    Enum.call(this, name, ordinal);
    this.d79_1 = fileNameO;
    this.e79_1 = fileNameCall;
  }
  Sound.prototype.f79 = function () {
    var tmp1_elvis_lhs = this.d79_1;
    var tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp0_safe_receiver = this.e79_1;
      tmp = tmp0_safe_receiver == null ? null : tmp0_safe_receiver();
    } else {
      tmp = tmp1_elvis_lhs;
    }
    var tmp2_elvis_lhs = tmp;
    var tmp_0;
    if (tmp2_elvis_lhs == null) {
      var tmp$ret$1;
      {
        var tmp0_lowercase = this.il();
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_lowercase;
        }
        tmp$ret$1 = tmp$ret$0.toLowerCase();
      }
      tmp_0 = tmp$ret$1;
    } else {
      tmp_0 = tmp2_elvis_lhs;
    }
    return tmp_0;
  };
  Sound.$metadata$ = classMeta('Sound', undefined, undefined, undefined, undefined, Enum.prototype);
  function _get_fsm__e68kep($this) {
    var tmp$ret$0;
    {
      var tmp0_getValue = fsm$factory_0();
      tmp$ret$0 = $this.s6p_1.n2();
    }
    return tmp$ret$0;
  }
  function playGame($this, ev) {
    var tmp0_safe_receiver = $this.q6p_1;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          $this.j6p_1.y78();
          if (!$this.h6p_1.e6q_1.b3s_1)
            guardsUpdate($this);
          if (!$this.n6p_1.b3s_1) {
            var tmp0_safe_receiver_0 = $this.q6p_1;
            if (tmp0_safe_receiver_0 == null)
              null;
            else {
              tmp0_safe_receiver_0.g79($this.j6p_1);
            }
          }
          {
            var tmp0_forEach = $this.v6p_1;
            var tmp0_iterator = tmp0_forEach.h();
            while (tmp0_iterator.n()) {
              var element = tmp0_iterator.o();
              {
                element($this, ev);
              }
            }
          }
          tmp$ret$0 = tmp0_safe_receiver.h79();
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    var tmp1_elvis_lhs = tmp;
    return tmp1_elvis_lhs == null ? false : tmp1_elvis_lhs;
  }
  function playGame$default($this, ev, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ev = null;
    return playGame($this, ev);
  }
  function guardsUpdate($this) {
    if ($this.k6p_1.q())
      return Unit_getInstance();
    if ($this.m6p_1 === 2) {
      $this.m6p_1 = 0;
    } else {
      var tmp0_this = $this;
      var tmp1 = tmp0_this.m6p_1;
      tmp0_this.m6p_1 = tmp1 + 1 | 0;
    }
    var tmp;
    var tmp2_safe_receiver = $this.q6p_1;
    if (equals(tmp2_safe_receiver == null ? null : tmp2_safe_receiver.z73_1, Status_LEVEL_STARTUP_getInstance())) {
      tmp = $this.k6p_1.m();
    } else {
      tmp = Companion_getInstance_17().i79_1[$this.k6p_1.m()][$this.m6p_1];
    }
    var movesCount = tmp;
    while (movesCount > 0) {
      if ($this.l6p_1 >= ($this.k6p_1.m() - 1 | 0)) {
        $this.l6p_1 = 0;
      } else {
        var tmp3_this = $this;
        var tmp4 = tmp3_this.l6p_1;
        tmp3_this.l6p_1 = tmp4 + 1 | 0;
      }
      var tmp$ret$0;
      {
        var tmp0_with = $this.k6p_1.r($this.l6p_1);
        {
        }
        tmp$ret$0 = tmp0_with.k79($this.j6p_1);
      }
      var tmp5 = movesCount;
      movesCount = tmp5 - 1 | 0;
    }
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda$lambda(this$0) {
    return function ($this$validWhen) {
      return get_anyKeyPressed(this$0.j6p_1);
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda(this$0) {
    return function ($this$edge) {
      $this$edge.o74(Game$fsm$delegate$lambda$lambda$lambda$lambda$lambda(this$0));
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda_0(this$0) {
    return function (it) {
      this$0.o6p_1 = false;
      ensureNotNull(this$0.q6p_1).l4q();
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda(this$0) {
    return function ($this$state) {
      var tmp = GameState_GAME_RUNNING_getInstance();
      $this$state.v6w(tmp, false, 0, Game$fsm$delegate$lambda$lambda$lambda$lambda(this$0), 6, null);
      $this$state.t6w(Game$fsm$delegate$lambda$lambda$lambda$lambda_0(this$0));
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda$lambda_0(this$0) {
    return function ($this$validWhen) {
      return this$0.j6p_1.l79();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda_1(this$0) {
    return function ($this$edge) {
      $this$edge.o74(Game$fsm$delegate$lambda$lambda$lambda$lambda$lambda_0(this$0));
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda$lambda_1(this$0) {
    return function ($this$validWhen) {
      return !this$0.j6p_1.p78() ? this$0.j6p_1.k75_1 > 1 : false;
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda_2(this$0) {
    return function ($this$edge) {
      $this$edge.o74(Game$fsm$delegate$lambda$lambda$lambda$lambda$lambda_1(this$0));
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda$lambda_2(this$0) {
    return function ($this$validWhen) {
      return !this$0.j6p_1.p78() ? this$0.j6p_1.k75_1 <= 1 : false;
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda_3(this$0) {
    return function ($this$edge) {
      $this$edge.o74(Game$fsm$delegate$lambda$lambda$lambda$lambda$lambda_2(this$0));
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda_4(this$0) {
    return function ($this$onUpdate) {
      var tmp;
      var tmp_0;
      if (playGame$default(this$0, null, 2, null)) {
        var tmp0_safe_receiver = this$0.q6p_1;
        tmp_0 = equals(tmp0_safe_receiver == null ? null : tmp0_safe_receiver.z73_1, Status_LEVEL_PLAYING_getInstance());
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        var tmp1_safe_receiver = this$0.q6p_1;
        if (tmp1_safe_receiver == null)
          null;
        else {
          tmp1_safe_receiver.m79();
        }
        var tmp_1 = Sound_FINISH_getInstance();
        var tmp_2 = this$0.j6p_1.e23();
        var tmp_3 = this$0.j6p_1.g23();
        tmp = this$0.z75(tmp_1, tmp_2, tmp_3, false, 8, null);
      }
      return null;
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda_5(this$0) {
    return function (it) {
      this$0.p6p_1 = false;
      this$0.a76(Sound_FALL_getInstance());
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda_0(this$0) {
    return function ($this$state) {
      var tmp = GameState_GAME_FINISH_getInstance();
      $this$state.v6w(tmp, false, 0, Game$fsm$delegate$lambda$lambda$lambda$lambda_1(this$0), 6, null);
      var tmp_0 = GameState_GAME_RUNNER_DEAD_getInstance();
      $this$state.v6w(tmp_0, false, 0, Game$fsm$delegate$lambda$lambda$lambda$lambda_2(this$0), 6, null);
      var tmp_1 = GameState_GAME_OVER_ANIMATION_getInstance();
      $this$state.v6w(tmp_1, false, 0, Game$fsm$delegate$lambda$lambda$lambda$lambda_3(this$0), 6, null);
      $this$state.m76(Game$fsm$delegate$lambda$lambda$lambda$lambda_4(this$0));
      $this$state.u6w(Game$fsm$delegate$lambda$lambda$lambda$lambda_5(this$0));
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda_6(this$0) {
    return function (it) {
      var tmp = Sound_DEAD_getInstance();
      var tmp_0 = this$0.j6p_1.e23();
      var tmp_1 = this$0.j6p_1.g23();
      this$0.z75(tmp, tmp_0, tmp_1, false, 8, null);
      var tmp0_this = this$0.j6p_1;
      var tmp1 = tmp0_this.k75_1;
      tmp0_this.n79(tmp1 - 1 | 0);
      this$0.o6p_1 = false;
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda$lambda_3(this$0) {
    return function ($this$validWhen) {
      return this$0.h6p_1.g6q_1.b3s_1 <= 0;
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda_7(this$0) {
    return function ($this$edge) {
      $this$edge.o74(Game$fsm$delegate$lambda$lambda$lambda$lambda$lambda_3(this$0));
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda$lambda_4(this$0) {
    return function ($this$validWhen) {
      return this$0.o6p_1 ? true : this$0.p6p_1;
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda_8(this$0) {
    return function ($this$edge) {
      $this$edge.o74(Game$fsm$delegate$lambda$lambda$lambda$lambda$lambda_4(this$0));
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda_1(this$0) {
    return function ($this$state) {
      $this$state.t6w(Game$fsm$delegate$lambda$lambda$lambda$lambda_6(this$0));
      var tmp = GameState_GAME_OVER_ANIMATION_getInstance();
      $this$state.v6w(tmp, false, 0, Game$fsm$delegate$lambda$lambda$lambda$lambda_7(this$0), 6, null);
      var tmp_0 = GameState_GAME_NEW_LEVEL_getInstance();
      $this$state.v6w(tmp_0, false, 0, Game$fsm$delegate$lambda$lambda$lambda$lambda_8(this$0), 6, null);
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda_9(this$0, $finalScore) {
    return function (it) {
      var tmp = Sound_PASS_getInstance();
      var tmp_0 = this$0.j6p_1.e23();
      var tmp_1 = this$0.j6p_1.g23();
      this$0.z75(tmp, tmp_0, tmp_1, false, 8, null);
      $finalScore._v = this$0.j6p_1.l75_1 + get_SCORE_COMPLETE() | 0;
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda$lambda_5(this$0, $finalScore) {
    return function ($this$validWhen) {
      return this$0.j6p_1.l75_1 >= $finalScore._v;
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda_10(this$0, $finalScore) {
    return function ($this$edge) {
      $this$edge.o74(Game$fsm$delegate$lambda$lambda$lambda$lambda$lambda_5(this$0, $finalScore));
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda_11(this$0) {
    return function ($this$onUpdate) {
      this$0.j6p_1.o79(get_SCORE_COMPLETE_INC());
      return null;
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda_2(this$0) {
    return function ($this$state) {
      var finalScore = {_v: 0};
      $this$state.t6w(Game$fsm$delegate$lambda$lambda$lambda$lambda_9(this$0, finalScore));
      var tmp = GameState_GAME_NEXT_LEVEL_getInstance();
      $this$state.v6w(tmp, false, 0, Game$fsm$delegate$lambda$lambda$lambda$lambda_10(this$0, finalScore), 6, null);
      $this$state.m76(Game$fsm$delegate$lambda$lambda$lambda$lambda_11(this$0));
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda_12(this$0) {
    return function (it) {
      this$0.o6p_1 = false;
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda$lambda_6(this$0) {
    return function ($this$validWhen) {
      return this$0.o6p_1 ? true : this$0.p6p_1;
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda_13(this$0) {
    return function ($this$edge) {
      $this$edge.o74(Game$fsm$delegate$lambda$lambda$lambda$lambda$lambda_6(this$0));
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda_3(this$0) {
    return function ($this$state) {
      $this$state.t6w(Game$fsm$delegate$lambda$lambda$lambda$lambda_12(this$0));
      var tmp = GameState_GAME_NEW_LEVEL_getInstance();
      $this$state.v6w(tmp, false, 0, Game$fsm$delegate$lambda$lambda$lambda$lambda_13(this$0), 6, null);
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda_14(this$0) {
    return function (it) {
      this$0.o6p_1 = false;
      var tmp0_this = this$0.j6p_1;
      tmp0_this.n79(tmp0_this.k75_1 + 1 | 0);
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda$lambda_7(this$0) {
    return function ($this$validWhen) {
      return this$0.o6p_1 ? true : this$0.p6p_1;
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda_15(this$0) {
    return function ($this$edge) {
      $this$edge.o74(Game$fsm$delegate$lambda$lambda$lambda$lambda$lambda_7(this$0));
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda_4(this$0) {
    return function ($this$state) {
      $this$state.t6w(Game$fsm$delegate$lambda$lambda$lambda$lambda_14(this$0));
      var tmp = GameState_GAME_NEW_LEVEL_getInstance();
      $this$state.v6w(tmp, false, 0, Game$fsm$delegate$lambda$lambda$lambda$lambda_15(this$0), 6, null);
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda$lambda_8(this$0) {
    return function ($this$validWhen) {
      var tmp0_safe_receiver = this$0.q6p_1;
      return equals(tmp0_safe_receiver == null ? null : tmp0_safe_receiver.z73_1, Status_LEVEL_PLAYING_getInstance());
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda_16(this$0) {
    return function ($this$edge) {
      $this$edge.o74(Game$fsm$delegate$lambda$lambda$lambda$lambda$lambda_8(this$0));
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda_17() {
    return function (it) {
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda_5(this$0) {
    return function ($this$state) {
      var tmp = GameState_GAME_START_getInstance();
      $this$state.v6w(tmp, false, 0, Game$fsm$delegate$lambda$lambda$lambda$lambda_16(this$0), 6, null);
      $this$state.u6w(Game$fsm$delegate$lambda$lambda$lambda$lambda_17());
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda$lambda_18(this$0) {
    return function (it) {
      this$0.j6p_1.n79(0);
      var tmp = Sound_DEAD_getInstance();
      var tmp_0 = this$0.j6p_1.e23();
      var tmp_1 = this$0.j6p_1.g23();
      this$0.z75(tmp, tmp_0, tmp_1, false, 8, null);
      this$0.o6p_1 = false;
      var tmp0_safe_receiver = this$0.q6p_1;
      var tmp_2;
      if (tmp0_safe_receiver == null) {
        tmp_2 = Unit_getInstance();
      } else {
        tmp0_safe_receiver.z73_1 = Status_LEVEL_PAUSED_getInstance();
        tmp_2 = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda_6(this$0) {
    return function ($this$state) {
      $this$state.t6w(Game$fsm$delegate$lambda$lambda$lambda$lambda_18(this$0));
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda$lambda_7(this$0) {
    return function ($this$null) {
      var tmp0_forEach = this$0.u6p_1;
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          element($this$null);
        }
      }
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda$lambda(this$0) {
    return function ($this$buildStateMachine) {
      var tmp = GameState_GAME_START_getInstance();
      $this$buildStateMachine.w6w(tmp, Game$fsm$delegate$lambda$lambda$lambda(this$0));
      var tmp_0 = GameState_GAME_RUNNING_getInstance();
      $this$buildStateMachine.w6w(tmp_0, Game$fsm$delegate$lambda$lambda$lambda_0(this$0));
      var tmp_1 = GameState_GAME_RUNNER_DEAD_getInstance();
      $this$buildStateMachine.w6w(tmp_1, Game$fsm$delegate$lambda$lambda$lambda_1(this$0));
      var tmp_2 = GameState_GAME_FINISH_getInstance();
      $this$buildStateMachine.w6w(tmp_2, Game$fsm$delegate$lambda$lambda$lambda_2(this$0));
      var tmp_3 = GameState_GAME_PREV_LEVEL_getInstance();
      $this$buildStateMachine.w6w(tmp_3, Game$fsm$delegate$lambda$lambda$lambda_3(this$0));
      var tmp_4 = GameState_GAME_NEXT_LEVEL_getInstance();
      $this$buildStateMachine.w6w(tmp_4, Game$fsm$delegate$lambda$lambda$lambda_4(this$0));
      var tmp_5 = GameState_GAME_NEW_LEVEL_getInstance();
      $this$buildStateMachine.w6w(tmp_5, Game$fsm$delegate$lambda$lambda$lambda_5(this$0));
      var tmp_6 = GameState_GAME_OVER_ANIMATION_getInstance();
      $this$buildStateMachine.w6w(tmp_6, Game$fsm$delegate$lambda$lambda$lambda_6(this$0));
      var tmp0_this = $this$buildStateMachine;
      var tmp0_plusAssign = tmp0_this.a6v_1;
      tmp0_plusAssign.b(Game$fsm$delegate$lambda$lambda$lambda_7(this$0));
      return Unit_getInstance();
    };
  }
  function Game$fsm$delegate$lambda(this$0) {
    return function () {
      var tmp = GameState_GAME_NEW_LEVEL_getInstance();
      return buildStateMachine(tmp, Game$fsm$delegate$lambda$lambda(this$0));
    };
  }
  function Game$slambda(resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
  }
  Game$slambda.prototype.d1v = function ($this$async, $cont) {
    var tmp = this.e1v($this$async, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  Game$slambda.prototype.s7 = function (p1, $cont) {
    return this.d1v((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  Game$slambda.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 2;
            this.k7_1 = 1;
            suspendResult = delay(new Long(100, 0), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return Unit_getInstance();
          case 2:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 2) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  Game$slambda.prototype.e1v = function ($this$async, completion) {
    var i = new Game$slambda(completion);
    i.x79_1 = $this$async;
    return i;
  };
  Game$slambda.$metadata$ = classMeta('Game$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function Game$slambda_0(resultContinuation) {
    var i = new Game$slambda(resultContinuation);
    var l = function ($this$async, $cont) {
      return i.d1v($this$async, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function Game(state) {
    this.h6p_1 = state;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.i6p_1 = tmp$ret$0;
    this.j6p_1 = new Runner(this);
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = ArrayList_init_$Create$_0();
    }
    tmp_0.k6p_1 = tmp$ret$1;
    this.l6p_1 = 0;
    this.m6p_1 = 0;
    this.n6p_1 = new MutableStateValue(false);
    this.o6p_1 = false;
    this.p6p_1 = false;
    this.q6p_1 = null;
    var tmp_1 = this;
    tmp_1.s6p_1 = lazy(Game$fsm$delegate$lambda(this));
    var tmp_2 = this;
    tmp_2.t6p_1 = Job$default(null, 1, null);
    async$default(this, null, null, Game$slambda_0(null), 3, null);
    var tmp_3 = this;
    var tmp$ret$2;
    {
      tmp$ret$2 = ArrayList_init_$Create$_0();
    }
    tmp_3.u6p_1 = tmp$ret$2;
    var tmp_4 = this;
    var tmp$ret$3;
    {
      tmp$ret$3 = ArrayList_init_$Create$_0();
    }
    tmp_4.v6p_1 = tmp$ret$3;
  }
  Game.prototype.i18 = function () {
    return this.h6p_1;
  };
  Game.prototype.y79 = function () {
    return this.j6p_1;
  };
  Game.prototype.z79 = function () {
    return this.k6p_1;
  };
  Game.prototype.a7a = function () {
    return this.n6p_1;
  };
  Game.prototype.b7a = function (_set____db54di) {
    this.o6p_1 = _set____db54di;
  };
  Game.prototype.c7a = function () {
    return this.o6p_1;
  };
  Game.prototype.d7a = function () {
    return _get_fsm__e68kep(this).e7a().equals(GameState_GAME_RUNNING_getInstance());
  };
  Game.prototype.a6t = function () {
    return _get_fsm__e68kep(this).e7a().equals(GameState_GAME_OVER_ANIMATION_getInstance()) ? true : _get_fsm__e68kep(this).e7a().equals(GameState_GAME_OVER_getInstance());
  };
  Game.prototype.f7a = function (v) {
    this.q6p_1 = v;
    var tmp0_safe_receiver = v;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        this.k6p_1.t7();
        {
          var tmp0_forEach = ensureNotNull(this.q6p_1).x73_1;
          var tmp0_iterator = tmp0_forEach.h();
          while (tmp0_iterator.n()) {
            var element = tmp0_iterator.o();
            {
              var g = Guard_init_$Create$(this, null, 2, null);
              g.q78().u2i(element);
              this.k6p_1.b(g);
            }
          }
        }
        {
          var tmp1_forEach = this.i6p_1;
          var tmp0_iterator_0 = tmp1_forEach.h();
          while (tmp0_iterator_0.n()) {
            var element_0 = tmp0_iterator_0.o();
            {
              element_0(tmp0_safe_receiver);
            }
          }
        }
        tmp0_safe_receiver.e74_1 = true;
        tmp0_safe_receiver.z73_1 = Status_LEVEL_PLAYING_getInstance();
        tmp$ret$0 = Unit_getInstance();
      }
    }
  };
  Game.prototype.a5o = function () {
    return this.q6p_1;
  };
  Game.prototype.g7a = function () {
    var tmp = this.r6p_1;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('soundPlayer');
    }
  };
  Game.prototype.h7a = function (sound, x, y, force) {
    return this.g7a().n72(sound.f79(), false, force);
  };
  Game.prototype.z75 = function (sound, x, y, force, $mask0, $handler) {
    if (!(($mask0 & 8) === 0))
      force = false;
    return this.h7a(sound, x, y, force);
  };
  Game.prototype.a76 = function (sound) {
    var tmp = this.g7a();
    var tmp_0 = sound.f79();
    return tmp.q72(tmp_0, 0.0, 2, null);
  };
  Game.prototype.i7a = function () {
    _get_fsm__e68kep(this).j7a(true);
  };
  Game.prototype.k7a = function () {
    _get_fsm__e68kep(this).l7a(GameState_GAME_START_getInstance());
  };
  Game.prototype.m7a = function () {
    return _get_fsm__e68kep(this).l7a(GameState_GAME_FINISH_getInstance());
  };
  Game.prototype.n7a = function () {
    return _get_fsm__e68kep(this).l7a(GameState_GAME_PREV_LEVEL_getInstance());
  };
  Game.prototype.o7a = function () {
    return _get_fsm__e68kep(this).l7a(GameState_GAME_NEXT_LEVEL_getInstance());
  };
  Game.prototype.p7a = function () {
    return _get_fsm__e68kep(this).l7a(GameState_GAME_OVER_ANIMATION_getInstance());
  };
  Game.prototype.l4q = function () {
    this.l6p_1 = 0;
    this.m6p_1 = 0;
    _get_fsm__e68kep(this).j7a(true);
  };
  Game.prototype.q7a = function (ev) {
    var tmp = _get_fsm__e68kep(this);
    tmp.z78(this, false, 2, null);
  };
  Game.prototype.o17 = function () {
    return this.t6p_1;
  };
  Game.prototype.r7a = function () {
    return this.v6p_1;
  };
  Game.prototype.v76 = function (x, y) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_first = this.k6p_1;
      var tmp0_iterator = tmp0_first.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        var tmp$ret$0;
        {
          tmp$ret$0 = element.q78().e23() === x ? element.q78().g23() === y : false;
        }
        if (tmp$ret$0) {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      throw NoSuchElementException_init_$Create$('Collection contains no element matching the predicate.');
    }
    return tmp$ret$1;
  };
  Game.$metadata$ = classMeta('Game', [CoroutineScope]);
  function InputSpec(code, modificatorBitMask) {
    this.j6y_1 = code;
    this.k6y_1 = modificatorBitMask;
  }
  InputSpec.prototype.l2b = function () {
    return this.j6y_1;
  };
  InputSpec.prototype.s7a = function () {
    return this.k6y_1;
  };
  InputSpec.prototype.toString = function () {
    return 'InputSpec(code=' + this.j6y_1 + ', modificatorBitMask=' + this.k6y_1 + ')';
  };
  InputSpec.prototype.hashCode = function () {
    var result = this.j6y_1.hashCode();
    result = imul(result, 31) + this.k6y_1 | 0;
    return result;
  };
  InputSpec.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof InputSpec))
      return false;
    var tmp0_other_with_cast = other instanceof InputSpec ? other : THROW_CCE();
    if (!this.j6y_1.equals(tmp0_other_with_cast.j6y_1))
      return false;
    if (!(this.k6y_1 === tmp0_other_with_cast.k6y_1))
      return false;
    return true;
  };
  InputSpec.$metadata$ = classMeta('InputSpec');
  function toInputSpec(_this__u8e3s4, mod) {
    return new InputSpec(_this__u8e3s4, sum_0(mod));
  }
  function toInputSpec_0(_this__u8e3s4, mod) {
    return toInputSpec(LocalKeyCode_init_$Create$(_this__u8e3s4), mod.slice());
  }
  function GameState_GAME_START_getInstance() {
    GameState_initEntries();
    return GameState_GAME_START_instance;
  }
  function GameState_GAME_RUNNING_getInstance() {
    GameState_initEntries();
    return GameState_GAME_RUNNING_instance;
  }
  function GameState_GAME_FINISH_getInstance() {
    GameState_initEntries();
    return GameState_GAME_FINISH_instance;
  }
  function GameState_GAME_NEW_LEVEL_getInstance() {
    GameState_initEntries();
    return GameState_GAME_NEW_LEVEL_instance;
  }
  function GameState_GAME_RUNNER_DEAD_getInstance() {
    GameState_initEntries();
    return GameState_GAME_RUNNER_DEAD_instance;
  }
  function GameState_GAME_OVER_ANIMATION_getInstance() {
    GameState_initEntries();
    return GameState_GAME_OVER_ANIMATION_instance;
  }
  function GameState_GAME_OVER_getInstance() {
    GameState_initEntries();
    return GameState_GAME_OVER_instance;
  }
  function GameState_GAME_NEXT_LEVEL_getInstance() {
    GameState_initEntries();
    return GameState_GAME_NEXT_LEVEL_instance;
  }
  function GameState_GAME_PREV_LEVEL_getInstance() {
    GameState_initEntries();
    return GameState_GAME_PREV_LEVEL_instance;
  }
  function Sound_BORN_getInstance() {
    Sound_initEntries();
    return Sound_BORN_instance;
  }
  function Sound_DEAD_getInstance() {
    Sound_initEntries();
    return Sound_DEAD_instance;
  }
  function Sound_DIG_getInstance() {
    Sound_initEntries();
    return Sound_DIG_instance;
  }
  function Sound_DOWN_getInstance() {
    Sound_initEntries();
    return Sound_DOWN_instance;
  }
  function Sound_FALL_getInstance() {
    Sound_initEntries();
    return Sound_FALL_instance;
  }
  function Sound_GOLD_getInstance() {
    Sound_initEntries();
    return Sound_GOLD_instance;
  }
  function Sound_FINISH_getInstance() {
    Sound_initEntries();
    return Sound_FINISH_instance;
  }
  function Sound_PASS_getInstance() {
    Sound_initEntries();
    return Sound_PASS_instance;
  }
  function Sound_TRAP_getInstance() {
    Sound_initEntries();
    return Sound_TRAP_instance;
  }
  function fsm$factory_0() {
    return getPropertyCallableRef('fsm', 1, KProperty1, function (receiver) {
      return _get_fsm__e68kep(receiver);
    }, null);
  }
  function Companion_7() {
    Companion_instance_7 = this;
    this.t7a_1 = 'inhole';
  }
  Companion_7.prototype.il = function () {
    return this.t7a_1;
  };
  Companion_7.$metadata$ = objectMeta('Companion');
  var Companion_instance_7;
  function Companion_getInstance_16() {
    if (Companion_instance_7 == null)
      new Companion_7();
    return Companion_instance_7;
  }
  function Guard$InHole$lambda($actor) {
    return function (it) {
      var tmp$ret$0;
      {
        {
        }
        var tmp;
        if ($actor.n77_1 > 0) {
          var tmp_0;
          if ($actor.a5o().v7a($actor.e23(), $actor.g23() - 1 | 0)) {
            $actor.a5o().u7a($actor.e23(), $actor.g23() - 1 | 0);
            $actor.n77_1 = 0;
            tmp_0 = Unit_getInstance();
          } else {
            var tmp0_this = $actor.a5o();
            var tmp1 = tmp0_this.y73_1;
            tmp0_this.y73_1 = tmp1 - 1 | 0;
            tmp_0 = Unit_getInstance();
          }
          tmp = tmp_0;
        }
        tmp$ret$0 = tmp;
      }
      return Unit_getInstance();
    };
  }
  function Guard$InHole$lambda_0() {
    return function ($this$BehaviorMoveDown) {
      $this$BehaviorMoveDown.f73_1.s2i(0);
      var tmp = Sound_TRAP_getInstance();
      var tmp_0 = $this$BehaviorMoveDown.e23();
      var tmp_1 = $this$BehaviorMoveDown.g23();
      $this$BehaviorMoveDown.z72_1.z75(tmp, tmp_0, tmp_1, false, 8, null);
      $this$BehaviorMoveDown.z72_1.j6p_1.o79(get_SCORE_FALL());
      var tmp0_subject = $this$BehaviorMoveDown.g73_1;
      var tmp0 = tmp0_subject.y1();
      return (tmp0 === 5 ? ActorSequence_ShakeRight_getInstance() : ActorSequence_ShakeLeft_getInstance()).t72_1;
    };
  }
  function Guard$Shake$lambda($actor) {
    return function (it) {
      $actor.o77_1 = true;
      return Unit_getInstance();
    };
  }
  function Guard$Shake$lambda_0() {
    return function ($this$onUpdate) {
      var tmp;
      if ($this$onUpdate.h73_1 < $this$onUpdate.i73_1) {
        tmp = Unit_getInstance();
      } else {
        println('done in shake');
        Companion_getInstance_15();
        return 'runUp';
      }
      var tmp0_this = $this$onUpdate;
      var tmp1 = tmp0_this.h73_1;
      tmp0_this.h73_1 = tmp1 + 1 | 0;
      return null;
    };
  }
  function Guard_init_$Init$(game, random, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      random = Default_getInstance_0();
    Guard.call($this, game, random);
    return $this;
  }
  function Guard_init_$Create$(game, random, $mask0, $marker) {
    return Guard_init_$Init$(game, random, $mask0, $marker, Object.create(Guard.prototype));
  }
  function randomRangeGenerator($this, min, max, random) {
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    var current = tmp$ret$0;
    var i = {_v: 0};
    return generateSequence(Guard$randomRangeGenerator$lambda(current, i, min, max, random));
  }
  function randomRangeGenerator$default($this, min, max, random, $mask0, $handler) {
    if (!(($mask0 & 8) === 0))
      random = $this.m77_1;
    return randomRangeGenerator($this, min, max, random);
  }
  function Companion_8() {
    Companion_instance_8 = this;
    var tmp = this;
    var tmp$ret$23;
    {
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = [0, 0, 0];
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      var tmp_0 = tmp$ret$2;
      var tmp$ret$5;
      {
        var tmp$ret$4;
        {
          var tmp$ret$3;
          {
            tmp$ret$3 = [0, 1, 1];
          }
          tmp$ret$4 = tmp$ret$3;
        }
        tmp$ret$5 = tmp$ret$4;
      }
      var tmp_1 = tmp$ret$5;
      var tmp$ret$8;
      {
        var tmp$ret$7;
        {
          var tmp$ret$6;
          {
            tmp$ret$6 = [1, 1, 1];
          }
          tmp$ret$7 = tmp$ret$6;
        }
        tmp$ret$8 = tmp$ret$7;
      }
      var tmp_2 = tmp$ret$8;
      var tmp$ret$11;
      {
        var tmp$ret$10;
        {
          var tmp$ret$9;
          {
            tmp$ret$9 = [1, 2, 1];
          }
          tmp$ret$10 = tmp$ret$9;
        }
        tmp$ret$11 = tmp$ret$10;
      }
      var tmp_3 = tmp$ret$11;
      var tmp$ret$14;
      {
        var tmp$ret$13;
        {
          var tmp$ret$12;
          {
            tmp$ret$12 = [1, 2, 2];
          }
          tmp$ret$13 = tmp$ret$12;
        }
        tmp$ret$14 = tmp$ret$13;
      }
      var tmp_4 = tmp$ret$14;
      var tmp$ret$17;
      {
        var tmp$ret$16;
        {
          var tmp$ret$15;
          {
            tmp$ret$15 = [2, 2, 2];
          }
          tmp$ret$16 = tmp$ret$15;
        }
        tmp$ret$17 = tmp$ret$16;
      }
      var tmp_5 = tmp$ret$17;
      var tmp$ret$20;
      {
        var tmp$ret$19;
        {
          var tmp$ret$18;
          {
            tmp$ret$18 = [2, 2, 3];
          }
          tmp$ret$19 = tmp$ret$18;
        }
        tmp$ret$20 = tmp$ret$19;
      }
      var tmp0_arrayOf = [tmp_0, tmp_1, tmp_2, tmp_3, tmp_4, tmp_5, tmp$ret$20];
      var tmp$ret$22;
      {
        var tmp$ret$21;
        {
          tmp$ret$21 = tmp0_arrayOf;
        }
        tmp$ret$22 = tmp$ret$21;
      }
      tmp$ret$23 = tmp$ret$22;
    }
    tmp.i79_1 = tmp$ret$23;
    this.j79_1 = 0;
  }
  Companion_8.$metadata$ = objectMeta('Companion');
  var Companion_instance_8;
  function Companion_getInstance_17() {
    if (Companion_instance_8 == null)
      new Companion_8();
    return Companion_instance_8;
  }
  function InHole(actor) {
    Companion_getInstance_16();
    Companion_getInstance_16();
    ActorState.call(this, actor, null, 'inhole');
    this.t6w(Guard$InHole$lambda(actor));
    this.f78(this, Guard$InHole$lambda_0());
  }
  InHole.$metadata$ = classMeta('InHole', undefined, undefined, undefined, undefined, ActorState.prototype);
  function Shake(actor, animName) {
    ActorState.call(this, actor, animName, animName.t72_1);
    this.t6w(Guard$Shake$lambda(actor));
    this.m76(Guard$Shake$lambda_0());
  }
  Shake.$metadata$ = classMeta('Shake', undefined, undefined, undefined, undefined, ActorState.prototype);
  function dropGold($this) {
    if ($this.n77_1 > 1) {
      var tmp0_this = $this;
      var tmp1 = tmp0_this.n77_1;
      tmp0_this.n77_1 = tmp1 - 1 | 0;
    } else if ($this.n77_1 === 1) {
      var tmp;
      if ($this.a5o().v7a($this.e23(), $this.g23()) ? $this.a5o().b74_1[$this.e23()][$this.g23()].equals(TileLogicType_EMPTY_getInstance()) : false) {
        var tmp_0 = $this.a5o();
        var tmp_1 = $this.e23();
        var tmp_2 = $this.g23() + 1 | 0;
        tmp = tmp_0.c76(tmp_1, tmp_2, false, false, 4, null);
      } else {
        tmp = false;
      }
      if (tmp) {
        $this.a5o().u7a($this.e23(), $this.g23());
        $this.n77_1 = -1;
        return true;
      }
    } else if ($this.n77_1 < 0) {
      var tmp2_this = $this;
      var tmp3 = tmp2_this.n77_1;
      tmp2_this.n77_1 = tmp3 + 1 | 0;
    }
    return false;
  }
  function bestMove($this, runner) {
    if ($this.o77_1) {
      if ($this.a5o().w7a($this.e23(), $this.g23())) {
        return Action_ACT_UP_getInstance();
      }
    }
    var maxTileY = $this.a5o().u73_1 - 1 | 0;
    var x = $this.q78().e23();
    var y = $this.q78().g23();
    if (y === runner.e73_1.g23() ? true : runner.e73_1.g23() === maxTileY ? y === (maxTileY - 1 | 0) : false) {
      $l$loop: while (!(x === runner.e73_1.e23())) {
        var tmp;
        var tmp_0;
        var tmp_1;
        var tmp_2;
        if ($this.a5o().x7a(x, y, false)) {
          tmp_2 = true;
        } else {
          var tmp_3 = $this.a5o();
          var tmp_4 = x;
          var tmp_5 = y + 1 | 0;
          tmp_2 = tmp_3.c76(tmp_4, tmp_5, true, false, 8, null);
        }
        if (tmp_2) {
          tmp_1 = true;
        } else {
          tmp_1 = $this.a5o().s74(x, y);
        }
        if (tmp_1) {
          tmp_0 = true;
        } else {
          tmp_0 = $this.a5o().s74(x, y + 1 | 0);
        }
        if (tmp_0) {
          tmp = true;
        } else {
          tmp = $this.a5o().j78(x, y + 1 | 0);
        }
        if (tmp) {
          if (x < runner.e73_1.e23()) {
            var tmp0 = x;
            x = tmp0 + 1 | 0;
          } else if (x > runner.e73_1.e23()) {
            var tmp1 = x;
            x = tmp1 - 1 | 0;
          }
        } else {
          break $l$loop;
        }
      }
      if (x === runner.e73_1.e23()) {
        var tmp_6;
        if ($this.q78().e23() < runner.e73_1.e23()) {
          tmp_6 = Action_ACT_RIGHT_getInstance();
        } else if ($this.q78().e23() > runner.e73_1.e23()) {
          tmp_6 = Action_ACT_LEFT_getInstance();
        } else {
          var tmp_7;
          if ($this.r78().e23() < runner.f73_1.e23()) {
            tmp_7 = Action_ACT_RIGHT_getInstance();
          } else {
            tmp_7 = Action_ACT_LEFT_getInstance();
          }
          tmp_6 = tmp_7;
        }
        var nextMove = tmp_6;
        return nextMove;
      }
    }
    return scanFloor($this, runner);
  }
  function GuardAiContext() {
    this.y7a_1 = 255;
    this.z7a_1 = Action_ACT_NONE_getInstance();
    this.a7b_1 = -1;
    this.b7b_1 = -1;
  }
  GuardAiContext.$metadata$ = classMeta('GuardAiContext');
  function scanFloor($this, runner) {
    var x = $this.q78().e23();
    var y = $this.q78().g23();
    var maxTileX = $this.a5o().t73_1 - 1 | 0;
    var maxTileY = $this.a5o().u73_1 - 1 | 0;
    var guardAi = new GuardAiContext();
    guardAi.a7b_1 = $this.q78().e23();
    $l$loop_0: while (guardAi.a7b_1 > 0) {
      var curTile = new Vec2i(guardAi.a7b_1 - 1 | 0, y);
      if ($this.a5o().c7b(curTile).equals(TileLogicType_BLOCK_getInstance()) ? true : $this.a5o().c7b(curTile).equals(TileLogicType_SOLID_getInstance())) {
        break $l$loop_0;
      }
      var downTile = new Vec2i(guardAi.a7b_1 - 1 | 0, y + 1 | 0);
      if ((($this.a5o().f7b(curTile, false) ? true : $this.a5o().e7b(curTile)) ? true : y >= maxTileY) ? true : y < maxTileY ? $this.a5o().d7b(downTile, true, false) : false) {
        var tmp0_this = guardAi;
        var tmp1 = tmp0_this.a7b_1;
        tmp0_this.a7b_1 = tmp1 - 1 | 0;
      } else {
        var tmp2_this = guardAi;
        var tmp3 = tmp2_this.a7b_1;
        tmp2_this.a7b_1 = tmp3 - 1 | 0;
        break $l$loop_0;
      }
    }
    guardAi.b7b_1 = $this.q78().e23();
    $l$loop_2: while (guardAi.b7b_1 < maxTileX) {
      var curTile_0 = new Vec2i(guardAi.b7b_1 + 1 | 0, y);
      var curAct = $this.a5o().c7b(curTile_0);
      if (curAct.equals(TileLogicType_BLOCK_getInstance()) ? true : curAct.equals(TileLogicType_SOLID_getInstance())) {
        break $l$loop_2;
      }
      var downTile_0 = new Vec2i(guardAi.b7b_1 + 1 | 0, y + 1 | 0);
      if ((($this.a5o().f7b(curTile_0, false) ? true : $this.a5o().e7b(curTile_0)) ? true : y >= maxTileY) ? true : y < maxTileY ? $this.a5o().d7b(downTile_0, true, false) : false) {
        var tmp4_this = guardAi;
        var tmp5 = tmp4_this.b7b_1;
        tmp4_this.b7b_1 = tmp5 + 1 | 0;
      } else {
        var tmp6_this = guardAi;
        var tmp7 = tmp6_this.b7b_1;
        tmp6_this.b7b_1 = tmp7 + 1 | 0;
        break $l$loop_2;
      }
    }
    var downTileBase = $this.a5o().b74_1[x][y + 1 | 0];
    if ((y < maxTileY ? !downTileBase.equals(TileLogicType_BLOCK_getInstance()) : false) ? !downTileBase.equals(TileLogicType_SOLID_getInstance()) : false) {
      scanDown($this, x, Action_ACT_DOWN_getInstance(), guardAi, runner);
    }
    if ($this.a5o().b74_1[x][y].equals(TileLogicType_LADDR_getInstance())) {
      scanUp($this, x, Action_ACT_UP_getInstance(), guardAi, runner);
    }
    var curPath = Action_ACT_LEFT_getInstance();
    x = guardAi.a7b_1;
    $l$loop_3: while (true) {
      if (x === $this.q78().e23()) {
        if (curPath.equals(Action_ACT_LEFT_getInstance()) ? !(guardAi.b7b_1 === $this.q78().e23()) : false) {
          curPath = Action_ACT_RIGHT_getInstance();
          x = guardAi.b7b_1;
        } else {
          break $l$loop_3;
        }
      }
      if (y < maxTileY) {
        var downTile_1 = $this.a5o().b74_1[x][y + 1 | 0];
        if (!downTile_1.equals(TileLogicType_BLOCK_getInstance()) ? !downTile_1.equals(TileLogicType_SOLID_getInstance()) : false) {
          scanDown($this, x, curPath, guardAi, runner);
        }
      }
      if ($this.a5o().b74_1[x][y].equals(TileLogicType_LADDR_getInstance())) {
        scanUp($this, x, curPath, guardAi, runner);
      }
      if (curPath.equals(Action_ACT_LEFT_getInstance())) {
        var tmp8 = x;
        x = tmp8 + 1 | 0;
      } else {
        var tmp9 = x;
        x = tmp9 - 1 | 0;
      }
    }
    return guardAi.z7a_1;
  }
  function scanDown($this, x, curPath, guardAi, runner) {
    var maxTileX = $this.a5o().t73_1 - 1 | 0;
    var maxTileY = $this.a5o().u73_1 - 1 | 0;
    var y = $this.q78().g23();
    $l$loop_0: while ((y < maxTileY ? !$this.a5o().b74_1[x][y + 1 | 0].equals(TileLogicType_BLOCK_getInstance()) : false) ? !$this.a5o().b74_1[x][y + 1 | 0].equals(TileLogicType_SOLID_getInstance()) : false) {
      if (!$this.a5o().b74_1[x][y].equals(TileLogicType_EMPTY_getInstance()) ? !$this.a5o().b74_1[x][y].equals(TileLogicType_HLADR_getInstance()) : false) {
        if (x > 0) {
          var downTile = new Vec2i(x - 1 | 0, y + 1 | 0);
          if ($this.a5o().d7b(downTile, true, false) ? true : $this.a5o().b74_1[x - 1 | 0][y].equals(TileLogicType_BAR_getInstance())) {
            if (y >= runner.e73_1.g23()) {
              break $l$loop_0;
            }
          }
        }
        if (x < maxTileX) {
          var downTile_0 = new Vec2i(x + 1 | 0, y + 1 | 0);
          var tmp;
          var tmp_0 = $this.a5o();
          if (tmp_0.g7b(downTile_0, false, false, 6, null)) {
            tmp = true;
          } else {
            tmp = $this.a5o().b74_1[x + 1 | 0][y].equals(TileLogicType_BAR_getInstance());
          }
          if (tmp) {
            if (y >= runner.e73_1.g23()) {
              break $l$loop_0;
            }
          }
        }
      }
      var tmp0 = y;
      y = tmp0 + 1 | 0;
    }
    var tmp_1;
    if (y === runner.e73_1.g23()) {
      tmp_1 = abs(runner.e73_1.e23() - x | 0);
    } else if (y > runner.e73_1.g23()) {
      tmp_1 = (y - runner.e73_1.g23() | 0) + 200 | 0;
    } else {
      tmp_1 = (runner.e73_1.g23() - y | 0) + 100 | 0;
    }
    var curRating = tmp_1;
    if (curRating < guardAi.y7a_1) {
      guardAi.y7a_1 = curRating;
      guardAi.z7a_1 = curPath;
    }
  }
  function scanUp($this, x, curPath, guardAi, runner) {
    var y = $this.q78().g23();
    $l$loop_0: while (y > 0 ? $this.a5o().b74_1[x][y].equals(TileLogicType_LADDR_getInstance()) : false) {
      var tmp0 = y;
      y = tmp0 - 1 | 0;
      if (x > 0) {
        var downTile = new Vec2i(x - 1 | 0, y + 1 | 0);
        if ($this.a5o().d7b(downTile, true, false) ? true : $this.a5o().b74_1[x - 1 | 0][y].equals(TileLogicType_BAR_getInstance())) {
          if (y <= runner.e73_1.g23()) {
            break $l$loop_0;
          }
        }
      }
      if (x < ($this.a5o().t73_1 - 1 | 0)) {
        var downTile_0 = new Vec2i(x + 1 | 0, y + 1 | 0);
        if ($this.a5o().d7b(downTile_0, true, false) ? true : $this.a5o().b74_1[x + 1 | 0][y].equals(TileLogicType_BAR_getInstance())) {
          if (y <= runner.e73_1.g23()) {
            break $l$loop_0;
          }
        }
      }
    }
    var tmp;
    if (y === runner.e73_1.g23()) {
      tmp = abs($this.q78().e23() - x | 0);
    } else if (y > runner.e73_1.g23()) {
      tmp = (y - runner.e73_1.g23() | 0) + 200 | 0;
    } else {
      tmp = (runner.e73_1.g23() - y | 0) + 100 | 0;
    }
    var curRating = tmp;
    if (curRating < guardAi.y7a_1) {
      guardAi.y7a_1 = curRating;
      guardAi.z7a_1 = curPath;
    }
  }
  function Guard$randomRangeGenerator$lambda($current, $i, $min, $max, $random) {
    return function () {
      var tmp;
      if ($current.m() === 0 ? true : ($i._v % $current.m() | 0) === 0) {
        $current.t7();
        $current.o1(shuffled(until($min, $max), $random));
        tmp = Unit_getInstance();
      }
      var tmp0 = $i._v;
      $i._v = tmp0 + 1 | 0;
      return $current.r(tmp0 % $current.m() | 0);
    };
  }
  function Guard$lambda(this$0) {
    return function (it) {
      this$0.i74(ActorSequence_RunRight_getInstance());
      return Unit_getInstance();
    };
  }
  function Guard$fsm$delegate$lambda$lambda$lambda(this$0, $game) {
    return function (it) {
      var tmp = this$0.a5o().t73_1;
      var gen = randomRangeGenerator$default(this$0, 0, tmp, null, 8, null).h();
      var inductionVariable = 1;
      var last = this$0.a5o().u73_1;
      var tmp_0;
      if (inductionVariable < last) {
        $l$loop: do {
          var bornY = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var bornX = gen.o();
          if (this$0.a5o().v7a(bornX, bornY)) {
            this$0.q78().r2i(bornX);
            this$0.q78().s2i(bornY);
            this$0.i74(ActorSequence_Reborn_getInstance());
            $game.j6p_1.o79(get_SCORE_DIES());
            break $l$loop;
          }
        }
         while (inductionVariable < last);
        tmp_0 = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function Guard$fsm$delegate$lambda$lambda$lambda$lambda() {
    return function ($this$validWhen) {
      return !($this$validWhen.i73_1 === 0) ? $this$validWhen.h73_1 >= $this$validWhen.i73_1 : false;
    };
  }
  function Guard$fsm$delegate$lambda$lambda$lambda_0() {
    return function ($this$edge) {
      $this$edge.o74(Guard$fsm$delegate$lambda$lambda$lambda$lambda());
      return Unit_getInstance();
    };
  }
  function Guard$fsm$delegate$lambda$lambda$lambda_1() {
    return function ($this$onUpdate) {
      var tmp0_this = $this$onUpdate;
      var tmp1 = tmp0_this.h73_1;
      tmp0_this.h73_1 = tmp1 + 1 | 0;
      return null;
    };
  }
  function Guard$fsm$delegate$lambda$lambda$lambda_2($game, this$0) {
    return function (it) {
      var tmp = Sound_BORN_getInstance();
      var tmp_0 = this$0.e23();
      var tmp_1 = this$0.g23();
      $game.z75(tmp, tmp_0, tmp_1, false, 8, null);
      return Unit_getInstance();
    };
  }
  function Guard$fsm$delegate$lambda$lambda(this$0, $game) {
    return function ($this$state) {
      $this$state.t6w(Guard$fsm$delegate$lambda$lambda$lambda(this$0, $game));
      Companion_getInstance_12();
      $this$state.v6w('stop', false, 0, Guard$fsm$delegate$lambda$lambda$lambda_0(), 6, null);
      $this$state.m76(Guard$fsm$delegate$lambda$lambda$lambda_1());
      $this$state.u6w(Guard$fsm$delegate$lambda$lambda$lambda_2($game, this$0));
      return Unit_getInstance();
    };
  }
  function Guard$fsm$delegate$lambda$lambda$lambda_3() {
    return function ($this$validWhen) {
      return $this$validWhen.s77() < 0 ? $this$validWhen.a5o().w7a($this$validWhen.e23(), $this$validWhen.g23()) : false;
    };
  }
  function Guard$fsm$delegate$lambda$lambda_0() {
    return function ($this$edge) {
      $this$edge.o74(Guard$fsm$delegate$lambda$lambda$lambda_3());
      return Unit_getInstance();
    };
  }
  function Guard$fsm$delegate$lambda(this$0, $game) {
    return function () {
      var tmp$ret$1;
      {
        var tmp0_apply = Actor.prototype.m78.call(this$0);
        {
        }
        {
          tmp0_apply.k78(new InHole(this$0));
          tmp0_apply.k78(new Shake(this$0, ActorSequence_ShakeLeft_getInstance()));
          tmp0_apply.k78(new Shake(this$0, ActorSequence_ShakeRight_getInstance()));
          var tmp = ActorSequence_Reborn_getInstance().t72_1;
          tmp0_apply.w6w(tmp, Guard$fsm$delegate$lambda$lambda(this$0, $game));
          var tmp$ret$0;
          {
            Companion_getInstance_13();
            var tmp0_apply_0 = tmp0_apply.h7b('fall');
            {
            }
            {
              Companion_getInstance_16();
              tmp0_apply_0.v6w('inhole', false, 0, Guard$fsm$delegate$lambda$lambda_0(), 6, null);
            }
            tmp$ret$0 = tmp0_apply_0;
          }
        }
        tmp$ret$1 = tmp0_apply;
      }
      return tmp$ret$1;
    };
  }
  function Guard(game, random) {
    Companion_getInstance_17();
    Actor.call(this, game);
    this.m77_1 = random;
    this.n77_1 = 0;
    this.o77_1 = false;
    var tmp0_this = game;
    {
      var tmp0_plusAssign = tmp0_this.i6p_1;
      tmp0_plusAssign.b(Guard$lambda(this));
    }
    var tmp = this;
    tmp.p77_1 = lazy(Guard$fsm$delegate$lambda(this, game));
  }
  Guard.prototype.i7b = function () {
    return this.n77_1;
  };
  Guard.prototype.i78 = function () {
    var tmp;
    if (this.n77_1 === 0) {
      this.n77_1 = randomI(0, 26) + 12 | 0;
      tmp = true;
    } else {
      tmp = false;
    }
    return tmp;
  };
  Guard.prototype.o73 = function () {
    return Actor.prototype.o73.call(this) ? true : this.o77_1;
  };
  Guard.prototype.q77 = function () {
    return Actor.prototype.q77.call(this) ? !this.a5o().w76(this.e23() + 1 | 0, this.g23()) ? true : this.a5o().w76(this.e23() + 1 | 0, this.g23()) ? this.t74() < this.l78().v76(this.e23() + 1 | 0, this.g23()).t74() : false : false;
  };
  Guard.prototype.u76 = function () {
    return Actor.prototype.u76.call(this) ? !this.a5o().w76(this.e23() - 1 | 0, this.g23()) ? true : this.a5o().w76(this.e23() - 1 | 0, this.g23()) ? this.t74() > this.l78().v76(this.e23() - 1 | 0, this.g23()).t74() : false : false;
  };
  Guard.prototype.q74 = function () {
    return (Actor.prototype.q74.call(this) ? !this.a5o().w76(this.e23(), this.g23() - 1 | 0) ? true : this.a5o().w76(this.e23(), this.g23() - 1 | 0) ? this.s77() < this.l78().v76(this.e23(), this.g23() - 1 | 0).s77() : false : false) ? true : this.o77_1 ? this.a5o().w7a(this.e23(), this.g23()) : false;
  };
  Guard.prototype.r74 = function () {
    return Actor.prototype.r74.call(this) ? !this.a5o().w76(this.e23(), this.g23() + 1 | 0) ? true : this.a5o().w76(this.e23(), this.g23() + 1 | 0) ? this.s77() > this.l78().v76(this.e23(), this.g23() + 1 | 0).s77() : false : false;
  };
  Guard.prototype.g78 = function () {
    return this.a5o().w76(this.e23(), this.g23() + 1 | 0) ? min(this.l78().v76(this.e23(), this.g23() + 1 | 0).s77() - this.s77() | 0, this.n78()) : Actor.prototype.g78.call(this);
  };
  Guard.prototype.t77 = function () {
    return this.a5o().w76(this.e23(), this.g23() - 1 | 0) ? min(this.s77() - this.l78().v76(this.e23(), this.g23() - 1 | 0).s77() | 0, this.n78()) : Actor.prototype.t77.call(this);
  };
  Guard.prototype.k79 = function (runner) {
    var tmp = this.m78().j7b();
    if (tmp instanceof ControllableState) {
      var nextAct = bestMove(this, runner);
      var tmp0_subject = nextAct;
      var tmp0 = tmp0_subject.y1();
      {
        var neiGuard;
        switch (tmp0) {
          case 1:
            neiGuard = new Vec2i(this.e23(), this.g23() - 1 | 0);
            break;
          case 2:
            neiGuard = new Vec2i(this.e23(), this.g23() + 1 | 0);
            break;
          case 4:
            neiGuard = new Vec2i(this.e23() + 1 | 0, this.g23());
            break;
          case 3:
            neiGuard = new Vec2i(this.e23() - 1 | 0, this.g23());
            break;
          default:
            neiGuard = null;
            break;
        }
      }
      if (!(neiGuard == null) ? !this.a5o().k7b(neiGuard) : false) {
        var tmp_0 = this.u72();
        var tmp1_subject = nextAct;
        var tmp0_0 = tmp1_subject.y1();
        tmp_0.r2i(tmp0_0 === 4 ? 1 : tmp0_0 === 3 ? -1 : 0);
        var tmp_1 = this.u72();
        var tmp2_subject = nextAct;
        var tmp0_1 = tmp2_subject.y1();
        tmp_1.s2i(tmp0_1 === 2 ? 1 : tmp0_1 === 1 ? -1 : 0);
      } else {
        this.u72().r2i(0);
        this.u72().s2i(0);
      }
    }
    var oldx = this.e23();
    var oldy = this.g23();
    Actor.prototype.y78.call(this);
    var tmp_2 = this.m78().j7b();
    if (tmp_2 instanceof MovementState) {
      dropGold(this);
    }
    if (this.a5o().l7b(this.e23(), this.g23()))
      this.m78().l7a(ActorSequence_Reborn_getInstance().t72_1);
    if (!(oldx === this.e23()) ? true : !(oldy === this.g23())) {
      this.a5o().c74_1[oldx][oldy] = false;
      this.a5o().c74_1[this.e23()][this.g23()] = true;
    }
    var tmp_3 = this.m78().j7b();
    if (tmp_3 instanceof ControllableState) {
      if ((this.o77_1 ? !this.a5o().w7a(this.e23(), this.g23()) : false) ? !this.a5o().w7a(this.e23(), this.g23() + 1 | 0) : false)
        this.o77_1 = false;
    }
  };
  Guard.prototype.m78 = function () {
    var tmp$ret$0;
    {
      var tmp0_getValue = fsm$factory_1();
      tmp$ret$0 = this.p77_1.n2();
    }
    return tmp$ret$0;
  };
  Guard.prototype.m7b = function () {
    return this.u78().equals(ActorSequence_Reborn_getInstance());
  };
  Guard.prototype.toString = function () {
    return format('guard %d+%d x %d+%d state=%s gold=%d inhole=%s', [this.e23(), this.t74(), this.g23(), this.s77(), this.m78().e7a(), this.n77_1, this.o77_1]);
  };
  Guard.$metadata$ = classMeta('Guard', undefined, undefined, undefined, undefined, Actor.prototype);
  function fsm$factory_1() {
    return getPropertyCallableRef('fsm', 1, KProperty1, function (receiver) {
      return receiver.m78();
    }, null);
  }
  function TileLogicType_init_$Init$(name, ordinal, collision, $mask0, $marker, $this) {
    if (!(($mask0 & 4) === 0))
      collision = 0;
    TileLogicType.call($this, name, ordinal, collision);
    return $this;
  }
  function TileLogicType_init_$Create$(name, ordinal, collision, $mask0, $marker) {
    return TileLogicType_init_$Init$(name, ordinal, collision, $mask0, $marker, Object.create(TileLogicType.prototype));
  }
  var TileLogicType_EMPTY_instance;
  var TileLogicType_BLOCK_instance;
  var TileLogicType_SOLID_instance;
  var TileLogicType_LADDR_instance;
  var TileLogicType_BAR_instance;
  var TileLogicType_TRAP_instance;
  var TileLogicType_HLADR_instance;
  var TileLogicType_GOLD_instance;
  var TileLogicType_entriesInitialized;
  function TileLogicType_initEntries() {
    if (TileLogicType_entriesInitialized)
      return Unit_getInstance();
    TileLogicType_entriesInitialized = true;
    TileLogicType_EMPTY_instance = TileLogicType_init_$Create$('EMPTY', 0, 0, 4, null);
    TileLogicType_BLOCK_instance = new TileLogicType('BLOCK', 1, 15);
    TileLogicType_SOLID_instance = new TileLogicType('SOLID', 2, 15);
    TileLogicType_LADDR_instance = TileLogicType_init_$Create$('LADDR', 3, 0, 4, null);
    TileLogicType_BAR_instance = TileLogicType_init_$Create$('BAR', 4, 0, 4, null);
    TileLogicType_TRAP_instance = new TileLogicType('TRAP', 5, 14);
    TileLogicType_HLADR_instance = TileLogicType_init_$Create$('HLADR', 6, 0, 4, null);
    TileLogicType_GOLD_instance = TileLogicType_init_$Create$('GOLD', 7, 0, 4, null);
  }
  function TileLogicType(name, ordinal, collision) {
    Enum.call(this, name, ordinal);
    this.p7b_1 = collision;
  }
  TileLogicType.$metadata$ = classMeta('TileLogicType', undefined, undefined, undefined, undefined, Enum.prototype);
  function Tile_init_$Init$(name, ordinal, char, base, act, frameName, $mask0, $marker, $this) {
    if (!(($mask0 & 32) === 0))
      frameName = null;
    Tile.call($this, name, ordinal, char, base, act, frameName);
    return $this;
  }
  function Tile_init_$Create$(name, ordinal, char, base, act, frameName, $mask0, $marker) {
    return Tile_init_$Init$(name, ordinal, char, base, act, frameName, $mask0, $marker, Object.create(Tile.prototype));
  }
  var Tile_EMPTY_instance;
  var Tile_BRICK_instance;
  var Tile_SOLID_instance;
  var Tile_LADDER_instance;
  var Tile_ROPE_instance;
  var Tile_TRAP_instance;
  var Tile_HLADDER_instance;
  var Tile_GOLD_instance;
  var Tile_GUARD_instance;
  var Tile_PLAYER_instance;
  function Companion_9() {
    Companion_instance_9 = this;
    var tmp = this;
    var tmp$ret$2;
    {
      var tmp0_associateBy = values_3();
      var capacity = coerceAtLeast(mapCapacity(tmp0_associateBy.length), 16);
      var tmp$ret$1;
      {
        var tmp0_associateByTo = LinkedHashMap_init_$Create$(capacity);
        var indexedObject = tmp0_associateBy;
        var inductionVariable = 0;
        var last = indexedObject.length;
        while (inductionVariable < last) {
          var element = indexedObject[inductionVariable];
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$0;
          {
            tmp$ret$0 = element.s7b_1;
          }
          tmp0_associateByTo.a(new Char(tmp$ret$0), element);
        }
        tmp$ret$1 = tmp0_associateByTo;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    tmp.w7b_1 = tmp$ret$2;
  }
  Companion_9.prototype.x7b = function () {
    return this.w7b_1;
  };
  Companion_9.$metadata$ = objectMeta('Companion');
  var Companion_instance_9;
  function Companion_getInstance_18() {
    Tile_initEntries();
    if (Companion_instance_9 == null)
      new Companion_9();
    return Companion_instance_9;
  }
  function values_3() {
    return [Tile_EMPTY_getInstance(), Tile_BRICK_getInstance(), Tile_SOLID_getInstance(), Tile_LADDER_getInstance(), Tile_ROPE_getInstance(), Tile_TRAP_getInstance(), Tile_HLADDER_getInstance(), Tile_GOLD_getInstance(), Tile_GUARD_getInstance(), Tile_PLAYER_getInstance()];
  }
  var Tile_entriesInitialized;
  function Tile_initEntries() {
    if (Tile_entriesInitialized)
      return Unit_getInstance();
    Tile_entriesInitialized = true;
    var tmp = _Char___init__impl__6a9atx(32);
    var tmp_0 = TileLogicType_EMPTY_getInstance();
    var tmp_1 = TileLogicType_EMPTY_getInstance();
    Tile_EMPTY_instance = Tile_init_$Create$('EMPTY', 0, tmp, tmp_0, tmp_1, null, 32, null);
    var tmp_2 = _Char___init__impl__6a9atx(35);
    var tmp_3 = TileLogicType_BLOCK_getInstance();
    var tmp_4 = TileLogicType_BLOCK_getInstance();
    Tile_BRICK_instance = Tile_init_$Create$('BRICK', 1, tmp_2, tmp_3, tmp_4, null, 32, null);
    var tmp_5 = _Char___init__impl__6a9atx(64);
    var tmp_6 = TileLogicType_SOLID_getInstance();
    var tmp_7 = TileLogicType_SOLID_getInstance();
    Tile_SOLID_instance = Tile_init_$Create$('SOLID', 2, tmp_5, tmp_6, tmp_7, null, 32, null);
    var tmp_8 = _Char___init__impl__6a9atx(72);
    var tmp_9 = TileLogicType_LADDR_getInstance();
    var tmp_10 = TileLogicType_LADDR_getInstance();
    Tile_LADDER_instance = Tile_init_$Create$('LADDER', 3, tmp_8, tmp_9, tmp_10, null, 32, null);
    var tmp_11 = _Char___init__impl__6a9atx(45);
    var tmp_12 = TileLogicType_BAR_getInstance();
    var tmp_13 = TileLogicType_BAR_getInstance();
    Tile_ROPE_instance = Tile_init_$Create$('ROPE', 4, tmp_11, tmp_12, tmp_13, null, 32, null);
    var tmp_14 = _Char___init__impl__6a9atx(88);
    var tmp_15 = TileLogicType_TRAP_getInstance();
    var tmp_16 = TileLogicType_TRAP_getInstance();
    var tmp$ret$1;
    {
      var tmp0_lowercase = Tile_BRICK_getInstance().il();
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_lowercase;
      }
      tmp$ret$1 = tmp$ret$0.toLowerCase();
    }
    Tile_TRAP_instance = new Tile('TRAP', 5, tmp_14, tmp_15, tmp_16, tmp$ret$1);
    var tmp_17 = _Char___init__impl__6a9atx(83);
    var tmp_18 = TileLogicType_HLADR_getInstance();
    var tmp_19 = TileLogicType_EMPTY_getInstance();
    var tmp$ret$3;
    {
      var tmp0_lowercase_0 = Tile_LADDER_getInstance().il();
      var tmp$ret$2;
      {
        tmp$ret$2 = tmp0_lowercase_0;
      }
      tmp$ret$3 = tmp$ret$2.toLowerCase();
    }
    Tile_HLADDER_instance = new Tile('HLADDER', 6, tmp_17, tmp_18, tmp_19, tmp$ret$3);
    var tmp_20 = _Char___init__impl__6a9atx(36);
    var tmp_21 = TileLogicType_GOLD_getInstance();
    var tmp_22 = TileLogicType_EMPTY_getInstance();
    Tile_GOLD_instance = Tile_init_$Create$('GOLD', 7, tmp_20, tmp_21, tmp_22, null, 32, null);
    Tile_GUARD_instance = new Tile('GUARD', 8, _Char___init__impl__6a9atx(48), TileLogicType_EMPTY_getInstance(), TileLogicType_EMPTY_getInstance(), '');
    Tile_PLAYER_instance = new Tile('PLAYER', 9, _Char___init__impl__6a9atx(38), TileLogicType_EMPTY_getInstance(), TileLogicType_EMPTY_getInstance(), '');
    Companion_getInstance_18();
  }
  function Tile(name, ordinal, char, base, act, frameName) {
    Enum.call(this, name, ordinal);
    this.s7b_1 = char;
    this.t7b_1 = base;
    this.u7b_1 = act;
    this.v7b_1 = frameName;
  }
  Tile.prototype.y7b = function () {
    return this.s7b_1;
  };
  Tile.prototype.z7b = function () {
    return this.t7b_1;
  };
  Tile.prototype.a7c = function () {
    return this.u7b_1;
  };
  Tile.prototype.b7c = function () {
    var tmp0_elvis_lhs = this.v7b_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$1;
      {
        var tmp0_lowercase = this.il();
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_lowercase;
        }
        tmp$ret$1 = tmp$ret$0.toLowerCase();
      }
      tmp = tmp$ret$1;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  Tile.prototype.c7c = function () {
    var tmp0_subject = this;
    var tmp0 = tmp0_subject.y1();
    return (((tmp0 === 9 ? true : tmp0 === 8) ? true : tmp0 === 7) ? Tile_EMPTY_getInstance() : this).y1();
  };
  Tile.$metadata$ = classMeta('Tile', undefined, undefined, undefined, undefined, Enum.prototype);
  function packFrameNum(_this__u8e3s4, $this, f) {
    var tmp$ret$3;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(_this__u8e3s4) & _UInt___get_data__impl__f0vqqw(_UInt___init__impl__l7qpdl(65408)));
      }
      var tmp1_or = tmp$ret$0;
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          tmp$ret$1 = _UInt___init__impl__l7qpdl(f);
        }
        var tmp0_and = tmp$ret$1;
        tmp$ret$2 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp0_and) & _UInt___get_data__impl__f0vqqw(_UInt___init__impl__l7qpdl(127)));
      }
      var tmp2_or = tmp$ret$2;
      tmp$ret$3 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp1_or) | _UInt___get_data__impl__f0vqqw(tmp2_or));
    }
    return tmp$ret$3;
  }
  function unpackFrameNum(_this__u8e3s4, $this) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(_this__u8e3s4) & _UInt___get_data__impl__f0vqqw(_UInt___init__impl__l7qpdl(65407)));
      }
      var tmp0_toInt = tmp$ret$0;
      tmp$ret$1 = _UInt___get_data__impl__f0vqqw(tmp0_toInt);
    }
    return tmp$ret$1;
  }
  function Companion_10() {
    Companion_instance_10 = this;
  }
  Companion_10.prototype.d7c = function (b) {
    var tmp$ret$2;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = _UInt___init__impl__l7qpdl(b);
      }
      var tmp0_with = tmp$ret$0;
      {
      }
      var tmp$ret$1;
      {
        tmp$ret$1 = new ViewCell(false, unpackFrameNum(tmp0_with, Companion_getInstance_19()));
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  Companion_10.$metadata$ = objectMeta('Companion');
  var Companion_instance_10;
  function Companion_getInstance_19() {
    if (Companion_instance_10 == null)
      new Companion_10();
    return Companion_instance_10;
  }
  function ViewCell(hole, frameNum) {
    Companion_getInstance_19();
    this.f6y_1 = hole;
    this.g6y_1 = frameNum;
  }
  ViewCell.prototype.h6y = function () {
    var b = _UInt___init__impl__l7qpdl(0);
    b = packFrameNum(b, Companion_getInstance_19(), this.g6y_1);
    var tmp$ret$0;
    {
      var tmp0_toByte = b;
      tmp$ret$0 = toByte(_UInt___get_data__impl__f0vqqw(tmp0_toByte));
    }
    return tmp$ret$0;
  };
  ViewCell.prototype.toString = function () {
    return 'ViewCell(hole=' + this.f6y_1 + ', frameNum=' + this.g6y_1 + ')';
  };
  ViewCell.prototype.hashCode = function () {
    var result = this.f6y_1 | 0;
    result = imul(result, 31) + this.g6y_1 | 0;
    return result;
  };
  ViewCell.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof ViewCell))
      return false;
    var tmp0_other_with_cast = other instanceof ViewCell ? other : THROW_CCE();
    if (!(this.f6y_1 === tmp0_other_with_cast.f6y_1))
      return false;
    if (!(this.g6y_1 === tmp0_other_with_cast.g6y_1))
      return false;
    return true;
  };
  ViewCell.$metadata$ = classMeta('ViewCell');
  function dis(_this__u8e3s4, algo) {
    var tmp = _this__u8e3s4.k6i(algo);
    var map = joinToString$default_0(tmp, '\n', null, null, 0, null, dis$lambda(), 30, null);
    println(map);
  }
  function generateGameLevel(levelId, exampleMap, exampleWidth, exampleHeight, mapWidth, mapHeight, exampleOriginX, exampleOriginY, genOptions, tilesAtlasIndex, scope) {
    var patternSize = 3;
    println('input = ' + exampleWidth + ' x ' + exampleHeight + ', output = ' + mapWidth + ' x ' + mapHeight + ' example origin= ' + exampleOriginX + ' x ' + exampleOriginY);
    println(joinToString$default(exampleMap, '\n', null, null, 0, null, null, 62, null));
    println('for generator');
    println(joinToString$default(exampleMap, '\n', null, null, 0, null, generateGameLevel$lambda(), 30, null));
    println('raw patterns count: ' + imul((exampleWidth - patternSize | 0) + 1 | 0, (exampleHeight - patternSize | 0) + 1 | 0));
    var initials = new IntArray2D(exampleWidth, exampleHeight, generateGameLevel$lambda_0(exampleWidth, exampleMap));
    var tmp$ret$2;
    {
      var tmp = 0;
      var tmp_0 = mapHeight;
      var tmp$ret$0;
      {
        tmp$ret$0 = fillArrayVal(Array(tmp_0), null);
      }
      var tmp_1 = tmp$ret$0;
      while (tmp < tmp_0) {
        var tmp_2 = tmp;
        var tmp$ret$1;
        {
          var tmp_3 = until(0, mapWidth);
          tmp$ret$1 = joinToString$default(tmp_3, '', null, null, 0, null, generateGameLevel$lambda_1(exampleOriginX, tmp_2, exampleOriginY, exampleWidth, exampleHeight, exampleMap), 30, null);
        }
        tmp_1[tmp_2] = tmp$ret$1;
        tmp = tmp + 1 | 0;
      }
      var tmp0_apply = loadGameLevel(levelId, toList(tmp_1), tilesAtlasIndex);
      {
      }
      {
        launch$default(scope, null, null, generateGameLevel$slambda_0(initials, patternSize, mapWidth, mapHeight, genOptions, exampleMap, exampleOriginX, exampleOriginY, exampleWidth, exampleHeight, tmp0_apply, tilesAtlasIndex, null), 3, null);
      }
      tmp$ret$2 = tmp0_apply;
    }
    return tmp$ret$2;
  }
  function generateGameLevel$default(levelId, exampleMap, exampleWidth, exampleHeight, mapWidth, mapHeight, exampleOriginX, exampleOriginY, genOptions, tilesAtlasIndex, scope, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      exampleWidth = first(exampleMap).length;
    if (!(($mask0 & 8) === 0))
      exampleHeight = exampleMap.m();
    if (!(($mask0 & 16) === 0))
      mapWidth = exampleWidth;
    if (!(($mask0 & 32) === 0))
      mapHeight = exampleHeight;
    if (!(($mask0 & 64) === 0))
      exampleOriginX = (mapWidth - exampleWidth | 0) / 2 | 0;
    if (!(($mask0 & 128) === 0))
      exampleOriginY = mapHeight - exampleHeight | 0;
    if (!(($mask0 & 256) === 0)) {
      genOptions = Cartesian2DModelOptions_init_$Create$(false, true, false, true, false, false, false, false, false, false, false, false, false, true, 0.0, 19792, null);
    }
    return generateGameLevel(levelId, exampleMap, exampleWidth, exampleHeight, mapWidth, mapHeight, exampleOriginX, exampleOriginY, genOptions, tilesAtlasIndex, scope);
  }
  function loadGameLevel(levelId, map, tilesAtlasIndex) {
    return GameLevel_init_$Create$(levelId, map, tilesAtlasIndex, 0, 8, null);
  }
  function Anim_init_$Init$(pos, name, currentFrame, $mask0, $marker, $this) {
    if (!(($mask0 & 4) === 0))
      currentFrame = 0;
    Anim.call($this, pos, name, currentFrame);
    return $this;
  }
  function Anim_init_$Create$(pos, name, currentFrame, $mask0, $marker) {
    return Anim_init_$Init$(pos, name, currentFrame, $mask0, $marker, Object.create(Anim.prototype));
  }
  function Anim(pos, name, currentFrame) {
    this.e7c_1 = pos;
    this.f7c_1 = name;
    this.g7c_1 = currentFrame;
  }
  Anim.prototype.z3 = function () {
    return this.e7c_1;
  };
  Anim.prototype.a4 = function () {
    return this.f7c_1;
  };
  Anim.prototype.h7c = function () {
    return this.g7c_1;
  };
  Anim.prototype.toString = function () {
    return 'Anim(pos=' + this.e7c_1 + ', name=' + this.f7c_1 + ', currentFrame=' + this.g7c_1 + ')';
  };
  Anim.prototype.hashCode = function () {
    var result = this.e7c_1.hashCode();
    result = imul(result, 31) + getStringHashCode(this.f7c_1) | 0;
    result = imul(result, 31) + this.g7c_1 | 0;
    return result;
  };
  Anim.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Anim))
      return false;
    var tmp0_other_with_cast = other instanceof Anim ? other : THROW_CCE();
    if (!this.e7c_1.equals(tmp0_other_with_cast.e7c_1))
      return false;
    if (!(this.f7c_1 === tmp0_other_with_cast.f7c_1))
      return false;
    if (!(this.g7c_1 === tmp0_other_with_cast.g7c_1))
      return false;
    return true;
  };
  Anim.$metadata$ = classMeta('Anim');
  var Status_LEVEL_STARTUP_instance;
  var Status_LEVEL_PAUSED_instance;
  var Status_LEVEL_PLAYING_instance;
  var Status_LEVEL_DONE_instance;
  var Status_entriesInitialized;
  function Status_initEntries() {
    if (Status_entriesInitialized)
      return Unit_getInstance();
    Status_entriesInitialized = true;
    Status_LEVEL_STARTUP_instance = new Status('LEVEL_STARTUP', 0);
    Status_LEVEL_PAUSED_instance = new Status('LEVEL_PAUSED', 1);
    Status_LEVEL_PLAYING_instance = new Status('LEVEL_PLAYING', 2);
    Status_LEVEL_DONE_instance = new Status('LEVEL_DONE', 3);
  }
  function GameLevel_init_$Init$(levelId, map, primaryTileSet, maxGuards, $mask0, $marker, $this) {
    if (!(($mask0 & 8) === 0))
      maxGuards = 5;
    GameLevel.call($this, levelId, map, primaryTileSet, maxGuards);
    return $this;
  }
  function GameLevel_init_$Create$(levelId, map, primaryTileSet, maxGuards, $mask0, $marker) {
    return GameLevel_init_$Init$(levelId, map, primaryTileSet, maxGuards, $mask0, $marker, Object.create(GameLevel.prototype));
  }
  function Status(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  Status.$metadata$ = classMeta('Status', undefined, undefined, undefined, undefined, Enum.prototype);
  function stopAllAnims($this) {
    var i = $this.d74_1.h();
    while (i.n()) {
      var a = i.o();
      if ((a.f7c_1 === 'fillHole' ? true : a.f7c_1 === 'digHoleLeftBase') ? true : a.f7c_1 === 'digHoleRightBase') {
        $this.i7c(a.e7c_1, new ViewCell(false, ensureNotNull($this.r73_1.b3(Tile_BRICK_getInstance().b7c()))));
        $this.a74_1[a.e7c_1.e23()][a.e7c_1.g23()] = TileLogicType_BLOCK_getInstance();
      }
      i.e4();
    }
  }
  function Status_LEVEL_STARTUP_getInstance() {
    Status_initEntries();
    return Status_LEVEL_STARTUP_instance;
  }
  function Status_LEVEL_PAUSED_getInstance() {
    Status_initEntries();
    return Status_LEVEL_PAUSED_instance;
  }
  function Status_LEVEL_PLAYING_getInstance() {
    Status_initEntries();
    return Status_LEVEL_PLAYING_instance;
  }
  function Status_LEVEL_DONE_getInstance() {
    Status_initEntries();
    return Status_LEVEL_DONE_instance;
  }
  function GameLevel(levelId, map, primaryTileSet, maxGuards) {
    this.p73_1 = levelId;
    this.q73_1 = map;
    this.r73_1 = primaryTileSet;
    this.s73_1 = maxGuards;
    this.t73_1 = first(this.q73_1).length;
    this.u73_1 = this.q73_1.m() + 1 | 0;
    this.v73_1 = createUint8Buffer(imul(this.t73_1, this.u73_1));
    this.w73_1 = MutableVec2i_init_$Create$_0();
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.x73_1 = tmp$ret$0;
    this.y73_1 = 0;
    this.z73_1 = Status_LEVEL_STARTUP_getInstance();
    var tmp_0 = this;
    var tmp_1 = 0;
    var tmp_2 = this.t73_1;
    var tmp$ret$1;
    {
      tmp$ret$1 = fillArrayVal(Array(tmp_2), null);
    }
    var tmp_3 = tmp$ret$1;
    while (tmp_1 < tmp_2) {
      var tmp_4 = tmp_1;
      var tmp$ret$4;
      {
        var tmp_5 = 0;
        var tmp_6 = this.u73_1;
        var tmp$ret$2;
        {
          tmp$ret$2 = fillArrayVal(Array(tmp_6), null);
        }
        var tmp_7 = tmp$ret$2;
        while (tmp_5 < tmp_6) {
          var tmp_8 = tmp_5;
          var tmp$ret$3;
          {
            tmp$ret$3 = TileLogicType_EMPTY_getInstance();
          }
          tmp_7[tmp_8] = tmp$ret$3;
          tmp_5 = tmp_5 + 1 | 0;
        }
        tmp$ret$4 = tmp_7;
      }
      tmp_3[tmp_4] = tmp$ret$4;
      tmp_1 = tmp_1 + 1 | 0;
    }
    tmp_0.a74_1 = tmp_3;
    var tmp_9 = this;
    var tmp_10 = 0;
    var tmp_11 = this.t73_1;
    var tmp$ret$5;
    {
      tmp$ret$5 = fillArrayVal(Array(tmp_11), null);
    }
    var tmp_12 = tmp$ret$5;
    while (tmp_10 < tmp_11) {
      var tmp_13 = tmp_10;
      var tmp$ret$8;
      {
        var tmp_14 = 0;
        var tmp_15 = this.u73_1;
        var tmp$ret$6;
        {
          tmp$ret$6 = fillArrayVal(Array(tmp_15), null);
        }
        var tmp_16 = tmp$ret$6;
        while (tmp_14 < tmp_15) {
          var tmp_17 = tmp_14;
          var tmp$ret$7;
          {
            tmp$ret$7 = TileLogicType_EMPTY_getInstance();
          }
          tmp_16[tmp_17] = tmp$ret$7;
          tmp_14 = tmp_14 + 1 | 0;
        }
        tmp$ret$8 = tmp_16;
      }
      tmp_12[tmp_13] = tmp$ret$8;
      tmp_10 = tmp_10 + 1 | 0;
    }
    tmp_9.b74_1 = tmp_12;
    var tmp_18 = this;
    var tmp_19 = 0;
    var tmp_20 = this.t73_1;
    var tmp$ret$9;
    {
      tmp$ret$9 = fillArrayVal(Array(tmp_20), null);
    }
    var tmp_21 = tmp$ret$9;
    while (tmp_19 < tmp_20) {
      var tmp_22 = tmp_19;
      var tmp$ret$12;
      {
        var tmp_23 = 0;
        var tmp_24 = this.u73_1;
        var tmp$ret$10;
        {
          tmp$ret$10 = fillArrayVal(Array(tmp_24), null);
        }
        var tmp_25 = tmp$ret$10;
        while (tmp_23 < tmp_24) {
          var tmp_26 = tmp_23;
          var tmp$ret$11;
          {
            tmp$ret$11 = false;
          }
          tmp_25[tmp_26] = tmp$ret$11;
          tmp_23 = tmp_23 + 1 | 0;
        }
        tmp$ret$12 = tmp_25;
      }
      tmp_21[tmp_22] = tmp$ret$12;
      tmp_19 = tmp_19 + 1 | 0;
    }
    tmp_18.c74_1 = tmp_21;
    var tmp_27 = this;
    var tmp$ret$13;
    {
      tmp$ret$13 = ArrayList_init_$Create$_0();
    }
    tmp_27.d74_1 = tmp$ret$13;
    this.e74_1 = false;
    this.f74_1 = null;
    println('creating level ' + this.p73_1 + ' ' + this.t73_1 + ' x ' + this.u73_1);
    println('from map:');
    println(joinToString$default(this.q73_1, '\n', null, null, 0, null, null, 62, null));
    this.l4q();
  }
  GameLevel.prototype.j7c = function () {
    return this.s73_1;
  };
  GameLevel.prototype.u3z = function () {
    return this.t73_1;
  };
  GameLevel.prototype.v3z = function () {
    return this.u73_1;
  };
  GameLevel.prototype.k7c = function () {
    return this.w73_1;
  };
  GameLevel.prototype.l7c = function () {
    return this.x73_1;
  };
  GameLevel.prototype.m7c = function (_set____db54di) {
    this.y73_1 = _set____db54di;
  };
  GameLevel.prototype.n7c = function () {
    return this.y73_1;
  };
  GameLevel.prototype.h79 = function () {
    return this.y73_1 === 0;
  };
  GameLevel.prototype.a7c = function () {
    return this.a74_1;
  };
  GameLevel.prototype.z7b = function () {
    return this.b74_1;
  };
  GameLevel.prototype.o7c = function () {
    return this.c74_1;
  };
  GameLevel.prototype.p7c = function (_set____db54di) {
    this.e74_1 = _set____db54di;
  };
  GameLevel.prototype.q7c = function () {
    return this.e74_1;
  };
  GameLevel.prototype.r7c = function (_set____db54di) {
    this.f74_1 = _set____db54di;
  };
  GameLevel.prototype.g79 = function (runner) {
    var iter = this.d74_1.h();
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    var toAdd = tmp$ret$0;
    $l$loop_0: while (iter.n()) {
      var entry = iter.o();
      var tmp0_container = entry;
      var pos = tmp0_container.z3();
      var animName = tmp0_container.a4();
      var frame = tmp0_container.h7c();
      var tmp1_this = entry;
      var tmp2 = tmp1_this.g7c_1;
      tmp1_this.g7c_1 = tmp2 + 1 | 0;
      var tmp3_safe_receiver = this.f74_1;
      var tmp4_safe_receiver = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.a6l_1;
      var tmp5_elvis_lhs = tmp4_safe_receiver == null ? null : tmp4_safe_receiver.b3(animName);
      var tmp;
      if (tmp5_elvis_lhs == null) {
        continue $l$loop_0;
      } else {
        tmp = tmp5_elvis_lhs;
      }
      var animArray = tmp;
      var tmp6_container = pos;
      var x = component1(tmp6_container);
      var y = component2(tmp6_container);
      if (frame < animArray.m()) {
        var tileIndex = animArray.r(frame);
        if ((animName === 'digHoleLeftBase' ? true : animName === 'digHoleRightBase') ? this.c74_1[x][y - 1 | 0] : false) {
          this.a74_1[x][y] = TileLogicType_BLOCK_getInstance();
          this.s7c(x, y, new ViewCell(false, ensureNotNull(this.r73_1.b3(Tile_BRICK_getInstance().b7c()))));
          this.c74_1[x][y] = false;
          runner.l78().a76(Sound_DIG_getInstance());
          iter.e4();
          continue $l$loop_0;
        } else {
          this.s7c(x, y, new ViewCell(true, tileIndex));
        }
      } else {
        if (animName === 'fillHole') {
          this.i7c(pos, new ViewCell(false, ensureNotNull(this.r73_1.b3(Tile_BRICK_getInstance().b7c()))));
          this.a74_1[x][y] = TileLogicType_BLOCK_getInstance();
        }
        if (animName === 'digHoleLeftBase' ? true : animName === 'digHoleRightBase') {
          toAdd.b(Anim_init_$Create$(pos, 'fillHole', 0, 4, null));
        }
        if (animName === 'digHoleLeft' ? true : animName === 'digHoleRight') {
          this.i7c(pos, new ViewCell(false, ensureNotNull(this.r73_1.b3(Tile_EMPTY_getInstance().b7c()))));
          this.a74_1[pos.e23()][pos.g23()] = TileLogicType_EMPTY_getInstance();
        }
        iter.e4();
      }
    }
    this.d74_1.o1(toAdd);
  };
  GameLevel.prototype.r2g = function (x, y) {
    return this.t7c(x, y) ? Companion_getInstance_19().d7c(this.v73_1.r(imul(y, this.t73_1) + x | 0)) : null;
  };
  GameLevel.prototype.s7c = function (x, y, v) {
    if (this.t7c(x, y))
      this.v73_1.v55(imul(y, this.t73_1) + x | 0, v.h6y());
    this.e74_1 = true;
  };
  GameLevel.prototype.i7c = function (at, v) {
    return this.s7c(at.e23(), at.g23(), v);
  };
  GameLevel.prototype.u7c = function (x, y, t) {
    if (this.t7c(x, y)) {
      var tmp0_safe_receiver = this.r2g(x, y);
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.f6y_1;
      var tmp = tmp1_elvis_lhs == null ? false : tmp1_elvis_lhs;
      var tmp2_elvis_lhs = this.r73_1.b3(t.b7c());
      this.s7c(x, y, new ViewCell(tmp, tmp2_elvis_lhs == null ? 0 : tmp2_elvis_lhs));
    }
  };
  GameLevel.prototype.v7c = function (at) {
    return this.w7c(at.e23(), at.g23());
  };
  GameLevel.prototype.w7c = function (x, y) {
    return NeighborhoodNeumann2d_getInstance().y7c(x, y);
  };
  GameLevel.prototype.c7b = function (at) {
    return this.a74_1[at.e23()][at.g23()];
  };
  GameLevel.prototype.t7c = function (x, y) {
    return ((x >= 0 ? x < this.t73_1 : false) ? y >= 0 : false) ? y < this.u73_1 : false;
  };
  GameLevel.prototype.l4q = function () {
    stopAllAnims(this);
    this.y73_1 = 0;
    this.x73_1.t7();
    {
      var tmp0_forEachIndexed = this.q73_1;
      var index = 0;
      var tmp0_iterator = tmp0_forEachIndexed.h();
      while (tmp0_iterator.n()) {
        var item = tmp0_iterator.o();
        {
          var tmp1 = index;
          index = tmp1 + 1 | 0;
          var tmp1__anonymous__uwfjfc = checkIndexOverflow(tmp1);
          {
            var index_0 = 0;
            var indexedObject = item;
            var inductionVariable = 0;
            var last = indexedObject.length;
            while (inductionVariable < last) {
              var item_0 = charSequenceGet(indexedObject, inductionVariable);
              inductionVariable = inductionVariable + 1 | 0;
              {
                var tmp1_0 = index_0;
                index_0 = tmp1_0 + 1 | 0;
                var tmp0__anonymous__q1qw7t = tmp1_0;
                var guard = false;
                var tile = ensureNotNull(Companion_getInstance_18().w7b_1.b3(new Char(item_0)));
                var tmp0_subject = tile;
                var tmp0 = tmp0_subject.y1();
                switch (tmp0) {
                  case 9:
                    this.w73_1.r2i(tmp0__anonymous__q1qw7t);
                    this.w73_1.s2i(tmp1__anonymous__uwfjfc);
                    break;
                  case 8:
                    if (this.x73_1.m() < this.s73_1) {
                      guard = true;
                      this.x73_1.b(new Vec2i(tmp0__anonymous__q1qw7t, tmp1__anonymous__uwfjfc));
                    }

                    break;
                  case 7:
                    var tmp1_this = this;
                    var tmp2 = tmp1_this.y73_1;
                    tmp1_this.y73_1 = tmp2 + 1 | 0;
                    ;
                    break;
                  default:
                    ;
                    break;
                }
                this.a74_1[tmp0__anonymous__q1qw7t][tmp1__anonymous__uwfjfc] = tile.u7b_1;
                this.b74_1[tmp0__anonymous__q1qw7t][tmp1__anonymous__uwfjfc] = tile.t7b_1;
                this.c74_1[tmp0__anonymous__q1qw7t][tmp1__anonymous__uwfjfc] = guard;
                var tmp;
                var tmp_0;
                if (tile.t7b_1.equals(TileLogicType_HLADR_getInstance())) {
                  tmp_0 = true;
                } else {
                  var tmp$ret$0;
                  {
                    var tmp0_isEmpty = tile.b7c();
                    tmp$ret$0 = charSequenceLength(tmp0_isEmpty) === 0;
                  }
                  tmp_0 = tmp$ret$0;
                }
                if (tmp_0) {
                  tmp = Tile_EMPTY_getInstance().b7c();
                } else {
                  tmp = tile.b7c();
                }
                this.s7c(tmp0__anonymous__q1qw7t, tmp1__anonymous__uwfjfc, new ViewCell(false, ensureNotNull(this.r73_1.b3(tmp))));
              }
            }
          }
        }
      }
    }
    this.z7c(this.r73_1);
    {
      var tmp2_forEach = this.c74_1;
      var indexedObject_0 = tmp2_forEach;
      var inductionVariable_0 = 0;
      var last_0 = indexedObject_0.length;
      while (inductionVariable_0 < last_0) {
        var element = indexedObject_0[inductionVariable_0];
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        {
          {
            var index_1 = 0;
            var indexedObject_1 = element;
            var inductionVariable_1 = 0;
            var last_1 = indexedObject_1.length;
            while (inductionVariable_1 < last_1) {
              var item_1 = indexedObject_1[inductionVariable_1];
              inductionVariable_1 = inductionVariable_1 + 1 | 0;
              {
                var tmp1_1 = index_1;
                index_1 = tmp1_1 + 1 | 0;
                var tmp0__anonymous__q1qw7t_0 = tmp1_1;
                element[tmp0__anonymous__q1qw7t_0] = false;
              }
            }
          }
        }
      }
    }
    {
      var tmp3_forEach = this.x73_1;
      var tmp0_iterator_0 = tmp3_forEach.h();
      while (tmp0_iterator_0.n()) {
        var element_0 = tmp0_iterator_0.o();
        {
          this.c74_1[element_0.e23()][element_0.g23()] = true;
        }
      }
    }
    this.e74_1 = true;
  };
  GameLevel.prototype.z7c = function (tileSet) {
    var inductionVariable = 0;
    var last = this.t73_1;
    if (inductionVariable < last)
      do {
        var x = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.a74_1[x][this.u73_1 - 1 | 0] = TileLogicType_SOLID_getInstance();
        this.b74_1[x][this.u73_1 - 1 | 0] = TileLogicType_SOLID_getInstance();
        var tmp1_safe_receiver = tileSet.b3('ground');
        if (tmp1_safe_receiver == null)
          null;
        else {
          var tmp$ret$0;
          {
            {
            }
            tmp$ret$0 = this.s7c(x, this.u73_1 - 1 | 0, new ViewCell(false, tmp1_safe_receiver));
          }
        }
      }
       while (inductionVariable < last);
  };
  GameLevel.prototype.a7d = function () {
    return new TextureData2d(this.v73_1, this.t73_1, this.u73_1, TexFormat_R_getInstance());
  };
  GameLevel.prototype.m79 = function () {
    var inductionVariable = 0;
    var last = this.u73_1;
    if (inductionVariable < last)
      do {
        var y = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var inductionVariable_0 = 0;
        var last_0 = this.t73_1;
        if (inductionVariable_0 < last_0)
          do {
            var x = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            if (this.b74_1[x][y].equals(TileLogicType_HLADR_getInstance())) {
              this.a74_1[x][y] = TileLogicType_LADDR_getInstance();
              this.s7c(x, y, new ViewCell(false, ensureNotNull(this.r73_1.b3(Tile_LADDER_getInstance().b7c()))));
            }
          }
           while (inductionVariable_0 < last_0);
      }
       while (inductionVariable < last);
    this.z73_1 = Status_LEVEL_DONE_getInstance();
  };
  GameLevel.prototype.u7a = function (x, y) {
    this.b74_1[x][y] = TileLogicType_GOLD_getInstance();
    this.u7c(x, y, Tile_GOLD_getInstance());
  };
  GameLevel.prototype.h78 = function (x, y) {
    this.b74_1[x][y] = TileLogicType_EMPTY_getInstance();
    this.u7c(x, y, Tile_EMPTY_getInstance());
  };
  GameLevel.prototype.w7a = function (x, y) {
    return (this.t7c(x, y) ? this.b74_1[x][y].equals(TileLogicType_BLOCK_getInstance()) : false) ? this.a74_1[x][y].equals(TileLogicType_EMPTY_getInstance()) : false;
  };
  GameLevel.prototype.l7b = function (x, y) {
    return this.t7c(x, y) ? this.a74_1[x][y].equals(TileLogicType_BLOCK_getInstance()) : false;
  };
  GameLevel.prototype.u74 = function (x, y) {
    var tmp;
    if (!this.t7c(x, y)) {
      tmp = true;
    } else {
      var tmp$ret$1;
      {
        var tmp0_run = this.a74_1[x][y];
        {
        }
        var tmp$ret$0;
        {
          tmp$ret$0 = (tmp0_run.equals(TileLogicType_BLOCK_getInstance()) ? true : tmp0_run.equals(TileLogicType_SOLID_getInstance())) ? true : tmp0_run.equals(TileLogicType_TRAP_getInstance());
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    return tmp;
  };
  GameLevel.prototype.h74 = function (x, y) {
    return (this.t7c(x, y) ? !this.a74_1[x][y].equals(TileLogicType_BLOCK_getInstance()) : false) ? !this.a74_1[x][y].equals(TileLogicType_SOLID_getInstance()) : false;
  };
  GameLevel.prototype.x7a = function (x, y, hidden) {
    return this.t7c(x, y) ? this.a74_1[x][y].equals(TileLogicType_LADDR_getInstance()) ? true : this.b74_1[x][y].equals(TileLogicType_HLADR_getInstance()) ? hidden : false : false;
  };
  GameLevel.prototype.g74 = function (x, y, hidden, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      hidden = this.h79();
    return this.x7a(x, y, hidden);
  };
  GameLevel.prototype.f7b = function (at, hidden) {
    return this.x7a(at.e23(), at.g23(), hidden);
  };
  GameLevel.prototype.b7d = function (x, y, useBase, useGuard) {
    var tmp;
    if (useBase) {
      tmp = this.b74_1;
    } else {
      tmp = this.a74_1;
    }
    var check = tmp;
    return (((!this.t7c(x, y) ? true : check[x][y].equals(TileLogicType_BLOCK_getInstance())) ? true : check[x][y].equals(TileLogicType_SOLID_getInstance())) ? true : check[x][y].equals(TileLogicType_LADDR_getInstance())) ? true : useGuard ? this.w76(x, y) : false;
  };
  GameLevel.prototype.c76 = function (x, y, useBase, useGuard, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      useBase = false;
    if (!(($mask0 & 8) === 0))
      useGuard = true;
    return this.b7d(x, y, useBase, useGuard);
  };
  GameLevel.prototype.d7b = function (at, useBase, useGuard) {
    return this.b7d(at.e23(), at.g23(), useBase, useGuard);
  };
  GameLevel.prototype.g7b = function (at, useBase, useGuard, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      useBase = false;
    if (!(($mask0 & 4) === 0))
      useGuard = true;
    return this.d7b(at, useBase, useGuard);
  };
  GameLevel.prototype.s74 = function (x, y) {
    return this.t7c(x, y) ? this.b74_1[x][y].equals(TileLogicType_BAR_getInstance()) : false;
  };
  GameLevel.prototype.e7b = function (at) {
    return this.s74(at.e23(), at.g23());
  };
  GameLevel.prototype.j78 = function (x, y) {
    return this.t7c(x, y) ? this.b74_1[x][y].equals(TileLogicType_GOLD_getInstance()) : false;
  };
  GameLevel.prototype.v7a = function (x, y) {
    return ((this.t7c(x, y) ? this.a74_1[x][y].equals(TileLogicType_EMPTY_getInstance()) : false) ? !this.b74_1[x][y].equals(TileLogicType_GOLD_getInstance()) : false) ? !this.w76(x, y) : false;
  };
  GameLevel.prototype.w76 = function (x, y) {
    return this.t7c(x, y) ? this.c74_1[x][y] : false;
  };
  GameLevel.prototype.k7b = function (at) {
    return this.w76(at.e23(), at.g23());
  };
  GameLevel.$metadata$ = classMeta('GameLevel');
  function NeighbourhoodTopology$NeighborhoodNeumann2d$neighbours$lambda($x, $y) {
    return function (_name_for_destructuring_parameter_0__wldtmu) {
      var tmp$ret$0;
      {
        tmp$ret$0 = _name_for_destructuring_parameter_0__wldtmu.r(0);
      }
      var dx = tmp$ret$0;
      var tmp$ret$1;
      {
        tmp$ret$1 = _name_for_destructuring_parameter_0__wldtmu.r(1);
      }
      var dy = tmp$ret$1;
      return sequenceOf([$x + dx | 0, $y + dy | 0]);
    };
  }
  function NeighborhoodNeumann2d() {
    NeighborhoodNeumann2d_instance = this;
    NeighbourhoodTopology.call(this);
    var tmp = this;
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = [0, -1, -1, 0, 1, 0, 0, 1];
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    tmp.x7c_1 = tmp$ret$2;
  }
  NeighborhoodNeumann2d.prototype.y7c = function (x, y) {
    var tmp = chunked(asSequence(this.x7c_1), 2);
    return flatMap(tmp, NeighbourhoodTopology$NeighborhoodNeumann2d$neighbours$lambda(x, y));
  };
  NeighborhoodNeumann2d.$metadata$ = objectMeta('NeighborhoodNeumann2d', undefined, undefined, undefined, undefined, NeighbourhoodTopology.prototype);
  var NeighborhoodNeumann2d_instance;
  function NeighborhoodNeumann2d_getInstance() {
    if (NeighborhoodNeumann2d_instance == null)
      new NeighborhoodNeumann2d();
    return NeighborhoodNeumann2d_instance;
  }
  function NeighbourhoodTopology() {
  }
  NeighbourhoodTopology.$metadata$ = classMeta('NeighbourhoodTopology');
  function dis$lambda() {
    return function (row) {
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          var tmp0_mapTo = ArrayList_init_$Create$(row.length);
          var indexedObject = row;
          var inductionVariable = 0;
          var last = indexedObject.length;
          while (inductionVariable < last) {
            var item = indexedObject[inductionVariable];
            inductionVariable = inductionVariable + 1 | 0;
            var tmp$ret$0;
            {
              var tmp0_subject = item;
              tmp$ret$0 = tmp0_subject == null ? '.' : tmp0_subject === IntCompanionObject_getInstance().c1_1 ? '!' : toString_0(values_3()[item].s7b_1);
            }
            tmp0_mapTo.b(tmp$ret$0);
          }
          tmp$ret$1 = tmp0_mapTo;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      var tmp = tmp$ret$2;
      return joinToString$default(tmp, '', null, null, 0, null, null, 62, null);
    };
  }
  function generateGameLevel$lambda() {
    return function (it) {
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          var tmp0_mapTo = ArrayList_init_$Create$(charSequenceLength(it));
          var indexedObject = it;
          var inductionVariable = 0;
          var last = indexedObject.length;
          while (inductionVariable < last) {
            var item = charSequenceGet(indexedObject, inductionVariable);
            inductionVariable = inductionVariable + 1 | 0;
            var tmp$ret$0;
            {
              tmp$ret$0 = values_3()[ensureNotNull(Companion_getInstance_18().w7b_1.b3(new Char(item))).c7c()].s7b_1;
            }
            tmp0_mapTo.b(new Char(tmp$ret$0));
          }
          tmp$ret$1 = tmp0_mapTo;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      var tmp = tmp$ret$2;
      return joinToString$default(tmp, '', null, null, 0, null, null, 62, null);
    };
  }
  function generateGameLevel$lambda_0($exampleWidth, $exampleMap) {
    return function (idx) {
      var x = idx % $exampleWidth | 0;
      var y = idx / $exampleWidth | 0;
      return ensureNotNull(Companion_getInstance_18().w7b_1.b3(new Char(charSequenceGet($exampleMap.r(y), x)))).c7c();
    };
  }
  function generateGameLevel$lambda_1($exampleOriginX, $tmp, $exampleOriginY, $exampleWidth, $exampleHeight, $exampleMap) {
    return function (x) {
      var exampleX = x - $exampleOriginX | 0;
      var exampleY = $tmp - $exampleOriginY | 0;
      var tileIndex = ((0 <= exampleX ? exampleX < $exampleWidth : false) ? 0 <= exampleY ? exampleY < $exampleHeight : false : false) ? charSequenceGet($exampleMap.r(exampleY), exampleX) : values_3()[0].s7b_1;
      return toString_0(tileIndex);
    };
  }
  function generateGameLevel$slambda$lambda() {
    return function (it) {
      println('failed');
      return Unit_getInstance();
    };
  }
  function generateGameLevel$slambda$lambda$lambda() {
    return function (it) {
      var tmp0_subject = it;
      return tmp0_subject == null ? '.' : tmp0_subject === IntCompanionObject_getInstance().c1_1 ? '!' : '' + it;
    };
  }
  function generateGameLevel$slambda$lambda_0() {
    return function (row) {
      return joinToString$default_0(row, '', null, null, 0, null, generateGameLevel$slambda$lambda$lambda(), 30, null);
    };
  }
  function generateGameLevel$slambda($initials, $patternSize, $mapWidth, $mapHeight, $genOptions, $exampleMap, $exampleOriginX, $exampleOriginY, $exampleWidth, $exampleHeight, $tmp0_apply, $tilesAtlasIndex, resultContinuation) {
    this.k7d_1 = $initials;
    this.l7d_1 = $patternSize;
    this.m7d_1 = $mapWidth;
    this.n7d_1 = $mapHeight;
    this.o7d_1 = $genOptions;
    this.p7d_1 = $exampleMap;
    this.q7d_1 = $exampleOriginX;
    this.r7d_1 = $exampleOriginY;
    this.s7d_1 = $exampleWidth;
    this.t7d_1 = $exampleHeight;
    this.u7d_1 = $tmp0_apply;
    this.v7d_1 = $tilesAtlasIndex;
    CoroutineImpl.call(this, resultContinuation);
  }
  generateGameLevel$slambda.prototype.d1v = function ($this$launch, $cont) {
    var tmp = this.e1v($this$launch, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  generateGameLevel$slambda.prototype.s7 = function (p1, $cont) {
    return this.d1v((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  generateGameLevel$slambda.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        if (tmp === 0) {
          this.l7_1 = 1;
          var wcf = OverlappingCartesian2DModel_init_$Create$(this.k7d_1, this.l7d_1 - 1 | 0, this.m7d_1, this.n7d_1, this.o7d_1);
          var index = 0;
          var tmp0_iterator = this.p7d_1.h();
          while (tmp0_iterator.n()) {
            var item = tmp0_iterator.o();
            var tmp1 = index;
            index = tmp1 + 1 | 0;
            var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
            var index_0 = 0;
            var indexedObject = item;
            var inductionVariable = 0;
            var last = indexedObject.length;
            while (inductionVariable < last) {
              var item_0 = charSequenceGet(indexedObject, inductionVariable);
              inductionVariable = inductionVariable + 1 | 0;
              var tmp1_0 = index_0;
              index_0 = tmp1_0 + 1 | 0;
              var tmp0__anonymous__q1qw7t_0 = tmp1_0;
              wcf.z6h(this.q7d_1 + tmp0__anonymous__q1qw7t_0 | 0, this.r7d_1 + tmp0__anonymous__q1qw7t | 0, ensureNotNull(Companion_getInstance_18().w7b_1.b3(new Char(charSequenceGet(this.p7d_1.r(tmp0__anonymous__q1qw7t), tmp0__anonymous__q1qw7t_0)))).c7c());
            }
          }
          var tmp0_measureTimedValue = Monotonic_getInstance();
          var mark = tmp0_measureTimedValue.yb();
          var result = wcf.sr();
          var tmp0_container = new TimedValue(result, ValueTimeMark__elapsedNow_impl_eonqvs(mark));
          var algo = tmp0_container.z3();
          var buildTime = tmp0_container.bc();
          println('algorithm build in ' + new Duration(buildTime));
          var tmp1_this = algo;
          var tmp_0 = tmp1_this.h6b();
          tmp_0.u6f(generateGameLevel$slambda$lambda());
          var tmp0_measureTimedValue_0 = Monotonic_getInstance();
          var mark_0 = tmp0_measureTimedValue_0.yb();
          var result_0 = algo.n6b(2, 0, 0, 6, null);
          var tmp2_container = new TimedValue(result_0, ValueTimeMark__elapsedNow_impl_eonqvs(mark_0));
          var res = tmp2_container.z3();
          var dur = tmp2_container.bc();
          println('wcf run in ' + new Duration(dur) + ' with result = ' + res);
          dis(wcf, algo);
          var out = wcf.k6i(algo);
          var tmp1_map = until(0, this.m7d_1);
          var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
          var inductionVariable_0 = tmp1_map.i9();
          var last_0 = tmp1_map.k9();
          if (inductionVariable_0 <= last_0)
            do {
              var item_1 = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              tmp0_mapTo.b((item_1 % 10 | 0) === 0 ? item_1 / 10 | 0 : ' ');
            }
             while (!(item_1 === last_0));
          println(joinToString$default(tmp0_mapTo, '', null, null, 0, null, null, 62, null));
          var tmp2_map = until(0, this.m7d_1);
          var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp2_map, 10));
          var inductionVariable_1 = tmp2_map.i9();
          var last_1 = tmp2_map.k9();
          if (inductionVariable_1 <= last_1)
            do {
              var item_2 = inductionVariable_1;
              inductionVariable_1 = inductionVariable_1 + 1 | 0;
              tmp0_mapTo_0.b(item_2 % 10 | 0);
            }
             while (!(item_2 === last_1));
          println(joinToString$default(tmp0_mapTo_0, '', null, null, 0, null, null, 62, null));
          println(joinToString$default_0(out, '\n', null, null, 0, null, generateGameLevel$slambda$lambda_0(), 30, null));
          var index_1 = 0;
          var tmp0_iterator_0 = this.p7d_1.h();
          while (tmp0_iterator_0.n()) {
            var item_3 = tmp0_iterator_0.o();
            var tmp1_1 = index_1;
            index_1 = tmp1_1 + 1 | 0;
            var tmp3__anonymous__ufb84q = checkIndexOverflow(tmp1_1);
            var index_2 = 0;
            var indexedObject_0 = item_3;
            var inductionVariable_2 = 0;
            var last_2 = indexedObject_0.length;
            while (inductionVariable_2 < last_2) {
              var item_4 = charSequenceGet(indexedObject_0, inductionVariable_2);
              inductionVariable_2 = inductionVariable_2 + 1 | 0;
              var tmp1_2 = index_2;
              index_2 = tmp1_2 + 1 | 0;
              var tmp0__anonymous__q1qw7t_1 = tmp1_2;
              out[tmp3__anonymous__ufb84q + this.r7d_1 | 0][this.q7d_1 + tmp0__anonymous__q1qw7t_1 | 0] = ensureNotNull(Companion_getInstance_18().w7b_1.b3(new Char(charSequenceGet(this.p7d_1.r(tmp3__anonymous__ufb84q), tmp0__anonymous__q1qw7t_1)))).y1();
            }
          }
          var index_3 = 0;
          var indexedObject_1 = out;
          var inductionVariable_3 = 0;
          var last_3 = indexedObject_1.length;
          while (inductionVariable_3 < last_3) {
            var item_5 = indexedObject_1[inductionVariable_3];
            inductionVariable_3 = inductionVariable_3 + 1 | 0;
            var tmp1_3 = index_3;
            index_3 = tmp1_3 + 1 | 0;
            var tmp4__anonymous__pkmkx7 = tmp1_3;
            var index_4 = 0;
            var indexedObject_2 = item_5;
            var inductionVariable_4 = 0;
            var last_4 = indexedObject_2.length;
            while (inductionVariable_4 < last_4) {
              var item_6 = indexedObject_2[inductionVariable_4];
              inductionVariable_4 = inductionVariable_4 + 1 | 0;
              var tmp$ret$0;
              l$ret$1: do {
                var tmp1_4 = index_4;
                index_4 = tmp1_4 + 1 | 0;
                var tmp0__anonymous__q1qw7t_2 = tmp1_4;
                if (item_6 == null ? true : item_6 === IntCompanionObject_getInstance().c1_1) {
                  tmp$ret$0 = Unit_getInstance();
                  break l$ret$1;
                }
                var tmp_1;
                var containsUpper = this.s7d_1;
                var containsArg = tmp0__anonymous__q1qw7t_2 - this.q7d_1 | 0;
                if (0 <= containsArg ? containsArg < containsUpper : false) {
                  var containsUpper_0 = this.t7d_1;
                  var containsArg_0 = tmp4__anonymous__pkmkx7 - this.r7d_1 | 0;
                  tmp_1 = 0 <= containsArg_0 ? containsArg_0 < containsUpper_0 : false;
                } else {
                  tmp_1 = false;
                }
                if (tmp_1) {
                  tmp$ret$0 = Unit_getInstance();
                  break l$ret$1;
                }
                var tile = values_3()[item_6];
                this.u7d_1.a74_1[tmp0__anonymous__q1qw7t_2][tmp4__anonymous__pkmkx7] = tile.u7b_1;
                this.u7d_1.b74_1[tmp0__anonymous__q1qw7t_2][tmp4__anonymous__pkmkx7] = tile.t7b_1;
                var tmp_2;
                var tmp_3;
                if (tile.t7b_1.equals(TileLogicType_HLADR_getInstance())) {
                  tmp_3 = true;
                } else {
                  var tmp0_isEmpty = tile.b7c();
                  tmp_3 = charSequenceLength(tmp0_isEmpty) === 0;
                }
                if (tmp_3) {
                  tmp_2 = Tile_EMPTY_getInstance().b7c();
                } else {
                  tmp_2 = tile.b7c();
                }
                this.u7d_1.s7c(tmp0__anonymous__q1qw7t_2, tmp4__anonymous__pkmkx7, new ViewCell(false, ensureNotNull(this.v7d_1.b3(tmp_2))));
              }
               while (false);
            }
          }
          return Unit_getInstance();
        } else if (tmp === 1) {
          throw this.n7_1;
        }
      } catch ($p) {
        throw $p;
      }
     while (true);
  };
  generateGameLevel$slambda.prototype.e1v = function ($this$launch, completion) {
    var i = new generateGameLevel$slambda(this.k7d_1, this.l7d_1, this.m7d_1, this.n7d_1, this.o7d_1, this.p7d_1, this.q7d_1, this.r7d_1, this.s7d_1, this.t7d_1, this.u7d_1, this.v7d_1, completion);
    i.w7d_1 = $this$launch;
    return i;
  };
  generateGameLevel$slambda.$metadata$ = classMeta('generateGameLevel$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function generateGameLevel$slambda_0($initials, $patternSize, $mapWidth, $mapHeight, $genOptions, $exampleMap, $exampleOriginX, $exampleOriginY, $exampleWidth, $exampleHeight, $tmp0_apply, $tilesAtlasIndex, resultContinuation) {
    var i = new generateGameLevel$slambda($initials, $patternSize, $mapWidth, $mapHeight, $genOptions, $exampleMap, $exampleOriginX, $exampleOriginY, $exampleWidth, $exampleHeight, $tmp0_apply, $tilesAtlasIndex, resultContinuation);
    var l = function ($this$launch, $cont) {
      return i.d1v($this$launch, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function TileLogicType_EMPTY_getInstance() {
    TileLogicType_initEntries();
    return TileLogicType_EMPTY_instance;
  }
  function TileLogicType_BLOCK_getInstance() {
    TileLogicType_initEntries();
    return TileLogicType_BLOCK_instance;
  }
  function TileLogicType_SOLID_getInstance() {
    TileLogicType_initEntries();
    return TileLogicType_SOLID_instance;
  }
  function TileLogicType_LADDR_getInstance() {
    TileLogicType_initEntries();
    return TileLogicType_LADDR_instance;
  }
  function TileLogicType_BAR_getInstance() {
    TileLogicType_initEntries();
    return TileLogicType_BAR_instance;
  }
  function TileLogicType_TRAP_getInstance() {
    TileLogicType_initEntries();
    return TileLogicType_TRAP_instance;
  }
  function TileLogicType_HLADR_getInstance() {
    TileLogicType_initEntries();
    return TileLogicType_HLADR_instance;
  }
  function TileLogicType_GOLD_getInstance() {
    TileLogicType_initEntries();
    return TileLogicType_GOLD_instance;
  }
  function Tile_EMPTY_getInstance() {
    Tile_initEntries();
    return Tile_EMPTY_instance;
  }
  function Tile_BRICK_getInstance() {
    Tile_initEntries();
    return Tile_BRICK_instance;
  }
  function Tile_SOLID_getInstance() {
    Tile_initEntries();
    return Tile_SOLID_instance;
  }
  function Tile_LADDER_getInstance() {
    Tile_initEntries();
    return Tile_LADDER_instance;
  }
  function Tile_ROPE_getInstance() {
    Tile_initEntries();
    return Tile_ROPE_instance;
  }
  function Tile_TRAP_getInstance() {
    Tile_initEntries();
    return Tile_TRAP_instance;
  }
  function Tile_HLADDER_getInstance() {
    Tile_initEntries();
    return Tile_HLADDER_instance;
  }
  function Tile_GOLD_getInstance() {
    Tile_initEntries();
    return Tile_GOLD_instance;
  }
  function Tile_GUARD_getInstance() {
    Tile_initEntries();
    return Tile_GUARD_instance;
  }
  function Tile_PLAYER_getInstance() {
    Tile_initEntries();
    return Tile_PLAYER_instance;
  }
  function get_START_HEALTH() {
    return START_HEALTH;
  }
  var START_HEALTH;
  function get_SCORE_COMPLETE() {
    return SCORE_COMPLETE;
  }
  var SCORE_COMPLETE;
  function get_SCORE_COMPLETE_INC() {
    return SCORE_COMPLETE_INC;
  }
  var SCORE_COMPLETE_INC;
  function get_SCORE_FALL() {
    return SCORE_FALL;
  }
  var SCORE_FALL;
  function get_SCORE_DIES() {
    return SCORE_DIES;
  }
  var SCORE_DIES;
  function get_anyKeyPressed(_this__u8e3s4) {
    return ((_this__u8e3s4.w72() ? true : _this__u8e3s4.y72()) ? true : !(_this__u8e3s4.u72().e23() === 0)) ? true : !(_this__u8e3s4.u72().g23() === 0);
  }
  function Companion_11() {
    Companion_instance_11 = this;
    this.x7d_1 = 1;
  }
  Companion_11.$metadata$ = objectMeta('Companion');
  var Companion_instance_11;
  function Companion_getInstance_20() {
    if (Companion_instance_11 == null)
      new Companion_11();
    return Companion_instance_11;
  }
  function Runner$DigState$lambda($actor) {
    return function (it) {
      var tmp$ret$0;
      {
        {
        }
        $actor.r78().r2i(0);
        $actor.r78().s2i(0);
        var tmp = $actor.l78();
        var tmp_0 = Sound_DIG_getInstance();
        var tmp_1 = $actor.e23();
        var tmp_2 = $actor.g23();
        tmp.z75(tmp_0, tmp_1, tmp_2, false, 8, null);
        var tmp_3;
        if ($actor.w72()) {
          tmp_3 = new Pair($actor.e23() - 1 | 0, 'digHoleLeft');
        } else {
          tmp_3 = new Pair($actor.e23() + 1 | 0, 'digHoleRight');
        }
        var tmp0_container = tmp_3;
        var digTileX = tmp0_container.z3();
        var bitmap = tmp0_container.a4();
        $actor.a5o().a74_1[digTileX][$actor.g23() + 1 | 0] = TileLogicType_EMPTY_getInstance();
        var tmp_4 = $actor.a5o().d74_1;
        var tmp_5 = new Vec2i(digTileX, $actor.g23());
        tmp_4.b(Anim_init_$Create$(tmp_5, bitmap, 0, 4, null));
        var tmp_6 = $actor.a5o().d74_1;
        var tmp_7 = new Vec2i(digTileX, $actor.g23() + 1 | 0);
        var tmp_8 = bitmap + 'Base';
        tmp_6.b(Anim_init_$Create$(tmp_7, tmp_8, 0, 4, null));
        tmp$ret$0 = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function Runner$DigState$lambda_0($actor, this$0) {
    return function ($this$onUpdate) {
      var tmp;
      var tmp_0 = $this$onUpdate.h73_1;
      Companion_getInstance_20();
      if (tmp_0 >= 1) {
        var tmp0_subject = this$0;
        var tmp_1;
        if (tmp0_subject instanceof DigLeft) {
          tmp_1 = ActorSequence_RunLeft_getInstance();
        } else {
          if (tmp0_subject instanceof DigRight) {
            tmp_1 = ActorSequence_RunRight_getInstance();
          } else {
            noWhenBranchMatchedException();
          }
        }
        $actor.i74(tmp_1);
        Companion_getInstance_12();
        return 'stop';
      }
      var tmp1_this = $this$onUpdate;
      var tmp2 = tmp1_this.h73_1;
      tmp1_this.h73_1 = tmp2 + 1 | 0;
      return null;
    };
  }
  function _set_score__kj1i43($this, value) {
    $this.l75_1 = value;
    $this.l78().h6p_1.z6p_1.m1e(value);
  }
  function DigState(actor, animName) {
    Companion_getInstance_20();
    ActorState.call(this, actor, animName, animName.t72_1);
    this.t6w(Runner$DigState$lambda(actor));
    this.m76(Runner$DigState$lambda_0(actor, this));
  }
  DigState.$metadata$ = classMeta('DigState', undefined, undefined, undefined, undefined, ActorState.prototype);
  function DigLeft(actor) {
    DigState.call(this, actor, ActorSequence_DigLeft_getInstance());
  }
  DigLeft.$metadata$ = classMeta('DigLeft', undefined, undefined, undefined, undefined, DigState.prototype);
  function DigRight(actor) {
    DigState.call(this, actor, ActorSequence_DigRight_getInstance());
  }
  DigRight.$metadata$ = classMeta('DigRight', undefined, undefined, undefined, undefined, DigState.prototype);
  function _get_tabs__de2oi5(_this__u8e3s4, $this) {
    return padStart(toString(_this__u8e3s4), 3, _Char___init__impl__6a9atx(32));
  }
  function checkCollision($this) {
    if ($this.a5o().w76($this.e23(), $this.g23()))
      return true;
    var tmp$ret$1;
    $l$block: {
      var tmp = chunked($this.a5o().v7c($this.q78()), 2);
      var tmp0_firstOrNull = filter(tmp, Runner$checkCollision$lambda($this));
      var tmp0_iterator = tmp0_firstOrNull.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        var tmp$ret$0;
        {
          tmp$ret$0 = $this.a5o().w76(first(element), last(element));
        }
        if (tmp$ret$0) {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      tmp$ret$1 = null;
    }
    var tmp0_safe_receiver = tmp$ret$1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$4;
      {
        {
        }
        var tmp0_container = tmp0_safe_receiver;
        var tmp$ret$2;
        {
          tmp$ret$2 = tmp0_container.r(0);
        }
        var x = tmp$ret$2;
        var tmp$ret$3;
        {
          tmp$ret$3 = tmp0_container.r(1);
        }
        var y = tmp$ret$3;
        var g = $this.l78().v76(x, y);
        var tmp_0;
        if ((!g.m7b() ? abs($this.s78() - g.s78() | 0) <= imul(3, get_W4()) : false) ? abs($this.t78() - g.t78() | 0) <= imul(3, get_H4()) : false) {
          return true;
        }
        tmp$ret$4 = tmp_0;
      }
    }
    return $this.a5o().l7b($this.e23(), $this.g23());
  }
  function Runner$lambda(this$0) {
    return function (it) {
      this$0.q78().r2i(it.w73_1.e23());
      this$0.q78().s2i(it.w73_1.g23());
      return Unit_getInstance();
    };
  }
  function Runner$fsm$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$0;
      {
        var tmp0_apply = Actor.prototype.m78.call(this$0);
        {
        }
        {
          tmp0_apply.k78(new DigRight(this$0));
          tmp0_apply.k78(new DigLeft(this$0));
        }
        tmp$ret$0 = tmp0_apply;
      }
      return tmp$ret$0;
    };
  }
  function Runner$onFallStop$lambda($game, this$0) {
    return function () {
      var tmp = Sound_DOWN_getInstance();
      var tmp_0 = this$0.e23();
      var tmp_1 = this$0.g23();
      $game.z75(tmp, tmp_0, tmp_1, false, 8, null);
      return Unit_getInstance();
    };
  }
  function Runner$checkCollision$lambda(this$0) {
    return function (it) {
      return this$0.a5o().t7c(first(it), last(it));
    };
  }
  function Runner(game) {
    Actor.call(this, game);
    this.k75_1 = game.h6p_1.g6q_1.b3s_1;
    this.l75_1 = game.h6p_1.z6p_1.b3s_1;
    var tmp0_this = game;
    {
      var tmp0_plusAssign = tmp0_this.i6p_1;
      tmp0_plusAssign.b(Runner$lambda(this));
    }
    var tmp = this;
    tmp.m75_1 = lazy(Runner$fsm$delegate$lambda(this));
    var tmp_0 = this;
    tmp_0.n75_1 = Runner$onFallStop$lambda(game, this);
  }
  Runner.prototype.n79 = function (value) {
    this.k75_1 = value;
    this.l78().h6p_1.g6q_1.m1e(value);
  };
  Runner.prototype.l79 = function () {
    var tmp;
    if (this.g23() === 0 ? this.s77() === 0 : false) {
      var tmp0_safe_receiver = this.l78().q6p_1;
      tmp = (tmp0_safe_receiver == null ? null : tmp0_safe_receiver.h79()) === true;
    } else {
      tmp = false;
    }
    return tmp;
  };
  Runner.prototype.m78 = function () {
    var tmp$ret$0;
    {
      var tmp0_getValue = fsm$factory_2();
      tmp$ret$0 = this.m75_1.n2();
    }
    return tmp$ret$0;
  };
  Runner.prototype.b76 = function () {
    return this.n75_1;
  };
  Runner.prototype.y7d = function () {
    if (!this.l78().h6p_1.f6q_1.b3s_1)
      this.o78(false);
  };
  Runner.prototype.o75 = function (nx) {
    return this.a5o().l7b(nx, this.g23() + 1 | 0) ? this.a5o().v7a(nx, this.g23()) : false;
  };
  Runner.prototype.o79 = function (points) {
    var tmp0_this = this;
    _set_score__kj1i43(tmp0_this, tmp0_this.l75_1 + points | 0);
  };
  Runner.prototype.i78 = function () {
    var tmp = this.l78();
    var tmp_0 = Sound_GOLD_getInstance();
    var tmp_1 = this.e23();
    var tmp_2 = this.g23();
    tmp.z75(tmp_0, tmp_1, tmp_2, false, 8, null);
    var tmp0_this = this.a5o();
    var tmp1 = tmp0_this.y73_1;
    tmp0_this.y73_1 = tmp1 - 1 | 0;
    this.o79(250);
    if (this.a5o().h79()) {
      this.a5o().m79();
    }
    return true;
  };
  Runner.prototype.y78 = function () {
    Actor.prototype.y78.call(this);
    if (checkCollision(this))
      this.y7d();
  };
  Runner.prototype.toString = function () {
    return 'pos: ' + _get_tabs__de2oi5(this.e23(), this) + ' ' + _get_tabs__de2oi5(this.t74(), this) + ' x ' + _get_tabs__de2oi5(this.g23(), this) + ' ' + _get_tabs__de2oi5(this.s77(), this) + ' = ' + _get_tabs__de2oi5(this.s78(), this) + ' x ' + _get_tabs__de2oi5(this.t78(), this) + '\n' + ('input: ' + this.u72() + '\nanim: ' + this.u78() + '[ ' + this.w78() + ' ]');
  };
  Runner.$metadata$ = classMeta('Runner', [Controllable], undefined, undefined, undefined, Actor.prototype);
  function fsm$factory_2() {
    return getPropertyCallableRef('fsm', 1, KProperty1, function (receiver) {
      return receiver.m78();
    }, null);
  }
  var State_NEW_instance;
  var State_LOADING_instance;
  var State_SETUP_instance;
  var State_RUNNING_instance;
  var State_entriesInitialized;
  function State_initEntries() {
    if (State_entriesInitialized)
      return Unit_getInstance();
    State_entriesInitialized = true;
    State_NEW_instance = new State_0('NEW', 0);
    State_LOADING_instance = new State_0('LOADING', 1);
    State_SETUP_instance = new State_0('SETUP', 2);
    State_RUNNING_instance = new State_0('RUNNING', 3);
  }
  function AsyncScene_init_$Init$(name, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      name = null;
    AsyncScene.call($this, name);
    return $this;
  }
  function checkState($this, ctx) {
    if ($this.e7f_1.equals(State_NEW_getInstance())) {
      $this.e7f_1 = State_LOADING_getInstance();
      var tmp = ctx.q2d();
      tmp.c1t(AsyncScene$checkState$slambda_0($this, ctx, null));
    }
    if ($this.e7f_1.equals(State_SETUP_getInstance())) {
      $this.f7f(ctx);
      $this.e7f_1 = State_RUNNING_getInstance();
    }
  }
  function State_0(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  State_0.$metadata$ = classMeta('State', undefined, undefined, undefined, undefined, Enum.prototype);
  function AsyncScene$lambda(this$0) {
    return function (it) {
      checkState(this$0, it);
      return Unit_getInstance();
    };
  }
  function AsyncScene$checkState$slambda(this$0, $ctx, resultContinuation) {
    this.o7f_1 = this$0;
    this.p7f_1 = $ctx;
    CoroutineImpl.call(this, resultContinuation);
  }
  AsyncScene$checkState$slambda.prototype.c1u = function ($this$launch, $cont) {
    var tmp = this.d1u($this$launch, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  AsyncScene$checkState$slambda.prototype.s7 = function (p1, $cont) {
    return this.c1u(p1 instanceof AssetManager ? p1 : THROW_CCE(), $cont);
  };
  AsyncScene$checkState$slambda.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 2;
            this.k7_1 = 1;
            suspendResult = this.o7f_1.r7f(this.q7f_1, this.p7f_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.o7f_1.e7f_1 = State_SETUP_getInstance();
            return Unit_getInstance();
          case 2:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 2) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  AsyncScene$checkState$slambda.prototype.d1u = function ($this$launch, completion) {
    var i = new AsyncScene$checkState$slambda(this.o7f_1, this.p7f_1, completion);
    i.q7f_1 = $this$launch;
    return i;
  };
  AsyncScene$checkState$slambda.$metadata$ = classMeta('AsyncScene$checkState$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function AsyncScene$checkState$slambda_0(this$0, $ctx, resultContinuation) {
    var i = new AsyncScene$checkState$slambda(this$0, $ctx, resultContinuation);
    var l = function ($this$launch, $cont) {
      return i.c1u($this$launch, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function State_NEW_getInstance() {
    State_initEntries();
    return State_NEW_instance;
  }
  function State_LOADING_getInstance() {
    State_initEntries();
    return State_LOADING_instance;
  }
  function State_SETUP_getInstance() {
    State_initEntries();
    return State_SETUP_instance;
  }
  function State_RUNNING_getInstance() {
    State_initEntries();
    return State_RUNNING_instance;
  }
  function AsyncScene(name) {
    Scene.call(this, name);
    this.e7f_1 = State_NEW_getInstance();
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.m5f();
      tmp0_plusAssign.b(AsyncScene$lambda(this));
    }
  }
  AsyncScene.$metadata$ = classMeta('AsyncScene', undefined, undefined, undefined, undefined, Scene.prototype);
  function GameLevelScene_init_$Init$(game, ctx, assets, appContext, name, $mask0, $marker, $this) {
    if (!(($mask0 & 4) === 0))
      assets = ctx.q2d();
    if (!(($mask0 & 16) === 0))
      name = null;
    GameLevelScene.call($this, game, ctx, assets, appContext, name);
    return $this;
  }
  function GameLevelScene_init_$Create$(game, ctx, assets, appContext, name, $mask0, $marker) {
    return GameLevelScene_init_$Init$(game, ctx, assets, appContext, name, $mask0, $marker, Object.create(GameLevelScene.prototype));
  }
  function _get_currentLevel__t98d28($this) {
    return $this.x6s_1.j71($this.y7h().c6q_1.b3s_1, $this.z7h(), false);
  }
  function _get_gameOverTex__wctrjk($this) {
    var tmp = $this.w6s_1;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('gameOverTex');
    }
  }
  function GameLevelScene$gameOverSprite$delegate$lambda$lambda($tmp0_also, $scaleAnim, this$0, $speedAnim, $game) {
    return function (ev) {
      $tmp0_also.o4r().q2g();
      var scale = $scaleAnim.n5g(ev.x4n_1) / this$0.a7i().q6l_1.g23();
      var tmp = 1.0 / this$0.a7i().q6l_1.e23();
      var tmp_0 = scale;
      var tmp$ret$0;
      {
        var tmp0__get_sign__8hfh9w = $tmp0_also.o4r().r2g(1, 1);
        tmp$ret$0 = sign(tmp0__get_sign__8hfh9w);
      }
      $tmp0_also.m2d(tmp, tmp_0 * tmp$ret$0, 1.0);
      var tmp_1 = $speedAnim.n5g(ev.x4n_1);
      var tmp$ret$1;
      {
        var tmp1__get_sign__ama64z = $scaleAnim.i5g();
        tmp$ret$1 = sign(tmp1__get_sign__ama64z);
      }
      $scaleAnim.h5g(tmp_1 * tmp$ret$1);
      var tmp_2;
      if (($scaleAnim.i5g() > 0 ? $scaleAnim.i5g() <= 1.0 : false) ? !($scaleAnim.k5g() === Companion_getInstance_1().w5f_1) : false) {
        tmp_2 = $scaleAnim.j5g(Companion_getInstance_1().w5f_1);
      }
      var tmp_3;
      if (($scaleAnim.m5g() === 1.0 ? $scaleAnim.k5g() === Companion_getInstance_1().w5f_1 : false) ? !$game.o6p_1 : false) {
        println('game over done');
        $game.o6p_1 = true;
        tmp_3 = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function GameLevelScene$gameOverSprite$delegate$lambda(this$0, $game) {
    return function () {
      var tmp$ret$2;
      {
        var tmp = _get_gameOverTex__wctrjk(this$0);
        var tmp0_also = sprite$default(tmp, 'gameover', null, null, false, 12, null);
        {
        }
        {
          var startSpeed = 10.0;
          var tmp$ret$0;
          {
            var tmp0_apply = new InverseSquareAnimator(new InterpolatedFloat(startSpeed, 1.0));
            {
            }
            {
              tmp0_apply.h5g(0.75);
            }
            tmp$ret$0 = tmp0_apply;
          }
          var speedAnim = tmp$ret$0;
          var tmp$ret$1;
          {
            var tmp1_apply = new CosAnimator(new InterpolatedFloat(-1.0, 1.0));
            {
            }
            {
              tmp1_apply.j5g(Companion_getInstance_1().y5f_1);
              tmp1_apply.h5g(startSpeed);
            }
            tmp$ret$1 = tmp1_apply;
          }
          var scaleAnim = tmp$ret$1;
          tmp0_also.n2h(0.0, this$0.a7i().r6l_1.g23() / 2.0, 0.0);
          var tmp0_this = this$0;
          {
            var tmp2_plusAssign = tmp0_this.n4k();
            tmp2_plusAssign.b(GameLevelScene$gameOverSprite$delegate$lambda$lambda(tmp0_also, scaleAnim, this$0, speedAnim, $game));
          }
        }
        tmp$ret$2 = tmp0_also;
      }
      return tmp$ret$2;
    };
  }
  function GameLevelScene$lambda$lambda($game, this$0, $ctx) {
    return function (it) {
      $game.o6p_1 = false;
      this$0.b7i($ctx);
      return Unit_getInstance();
    };
  }
  function GameLevelScene$lambda(this$0, $ctx, $appContext, $game) {
    return function ($this$null) {
      println('GameScene. gameState = ' + $this$null.b6t_1);
      var tmp;
      if (!$this$null.b6t_1.equals(GameState_GAME_OVER_ANIMATION_getInstance())) {
        var tmp_0;
        var tmp0_safe_receiver = this$0.c7i();
        if (!((tmp0_safe_receiver == null ? null : tmp0_safe_receiver.b4l('gameover')) == null)) {
          var tmp1_safe_receiver = this$0.c7i();
          if (tmp1_safe_receiver == null)
            null;
          else {
            var tmp$ret$1;
            {
              {
              }
              var tmp$ret$0;
              {
                tmp$ret$0 = tmp1_safe_receiver.k5e(this$0.d7i());
              }
              tmp$ret$1 = tmp$ret$0;
            }
          }
          tmp_0 = Unit_getInstance();
        }
        tmp = tmp_0;
      }
      var tmp2_subject = $this$null.b6t_1;
      var tmp0 = tmp2_subject.y1();
      var tmp_1;
      switch (tmp0) {
        case 0:
          this$0.e7i($ctx);
          tmp_1 = Unit_getInstance();
          break;
        case 1:
          this$0.f7i($ctx);
          tmp_1 = Unit_getInstance();
          break;
        case 2:
          this$0.b7i($ctx);
          tmp_1 = Unit_getInstance();
          break;
        case 7:
          this$0.b7i($ctx);
          tmp_1 = Unit_getInstance();
          break;
        case 11:
          if (this$0.g7i().i5g() === 0.0) {
            this$0.b7i($ctx);
          }

          var tmp$ret$2;
          {
            var tmp0_with = $appContext.c6q_1;
            {
            }
            tmp0_with.m1e(tmp0_with.b3s_1 - 1 | 0);
            var tmp_2;
            if (tmp0_with.b3s_1 < 0) {
              tmp_2 = tmp0_with.m1e(tmp0_with.b3s_1 + this$0.x6s_1.w6x_1.m() | 0);
            }
            tmp$ret$2 = tmp_2;
          }

          tmp_1 = tmp$ret$2;
          break;
        case 10:
          if (this$0.g7i().i5g() === 0.0) {
            this$0.b7i($ctx);
          }

          var tmp$ret$3;
          {
            var tmp1_with = $appContext.c6q_1;
            {
            }
            tmp1_with.m1e(tmp1_with.b3s_1 + 1 | 0);
            var tmp_3;
            if (tmp1_with.b3s_1 >= this$0.x6s_1.w6x_1.m()) {
              throw new NotImplementedError('An operation is not implemented: FINISH');
            }
            tmp$ret$3 = tmp_3;
          }

          tmp_1 = tmp$ret$3;
          break;
        case 6:
          $game.f7a(_get_currentLevel__t98d28(this$0));
          var tmp3_safe_receiver = $game.q6p_1;
          if (tmp3_safe_receiver == null)
            null;
          else {
            var tmp$ret$4;
            {
              {
              }
              tmp3_safe_receiver.f74_1 = this$0.h7i();
              tmp$ret$4 = this$0.i7i($ctx, tmp3_safe_receiver);
            }
          }

          tmp_1 = Unit_getInstance();
          break;
        case 8:
          var tmp4_safe_receiver = this$0.c7i();
          if (tmp4_safe_receiver == null)
            null;
          else {
            var tmp$ret$5;
            {
              {
              }
              tmp$ret$5 = tmp4_safe_receiver.p4q(this$0.d7i());
            }
          }

          ;
          var tmp_4 = numberToInt($ctx.a2c_1 * 5);
          tmp_1 = $ctx.g2f(tmp_4, GameLevelScene$lambda$lambda($game, this$0, $ctx));
          break;
        default:
          tmp_1 = Unit_getInstance();
          break;
      }
      return Unit_getInstance();
    };
  }
  function GameLevelScene$setupUi$lambda$lambda$lambda() {
    return function (it) {
      return it.n77_1.toString();
    };
  }
  function GameLevelScene$setupUi$lambda$lambda(this$0, $scene) {
    return function (it) {
      var tmp$ret$2;
      {
        var tmp0_with = this$0.l78();
        {
        }
        var tmp0_safe_receiver = this$0.c7i();
        var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.j7j();
        var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.o4k();
        var tmp = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.e23();
        var tmp3_safe_receiver = this$0.c7i();
        var tmp4_safe_receiver = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.j7j();
        var tmp5_safe_receiver = tmp4_safe_receiver == null ? null : tmp4_safe_receiver.o4k();
        var tmp_0 = tmp5_safe_receiver == null ? null : tmp5_safe_receiver.g23();
        var tmp6_safe_receiver = this$0.k7j();
        var tmp7_safe_receiver = tmp6_safe_receiver == null ? null : tmp6_safe_receiver.a4z();
        var tmp8_safe_receiver = tmp7_safe_receiver == null ? null : tmp7_safe_receiver.v4x_1;
        var tmp_1 = tmp8_safe_receiver == null ? null : tmp8_safe_receiver.e23();
        var tmp_2 = $scene.t2e_1.v4x_1.e23();
        var tmp9_safe_receiver = this$0.k7j();
        var tmp10_safe_receiver = tmp9_safe_receiver == null ? null : tmp9_safe_receiver.a4z();
        var tmp11_safe_receiver = tmp10_safe_receiver == null ? null : tmp10_safe_receiver.v4x_1;
        var tmp_3 = tmp11_safe_receiver == null ? null : tmp11_safe_receiver.g23();
        var tmp_4 = $scene.t2e_1.v4x_1.g23();
        var tmp12_safe_receiver = tmp0_with.q6p_1;
        var tmp13_safe_receiver = tmp12_safe_receiver == null ? null : tmp12_safe_receiver.a74_1;
        var tmp14_safe_receiver = tmp13_safe_receiver == null ? null : tmp13_safe_receiver[tmp0_with.j6p_1.e23()];
        var tmp15_elvis_lhs = tmp14_safe_receiver == null ? null : tmp14_safe_receiver[tmp0_with.j6p_1.g23()];
        var tmp_5 = tmp15_elvis_lhs == null ? '<no level>' : tmp15_elvis_lhs;
        var tmp16_safe_receiver = tmp0_with.q6p_1;
        var tmp17_elvis_lhs = tmp16_safe_receiver == null ? null : tmp16_safe_receiver.u74(tmp0_with.j6p_1.e23(), tmp0_with.j6p_1.g23());
        var tmp_6 = tmp17_elvis_lhs == null ? false : tmp17_elvis_lhs;
        var tmp18_safe_receiver = tmp0_with.q6p_1;
        var tmp19_elvis_lhs = tmp18_safe_receiver == null ? null : tmp18_safe_receiver.w76(tmp0_with.j6p_1.e23(), tmp0_with.j6p_1.g23() + 1 | 0);
        var tmp_7 = tmp19_elvis_lhs == null ? false : tmp19_elvis_lhs;
        var tmp20_safe_receiver = tmp0_with.q6p_1;
        var tmp_8;
        if (tmp20_safe_receiver == null) {
          tmp_8 = null;
        } else {
          var tmp$ret$1;
          {
            {
            }
            var tmp$ret$0;
            {
              tmp$ret$0 = tmp0_with.j6p_1.r74();
            }
            tmp$ret$1 = tmp$ret$0;
          }
          tmp_8 = tmp$ret$1;
        }
        var tmp21_elvis_lhs = tmp_8;
        var tmp_9 = tmp21_elvis_lhs == null ? false : tmp21_elvis_lhs;
        var tmp_10 = joinToString$default(tmp0_with.k6p_1, ' ', null, null, 0, null, GameLevelScene$setupUi$lambda$lambda$lambda(), 30, null);
        var tmp22_safe_receiver = tmp0_with.q6p_1;
        var tmp23_elvis_lhs = tmp22_safe_receiver == null ? null : tmp22_safe_receiver.y73_1;
        tmp$ret$2 = this$0.y6s_1.m1e(format('    #speedAnim = %%s %%.3f\n    #scaleAnim = %%s %%.3f\n    \nglobal runner center = %.1f x %.1f\ncamera = %.1f/%.1f x %.1f/%.1f\nact = %s\nbarrier = %b\nhas guard below = %b\ncan move down: %b\nguards: %s\nlevel.gold=%d\n\n%s', [tmp, tmp_0, tmp_1, tmp_2, tmp_3, tmp_4, tmp_5, tmp_6, tmp_7, tmp_9, tmp_10, tmp23_elvis_lhs == null ? 0 : tmp23_elvis_lhs, tmp0_with.j6p_1.toString()]));
      }
      return Unit_getInstance();
    };
  }
  function GameLevelScene$setupUi$lambda(this$0, $scene) {
    return function ($this$Panel) {
      var tmp = $this$Panel.s3t();
      var tmp_0 = height(width(tmp, Grow_init_$Create$(1.0, null, FitContent_getInstance(), 2, null)), FitContent_getInstance());
      var tmp_1 = $this$Panel.v3v(25);
      alignY(alignX(layout(margin$default(tmp_0, tmp_1, null, $this$Panel.v3v(25), $this$Panel.v3v(60), 2, null), ColumnLayout_getInstance()), AlignmentX_End_getInstance()), AlignmentY_Bottom_getInstance());
      var tmp$ret$1;
      {
        var tmp0_Row = FitContent_getInstance();
        var tmp1_Row = FitContent_getInstance();
        var row = $this$Panel.l3s().b3t(getKClass(RowNode), Companion_getInstance_2().m3s_1);
        layout(size(row.s3t(), tmp0_Row, tmp1_Row), RowLayout_getInstance());
        {
          var tmp$ret$0;
          {
            var tmp0_Text = row.k3s(this$0.y6s_1);
            var textNd = row.l3s().b3t(getKClass(TextNode), Companion_getInstance_3().l44_1);
            text(textNd.s3t(), tmp0_Text);
            {
              height(width(textNd.s3t(), FitContent_getInstance()), FitContent_getInstance());
              var tmp0_this = $scene;
              {
                var tmp0_plusAssign = tmp0_this.n4k();
                tmp0_plusAssign.b(GameLevelScene$setupUi$lambda$lambda(this$0, $scene));
              }
            }
            tmp$ret$0 = textNd;
          }
        }
        tmp$ret$1 = row;
      }
      var tmp$ret$2;
      {
        var tmp2_Row = FitContent_getInstance();
        var tmp3_Row = FitContent_getInstance();
        var row_0 = $this$Panel.l3s().b3t(getKClass(RowNode), Companion_getInstance_2().m3s_1);
        layout(size(row_0.s3t(), tmp2_Row, tmp3_Row), RowLayout_getInstance());
        {
          this$0.l7j(row_0, 'stop animations', this$0.l78().n6p_1);
        }
        tmp$ret$2 = row_0;
      }
      var tmp$ret$3;
      {
        var tmp4_Row = FitContent_getInstance();
        var tmp5_Row = FitContent_getInstance();
        var row_1 = $this$Panel.l3s().b3t(getKClass(RowNode), Companion_getInstance_2().m3s_1);
        layout(size(row_1.s3t(), tmp4_Row, tmp5_Row), RowLayout_getInstance());
        {
          this$0.l7j(row_1, 'stop guards', this$0.y7h().e6q_1);
        }
        tmp$ret$3 = row_1;
      }
      var tmp$ret$4;
      {
        var tmp6_Row = FitContent_getInstance();
        var tmp7_Row = FitContent_getInstance();
        var row_2 = $this$Panel.l3s().b3t(getKClass(RowNode), Companion_getInstance_2().m3s_1);
        layout(size(row_2.s3t(), tmp6_Row, tmp7_Row), RowLayout_getInstance());
        {
          this$0.l7j(row_2, 'immortal', this$0.y7h().f6q_1);
        }
        tmp$ret$4 = row_2;
      }
      return tmp$ret$4;
    };
  }
  function GameLevelScene$LabeledSwitch$lambda($toggleState) {
    return function (it) {
      toggle($toggleState);
      return Unit_getInstance();
    };
  }
  function GameLevelScene$LabeledSwitch$lambda_0($toggleState) {
    return function (it) {
      $toggleState.m1e(it);
      return Unit_getInstance();
    };
  }
  function $loadResourcesCOROUTINE$8(_this__u8e3s4, assets, ctx, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.u7j_1 = _this__u8e3s4;
    this.v7j_1 = assets;
    this.w7j_1 = ctx;
  }
  $loadResourcesCOROUTINE$8.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 4;
            this.k7_1 = 1;
            suspendResult = GameScene.prototype.r7f.call(this.u7j_1, this.v7j_1, this.w7j_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.k7_1 = 2;
            suspendResult = this.v7j_1.t1y('images/game-over.png', get_simpleTextureProps(), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.x7j_1 = suspendResult;
            this.u7j_1.w6s_1 = this.x7j_1;
            this.k7_1 = 3;
            suspendResult = this.u7j_1.x6s_1.y6x(this.u7j_1.y7h().b6q_1.b3s_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 3:
            return Unit_getInstance();
          case 4:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 4) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  $loadResourcesCOROUTINE$8.$metadata$ = classMeta('$loadResourcesCOROUTINE$8', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function GameLevelScene(game, ctx, assets, appContext, name) {
    GameScene_init_$Init$(game, assets, appContext, null, name, 8, null, this);
    var tmp = this;
    tmp.u6s_1 = lazy(GameLevelScene$gameOverSprite$delegate$lambda(this, game));
    var tmp0_this = game;
    {
      var tmp0_plusAssign = tmp0_this.u6p_1;
      tmp0_plusAssign.b(GameLevelScene$lambda(this, ctx, appContext, game));
    }
    var tmp_0 = this;
    tmp_0.v6s_1 = Job$default(null, 1, null);
    this.x6s_1 = new LevelsRep(assets, this);
    this.y6s_1 = new MutableStateValue('');
  }
  GameLevelScene.prototype.d7i = function () {
    var tmp$ret$0;
    {
      var tmp0_getValue = gameOverSprite$factory();
      tmp$ret$0 = this.u6s_1.n2();
    }
    return tmp$ret$0;
  };
  GameLevelScene.prototype.o17 = function () {
    return this.v6s_1;
  };
  GameLevelScene.prototype.y7j = function () {
    return this.y6s_1;
  };
  GameLevelScene.prototype.r7f = function (assets, ctx, $cont) {
    var tmp = new $loadResourcesCOROUTINE$8(this, assets, ctx, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  GameLevelScene.prototype.z6s = function (scene) {
    var tmp$ret$0;
    {
      {
      }
      tmp$ret$0 = scene.p4q(Panel$default(null, null, null, GameLevelScene$setupUi$lambda(this, scene), 7, null));
    }
    return tmp$ret$0;
  };
  GameLevelScene.prototype.z7j = function (_this__u8e3s4, width_0) {
    var tmp = width(_this__u8e3s4.s3t(), width_0);
    align$default(tmp, null, AlignmentY_Center_getInstance(), 1, null);
  };
  GameLevelScene.prototype.l7j = function (_this__u8e3s4, label, toggleState_0) {
    var tmp$ret$0;
    {
      var textNd = _this__u8e3s4.l3s().b3t(getKClass(TextNode), Companion_getInstance_3().l44_1);
      text(textNd.s3t(), label);
      {
        this.z7j(textNd, Companion_getInstance_4().b41_1);
        var tmp = textNd.s3t();
        onClick(tmp, GameLevelScene$LabeledSwitch$lambda(toggleState_0));
      }
      tmp$ret$0 = textNd;
    }
    var tmp$ret$3;
    {
      var tmp0_Switch = _this__u8e3s4.k3s(toggleState_0);
      var switch_0 = _this__u8e3s4.l3s().b3t(getKClass(SwitchNode), Companion_getInstance_5().w49_1);
      var tmp0_safe_receiver = tmp0_Switch;
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$2;
        {
          {
          }
          var tmp$ret$1;
          {
            tmp$ret$1 = toggleState(switch_0.o4a_1, tmp0_safe_receiver);
          }
          tmp$ret$2 = tmp$ret$1;
        }
      }
      {
        var tmp_0 = alignY(switch_0.s3t(), AlignmentY_Center_getInstance());
        onToggle(tmp_0, GameLevelScene$LabeledSwitch$lambda_0(toggleState_0));
      }
      tmp$ret$3 = switch_0;
    }
  };
  GameLevelScene.prototype.l4k = function (ctx) {
    this.v6s_1.v18(null, 1, null);
    GameScene.prototype.l4k.call(this, ctx);
  };
  GameLevelScene.$metadata$ = classMeta('GameLevelScene', [CoroutineScope], undefined, undefined, undefined, GameScene.prototype);
  function get_height(_this__u8e3s4) {
    return _this__u8e3s4.o4n_1 - _this__u8e3s4.n4n_1;
  }
  function get_width(_this__u8e3s4) {
    return _this__u8e3s4.m4n_1 - _this__u8e3s4.l4n_1;
  }
  function gameOverSprite$factory() {
    return getPropertyCallableRef('gameOverSprite', 1, KProperty1, function (receiver) {
      return receiver.d7i();
    }, null);
  }
  function GameScene_init_$Init$(game, assets, appContext, conf, name, $mask0, $marker, $this) {
    if (!(($mask0 & 8) === 0)) {
      var tmp = new Vec2i(game.h6p_1.a6q_1.b3s_1.e6l_1, game.h6p_1.a6q_1.b3s_1.f6l_1);
      conf = ViewSpec_init_$Create$(tmp, null, 2, null);
    }
    GameScene.call($this, game, assets, appContext, conf, name);
    return $this;
  }
  function _get_bg__ndby06($this) {
    var tmp$ret$0;
    {
      var tmp0_getValue = bg$factory();
      tmp$ret$0 = $this.x7h_1.n2();
    }
    return tmp$ret$0;
  }
  function GameScene$ticker$lambda(this$0) {
    return function (ev) {
      var tmp;
      if ((ev.s52() - this$0.k7h_1) * 1000 >= this$0.a7h_1.d6q_1.b3s_1.o6l()) {
        this$0.y7g_1.q7a(ev);
        this$0.k7h_1 = ev.s52();
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function GameScene$lambda$slambda(this$0, $it, resultContinuation) {
    this.l7k_1 = this$0;
    this.m7k_1 = $it;
    CoroutineImpl.call(this, resultContinuation);
  }
  GameScene$lambda$slambda.prototype.d1v = function ($this$launch, $cont) {
    var tmp = this.e1v($this$launch, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  GameScene$lambda$slambda.prototype.s7 = function (p1, $cont) {
    return this.d1v((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  GameScene$lambda$slambda.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 2;
            this.k7_1 = 1;
            suspendResult = this.l7k_1.b7k(this.m7k_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var tmp0_safe_receiver = this.l7k_1.y7g_1.q6p_1;
            if (tmp0_safe_receiver == null)
              null;
            else {
              tmp0_safe_receiver.e74_1 = true;
            }

            ;
            return Unit_getInstance();
          case 2:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 2) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  GameScene$lambda$slambda.prototype.e1v = function ($this$launch, completion) {
    var i = new GameScene$lambda$slambda(this.l7k_1, this.m7k_1, completion);
    i.n7k_1 = $this$launch;
    return i;
  };
  GameScene$lambda$slambda.$metadata$ = classMeta('GameScene$lambda$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function GameScene$lambda$slambda_0(this$0, $it, resultContinuation) {
    var i = new GameScene$lambda$slambda(this$0, $it, resultContinuation);
    var l = function ($this$launch, $cont) {
      return i.d1v($this$launch, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function GameScene$lambda(this$0) {
    return function (it) {
      launch$default(this$0.n7h_1, null, null, GameScene$lambda$slambda_0(this$0, it, null), 3, null);
      return Unit_getInstance();
    };
  }
  function GameScene$addLevelView$lambda() {
    return function ($this$addColorTexture) {
      $this$addColorTexture.l4v_1 = TexFormat_RGBA_getInstance();
      $this$addColorTexture.m4v_1 = FilterMethod_NEAREST_getInstance();
      $this$addColorTexture.n4v_1 = FilterMethod_NEAREST_getInstance();
      return Unit_getInstance();
    };
  }
  function GameScene$addLevelView$lambda$lambda$lambda(this$0) {
    return function ($this$generate) {
      var props = new RectProps();
      {
        props.b4u_1.c2j(this$0.d7h_1, this$0.e7h_1);
        props.a4u_1.x2g(-props.u3z() / 2.0, 0.0, 0.0);
        props.g4u();
      }
      $this$generate.h4u(props);
      return Unit_getInstance();
    };
  }
  function GameScene$addLevelView$lambda$lambda$lambda$lambda(this$0) {
    return function ($this$color) {
      var tmp = ensureNotNull(this$0.j7h_1).z4z();
      $this$color.n33(tmp, null, null, 0.0, null, 30, null);
      return Unit_getInstance();
    };
  }
  function GameScene$addLevelView$lambda$lambda$lambda_0(this$0) {
    return function ($this$$receiver) {
      $this$$receiver.i31(GameScene$addLevelView$lambda$lambda$lambda$lambda(this$0));
      return Unit_getInstance();
    };
  }
  function GameScene$addLevelView$lambda$lambda$lambda_1($this_textureMesh, this$0) {
    return function (it) {
      var tmp = $this_textureMesh.k2r_1;
      (tmp instanceof MaskShader ? tmp : THROW_CCE()).b7l(this$0.i7h_1.n5g(it.x4n_1));
      var tmp_0;
      if (this$0.i7h_1.m5g() >= 1.0) {
        this$0.i7h_1.l5g(0.0);
        this$0.y7g_1.o6p_1 = true;
        tmp_0 = Unit_getInstance();
      } else if (get_anyKeyPressed(this$0.y7g_1.j6p_1)) {
        this$0.f7i(it.x4n_1);
        this$0.y7g_1.p6p_1 = true;
        tmp_0 = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function GameScene$addLevelView$lambda$lambda(this$0) {
    return function ($this$textureMesh) {
      $this$textureMesh.d4k(GameScene$addLevelView$lambda$lambda$lambda(this$0));
      $this$textureMesh.e4k(MaskShader_init_$Create$(GameScene$addLevelView$lambda$lambda$lambda_0(this$0)));
      var tmp0_this = $this$textureMesh;
      var tmp0_plusAssign = tmp0_this.n4k();
      tmp0_plusAssign.b(GameScene$addLevelView$lambda$lambda$lambda_1($this$textureMesh, this$0));
      return Unit_getInstance();
    };
  }
  function GameScene$addLevelView$lambda_0(this$0) {
    return function ($this$group) {
      $this$group.p4q(textureMesh$default(null, false, GameScene$addLevelView$lambda$lambda(this$0), 3, null));
      return Unit_getInstance();
    };
  }
  function GameScene$removeLevelView$lambda($tmp2_safe_receiver, $ctx) {
    return function (it) {
      $tmp2_safe_receiver.l4k($ctx);
      return Unit_getInstance();
    };
  }
  function GameScene$removeLevelView$lambda_0($tmp3_safe_receiver, $ctx) {
    return function (it) {
      $tmp3_safe_receiver.l4k($ctx);
      return Unit_getInstance();
    };
  }
  function GameScene$removeLevelView$lambda_1($tmp4_safe_receiver, $ctx) {
    return function (it) {
      $tmp4_safe_receiver.l4k($ctx);
      return Unit_getInstance();
    };
  }
  function GameScene$bg$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_8().e6v(this$0);
    };
  }
  function $reloadCOROUTINE$10(_this__u8e3s4, newts, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.k7l_1 = _this__u8e3s4;
    this.l7l_1 = newts;
  }
  $reloadCOROUTINE$10.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 8;
            var tmp_0 = this;
            tmp_0.m7l_1 = ImageAtlasSpec_init_$Create$(this.l7l_1, 0, 0, null, 14, null);
            this.k7_1 = 1;
            suspendResult = this.k7l_1.p7h_1.v70(this.l7l_1, this.k7l_1.z7g_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.k7_1 = 2;
            suspendResult = this.k7l_1.q7h_1.v70(this.l7l_1, this.k7l_1.z7g_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.k7_1 = 3;
            suspendResult = this.k7l_1.r7h_1.v70(this.l7l_1, this.k7l_1.z7g_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 3:
            this.k7_1 = 4;
            suspendResult = this.k7l_1.s7h_1.v70(this.l7l_1, this.k7l_1.z7g_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 4:
            this.k7_1 = 5;
            suspendResult = this.k7l_1.t7h_1.k6l(this.m7l_1, this.k7l_1.z7g_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 5:
            this.k7_1 = 6;
            suspendResult = this.k7l_1.u7h_1.k6l(this.m7l_1, this.k7l_1.z7g_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 6:
            this.k7_1 = 7;
            suspendResult = this.k7l_1.v7h_1.k6l(this.m7l_1, this.k7l_1.z7g_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 7:
            var tmp_1 = this.k7l_1.a7h_1.a6q_1.b3s_1;
            this.k7l_1.o7h_1.m1e(ImageAtlasSpec_init_$Create$(tmp_1, 0, 0, null, 14, null));
            var tmp0_safe_receiver = this.k7l_1.y7g_1.q6p_1;
            if (tmp0_safe_receiver == null)
              null;
            else {
              tmp0_safe_receiver.z7c(this.k7l_1.p7h_1.r70_1);
              tmp0_safe_receiver.e74_1 = true;
            }

            ;
            return Unit_getInstance();
          case 8:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 8) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  $reloadCOROUTINE$10.$metadata$ = classMeta('$reloadCOROUTINE$10', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $loadResourcesCOROUTINE$11(_this__u8e3s4, assets, ctx, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.v7l_1 = _this__u8e3s4;
    this.w7l_1 = assets;
    this.x7l_1 = ctx;
  }
  $loadResourcesCOROUTINE$11.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 9;
            var tmp_0 = this;
            var tmp_1 = this.v7l_1.a7h_1.a6q_1.b3s_1;
            tmp_0.y7l_1 = ImageAtlasSpec_init_$Create$(tmp_1, 0, 0, null, 14, null);
            this.k7_1 = 1;
            suspendResult = this.v7l_1.p7h_1.v70(this.v7l_1.a7h_1.a6q_1.b3s_1, this.w7l_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.k7_1 = 2;
            suspendResult = this.v7l_1.q7h_1.v70(this.v7l_1.a7h_1.a6q_1.b3s_1, this.w7l_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.k7_1 = 3;
            suspendResult = this.v7l_1.r7h_1.v70(this.v7l_1.a7h_1.a6q_1.b3s_1, this.w7l_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 3:
            this.k7_1 = 4;
            suspendResult = this.v7l_1.s7h_1.v70(this.v7l_1.a7h_1.a6q_1.b3s_1, this.w7l_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 4:
            this.k7_1 = 5;
            suspendResult = this.v7l_1.t7h_1.k6l(this.y7l_1, this.w7l_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 5:
            this.k7_1 = 6;
            suspendResult = this.v7l_1.u7h_1.k6l(this.y7l_1, this.w7l_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 6:
            this.k7_1 = 7;
            suspendResult = this.v7l_1.v7h_1.k6l(this.y7l_1, this.w7l_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 7:
            this.k7_1 = 8;
            suspendResult = this.v7l_1.w7h_1.m72(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 8:
            return Unit_getInstance();
          case 9:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 9) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  $loadResourcesCOROUTINE$11.$metadata$ = classMeta('$loadResourcesCOROUTINE$11', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function GameScene(game, assets, appContext, conf, name) {
    AsyncScene.call(this, name);
    this.y7g_1 = game;
    this.z7g_1 = assets;
    this.a7h_1 = appContext;
    this.b7h_1 = conf;
    this.c7h_1 = null;
    this.d7h_1 = this.b7h_1.u6l();
    this.e7h_1 = this.b7h_1.v6l();
    var tmp = this;
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_sqrt = imul(this.d7h_1, this.d7h_1) + imul(this.e7h_1, this.e7h_1) | 0;
        tmp$ret$0 = Math.sqrt(tmp0_sqrt);
      }
      var tmp1_ceil = tmp$ret$0 / 2;
      tmp$ret$1 = Math.ceil(tmp1_ceil);
    }
    tmp.f7h_1 = numberToInt(tmp$ret$1);
    this.g7h_1 = null;
    this.h7h_1 = null;
    var tmp_0 = this;
    var tmp$ret$2;
    {
      var tmp0_apply = new LinearAnimator(new InterpolatedFloat(0.0, 1.0));
      {
      }
      {
        tmp0_apply.g5g(1.0);
      }
      tmp$ret$2 = tmp0_apply;
    }
    tmp_0.i7h_1 = tmp$ret$2;
    this.j7h_1 = null;
    this.k7h_1 = 0.0;
    var tmp_1 = this;
    tmp_1.l7h_1 = GameScene$ticker$lambda(this);
    var tmp_2 = this;
    tmp_2.m7h_1 = Job$default(null, 1, null);
    this.n7h_1 = CoroutineScope_0(this.m7h_1);
    this.a7h_1.a6q_1.h3s(GameScene$lambda(this));
    var tmp$ret$3;
    {
      var tmp0_apply_0 = Companion_getInstance_8().d6v(this.b7h_1.u6l(), this.b7h_1.v6l());
      {
      }
      {
        tmp0_apply_0.t4y(ProjCorrectionMode_ONSCREEN_getInstance());
      }
      tmp$ret$3 = tmp0_apply_0;
    }
    this.z4y(tmp$ret$3);
    this.n5f().x4l(Companion_getInstance_6().k34_1);
    var tmp_3 = this;
    var tmp_4 = this.a7h_1.a6q_1.b3s_1;
    tmp_3.o7h_1 = mutableStateOf(ImageAtlasSpec_init_$Create$(tmp_4, 0, 0, null, 14, null));
    var tmp_5 = this;
    tmp_5.p7h_1 = ImageAtlas_init_$Create$('tiles', null, 2, null);
    var tmp_6 = this;
    tmp_6.q7h_1 = ImageAtlas_init_$Create$('runner', null, 2, null);
    var tmp_7 = this;
    tmp_7.r7h_1 = ImageAtlas_init_$Create$('guard', null, 2, null);
    var tmp_8 = this;
    tmp_8.s7h_1 = ImageAtlas_init_$Create$('text', null, 2, null);
    var tmp_9 = this;
    tmp_9.t7h_1 = AnimationFrames_init_$Create$('runner', null, 2, null);
    var tmp_10 = this;
    tmp_10.u7h_1 = AnimationFrames_init_$Create$('guard', null, 2, null);
    var tmp_11 = this;
    tmp_11.v7h_1 = AnimationFrames_init_$Create$('hole', null, 2, null);
    this.w7h_1 = new SoundPlayer(this.z7g_1);
    var tmp_12 = this;
    tmp_12.x7h_1 = lazy(GameScene$bg$delegate$lambda(this));
  }
  GameScene.prototype.l78 = function () {
    return this.y7g_1;
  };
  GameScene.prototype.z7l = function () {
    return this.z7g_1;
  };
  GameScene.prototype.y7h = function () {
    return this.a7h_1;
  };
  GameScene.prototype.a7i = function () {
    return this.b7h_1;
  };
  GameScene.prototype.c7i = function () {
    return this.c7h_1;
  };
  GameScene.prototype.u6l = function () {
    return this.d7h_1;
  };
  GameScene.prototype.v6l = function () {
    return this.e7h_1;
  };
  GameScene.prototype.a7k = function () {
    return this.f7h_1;
  };
  GameScene.prototype.g7i = function () {
    return this.i7h_1;
  };
  GameScene.prototype.k7j = function () {
    return this.j7h_1;
  };
  GameScene.prototype.h71 = function () {
    return this.n7h_1;
  };
  GameScene.prototype.a7m = function () {
    return this.o7h_1;
  };
  GameScene.prototype.z7h = function () {
    return this.p7h_1;
  };
  GameScene.prototype.b7m = function () {
    return this.s7h_1;
  };
  GameScene.prototype.h7i = function () {
    return this.v7h_1;
  };
  GameScene.prototype.c7m = function () {
    return this.w7h_1;
  };
  GameScene.prototype.b7k = function (newts, $cont) {
    var tmp = new $reloadCOROUTINE$10(this, newts, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  GameScene.prototype.r7f = function (assets, ctx, $cont) {
    var tmp = new $loadResourcesCOROUTINE$11(this, assets, ctx, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  GameScene.prototype.f7f = function (ctx) {
    this.y7g_1.r6p_1 = this.w7h_1;
    this.p4q(_get_bg__ndby06(this));
    this.p4q(new RunnerController(ctx.r2d(), this.y7g_1.j6p_1));
    this.y7g_1.l4q();
  };
  GameScene.prototype.i7i = function (ctx, level) {
    this.c7k(ctx);
    this.c7h_1 = new LevelView(this.y7g_1, level, this.b7h_1, this.p7h_1, this.q7h_1, this.t7h_1, this.r7h_1, this.u7h_1);
    var tmp0_safe_receiver = this.c7h_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      {
        {
        }
        var tmp = this;
        var tmp$ret$0;
        {
          var builder = new ConfigBuilder();
          {
            builder.w4u_1 = 'bg';
            builder.i4v(this.d7h_1, this.e7h_1);
            builder.k4v(false);
            builder.t4v(GameScene$addLevelView$lambda());
          }
          tmp$ret$0 = new Config(builder);
        }
        tmp.j7h_1 = new OffscreenRenderPass2d(tmp0_safe_receiver, tmp$ret$0);
        tmp$ret$1 = Unit_getInstance();
      }
    }
    var tmp1_safe_receiver = this.j7h_1;
    if (tmp1_safe_receiver == null)
      null;
    else {
      var tmp$ret$3;
      {
        {
        }
        var tmp$ret$2;
        {
          var tmp0_apply = Companion_getInstance_8().d6v(this.d7h_1, this.e7h_1);
          {
          }
          {
            tmp0_apply.t4y(ProjCorrectionMode_OFFSCREEN_getInstance());
          }
          tmp$ret$2 = tmp0_apply;
        }
        tmp1_safe_receiver.z4y(tmp$ret$2);
        tmp1_safe_receiver.x4l(new Color(0.0, 0.0, 0.0, 0.0));
        this.i2f(tmp1_safe_receiver);
        var tmp_0 = this;
        var tmp_1 = tmp1_safe_receiver.a4z();
        var tmp_2 = tmp_1 instanceof OrthographicCamera ? tmp_1 : THROW_CCE();
        tmp_0.g7h_1 = CameraController_init_$Create$(tmp_2, null, ctx, 2, null);
        tmp$ret$3 = Unit_getInstance();
      }
    }
    var tmp2_safe_receiver = this.g7h_1;
    if (tmp2_safe_receiver == null)
      null;
    else {
      var tmp$ret$6;
      {
        {
        }
        var tmp$ret$5;
        {
          this.e4q(tmp2_safe_receiver);
          var tmp0_safe_receiver_0 = this.c7h_1;
          var tmp_3;
          if (tmp0_safe_receiver_0 == null) {
            tmp_3 = null;
          } else {
            var tmp$ret$4;
            {
              {
              }
              {
                tmp2_safe_receiver.y7m(this.y7g_1, tmp0_safe_receiver_0, tmp0_safe_receiver_0.j7j());
              }
              tmp$ret$4 = tmp0_safe_receiver_0;
            }
            tmp_3 = tmp$ret$4;
          }
          tmp$ret$5 = tmp_3;
        }
        tmp$ret$6 = tmp$ret$5;
      }
    }
    var tmp_4 = this;
    tmp_4.h7h_1 = group$default(null, GameScene$addLevelView$lambda_0(this), 1, null);
    this.p4q(ensureNotNull(this.h7h_1));
    var tmp3_this = this;
    {
      var tmp0_plusAssign = tmp3_this.n4k();
      var tmp1_plusAssign = this.l7h_1;
      tmp0_plusAssign.b(tmp1_plusAssign);
    }
  };
  GameScene.prototype.c7k = function (ctx) {
    var tmp0_safe_receiver = this.g7h_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        tmp0_safe_receiver.z7m(this.y7g_1);
        tmp$ret$0 = this.j5e(tmp0_safe_receiver);
      }
    }
    var tmp1_this = this;
    {
      var tmp0_minusAssign = tmp1_this.n4k();
      var tmp1_minusAssign = this.l7h_1;
      tmp0_minusAssign.c4(tmp1_minusAssign);
    }
    var tmp2_safe_receiver = this.j7h_1;
    if (tmp2_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      {
        {
        }
        this.o5b(tmp2_safe_receiver);
        tmp$ret$1 = ctx.g2f(1, GameScene$removeLevelView$lambda(tmp2_safe_receiver, ctx));
      }
    }
    this.j7h_1 = null;
    var tmp3_safe_receiver = this.h7h_1;
    if (tmp3_safe_receiver == null)
      null;
    else {
      var tmp$ret$2;
      {
        {
        }
        this.i4q(tmp3_safe_receiver);
        tmp$ret$2 = ctx.g2f(1, GameScene$removeLevelView$lambda_0(tmp3_safe_receiver, ctx));
      }
    }
    this.h7h_1 = null;
    var tmp4_safe_receiver = this.c7h_1;
    if (tmp4_safe_receiver == null)
      null;
    else {
      var tmp$ret$3;
      {
        {
        }
        tmp$ret$3 = ctx.g2f(1, GameScene$removeLevelView$lambda_1(tmp4_safe_receiver, ctx));
      }
    }
    this.c7h_1 = null;
  };
  GameScene.prototype.b7i = function (ctx) {
    var tmp$ret$0;
    {
      var tmp0_apply = this.i7h_1;
      {
      }
      {
        tmp0_apply.h5g(1.0);
        tmp0_apply.l5g(0.0);
        tmp0_apply.n2().w5g_1 = this.f7h_1;
        tmp0_apply.n2().x5g_1 = 0.0;
      }
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0;
  };
  GameScene.prototype.e7i = function (ctx) {
    var tmp$ret$0;
    {
      var tmp0_apply = this.i7h_1;
      {
      }
      {
        tmp0_apply.h5g(1.0);
        tmp0_apply.l5g(0.0);
        tmp0_apply.n2().w5g_1 = 0.0;
        tmp0_apply.n2().x5g_1 = this.f7h_1;
      }
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0;
  };
  GameScene.prototype.f7i = function (ctx) {
    var tmp$ret$0;
    {
      var tmp0_apply = this.i7h_1;
      {
      }
      {
        tmp0_apply.h5g(100.0);
      }
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0;
  };
  GameScene.prototype.l4k = function (ctx) {
    this.m7h_1.v18(null, 1, null);
    AsyncScene.prototype.l4k.call(this, ctx);
  };
  GameScene.$metadata$ = classMeta('GameScene', undefined, undefined, undefined, undefined, AsyncScene.prototype);
  function bg$factory() {
    return getPropertyCallableRef('bg', 1, KProperty1, function (receiver) {
      return _get_bg__ndby06(receiver);
    }, null);
  }
  function GameUI_init_$Init$(game, assets, gameSettings, conf, $mask0, $marker, $this) {
    if (!(($mask0 & 8) === 0)) {
      conf = ViewSpec_init_$Create$(null, null, 3, null);
    }
    GameUI.call($this, game, assets, gameSettings, conf);
    return $this;
  }
  function GameUI_init_$Create$(game, assets, gameSettings, conf, $mask0, $marker) {
    return GameUI_init_$Init$(game, assets, gameSettings, conf, $mask0, $marker, Object.create(GameUI.prototype));
  }
  function getStatusText(_this__u8e3s4, $this) {
    var scores = padStart(_this__u8e3s4.j6p_1.l75_1.toString(), 7, _Char___init__impl__6a9atx(48));
    var lives = padStart(_this__u8e3s4.j6p_1.k75_1.toString(), 3, _Char___init__impl__6a9atx(48));
    var tmp0_safe_receiver = _this__u8e3s4.q6p_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.p73_1;
    var level = padStart(((tmp1_elvis_lhs == null ? -1 : tmp1_elvis_lhs) + 1 | 0).toString(), 3, _Char___init__impl__6a9atx(48));
    return 'score' + scores + ' men' + lives + ' level' + level;
  }
  function GameUI$lambda(this$0) {
    return function ($this$null) {
      this$0.n7o_1 = true;
      return Unit_getInstance();
    };
  }
  function GameUI$lambda_0(this$0) {
    return function (it) {
      this$0.n7o_1 = true;
      return Unit_getInstance();
    };
  }
  function GameUI$lambda_1(this$0) {
    return function (it) {
      this$0.n7o_1 = true;
      return Unit_getInstance();
    };
  }
  function GameUI$lambda_2(this$0) {
    return function (it) {
      this$0.n7o_1 = true;
      return Unit_getInstance();
    };
  }
  function GameUI$setup$lambda(this$0) {
    return function ($this$$receiver) {
      $this$$receiver.t2h(this$0.j7o_1.q6l_1.e23(), this$0.j7o_1.q6l_1.g23(), 1.0);
      $this$$receiver.n2h(-(this$0.o7o_1.b3s_1.length / 2.0), 0.0, 0.0);
      return Unit_getInstance();
    };
  }
  function GameUI$setup$lambda_0(this$0) {
    return function (it) {
      var tmp;
      if (this$0.n7o_1) {
        this$0.o7o_1.m1e(getStatusText(this$0.g7o_1, this$0));
        this$0.n7o_1 = false;
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function $loadResourcesCOROUTINE$12(_this__u8e3s4, assets, ctx, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.x7o_1 = _this__u8e3s4;
    this.y7o_1 = assets;
    this.z7o_1 = ctx;
  }
  $loadResourcesCOROUTINE$12.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 2;
            this.k7_1 = 1;
            suspendResult = this.x7o_1.l7o_1.v70(this.x7o_1.k7o_1.b3s_1, this.y7o_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.x7o_1.n7o_1 = true;
            return Unit_getInstance();
          case 2:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 2) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  $loadResourcesCOROUTINE$12.$metadata$ = classMeta('$loadResourcesCOROUTINE$12', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function GameUI(game, assets, gameSettings, conf) {
    AsyncScene_init_$Init$(null, 1, null, this);
    this.g7o_1 = game;
    this.h7o_1 = assets;
    this.i7o_1 = gameSettings;
    this.j7o_1 = conf;
    this.k7o_1 = this.i7o_1.a6q_1;
    var tmp = this;
    tmp.l7o_1 = ImageAtlas_init_$Create$('text', null, 2, null);
    var tmp_0 = this;
    var tmp_1 = this.i7o_1.a6q_1.b3s_1;
    tmp_0.m7o_1 = mutableStateOf(ImageAtlasSpec_init_$Create$(tmp_1, 0, 0, null, 14, null));
    this.n7o_1 = true;
    this.o7o_1 = mutableStateOf(getStatusText(this.g7o_1, this));
    this.z4y(Companion_getInstance_8().d6v(this.j7o_1.u6l(), this.j7o_1.v6l()));
    this.n5f().x4l(null);
    var tmp0_this = this.g7o_1;
    {
      var tmp0_plusAssign = tmp0_this.u6p_1;
      tmp0_plusAssign.b(GameUI$lambda(this));
    }
    this.i7o_1.z6p_1.h3s(GameUI$lambda_0(this));
    this.i7o_1.c6q_1.h3s(GameUI$lambda_1(this));
    this.i7o_1.g6q_1.h3s(GameUI$lambda_2(this));
  }
  GameUI.prototype.r7f = function (assets, ctx, $cont) {
    var tmp = new $loadResourcesCOROUTINE$12(this, assets, ctx, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  GameUI.prototype.f7f = function (ctx) {
    var tmp = this.l7o_1;
    this.p4q(TextView_init_$Create$(this.o7o_1, tmp, this.m7o_1, 0, GameUI$setup$lambda(this), 8, null));
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.n4k();
      tmp0_plusAssign.b(GameUI$setup$lambda_0(this));
    }
  };
  GameUI.$metadata$ = classMeta('GameUI', undefined, undefined, undefined, undefined, AsyncScene.prototype);
  function MainMenuContext(levelSet, level) {
    this.h6q_1 = levelSet;
    this.i6q_1 = level;
  }
  MainMenuContext.prototype.toString = function () {
    return 'MainMenuContext(levelSet=' + this.h6q_1 + ', level=' + this.i6q_1 + ')';
  };
  MainMenuContext.prototype.hashCode = function () {
    var result = hashCode(this.h6q_1);
    result = imul(result, 31) + hashCode(this.i6q_1) | 0;
    return result;
  };
  MainMenuContext.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MainMenuContext))
      return false;
    var tmp0_other_with_cast = other instanceof MainMenuContext ? other : THROW_CCE();
    if (!equals(this.h6q_1, tmp0_other_with_cast.h6q_1))
      return false;
    if (!equals(this.i6q_1, tmp0_other_with_cast.i6q_1))
      return false;
    return true;
  };
  MainMenuContext.$metadata$ = classMeta('MainMenuContext');
  function LabeledMenuCommand_init_$Init$(pos, label, labelDelta, onEnter, $mask0, $marker, $this) {
    if (!(($mask0 & 4) === 0))
      labelDelta = new Vec2i(2, 0);
    if (!(($mask0 & 8) === 0)) {
      onEnter = MainMenuScene$LabeledMenuCommand$_init_$lambda_od8y1q();
    }
    LabeledMenuCommand.call($this, pos, label, labelDelta, onEnter);
    return $this;
  }
  function LabeledMenuCommand_init_$Create$(pos, label, labelDelta, onEnter, $mask0, $marker) {
    return LabeledMenuCommand_init_$Init$(pos, label, labelDelta, onEnter, $mask0, $marker, Object.create(LabeledMenuCommand.prototype));
  }
  function MainMenuScene$LabeledMenuCommand$_init_$lambda_od8y1q() {
    return function ($this$null) {
      return Unit_getInstance();
    };
  }
  function digit(_this__u8e3s4, $this, n) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = Math.pow(10.0, n);
      }
      var tmp0_mod = numberToInt(tmp$ret$0);
      var r = _this__u8e3s4 % tmp0_mod | 0;
      tmp$ret$1 = r + (tmp0_mod & ((r ^ tmp0_mod) & (r | (-r | 0))) >> 31) | 0;
    }
    var tmp = tmp$ret$1;
    var tmp$ret$2;
    {
      var tmp1_pow = n - 1 | 0;
      tmp$ret$2 = Math.pow(10.0, tmp1_pow);
    }
    return numberToInt(tmp / tmp$ret$2);
  }
  function replaceDigit(_this__u8e3s4, $this, digitPos, value) {
    var tmp$ret$0;
    {
      var tmp0_pow = digitPos - 1 | 0;
      tmp$ret$0 = Math.pow(10.0, tmp0_pow);
    }
    var m = numberToInt(tmp$ret$0);
    return (_this__u8e3s4 - imul(digit(_this__u8e3s4, $this, digitPos), m) | 0) + imul(value, m) | 0;
  }
  function _get_map__e6co1h($this) {
    var tmp$ret$0;
    {
      var tmp0_getValue = map$factory();
      tmp$ret$0 = $this.e6p_1.n2();
    }
    return tmp$ret$0;
  }
  function _get_reloadLevels__5yzso3($this) {
    var tmp = $this.h71();
    return launch$default(tmp, null, null, MainMenuScene$_get_reloadLevels_$slambda_m0t77b_0($this, null), 3, null);
  }
  function StaticLabel(text, x, y) {
    this.a7p_1 = text;
    this.b7p_1 = x;
    this.c7p_1 = y;
  }
  StaticLabel.prototype.a47 = function () {
    return this.a7p_1;
  };
  StaticLabel.prototype.e23 = function () {
    return this.b7p_1;
  };
  StaticLabel.prototype.g23 = function () {
    return this.c7p_1;
  };
  StaticLabel.prototype.toString = function () {
    return 'StaticLabel(text=' + this.a7p_1 + ', x=' + this.b7p_1 + ', y=' + this.c7p_1 + ')';
  };
  StaticLabel.prototype.hashCode = function () {
    var result = getStringHashCode(this.a7p_1);
    result = imul(result, 31) + getNumberHashCode(this.b7p_1) | 0;
    result = imul(result, 31) + getNumberHashCode(this.c7p_1) | 0;
    return result;
  };
  StaticLabel.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof StaticLabel))
      return false;
    var tmp0_other_with_cast = other instanceof StaticLabel ? other : THROW_CCE();
    if (!(this.a7p_1 === tmp0_other_with_cast.a7p_1))
      return false;
    if (!equals(this.b7p_1, tmp0_other_with_cast.b7p_1))
      return false;
    if (!equals(this.c7p_1, tmp0_other_with_cast.c7p_1))
      return false;
    return true;
  };
  StaticLabel.$metadata$ = classMeta('StaticLabel');
  function MenuCommand(pos, onEnter) {
    this.d7p_1 = pos;
    this.e7p_1 = onEnter;
  }
  MenuCommand.prototype.f7p = function () {
    return this.d7p_1;
  };
  MenuCommand.$metadata$ = classMeta('MenuCommand');
  function LabeledMenuCommand(pos, label, labelDelta, onEnter) {
    MenuCommand.call(this, pos, onEnter);
    this.i7p_1 = label;
    this.j7p_1 = labelDelta;
  }
  LabeledMenuCommand.prototype.k7p = function () {
    return this.i7p_1;
  };
  LabeledMenuCommand.prototype.l7p = function () {
    return this.j7p_1;
  };
  LabeledMenuCommand.$metadata$ = classMeta('LabeledMenuCommand', undefined, undefined, undefined, undefined, MenuCommand.prototype);
  function afterTeleport(_this__u8e3s4, $this) {
    _this__u8e3s4.j6p_1.r78().r2i(0);
    _this__u8e3s4.j6p_1.r78().s2i(0);
    _this__u8e3s4.j6p_1.g5t();
  }
  function teleportRunnerLeft(_this__u8e3s4, $this) {
    var tmp0_this = _this__u8e3s4.j6p_1.q78();
    var tmp1 = tmp0_this.e23();
    tmp0_this.r2i(tmp1 - 1 | 0);
    afterTeleport(_this__u8e3s4, $this);
  }
  function teleportRunnerRight(_this__u8e3s4, $this) {
    var tmp0_this = _this__u8e3s4.j6p_1.q78();
    var tmp1 = tmp0_this.e23();
    tmp0_this.r2i(tmp1 + 1 | 0);
    afterTeleport(_this__u8e3s4, $this);
  }
  function teleportRunnerDown(_this__u8e3s4, $this) {
    var tmp0_this = _this__u8e3s4.j6p_1.q78();
    var tmp1 = tmp0_this.g23();
    tmp0_this.s2i(tmp1 + 1 | 0);
    afterTeleport(_this__u8e3s4, $this);
  }
  function teleportRunnerUp(_this__u8e3s4, $this) {
    var tmp0_this = _this__u8e3s4.j6p_1.q78();
    var tmp1 = tmp0_this.g23();
    tmp0_this.s2i(tmp1 - 1 | 0);
    afterTeleport(_this__u8e3s4, $this);
  }
  function MainMenuScene$map$delegate$lambda() {
    return function () {
      var mx = 16;
      var end = '  # $ # ';
      var sep = '  ##H## ';
      var choice = '  $-H-$ ';
      var start = 'H @ H& $';
      var tmp$ret$2;
      {
        var tmp0_map = listOf([end, choice, '  # H#', '  @ H-  HHH@', '  # H#@@', choice, sep, choice, '0 # H # ', start]);
        var tmp$ret$1;
        {
          var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
          var tmp0_iterator = tmp0_map.h();
          while (tmp0_iterator.n()) {
            var item = tmp0_iterator.o();
            var tmp$ret$0;
            {
              tmp$ret$0 = padEnd(item, mx, _Char___init__impl__6a9atx(32));
            }
            tmp0_mapTo.b(tmp$ret$0);
          }
          tmp$ret$1 = tmp0_mapTo;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      return tmp$ret$2;
    };
  }
  function MainMenuScene$_get_reloadLevels_$slambda_m0t77b(this$0, resultContinuation) {
    this.u7p_1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  MainMenuScene$_get_reloadLevels_$slambda_m0t77b.prototype.d1v = function ($this$launch, $cont) {
    var tmp = this.e1v($this$launch, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  MainMenuScene$_get_reloadLevels_$slambda_m0t77b.prototype.s7 = function (p1, $cont) {
    return this.d1v((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  MainMenuScene$_get_reloadLevels_$slambda_m0t77b.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 2;
            this.w7p_1 = new LevelsRep(this.u7p_1.z7l(), this.u7p_1.h71());
            this.k7_1 = 1;
            suspendResult = this.w7p_1.y6x(this.u7p_1.t6o_1.h6q_1.b3s_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.u7p_1.y6o_1 = this.w7p_1.w6x_1.m() - 1 | 0;
            return Unit_getInstance();
          case 2:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 2) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  MainMenuScene$_get_reloadLevels_$slambda_m0t77b.prototype.e1v = function ($this$launch, completion) {
    var i = new MainMenuScene$_get_reloadLevels_$slambda_m0t77b(this.u7p_1, completion);
    i.v7p_1 = $this$launch;
    return i;
  };
  MainMenuScene$_get_reloadLevels_$slambda_m0t77b.$metadata$ = classMeta('MainMenuScene$<get-reloadLevels>$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function MainMenuScene$_get_reloadLevels_$slambda_m0t77b_0(this$0, resultContinuation) {
    var i = new MainMenuScene$_get_reloadLevels_$slambda_m0t77b(this$0, resultContinuation);
    var l = function ($this$launch, $cont) {
      return i.d1v($this$launch, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function MainMenuScene$lambda(this$0) {
    return function (it) {
      this$0.v6o_1.m1e(it.p6l());
      return Unit_getInstance();
    };
  }
  function MainMenuScene$lambda_0(this$0) {
    return function (it) {
      this$0.w6o_1.m1e(it.p6l());
      return Unit_getInstance();
    };
  }
  function MainMenuScene$lambda_1(this$0) {
    return function (it) {
      this$0.x6o_1.m1e(it.p6l());
      _get_reloadLevels__5yzso3(this$0);
      return Unit_getInstance();
    };
  }
  function MainMenuScene$lambda_2(this$0) {
    return function (it) {
      var tmp$ret$0;
      {
        var tmp0_with = it + 1 | 0;
        {
        }
        this$0.z6o_1.m1e(digit(tmp0_with, this$0, 1).toString());
        this$0.a6p_1.m1e(digit(tmp0_with, this$0, 2).toString());
        tmp$ret$0 = this$0.b6p_1.m1e(digit(tmp0_with, this$0, 3).toString());
      }
      return Unit_getInstance();
    };
  }
  function MainMenuScene$lambda_3($game) {
    return function ($this$$receiver) {
      var tmp$ret$1;
      {
        var tmp0_with = $this$$receiver.t6o_1.h6q_1;
        {
        }
        $this$$receiver.y6o_1 = IntCompanionObject_getInstance().d1_1;
        var tmp = values_2();
        var tmp$ret$0;
        {
          var tmp0_mod = tmp0_with.b3s_1.y1() - 1 | 0;
          var tmp1_mod = values_2().length;
          var r = tmp0_mod % tmp1_mod | 0;
          tmp$ret$0 = r + (tmp1_mod & ((r ^ tmp1_mod) & (r | (-r | 0))) >> 31) | 0;
        }
        tmp0_with.m1e(tmp[tmp$ret$0]);
        tmp$ret$1 = teleportRunnerRight($game, $this$$receiver);
      }
      return Unit_getInstance();
    };
  }
  function MainMenuScene$lambda_4($game) {
    return function ($this$$receiver) {
      var tmp$ret$0;
      {
        var tmp0_with = $this$$receiver.t6o_1.h6q_1;
        {
        }
        $this$$receiver.y6o_1 = 0;
        tmp0_with.m1e(values_2()[(tmp0_with.b3s_1.y1() + 1 | 0) % values_2().length | 0]);
        tmp$ret$0 = teleportRunnerLeft($game, $this$$receiver);
      }
      return Unit_getInstance();
    };
  }
  function MainMenuScene$lambda_5($game) {
    return function ($this$$receiver) {
      teleportRunnerDown($game, $this$$receiver);
      var tmp$ret$1;
      {
        var tmp0_with = $this$$receiver.t6o_1.i6q_1;
        {
        }
        var tmp$ret$0;
        {
          var tmp0_min = $this$$receiver.y6o_1;
          var tmp1_min = replaceDigit(tmp0_with.b3s_1, $this$$receiver, 3, digit(tmp0_with.b3s_1, $this$$receiver, 3) + 1 | 0);
          tmp$ret$0 = Math.min(tmp0_min, tmp1_min);
        }
        tmp$ret$1 = tmp0_with.m1e(tmp$ret$0);
      }
      return Unit_getInstance();
    };
  }
  function MainMenuScene$lambda_6($game) {
    return function ($this$$receiver) {
      teleportRunnerUp($game, $this$$receiver);
      var tmp$ret$1;
      {
        var tmp0_with = $this$$receiver.t6o_1.i6q_1;
        {
        }
        var tmp$ret$0;
        {
          var tmp0_max = replaceDigit(tmp0_with.b3s_1, $this$$receiver, 3, digit(tmp0_with.b3s_1, $this$$receiver, 3) - 1 | 0);
          tmp$ret$0 = Math.max(0, tmp0_max);
        }
        tmp$ret$1 = tmp0_with.m1e(tmp$ret$0);
      }
      return Unit_getInstance();
    };
  }
  function MainMenuScene$lambda_7($game) {
    return function ($this$$receiver) {
      teleportRunnerDown($game, $this$$receiver);
      var tmp$ret$1;
      {
        var tmp0_with = $this$$receiver.t6o_1.i6q_1;
        {
        }
        var tmp$ret$0;
        {
          var tmp0_min = $this$$receiver.y6o_1;
          var tmp1_min = replaceDigit(tmp0_with.b3s_1, $this$$receiver, 2, digit(tmp0_with.b3s_1, $this$$receiver, 2) + 1 | 0);
          tmp$ret$0 = Math.min(tmp0_min, tmp1_min);
        }
        tmp$ret$1 = tmp0_with.m1e(tmp$ret$0);
      }
      return Unit_getInstance();
    };
  }
  function MainMenuScene$lambda_8($game) {
    return function ($this$$receiver) {
      teleportRunnerUp($game, $this$$receiver);
      var tmp$ret$1;
      {
        var tmp0_with = $this$$receiver.t6o_1.i6q_1;
        {
        }
        var tmp$ret$0;
        {
          var tmp0_max = replaceDigit(tmp0_with.b3s_1, $this$$receiver, 2, digit(tmp0_with.b3s_1, $this$$receiver, 2) - 1 | 0);
          tmp$ret$0 = Math.max(0, tmp0_max);
        }
        tmp$ret$1 = tmp0_with.m1e(tmp$ret$0);
      }
      return Unit_getInstance();
    };
  }
  function MainMenuScene$lambda_9($game) {
    return function ($this$$receiver) {
      teleportRunnerDown($game, $this$$receiver);
      var tmp$ret$1;
      {
        var tmp0_with = $this$$receiver.t6o_1.i6q_1;
        {
        }
        var tmp$ret$0;
        {
          var tmp0_min = $this$$receiver.y6o_1;
          var tmp1_min = replaceDigit(tmp0_with.b3s_1, $this$$receiver, 1, digit(tmp0_with.b3s_1, $this$$receiver, 1) + 1 | 0);
          tmp$ret$0 = Math.min(tmp0_min, tmp1_min);
        }
        tmp$ret$1 = tmp0_with.m1e(tmp$ret$0);
      }
      return Unit_getInstance();
    };
  }
  function MainMenuScene$lambda_10($game) {
    return function ($this$$receiver) {
      teleportRunnerUp($game, $this$$receiver);
      var tmp$ret$1;
      {
        var tmp0_with = $this$$receiver.t6o_1.i6q_1;
        {
        }
        var tmp$ret$0;
        {
          var tmp0_max = replaceDigit(tmp0_with.b3s_1, $this$$receiver, 1, digit(tmp0_with.b3s_1, $this$$receiver, 1) - 1 | 0);
          tmp$ret$0 = Math.max(0, tmp0_max);
        }
        tmp$ret$1 = tmp0_with.m1e(tmp$ret$0);
      }
      return Unit_getInstance();
    };
  }
  function MainMenuScene$lambda_11($game) {
    return function ($this$$receiver) {
      var tmp$ret$1;
      {
        var tmp0_with = $this$$receiver.y7h().d6q_1;
        {
        }
        var tmp = values();
        var tmp$ret$0;
        {
          var tmp0_mod = tmp0_with.b3s_1.y1() - 1 | 0;
          var tmp1_mod = values().length;
          var r = tmp0_mod % tmp1_mod | 0;
          tmp$ret$0 = r + (tmp1_mod & ((r ^ tmp1_mod) & (r | (-r | 0))) >> 31) | 0;
        }
        tmp0_with.m1e(tmp[tmp$ret$0]);
        tmp$ret$1 = teleportRunnerRight($game, $this$$receiver);
      }
      return Unit_getInstance();
    };
  }
  function MainMenuScene$lambda_12($game) {
    return function ($this$$receiver) {
      var tmp$ret$0;
      {
        var tmp0_with = $this$$receiver.y7h().d6q_1;
        {
        }
        tmp0_with.m1e(values()[(tmp0_with.b3s_1.y1() + 1 | 0) % values().length | 0]);
        tmp$ret$0 = teleportRunnerLeft($game, $this$$receiver);
      }
      return Unit_getInstance();
    };
  }
  function MainMenuScene$lambda_13($game) {
    return function ($this$$receiver) {
      var tmp$ret$1;
      {
        var tmp0_with = $this$$receiver.y7h().a6q_1;
        {
        }
        var tmp = values_1();
        var tmp$ret$0;
        {
          var tmp0_mod = tmp0_with.b3s_1.y1() - 1 | 0;
          var tmp1_mod = values_1().length;
          var r = tmp0_mod % tmp1_mod | 0;
          tmp$ret$0 = r + (tmp1_mod & ((r ^ tmp1_mod) & (r | (-r | 0))) >> 31) | 0;
        }
        tmp0_with.m1e(tmp[tmp$ret$0]);
        tmp$ret$1 = teleportRunnerRight($game, $this$$receiver);
      }
      return Unit_getInstance();
    };
  }
  function MainMenuScene$lambda_14($game) {
    return function ($this$$receiver) {
      var tmp$ret$0;
      {
        var tmp0_with = $this$$receiver.y7h().a6q_1;
        {
        }
        tmp0_with.m1e(values_1()[(tmp0_with.b3s_1.y1() + 1 | 0) % values_1().length | 0]);
        tmp$ret$0 = teleportRunnerLeft($game, $this$$receiver);
      }
      return Unit_getInstance();
    };
  }
  function MainMenuScene$lambda_15() {
    return function ($this$$receiver) {
      MainMenuState_getInstance().h6m_1 = true;
      return Unit_getInstance();
    };
  }
  function MainMenuScene$lambda_16() {
    return function ($this$$receiver) {
      MainMenuState_getInstance().i6m_1 = true;
      return Unit_getInstance();
    };
  }
  function MainMenuScene$setup$lambda(this$0) {
    return function (g, _anonymous_parameter_1__qggqgd) {
      this$0.f6p_1.m1e('' + g.j6p_1.e23() + ' x ' + g.j6p_1.g23());
      var tmp$ret$1;
      $l$block: {
        var tmp0_firstOrNull = this$0.c6p_1;
        var tmp0_iterator = tmp0_firstOrNull.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          var tmp$ret$0;
          {
            tmp$ret$0 = element.d7p_1.e23() === g.j6p_1.q78().e23() ? element.d7p_1.g23() === g.j6p_1.q78().g23() : false;
          }
          if (tmp$ret$0) {
            tmp$ret$1 = element;
            break $l$block;
          }
        }
        tmp$ret$1 = null;
      }
      var tmp0_safe_receiver = tmp$ret$1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$2;
        {
          {
          }
          var tmp = this$0.c7m();
          tmp.o72('getGold', false, false, 6, null);
          tmp$ret$2 = tmp0_safe_receiver.e7p_1(this$0);
        }
      }
      return Unit_getInstance();
    };
  }
  function MainMenuScene$setup$lambda$lambda(this$0, $version) {
    return function ($this$textView) {
      $this$textView.t2h(this$0.a7i().q6l_1.e23() / 2.0, this$0.a7i().q6l_1.g23() / 2.0, 1.0);
      $this$textView.n2h(-($version.length / 2.0), 0.0, 0.0);
      return Unit_getInstance();
    };
  }
  function MainMenuScene$setup$lambda$lambda_0($element) {
    return function ($this$textView) {
      $this$textView.n2h($element.b7p_1, $element.c7p_1, 0.0);
      $this$textView.t2h(0.5, 0.5, 1.0);
      return Unit_getInstance();
    };
  }
  function MainMenuScene$setup$lambda$lambda_1($element, this$0) {
    return function ($this$$receiver) {
      $this$$receiver.n2h($element.f7p().e23() + $element.j7p_1.e23() - ensureNotNull(this$0.l78().q6p_1).t73_1 / 2.0, ((ensureNotNull(this$0.l78().q6p_1).u73_1 - $element.f7p().g23() | 0) - 1 | 0) + $element.j7p_1.g23(), 0.0);
      return Unit_getInstance();
    };
  }
  function MainMenuScene$setup$lambda_0(this$0, $ctx) {
    return function ($this$null) {
      println($this$null.b6t_1);
      var tmp0_subject = $this$null.b6t_1;
      var tmp0 = tmp0_subject.y1();
      var tmp;
      switch (tmp0) {
        case 6:
          this$0.i7i($ctx, ensureNotNull(this$0.l78().q6p_1));
          var version = get_Version() + ' by Andrey Zakharov';
          var tmp_0 = this$0.b7m();
          var tmp_1 = this$0.a7m();
          var tmp_2 = version.length;
          this$0.p4q(textView(version, tmp_0, tmp_1, tmp_2, MainMenuScene$setup$lambda$lambda(this$0, version)));
          var tmp1_safe_receiver = this$0.c7i();
          if (tmp1_safe_receiver == null)
            null;
          else {
            var tmp$ret$0;
            {
              {
              }
              var tmp0_forEach = this$0.d6p_1;
              var tmp0_iterator = tmp0_forEach.h();
              while (tmp0_iterator.n()) {
                var element = tmp0_iterator.o();
                {
                  var tmp_3 = this$0.b7m();
                  var tmp_4 = this$0.a7m();
                  var tmp_5 = textView$default(element.a7p_1, tmp_3, tmp_4, 0, MainMenuScene$setup$lambda$lambda_0(element), 8, null);
                  tmp1_safe_receiver.s4r(tmp_5, 0, 2, null);
                }
              }
              tmp$ret$0 = Unit_getInstance();
            }
          }

          ;
          var tmp$ret$2;
          {
            var tmp0_filterIsInstance = this$0.c6p_1;
            var tmp$ret$1;
            {
              var tmp0_filterIsInstanceTo = ArrayList_init_$Create$_0();
              var tmp0_iterator_0 = tmp0_filterIsInstance.h();
              while (tmp0_iterator_0.n()) {
                var element_0 = tmp0_iterator_0.o();
                if (element_0 instanceof LabeledMenuCommand) {
                  tmp0_filterIsInstanceTo.b(element_0);
                }
              }
              tmp$ret$1 = tmp0_filterIsInstanceTo;
            }
            tmp$ret$2 = tmp$ret$1;
          }

          var tmp1_forEach = tmp$ret$2;
          var tmp0_iterator_1 = tmp1_forEach.h();
          while (tmp0_iterator_1.n()) {
            var element_1 = tmp0_iterator_1.o();
            {
              var tmp0_safe_receiver = this$0.c7i();
              if (tmp0_safe_receiver == null)
                null;
              else {
                var tmp_6 = this$0.b7m();
                var tmp_7 = this$0.a7m();
                var tmp_8 = new TextView(element_1.i7p_1, tmp_6, tmp_7, 25, MainMenuScene$setup$lambda$lambda_1(element_1, this$0));
                tmp0_safe_receiver.s4r(tmp_8, 0, 2, null);
              }
            }
          }

          tmp = Unit_getInstance();
          break;
        case 0:
          this$0.e7i($ctx);
          tmp = Unit_getInstance();
          break;
        case 2:
          tmp = this$0.l78().j6p_1.g5t();
          break;
        default:
          tmp = Unit_getInstance();
          break;
      }
      return Unit_getInstance();
    };
  }
  function MainMenuScene(context, game, assets) {
    GameScene_init_$Init$(game, assets, context, null, 'mainmenu', 8, null, this);
    this.t6o_1 = new MainMenuContext(mutableStateOf(context.b6q_1.b3s_1), mutableStateOf(context.c6q_1.b3s_1));
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.u6o_1 = tmp$ret$0;
    this.v6o_1 = mutableStateOf(this.y7h().a6q_1.b3s_1.p6l());
    this.w6o_1 = mutableStateOf(this.y7h().d6q_1.b3s_1.p6l());
    this.x6o_1 = mutableStateOf(this.t6o_1.h6q_1.b3s_1.p6l());
    this.y6o_1 = IntCompanionObject_getInstance().d1_1;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = ArrayList_init_$Create$_0();
    }
    tmp_0.c6p_1 = tmp$ret$1;
    var tmp_1 = this;
    var tmp$ret$2;
    {
      tmp$ret$2 = ArrayList_init_$Create$_0();
    }
    tmp_1.d6p_1 = tmp$ret$2;
    var tmp_2 = this;
    tmp_2.e6p_1 = lazy(MainMenuScene$map$delegate$lambda());
    var tmp_3 = this.y7h().a6q_1;
    tmp_3.h3s(MainMenuScene$lambda(this));
    var tmp_4 = this.y7h().d6q_1;
    tmp_4.h3s(MainMenuScene$lambda_0(this));
    this.t6o_1.h6q_1.h3s(MainMenuScene$lambda_1(this));
    _get_reloadLevels__5yzso3(this);
    var tmp$ret$3;
    {
      var tmp0_with = this.t6o_1.i6q_1.b3s_1 + 1 | 0;
      {
      }
      this.z6o_1 = mutableStateOf(digit(tmp0_with, this, 1).toString());
      this.a6p_1 = mutableStateOf(digit(tmp0_with, this, 2).toString());
      this.b6p_1 = mutableStateOf(digit(tmp0_with, this, 3).toString());
      tmp$ret$3 = Unit_getInstance();
    }
    this.t6o_1.i6q_1.h3s(MainMenuScene$lambda_2(this));
    var levelHeight = _get_map__e6co1h(this).m();
    var levelWidth = first(_get_map__e6co1h(this)).length;
    var leftCol = 2;
    var rightCol = 6;
    var dy = 2;
    var y = 1;
    var dx = (-levelWidth | 0) / 2.0;
    var labelsX = (rightCol + 2 | 0) + dx;
    var tmp0_this = this;
    {
      var tmp1_plusAssign = tmp0_this.d6p_1;
      var tmp2_plusAssign = new StaticLabel('level set', labelsX, levelHeight - y + 1);
      tmp1_plusAssign.b(tmp2_plusAssign);
    }
    var tmp1_this = this;
    {
      var tmp3_plusAssign = tmp1_this.c6p_1;
      var tmp_5 = new Vec2i(leftCol, y);
      var tmp4_plusAssign = new MenuCommand(tmp_5, MainMenuScene$lambda_3(game));
      tmp3_plusAssign.b(tmp4_plusAssign);
    }
    var tmp2_this = this;
    {
      var tmp5_plusAssign = tmp2_this.c6p_1;
      var tmp_6 = new Vec2i(rightCol, y);
      var tmp6_plusAssign = LabeledMenuCommand_init_$Create$(tmp_6, this.x6o_1, null, MainMenuScene$lambda_4(game), 4, null);
      tmp5_plusAssign.b(tmp6_plusAssign);
    }
    y = y + dy | 0;
    var origin = new Vec2i(rightCol + 2 | 0, y);
    var tmp3_this = this;
    {
      var tmp7_plusAssign = tmp3_this.d6p_1;
      var tmp8_plusAssign = new StaticLabel('level', labelsX, levelHeight - y + 1);
      tmp7_plusAssign.b(tmp8_plusAssign);
    }
    var tmp4_this = this;
    {
      var tmp9_plusAssign = tmp4_this.c6p_1;
      var tmp_7 = plus_0(origin, new Vec2i(0, -1));
      var tmp_8 = new Vec2i(0, -1);
      var tmp10_plusAssign = new LabeledMenuCommand(tmp_7, this.b6p_1, tmp_8, MainMenuScene$lambda_5(game));
      tmp9_plusAssign.b(tmp10_plusAssign);
    }
    var tmp5_this = this;
    {
      var tmp11_plusAssign = tmp5_this.c6p_1;
      var tmp_9 = plus_0(origin, new Vec2i(0, 1));
      var tmp12_plusAssign = new MenuCommand(tmp_9, MainMenuScene$lambda_6(game));
      tmp11_plusAssign.b(tmp12_plusAssign);
    }
    var tmp6_this = this;
    {
      var tmp13_plusAssign = tmp6_this.c6p_1;
      var tmp_10 = plus_0(origin, new Vec2i(1, -1));
      var tmp_11 = new Vec2i(0, -1);
      var tmp14_plusAssign = new LabeledMenuCommand(tmp_10, this.a6p_1, tmp_11, MainMenuScene$lambda_7(game));
      tmp13_plusAssign.b(tmp14_plusAssign);
    }
    var tmp7_this = this;
    {
      var tmp15_plusAssign = tmp7_this.c6p_1;
      var tmp_12 = plus_0(origin, new Vec2i(1, 1));
      var tmp16_plusAssign = new MenuCommand(tmp_12, MainMenuScene$lambda_8(game));
      tmp15_plusAssign.b(tmp16_plusAssign);
    }
    var tmp8_this = this;
    {
      var tmp17_plusAssign = tmp8_this.c6p_1;
      var tmp_13 = plus_0(origin, new Vec2i(2, -1));
      var tmp_14 = new Vec2i(0, -1);
      var tmp18_plusAssign = new LabeledMenuCommand(tmp_13, this.z6o_1, tmp_14, MainMenuScene$lambda_9(game));
      tmp17_plusAssign.b(tmp18_plusAssign);
    }
    var tmp9_this = this;
    {
      var tmp19_plusAssign = tmp9_this.c6p_1;
      var tmp_15 = plus_0(origin, new Vec2i(2, 1));
      var tmp20_plusAssign = new MenuCommand(tmp_15, MainMenuScene$lambda_10(game));
      tmp19_plusAssign.b(tmp20_plusAssign);
    }
    y = y + dy | 0;
    var tmp10_this = this;
    {
      var tmp21_plusAssign = tmp10_this.d6p_1;
      var tmp22_plusAssign = new StaticLabel('speed', labelsX, levelHeight - y + 1);
      tmp21_plusAssign.b(tmp22_plusAssign);
    }
    var tmp11_this = this;
    {
      var tmp23_plusAssign = tmp11_this.c6p_1;
      var tmp_16 = new Vec2i(leftCol, y);
      var tmp24_plusAssign = new MenuCommand(tmp_16, MainMenuScene$lambda_11(game));
      tmp23_plusAssign.b(tmp24_plusAssign);
    }
    var tmp12_this = this;
    {
      var tmp25_plusAssign = tmp12_this.c6p_1;
      var tmp_17 = new Vec2i(rightCol, y);
      var tmp26_plusAssign = LabeledMenuCommand_init_$Create$(tmp_17, this.w6o_1, null, MainMenuScene$lambda_12(game), 4, null);
      tmp25_plusAssign.b(tmp26_plusAssign);
    }
    y = y + dy | 0;
    var tmp13_this = this;
    {
      var tmp27_plusAssign = tmp13_this.d6p_1;
      var tmp28_plusAssign = new StaticLabel('sprites', labelsX, levelHeight - y + 1);
      tmp27_plusAssign.b(tmp28_plusAssign);
    }
    var tmp14_this = this;
    {
      var tmp29_plusAssign = tmp14_this.c6p_1;
      var tmp_18 = new Vec2i(leftCol, y);
      var tmp30_plusAssign = new MenuCommand(tmp_18, MainMenuScene$lambda_13(game));
      tmp29_plusAssign.b(tmp30_plusAssign);
    }
    var tmp15_this = this;
    {
      var tmp31_plusAssign = tmp15_this.c6p_1;
      var tmp_19 = new Vec2i(rightCol, y);
      var tmp32_plusAssign = LabeledMenuCommand_init_$Create$(tmp_19, this.v6o_1, null, MainMenuScene$lambda_14(game), 4, null);
      tmp31_plusAssign.b(tmp32_plusAssign);
    }
    var tmp16_this = this;
    {
      var tmp33_plusAssign = tmp16_this.c6p_1;
      var tmp_20 = new Vec2i(7, levelHeight - 1 | 0);
      var tmp_21 = mutableStateOf('continue game');
      var tmp34_plusAssign = LabeledMenuCommand_init_$Create$(tmp_20, tmp_21, null, MainMenuScene$lambda_15(), 4, null);
      tmp33_plusAssign.b(tmp34_plusAssign);
    }
    var tmp17_this = this;
    {
      var tmp35_plusAssign = tmp17_this.c6p_1;
      var tmp_22 = new Vec2i(4, 0);
      var tmp_23 = mutableStateOf('new game');
      var tmp_24 = new Vec2i(0, 2);
      var tmp36_plusAssign = new LabeledMenuCommand(tmp_22, tmp_23, tmp_24, MainMenuScene$lambda_16());
      tmp35_plusAssign.b(tmp36_plusAssign);
    }
    this.f6p_1 = mutableStateOf('' + game.j6p_1.e23() + ' x ' + game.j6p_1.g23());
  }
  MainMenuScene.prototype.f7f = function (ctx) {
    GameScene.prototype.f7f.call(this, ctx);
    var tmp = this.l78();
    var tmp$ret$0;
    {
      var tmp_0 = _get_map__e6co1h(this);
      var tmp_1 = this.z7h().r70_1;
      var tmp0_also = GameLevel_init_$Create$(0, tmp_0, tmp_1, 0, 8, null);
      {
      }
      {
        tmp0_also.f74_1 = this.h7i();
      }
      tmp$ret$0 = tmp0_also;
    }
    tmp.f7a(tmp$ret$0);
    var tmp0_this = this.l78();
    {
      var tmp1_plusAssign = tmp0_this.v6p_1;
      tmp1_plusAssign.b(MainMenuScene$setup$lambda(this));
    }
    var tmp1_this = this.l78();
    {
      var tmp2_plusAssign = tmp1_this.u6p_1;
      tmp2_plusAssign.b(MainMenuScene$setup$lambda_0(this, ctx));
    }
    this.l78().i7a();
  };
  MainMenuScene.prototype.l4k = function (ctx) {
    this.l78().j6p_1.g5t();
    GameScene.prototype.l4k.call(this, ctx);
    unregisterActions(ctx.r2d(), this.u6o_1);
    this.u6o_1.t7();
  };
  MainMenuScene.$metadata$ = classMeta('MainMenuScene', undefined, undefined, undefined, undefined, GameScene.prototype);
  function map$factory() {
    return getPropertyCallableRef('map', 1, KProperty1, function (receiver) {
      return _get_map__e6co1h(receiver);
    }, null);
  }
  function MaskShader$MaskModel$lambda$lambda(this$0, $this_vertexStage, $cfg) {
    return function ($this$main) {
      var tmp = mvpMatrix(this$0).m2h();
      var mvp = $this$main.m2z(tmp, null, 2, null);
      $this$main.h30(this$0.j7q_1.n37(), $this_vertexStage.i39(Companion_getInstance_7().q2z_1.x2s_1));
      var tmp_0;
      if ($cfg.c30_1) {
        tmp_0 = $this$main.z2z(mvp, $this_vertexStage.y2z(Companion_getInstance_7().w2z_1.x2s_1));
      }
      $this$main.h30($this_vertexStage.d2s_1, times(mvp, $this$main.g30($this_vertexStage.f30(Companion_getInstance_7().n2z_1.x2s_1), 1.0)));
      return Unit_getInstance();
    };
  }
  function MaskShader$MaskModel$lambda(this$0, $cfg) {
    return function ($this$vertexStage) {
      $this$vertexStage.i30(MaskShader$MaskModel$lambda$lambda(this$0, $this$vertexStage, $cfg));
      return Unit_getInstance();
    };
  }
  function MaskShader$MaskModel$lambda$lambda$lambda($this_fragmentStage) {
    return function ($this$if) {
      var tmp = $this$if.v3m(0.0);
      $this_fragmentStage.r3p($this$if, tmp, 0, 2, null);
      return Unit_getInstance();
    };
  }
  function MaskShader$MaskModel$lambda$lambda$lambda_0($cfg, $this_fragmentStage) {
    return function ($this$else) {
      var colorBlock = fragmentColorBlock$default($this$else, $cfg.a30_1, null, 2, null);
      var baseColor = float4Port($this$else, 'baseColor', colorBlock.s30_1);
      var tmp = get_rgb(baseColor);
      var outRgb = $this$else.u30(tmp, null, 2, null);
      $this$else.h30(outRgb, convertColorSpace($this$else, outRgb, $cfg.d30_1));
      var tmp_0;
      if ($cfg.b30_1.w2t_1.equals(BlendMode_BLEND_PREMULTIPLIED_ALPHA_getInstance())) {
        tmp_0 = $this$else.h30(outRgb, times_0(outRgb, get_a(baseColor)));
      }
      var tmp_1 = get_a(baseColor);
      $this_fragmentStage.h31($this$else, outRgb, tmp_1, 0, 4, null);
      return Unit_getInstance();
    };
  }
  function MaskShader$MaskModel$lambda$lambda_0(this$0, $cfg, $this_fragmentStage) {
    return function ($this$main) {
      var darkRadius = this$0.l3m('radius');
      var tmp0_safe_receiver = $cfg.a30_1.o32();
      var tex = this$0.r31(ensureNotNull(tmp0_safe_receiver == null ? null : tmp0_safe_receiver.r32_1));
      var tmp = toFloat2($this$main.s3o(tex, null, 2, null));
      var texSize = $this$main.i3n(tmp, null, 2, null);
      var div_1 = $this$main.d38(2.0);
      var centered = minus(this$0.j7q_1.q36(), $this$main.u3m(0.5));
      var tmp_0 = ge($this$main.d3o($this$main.c3o(div(times_1(texSize, centered), div_1))), div_0(darkRadius, div_1));
      var tmp_1 = $this$main.s3n(tmp_0, MaskShader$MaskModel$lambda$lambda$lambda($this_fragmentStage));
      tmp_1.n3l(MaskShader$MaskModel$lambda$lambda$lambda_0($cfg, $this_fragmentStage));
      return Unit_getInstance();
    };
  }
  function MaskShader$MaskModel$lambda_0(this$0, $cfg) {
    return function ($this$fragmentStage) {
      $this$fragmentStage.i30(MaskShader$MaskModel$lambda$lambda_0(this$0, $cfg, $this$fragmentStage));
      return Unit_getInstance();
    };
  }
  function MaskShader_init_$Init$(cfg, model, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      model = new MaskModel(cfg);
    MaskShader.call($this, cfg, model);
    return $this;
  }
  function MaskShader_init_$Init$_0(block, $this) {
    var tmp$ret$0;
    {
      var tmp0_apply = new UnlitShaderConfig();
      {
      }
      block(tmp0_apply);
      tmp$ret$0 = tmp0_apply;
    }
    var tmp = tmp$ret$0;
    MaskShader_init_$Init$(tmp, null, 2, null, $this);
    return $this;
  }
  function MaskShader_init_$Create$(block) {
    return MaskShader_init_$Init$_0(block, Object.create(MaskShader.prototype));
  }
  function MaskModel(cfg) {
    KslProgram.call(this, 'Mask Shader');
    var tmp = this;
    tmp.j7q_1 = this.t31('uv', null, 2, null);
    this.j31(MaskShader$MaskModel$lambda(this, cfg));
    this.k31(MaskShader$MaskModel$lambda_0(this, cfg));
    var tmp0_safe_receiver = cfg.e30_1;
    if (tmp0_safe_receiver == null)
      null;
    else
      tmp0_safe_receiver(this);
  }
  MaskModel.$metadata$ = classMeta('MaskModel', undefined, undefined, undefined, undefined, KslProgram.prototype);
  function MaskShader(cfg, model) {
    KslUnlitShader.call(this, cfg, model);
    var tmp = this;
    tmp.a7l_1 = this.o2y('radius', null, 2, null);
  }
  MaskShader.prototype.b7l = function (_set____db54di) {
    return this.a7l_1.p2u(this, visibleRadius$factory(), _set____db54di);
  };
  MaskShader.prototype.k7q = function () {
    return this.a7l_1.o2u(this, visibleRadius$factory_0());
  };
  MaskShader.$metadata$ = classMeta('MaskShader', undefined, undefined, undefined, undefined, KslUnlitShader.prototype);
  function visibleRadius$factory() {
    return getPropertyCallableRef('visibleRadius', 1, KMutableProperty1, function (receiver) {
      return receiver.k7q();
    }, function (receiver, value) {
      return receiver.b7l(value);
    });
  }
  function visibleRadius$factory_0() {
    return getPropertyCallableRef('visibleRadius', 1, KMutableProperty1, function (receiver) {
      return receiver.k7q();
    }, function (receiver, value) {
      return receiver.b7l(value);
    });
  }
  function TileMapShaderConf() {
  }
  TileMapShaderConf.$metadata$ = classMeta('TileMapShaderConf');
  function TileMapShader$Program$lambda$lambda(this$0, $this_vertexStage, $uMvp) {
    return function ($this$main) {
      $this$main.h30(this$0.x7q_1.n37(), $this_vertexStage.i39(Companion_getInstance_7().q2z_1.x2s_1));
      $this$main.h30($this_vertexStage.d2s_1, times($uMvp.m2h(), $this$main.g30($this_vertexStage.f30(Companion_getInstance_7().n2z_1.x2s_1), 1.0)));
      return Unit_getInstance();
    };
  }
  function TileMapShader$Program$lambda(this$0) {
    return function ($this$vertexStage) {
      var uMvp = mvpMatrix(this$0);
      $this$vertexStage.i30(TileMapShader$Program$lambda$lambda(this$0, $this$vertexStage, uMvp));
      return Unit_getInstance();
    };
  }
  function TileMapShader$Program$lambda$lambda_0($tileSet, $fieldSize, this$0, $tileSize, $field, $tileSizeInTileMap, $this_fragmentStage) {
    return function ($this$main) {
      var tmp = $this$main.u3o($tileSet, null, 2, null);
      var tileSetSize = $this$main.o3n(tmp, null, 2, null);
      var inField = times_1($fieldSize, this$0.x7q_1.q36());
      var tilePos = $this$main.c3o(inField);
      var xyWithinTile = times_1(minus(inField, tilePos), toFloat2($tileSize));
      var tmp_0 = toInt2(tilePos);
      var tx = $this$main.q3o($field, tmp_0, null, 4, null);
      var tmp_1 = toInt1(times_2(get_r(tx), $this$main.d38(255.0)));
      var tileIndex = $this$main.m3n(tmp_1, null, 2, null);
      var tileXY = toInt2(div_1(times_1(xyWithinTile, toFloat2($tileSizeInTileMap)), toFloat2($tileSize)));
      var tmp_2 = $this$main.e3n(get_x(tileXY), get_y(tileXY), tileIndex);
      var tmp_3 = $this$main.q3o($tileSet, tmp_2, null, 4, null);
      $this_fragmentStage.r3p($this$main, tmp_3, 0, 2, null);
      return Unit_getInstance();
    };
  }
  function TileMapShader$Program$lambda_0(this$0) {
    return function ($this$fragmentStage) {
      var field = this$0.r31('tileMap');
      var tileSet = this$0.p3m('tiles');
      var time = this$0.l3m('time');
      var tileSize = this$0.o3m('tileSize');
      var tileSizeInTileMap = this$0.o3m('tileSizeInTileMap');
      var fieldSize = this$0.m3m('size');
      $this$fragmentStage.i30(TileMapShader$Program$lambda$lambda_0(tileSet, fieldSize, this$0, tileSize, field, tileSizeInTileMap, $this$fragmentStage));
      return Unit_getInstance();
    };
  }
  function TileMapShader_init_$Init$(conf, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      conf = new TileMapShaderConf();
    TileMapShader.call($this, conf);
    return $this;
  }
  function TileMapShader_init_$Create$(conf, $mask0, $marker) {
    return TileMapShader_init_$Init$(conf, $mask0, $marker, Object.create(TileMapShader.prototype));
  }
  function Program(conf) {
    KslProgram.call(this, 'tilemap');
    var tmp = this;
    tmp.x7q_1 = this.t31('uv', null, 2, null);
    this.j31(TileMapShader$Program$lambda(this));
    this.k31(TileMapShader$Program$lambda_0(this));
  }
  Program.$metadata$ = classMeta('Program', undefined, undefined, undefined, undefined, KslProgram.prototype);
  function TileMapShader(conf) {
    var tmp = new Program(conf);
    var tmp$ret$0;
    {
      var tmp0_apply = new PipelineConfig();
      {
      }
      {
        tmp0_apply.w2t_1 = BlendMode_BLEND_PREMULTIPLIED_ALPHA_getInstance();
        tmp0_apply.x2t_1 = CullMethod_NO_CULLING_getInstance();
        tmp0_apply.y2t_1 = DepthCompareOp_DISABLED_getInstance();
      }
      tmp$ret$0 = tmp0_apply;
    }
    KslShader.call(this, tmp, tmp$ret$0);
    var tmp_0 = this;
    tmp_0.i7r_1 = this.z2y('tiles', null, 2, null);
    var tmp_1 = this;
    tmp_1.j7r_1 = this.v2y('tileSize', null, 2, null);
    var tmp_2 = this;
    tmp_2.k7r_1 = this.v2y('tileSizeInTileMap', null, 2, null);
    var tmp_3 = this;
    tmp_3.l7r_1 = this.x2y('tileMap', null, 2, null);
    var tmp_4 = this;
    tmp_4.m7r_1 = this.q2y('size', null, 2, null);
    var tmp_5 = this;
    tmp_5.n7r_1 = this.o2y('time', null, 2, null);
  }
  TileMapShader.prototype.o7r = function (_set____db54di) {
    return this.i7r_1.s2w(this, tiles$factory(), _set____db54di);
  };
  TileMapShader.prototype.p7r = function () {
    return this.i7r_1.o2u(this, tiles$factory_0());
  };
  TileMapShader.prototype.q7r = function (_set____db54di) {
    this.j7r_1.m2v(this, tileSize$factory(), _set____db54di);
    return Unit_getInstance();
  };
  TileMapShader.prototype.s6l = function () {
    return this.j7r_1.o2u(this, tileSize$factory_0());
  };
  TileMapShader.prototype.r7r = function (_set____db54di) {
    this.k7r_1.m2v(this, tileSizeInTileMap$factory(), _set____db54di);
    return Unit_getInstance();
  };
  TileMapShader.prototype.s7r = function () {
    return this.k7r_1.o2u(this, tileSizeInTileMap$factory_0());
  };
  TileMapShader.prototype.t7r = function (_set____db54di) {
    return this.l7r_1.d2w(this, field$factory(), _set____db54di);
  };
  TileMapShader.prototype.u4f = function () {
    return this.l7r_1.o2u(this, field$factory_0());
  };
  TileMapShader.prototype.u7r = function (_set____db54di) {
    this.m7r_1.v2u(this, fieldSize$factory(), _set____db54di);
    return Unit_getInstance();
  };
  TileMapShader.prototype.v7r = function () {
    return this.m7r_1.o2u(this, fieldSize$factory_0());
  };
  TileMapShader.prototype.w7r = function (_set____db54di) {
    return this.n7r_1.p2u(this, time$factory(), _set____db54di);
  };
  TileMapShader.prototype.s52 = function () {
    return this.n7r_1.o2u(this, time$factory_0());
  };
  TileMapShader.$metadata$ = classMeta('TileMapShader', undefined, undefined, undefined, undefined, KslShader.prototype);
  function tiles$factory() {
    return getPropertyCallableRef('tiles', 1, KMutableProperty1, function (receiver) {
      return receiver.p7r();
    }, function (receiver, value) {
      return receiver.o7r(value);
    });
  }
  function tiles$factory_0() {
    return getPropertyCallableRef('tiles', 1, KMutableProperty1, function (receiver) {
      return receiver.p7r();
    }, function (receiver, value) {
      return receiver.o7r(value);
    });
  }
  function tileSize$factory() {
    return getPropertyCallableRef('tileSize', 1, KMutableProperty1, function (receiver) {
      return receiver.s6l();
    }, function (receiver, value) {
      return receiver.q7r(value);
    });
  }
  function tileSize$factory_0() {
    return getPropertyCallableRef('tileSize', 1, KMutableProperty1, function (receiver) {
      return receiver.s6l();
    }, function (receiver, value) {
      return receiver.q7r(value);
    });
  }
  function tileSizeInTileMap$factory() {
    return getPropertyCallableRef('tileSizeInTileMap', 1, KMutableProperty1, function (receiver) {
      return receiver.s7r();
    }, function (receiver, value) {
      return receiver.r7r(value);
    });
  }
  function tileSizeInTileMap$factory_0() {
    return getPropertyCallableRef('tileSizeInTileMap', 1, KMutableProperty1, function (receiver) {
      return receiver.s7r();
    }, function (receiver, value) {
      return receiver.r7r(value);
    });
  }
  function field$factory() {
    return getPropertyCallableRef('field', 1, KMutableProperty1, function (receiver) {
      return receiver.u4f();
    }, function (receiver, value) {
      return receiver.t7r(value);
    });
  }
  function field$factory_0() {
    return getPropertyCallableRef('field', 1, KMutableProperty1, function (receiver) {
      return receiver.u4f();
    }, function (receiver, value) {
      return receiver.t7r(value);
    });
  }
  function fieldSize$factory() {
    return getPropertyCallableRef('fieldSize', 1, KMutableProperty1, function (receiver) {
      return receiver.v7r();
    }, function (receiver, value) {
      return receiver.u7r(value);
    });
  }
  function fieldSize$factory_0() {
    return getPropertyCallableRef('fieldSize', 1, KMutableProperty1, function (receiver) {
      return receiver.v7r();
    }, function (receiver, value) {
      return receiver.u7r(value);
    });
  }
  function time$factory() {
    return getPropertyCallableRef('time', 1, KMutableProperty1, function (receiver) {
      return receiver.s52();
    }, function (receiver, value) {
      return receiver.w7r(value);
    });
  }
  function time$factory_0() {
    return getPropertyCallableRef('time', 1, KMutableProperty1, function (receiver) {
      return receiver.s52();
    }, function (receiver, value) {
      return receiver.w7r(value);
    });
  }
  function pop(_this__u8e3s4) {
    return removeLastOrNull(_this__u8e3s4);
  }
  function push(_this__u8e3s4, e) {
    _this__u8e3s4.b(e);
    return _this__u8e3s4.m() - 1 | 0;
  }
  function current(_this__u8e3s4) {
    return lastOrNull(_this__u8e3s4);
  }
  function StackedStateEdge(targetState, replace, weight) {
    this.j74_1 = targetState;
    this.k74_1 = replace;
    this.l74_1 = weight;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.m74_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = ArrayList_init_$Create$_0();
    }
    tmp_0.n74_1 = tmp$ret$1;
  }
  StackedStateEdge.prototype.m5o = function () {
    return this.l74_1;
  };
  StackedStateEdge.prototype.p74 = function (action) {
    return push(this.n74_1, action);
  };
  StackedStateEdge.prototype.o74 = function (guard) {
    return push(this.m74_1, guard);
  };
  StackedStateEdge.prototype.x7r = function (retrieveState) {
    {
      var tmp0_forEach = this.n74_1;
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          element(this);
        }
      }
    }
    return retrieveState(this.j74_1);
  };
  StackedStateEdge.prototype.y7r = function (event) {
    var tmp$ret$0;
    $l$block_0: {
      var tmp0_any = this.m74_1;
      var tmp;
      if (isInterface(tmp0_any, Collection)) {
        tmp = tmp0_any.q();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_any.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        var tmp$ret$1;
        {
          tmp$ret$1 = element(event);
        }
        if (tmp$ret$1) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    return tmp$ret$0;
  };
  StackedStateEdge.$metadata$ = classMeta('StackedStateEdge');
  function sam$kotlin_Comparator$0(function_0) {
    this.z7r_1 = function_0;
  }
  sam$kotlin_Comparator$0.prototype.y = function (a, b) {
    return this.z7r_1(a, b);
  };
  sam$kotlin_Comparator$0.prototype.compare = function (a, b) {
    return this.y(a, b);
  };
  sam$kotlin_Comparator$0.$metadata$ = classMeta('sam$kotlin_Comparator$0', [Comparator]);
  function StackedState$edge$lambda() {
    return function (a, b) {
      var tmp$ret$2;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = a.l74_1;
        }
        var tmp = tmp$ret$0;
        var tmp$ret$1;
        {
          tmp$ret$1 = b.l74_1;
        }
        tmp$ret$2 = compareValues(tmp, tmp$ret$1);
      }
      return tmp$ret$2;
    };
  }
  function StackedState(name) {
    this.b6t_1 = name;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.c6t_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = ArrayList_init_$Create$_0();
    }
    tmp_0.d6t_1 = tmp$ret$1;
    var tmp_1 = this;
    var tmp$ret$2;
    {
      tmp$ret$2 = ArrayList_init_$Create$_0();
    }
    tmp_1.e6t_1 = tmp$ret$2;
    var tmp_2 = this;
    var tmp$ret$3;
    {
      tmp$ret$3 = ArrayList_init_$Create$_0();
    }
    tmp_2.f6t_1 = tmp$ret$3;
  }
  StackedState.prototype.il = function () {
    return this.b6t_1;
  };
  StackedState.prototype.t6w = function (action) {
    return push(this.c6t_1, action);
  };
  StackedState.prototype.u6w = function (action) {
    return push(this.d6t_1, action);
  };
  StackedState.prototype.m76 = function (action) {
    return push(this.e6t_1, action);
  };
  StackedState.prototype.n76 = function () {
    return this.s76();
  };
  StackedState.prototype.o76 = function (previous) {
    return this.r76(previous);
  };
  StackedState.prototype.p76 = function (targetState, replace, weight, init) {
    var edge = new StackedStateEdge(targetState, replace, weight);
    init(edge);
    this.f6t_1.b(edge);
    {
      var tmp0_sortBy = this.f6t_1;
      if (tmp0_sortBy.m() > 1) {
        var tmp$ret$0;
        {
          var tmp = StackedState$edge$lambda();
          tmp$ret$0 = new sam$kotlin_Comparator$0(tmp);
        }
        sortWith(tmp0_sortBy, tmp$ret$0);
      }
    }
  };
  StackedState.prototype.v6w = function (targetState, replace, weight, init, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      replace = true;
    if (!(($mask0 & 4) === 0))
      weight = 0;
    return this.p76(targetState, replace, weight, init);
  };
  StackedState.prototype.q76 = function (event) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_firstOrNull = this.f6t_1;
      var tmp0_iterator = tmp0_firstOrNull.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        var tmp$ret$0;
        {
          tmp$ret$0 = element.y7r(event);
        }
        if (tmp$ret$0) {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      tmp$ret$1 = null;
    }
    return tmp$ret$1;
  };
  StackedState.prototype.r76 = function (previous) {
    var tmp0_forEach = this.c6t_1;
    var tmp0_iterator = tmp0_forEach.h();
    while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      {
        element(this);
      }
    }
    return Unit_getInstance();
  };
  StackedState.prototype.s76 = function () {
    var tmp0_forEach = reversed(this.d6t_1);
    var tmp0_iterator = tmp0_forEach.h();
    while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      {
        element(this);
      }
    }
    return Unit_getInstance();
  };
  StackedState.prototype.t76 = function (event) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_firstNotNullOfOrNull = this.e6t_1;
      var tmp0_iterator = tmp0_firstNotNullOfOrNull.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        var tmp$ret$0;
        {
          tmp$ret$0 = element(event);
        }
        var result = tmp$ret$0;
        if (!(result == null)) {
          tmp$ret$1 = result;
          break $l$block;
        }
      }
      tmp$ret$1 = null;
    }
    return tmp$ret$1;
  };
  StackedState.$metadata$ = classMeta('StackedState');
  function StackedStateMachine$update$lambda(this$0) {
    return function (it) {
      return this$0.h7b(it);
    };
  }
  function StackedStateMachine(initialState) {
    this.y6u_1 = initialState;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.z6u_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = ArrayList_init_$Create$_0();
    }
    tmp_0.a6v_1 = tmp$ret$1;
    var tmp_1 = this;
    var tmp$ret$2;
    {
      tmp$ret$2 = LinkedHashMap_init_$Create$_0();
    }
    tmp_1.b6v_1 = tmp$ret$2;
  }
  StackedStateMachine.prototype.e7a = function () {
    return ensureNotNull(current(this.z6u_1));
  };
  StackedStateMachine.prototype.j7b = function () {
    return ensureNotNull(this.b6v_1.b3(ensureNotNull(current(this.z6u_1))));
  };
  StackedStateMachine.prototype.k78 = function (state) {
    {
      var tmp0_set = this.b6v_1;
      var tmp1_set = state.b6t_1;
      tmp0_set.a(tmp1_set, state);
    }
  };
  StackedStateMachine.prototype.w6w = function (name, init) {
    var state = new StackedState(name);
    init(state);
    this.k78(state);
  };
  StackedStateMachine.prototype.h7b = function (name) {
    var tmp0_elvis_lhs = this.b6v_1.b3(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw NoSuchElementException_init_$Create$(toString_1(name));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  StackedStateMachine.prototype.a7s = function (event, safe) {
    if (this.b7s())
      return Unit_getInstance();
    var edge = this.j7b().q76(event);
    var tmp;
    if (edge instanceof StackedStateEdge) {
      tmp = !equals(edge.j74_1, this.e7a());
    } else {
      tmp = false;
    }
    if (tmp) {
      if (safe ? !this.b6v_1.c3().p(edge.j74_1) : false) {
        println('finish by unknown edge: ' + edge.j74_1);
        this.c7s();
        return Unit_getInstance();
      }
      var tmp_0 = edge;
      var newState = tmp_0.x7r(StackedStateMachine$update$lambda(this));
      this.d7s(newState, edge.k74_1);
    }
    var tmp0_safe_receiver = this.j7b().t76(event);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$2;
      {
        {
        }
        var tmp$ret$1;
        {
          var tmp0_safe_receiver_0 = (tmp0_safe_receiver == null ? true : isObject(tmp0_safe_receiver)) ? tmp0_safe_receiver : null;
          var tmp_1;
          if (tmp0_safe_receiver_0 == null) {
            tmp_1 = null;
          } else {
            var tmp$ret$0;
            {
              {
              }
              var tmp_2;
              if (!equals(tmp0_safe_receiver_0, Unit_getInstance()) ? !equals(tmp0_safe_receiver_0, this.e7a()) : false) {
                tmp_2 = this.d7s(this.h7b(tmp0_safe_receiver_0), true);
              }
              tmp$ret$0 = tmp_2;
            }
            tmp_1 = Unit_getInstance();
          }
          tmp$ret$1 = tmp_1;
        }
        tmp$ret$2 = tmp$ret$1;
      }
    }
  };
  StackedStateMachine.prototype.z78 = function (event, safe, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      safe = false;
    return this.a7s(event, safe);
  };
  StackedStateMachine.prototype.l7a = function (stateName) {
    this.d7s(this.h7b(stateName), true);
  };
  StackedStateMachine.prototype.d7s = function (newState, replace) {
    var tmp;
    if (replace) {
      var tmp0_safe_receiver = pop(this.z6u_1);
      var tmp_0;
      if (tmp0_safe_receiver == null) {
        tmp_0 = null;
      } else {
        var tmp$ret$1;
        {
          {
          }
          var tmp$ret$0;
          {
            this.h7b(tmp0_safe_receiver).s76();
            tmp$ret$0 = tmp0_safe_receiver;
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp_0 = tmp$ret$1;
      }
      tmp = tmp_0;
    } else {
      var tmp1_safe_receiver = current(this.z6u_1);
      var tmp_1;
      if (tmp1_safe_receiver == null) {
        tmp_1 = null;
      } else {
        var tmp$ret$3;
        {
          {
          }
          var tmp$ret$2;
          {
            this.h7b(tmp1_safe_receiver).n76();
            tmp$ret$2 = tmp1_safe_receiver;
          }
          tmp$ret$3 = tmp$ret$2;
        }
        tmp_1 = tmp$ret$3;
      }
      tmp = tmp_1;
    }
    var tmp2_elvis_lhs = tmp;
    var prev = tmp2_elvis_lhs == null ? this.y6u_1 : tmp2_elvis_lhs;
    push(this.z6u_1, newState.b6t_1);
    newState.r76(prev);
    {
      var tmp0_forEach = this.a6v_1;
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          element(newState);
        }
      }
    }
  };
  StackedStateMachine.prototype.e7s = function (newState, replace, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      replace = false;
    return this.d7s(newState, replace);
  };
  StackedStateMachine.prototype.c7s = function () {
    $l$loop: while (true) {
      var tmp$ret$0;
      {
        var tmp0_isNotEmpty = this.z6u_1;
        tmp$ret$0 = !tmp0_isNotEmpty.q();
      }
      if (!tmp$ret$0) {
        break $l$loop;
      }
      var tmp$ret$3;
      {
        var tmp0_safe_receiver = pop(this.z6u_1);
        var tmp;
        if (tmp0_safe_receiver == null) {
          tmp = null;
        } else {
          var tmp$ret$2;
          {
            {
            }
            var tmp$ret$1;
            {
              tmp$ret$1 = this.h7b(tmp0_safe_receiver);
            }
            tmp$ret$2 = tmp$ret$1;
          }
          tmp = tmp$ret$2;
        }
        var tmp1_also = tmp;
        {
        }
        {
          var tmp0_safe_receiver_0 = tmp1_also;
          if (tmp0_safe_receiver_0 == null)
            null;
          else {
            tmp0_safe_receiver_0.s76();
          }
        }
        tmp$ret$3 = tmp1_also;
      }
    }
  };
  StackedStateMachine.prototype.b7s = function () {
    return this.z6u_1.q();
  };
  StackedStateMachine.prototype.c6v = function () {
    var tmp$ret$2;
    {
      var tmp0_safe_receiver = pop(this.z6u_1);
      var tmp;
      if (tmp0_safe_receiver == null) {
        tmp = null;
      } else {
        var tmp$ret$1;
        {
          {
          }
          var tmp$ret$0;
          {
            tmp$ret$0 = this.h7b(tmp0_safe_receiver);
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp = tmp$ret$1;
      }
      var tmp0_also = tmp;
      {
      }
      {
        var tmp0_safe_receiver_0 = tmp0_also;
        if (tmp0_safe_receiver_0 == null)
          null;
        else {
          tmp0_safe_receiver_0.s76();
        }
      }
      tmp$ret$2 = tmp0_also;
    }
    var old = tmp$ret$2;
    if (this.z6u_1.q()) {
      this.z6u_1.b(this.y6u_1);
    }
    var tmp_0 = this.j7b();
    var tmp1_safe_receiver = old;
    var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.b6t_1;
    tmp_0.o76(tmp2_elvis_lhs == null ? this.y6u_1 : tmp2_elvis_lhs);
    var tmp3_safe_receiver = old;
    if (!equals(tmp3_safe_receiver == null ? null : tmp3_safe_receiver.b6t_1, this.e7a())) {
      var tmp1_forEach = this.a6v_1;
      var tmp0_iterator = tmp1_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          element(ensureNotNull(this.j7b()));
        }
      }
    }
    return this.e7a();
  };
  StackedStateMachine.prototype.j7a = function (force) {
    if (force) {
      this.z6u_1.t7();
      this.z6u_1.b(this.y6u_1);
      {
        var tmp0_forEach = this.a6v_1;
        var tmp0_iterator = tmp0_forEach.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          {
            element(this.j7b());
          }
        }
      }
    } else {
      this.z6u_1.t7();
      var tmp = this.h7b(this.y6u_1);
      this.e7s(tmp, false, 2, null);
    }
  };
  StackedStateMachine.prototype.a79 = function (force, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      force = true;
    return this.j7a(force);
  };
  StackedStateMachine.$metadata$ = classMeta('StackedStateMachine');
  function buildStateMachine(initialState, init) {
    var machine = new StackedStateMachine(initialState);
    init(machine);
    return machine;
  }
  function get_b(_this__u8e3s4) {
    return toByte(_this__u8e3s4);
  }
  function EnumDelegate(settings, key, defaultValue, convert) {
    this.a6u_1 = settings;
    this.b6u_1 = key;
    this.c6u_1 = defaultValue;
    this.d6u_1 = convert;
  }
  EnumDelegate.prototype.o2u = function (thisRef, property) {
    var tmp0_elvis_lhs = this.b6u_1;
    var lookupKey = tmp0_elvis_lhs == null ? property.callableName : tmp0_elvis_lhs;
    var tmp;
    var tmp$ret$0;
    {
      var tmp0_contains = this.a6u_1;
      tmp$ret$0 = tmp0_contains.w67(lookupKey);
    }
    if (tmp$ret$0) {
      tmp = this.d6u_1(this.a6u_1.z67(lookupKey, null, 2, null));
    } else {
      tmp = this.c6u_1;
    }
    return tmp;
  };
  EnumDelegate.prototype.r8 = function (thisRef, property) {
    return this.o2u((thisRef == null ? true : isObject(thisRef)) ? thisRef : THROW_CCE(), property);
  };
  EnumDelegate.prototype.e6u = function (thisRef, property, value) {
    var tmp0_elvis_lhs = this.b6u_1;
    var lookupKey = tmp0_elvis_lhs == null ? property.callableName : tmp0_elvis_lhs;
    this.a6u_1.x67(lookupKey, value.w1_1);
  };
  EnumDelegate.prototype.s8 = function (thisRef, property, value) {
    var tmp = (thisRef == null ? true : isObject(thisRef)) ? thisRef : THROW_CCE();
    return this.e6u(tmp, property, value instanceof Enum ? value : THROW_CCE());
  };
  EnumDelegate.$metadata$ = classMeta('EnumDelegate', [ReadWriteProperty]);
  function choice(_this__u8e3s4, choices) {
    var total = sum(choices);
    var r = _this__u8e3s4.s(total);
    var choice = 0;
    while (r > 0) {
      r = r - choices.r(choice) | 0;
      if (r <= 0)
        return choice;
      var tmp0 = choice;
      choice = tmp0 + 1 | 0;
    }
    return choice;
  }
  function component1(_this__u8e3s4) {
    return _this__u8e3s4.e23();
  }
  function component2(_this__u8e3s4) {
    return _this__u8e3s4.g23();
  }
  function plus_0(_this__u8e3s4, o) {
    return new Vec2i(_this__u8e3s4.e23() + o.e23() | 0, _this__u8e3s4.g23() + o.g23() | 0);
  }
  function ActorView$lambda(this$0) {
    return function (it) {
      var tmp0_safe_receiver = this$0.k7t_1.a5o();
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$2;
        {
          {
          }
          this$0.r2w(this$0.l7t_1.p70_1.b3s_1);
          var tmp0_safe_receiver_0 = this$0.m7t_1.a6l_1.b3(this$0.k7t_1.g73_1.t72_1);
          if (tmp0_safe_receiver_0 == null)
            null;
          else {
            var tmp$ret$1;
            {
              {
              }
              if (this$0.k7t_1.i73_1 === 0)
                this$0.k7t_1.i73_1 = tmp0_safe_receiver_0.m();
              var tmp$ret$0;
              {
                var tmp0_mod = this$0.k7t_1.h73_1;
                var tmp1_mod = tmp0_safe_receiver_0.m();
                var r = tmp0_mod % tmp1_mod | 0;
                tmp$ret$0 = r + (tmp1_mod & ((r ^ tmp1_mod) & (r | (-r | 0))) >> 31) | 0;
              }
              tmp$ret$1 = this$0.t7u(tmp0_safe_receiver_0.r(tmp$ret$0));
            }
          }
          this$0.l2g();
          this$0.l2d(this$0.k7t_1.e23() - tmp0_safe_receiver.t73_1 / 2.0 + 0.5, (tmp0_safe_receiver.u73_1 - this$0.k7t_1.g23() | 0) - 0.5, 0.0);
          this$0.l2d(this$0.k7t_1.t74() / this$0.n7t_1.e23(), -this$0.k7t_1.s77() / this$0.n7t_1.g23(), 0.0);
          tmp$ret$2 = Unit_getInstance();
        }
      }
      return Unit_getInstance();
    };
  }
  function ActorView(actor, atlas, animations, tileSize) {
    var tmp = atlas.p70_1.b3s_1;
    var tmp_0 = atlas.u70();
    Sprite3d_init_$Init$(tileSize, tmp, tmp_0, null, false, 24, null, this);
    this.k7t_1 = actor;
    this.l7t_1 = atlas;
    this.m7t_1 = animations;
    this.n7t_1 = tileSize;
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.n4k();
      tmp0_plusAssign.b(ActorView$lambda(this));
    }
  }
  ActorView.$metadata$ = classMeta('ActorView', undefined, undefined, undefined, undefined, Sprite3d.prototype);
  function minus_0(_this__u8e3s4, position) {
    return new Vec3f(_this__u8e3s4.e23() - position.e23(), _this__u8e3s4.g23() - position.g23(), _this__u8e3s4.w2g() - position.w2g());
  }
  function InterpolatedVec3f(from, to) {
    InterpolatedValue.call(this, from);
    this.z7u_1 = from;
    this.a7v_1 = to;
  }
  InterpolatedVec3f.prototype.v5f = function (interpolationPos) {
    var x = new InterpolatedFloat(this.z7u_1.e23(), this.a7v_1.e23());
    var y = new InterpolatedFloat(this.z7u_1.g23(), this.a7v_1.g23());
    var z = new InterpolatedFloat(this.z7u_1.w2g(), this.a7v_1.w2g());
    x.u5f(interpolationPos);
    y.u5f(interpolationPos);
    z.u5f(interpolationPos);
    this.z7u_1.x2g(x.n2(), y.n2(), z.n2());
  };
  InterpolatedVec3f.$metadata$ = classMeta('InterpolatedVec3f', undefined, undefined, undefined, undefined, InterpolatedValue.prototype);
  function CameraController_init_$Init$(cameraToControl, name, ctx, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      name = 'camcontrol';
    CameraController.call($this, cameraToControl, name, ctx);
    return $this;
  }
  function CameraController_init_$Create$(cameraToControl, name, ctx, $mask0, $marker) {
    return CameraController_init_$Init$(cameraToControl, name, ctx, $mask0, $marker, Object.create(CameraController.prototype));
  }
  function calculateCamera($this, boundNode, followNode) {
    var tmp$ret$2;
    {
      var tmp0_with = $this.s7m_1;
      {
      }
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_apply = new BoundingBox();
          {
          }
          {
            tmp0_apply.v2k(new Vec3f(-get_width(tmp0_with) / 4, -get_height(tmp0_with) / 4, 0.0));
            tmp0_apply.v2k(new Vec3f(get_width(tmp0_with) / 4, get_height(tmp0_with) / 4, 0.0));
          }
          tmp$ret$0 = tmp0_apply;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    var deadZone = tmp$ret$2;
    var tmp$ret$5;
    {
      var tmp1_with = $this.s7m_1;
      {
      }
      var tmp$ret$4;
      {
        var scaledMin = MutableVec3f_init_$Create$(boundNode.j4k().q2m_1);
        var scaledMax = MutableVec3f_init_$Create$(boundNode.j4k().r2m_1);
        boundNode.z4p_1.y2g(scaledMin, 0.0, 2, null);
        boundNode.z4p_1.y2g(scaledMax, 0.0, 2, null);
        var tmp$ret$3;
        {
          var tmp0_apply_0 = new BoundingBox();
          {
          }
          {
            tmp0_apply_0.v2k(new Vec3f(scaledMin.e23() + get_width(tmp1_with) / 2.0, 0.0, 0.0));
            tmp0_apply_0.v2k(new Vec3f(scaledMax.e23() - get_width(tmp1_with) / 2.0, scaledMax.g23() - get_height(tmp1_with), 0.0));
          }
          tmp$ret$3 = tmp0_apply_0;
        }
        tmp$ret$4 = tmp$ret$3;
      }
      tmp$ret$5 = tmp$ret$4;
    }
    var borderZone = tmp$ret$5;
    return CameraController$calculateCamera$lambda(followNode, $this, deadZone, borderZone);
  }
  function cameraCalculator($this, game, boundNode, followNode) {
    var calculator = calculateCamera($this, boundNode, followNode);
    return CameraController$cameraCalculator$lambda(game, calculator, $this);
  }
  function CameraController$calculateCamera$lambda($followNode, this$0, $deadZone, $borderZone) {
    return function () {
      var resultPos = MutableVec3f_init_$Create$($followNode.o4k());
      var tmp$ret$1;
      {
        var tmp0_with = this$0.s7m_1;
        {
        }
        var tmp$ret$0;
        {
          resultPos.x2k(new Vec3f(0.0, get_height(tmp0_with) / 2.0, 0.0));
          var diff = minus_0(resultPos, tmp0_with.g5c());
          if (diff.e23() > $deadZone.r2m_1.e23()) {
            resultPos.x2i(tmp0_with.b5c().e23() + diff.e23() - $deadZone.r2m_1.e23());
          } else if (diff.e23() < $deadZone.q2m_1.e23()) {
            resultPos.x2i(tmp0_with.b5c().e23() - ($deadZone.q2m_1.e23() - diff.e23()));
          } else {
            resultPos.x2i(tmp0_with.b5c().e23());
          }
          if (diff.g23() > $deadZone.r2m_1.g23()) {
            resultPos.y2i(tmp0_with.b5c().g23() + diff.g23() - $deadZone.r2m_1.g23());
          } else if (diff.g23() < $deadZone.q2m_1.g23()) {
            resultPos.y2i(tmp0_with.b5c().g23() - ($deadZone.q2m_1.g23() - diff.g23()));
          } else {
            resultPos.y2i(tmp0_with.b5c().g23());
          }
          $borderZone.a2n(resultPos);
          tmp$ret$0 = resultPos;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      return tmp$ret$1;
    };
  }
  function CameraController$cameraUpdater$lambda(this$0) {
    return function (_anonymous_parameter_0__qggqh8, _anonymous_parameter_1__qggqgd) {
      var tmp$ret$1;
      {
        var tmp0_with = this$0.s7m_1;
        {
        }
        var tmp$ret$0;
        {
          tmp0_with.qr().s2k(this$0.v7m_1.n5g(this$0.t7m_1));
          tmp$ret$0 = tmp0_with.f5c().x2g(tmp0_with.qr().e23(), tmp0_with.qr().g23(), 0.0);
        }
        tmp$ret$1 = tmp$ret$0;
      }
      return Unit_getInstance();
    };
  }
  function CameraController$cameraCalculator$lambda($game, $calculator, this$0) {
    return function (ev) {
      var tmp;
      if ($game.d7a()) {
        var pos = $calculator();
        this$0.u7m_1.a7v_1.x2g(pos.e23(), pos.g23(), 10.0);
        this$0.u7m_1.z7u_1.s2k(this$0.u7m_1.n2());
        this$0.v7m_1.h5g(1.0);
        tmp = this$0.v7m_1.l5g(0.0);
      }
      return Unit_getInstance();
    };
  }
  function CameraController(cameraToControl, name, ctx) {
    Node.call(this, name);
    this.s7m_1 = cameraToControl;
    this.t7m_1 = ctx;
    this.u7m_1 = new InterpolatedVec3f(MutableVec3f_init_$Create$(this.s7m_1.qr()), MutableVec3f_init_$Create$(this.s7m_1.qr()));
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_apply = new InverseSquareAnimator(this.u7m_1);
      {
      }
      {
        tmp0_apply.g5g(1.0 / 4.0);
        tmp0_apply.j5g(Companion_getInstance_1().w5f_1);
        tmp0_apply.l5g(0.0);
        tmp0_apply.h5g(1.0);
      }
      tmp$ret$0 = tmp0_apply;
    }
    tmp.v7m_1 = tmp$ret$0;
    this.w7m_1 = null;
    var tmp_0 = this;
    tmp_0.x7m_1 = CameraController$cameraUpdater$lambda(this);
  }
  CameraController.prototype.r52 = function () {
    return this.t7m_1;
  };
  CameraController.prototype.y7m = function (game, boundNode, followNode) {
    this.w7m_1 = cameraCalculator(this, game, boundNode, followNode);
    var tmp0_safe_receiver = this.w7m_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        var tmp0_this = this;
        var tmp0_plusAssign = tmp0_this.n4k();
        tmp0_plusAssign.b(tmp0_safe_receiver);
        tmp$ret$0 = Unit_getInstance();
      }
    }
    var tmp1_this = game;
    {
      var tmp0_plusAssign_0 = tmp1_this.v6p_1;
      var tmp1_plusAssign = this.x7m_1;
      tmp0_plusAssign_0.b(tmp1_plusAssign);
    }
  };
  CameraController.prototype.z7m = function (game) {
    var tmp0_safe_receiver = this.w7m_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        var tmp0_this = this;
        var tmp0_minusAssign = tmp0_this.n4k();
        tmp0_minusAssign.c4(tmp0_safe_receiver);
        tmp$ret$0 = Unit_getInstance();
      }
    }
    var tmp1_this = game;
    {
      var tmp0_minusAssign_0 = tmp1_this.v6p_1;
      var tmp1_minusAssign = this.x7m_1;
      tmp0_minusAssign_0.c4(tmp1_minusAssign);
    }
  };
  CameraController.$metadata$ = classMeta('CameraController', undefined, undefined, undefined, undefined, Node.prototype);
  function GameControls$lambda($element) {
    return function (ev) {
      return ($element.d7v_1.k6y_1 ^ ev.l26_1) === 0;
    };
  }
  function GameControls$lambda_0($element, this$0) {
    return function (ev) {
      if (ev.q26())
        $element.f7v_1(this$0.v7v_1, ev);
      else if (ev.p26())
        $element.e7v_1(this$0.v7v_1, ev);
      return Unit_getInstance();
    };
  }
  function GameControls(game, inputManager) {
    Node_init_$Init$(null, 1, null, this);
    this.v7v_1 = game;
    this.w7v_1 = inputManager;
    {
      var tmp0_forEach = values_4();
      var indexedObject = tmp0_forEach;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var element = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        {
          var tmp = element.il();
          var tmp_0 = GameControls$lambda(element);
          this.w7v_1.y2a(element.d7v_1.j6y_1, tmp, tmp_0, GameControls$lambda_0(element, this));
        }
      }
    }
  }
  GameControls.prototype.l78 = function () {
    return this.v7v_1;
  };
  GameControls.prototype.x7v = function () {
    return this.w7v_1;
  };
  GameControls.$metadata$ = classMeta('GameControls', undefined, undefined, undefined, undefined, Node.prototype);
  function GameAction_init_$Init$(name, ordinal, keyCode, onPress, onRelease, $mask0, $marker, $this) {
    if (!(($mask0 & 8) === 0)) {
      onPress = GameAction$_init_$lambda_ma369v();
    }
    if (!(($mask0 & 16) === 0)) {
      onRelease = GameAction$_init_$lambda_ma369v_0();
    }
    GameAction.call($this, name, ordinal, keyCode, onPress, onRelease);
    return $this;
  }
  function GameAction_init_$Create$(name, ordinal, keyCode, onPress, onRelease, $mask0, $marker) {
    return GameAction_init_$Init$(name, ordinal, keyCode, onPress, onRelease, $mask0, $marker, Object.create(GameAction.prototype));
  }
  var GameAction_BACK_instance;
  var GameAction_RESPAWN_instance;
  var GameAction_GAMEOVER_instance;
  var GameAction_FINISH_instance;
  var GameAction_ANIMS_instance;
  var GameAction_PREV_instance;
  var GameAction_NEXT_instance;
  function values_4() {
    return [GameAction_BACK_getInstance(), GameAction_RESPAWN_getInstance(), GameAction_GAMEOVER_getInstance(), GameAction_FINISH_getInstance(), GameAction_ANIMS_getInstance(), GameAction_PREV_getInstance(), GameAction_NEXT_getInstance()];
  }
  function GameAction$_init_$lambda_ma369v() {
    return function ($this$null, it) {
      return Unit_getInstance();
    };
  }
  function GameAction$_init_$lambda_ma369v_0() {
    return function ($this$null, it) {
      return Unit_getInstance();
    };
  }
  function GameAction$lambda() {
    return function ($this$null, it) {
      return Unit_getInstance();
    };
  }
  function GameAction$lambda_0() {
    return function ($this$null, it) {
      $this$null.k7a();
      return Unit_getInstance();
    };
  }
  function GameAction$lambda_1() {
    return function ($this$null, it) {
      $this$null.p7a();
      return Unit_getInstance();
    };
  }
  function GameAction$lambda_2() {
    return function ($this$null, it) {
      $this$null.m7a();
      return Unit_getInstance();
    };
  }
  function GameAction$lambda_3() {
    return function ($this$null, it) {
      $this$null.n6p_1.m1e(!$this$null.n6p_1.b3s_1);
      return Unit_getInstance();
    };
  }
  function GameAction$lambda_4() {
    return function ($this$null, it) {
      $this$null.n7a();
      return Unit_getInstance();
    };
  }
  function GameAction$lambda_5() {
    return function ($this$null, it) {
      println('pressed');
      $this$null.o7a();
      return Unit_getInstance();
    };
  }
  var GameAction_entriesInitialized;
  function GameAction_initEntries() {
    if (GameAction_entriesInitialized)
      return Unit_getInstance();
    GameAction_entriesInitialized = true;
    var tmp = toInputSpec(Companion_getInstance().r29_1, new Int32Array([]));
    GameAction_BACK_instance = GameAction_init_$Create$('BACK', 0, tmp, null, GameAction$lambda(), 8, null);
    var tmp_0 = _Char___init__impl__6a9atx(97);
    Companion_getInstance();
    var tmp_1 = toInputSpec_0(tmp_0, new Int32Array([2]));
    GameAction_RESPAWN_instance = GameAction_init_$Create$('RESPAWN', 1, tmp_1, null, GameAction$lambda_0(), 8, null);
    var tmp_2 = _Char___init__impl__6a9atx(102);
    Companion_getInstance();
    var tmp_3 = toInputSpec_0(tmp_2, new Int32Array([2]));
    GameAction_GAMEOVER_instance = GameAction_init_$Create$('GAMEOVER', 2, tmp_3, null, GameAction$lambda_1(), 8, null);
    var tmp_4 = _Char___init__impl__6a9atx(115);
    Companion_getInstance();
    var tmp_5 = toInputSpec_0(tmp_4, new Int32Array([2]));
    GameAction_FINISH_instance = GameAction_init_$Create$('FINISH', 3, tmp_5, null, GameAction$lambda_2(), 8, null);
    var tmp_6 = _Char___init__impl__6a9atx(110);
    Companion_getInstance();
    var tmp_7 = toInputSpec_0(tmp_6, new Int32Array([2]));
    GameAction_ANIMS_instance = GameAction_init_$Create$('ANIMS', 4, tmp_7, null, GameAction$lambda_3(), 8, null);
    var tmp_8 = _Char___init__impl__6a9atx(44);
    Companion_getInstance();
    var tmp_9 = toInputSpec_0(tmp_8, new Int32Array([2]));
    GameAction_PREV_instance = GameAction_init_$Create$('PREV', 5, tmp_9, null, GameAction$lambda_4(), 8, null);
    var tmp_10 = _Char___init__impl__6a9atx(46);
    Companion_getInstance();
    var tmp_11 = toInputSpec_0(tmp_10, new Int32Array([2]));
    GameAction_NEXT_instance = GameAction_init_$Create$('NEXT', 6, tmp_11, null, GameAction$lambda_5(), 8, null);
  }
  function GameAction(name, ordinal, keyCode, onPress, onRelease) {
    Enum.call(this, name, ordinal);
    this.d7v_1 = keyCode;
    this.e7v_1 = onPress;
    this.f7v_1 = onRelease;
  }
  GameAction.prototype.q6w = function () {
    return this.d7v_1;
  };
  GameAction.prototype.r6w = function () {
    return this.e7v_1;
  };
  GameAction.prototype.s6w = function () {
    return this.f7v_1;
  };
  GameAction.$metadata$ = classMeta('GameAction', undefined, undefined, undefined, undefined, Enum.prototype);
  function GameAction_BACK_getInstance() {
    GameAction_initEntries();
    return GameAction_BACK_instance;
  }
  function GameAction_RESPAWN_getInstance() {
    GameAction_initEntries();
    return GameAction_RESPAWN_instance;
  }
  function GameAction_GAMEOVER_getInstance() {
    GameAction_initEntries();
    return GameAction_GAMEOVER_instance;
  }
  function GameAction_FINISH_getInstance() {
    GameAction_initEntries();
    return GameAction_FINISH_instance;
  }
  function GameAction_ANIMS_getInstance() {
    GameAction_initEntries();
    return GameAction_ANIMS_instance;
  }
  function GameAction_PREV_getInstance() {
    GameAction_initEntries();
    return GameAction_PREV_instance;
  }
  function GameAction_NEXT_getInstance() {
    GameAction_initEntries();
    return GameAction_NEXT_instance;
  }
  function LevelView$runnerView$delegate$lambda($game, $runnerAtlas, $runnerAnims, $conf) {
    return function () {
      return new ActorView($game.j6p_1, $runnerAtlas, $runnerAnims, $conf.q6l_1);
    };
  }
  function LevelView$lambda($level) {
    return function ($this$generate) {
      var props = new RectProps();
      {
        props.b4u_1.c2j($level.t73_1, $level.u73_1);
        props.a4u_1.x2g(-props.u3z() / 2.0, 0.0, 0.0);
      }
      $this$generate.h4u(props);
      return Unit_getInstance();
    };
  }
  function LevelView$lambda_0(this$0, $level, $tilesAtlas, $conf) {
    return function (it) {
      this$0.f7j_1.w7r(it.s52());
      var tmp;
      if ($level.e74_1) {
        var tmp$ret$1;
        {
          var tmp0_with = this$0.f7j_1;
          {
          }
          var tmp_0 = get_simpleValueTextureProps();
          var tmp_1 = $level.a7d();
          tmp0_with.t7r(Texture2d_init_$Create$_0(tmp_0, tmp_1, null, 4, null));
          tmp0_with.u7r(new Vec2f($level.t73_1, $level.u73_1));
          var tmp0_safe_receiver = $tilesAtlas.p70_1.b3s_1;
          if (tmp0_safe_receiver == null)
            null;
          else {
            var tmp$ret$0;
            {
              {
              }
              tmp$ret$0 = tmp0_with.o7r(tmp0_safe_receiver);
            }
          }
          tmp0_with.r7r($tilesAtlas.u70());
          tmp$ret$1 = tmp0_with.q7r($conf.q6l_1);
        }
        $level.e74_1 = this$0.f7j_1.s7r().e23() === 0;
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function LevelView(game, level, conf, tilesAtlas, runnerAtlas, runnerAnims, guardAtlas, guardAnims) {
    Group_init_$Init$(null, 1, null, this);
    this.f7j_1 = new TileMapShader(new TileMapShaderConf());
    var tmp = this;
    tmp.g7j_1 = lazy(LevelView$runnerView$delegate$lambda(game, runnerAtlas, runnerAnims, conf));
    this.h7j_1 = imul(conf.q6l_1.e23(), level.t73_1);
    this.i7j_1 = imul(conf.q6l_1.g23(), level.u73_1);
    this.t2h(conf.q6l_1.e23(), conf.q6l_1.g23(), 1.0);
    this.l2d(0.0, 1.0, 0.0);
    var tmp$ret$1;
    {
      var tmp0_mesh = listOf([Companion_getInstance_7().n2z_1, Companion_getInstance_7().q2z_1]);
      var mesh = new Mesh(new IndexedVertexList(tmp0_mesh), null);
      {
        mesh.d4k(LevelView$lambda(level));
        var tmp$ret$0;
        {
          var tmp0_apply = this.f7j_1;
          {
          }
          {
            tmp0_apply.q7r(conf.q6l_1);
            tmp0_apply.r7r(tilesAtlas.u70());
          }
          tmp$ret$0 = tmp0_apply;
        }
        mesh.e4k(tmp$ret$0);
        var tmp0_this = mesh;
        {
          var tmp1_plusAssign = tmp0_this.n4k();
          tmp1_plusAssign.b(LevelView$lambda_0(this, level, tilesAtlas, conf));
        }
      }
      tmp$ret$1 = mesh;
    }
    this.p4q(tmp$ret$1);
    this.p4q(this.j7j());
    {
      var tmp1_forEach = game.k6p_1;
      var tmp0_iterator = tmp1_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          this.p4q(new ActorView(element, guardAtlas, guardAnims, conf.q6l_1));
        }
      }
    }
    println('level px=' + this.h7j_1 + 'x' + this.i7j_1);
  }
  LevelView.prototype.j7j = function () {
    var tmp$ret$0;
    {
      var tmp0_getValue = runnerView$factory();
      tmp$ret$0 = this.g7j_1.n2();
    }
    return tmp$ret$0;
  };
  LevelView.$metadata$ = classMeta('LevelView', undefined, undefined, undefined, undefined, Group.prototype);
  function runnerView$factory() {
    return getPropertyCallableRef('runnerView', 1, KProperty1, function (receiver) {
      return receiver.j7j();
    }, null);
  }
  var RunnerAction_RIGHT_instance;
  var RunnerAction_LEFT_instance;
  var RunnerAction_UP_instance;
  var RunnerAction_DOWN_instance;
  var RunnerAction_STOP_instance;
  var RunnerAction_DIG_LEFT_instance;
  var RunnerAction_DIG_RIGHT_instance;
  function values_5() {
    return [RunnerAction_RIGHT_getInstance(), RunnerAction_LEFT_getInstance(), RunnerAction_UP_getInstance(), RunnerAction_DOWN_getInstance(), RunnerAction_STOP_getInstance(), RunnerAction_DIG_LEFT_getInstance(), RunnerAction_DIG_RIGHT_getInstance()];
  }
  function RunnerAction$lambda() {
    return function ($this$null, it) {
      $this$null.o7w_1.u72().r2i(1);
      return Unit_getInstance();
    };
  }
  function RunnerAction$lambda_0() {
    return function ($this$null, it) {
      $this$null.o7w_1.u72().r2i(0);
      return Unit_getInstance();
    };
  }
  function RunnerAction$lambda_1() {
    return function ($this$null, it) {
      $this$null.o7w_1.u72().r2i(-1);
      return Unit_getInstance();
    };
  }
  function RunnerAction$lambda_2() {
    return function ($this$null, it) {
      $this$null.o7w_1.u72().r2i(0);
      return Unit_getInstance();
    };
  }
  function RunnerAction$lambda_3() {
    return function ($this$null, it) {
      $this$null.o7w_1.u72().s2i(-1);
      return Unit_getInstance();
    };
  }
  function RunnerAction$lambda_4() {
    return function ($this$null, it) {
      $this$null.o7w_1.u72().s2i(0);
      return Unit_getInstance();
    };
  }
  function RunnerAction$lambda_5() {
    return function ($this$null, it) {
      $this$null.o7w_1.u72().s2i(1);
      return Unit_getInstance();
    };
  }
  function RunnerAction$lambda_6() {
    return function ($this$null, it) {
      $this$null.o7w_1.u72().s2i(0);
      return Unit_getInstance();
    };
  }
  function RunnerAction$lambda_7() {
    return function ($this$null, it) {
      var tmp$ret$0;
      {
        var tmp0_with = $this$null.o7w_1.u72();
        {
        }
        tmp0_with.r2i(0);
        tmp$ret$0 = tmp0_with.s2i(0);
      }
      return Unit_getInstance();
    };
  }
  function RunnerAction$lambda_8() {
    return function ($this$null, it) {
      return Unit_getInstance();
    };
  }
  function RunnerAction$lambda_9() {
    return function ($this$null, it) {
      $this$null.o7w_1.v72(true);
      return Unit_getInstance();
    };
  }
  function RunnerAction$lambda_10() {
    return function ($this$null, it) {
      $this$null.o7w_1.v72(false);
      return Unit_getInstance();
    };
  }
  function RunnerAction$lambda_11() {
    return function ($this$null, it) {
      $this$null.o7w_1.x72(true);
      return Unit_getInstance();
    };
  }
  function RunnerAction$lambda_12() {
    return function ($this$null, it) {
      $this$null.o7w_1.x72(false);
      return Unit_getInstance();
    };
  }
  var RunnerAction_entriesInitialized;
  function RunnerAction_initEntries() {
    if (RunnerAction_entriesInitialized)
      return Unit_getInstance();
    RunnerAction_entriesInitialized = true;
    var tmp = Companion_getInstance().a2a_1;
    var tmp_0 = RunnerAction$lambda();
    RunnerAction_RIGHT_instance = new RunnerAction('RIGHT', 0, tmp, tmp_0, RunnerAction$lambda_0());
    var tmp_1 = Companion_getInstance().z29_1;
    var tmp_2 = RunnerAction$lambda_1();
    RunnerAction_LEFT_instance = new RunnerAction('LEFT', 1, tmp_1, tmp_2, RunnerAction$lambda_2());
    var tmp_3 = Companion_getInstance().b2a_1;
    var tmp_4 = RunnerAction$lambda_3();
    RunnerAction_UP_instance = new RunnerAction('UP', 2, tmp_3, tmp_4, RunnerAction$lambda_4());
    var tmp_5 = Companion_getInstance().c2a_1;
    var tmp_6 = RunnerAction$lambda_5();
    RunnerAction_DOWN_instance = new RunnerAction('DOWN', 3, tmp_5, tmp_6, RunnerAction$lambda_6());
    var tmp_7 = UniversalKeyCode_init_$Create$(_Char___init__impl__6a9atx(32));
    var tmp_8 = RunnerAction$lambda_7();
    RunnerAction_STOP_instance = new RunnerAction('STOP', 4, tmp_7, tmp_8, RunnerAction$lambda_8());
    var tmp_9 = UniversalKeyCode_init_$Create$(_Char___init__impl__6a9atx(122));
    var tmp_10 = RunnerAction$lambda_9();
    RunnerAction_DIG_LEFT_instance = new RunnerAction('DIG_LEFT', 5, tmp_9, tmp_10, RunnerAction$lambda_10());
    var tmp_11 = UniversalKeyCode_init_$Create$(_Char___init__impl__6a9atx(120));
    var tmp_12 = RunnerAction$lambda_11();
    RunnerAction_DIG_RIGHT_instance = new RunnerAction('DIG_RIGHT', 6, tmp_11, tmp_12, RunnerAction$lambda_12());
  }
  function RunnerAction(name, ordinal, keyCode, onPress, onRelease) {
    Enum.call(this, name, ordinal);
    this.s7w_1 = keyCode;
    this.t7w_1 = onPress;
    this.u7w_1 = onRelease;
  }
  RunnerAction.prototype.q6w = function () {
    return this.s7w_1;
  };
  RunnerAction.prototype.r6w = function () {
    return this.t7w_1;
  };
  RunnerAction.prototype.s6w = function () {
    return this.u7w_1;
  };
  RunnerAction.$metadata$ = classMeta('RunnerAction', undefined, undefined, undefined, undefined, Enum.prototype);
  function RunnerController$lambda() {
    return function (ev) {
      return ev.p26() ? true : ev.q26();
    };
  }
  function RunnerController$lambda_0($item, this$0) {
    return function (ev) {
      if (ev.q26())
        $item.u7w_1(this$0, ev);
      else if (ev.p26())
        $item.t7w_1(this$0, ev);
      return Unit_getInstance();
    };
  }
  function RunnerController(inputManager, runner) {
    Node_init_$Init$(null, 1, null, this);
    this.n7w_1 = inputManager;
    this.o7w_1 = runner;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.p7w_1 = tmp$ret$0;
    var tmp$ret$3;
    {
      var tmp0_map = values_5();
      var tmp$ret$2;
      {
        var tmp0_mapTo = ArrayList_init_$Create$(tmp0_map.length);
        var indexedObject = tmp0_map;
        var inductionVariable = 0;
        var last = indexedObject.length;
        while (inductionVariable < last) {
          var item = indexedObject[inductionVariable];
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$1;
          {
            var tmp_0 = 'runner_action_' + item.il() + '_pressed';
            var tmp_1 = RunnerController$lambda();
            tmp$ret$1 = this.n7w_1.y2a(item.s7w_1, tmp_0, tmp_1, RunnerController$lambda_0(item, this));
          }
          tmp0_mapTo.b(tmp$ret$1);
        }
        tmp$ret$2 = tmp0_mapTo;
      }
      tmp$ret$3 = tmp$ret$2;
    }
    this.p7w_1.o1(tmp$ret$3);
  }
  RunnerController.prototype.l4k = function (ctx) {
    Node.prototype.l4k.call(this, ctx);
    {
      var tmp0_forEach = this.p7w_1;
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          this.n7w_1.a2b(element);
        }
      }
    }
  };
  RunnerController.$metadata$ = classMeta('RunnerController', undefined, undefined, undefined, undefined, Node.prototype);
  function RunnerAction_RIGHT_getInstance() {
    RunnerAction_initEntries();
    return RunnerAction_RIGHT_instance;
  }
  function RunnerAction_LEFT_getInstance() {
    RunnerAction_initEntries();
    return RunnerAction_LEFT_instance;
  }
  function RunnerAction_UP_getInstance() {
    RunnerAction_initEntries();
    return RunnerAction_UP_instance;
  }
  function RunnerAction_DOWN_getInstance() {
    RunnerAction_initEntries();
    return RunnerAction_DOWN_instance;
  }
  function RunnerAction_STOP_getInstance() {
    RunnerAction_initEntries();
    return RunnerAction_STOP_instance;
  }
  function RunnerAction_DIG_LEFT_getInstance() {
    RunnerAction_initEntries();
    return RunnerAction_DIG_LEFT_instance;
  }
  function RunnerAction_DIG_RIGHT_getInstance() {
    RunnerAction_initEntries();
    return RunnerAction_DIG_RIGHT_instance;
  }
  function sprite(texture, name, spriteSize, regionSize, mirrorTexCoordsY) {
    return new Sprite(spriteSize, texture, regionSize, name, mirrorTexCoordsY);
  }
  function sprite$default(texture, name, spriteSize, regionSize, mirrorTexCoordsY, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      name = null;
    if (!(($mask0 & 4) === 0))
      spriteSize = null;
    if (!(($mask0 & 8) === 0))
      regionSize = null;
    if (!(($mask0 & 16) === 0))
      mirrorTexCoordsY = false;
    return sprite(texture, name, spriteSize, regionSize, mirrorTexCoordsY);
  }
  function Sprite$SpriteShader$Model$lambda$lambda(this$0, $texCoords, $this_vertexStage, $color) {
    return function ($this$main) {
      var tmp = mvpMatrix(this$0).m2h();
      var mvp = $this$main.m2z(tmp, null, 2, null);
      $this$main.h30($texCoords.n37(), $this_vertexStage.i39(Companion_getInstance_7().q2z_1.x2s_1));
      $this$main.h30($color.n37(), $this_vertexStage.o37(Companion_getInstance_7().r2z_1.x2s_1));
      $this$main.h30($this_vertexStage.d2s_1, times(mvp, $this$main.g30($this_vertexStage.f30(Companion_getInstance_7().n2z_1.x2s_1), 1.0)));
      return Unit_getInstance();
    };
  }
  function Sprite$SpriteShader$Model$lambda(this$0, $texCoords, $color) {
    return function ($this$vertexStage) {
      $this$vertexStage.i30(Sprite$SpriteShader$Model$lambda$lambda(this$0, $texCoords, $this$vertexStage, $color));
      return Unit_getInstance();
    };
  }
  function Sprite$SpriteShader$Model$lambda$lambda$lambda($this_fragmentStage, $texel) {
    return function ($this$if) {
      var tmp = float3($texel, 'xxx');
      $this_fragmentStage.h31($this$if, tmp, null, 0, 6, null);
      return Unit_getInstance();
    };
  }
  function Sprite$SpriteShader$Model$lambda$lambda$lambda_0($this_fragmentStage, $texel) {
    return function ($this$else) {
      $this_fragmentStage.r3p($this$else, $texel, 0, 2, null);
      return Unit_getInstance();
    };
  }
  function Sprite$SpriteShader$Model$lambda$lambda_0(this$0, $texCoords, $this_fragmentStage) {
    return function ($this$main) {
      Companion_getInstance_21();
      var atlasTex = this$0.r31('tex');
      Companion_getInstance_21();
      var textureOffset = this$0.o3m('texOffset');
      Companion_getInstance_21();
      var tileSize = this$0.o3m('tileSize');
      Companion_getInstance_21();
      var gray = this$0.n3m('gray');
      var atlasTexSize = toFloat2($this$main.s3o(atlasTex, null, 2, null));
      var tmp = toInt2($this$main.l3o(plus(times_1($texCoords.q36(), toFloat2(tileSize)), toFloat2(textureOffset))));
      var texel = $this$main.q3o(atlasTex, tmp, null, 4, null);
      var tmp_0 = gt(gray, $this$main.w3m(0));
      var tmp_1 = $this$main.s3n(tmp_0, Sprite$SpriteShader$Model$lambda$lambda$lambda($this_fragmentStage, texel));
      tmp_1.n3l(Sprite$SpriteShader$Model$lambda$lambda$lambda_0($this_fragmentStage, texel));
      return Unit_getInstance();
    };
  }
  function Sprite$SpriteShader$Model$lambda_0(this$0, $texCoords) {
    return function ($this$fragmentStage) {
      $this$fragmentStage.i30(Sprite$SpriteShader$Model$lambda$lambda_0(this$0, $texCoords, $this$fragmentStage));
      return Unit_getInstance();
    };
  }
  function Companion_12() {
    Companion_instance_12 = this;
    this.v7w_1 = 'tex';
    this.w7w_1 = 'texOffset';
    this.x7w_1 = 'tileSize';
    this.y7w_1 = 'gray';
    this.z7w_1 = listOf([Companion_getInstance_7().n2z_1, Companion_getInstance_7().q2z_1, Companion_getInstance_7().r2z_1]);
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_apply = new PipelineConfig();
      {
      }
      {
        tmp0_apply.w2t_1 = BlendMode_BLEND_PREMULTIPLIED_ALPHA_getInstance();
        tmp0_apply.x2t_1 = CullMethod_NO_CULLING_getInstance();
        tmp0_apply.y2t_1 = DepthCompareOp_DISABLED_getInstance();
      }
      tmp$ret$0 = tmp0_apply;
    }
    tmp.a7x_1 = tmp$ret$0;
  }
  Companion_12.$metadata$ = objectMeta('Companion');
  var Companion_instance_12;
  function Companion_getInstance_21() {
    if (Companion_instance_12 == null)
      new Companion_12();
    return Companion_instance_12;
  }
  function Model() {
    KslProgram.call(this, 'sprite');
    var texCoords = this.t31(null, null, 3, null);
    var color = this.v31(null, null, 3, null);
    this.j31(Sprite$SpriteShader$Model$lambda(this, texCoords, color));
    this.k31(Sprite$SpriteShader$Model$lambda_0(this, texCoords));
  }
  Model.$metadata$ = classMeta('Model', undefined, undefined, undefined, undefined, KslProgram.prototype);
  function buildMesh($this) {
    $this.i5e();
    $this.l2g();
    $this.p4q(group('scaler', Sprite$buildMesh$lambda($this)));
  }
  function SpriteShader() {
    Companion_getInstance_21();
    KslShader.call(this, new Model(), Companion_getInstance_21().a7x_1);
    var tmp = this;
    Companion_getInstance_21();
    tmp.l7x_1 = this.x2y('tex', null, 2, null);
    var tmp_0 = this;
    Companion_getInstance_21();
    tmp_0.m7x_1 = this.v2y('texOffset', null, 2, null);
    var tmp_1 = this;
    Companion_getInstance_21();
    tmp_1.n7x_1 = this.v2y('tileSize', null, 2, null);
    var tmp_2 = this;
    Companion_getInstance_21();
    tmp_2.o7x_1 = this.t2y('gray', null, 2, null);
  }
  SpriteShader.prototype.b2w = function (_set____db54di) {
    return this.l7x_1.d2w(this, texture$factory(), _set____db54di);
  };
  SpriteShader.prototype.c2w = function () {
    return this.l7x_1.o2u(this, texture$factory_0());
  };
  SpriteShader.prototype.p7x = function (_set____db54di) {
    this.m7x_1.m2v(this, textureOffset$factory(), _set____db54di);
    return Unit_getInstance();
  };
  SpriteShader.prototype.q7x = function () {
    return this.m7x_1.o2u(this, textureOffset$factory_0());
  };
  SpriteShader.prototype.q7r = function (_set____db54di) {
    this.n7x_1.m2v(this, tileSize$factory_1(), _set____db54di);
    return Unit_getInstance();
  };
  SpriteShader.prototype.s6l = function () {
    return this.n7x_1.o2u(this, tileSize$factory_2());
  };
  SpriteShader.prototype.r7x = function (_set____db54di) {
    return this.o7x_1.g2v(this, grayScaled$factory(), _set____db54di);
  };
  SpriteShader.prototype.s7x = function () {
    return this.o7x_1.o2u(this, grayScaled$factory_0());
  };
  SpriteShader.$metadata$ = classMeta('SpriteShader', undefined, undefined, undefined, undefined, KslShader.prototype);
  function Sprite$spriteShader$delegate$lambda() {
    return function () {
      return new SpriteShader();
    };
  }
  function Sprite$lambda(this$0) {
    return function (it) {
      var tmp;
      if (this$0.i6w_1.equals(Companion_getInstance_0().j2i_1) ? true : this$0.j6w_1.equals(Companion_getInstance_0().j2i_1)) {
        var tmp_0;
        var tmp0_safe_receiver = this$0.c6w_1;
        if (equals(tmp0_safe_receiver == null ? null : tmp0_safe_receiver.g55(), LoadingState_LOADED_getInstance())) {
          if (this$0.j6w_1.equals(Companion_getInstance_0().j2i_1)) {
            this$0.j6w_1.r2i(ensureNotNull(ensureNotNull(this$0.c6w_1).e55()).u3z());
            this$0.j6w_1.s2i(ensureNotNull(ensureNotNull(this$0.c6w_1).e55()).v3z());
          }
          var tmp_1;
          if (this$0.i6w_1.equals(Companion_getInstance_0().j2i_1)) {
            this$0.i6w_1.r2i(ensureNotNull(ensureNotNull(this$0.c6w_1).e55()).u3z());
            this$0.i6w_1.s2i(ensureNotNull(ensureNotNull(this$0.c6w_1).e55()).v3z());
            var tmp0_forEach = this$0.k6w_1;
            var tmp0_iterator = tmp0_forEach.h();
            while (tmp0_iterator.n()) {
              var element = tmp0_iterator.o();
              {
                element(this$0, this$0.i6w_1.e23(), this$0.i6w_1.g23());
              }
            }
            tmp_1 = Unit_getInstance();
          }
          tmp_0 = tmp_1;
        }
        tmp = tmp_0;
      }
      return Unit_getInstance();
    };
  }
  function Sprite$buildMesh$lambda$lambda(this$0, $mesh) {
    return function ($this$generate) {
      var props = new RectProps();
      {
        props.a4u_1.x2g(-props.u3z() / 2.0, -props.v3z() / 2.0, 0.0);
        if (this$0.e6w_1) {
          props.g4u();
        }
      }
      $this$generate.h4u(props);
      $mesh.e4k(this$0.u7u());
      return Unit_getInstance();
    };
  }
  function Sprite$buildMesh$lambda$lambda_0(this$0) {
    return function (it) {
      this$0.u7u().b2w(this$0.c6w_1);
      this$0.u7u().p7x(this$0.f6w_1);
      this$0.u7u().q7r(this$0.j6w_1);
      this$0.u7u().r7x(this$0.g6w_1 ? 1 : 0);
      return Unit_getInstance();
    };
  }
  function Sprite$buildMesh$lambda$lambda_1($this_group) {
    return function ($this$null, w, h) {
      $this_group.z4p_1.q2g();
      $this_group.m2d(w, h, 1.0);
      return Unit_getInstance();
    };
  }
  function Sprite$buildMesh$lambda(this$0) {
    return function ($this$group) {
      var tmp$ret$0;
      {
        var tmp0_mesh = Companion_getInstance_21().z7w_1;
        var tmp1_mesh = '' + this$0.il() + ' mesh';
        var mesh = new Mesh(new IndexedVertexList(tmp0_mesh), tmp1_mesh);
        {
          mesh.d4k(Sprite$buildMesh$lambda$lambda(this$0, mesh));
          var tmp0_this = mesh;
          {
            var tmp0_plusAssign = tmp0_this.n4k();
            tmp0_plusAssign.b(Sprite$buildMesh$lambda$lambda_0(this$0));
          }
        }
        tmp$ret$0 = mesh;
      }
      $this$group.p4q(tmp$ret$0);
      var tmp0_this_0 = this$0;
      var tmp2_plusAssign = tmp0_this_0.k6w_1;
      tmp2_plusAssign.b(Sprite$buildMesh$lambda$lambda_1($this$group));
      return Unit_getInstance();
    };
  }
  function Sprite(spriteSize, texture, regionSize, name, mirrorTexCoordsY) {
    Group.call(this, 'sprite ' + name + ' group');
    this.b6w_1 = spriteSize;
    this.c6w_1 = texture;
    this.d6w_1 = regionSize;
    this.e6w_1 = mirrorTexCoordsY;
    this.f6w_1 = MutableVec2i_init_$Create$(Companion_getInstance_0().j2i_1);
    this.g6w_1 = false;
    var tmp = this;
    tmp.h6w_1 = lazy(Sprite$spriteShader$delegate$lambda());
    var tmp_0 = this;
    var tmp0_safe_receiver = this.b6w_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.e23();
    var tmp_1 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    var tmp2_safe_receiver = this.b6w_1;
    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.g23();
    tmp_0.i6w_1 = new MutableVec2i(tmp_1, tmp3_elvis_lhs == null ? 0 : tmp3_elvis_lhs);
    var tmp_2 = this;
    var tmp0_safe_receiver_0 = this.d6w_1;
    var tmp1_elvis_lhs_0 = tmp0_safe_receiver_0 == null ? null : tmp0_safe_receiver_0.e23();
    var tmp_3 = tmp1_elvis_lhs_0 == null ? 0 : tmp1_elvis_lhs_0;
    var tmp2_safe_receiver_0 = this.d6w_1;
    var tmp3_elvis_lhs_0 = tmp2_safe_receiver_0 == null ? null : tmp2_safe_receiver_0.g23();
    tmp_2.j6w_1 = new MutableVec2i(tmp_3, tmp3_elvis_lhs_0 == null ? 0 : tmp3_elvis_lhs_0);
    var tmp_4 = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp_4.k6w_1 = tmp$ret$0;
    buildMesh(this);
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.n4k();
      tmp0_plusAssign.b(Sprite$lambda(this));
    }
  }
  Sprite.prototype.c2w = function () {
    return this.c6w_1;
  };
  Sprite.prototype.q7x = function () {
    return this.f6w_1;
  };
  Sprite.prototype.t7x = function (_set____db54di) {
    this.g6w_1 = _set____db54di;
  };
  Sprite.prototype.s7x = function () {
    return this.g6w_1;
  };
  Sprite.prototype.u7u = function () {
    var tmp$ret$0;
    {
      var tmp0_getValue = spriteShader$factory();
      tmp$ret$0 = this.h6w_1.n2();
    }
    return tmp$ret$0;
  };
  Sprite.prototype.w7u = function () {
    return this.i6w_1;
  };
  Sprite.prototype.u7x = function () {
    return this.j6w_1;
  };
  Sprite.prototype.v7x = function () {
    return this.k6w_1;
  };
  Sprite.$metadata$ = classMeta('Sprite', undefined, undefined, undefined, undefined, Group.prototype);
  function Sprite3d$SpriteAtlasShader$Model$lambda$lambda(this$0, $texCoords, $this_vertexStage, $color) {
    return function ($this$main) {
      var tmp = mvpMatrix(this$0).m2h();
      var mvp = $this$main.m2z(tmp, null, 2, null);
      $this$main.h30($texCoords.n37(), $this_vertexStage.i39(Companion_getInstance_7().q2z_1.x2s_1));
      $this$main.h30($color.n37(), $this_vertexStage.o37(Companion_getInstance_7().r2z_1.x2s_1));
      $this$main.h30($this_vertexStage.d2s_1, times(mvp, $this$main.g30($this_vertexStage.f30(Companion_getInstance_7().n2z_1.x2s_1), 1.0)));
      return Unit_getInstance();
    };
  }
  function Sprite3d$SpriteAtlasShader$Model$lambda(this$0, $texCoords, $color) {
    return function ($this$vertexStage) {
      $this$vertexStage.i30(Sprite3d$SpriteAtlasShader$Model$lambda$lambda(this$0, $texCoords, $this$vertexStage, $color));
      return Unit_getInstance();
    };
  }
  function Sprite3d$SpriteAtlasShader$Model$lambda$lambda_0(this$0, $texCoords, $this_fragmentStage) {
    return function ($this$main) {
      Companion_getInstance_22();
      var atlasTex = this$0.p3m('tex');
      Companion_getInstance_22();
      var tileIndex = this$0.n3m('texOffset');
      var atlasTexSize = toFloat3($this$main.u3o(atlasTex, null, 2, null));
      var xyInTile = toInt2(times_1($texCoords.q36(), get_xy(atlasTexSize)));
      var tmp = $this$main.e3n(get_x(xyInTile), get_y(xyInTile), tileIndex);
      var texel = $this$main.q3o(atlasTex, tmp, null, 4, null);
      $this_fragmentStage.r3p($this$main, texel, 0, 2, null);
      return Unit_getInstance();
    };
  }
  function Sprite3d$SpriteAtlasShader$Model$lambda_0(this$0, $texCoords) {
    return function ($this$fragmentStage) {
      $this$fragmentStage.i30(Sprite3d$SpriteAtlasShader$Model$lambda$lambda_0(this$0, $texCoords, $this$fragmentStage));
      return Unit_getInstance();
    };
  }
  function Companion_13() {
    Companion_instance_13 = this;
    this.w7x_1 = 'tex';
    this.x7x_1 = 'texOffset';
    this.y7x_1 = 'tileSize';
    this.z7x_1 = 'gray';
    this.a7y_1 = listOf([Companion_getInstance_7().n2z_1, Companion_getInstance_7().q2z_1, Companion_getInstance_7().r2z_1]);
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_apply = new PipelineConfig();
      {
      }
      {
        tmp0_apply.w2t_1 = BlendMode_BLEND_PREMULTIPLIED_ALPHA_getInstance();
        tmp0_apply.x2t_1 = CullMethod_NO_CULLING_getInstance();
        tmp0_apply.y2t_1 = DepthCompareOp_DISABLED_getInstance();
      }
      tmp$ret$0 = tmp0_apply;
    }
    tmp.b7y_1 = tmp$ret$0;
  }
  Companion_13.$metadata$ = objectMeta('Companion');
  var Companion_instance_13;
  function Companion_getInstance_22() {
    if (Companion_instance_13 == null)
      new Companion_13();
    return Companion_instance_13;
  }
  function Model_0() {
    KslProgram.call(this, 'sprite');
    var texCoords = this.t31(null, null, 3, null);
    var color = this.v31(null, null, 3, null);
    this.j31(Sprite3d$SpriteAtlasShader$Model$lambda(this, texCoords, color));
    this.k31(Sprite3d$SpriteAtlasShader$Model$lambda_0(this, texCoords));
  }
  Model_0.$metadata$ = classMeta('Model', undefined, undefined, undefined, undefined, KslProgram.prototype);
  function Sprite3d_init_$Init$(spriteSize, texture, regionSize, name, mirrorTexCoordsY, $mask0, $marker, $this) {
    if (!(($mask0 & 8) === 0))
      name = null;
    if (!(($mask0 & 16) === 0))
      mirrorTexCoordsY = false;
    Sprite3d.call($this, spriteSize, texture, regionSize, name, mirrorTexCoordsY);
    return $this;
  }
  function buildMesh_0($this) {
    $this.i5e();
    $this.l2g();
    var tmp$ret$0;
    {
      var tmp0_mesh = Companion_getInstance_22().a7y_1;
      var tmp1_mesh = $this.il();
      var mesh = new Mesh(new IndexedVertexList(tmp0_mesh), tmp1_mesh);
      {
        mesh.d4k(Sprite3d$buildMesh$lambda($this, mesh));
        var tmp0_this = mesh;
        {
          var tmp0_plusAssign = tmp0_this.n4k();
          tmp0_plusAssign.b(Sprite3d$buildMesh$lambda_0($this));
        }
      }
      tmp$ret$0 = mesh;
    }
    $this.p4q(tmp$ret$0);
  }
  function SpriteAtlasShader() {
    Companion_getInstance_22();
    KslShader.call(this, new Model_0(), Companion_getInstance_22().b7y_1);
    var tmp = this;
    Companion_getInstance_22();
    tmp.m7y_1 = this.z2y('tex', null, 2, null);
    var tmp_0 = this;
    Companion_getInstance_22();
    tmp_0.n7y_1 = this.t2y('texOffset', null, 2, null);
  }
  SpriteAtlasShader.prototype.r2w = function (_set____db54di) {
    return this.m7y_1.s2w(this, texture$factory_1(), _set____db54di);
  };
  SpriteAtlasShader.prototype.c2w = function () {
    return this.m7y_1.o2u(this, texture$factory_2());
  };
  SpriteAtlasShader.prototype.t7u = function (_set____db54di) {
    return this.n7y_1.g2v(this, tileIndex$factory(), _set____db54di);
  };
  SpriteAtlasShader.prototype.v7u = function () {
    return this.n7y_1.o2u(this, tileIndex$factory_0());
  };
  SpriteAtlasShader.$metadata$ = classMeta('SpriteAtlasShader', undefined, undefined, undefined, undefined, KslShader.prototype);
  function Sprite3d$spriteShader$delegate$lambda() {
    return function () {
      return new SpriteAtlasShader();
    };
  }
  function Sprite3d$lambda(this$0) {
    return function (it) {
      var tmp;
      if (this$0.q7u_1.equals(Companion_getInstance_0().j2i_1) ? true : this$0.r7u_1.equals(Companion_getInstance_0().j2i_1)) {
        var tmp_0;
        var tmp0_safe_receiver = this$0.l7u_1;
        if (equals(tmp0_safe_receiver == null ? null : tmp0_safe_receiver.g55(), LoadingState_LOADED_getInstance())) {
          if (this$0.q7u_1.equals(Companion_getInstance_0().j2i_1)) {
            this$0.q7u_1.r2i(ensureNotNull(ensureNotNull(this$0.l7u_1).e55()).u3z());
            this$0.q7u_1.s2i(ensureNotNull(ensureNotNull(this$0.l7u_1).e55()).v3z());
            {
              var tmp0_forEach = this$0.s7u_1;
              var tmp0_iterator = tmp0_forEach.h();
              while (tmp0_iterator.n()) {
                var element = tmp0_iterator.o();
                {
                  element(this$0, this$0.q7u_1.e23(), this$0.q7u_1.g23());
                }
              }
            }
          }
          if (this$0.r7u_1.equals(Companion_getInstance_0().j2i_1)) {
            this$0.r7u_1.r2i(ensureNotNull(ensureNotNull(this$0.l7u_1).e55()).u3z());
            this$0.r7u_1.s2i(ensureNotNull(ensureNotNull(this$0.l7u_1).e55()).v3z());
          }
          this$0.o4r().m2d(this$0.q7u_1.e23(), this$0.q7u_1.g23(), 1.0);
          tmp_0 = Unit_getInstance();
        }
        tmp = tmp_0;
      }
      return Unit_getInstance();
    };
  }
  function Sprite3d$buildMesh$lambda(this$0, $mesh) {
    return function ($this$generate) {
      var props = new RectProps();
      {
        props.m5k(1.0);
        props.n5k(1.0);
        props.a4u_1.x2g(-props.u3z() / 2.0, -props.v3z() / 2.0, 0.0);
        if (this$0.n7u_1) {
          props.g4u();
        }
      }
      $this$generate.h4u(props);
      $mesh.e4k(this$0.u7u());
      return Unit_getInstance();
    };
  }
  function Sprite3d$buildMesh$lambda_0(this$0) {
    return function (it) {
      this$0.u7u().r2w(this$0.l7u_1);
      this$0.u7u().t7u(this$0.p7u_1);
      return Unit_getInstance();
    };
  }
  function Sprite3d(spriteSize, texture, regionSize, name, mirrorTexCoordsY) {
    Group.call(this, 'sprite 3d ' + name + ' group');
    this.k7u_1 = spriteSize;
    this.l7u_1 = texture;
    this.m7u_1 = regionSize;
    this.n7u_1 = mirrorTexCoordsY;
    var tmp = this;
    tmp.o7u_1 = lazy(Sprite3d$spriteShader$delegate$lambda());
    this.p7u_1 = 0;
    var tmp_0 = this;
    var tmp0_safe_receiver = this.k7u_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.e23();
    var tmp_1 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    var tmp2_safe_receiver = this.k7u_1;
    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.g23();
    tmp_0.q7u_1 = new MutableVec2i(tmp_1, tmp3_elvis_lhs == null ? 0 : tmp3_elvis_lhs);
    var tmp_2 = this;
    var tmp0_safe_receiver_0 = this.m7u_1;
    var tmp1_elvis_lhs_0 = tmp0_safe_receiver_0 == null ? null : tmp0_safe_receiver_0.e23();
    var tmp_3 = tmp1_elvis_lhs_0 == null ? 0 : tmp1_elvis_lhs_0;
    var tmp2_safe_receiver_0 = this.m7u_1;
    var tmp3_elvis_lhs_0 = tmp2_safe_receiver_0 == null ? null : tmp2_safe_receiver_0.g23();
    tmp_2.r7u_1 = new MutableVec2i(tmp_3, tmp3_elvis_lhs_0 == null ? 0 : tmp3_elvis_lhs_0);
    var tmp_4 = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp_4.s7u_1 = tmp$ret$0;
    buildMesh_0(this);
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.n4k();
      tmp0_plusAssign.b(Sprite3d$lambda(this));
    }
  }
  Sprite3d.prototype.r2w = function (_set____db54di) {
    this.l7u_1 = _set____db54di;
  };
  Sprite3d.prototype.c2w = function () {
    return this.l7u_1;
  };
  Sprite3d.prototype.u7u = function () {
    var tmp$ret$0;
    {
      var tmp0_getValue = spriteShader$factory_0();
      tmp$ret$0 = this.o7u_1.n2();
    }
    return tmp$ret$0;
  };
  Sprite3d.prototype.t7u = function (_set____db54di) {
    this.p7u_1 = _set____db54di;
  };
  Sprite3d.prototype.v7u = function () {
    return this.p7u_1;
  };
  Sprite3d.prototype.w7u = function () {
    return this.q7u_1;
  };
  Sprite3d.$metadata$ = classMeta('Sprite3d', undefined, undefined, undefined, undefined, Group.prototype);
  function spriteShader$factory() {
    return getPropertyCallableRef('spriteShader', 1, KProperty1, function (receiver) {
      return receiver.u7u();
    }, null);
  }
  function texture$factory() {
    return getPropertyCallableRef('texture', 1, KMutableProperty1, function (receiver) {
      return receiver.c2w();
    }, function (receiver, value) {
      return receiver.b2w(value);
    });
  }
  function texture$factory_0() {
    return getPropertyCallableRef('texture', 1, KMutableProperty1, function (receiver) {
      return receiver.c2w();
    }, function (receiver, value) {
      return receiver.b2w(value);
    });
  }
  function textureOffset$factory() {
    return getPropertyCallableRef('textureOffset', 1, KMutableProperty1, function (receiver) {
      return receiver.q7x();
    }, function (receiver, value) {
      return receiver.p7x(value);
    });
  }
  function textureOffset$factory_0() {
    return getPropertyCallableRef('textureOffset', 1, KMutableProperty1, function (receiver) {
      return receiver.q7x();
    }, function (receiver, value) {
      return receiver.p7x(value);
    });
  }
  function tileSize$factory_1() {
    return getPropertyCallableRef('tileSize', 1, KMutableProperty1, function (receiver) {
      return receiver.s6l();
    }, function (receiver, value) {
      return receiver.q7r(value);
    });
  }
  function tileSize$factory_2() {
    return getPropertyCallableRef('tileSize', 1, KMutableProperty1, function (receiver) {
      return receiver.s6l();
    }, function (receiver, value) {
      return receiver.q7r(value);
    });
  }
  function grayScaled$factory() {
    return getPropertyCallableRef('grayScaled', 1, KMutableProperty1, function (receiver) {
      return receiver.s7x();
    }, function (receiver, value) {
      return receiver.r7x(value);
    });
  }
  function grayScaled$factory_0() {
    return getPropertyCallableRef('grayScaled', 1, KMutableProperty1, function (receiver) {
      return receiver.s7x();
    }, function (receiver, value) {
      return receiver.r7x(value);
    });
  }
  function spriteShader$factory_0() {
    return getPropertyCallableRef('spriteShader', 1, KProperty1, function (receiver) {
      return receiver.u7u();
    }, null);
  }
  function texture$factory_1() {
    return getPropertyCallableRef('texture', 1, KMutableProperty1, function (receiver) {
      return receiver.c2w();
    }, function (receiver, value) {
      return receiver.r2w(value);
    });
  }
  function texture$factory_2() {
    return getPropertyCallableRef('texture', 1, KMutableProperty1, function (receiver) {
      return receiver.c2w();
    }, function (receiver, value) {
      return receiver.r2w(value);
    });
  }
  function tileIndex$factory() {
    return getPropertyCallableRef('tileIndex', 1, KMutableProperty1, function (receiver) {
      return receiver.v7u();
    }, function (receiver, value) {
      return receiver.t7u(value);
    });
  }
  function tileIndex$factory_0() {
    return getPropertyCallableRef('tileIndex', 1, KMutableProperty1, function (receiver) {
      return receiver.v7u();
    }, function (receiver, value) {
      return receiver.t7u(value);
    });
  }
  function textView(text, fontAtlas, imageAtlasSpec, capacity, init) {
    return new TextView(mutableStateOf(text), fontAtlas, imageAtlasSpec, capacity, init);
  }
  function textView$default(text, fontAtlas, imageAtlasSpec, capacity, init, $mask0, $handler) {
    if (!(($mask0 & 8) === 0))
      capacity = text.length;
    if (!(($mask0 & 16) === 0)) {
      init = textView$lambda();
    }
    return textView(text, fontAtlas, imageAtlasSpec, capacity, init);
  }
  function TextView_init_$Init$(text, fontAtlas, spec, capacity, init, $mask0, $marker, $this) {
    if (!(($mask0 & 8) === 0))
      capacity = 1000;
    if (!(($mask0 & 16) === 0)) {
      init = TextView$_init_$lambda_jte947();
    }
    TextView.call($this, text, fontAtlas, spec, capacity, init);
    return $this;
  }
  function TextView_init_$Create$(text, fontAtlas, spec, capacity, init, $mask0, $marker) {
    return TextView_init_$Init$(text, fontAtlas, spec, capacity, init, $mask0, $marker, Object.create(TextView.prototype));
  }
  function Companion_14() {
    Companion_instance_14 = this;
    this.o7y_1 = 0;
    var tmp = this;
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = LinkedHashMap_init_$Create$_0();
      }
      var tmp0_apply = tmp$ret$0;
      {
      }
      {
        var inductionVariable = _Char___init__impl__6a9atx(48);
        if (inductionVariable <= _Char___init__impl__6a9atx(57))
          do {
            var c = inductionVariable;
            inductionVariable = Char__plus_impl_qi7pgj(inductionVariable, 1);
            {
              var tmp0_set = Char__minus_impl_a2frrh(c, _Char___init__impl__6a9atx(48));
              tmp0_apply.a(new Char(c), tmp0_set);
            }
          }
           while (inductionVariable <= _Char___init__impl__6a9atx(57));
        var inductionVariable_0 = _Char___init__impl__6a9atx(97);
        if (inductionVariable_0 <= _Char___init__impl__6a9atx(122))
          do {
            var c_0 = inductionVariable_0;
            inductionVariable_0 = Char__plus_impl_qi7pgj(inductionVariable_0, 1);
            {
              var tmp1_set = Char__minus_impl_a2frrh(c_0, _Char___init__impl__6a9atx(97)) + 10 | 0;
              tmp0_apply.a(new Char(c_0), tmp1_set);
            }
          }
           while (inductionVariable_0 <= _Char___init__impl__6a9atx(122));
        {
          tmp0_apply.a(new Char(_Char___init__impl__6a9atx(46)), 36);
        }
        {
          tmp0_apply.a(new Char(_Char___init__impl__6a9atx(60)), 37);
        }
        {
          tmp0_apply.a(new Char(_Char___init__impl__6a9atx(62)), 38);
        }
        {
          tmp0_apply.a(new Char(_Char___init__impl__6a9atx(45)), 39);
        }
        {
          tmp0_apply.a(new Char(_Char___init__impl__6a9atx(32)), 43);
        }
        {
          tmp0_apply.a(new Char(_Char___init__impl__6a9atx(58)), 44);
        }
        {
          tmp0_apply.a(new Char(_Char___init__impl__6a9atx(95)), 45);
        }
      }
      tmp$ret$1 = tmp0_apply;
    }
    tmp.p7y_1 = tmp$ret$1;
  }
  Companion_14.$metadata$ = objectMeta('Companion');
  var Companion_instance_14;
  function Companion_getInstance_23() {
    if (Companion_instance_14 == null)
      new Companion_14();
    return Companion_instance_14;
  }
  function drawFromBuffer($this, string) {
    $this.p7z_1.t7();
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = string;
      }
      tmp$ret$1 = tmp$ret$0.toLowerCase();
    }
    var indexedObject = tmp$ret$1;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var c = charSequenceGet(indexedObject, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      var tmp$ret$2;
      {
        var tmp1_elvis_lhs = Companion_getInstance_23().p7y_1.b3(new Char(c));
        var tmp;
        if (tmp1_elvis_lhs == null) {
          Companion_getInstance_23();
          tmp = 0;
        } else {
          tmp = tmp1_elvis_lhs;
        }
        var tmp0_and = toByte(tmp);
        tmp$ret$2 = toByte(tmp0_and & 127);
      }
      $this.p7z_1.e5n(tmp$ret$2);
    }
    $this.p7z_1.h3y();
    return new TextureData2d($this.p7z_1, $this.p7z_1.f5n(), 1, TexFormat_R_getInstance());
  }
  function _get_textWidth__aptsyg($this) {
    return $this.m7z_1.b3s_1.length;
  }
  function _get_textHeight__vt67qh($this) {
    return 1.0;
  }
  function rebuildMeshes($this, spec) {
    if ($this.m7z_1.b3s_1.length === $this.r7z_1)
      return Unit_getInstance();
    $this.i5e();
    var pads = 2.0;
    $this.p4q(group('scalethis', TextView$rebuildMeshes$lambda($this, spec, pads)));
    $this.r7z_1 = $this.m7z_1.b3s_1.length;
  }
  function updateShader($this) {
    var tmp$ret$0;
    {
      var tmp0_with = $this.q7z_1;
      {
      }
      var tmp = get_simpleValueTextureProps();
      var tmp_0 = drawFromBuffer($this, $this.m7z_1.b3s_1);
      tmp0_with.t7r(Texture2d_init_$Create$_0(tmp, tmp_0, null, 4, null));
      tmp0_with.u7r(new Vec2f($this.m7z_1.b3s_1.length, 1.0));
      tmp0_with.o7r($this.n7z_1.p70_1.b3s_1);
      tmp0_with.q7r($this.n7z_1.u70());
      tmp$ret$0 = tmp0_with.r7r(new Vec2i($this.n7z_1.u6y(), $this.n7z_1.v6y()));
    }
    return tmp$ret$0;
  }
  function TextView$_init_$lambda_jte947() {
    return function ($this$null) {
      return Unit_getInstance();
    };
  }
  function TextView$rebuildMeshes$lambda$lambda$lambda() {
    return function ($this$generate) {
      var props = new RectProps();
      var tmp$ret$0;
      {
        tmp$ret$0 = Unit_getInstance();
      }
      $this$generate.h4u(props);
      return Unit_getInstance();
    };
  }
  function TextView$rebuildMeshes$lambda$lambda$lambda$lambda() {
    return function ($this$color) {
      var tmp = new Color(0.0, 0.0, 0.0, 0.75);
      $this$color.l33(tmp, null, 2, null);
      return Unit_getInstance();
    };
  }
  function TextView$rebuildMeshes$lambda$lambda$lambda_0() {
    return function ($this$$receiver) {
      $this$$receiver.i31(TextView$rebuildMeshes$lambda$lambda$lambda$lambda());
      return Unit_getInstance();
    };
  }
  function TextView$rebuildMeshes$lambda$lambda() {
    return function ($this$colorMesh) {
      $this$colorMesh.d4k(TextView$rebuildMeshes$lambda$lambda$lambda());
      $this$colorMesh.e4k(KslUnlitShader_init_$Create$(TextView$rebuildMeshes$lambda$lambda$lambda_0()));
      return Unit_getInstance();
    };
  }
  function TextView$rebuildMeshes$lambda$lambda_0($pads, $spec, this$0) {
    return function ($this$generate) {
      var props = new RectProps();
      {
        props.a4u_1.x2g($pads / $spec.h6l_1 / _get_textWidth__aptsyg(this$0), $pads / $spec.i6l_1 / _get_textHeight__vt67qh(this$0), 0.0);
      }
      $this$generate.h4u(props);
      return Unit_getInstance();
    };
  }
  function TextView$rebuildMeshes$lambda(this$0, $spec, $pads) {
    return function ($this$group) {
      $this$group.p4q(colorMesh$default(null, TextView$rebuildMeshes$lambda$lambda(), 1, null));
      var tmp$ret$1;
      {
        var tmp0_mesh = listOf([Companion_getInstance_7().n2z_1, Companion_getInstance_7().q2z_1]);
        var mesh = new Mesh(new IndexedVertexList(tmp0_mesh), null);
        {
          mesh.d4k(TextView$rebuildMeshes$lambda$lambda_0($pads, $spec, this$0));
          var tmp$ret$0;
          {
            var tmp0_apply = this$0.q7z_1;
            {
            }
            {
              tmp0_apply.q7r(new Vec2i($spec.h6l_1, $spec.i6l_1));
              tmp0_apply.r7r(new Vec2i(this$0.n7z_1.u6y(), this$0.n7z_1.v6y()));
            }
            tmp$ret$0 = tmp0_apply;
          }
          mesh.e4k(tmp$ret$0);
        }
        tmp$ret$1 = mesh;
      }
      $this$group.p4q(tmp$ret$1);
      $this$group.t2h(_get_textWidth__aptsyg(this$0), _get_textHeight__vt67qh(this$0), 1.0);
      return Unit_getInstance();
    };
  }
  function TextView$lambda(this$0) {
    return function (it) {
      this$0.o7z_1 = true;
      return Unit_getInstance();
    };
  }
  function TextView$lambda_0(this$0) {
    return function (it) {
      this$0.o7z_1 = true;
      return Unit_getInstance();
    };
  }
  function TextView$lambda_1(this$0) {
    return function (it) {
      var tmp;
      if (this$0.o7z_1) {
        var tmp$ret$1;
        {
          var tmp_0 = this$0.k3u().r(0);
          var tmp0_with = tmp_0 instanceof Group ? tmp_0 : THROW_CCE();
          {
          }
          var tmp$ret$0;
          {
            tmp0_with.z4p_1.q2g();
            tmp$ret$0 = tmp0_with.t2h(_get_textWidth__aptsyg(this$0), _get_textHeight__vt67qh(this$0), 1.0);
          }
          tmp$ret$1 = tmp$ret$0;
        }
        updateShader(this$0);
        this$0.o7z_1 = this$0.q7z_1.s7r().e23() === 0;
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function TextView(text, fontAtlas, spec, capacity, init) {
    Companion_getInstance_23();
    Group_init_$Init$(null, 1, null, this);
    this.m7z_1 = text;
    this.n7z_1 = fontAtlas;
    this.o7z_1 = true;
    this.p7z_1 = createUint8Buffer(capacity);
    var tmp = this;
    tmp.q7z_1 = TileMapShader_init_$Create$(null, 1, null);
    this.r7z_1 = 0;
    this.m7z_1.h3s(TextView$lambda(this));
    this.n7z_1.p70_1.h3s(TextView$lambda_0(this));
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.n4k();
      tmp0_plusAssign.b(TextView$lambda_1(this));
    }
    rebuildMeshes(this, spec.b3s_1);
    init(this);
  }
  TextView.$metadata$ = classMeta('TextView', undefined, undefined, undefined, undefined, Group.prototype);
  function textView$lambda() {
    return function ($this$null) {
      return Unit_getInstance();
    };
  }
  function main() {
    var ctx = createDefaultContext('');
    var app = new App(ctx);
  }
  function format(_this__u8e3s4, args) {
    var tmp = _this__u8e3s4 + ' format ';
    return tmp + joinToString$default_0(args, ', ', null, null, 0, null, null, 62, null);
  }
  //region block: post-declaration
  $serializer.prototype.uu = typeParametersSerializers;
  $serializer_0.prototype.uu = typeParametersSerializers;
  //endregion
  //region block: init
  Version = '0.3-221108.1203';
  TILE_HEIGHT = 22;
  W4 = 5;
  H4 = 5;
  H2 = 11;
  START_HEALTH = 5;
  SCORE_COMPLETE = 1500;
  SCORE_COMPLETE_INC = 100;
  SCORE_FALL = 75;
  SCORE_DIES = 75;
  //endregion
  main();
  return _;
}));



/***/ }),

/***/ "./kotlin/MultiplatformSettings-multiplatform-settings-js-ir.js":
/*!**********************************************************************!*\
  !*** ./kotlin/MultiplatformSettings-multiplatform-settings-js-ir.js ***!
  \**********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
  if (true)
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ./kotlin-kotlin-stdlib-js-ir.js */ "./kotlin/kotlin-kotlin-stdlib-js-ir.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
}(this, function (_, kotlin_kotlin) {
  'use strict';
  //region block: imports
  var Unit_getInstance = kotlin_kotlin.$_$.j3;
  var THROW_CCE = kotlin_kotlin.$_$.tc;
  var classMeta = kotlin_kotlin.$_$.o8;
  var isObject = kotlin_kotlin.$_$.i9;
  var ReadWriteProperty = kotlin_kotlin.$_$.aa;
  var interfaceMeta = kotlin_kotlin.$_$.x8;
  var toInt = kotlin_kotlin.$_$.ub;
  var toDouble = kotlin_kotlin.$_$.sb;
  var toBoolean = kotlin_kotlin.$_$.rb;
  //endregion
  //region block: pre-declaration
  IntDelegate.prototype = Object.create(OptionalKeyDelegate.prototype);
  IntDelegate.prototype.constructor = IntDelegate;
  FloatDelegate.prototype = Object.create(OptionalKeyDelegate.prototype);
  FloatDelegate.prototype.constructor = FloatDelegate;
  BooleanDelegate.prototype = Object.create(OptionalKeyDelegate.prototype);
  BooleanDelegate.prototype.constructor = BooleanDelegate;
  function getString$default(key, defaultValue, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      defaultValue = '';
    return $handler == null ? this.y67(key, defaultValue) : $handler(key, defaultValue);
  }
  //endregion
  function int(_this__u8e3s4, key, defaultValue) {
    return new IntDelegate(_this__u8e3s4, key, defaultValue);
  }
  function int$default(_this__u8e3s4, key, defaultValue, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      key = null;
    if (!(($mask0 & 2) === 0))
      defaultValue = 0;
    return int(_this__u8e3s4, key, defaultValue);
  }
  function float(_this__u8e3s4, key, defaultValue) {
    return new FloatDelegate(_this__u8e3s4, key, defaultValue);
  }
  function float$default(_this__u8e3s4, key, defaultValue, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      key = null;
    if (!(($mask0 & 2) === 0))
      defaultValue = 0.0;
    return float(_this__u8e3s4, key, defaultValue);
  }
  function boolean(_this__u8e3s4, key, defaultValue) {
    return new BooleanDelegate(_this__u8e3s4, key, defaultValue);
  }
  function boolean$default(_this__u8e3s4, key, defaultValue, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      key = null;
    if (!(($mask0 & 2) === 0))
      defaultValue = false;
    return boolean(_this__u8e3s4, key, defaultValue);
  }
  function IntDelegate(settings, key, defaultValue) {
    OptionalKeyDelegate.call(this, key);
    this.c67_1 = settings;
    this.d67_1 = defaultValue;
  }
  IntDelegate.prototype.e67 = function (key) {
    var tmp$ret$0;
    {
      var tmp0_get = this.c67_1;
      var tmp1_get = this.d67_1;
      tmp$ret$0 = tmp0_get.f67(key, tmp1_get);
    }
    return tmp$ret$0;
  };
  IntDelegate.prototype.g67 = function (key, value) {
    var tmp$ret$0;
    {
      var tmp0_set = this.c67_1;
      tmp$ret$0 = tmp0_set.h67(key, value);
    }
  };
  IntDelegate.prototype.i67 = function (key, value) {
    return this.g67(key, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  IntDelegate.$metadata$ = classMeta('IntDelegate', undefined, undefined, undefined, undefined, OptionalKeyDelegate.prototype);
  function FloatDelegate(settings, key, defaultValue) {
    OptionalKeyDelegate.call(this, key);
    this.l67_1 = settings;
    this.m67_1 = defaultValue;
  }
  FloatDelegate.prototype.e67 = function (key) {
    var tmp$ret$0;
    {
      var tmp0_get = this.l67_1;
      var tmp1_get = this.m67_1;
      tmp$ret$0 = tmp0_get.n67(key, tmp1_get);
    }
    return tmp$ret$0;
  };
  FloatDelegate.prototype.o67 = function (key, value) {
    var tmp$ret$0;
    {
      var tmp0_set = this.l67_1;
      tmp$ret$0 = tmp0_set.p67(key, value);
    }
  };
  FloatDelegate.prototype.i67 = function (key, value) {
    return this.o67(key, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  FloatDelegate.$metadata$ = classMeta('FloatDelegate', undefined, undefined, undefined, undefined, OptionalKeyDelegate.prototype);
  function BooleanDelegate(settings, key, defaultValue) {
    OptionalKeyDelegate.call(this, key);
    this.r67_1 = settings;
    this.s67_1 = defaultValue;
  }
  BooleanDelegate.prototype.e67 = function (key) {
    var tmp$ret$0;
    {
      var tmp0_get = this.r67_1;
      var tmp1_get = this.s67_1;
      tmp$ret$0 = tmp0_get.t67(key, tmp1_get);
    }
    return tmp$ret$0;
  };
  BooleanDelegate.prototype.u67 = function (key, value) {
    var tmp$ret$0;
    {
      var tmp0_set = this.r67_1;
      tmp$ret$0 = tmp0_set.v67(key, value);
    }
  };
  BooleanDelegate.prototype.i67 = function (key, value) {
    return this.u67(key, (!(value == null) ? typeof value === 'boolean' : false) ? value : THROW_CCE());
  };
  BooleanDelegate.$metadata$ = classMeta('BooleanDelegate', undefined, undefined, undefined, undefined, OptionalKeyDelegate.prototype);
  function OptionalKeyDelegate(key) {
    this.j67_1 = key;
  }
  OptionalKeyDelegate.prototype.o2u = function (thisRef, property) {
    var tmp0_elvis_lhs = this.j67_1;
    return this.e67(tmp0_elvis_lhs == null ? property.callableName : tmp0_elvis_lhs);
  };
  OptionalKeyDelegate.prototype.r8 = function (thisRef, property) {
    return this.o2u((thisRef == null ? true : isObject(thisRef)) ? thisRef : THROW_CCE(), property);
  };
  OptionalKeyDelegate.prototype.z46 = function (thisRef, property, value) {
    var tmp0_elvis_lhs = this.j67_1;
    this.i67(tmp0_elvis_lhs == null ? property.callableName : tmp0_elvis_lhs, value);
  };
  OptionalKeyDelegate.prototype.s8 = function (thisRef, property, value) {
    var tmp = (thisRef == null ? true : isObject(thisRef)) ? thisRef : THROW_CCE();
    return this.z46(tmp, property, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  OptionalKeyDelegate.$metadata$ = classMeta('OptionalKeyDelegate', [ReadWriteProperty]);
  function contains(_this__u8e3s4, key) {
    return _this__u8e3s4.w67(key);
  }
  function get(_this__u8e3s4, key, defaultValue) {
    return _this__u8e3s4.f67(key, defaultValue);
  }
  function set(_this__u8e3s4, key, value) {
    return _this__u8e3s4.h67(key, value);
  }
  function get_0(_this__u8e3s4, key, defaultValue) {
    return _this__u8e3s4.n67(key, defaultValue);
  }
  function set_0(_this__u8e3s4, key, value) {
    return _this__u8e3s4.p67(key, value);
  }
  function get_1(_this__u8e3s4, key, defaultValue) {
    return _this__u8e3s4.t67(key, defaultValue);
  }
  function set_1(_this__u8e3s4, key, value) {
    return _this__u8e3s4.v67(key, value);
  }
  function Settings() {
  }
  Settings.$metadata$ = interfaceMeta('Settings');
  function JsSettings_init_$Init$(delegate, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      delegate = localStorage;
    JsSettings.call($this, delegate);
    return $this;
  }
  function JsSettings_init_$Create$(delegate, $mask0, $marker) {
    return JsSettings_init_$Init$(delegate, $mask0, $marker, Object.create(JsSettings.prototype));
  }
  function JsSettings(delegate) {
    this.a68_1 = delegate;
  }
  JsSettings.prototype.w67 = function (key) {
    var tmp$ret$1;
    {
      var tmp0_get = this.a68_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_get;
      }
      tmp$ret$1 = tmp$ret$0[key];
    }
    return !(tmp$ret$1 == null);
  };
  JsSettings.prototype.h67 = function (key, value) {
    {
      var tmp0_set = this.a68_1;
      var tmp1_set = value.toString();
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_set;
      }
      tmp$ret$0[key] = tmp1_set;
    }
  };
  JsSettings.prototype.f67 = function (key, defaultValue) {
    var tmp$ret$1;
    {
      var tmp0_get = this.a68_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_get;
      }
      tmp$ret$1 = tmp$ret$0[key];
    }
    var tmp0_safe_receiver = tmp$ret$1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : toInt(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? defaultValue : tmp1_elvis_lhs;
  };
  JsSettings.prototype.x67 = function (key, value) {
    {
      var tmp0_set = this.a68_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_set;
      }
      tmp$ret$0[key] = value;
    }
  };
  JsSettings.prototype.y67 = function (key, defaultValue) {
    var tmp$ret$1;
    {
      var tmp0_get = this.a68_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_get;
      }
      tmp$ret$1 = tmp$ret$0[key];
    }
    var tmp0_elvis_lhs = tmp$ret$1;
    return tmp0_elvis_lhs == null ? defaultValue : tmp0_elvis_lhs;
  };
  JsSettings.prototype.p67 = function (key, value) {
    {
      var tmp0_set = this.a68_1;
      var tmp1_set = value.toString();
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_set;
      }
      tmp$ret$0[key] = tmp1_set;
    }
  };
  JsSettings.prototype.n67 = function (key, defaultValue) {
    var tmp$ret$1;
    {
      var tmp0_get = this.a68_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_get;
      }
      tmp$ret$1 = tmp$ret$0[key];
    }
    var tmp0_safe_receiver = tmp$ret$1;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$4;
      {
        var tmp$ret$3;
        {
          var tmp0_unsafeCast = toDouble(tmp0_safe_receiver);
          var tmp$ret$2;
          {
            tmp$ret$2 = tmp0_unsafeCast;
          }
          tmp$ret$3 = tmp$ret$2;
        }
        tmp$ret$4 = tmp$ret$3;
      }
      tmp = tmp$ret$4;
    }
    var tmp1_elvis_lhs = tmp;
    return tmp1_elvis_lhs == null ? defaultValue : tmp1_elvis_lhs;
  };
  JsSettings.prototype.v67 = function (key, value) {
    {
      var tmp0_set = this.a68_1;
      var tmp1_set = value.toString();
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_set;
      }
      tmp$ret$0[key] = tmp1_set;
    }
  };
  JsSettings.prototype.t67 = function (key, defaultValue) {
    var tmp$ret$1;
    {
      var tmp0_get = this.a68_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_get;
      }
      tmp$ret$1 = tmp$ret$0[key];
    }
    var tmp0_safe_receiver = tmp$ret$1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : toBoolean(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? defaultValue : tmp1_elvis_lhs;
  };
  JsSettings.$metadata$ = classMeta('JsSettings', [Settings]);
  //region block: post-declaration
  JsSettings.prototype.z67 = getString$default;
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = boolean$default;
  _.$_$.b = float$default;
  _.$_$.c = int$default;
  _.$_$.d = JsSettings_init_$Create$;
  //endregion
  return _;
}));



/***/ }),

/***/ "./kotlin/MultiplatformSettings-multiplatform-settings-no-arg-js-ir.js":
/*!*****************************************************************************!*\
  !*** ./kotlin/MultiplatformSettings-multiplatform-settings-no-arg-js-ir.js ***!
  \*****************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
  if (true)
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ./MultiplatformSettings-multiplatform-settings-js-ir.js */ "./kotlin/MultiplatformSettings-multiplatform-settings-js-ir.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
}(this, function (_, kotlin_com_russhwolf_multiplatform_settings) {
  'use strict';
  //region block: imports
  var JsSettings_init_$Create$ = kotlin_com_russhwolf_multiplatform_settings.$_$.d;
  //endregion
  //region block: pre-declaration
  //endregion
  function Settings() {
    return JsSettings_init_$Create$(null, 1, null);
  }
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = Settings;
  //endregion
  return _;
}));



/***/ }),

/***/ "./kotlin/kool-kool-core.js":
/*!**********************************!*\
  !*** ./kotlin/kool-kool-core.js ***!
  \**********************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
  if (true)
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! pako */ "../../node_modules/pako/index.js"), __webpack_require__(/*! ./kotlin-kotlin-stdlib-js-ir.js */ "./kotlin/kotlin-kotlin-stdlib-js-ir.js"), __webpack_require__(/*! ./kotlinx.coroutines-kotlinx-coroutines-core-js-ir.js */ "./kotlin/kotlinx.coroutines-kotlinx-coroutines-core-js-ir.js"), __webpack_require__(/*! ./kotlinx-serialization-kotlinx-serialization-json-js-ir.js */ "./kotlin/kotlinx-serialization-kotlinx-serialization-json-js-ir.js"), __webpack_require__(/*! ./kotlinx-serialization-kotlinx-serialization-core-js-ir.js */ "./kotlin/kotlinx-serialization-kotlinx-serialization-core-js-ir.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
}(this, function (_, Pako, kotlin_kotlin, kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var log2 = Math.log2;
  var interfaceMeta = kotlin_kotlin.$_$.x8;
  var CompletableDeferred = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.i;
  var CoroutineImpl = kotlin_kotlin.$_$.z7;
  var Unit_getInstance = kotlin_kotlin.$_$.j3;
  var THROW_CCE = kotlin_kotlin.$_$.tc;
  var mutableListOf = kotlin_kotlin.$_$.c6;
  var get_COROUTINE_SUSPENDED = kotlin_kotlin.$_$.k7;
  var classMeta = kotlin_kotlin.$_$.o8;
  var ensureNotNull = kotlin_kotlin.$_$.dd;
  var objectMeta = kotlin_kotlin.$_$.q9;
  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.b1;
  var SelectBuilderImpl = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.h;
  var returnIfSuspended = kotlin_kotlin.$_$.f;
  var CoroutineScope = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.k;
  var isInterface = kotlin_kotlin.$_$.g9;
  var noWhenBranchMatchedException = kotlin_kotlin.$_$.md;
  var getKClassFromExpression = kotlin_kotlin.$_$.c;
  var Job$default = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.d;
  var Channel$default = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.b;
  var Factory_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.g;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.r;
  var startsWith = kotlin_kotlin.$_$.ob;
  var launch$default = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.f;
  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.f2;
  var indexOf$default = kotlin_kotlin.$_$.m;
  var until = kotlin_kotlin.$_$.ha;
  var substring = kotlin_kotlin.$_$.pb;
  var getStringHashCode = kotlin_kotlin.$_$.u8;
  var equals = kotlin_kotlin.$_$.q8;
  var SuspendFunction1 = kotlin_kotlin.$_$.a8;
  var Long = kotlin_kotlin.$_$.nc;
  var toLong = kotlin_kotlin.$_$.s9;
  var Enum = kotlin_kotlin.$_$.ic;
  var ArrayList_init_$Create$_0 = kotlin_kotlin.$_$.s;
  var checkIndexOverflow = kotlin_kotlin.$_$.m4;
  var fillArrayVal = kotlin_kotlin.$_$.r8;
  var toString = kotlin_kotlin.$_$.u9;
  var collectionSizeOrDefault = kotlin_kotlin.$_$.n4;
  var Char__toInt_impl_vasixd = kotlin_kotlin.$_$.i2;
  var uppercaseChar = kotlin_kotlin.$_$.zb;
  var numberToChar = kotlin_kotlin.$_$.o9;
  var Char = kotlin_kotlin.$_$.dc;
  var lazy = kotlin_kotlin.$_$.ld;
  var roundToInt = kotlin_kotlin.$_$.y9;
  var captureStack = kotlin_kotlin.$_$.j8;
  var Exception = kotlin_kotlin.$_$.kc;
  var Exception_init_$Init$ = kotlin_kotlin.$_$.m1;
  var getProgressionLastElement = kotlin_kotlin.$_$.d8;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.p1;
  var get_PI = kotlin_kotlin.$_$.v9;
  var compareTo = kotlin_kotlin.$_$.p8;
  var abs = kotlin_kotlin.$_$.w9;
  var numberToInt = kotlin_kotlin.$_$.p9;
  var getNumberHashCode = kotlin_kotlin.$_$.s8;
  var Collection = kotlin_kotlin.$_$.l3;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.u1;
  var asSequence = kotlin_kotlin.$_$.k4;
  var filter = kotlin_kotlin.$_$.ta;
  var NoSuchElementException_init_$Create$ = kotlin_kotlin.$_$.z1;
  var Map = kotlin_kotlin.$_$.u3;
  var first = kotlin_kotlin.$_$.k5;
  var throwUninitializedPropertyAccessException = kotlin_kotlin.$_$.od;
  var StringBuilder_init_$Create$ = kotlin_kotlin.$_$.i1;
  var trimIndent = kotlin_kotlin.$_$.yb;
  var toMutableList = kotlin_kotlin.$_$.c7;
  var joinToString$default = kotlin_kotlin.$_$.h;
  var println = kotlin_kotlin.$_$.e8;
  var lineSequence = kotlin_kotlin.$_$.hb;
  var joinToString$default_0 = kotlin_kotlin.$_$.i;
  var StringBuilder = kotlin_kotlin.$_$.cb;
  var prependIndent = kotlin_kotlin.$_$.lb;
  var UInt = kotlin_kotlin.$_$.wc;
  var contains$default = kotlin_kotlin.$_$.l;
  var map = kotlin_kotlin.$_$.ya;
  var joinToString$default_1 = kotlin_kotlin.$_$.k;
  var LinkedHashSet_init_$Create$ = kotlin_kotlin.$_$.d1;
  var addAll = kotlin_kotlin.$_$.b4;
  var emptySet = kotlin_kotlin.$_$.i5;
  var listOf = kotlin_kotlin.$_$.y5;
  var toSet = kotlin_kotlin.$_$.e7;
  var plus = kotlin_kotlin.$_$.f6;
  var NotImplementedError_init_$Create$ = kotlin_kotlin.$_$.q;
  var retainAll = kotlin_kotlin.$_$.l6;
  var removeAll = kotlin_kotlin.$_$.h6;
  var Sequence = kotlin_kotlin.$_$.oa;
  var setOf = kotlin_kotlin.$_$.o6;
  var Regex_init_$Create$ = kotlin_kotlin.$_$.h1;
  var charSequenceGet = kotlin_kotlin.$_$.l8;
  var hashCode = kotlin_kotlin.$_$.v8;
  var last = kotlin_kotlin.$_$.w5;
  var emptyMap = kotlin_kotlin.$_$.h5;
  var removeLast = kotlin_kotlin.$_$.k6;
  var getKClass = kotlin_kotlin.$_$.d;
  var round = kotlin_kotlin.$_$.z9;
  var get_indices = kotlin_kotlin.$_$.q5;
  var reversed = kotlin_kotlin.$_$.fa;
  var get_lastIndex = kotlin_kotlin.$_$.t5;
  var Comparable = kotlin_kotlin.$_$.ec;
  var KMutableProperty1 = kotlin_kotlin.$_$.ka;
  var getPropertyCallableRef = kotlin_kotlin.$_$.t8;
  var minOf = kotlin_kotlin.$_$.i7;
  var maxOf = kotlin_kotlin.$_$.h7;
  var KProperty1 = kotlin_kotlin.$_$.la;
  var step = kotlin_kotlin.$_$.ga;
  var sortWith = kotlin_kotlin.$_$.r6;
  var Comparator = kotlin_kotlin.$_$.fc;
  var removeAll_0 = kotlin_kotlin.$_$.i6;
  var KMutableProperty0 = kotlin_kotlin.$_$.ja;
  var _ULong___init__impl__c78o9k = kotlin_kotlin.$_$.q2;
  var _ULong___get_data__impl__fggpzb = kotlin_kotlin.$_$.r2;
  var emptyList = kotlin_kotlin.$_$.g5;
  var ULong__hashCode_impl_6hv2lb = kotlin_kotlin.$_$.s2;
  var toByte = kotlin_kotlin.$_$.r9;
  var SuspendFunction2 = kotlin_kotlin.$_$.b8;
  var async$default = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.e;
  var _UInt___init__impl__l7qpdl = kotlin_kotlin.$_$.o2;
  var isObject = kotlin_kotlin.$_$.i9;
  var toString_0 = kotlin_kotlin.$_$.pd;
  var joinTo$default = kotlin_kotlin.$_$.j;
  var MutableMap = kotlin_kotlin.$_$.y3;
  var toList = kotlin_kotlin.$_$.a7;
  var isNaN_0 = kotlin_kotlin.$_$.id;
  var charSequenceLength = kotlin_kotlin.$_$.m8;
  var toInt = kotlin_kotlin.$_$.vb;
  var IllegalArgumentException_init_$Create$_0 = kotlin_kotlin.$_$.r1;
  var NumberFormatException = kotlin_kotlin.$_$.qc;
  var Default_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.a;
  var decodeToString = kotlin_kotlin.$_$.db;
  var arrayOf = kotlin_kotlin.$_$.ad;
  var createKType = kotlin_kotlin.$_$.a;
  var serializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.v1;
  var KSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.q1;
  var mapCapacity = kotlin_kotlin.$_$.z5;
  var coerceAtLeast = kotlin_kotlin.$_$.ca;
  var LinkedHashMap_init_$Create$_0 = kotlin_kotlin.$_$.a1;
  var to = kotlin_kotlin.$_$.qd;
  var PluginGeneratedSerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.k1;
  var StringSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.n;
  var ArrayListSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.f1;
  var UnknownFieldException_init_$Create$ = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.d;
  var typeParametersSerializers = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.h1;
  var GeneratedSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.i1;
  var throwMissingFieldException = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.n1;
  var FloatSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.l;
  var IntSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.m;
  var removeAll_1 = kotlin_kotlin.$_$.g6;
  var MutableEntry = kotlin_kotlin.$_$.x3;
  var isComparable = kotlin_kotlin.$_$.c9;
  var NoSuchElementException_init_$Create$_0 = kotlin_kotlin.$_$.x1;
  var isInfinite = kotlin_kotlin.$_$.hd;
  var isNaN_1 = kotlin_kotlin.$_$.jd;
  var DoubleCompanionObject_getInstance = kotlin_kotlin.$_$.x2;
  var IllegalStateException_init_$Create$_0 = kotlin_kotlin.$_$.s1;
  var startsWith$default = kotlin_kotlin.$_$.p;
  var CompletableDeferred$default = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.c;
  var contains = kotlin_kotlin.$_$.o4;
  var mutableSetOf = kotlin_kotlin.$_$.e6;
  var mutableMapOf = kotlin_kotlin.$_$.d6;
  var copyToArray = kotlin_kotlin.$_$.d5;
  var sorted = kotlin_kotlin.$_$.s6;
  var listOf_0 = kotlin_kotlin.$_$.x5;
  var lines = kotlin_kotlin.$_$.ib;
  //endregion
  //region block: pre-declaration
  function onWindowCloseRequest(ctx) {
    return true;
  }
  function onWindowScaleChange(newScale, ctx) {
    return newScale;
  }
  AssetManager$loader$slambda$slambda.prototype = Object.create(CoroutineImpl.prototype);
  AssetManager$loader$slambda$slambda.prototype.constructor = AssetManager$loader$slambda$slambda;
  AssetManager$loader$slambda$slambda_1.prototype = Object.create(CoroutineImpl.prototype);
  AssetManager$loader$slambda$slambda_1.prototype.constructor = AssetManager$loader$slambda$slambda_1;
  AssetManager$loader$slambda.prototype = Object.create(CoroutineImpl.prototype);
  AssetManager$loader$slambda.prototype.constructor = AssetManager$loader$slambda;
  AssetManager$loadWorker$slambda.prototype = Object.create(CoroutineImpl.prototype);
  AssetManager$loadWorker$slambda.prototype.constructor = AssetManager$loadWorker$slambda;
  AssetManager$launch$slambda.prototype = Object.create(CoroutineImpl.prototype);
  AssetManager$launch$slambda.prototype.constructor = AssetManager$launch$slambda;
  $loadAssetCOROUTINE$0.prototype = Object.create(CoroutineImpl.prototype);
  $loadAssetCOROUTINE$0.prototype.constructor = $loadAssetCOROUTINE$0;
  $loadAssetCOROUTINE$1.prototype = Object.create(CoroutineImpl.prototype);
  $loadAssetCOROUTINE$1.prototype.constructor = $loadAssetCOROUTINE$1;
  $loadTextureDataCOROUTINE$2.prototype = Object.create(CoroutineImpl.prototype);
  $loadTextureDataCOROUTINE$2.prototype.constructor = $loadTextureDataCOROUTINE$2;
  $loadTextureAtlasDataCOROUTINE$3.prototype = Object.create(CoroutineImpl.prototype);
  $loadTextureAtlasDataCOROUTINE$3.prototype.constructor = $loadTextureAtlasDataCOROUTINE$3;
  RawAssetRef.prototype = Object.create(AssetRef.prototype);
  RawAssetRef.prototype.constructor = RawAssetRef;
  LoadedRawAsset.prototype = Object.create(LoadedAsset.prototype);
  LoadedRawAsset.prototype.constructor = LoadedRawAsset;
  TextureAssetRef.prototype = Object.create(AssetRef.prototype);
  TextureAssetRef.prototype.constructor = TextureAssetRef;
  LoadedTextureAsset.prototype = Object.create(LoadedAsset.prototype);
  LoadedTextureAsset.prototype.constructor = LoadedTextureAsset;
  UpdateState.prototype = Object.create(Enum.prototype);
  UpdateState.prototype.constructor = UpdateState;
  InputManager$BufferedPointerInput$UpdateState$STARTED.prototype = Object.create(UpdateState.prototype);
  InputManager$BufferedPointerInput$UpdateState$STARTED.prototype.constructor = InputManager$BufferedPointerInput$UpdateState$STARTED;
  InputManager$BufferedPointerInput$UpdateState$ACTIVE.prototype = Object.create(UpdateState.prototype);
  InputManager$BufferedPointerInput$UpdateState$ACTIVE.prototype.constructor = InputManager$BufferedPointerInput$UpdateState$ACTIVE;
  InputManager$BufferedPointerInput$UpdateState$ENDED_BEFORE_STARTED.prototype = Object.create(UpdateState.prototype);
  InputManager$BufferedPointerInput$UpdateState$ENDED_BEFORE_STARTED.prototype.constructor = InputManager$BufferedPointerInput$UpdateState$ENDED_BEFORE_STARTED;
  InputManager$BufferedPointerInput$UpdateState$ENDED_BEFORE_ACTIVE.prototype = Object.create(UpdateState.prototype);
  InputManager$BufferedPointerInput$UpdateState$ENDED_BEFORE_ACTIVE.prototype.constructor = InputManager$BufferedPointerInput$UpdateState$ENDED_BEFORE_ACTIVE;
  InputManager$BufferedPointerInput$UpdateState$ENDED.prototype = Object.create(UpdateState.prototype);
  InputManager$BufferedPointerInput$UpdateState$ENDED.prototype.constructor = InputManager$BufferedPointerInput$UpdateState$ENDED;
  InputManager$BufferedPointerInput$UpdateState$INVALID.prototype = Object.create(UpdateState.prototype);
  InputManager$BufferedPointerInput$UpdateState$INVALID.prototype.constructor = InputManager$BufferedPointerInput$UpdateState$INVALID;
  BufferedPointerInput.prototype = Object.create(Pointer.prototype);
  BufferedPointerInput.prototype.constructor = BufferedPointerInput;
  CursorMode.prototype = Object.create(Enum.prototype);
  CursorMode.prototype.constructor = CursorMode;
  CursorShape.prototype = Object.create(Enum.prototype);
  CursorShape.prototype.constructor = CursorShape;
  UniversalKeyCode.prototype = Object.create(KeyCode.prototype);
  UniversalKeyCode.prototype.constructor = UniversalKeyCode;
  LocalKeyCode.prototype = Object.create(KeyCode.prototype);
  LocalKeyCode.prototype.constructor = LocalKeyCode;
  KoolException.prototype = Object.create(Exception.prototype);
  KoolException.prototype.constructor = KoolException;
  Mat4fStack.prototype = Object.create(Mat4f.prototype);
  Mat4fStack.prototype.constructor = Mat4fStack;
  MutableVec2i.prototype = Object.create(Vec2i.prototype);
  MutableVec2i.prototype.constructor = MutableVec2i;
  MutableVec2f.prototype = Object.create(Vec2f.prototype);
  MutableVec2f.prototype.constructor = MutableVec2f;
  MutableVec2d.prototype = Object.create(Vec2d.prototype);
  MutableVec2d.prototype.constructor = MutableVec2d;
  MutableVec3f.prototype = Object.create(Vec3f.prototype);
  MutableVec3f.prototype.constructor = MutableVec3f;
  MutableVec3i.prototype = Object.create(Vec3i.prototype);
  MutableVec3i.prototype.constructor = MutableVec3i;
  MutableVec4f.prototype = Object.create(Vec4f.prototype);
  MutableVec4f.prototype.constructor = MutableVec4f;
  MutableVec4i.prototype = Object.create(Vec4i.prototype);
  MutableVec4i.prototype.constructor = MutableVec4i;
  KslShader.prototype = Object.create(Shader.prototype);
  KslShader.prototype.constructor = KslShader;
  function onShaderCreated(shader, pipeline, ctx) {
  }
  function onUpdate(cmd) {
  }
  Model.prototype = Object.create(KslProgram.prototype);
  Model.prototype.constructor = Model;
  KslUnlitShader.prototype = Object.create(KslShader.prototype);
  KslUnlitShader.prototype.constructor = KslUnlitShader;
  ConstColor.prototype = Object.create(ColorSource.prototype);
  ConstColor.prototype.constructor = ConstColor;
  UniformColor.prototype = Object.create(ColorSource.prototype);
  UniformColor.prototype.constructor = UniformColor;
  VertexColor.prototype = Object.create(ColorSource.prototype);
  VertexColor.prototype.constructor = VertexColor;
  TextureColor.prototype = Object.create(ColorSource.prototype);
  TextureColor.prototype.constructor = TextureColor;
  InstanceColor.prototype = Object.create(ColorSource.prototype);
  InstanceColor.prototype.constructor = InstanceColor;
  MixMode.prototype = Object.create(Enum.prototype);
  MixMode.prototype.constructor = MixMode;
  KslStatement.prototype = Object.create(KslOp.prototype);
  KslStatement.prototype.constructor = KslStatement;
  KslBlock.prototype = Object.create(KslStatement.prototype);
  KslBlock.prototype.constructor = KslBlock;
  ColorBlockFragmentStage.prototype = Object.create(KslBlock.prototype);
  ColorBlockFragmentStage.prototype.constructor = ColorBlockFragmentStage;
  ColorBlockVertexStage.prototype = Object.create(KslBlock.prototype);
  ColorBlockVertexStage.prototype.constructor = ColorBlockVertexStage;
  ColorSpaceConversion.prototype = Object.create(Enum.prototype);
  ColorSpaceConversion.prototype.constructor = ColorSpaceConversion;
  ToneMapLinearColorUncharted2.prototype = Object.create(KslFunction.prototype);
  ToneMapLinearColorUncharted2.prototype.constructor = ToneMapLinearColorUncharted2;
  MvpMatrixData.prototype = Object.create(MatrixData.prototype);
  MvpMatrixData.prototype.constructor = MvpMatrixData;
  TexCoordAttributeBlock.prototype = Object.create(KslBlock.prototype);
  TexCoordAttributeBlock.prototype.constructor = TexCoordAttributeBlock;
  GlslGenerator.prototype = Object.create(KslGenerator.prototype);
  GlslGenerator.prototype.constructor = GlslGenerator;
  KslValue.prototype = Object.create(KslState.prototype);
  KslValue.prototype.constructor = KslValue;
  KslArray.prototype = Object.create(KslValue.prototype);
  KslArray.prototype.constructor = KslArray;
  KslAssign.prototype = Object.create(KslStatement.prototype);
  KslAssign.prototype.constructor = KslAssign;
  function checkIsAssignable(scopeBuilder) {
    var tmp0_elvis_lhs = this.i3i();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalArgumentException_init_$Create$('Assignable has no mutable state');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var mutState = tmp;
    if (!mutState.n3i_1) {
      throw IllegalArgumentException_init_$Create$('Provided assign target is not mutable');
    }
  }
  KslAugmentedAssign.prototype = Object.create(KslStatement.prototype);
  KslAugmentedAssign.prototype.constructor = KslAugmentedAssign;
  VectorInput.prototype = Object.create(BlockInput.prototype);
  VectorInput.prototype.constructor = VectorInput;
  KslBuiltinFunctionScalar.prototype = Object.create(KslBuiltinFunction.prototype);
  KslBuiltinFunctionScalar.prototype.constructor = KslBuiltinFunctionScalar;
  KslBuiltinLength.prototype = Object.create(KslBuiltinFunctionScalar.prototype);
  KslBuiltinLength.prototype.constructor = KslBuiltinLength;
  KslBuiltinFunctionVector.prototype = Object.create(KslBuiltinFunction.prototype);
  KslBuiltinFunctionVector.prototype.constructor = KslBuiltinFunctionVector;
  KslBuiltinFloorVector.prototype = Object.create(KslBuiltinFunctionVector.prototype);
  KslBuiltinFloorVector.prototype.constructor = KslBuiltinFloorVector;
  KslBuiltinTruncVector.prototype = Object.create(KslBuiltinFunctionVector.prototype);
  KslBuiltinTruncVector.prototype.constructor = KslBuiltinTruncVector;
  KslBuiltinPowVector.prototype = Object.create(KslBuiltinFunctionVector.prototype);
  KslBuiltinPowVector.prototype.constructor = KslBuiltinPowVector;
  KslBuiltinAbsScalar.prototype = Object.create(KslBuiltinFunctionScalar.prototype);
  KslBuiltinAbsScalar.prototype.constructor = KslBuiltinAbsScalar;
  KslBuiltinClampScalar.prototype = Object.create(KslBuiltinFunctionScalar.prototype);
  KslBuiltinClampScalar.prototype.constructor = KslBuiltinClampScalar;
  KslBuiltinCross.prototype = Object.create(KslBuiltinFunctionVector.prototype);
  KslBuiltinCross.prototype.constructor = KslBuiltinCross;
  KslBuiltinDot.prototype = Object.create(KslBuiltinFunctionScalar.prototype);
  KslBuiltinDot.prototype.constructor = KslBuiltinDot;
  KslBuiltinMaxScalar.prototype = Object.create(KslBuiltinFunctionScalar.prototype);
  KslBuiltinMaxScalar.prototype.constructor = KslBuiltinMaxScalar;
  KslBuiltinMinScalar.prototype = Object.create(KslBuiltinFunctionScalar.prototype);
  KslBuiltinMinScalar.prototype.constructor = KslBuiltinMinScalar;
  KslBuiltinNormalize.prototype = Object.create(KslBuiltinFunctionVector.prototype);
  KslBuiltinNormalize.prototype.constructor = KslBuiltinNormalize;
  KslBuiltinPowScalar.prototype = Object.create(KslBuiltinFunctionScalar.prototype);
  KslBuiltinPowScalar.prototype.constructor = KslBuiltinPowScalar;
  KslBuiltinSmoothStepScalar.prototype = Object.create(KslBuiltinFunctionScalar.prototype);
  KslBuiltinSmoothStepScalar.prototype.constructor = KslBuiltinSmoothStepScalar;
  KslBuiltinSqrtScalar.prototype = Object.create(KslBuiltinFunctionScalar.prototype);
  KslBuiltinSqrtScalar.prototype.constructor = KslBuiltinSqrtScalar;
  KslBuiltinStepScalar.prototype = Object.create(KslBuiltinFunctionScalar.prototype);
  KslBuiltinStepScalar.prototype.constructor = KslBuiltinStepScalar;
  KslBuiltinTrigonometryScalar.prototype = Object.create(KslBuiltinFunctionScalar.prototype);
  KslBuiltinTrigonometryScalar.prototype.constructor = KslBuiltinTrigonometryScalar;
  KslDeclareArray.prototype = Object.create(KslStatement.prototype);
  KslDeclareArray.prototype.constructor = KslDeclareArray;
  KslDeclareVar.prototype = Object.create(KslStatement.prototype);
  KslDeclareVar.prototype.constructor = KslDeclareVar;
  KslDiscard.prototype = Object.create(KslStatement.prototype);
  KslDiscard.prototype.constructor = KslDiscard;
  KslBitOperator.prototype = Object.create(Enum.prototype);
  KslBitOperator.prototype.constructor = KslBitOperator;
  KslExpressionBitScalar.prototype = Object.create(KslExpressionBit.prototype);
  KslExpressionBitScalar.prototype.constructor = KslExpressionBitScalar;
  KslExpressionCastVector.prototype = Object.create(KslExpressionCast.prototype);
  KslExpressionCastVector.prototype.constructor = KslExpressionCastVector;
  KslExpressionCastScalar.prototype = Object.create(KslExpressionCast.prototype);
  KslExpressionCastScalar.prototype.constructor = KslExpressionCastScalar;
  KslExpressionCompareScalar.prototype = Object.create(KslExpressionCompare.prototype);
  KslExpressionCompareScalar.prototype.constructor = KslExpressionCompareScalar;
  KslCompareOperator.prototype = Object.create(Enum.prototype);
  KslCompareOperator.prototype.constructor = KslCompareOperator;
  KslExpressionCompareVector.prototype = Object.create(KslExpressionCompare.prototype);
  KslExpressionCompareVector.prototype.constructor = KslExpressionCompareVector;
  KslBoolVecOperator.prototype = Object.create(Enum.prototype);
  KslBoolVecOperator.prototype.constructor = KslBoolVecOperator;
  KslBoolScalarOperator.prototype = Object.create(Enum.prototype);
  KslBoolScalarOperator.prototype.constructor = KslBoolScalarOperator;
  KslExpressionMathVector.prototype = Object.create(KslExpressionMath.prototype);
  KslExpressionMathVector.prototype.constructor = KslExpressionMathVector;
  KslExpressionMathScalar.prototype = Object.create(KslExpressionMath.prototype);
  KslExpressionMathScalar.prototype.constructor = KslExpressionMathScalar;
  KslMathOperator.prototype = Object.create(Enum.prototype);
  KslMathOperator.prototype.constructor = KslMathOperator;
  FunctionRoot.prototype = Object.create(KslOp.prototype);
  FunctionRoot.prototype.constructor = FunctionRoot;
  KslInvokeFunctionScalar.prototype = Object.create(KslInvokeFunction.prototype);
  KslInvokeFunctionScalar.prototype.constructor = KslInvokeFunctionScalar;
  KslInvokeFunctionVector.prototype = Object.create(KslInvokeFunction.prototype);
  KslInvokeFunctionVector.prototype.constructor = KslInvokeFunctionVector;
  KslFunctionFloat1.prototype = Object.create(KslFunction.prototype);
  KslFunctionFloat1.prototype.constructor = KslFunctionFloat1;
  KslFunctionFloat2.prototype = Object.create(KslFunction.prototype);
  KslFunctionFloat2.prototype.constructor = KslFunctionFloat2;
  KslIf.prototype = Object.create(KslStatement.prototype);
  KslIf.prototype.constructor = KslIf;
  KslInterStageVector.prototype = Object.create(KslInterStageVar.prototype);
  KslInterStageVector.prototype.constructor = KslInterStageVector;
  KslInterStageInterpolation.prototype = Object.create(Enum.prototype);
  KslInterStageInterpolation.prototype.constructor = KslInterStageInterpolation;
  KslLoopBreak.prototype = Object.create(KslStatement.prototype);
  KslLoopBreak.prototype.constructor = KslLoopBreak;
  KslLoopContinue.prototype = Object.create(KslStatement.prototype);
  KslLoopContinue.prototype.constructor = KslLoopContinue;
  KslLoopDoWhile.prototype = Object.create(KslStatement.prototype);
  KslLoopDoWhile.prototype.constructor = KslLoopDoWhile;
  KslLoopFor.prototype = Object.create(KslStatement.prototype);
  KslLoopFor.prototype.constructor = KslLoopFor;
  KslLoopWhile.prototype = Object.create(KslStatement.prototype);
  KslLoopWhile.prototype.constructor = KslLoopWhile;
  KslPort.prototype = Object.create(KslBlock.prototype);
  KslPort.prototype.constructor = KslPort;
  PortFloat4.prototype = Object.create(KslPort.prototype);
  PortFloat4.prototype.constructor = PortFloat4;
  KslReturn.prototype = Object.create(KslStatement.prototype);
  KslReturn.prototype.constructor = KslReturn;
  KslScopeBuilder.prototype = Object.create(KslScope.prototype);
  KslScopeBuilder.prototype.constructor = KslScopeBuilder;
  KslVertexStage.prototype = Object.create(KslShaderStage.prototype);
  KslVertexStage.prototype.constructor = KslVertexStage;
  KslFragmentStage.prototype = Object.create(KslShaderStage.prototype);
  KslFragmentStage.prototype.constructor = KslFragmentStage;
  KslShaderStageType.prototype = Object.create(Enum.prototype);
  KslShaderStageType.prototype.constructor = KslShaderStageType;
  KslStageInputScalar.prototype = Object.create(KslStageInput.prototype);
  KslStageInputScalar.prototype.constructor = KslStageInputScalar;
  KslStageInputVector.prototype = Object.create(KslStageInput.prototype);
  KslStageInputVector.prototype.constructor = KslStageInputVector;
  KslStageOutputVector.prototype = Object.create(KslStageOutput.prototype);
  KslStageOutputVector.prototype.constructor = KslStageOutputVector;
  KslStageOutputScalar.prototype = Object.create(KslStageOutput.prototype);
  KslStageOutputScalar.prototype.constructor = KslStageOutputScalar;
  KslTextureSize2d.prototype = Object.create(KslTextureSize.prototype);
  KslTextureSize2d.prototype.constructor = KslTextureSize2d;
  KslTextureSize3d.prototype = Object.create(KslTextureSize.prototype);
  KslTextureSize3d.prototype.constructor = KslTextureSize3d;
  KslNumericType.prototype = Object.create(KslType.prototype);
  KslNumericType.prototype.constructor = KslNumericType;
  KslFloatType.prototype = Object.create(KslNumericType.prototype);
  KslFloatType.prototype.constructor = KslFloatType;
  function get_dimens() {
    return 2;
  }
  KslTypeFloat2.prototype = Object.create(KslFloatType.prototype);
  KslTypeFloat2.prototype.constructor = KslTypeFloat2;
  KslTypeFloat1.prototype = Object.create(KslFloatType.prototype);
  KslTypeFloat1.prototype.constructor = KslTypeFloat1;
  KslTypeMat4.prototype = Object.create(KslFloatType.prototype);
  KslTypeMat4.prototype.constructor = KslTypeMat4;
  function get_dimens_0() {
    return 4;
  }
  KslTypeFloat4.prototype = Object.create(KslFloatType.prototype);
  KslTypeFloat4.prototype.constructor = KslTypeFloat4;
  function get_dimens_1() {
    return 3;
  }
  KslTypeFloat3.prototype = Object.create(KslFloatType.prototype);
  KslTypeFloat3.prototype.constructor = KslTypeFloat3;
  KslTypeSampler.prototype = Object.create(KslType.prototype);
  KslTypeSampler.prototype.constructor = KslTypeSampler;
  KslTypeColorSampler.prototype = Object.create(KslTypeSampler.prototype);
  KslTypeColorSampler.prototype.constructor = KslTypeColorSampler;
  KslTypeColorSampler2d.prototype = Object.create(KslTypeColorSampler.prototype);
  KslTypeColorSampler2d.prototype.constructor = KslTypeColorSampler2d;
  KslTypeColorSampler3d.prototype = Object.create(KslTypeColorSampler.prototype);
  KslTypeColorSampler3d.prototype.constructor = KslTypeColorSampler3d;
  KslIntType.prototype = Object.create(KslNumericType.prototype);
  KslIntType.prototype.constructor = KslIntType;
  KslTypeInt2.prototype = Object.create(KslIntType.prototype);
  KslTypeInt2.prototype.constructor = KslTypeInt2;
  KslTypeInt1.prototype = Object.create(KslIntType.prototype);
  KslTypeInt1.prototype.constructor = KslTypeInt1;
  KslTypeInt3.prototype = Object.create(KslIntType.prototype);
  KslTypeInt3.prototype.constructor = KslTypeInt3;
  KslTypeInt4.prototype = Object.create(KslIntType.prototype);
  KslTypeInt4.prototype.constructor = KslTypeInt4;
  KslTypeMat2.prototype = Object.create(KslFloatType.prototype);
  KslTypeMat2.prototype.constructor = KslTypeMat2;
  KslTypeMat3.prototype = Object.create(KslFloatType.prototype);
  KslTypeMat3.prototype.constructor = KslTypeMat3;
  KslTypeColorSampler1d.prototype = Object.create(KslTypeColorSampler.prototype);
  KslTypeColorSampler1d.prototype.constructor = KslTypeColorSampler1d;
  KslTypeColorSamplerCube.prototype = Object.create(KslTypeColorSampler.prototype);
  KslTypeColorSamplerCube.prototype.constructor = KslTypeColorSamplerCube;
  KslTypeDepthSampler.prototype = Object.create(KslTypeSampler.prototype);
  KslTypeDepthSampler.prototype.constructor = KslTypeDepthSampler;
  KslTypeDepthSampler2d.prototype = Object.create(KslTypeDepthSampler.prototype);
  KslTypeDepthSampler2d.prototype.constructor = KslTypeDepthSampler2d;
  KslTypeDepthSamplerCube.prototype = Object.create(KslTypeDepthSampler.prototype);
  KslTypeDepthSamplerCube.prototype.constructor = KslTypeDepthSamplerCube;
  KslTypeArray.prototype = Object.create(KslType.prototype);
  KslTypeArray.prototype.constructor = KslTypeArray;
  KslBoolType.prototype = Object.create(KslType.prototype);
  KslBoolType.prototype.constructor = KslBoolType;
  KslTypeVoid.prototype = Object.create(KslType.prototype);
  KslTypeVoid.prototype.constructor = KslTypeVoid;
  KslTypeColorSampler2dArray.prototype = Object.create(KslTypeColorSampler.prototype);
  KslTypeColorSampler2dArray.prototype.constructor = KslTypeColorSampler2dArray;
  KslTypeColorSamplerCubeArray.prototype = Object.create(KslTypeColorSampler.prototype);
  KslTypeColorSamplerCubeArray.prototype.constructor = KslTypeColorSamplerCubeArray;
  KslTypeUint1.prototype = Object.create(KslIntType.prototype);
  KslTypeUint1.prototype.constructor = KslTypeUint1;
  KslTypeUint2.prototype = Object.create(KslIntType.prototype);
  KslTypeUint2.prototype.constructor = KslTypeUint2;
  KslTypeUint3.prototype = Object.create(KslIntType.prototype);
  KslTypeUint3.prototype.constructor = KslTypeUint3;
  KslTypeUint4.prototype = Object.create(KslIntType.prototype);
  KslTypeUint4.prototype.constructor = KslTypeUint4;
  KslTypeBool1.prototype = Object.create(KslBoolType.prototype);
  KslTypeBool1.prototype.constructor = KslTypeBool1;
  KslTypeBool2.prototype = Object.create(KslBoolType.prototype);
  KslTypeBool2.prototype.constructor = KslTypeBool2;
  KslTypeBool3.prototype = Object.create(KslBoolType.prototype);
  KslTypeBool3.prototype.constructor = KslTypeBool3;
  KslTypeBool4.prototype = Object.create(KslBoolType.prototype);
  KslTypeBool4.prototype.constructor = KslTypeBool4;
  KslTypeDepthSampler2dArray.prototype = Object.create(KslTypeDepthSampler.prototype);
  KslTypeDepthSampler2dArray.prototype.constructor = KslTypeDepthSampler2dArray;
  KslTypeDepthSamplerCubeArray.prototype = Object.create(KslTypeDepthSampler.prototype);
  KslTypeDepthSamplerCubeArray.prototype.constructor = KslTypeDepthSamplerCubeArray;
  KslUniformMatrix.prototype = Object.create(KslUniform.prototype);
  KslUniformMatrix.prototype.constructor = KslUniformMatrix;
  KslUniformScalar.prototype = Object.create(KslUniform.prototype);
  KslUniformScalar.prototype.constructor = KslUniformScalar;
  KslUniformVector.prototype = Object.create(KslUniform.prototype);
  KslUniformVector.prototype.constructor = KslUniformVector;
  KslValueFloat4.prototype = Object.create(KslValueExpression.prototype);
  KslValueFloat4.prototype.constructor = KslValueFloat4;
  KslValueFloat1.prototype = Object.create(KslValueExpression.prototype);
  KslValueFloat1.prototype.constructor = KslValueFloat1;
  KslValueFloat2.prototype = Object.create(KslValueExpression.prototype);
  KslValueFloat2.prototype.constructor = KslValueFloat2;
  KslValueInt3.prototype = Object.create(KslValueExpression.prototype);
  KslValueInt3.prototype.constructor = KslValueInt3;
  KslValueInt1.prototype = Object.create(KslValueExpression.prototype);
  KslValueInt1.prototype.constructor = KslValueInt1;
  KslValueFloat3.prototype = Object.create(KslValueExpression.prototype);
  KslValueFloat3.prototype.constructor = KslValueFloat3;
  KslValueUint1.prototype = Object.create(KslValueExpression.prototype);
  KslValueUint1.prototype.constructor = KslValueUint1;
  KslVar.prototype = Object.create(KslValue.prototype);
  KslVar.prototype.constructor = KslVar;
  KslVarMatrix.prototype = Object.create(KslVar.prototype);
  KslVarMatrix.prototype.constructor = KslVarMatrix;
  KslVarVector.prototype = Object.create(KslVar.prototype);
  KslVarVector.prototype.constructor = KslVarVector;
  KslVarScalar.prototype = Object.create(KslVar.prototype);
  KslVarScalar.prototype.constructor = KslVarScalar;
  KslVectorAccessorVector.prototype = Object.create(KslVectorAccessor.prototype);
  KslVectorAccessorVector.prototype.constructor = KslVectorAccessorVector;
  KslVectorAccessorScalar.prototype = Object.create(KslVectorAccessor.prototype);
  KslVectorAccessorScalar.prototype.constructor = KslVectorAccessorScalar;
  KslVertexAttributeVector.prototype = Object.create(KslVertexAttribute.prototype);
  KslVertexAttributeVector.prototype.constructor = KslVertexAttributeVector;
  KslVertexAttributeMatrix.prototype = Object.create(KslVertexAttribute.prototype);
  KslVertexAttributeMatrix.prototype.constructor = KslVertexAttributeMatrix;
  KslInputRate.prototype = Object.create(Enum.prototype);
  KslInputRate.prototype.constructor = KslInputRate;
  MutableStateValue.prototype = Object.create(MutableState.prototype);
  MutableStateValue.prototype.constructor = MutableStateValue;
  AnimationState.prototype = Object.create(MutableStateValue.prototype);
  AnimationState.prototype.constructor = AnimationState;
  function get_dp(_this__u8e3s4) {
    return _Dp___init__impl__ms3zkb(_this__u8e3s4);
  }
  function use(_this__u8e3s4) {
    return _this__u8e3s4.g3s(this.j3u());
  }
  function progressAndUse(_this__u8e3s4) {
    _this__u8e3s4.f3s(Time_getInstance().y20_1);
    return _this__u8e3s4.g3s(this.j3u());
  }
  BoxNode.prototype = Object.create(UiNode.prototype);
  BoxNode.prototype.constructor = BoxNode;
  RowNode.prototype = Object.create(BoxNode.prototype);
  RowNode.prototype.constructor = RowNode;
  CachedTextGeometry.prototype = Object.create(CachedGeometry.prototype);
  CachedTextGeometry.prototype.constructor = CachedTextGeometry;
  function onFocusGain() {
  }
  function onFocusLost() {
  }
  Model_0.prototype = Object.create(KslProgram.prototype);
  Model_0.prototype.constructor = Model_0;
  MsdfUiShader.prototype = Object.create(KslShader.prototype);
  MsdfUiShader.prototype.constructor = MsdfUiShader;
  function onClick(ev) {
  }
  TextModifier.prototype = Object.create(UiModifier.prototype);
  TextModifier.prototype.constructor = TextModifier;
  TextNode.prototype = Object.create(UiNode.prototype);
  TextNode.prototype.constructor = TextNode;
  ToggleModifier.prototype = Object.create(UiModifier.prototype);
  ToggleModifier.prototype.constructor = ToggleModifier;
  SwitchModifier.prototype = Object.create(ToggleModifier.prototype);
  SwitchModifier.prototype.constructor = SwitchModifier;
  ToggleNode.prototype = Object.create(UiNode.prototype);
  ToggleNode.prototype.constructor = ToggleNode;
  SwitchNode.prototype = Object.create(ToggleNode.prototype);
  SwitchNode.prototype.constructor = SwitchNode;
  Model_1.prototype = Object.create(KslProgram.prototype);
  Model_1.prototype.constructor = Model_1;
  Ui2Shader.prototype = Object.create(KslShader.prototype);
  Ui2Shader.prototype.constructor = Ui2Shader;
  ListPropertyHolder.prototype = Object.create(PropertyHolder.prototype);
  ListPropertyHolder.prototype.constructor = ListPropertyHolder;
  AlignmentY.prototype = Object.create(Enum.prototype);
  AlignmentY.prototype.constructor = AlignmentY;
  AlignmentX.prototype = Object.create(Enum.prototype);
  AlignmentX.prototype.constructor = AlignmentX;
  Model_2.prototype = Object.create(KslProgram.prototype);
  Model_2.prototype.constructor = Model_2;
  PrimitiveShader.prototype = Object.create(KslShader.prototype);
  PrimitiveShader.prototype.constructor = PrimitiveShader;
  Mesh.prototype = Object.create(Node.prototype);
  Mesh.prototype.constructor = Mesh;
  UiPrimitiveMesh.prototype = Object.create(Mesh.prototype);
  UiPrimitiveMesh.prototype.constructor = UiPrimitiveMesh;
  InputCaptureMode.prototype = Object.create(Enum.prototype);
  InputCaptureMode.prototype.constructor = InputCaptureMode;
  UiInputHandler.prototype = Object.create(InputHandler.prototype);
  UiInputHandler.prototype.constructor = UiInputHandler;
  Group.prototype = Object.create(Node.prototype);
  Group.prototype.constructor = Group;
  MeshLayer.prototype = Object.create(Group.prototype);
  MeshLayer.prototype.constructor = MeshLayer;
  UiSurface.prototype = Object.create(Group.prototype);
  UiSurface.prototype.constructor = UiSurface;
  GlslType.prototype = Object.create(Enum.prototype);
  GlslType.prototype.constructor = GlslType;
  Std140BufferLayout.prototype = Object.create(BufferLayout.prototype);
  Std140BufferLayout.prototype.constructor = Std140BufferLayout;
  ExternalBufferLayout.prototype = Object.create(BufferLayout.prototype);
  ExternalBufferLayout.prototype.constructor = ExternalBufferLayout;
  Builder.prototype = Object.create(Builder_4.prototype);
  Builder.prototype.constructor = Builder;
  TextureSampler1d.prototype = Object.create(Descriptor.prototype);
  TextureSampler1d.prototype.constructor = TextureSampler1d;
  Builder_0.prototype = Object.create(Builder_4.prototype);
  Builder_0.prototype.constructor = Builder_0;
  TextureSampler2d.prototype = Object.create(Descriptor.prototype);
  TextureSampler2d.prototype.constructor = TextureSampler2d;
  Builder_1.prototype = Object.create(Builder_4.prototype);
  Builder_1.prototype.constructor = Builder_1;
  TextureSampler3d.prototype = Object.create(Descriptor.prototype);
  TextureSampler3d.prototype.constructor = TextureSampler3d;
  Builder_2.prototype = Object.create(Builder_4.prototype);
  Builder_2.prototype.constructor = Builder_2;
  TextureSamplerCube.prototype = Object.create(Descriptor.prototype);
  TextureSamplerCube.prototype.constructor = TextureSamplerCube;
  Builder_5.prototype = Object.create(Builder_4.prototype);
  Builder_5.prototype.constructor = Builder_5;
  UniformBuffer.prototype = Object.create(Descriptor.prototype);
  UniformBuffer.prototype.constructor = UniformBuffer;
  DescriptorType.prototype = Object.create(Enum.prototype);
  DescriptorType.prototype.constructor = DescriptorType;
  RenderTarget.prototype = Object.create(Enum.prototype);
  RenderTarget.prototype.constructor = RenderTarget;
  OffscreenRenderPass.prototype = Object.create(RenderPass.prototype);
  OffscreenRenderPass.prototype.constructor = OffscreenRenderPass;
  OffscreenRenderPass2d.prototype = Object.create(OffscreenRenderPass.prototype);
  OffscreenRenderPass2d.prototype.constructor = OffscreenRenderPass2d;
  OffscreenRenderPass2dPingPong.prototype = Object.create(OffscreenRenderPass.prototype);
  OffscreenRenderPass2dPingPong.prototype.constructor = OffscreenRenderPass2dPingPong;
  ViewDirection.prototype = Object.create(Enum.prototype);
  ViewDirection.prototype.constructor = ViewDirection;
  OffscreenRenderPassCube.prototype = Object.create(OffscreenRenderPass.prototype);
  OffscreenRenderPassCube.prototype.constructor = OffscreenRenderPassCube;
  BlendMode.prototype = Object.create(Enum.prototype);
  BlendMode.prototype.constructor = BlendMode;
  CullMethod.prototype = Object.create(Enum.prototype);
  CullMethod.prototype.constructor = CullMethod;
  DepthCompareOp.prototype = Object.create(Enum.prototype);
  DepthCompareOp.prototype.constructor = DepthCompareOp;
  ScreenRenderPass.prototype = Object.create(RenderPass.prototype);
  ScreenRenderPass.prototype.constructor = ScreenRenderPass;
  ShaderStage.prototype = Object.create(Enum.prototype);
  ShaderStage.prototype.constructor = ShaderStage;
  TexFormat.prototype = Object.create(Enum.prototype);
  TexFormat.prototype.constructor = TexFormat;
  AddressMode.prototype = Object.create(Enum.prototype);
  AddressMode.prototype.constructor = AddressMode;
  FilterMethod.prototype = Object.create(Enum.prototype);
  FilterMethod.prototype.constructor = FilterMethod;
  Texture2d$_init_$slambda_64v0yn.prototype = Object.create(CoroutineImpl.prototype);
  Texture2d$_init_$slambda_64v0yn.prototype.constructor = Texture2d$_init_$slambda_64v0yn;
  Texture2d.prototype = Object.create(Texture.prototype);
  Texture2d.prototype.constructor = Texture2d;
  Texture3d.prototype = Object.create(Texture.prototype);
  Texture3d.prototype.constructor = Texture3d;
  TextureData2d.prototype = Object.create(TextureData.prototype);
  TextureData2d.prototype.constructor = TextureData2d;
  LoadingState.prototype = Object.create(Enum.prototype);
  LoadingState.prototype.constructor = LoadingState;
  BufferedTexture2d.prototype = Object.create(Texture2d.prototype);
  BufferedTexture2d.prototype.constructor = BufferedTexture2d;
  TextureDataCube.prototype = Object.create(TextureData.prototype);
  TextureDataCube.prototype.constructor = TextureDataCube;
  TextureCube.prototype = Object.create(Texture.prototype);
  TextureCube.prototype.constructor = TextureCube;
  Texture1d.prototype = Object.create(Texture.prototype);
  Texture1d.prototype.constructor = Texture1d;
  TextureData1d.prototype = Object.create(TextureData.prototype);
  TextureData1d.prototype.constructor = TextureData1d;
  SingleColorTexture.prototype = Object.create(Texture2d.prototype);
  SingleColorTexture.prototype.constructor = SingleColorTexture;
  TextureData3d.prototype = Object.create(TextureData.prototype);
  TextureData3d.prototype.constructor = TextureData3d;
  BufferedTextureLoader.prototype = Object.create(TextureLoader.prototype);
  BufferedTextureLoader.prototype.constructor = BufferedTextureLoader;
  AsyncTextureLoader$loadTextureDataAsync$slambda.prototype = Object.create(CoroutineImpl.prototype);
  AsyncTextureLoader$loadTextureDataAsync$slambda.prototype.constructor = AsyncTextureLoader$loadTextureDataAsync$slambda;
  AsyncTextureLoader.prototype = Object.create(TextureLoader.prototype);
  AsyncTextureLoader.prototype.constructor = AsyncTextureLoader;
  SyncTextureLoader.prototype = Object.create(TextureLoader.prototype);
  SyncTextureLoader.prototype.constructor = SyncTextureLoader;
  Uniform1f.prototype = Object.create(Uniform.prototype);
  Uniform1f.prototype.constructor = Uniform1f;
  Uniform2f.prototype = Object.create(Uniform.prototype);
  Uniform2f.prototype.constructor = Uniform2f;
  Uniform3f.prototype = Object.create(Uniform.prototype);
  Uniform3f.prototype.constructor = Uniform3f;
  Uniform4f.prototype = Object.create(Uniform.prototype);
  Uniform4f.prototype.constructor = Uniform4f;
  Uniform1i.prototype = Object.create(Uniform.prototype);
  Uniform1i.prototype.constructor = Uniform1i;
  Uniform2i.prototype = Object.create(Uniform.prototype);
  Uniform2i.prototype.constructor = Uniform2i;
  Uniform3i.prototype = Object.create(Uniform.prototype);
  Uniform3i.prototype.constructor = Uniform3i;
  Uniform4i.prototype = Object.create(Uniform.prototype);
  Uniform4i.prototype.constructor = Uniform4i;
  UniformMat3f.prototype = Object.create(Uniform.prototype);
  UniformMat3f.prototype.constructor = UniformMat3f;
  UniformMat4f.prototype = Object.create(Uniform.prototype);
  UniformMat4f.prototype.constructor = UniformMat4f;
  Uniform1fv.prototype = Object.create(Uniform.prototype);
  Uniform1fv.prototype.constructor = Uniform1fv;
  Uniform2fv.prototype = Object.create(Uniform.prototype);
  Uniform2fv.prototype.constructor = Uniform2fv;
  Uniform3fv.prototype = Object.create(Uniform.prototype);
  Uniform3fv.prototype.constructor = Uniform3fv;
  Uniform4fv.prototype = Object.create(Uniform.prototype);
  Uniform4fv.prototype.constructor = Uniform4fv;
  Uniform1iv.prototype = Object.create(Uniform.prototype);
  Uniform1iv.prototype.constructor = Uniform1iv;
  Uniform2iv.prototype = Object.create(Uniform.prototype);
  Uniform2iv.prototype.constructor = Uniform2iv;
  Uniform3iv.prototype = Object.create(Uniform.prototype);
  Uniform3iv.prototype.constructor = Uniform3iv;
  Uniform4iv.prototype = Object.create(Uniform.prototype);
  Uniform4iv.prototype.constructor = Uniform4iv;
  UniformMat3fv.prototype = Object.create(Uniform.prototype);
  UniformMat3fv.prototype.constructor = UniformMat3fv;
  UniformMat4fv.prototype = Object.create(Uniform.prototype);
  UniformMat4fv.prototype.constructor = UniformMat4fv;
  UniformColor_0.prototype = Object.create(Uniform.prototype);
  UniformColor_0.prototype.constructor = UniformColor_0;
  InputRate.prototype = Object.create(Enum.prototype);
  InputRate.prototype.constructor = InputRate;
  BrdfLutPass.prototype = Object.create(OffscreenRenderPass2d.prototype);
  BrdfLutPass.prototype.constructor = BrdfLutPass;
  Hammersley.prototype = Object.create(KslFunction.prototype);
  Hammersley.prototype.constructor = Hammersley;
  ImportanceSampleGgx.prototype = Object.create(KslFunction.prototype);
  ImportanceSampleGgx.prototype.constructor = ImportanceSampleGgx;
  Camera.prototype = Object.create(Node.prototype);
  Camera.prototype.constructor = Camera;
  OrthographicCamera.prototype = Object.create(Camera.prototype);
  OrthographicCamera.prototype.constructor = OrthographicCamera;
  ProjCorrectionMode.prototype = Object.create(Enum.prototype);
  ProjCorrectionMode.prototype.constructor = ProjCorrectionMode;
  PerspectiveCamera.prototype = Object.create(Camera.prototype);
  PerspectiveCamera.prototype.constructor = PerspectiveCamera;
  Type.prototype = Object.create(Enum.prototype);
  Type.prototype.constructor = Type;
  function onMeshDataChanged(mesh) {
  }
  Scene.prototype = Object.create(Group.prototype);
  Scene.prototype.constructor = Scene;
  InverseSquareAnimator.prototype = Object.create(Animator.prototype);
  InverseSquareAnimator.prototype.constructor = InverseSquareAnimator;
  InterpolatedFloat.prototype = Object.create(InterpolatedValue.prototype);
  InterpolatedFloat.prototype.constructor = InterpolatedFloat;
  CosAnimator.prototype = Object.create(Animator.prototype);
  CosAnimator.prototype.constructor = CosAnimator;
  LinearAnimator.prototype = Object.create(Animator.prototype);
  LinearAnimator.prototype.constructor = LinearAnimator;
  PrimitiveType.prototype = Object.create(Enum.prototype);
  PrimitiveType.prototype.constructor = PrimitiveType;
  Usage.prototype = Object.create(Enum.prototype);
  Usage.prototype.constructor = Usage;
  Vec2fView.prototype = Object.create(MutableVec2f.prototype);
  Vec2fView.prototype.constructor = Vec2fView;
  Vec3fView.prototype = Object.create(MutableVec3f.prototype);
  Vec3fView.prototype.constructor = Vec3fView;
  Vec4fView.prototype = Object.create(MutableVec4f.prototype);
  Vec4fView.prototype.constructor = Vec4fView;
  Color.prototype = Object.create(Vec4f.prototype);
  Color.prototype.constructor = Color;
  MutableColor.prototype = Object.create(Color.prototype);
  MutableColor.prototype.constructor = MutableColor;
  ColorWrapView.prototype = Object.create(MutableColor.prototype);
  ColorWrapView.prototype.constructor = ColorWrapView;
  Vec2iView.prototype = Object.create(MutableVec2i.prototype);
  Vec2iView.prototype.constructor = Vec2iView;
  Vec3iView.prototype = Object.create(MutableVec3i.prototype);
  Vec3iView.prototype.constructor = Vec3iView;
  Vec4iView.prototype = Object.create(MutableVec4i.prototype);
  Vec4iView.prototype.constructor = Vec4iView;
  VertexView.prototype = Object.create(MutableVec3f.prototype);
  VertexView.prototype.constructor = VertexView;
  AtlasFont.prototype = Object.create(Font.prototype);
  AtlasFont.prototype.constructor = AtlasFont;
  function toArray() {
    var array = new Int8Array(this.b1w());
    var inductionVariable = 0;
    var last = this.b1w();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        array[i] = this.r(i);
      }
       while (inductionVariable < last);
    return array;
  }
  function plusAssign(value) {
    this.t4j(value);
  }
  function put(data) {
    return this.g5n(data, 0, data.length);
  }
  function plusAssign_0(value) {
    this.x3w(value);
  }
  function putInt32(value) {
    return this.h5n(value);
  }
  function putInt32_0(data) {
    return this.i5n(data);
  }
  function putUint32(data) {
    return this.j5n(data, 0, data.length);
  }
  function putFloat32(data) {
    return this.o58(data, 0, data.length);
  }
  Level.prototype = Object.create(Enum.prototype);
  Level.prototype.constructor = Level;
  MsdfFont.prototype = Object.create(Font.prototype);
  MsdfFont.prototype.constructor = MsdfFont;
  ClipState.prototype = Object.create(Enum.prototype);
  ClipState.prototype.constructor = ClipState;
  ImageAtlasTextureData.prototype = Object.create(TextureData.prototype);
  ImageAtlasTextureData.prototype.constructor = ImageAtlasTextureData;
  ImageTextureData.prototype = Object.create(TextureData.prototype);
  ImageTextureData.prototype.constructor = ImageTextureData;
  JsAssetManager$loadAndPrepareTexture$slambda.prototype = Object.create(CoroutineImpl.prototype);
  JsAssetManager$loadAndPrepareTexture$slambda.prototype.constructor = JsAssetManager$loadAndPrepareTexture$slambda;
  $loadRawCOROUTINE$7.prototype = Object.create(CoroutineImpl.prototype);
  $loadRawCOROUTINE$7.prototype.constructor = $loadRawCOROUTINE$7;
  $loadTextureCOROUTINE$8.prototype = Object.create(CoroutineImpl.prototype);
  $loadTextureCOROUTINE$8.prototype.constructor = $loadTextureCOROUTINE$8;
  $loadImageCOROUTINE$9.prototype = Object.create(CoroutineImpl.prototype);
  $loadImageCOROUTINE$9.prototype.constructor = $loadImageCOROUTINE$9;
  $loadAndPrepareTextureCOROUTINE$13.prototype = Object.create(CoroutineImpl.prototype);
  $loadAndPrepareTextureCOROUTINE$13.prototype.constructor = $loadAndPrepareTextureCOROUTINE$13;
  JsAssetManager.prototype = Object.create(AssetManager.prototype);
  JsAssetManager.prototype.constructor = JsAssetManager;
  JsContext.prototype = Object.create(KoolContext.prototype);
  JsContext.prototype.constructor = JsContext;
  JsInputManager.prototype = Object.create(InputManager.prototype);
  JsInputManager.prototype.constructor = JsInputManager;
  MappedUniformTex1d.prototype = Object.create(MappedUniformTex.prototype);
  MappedUniformTex1d.prototype.constructor = MappedUniformTex1d;
  MappedUniformTex2d.prototype = Object.create(MappedUniformTex.prototype);
  MappedUniformTex2d.prototype.constructor = MappedUniformTex2d;
  MappedUniformTex3d.prototype = Object.create(MappedUniformTex.prototype);
  MappedUniformTex3d.prototype.constructor = MappedUniformTex3d;
  MappedUniformTexCube.prototype = Object.create(MappedUniformTex.prototype);
  MappedUniformTexCube.prototype.constructor = MappedUniformTexCube;
  ShaderGeneratorImplWebGl.prototype = Object.create(ShaderGenerator.prototype);
  ShaderGeneratorImplWebGl.prototype.constructor = ShaderGeneratorImplWebGl;
  Uint8BufferImpl.prototype = Object.create(GenericBuffer.prototype);
  Uint8BufferImpl.prototype.constructor = Uint8BufferImpl;
  Float32BufferImpl.prototype = Object.create(GenericBuffer.prototype);
  Float32BufferImpl.prototype.constructor = Float32BufferImpl;
  Uint32BufferImpl.prototype = Object.create(GenericBuffer.prototype);
  Uint32BufferImpl.prototype.constructor = Uint32BufferImpl;
  MixedBufferImpl.prototype = Object.create(GenericBuffer.prototype);
  MixedBufferImpl.prototype.constructor = MixedBufferImpl;
  Uint16BufferImpl.prototype = Object.create(GenericBuffer.prototype);
  Uint16BufferImpl.prototype.constructor = Uint16BufferImpl;
  //endregion
  function ApplicationCallbacks() {
  }
  ApplicationCallbacks.$metadata$ = interfaceMeta('ApplicationCallbacks');
  function AwaitedAsset_init_$Init$($outer, ref, awaiting, $mask0, $marker, $this) {
    if (!(($mask0 & 4) === 0))
      awaiting = CompletableDeferred($outer.o1r_1);
    AwaitedAsset.call($this, $outer, ref, awaiting);
    return $this;
  }
  function AwaitedAsset_init_$Create$($outer, ref, awaiting, $mask0, $marker) {
    return AwaitedAsset_init_$Init$($outer, ref, awaiting, $mask0, $marker, Object.create(AwaitedAsset.prototype));
  }
  function AssetManager$loader$slambda$slambda($requested, $this_launch, resultContinuation) {
    this.d1s_1 = $requested;
    this.e1s_1 = $this_launch;
    CoroutineImpl.call(this, resultContinuation);
  }
  AssetManager$loader$slambda$slambda.prototype.j1s = function (awaited, $cont) {
    var tmp = this.k1s(awaited, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  AssetManager$loader$slambda$slambda.prototype.s7 = function (p1, $cont) {
    return this.j1s(p1 instanceof AwaitedAsset ? p1 : THROW_CCE(), $cont);
  };
  AssetManager$loader$slambda$slambda.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 3;
            this.g1s_1 = this.d1s_1.b3(this.f1s_1.l1s_1);
            if (this.g1s_1 == null) {
              var tmp_0 = this;
              tmp_0.h1s_1 = this.f1s_1.l1s_1;
              var tmp_1 = this;
              tmp_1.i1s_1 = mutableListOf([this.f1s_1]);
              this.d1s_1.a(this.h1s_1, this.i1s_1);
              this.k7_1 = 1;
              suspendResult = this.e1s_1.q1r_1.z1l(this.f1s_1.l1s_1, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.g1s_1.b(this.f1s_1);
              this.k7_1 = 2;
              continue $sm;
            }

            break;
          case 1:
            this.k7_1 = 2;
            continue $sm;
          case 2:
            return Unit_getInstance();
          case 3:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 3) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  AssetManager$loader$slambda$slambda.prototype.k1s = function (awaited, completion) {
    var i = new AssetManager$loader$slambda$slambda(this.d1s_1, this.e1s_1, completion);
    i.f1s_1 = awaited;
    return i;
  };
  AssetManager$loader$slambda$slambda.$metadata$ = classMeta('AssetManager$loader$slambda$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function AssetManager$loader$slambda$slambda_0($requested, $this_launch, resultContinuation) {
    var i = new AssetManager$loader$slambda$slambda($requested, $this_launch, resultContinuation);
    var l = function (awaited, $cont) {
      return i.j1s(awaited, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function AssetManager$loader$slambda$slambda_1($requested, resultContinuation) {
    this.w1s_1 = $requested;
    CoroutineImpl.call(this, resultContinuation);
  }
  AssetManager$loader$slambda$slambda_1.prototype.y1s = function (loaded, $cont) {
    var tmp = this.z1s(loaded, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  AssetManager$loader$slambda$slambda_1.prototype.s7 = function (p1, $cont) {
    return this.y1s(p1 instanceof LoadedAsset ? p1 : THROW_CCE(), $cont);
  };
  AssetManager$loader$slambda$slambda_1.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        if (tmp === 0) {
          this.l7_1 = 1;
          var awaiting = ensureNotNull(this.w1s_1.tf(this.x1s_1.a1t_1));
          var tmp0_iterator = awaiting.h();
          while (tmp0_iterator.n()) {
            var awaited = tmp0_iterator.o();
            awaited.m1s_1.t1c(this.x1s_1);
          }
          return Unit_getInstance();
        } else if (tmp === 1) {
          throw this.n7_1;
        }
      } catch ($p) {
        throw $p;
      }
     while (true);
  };
  AssetManager$loader$slambda$slambda_1.prototype.z1s = function (loaded, completion) {
    var i = new AssetManager$loader$slambda$slambda_1(this.w1s_1, completion);
    i.x1s_1 = loaded;
    return i;
  };
  AssetManager$loader$slambda$slambda_1.$metadata$ = classMeta('AssetManager$loader$slambda$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function AssetManager$loader$slambda$slambda_2($requested, resultContinuation) {
    var i = new AssetManager$loader$slambda$slambda_1($requested, resultContinuation);
    var l = function (loaded, $cont) {
      return i.y1s(loaded, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function loadWorker($this, assetRefs, loadedAssets) {
    return $this.c1t(AssetManager$loadWorker$slambda_0(assetRefs, loadedAssets, null));
  }
  function loadAsset($this, ref, $cont) {
    var tmp = new $loadAssetCOROUTINE$0($this, ref, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  }
  function AwaitedAsset($outer, ref, awaiting) {
    this.n1s_1 = $outer;
    this.l1s_1 = ref;
    this.m1s_1 = awaiting;
  }
  AwaitedAsset.$metadata$ = classMeta('AwaitedAsset');
  function Companion() {
    Companion_instance = this;
    this.p1t_1 = 8;
  }
  Companion.$metadata$ = objectMeta('Companion');
  var Companion_instance;
  function Companion_getInstance() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function AssetManager$loader$slambda(resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
  }
  AssetManager$loader$slambda.prototype.c1u = function ($this$launch, $cont) {
    var tmp = this.d1u($this$launch, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  AssetManager$loader$slambda.prototype.s7 = function (p1, $cont) {
    return this.c1u(p1 instanceof AssetManager ? p1 : THROW_CCE(), $cont);
  };
  AssetManager$loader$slambda.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 3;
            var tmp_0 = this;
            tmp_0.z1t_1 = LinkedHashMap_init_$Create$();
            this.k7_1 = 1;
            continue $sm;
          case 1:
            if (false) {}

            this.k7_1 = 2;
            var tmp_1 = this;
            tmp_1.a1u_1 = this;
            this.b1u_1 = new SelectBuilderImpl(this.a1u_1);
            try {
              var tmp_2 = this.y1t_1.p1r_1.u1l();
              this.b1u_1.s1o(tmp_2, AssetManager$loader$slambda$slambda_0(this.z1t_1, this.y1t_1, null));
              var tmp_3 = this.y1t_1.r1r_1.u1l();
              this.b1u_1.s1o(tmp_3, AssetManager$loader$slambda$slambda_2(this.z1t_1, null));
            } catch ($p) {
              if ($p instanceof Error) {
                this.b1u_1.s1p($p);
              } else {
                throw $p;
              }
            }

            suspendResult = returnIfSuspended(this.b1u_1.i1c(), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.k7_1 = 1;
            continue $sm;
          case 3:
            throw this.n7_1;
          case 4:
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this.l7_1 === 3) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  AssetManager$loader$slambda.prototype.d1u = function ($this$launch, completion) {
    var i = new AssetManager$loader$slambda(completion);
    i.y1t_1 = $this$launch;
    return i;
  };
  AssetManager$loader$slambda.$metadata$ = classMeta('AssetManager$loader$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function AssetManager$loader$slambda_0(resultContinuation) {
    var i = new AssetManager$loader$slambda(resultContinuation);
    var l = function ($this$launch, $cont) {
      return i.c1u($this$launch, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function AssetManager$loadWorker$slambda($assetRefs, $loadedAssets, resultContinuation) {
    this.m1u_1 = $assetRefs;
    this.n1u_1 = $loadedAssets;
    CoroutineImpl.call(this, resultContinuation);
  }
  AssetManager$loadWorker$slambda.prototype.c1u = function ($this$launch, $cont) {
    var tmp = this.d1u($this$launch, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  AssetManager$loadWorker$slambda.prototype.s7 = function (p1, $cont) {
    return this.c1u(p1 instanceof AssetManager ? p1 : THROW_CCE(), $cont);
  };
  AssetManager$loadWorker$slambda.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 6;
            this.p1u_1 = this.m1u_1.h();
            this.k7_1 = 1;
            continue $sm;
          case 1:
            this.k7_1 = 2;
            suspendResult = this.p1u_1.l1k(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            if (!suspendResult) {
              this.k7_1 = 5;
              continue $sm;
            }

            this.q1u_1 = this.p1u_1.o();
            this.k7_1 = 3;
            suspendResult = loadAsset(this.o1u_1, this.q1u_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 3:
            this.r1u_1 = suspendResult;
            this.k7_1 = 4;
            suspendResult = this.n1u_1.z1l(this.r1u_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 4:
            this.k7_1 = 1;
            continue $sm;
          case 5:
            return Unit_getInstance();
          case 6:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 6) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  AssetManager$loadWorker$slambda.prototype.d1u = function ($this$launch, completion) {
    var i = new AssetManager$loadWorker$slambda(this.m1u_1, this.n1u_1, completion);
    i.o1u_1 = $this$launch;
    return i;
  };
  AssetManager$loadWorker$slambda.$metadata$ = classMeta('AssetManager$loadWorker$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function AssetManager$loadWorker$slambda_0($assetRefs, $loadedAssets, resultContinuation) {
    var i = new AssetManager$loadWorker$slambda($assetRefs, $loadedAssets, resultContinuation);
    var l = function ($this$launch, $cont) {
      return i.c1u($this$launch, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function AssetManager$launch$slambda($block, this$0, resultContinuation) {
    this.a1v_1 = $block;
    this.b1v_1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  AssetManager$launch$slambda.prototype.d1v = function ($this$launch, $cont) {
    var tmp = this.e1v($this$launch, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  AssetManager$launch$slambda.prototype.s7 = function (p1, $cont) {
    return this.d1v((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  AssetManager$launch$slambda.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 2;
            this.k7_1 = 1;
            suspendResult = this.a1v_1(this.b1v_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return Unit_getInstance();
          case 2:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 2) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  AssetManager$launch$slambda.prototype.e1v = function ($this$launch, completion) {
    var i = new AssetManager$launch$slambda(this.a1v_1, this.b1v_1, completion);
    i.c1v_1 = $this$launch;
    return i;
  };
  AssetManager$launch$slambda.$metadata$ = classMeta('AssetManager$launch$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function AssetManager$launch$slambda_0($block, this$0, resultContinuation) {
    var i = new AssetManager$launch$slambda($block, this$0, resultContinuation);
    var l = function ($this$launch, $cont) {
      return i.d1v($this$launch, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function $loadAssetCOROUTINE$0(_this__u8e3s4, ref, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.l1t_1 = _this__u8e3s4;
    this.m1t_1 = ref;
  }
  $loadAssetCOROUTINE$0.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 4;
            this.n1t_1 = this.m1t_1;
            var tmp_0 = this.n1t_1;
            if (tmp_0 instanceof RawAssetRef) {
              this.k7_1 = 2;
              suspendResult = this.l1t_1.g1v(this.m1t_1, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              var tmp_1 = this.n1t_1;
              if (tmp_1 instanceof TextureAssetRef) {
                this.k7_1 = 1;
                suspendResult = this.l1t_1.f1v(this.m1t_1, this);
                if (suspendResult === get_COROUTINE_SUSPENDED()) {
                  return suspendResult;
                }
                continue $sm;
              } else {
                var tmp_2 = this;
                noWhenBranchMatchedException();
              }
            }

            break;
          case 1:
            this.o1t_1 = suspendResult;
            this.k7_1 = 3;
            continue $sm;
          case 2:
            this.o1t_1 = suspendResult;
            this.k7_1 = 3;
            continue $sm;
          case 3:
            return this.o1t_1;
          case 4:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 4) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  $loadAssetCOROUTINE$0.$metadata$ = classMeta('$loadAssetCOROUTINE$0', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $loadAssetCOROUTINE$1(_this__u8e3s4, assetPath, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.p1v_1 = _this__u8e3s4;
    this.q1v_1 = assetPath;
  }
  $loadAssetCOROUTINE$1.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 3;
            this.r1v_1 = this.p1v_1.t1v(this.q1v_1);
            var tmp_0 = this;
            tmp_0.s1v_1 = AwaitedAsset_init_$Create$(this.p1v_1, this.r1v_1, null, 4, null);
            this.k7_1 = 1;
            suspendResult = this.p1v_1.p1r_1.z1l(this.s1v_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.k7_1 = 2;
            suspendResult = this.s1v_1.m1s_1.v1c(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            var loaded = suspendResult instanceof LoadedRawAsset ? suspendResult : THROW_CCE();
            var tmp0_safe_receiver = loaded.w1v_1;
            if (tmp0_safe_receiver == null)
              null;
            else {
              var tmp2_dExt = Log_getInstance();
              var tmp1_logExt = Level_DEBUG_getInstance();
              var tmp0_log = getKClassFromExpression(this.p1v_1).ei();
              if (tmp1_logExt.e1w_1 >= tmp2_dExt.y1v_1.e1w_1) {
                var tmp_1 = tmp2_dExt.z1v_1;
                tmp_1(tmp1_logExt, tmp0_log, 'Loaded ' + this.p1v_1.a1w(this.q1v_1) + ' (' + toString_1(tmp0_safe_receiver.b1w() / 1024.0 / 1024.0, 1) + ' mb)');
              }
            }

            ;
            return loaded.w1v_1;
          case 3:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 3) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  $loadAssetCOROUTINE$1.$metadata$ = classMeta('$loadAssetCOROUTINE$1', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $loadTextureDataCOROUTINE$2(_this__u8e3s4, assetPath, format, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.o1w_1 = _this__u8e3s4;
    this.p1w_1 = assetPath;
    this.q1w_1 = format;
  }
  $loadTextureDataCOROUTINE$2.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 3;
            var tmp_0 = this;
            var tmp_1 = !this.o1w_1.t1w(this.p1w_1);
            tmp_0.r1w_1 = TextureAssetRef_init_$Create$(this.p1w_1, tmp_1, this.q1w_1, false, 0, 0, 48, null);
            var tmp_2 = this;
            tmp_2.s1w_1 = AwaitedAsset_init_$Create$(this.o1w_1, this.r1w_1, null, 4, null);
            this.k7_1 = 1;
            suspendResult = this.o1w_1.p1r_1.z1l(this.s1w_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.k7_1 = 2;
            suspendResult = this.s1w_1.m1s_1.v1c(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            var loaded = suspendResult instanceof LoadedTextureAsset ? suspendResult : THROW_CCE();
            var tmp0_safe_receiver = loaded.w1w_1;
            if (tmp0_safe_receiver == null)
              null;
            else {
              var tmp2_dExt = Log_getInstance();
              var tmp1_logExt = Level_DEBUG_getInstance();
              var tmp0_log = getKClassFromExpression(this.o1w_1).ei();
              if (tmp1_logExt.e1w_1 >= tmp2_dExt.y1v_1.e1w_1) {
                var tmp_3 = tmp2_dExt.z1v_1;
                tmp_3(tmp1_logExt, tmp0_log, 'Loaded ' + this.o1w_1.a1w(this.p1w_1) + ' (' + tmp0_safe_receiver.a1x_1 + ', ' + tmp0_safe_receiver.x1w_1 + 'x' + tmp0_safe_receiver.y1w_1 + ')');
              }
            }

            ;
            var tmp1_elvis_lhs = loaded.w1w_1;
            var tmp_4;
            if (tmp1_elvis_lhs == null) {
              throw KoolException_init_$Create$('Failed loading texture');
            } else {
              tmp_4 = tmp1_elvis_lhs;
            }

            return tmp_4;
          case 3:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 3) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  $loadTextureDataCOROUTINE$2.$metadata$ = classMeta('$loadTextureDataCOROUTINE$2', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $loadTextureAtlasDataCOROUTINE$3(_this__u8e3s4, assetPath, tilesX, tilesY, format, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.j1x_1 = _this__u8e3s4;
    this.k1x_1 = assetPath;
    this.l1x_1 = tilesX;
    this.m1x_1 = tilesY;
    this.n1x_1 = format;
  }
  $loadTextureAtlasDataCOROUTINE$3.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 3;
            this.o1x_1 = new TextureAssetRef(this.k1x_1, !this.j1x_1.t1w(this.k1x_1), this.n1x_1, true, this.l1x_1, this.m1x_1);
            var tmp_0 = this;
            tmp_0.p1x_1 = AwaitedAsset_init_$Create$(this.j1x_1, this.o1x_1, null, 4, null);
            this.k7_1 = 1;
            suspendResult = this.j1x_1.p1r_1.z1l(this.p1x_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.k7_1 = 2;
            suspendResult = this.p1x_1.m1s_1.v1c(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            var loaded = suspendResult instanceof LoadedTextureAsset ? suspendResult : THROW_CCE();
            var tmp0_safe_receiver = loaded.w1w_1;
            if (tmp0_safe_receiver == null)
              null;
            else {
              var tmp2_dExt = Log_getInstance();
              var tmp1_logExt = Level_DEBUG_getInstance();
              var tmp0_log = getKClassFromExpression(this.j1x_1).ei();
              if (tmp1_logExt.e1w_1 >= tmp2_dExt.y1v_1.e1w_1) {
                var tmp_1 = tmp2_dExt.z1v_1;
                tmp_1(tmp1_logExt, tmp0_log, 'Loaded ' + this.j1x_1.a1w(this.k1x_1) + ' (' + tmp0_safe_receiver.a1x_1 + ', ' + tmp0_safe_receiver.x1w_1 + 'x' + tmp0_safe_receiver.y1w_1 + 'x' + tmp0_safe_receiver.z1w_1 + ')');
              }
            }

            ;
            var tmp1_elvis_lhs = loaded.w1w_1;
            var tmp_2;
            if (tmp1_elvis_lhs == null) {
              throw KoolException_init_$Create$('Failed loading texture');
            } else {
              tmp_2 = tmp1_elvis_lhs;
            }

            return tmp_2;
          case 3:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 3) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  $loadTextureAtlasDataCOROUTINE$3.$metadata$ = classMeta('$loadTextureAtlasDataCOROUTINE$3', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function AssetManager() {
    Companion_getInstance();
    var tmp = this;
    tmp.o1r_1 = Job$default(null, 1, null);
    var tmp_0 = this;
    tmp_0.p1r_1 = Channel$default(0, null, null, 7, null);
    var tmp_1 = this;
    Factory_getInstance();
    tmp_1.q1r_1 = Channel$default(2147483647, null, null, 6, null);
    var tmp_2 = this;
    tmp_2.r1r_1 = Channel$default(0, null, null, 7, null);
    var tmp_3 = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$();
    }
    tmp_3.s1r_1 = tmp$ret$0;
    var tmp_4 = this;
    var tmp$ret$2;
    {
      Companion_getInstance();
      var tmp0_List = 8;
      var tmp$ret$1;
      {
        var list = ArrayList_init_$Create$(tmp0_List);
        {
          {
          }
          var inductionVariable = 0;
          if (inductionVariable < tmp0_List)
            do {
              var index = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              {
                {
                  loadWorker(this, this.q1r_1, this.r1r_1);
                }
                list.b(Unit_getInstance());
              }
            }
             while (inductionVariable < tmp0_List);
        }
        tmp$ret$1 = list;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    tmp_4.t1r_1 = tmp$ret$2;
    var tmp_5 = this;
    tmp_5.u1r_1 = this.c1t(AssetManager$loader$slambda_0(null));
  }
  AssetManager.prototype.j1f = function () {
    return this.o1r_1;
  };
  AssetManager.prototype.o17 = function () {
    return this.o1r_1;
  };
  AssetManager.prototype.q1x = function (font, fontScale) {
    var tmp$ret$1;
    {
      var tmp0_getOrPut = this.s1r_1;
      var value = tmp0_getOrPut.b3(font);
      var tmp;
      if (value == null) {
        var tmp$ret$0;
        {
          tmp$ret$0 = this.r1x(font, fontScale);
        }
        var answer = tmp$ret$0;
        tmp0_getOrPut.a(font, answer);
        tmp = answer;
      } else {
        tmp = value;
      }
      tmp$ret$1 = tmp;
    }
    return tmp$ret$1;
  };
  AssetManager.prototype.r1x = function (font, fontScale) {
    var map = font.b1y_1;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$();
    }
    var metrics = tmp$ret$0;
    var texData = this.d1y(font, fontScale, metrics);
    if (map == null) {
      var tex = new BufferedTexture2d(texData, font.z1x_1, font.toString());
      map = new FontMap(font, tex, metrics);
      font.c1y_1 = fontScale;
      font.b1y_1 = map;
    } else {
      var tmp = map.f1y_1;
      var tex_0 = tmp instanceof BufferedTexture2d ? tmp : null;
      if (!(tex_0 == null)) {
        tex_0.n1y(texData);
        font.c1y_1 = fontScale;
        map.o1y(metrics);
      } else {
        var tmp$ret$4;
        {
          var tmp$ret$3;
          {
            var tmp2_eExt = Log_getInstance();
            var tmp$ret$2;
            {
              var tmp1_logExt = Level_ERROR_getInstance();
              var tmp0_log = getKClassFromExpression(this).ei();
              var tmp_0;
              if (tmp1_logExt.e1w_1 >= tmp2_eExt.y1v_1.e1w_1) {
                var tmp_1 = tmp2_eExt.z1v_1;
                var tmp$ret$1;
                {
                  tmp$ret$1 = 'Unable to update texture data of font ' + font;
                }
                tmp_0 = tmp_1(tmp1_logExt, tmp0_log, tmp$ret$1);
              }
              tmp$ret$2 = tmp_0;
            }
            tmp$ret$3 = tmp$ret$2;
          }
          tmp$ret$4 = tmp$ret$3;
        }
      }
    }
    return map;
  };
  AssetManager.prototype.t1w = function (assetPath) {
    return (startsWith(assetPath, 'http://', true) ? true : startsWith(assetPath, 'https://', true)) ? true : startsWith(assetPath, 'data:', true);
  };
  AssetManager.prototype.c1t = function (block) {
    var tmp = isInterface(this, CoroutineScope) ? this : THROW_CCE();
    launch$default(tmp, null, null, AssetManager$launch$slambda_0(block, this, null), 3, null);
  };
  AssetManager.prototype.t1v = function (assetPath) {
    return new RawAssetRef(assetPath, !this.t1w(assetPath));
  };
  AssetManager.prototype.p1y = function (assetPath, $cont) {
    var tmp = new $loadAssetCOROUTINE$1(this, assetPath, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  AssetManager.prototype.q1y = function (assetPath, format, $cont) {
    var tmp = new $loadTextureDataCOROUTINE$2(this, assetPath, format, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  AssetManager.prototype.r1y = function (assetPath, format, $cont, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      format = null;
    return this.q1y(assetPath, format, $cont);
  };
  AssetManager.prototype.s1y = function (assetPath, tilesX, tilesY, format, $cont) {
    var tmp = new $loadTextureAtlasDataCOROUTINE$3(this, assetPath, tilesX, tilesY, format, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  AssetManager.prototype.a1w = function (assetPath) {
    var tmp;
    if (startsWith(assetPath, 'data:', true)) {
      var tmp_0 = _Char___init__impl__6a9atx(59);
      var idx = indexOf$default(assetPath, tmp_0, 0, false, 6, null);
      tmp = substring(assetPath, until(0, idx));
    } else {
      tmp = assetPath;
    }
    return tmp;
  };
  AssetManager.$metadata$ = classMeta('AssetManager', [CoroutineScope]);
  function AssetRef() {
  }
  AssetRef.$metadata$ = classMeta('AssetRef');
  function LoadedAsset(ref, successfull) {
    this.a1t_1 = ref;
    this.b1t_1 = successfull;
  }
  LoadedAsset.$metadata$ = classMeta('LoadedAsset');
  function RawAssetRef(url, isLocal) {
    AssetRef.call(this);
    this.v1y_1 = url;
    this.w1y_1 = isLocal;
  }
  RawAssetRef.prototype.x1y = function () {
    return this.v1y_1;
  };
  RawAssetRef.prototype.toString = function () {
    return 'RawAssetRef(url=' + this.v1y_1 + ', isLocal=' + this.w1y_1 + ')';
  };
  RawAssetRef.prototype.hashCode = function () {
    var result = getStringHashCode(this.v1y_1);
    result = imul(result, 31) + (this.w1y_1 | 0) | 0;
    return result;
  };
  RawAssetRef.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof RawAssetRef))
      return false;
    var tmp0_other_with_cast = other instanceof RawAssetRef ? other : THROW_CCE();
    if (!(this.v1y_1 === tmp0_other_with_cast.v1y_1))
      return false;
    if (!(this.w1y_1 === tmp0_other_with_cast.w1y_1))
      return false;
    return true;
  };
  RawAssetRef.$metadata$ = classMeta('RawAssetRef', undefined, undefined, undefined, undefined, AssetRef.prototype);
  function LoadedRawAsset(ref, data) {
    LoadedAsset.call(this, ref, !(data == null));
    this.w1v_1 = data;
  }
  LoadedRawAsset.$metadata$ = classMeta('LoadedRawAsset', undefined, undefined, undefined, undefined, LoadedAsset.prototype);
  function TextureAssetRef_init_$Init$(url, isLocal, fmt, isAtlas, tilesX, tilesY, $mask0, $marker, $this) {
    if (!(($mask0 & 16) === 0))
      tilesX = 1;
    if (!(($mask0 & 32) === 0))
      tilesY = 1;
    TextureAssetRef.call($this, url, isLocal, fmt, isAtlas, tilesX, tilesY);
    return $this;
  }
  function TextureAssetRef_init_$Create$(url, isLocal, fmt, isAtlas, tilesX, tilesY, $mask0, $marker) {
    return TextureAssetRef_init_$Init$(url, isLocal, fmt, isAtlas, tilesX, tilesY, $mask0, $marker, Object.create(TextureAssetRef.prototype));
  }
  function TextureAssetRef(url, isLocal, fmt, isAtlas, tilesX, tilesY) {
    AssetRef.call(this);
    this.y1y_1 = url;
    this.z1y_1 = isLocal;
    this.a1z_1 = fmt;
    this.b1z_1 = isAtlas;
    this.c1z_1 = tilesX;
    this.d1z_1 = tilesY;
  }
  TextureAssetRef.prototype.toString = function () {
    return 'TextureAssetRef(url=' + this.y1y_1 + ', isLocal=' + this.z1y_1 + ', fmt=' + this.a1z_1 + ', isAtlas=' + this.b1z_1 + ', tilesX=' + this.c1z_1 + ', tilesY=' + this.d1z_1 + ')';
  };
  TextureAssetRef.prototype.hashCode = function () {
    var result = getStringHashCode(this.y1y_1);
    result = imul(result, 31) + (this.z1y_1 | 0) | 0;
    result = imul(result, 31) + (this.a1z_1 == null ? 0 : this.a1z_1.hashCode()) | 0;
    result = imul(result, 31) + (this.b1z_1 | 0) | 0;
    result = imul(result, 31) + this.c1z_1 | 0;
    result = imul(result, 31) + this.d1z_1 | 0;
    return result;
  };
  TextureAssetRef.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof TextureAssetRef))
      return false;
    var tmp0_other_with_cast = other instanceof TextureAssetRef ? other : THROW_CCE();
    if (!(this.y1y_1 === tmp0_other_with_cast.y1y_1))
      return false;
    if (!(this.z1y_1 === tmp0_other_with_cast.z1y_1))
      return false;
    if (!equals(this.a1z_1, tmp0_other_with_cast.a1z_1))
      return false;
    if (!(this.b1z_1 === tmp0_other_with_cast.b1z_1))
      return false;
    if (!(this.c1z_1 === tmp0_other_with_cast.c1z_1))
      return false;
    if (!(this.d1z_1 === tmp0_other_with_cast.d1z_1))
      return false;
    return true;
  };
  TextureAssetRef.$metadata$ = classMeta('TextureAssetRef', undefined, undefined, undefined, undefined, AssetRef.prototype);
  function LoadedTextureAsset(ref, data) {
    LoadedAsset.call(this, ref, !(data == null));
    this.w1w_1 = data;
  }
  LoadedTextureAsset.$metadata$ = classMeta('LoadedTextureAsset', undefined, undefined, undefined, undefined, LoadedAsset.prototype);
  function EngineStats() {
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$();
    }
    tmp.e1z_1 = tmp$ret$0;
    this.f1z_1 = new Long(0, 0);
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = LinkedHashMap_init_$Create$();
    }
    tmp_0.g1z_1 = tmp$ret$1;
    this.h1z_1 = new Long(0, 0);
    var tmp_1 = this;
    var tmp$ret$2;
    {
      tmp$ret$2 = LinkedHashMap_init_$Create$();
    }
    tmp_1.i1z_1 = tmp$ret$2;
    this.j1z_1 = 0;
    this.k1z_1 = 0;
    this.l1z_1 = 0;
  }
  EngineStats.prototype.m1z = function (bufferId, size) {
    var tmp0_safe_receiver = this.e1z_1.a(bufferId, size);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      {
        {
        }
        var tmp0_this = this;
        var tmp = tmp0_this;
        var tmp$ret$0;
        {
          var tmp0_minus = tmp0_this.f1z_1;
          tmp$ret$0 = tmp0_minus.la(toLong(tmp0_safe_receiver));
        }
        tmp.f1z_1 = tmp$ret$0;
        tmp$ret$1 = Unit_getInstance();
      }
    }
    var tmp1_this = this;
    var tmp_0 = tmp1_this;
    var tmp$ret$2;
    {
      var tmp0_plus = tmp1_this.f1z_1;
      tmp$ret$2 = tmp0_plus.ka(toLong(size));
    }
    tmp_0.f1z_1 = tmp$ret$2;
  };
  EngineStats.prototype.n1z = function (bufferId) {
    var tmp0_safe_receiver = this.e1z_1.tf(bufferId);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      {
        {
        }
        var tmp0_this = this;
        var tmp = tmp0_this;
        var tmp$ret$0;
        {
          var tmp0_minus = tmp0_this.f1z_1;
          tmp$ret$0 = tmp0_minus.la(toLong(tmp0_safe_receiver));
        }
        tmp.f1z_1 = tmp$ret$0;
        tmp$ret$1 = Unit_getInstance();
      }
    }
  };
  EngineStats.prototype.o1z = function (textureId, size) {
    var tmp0_safe_receiver = this.g1z_1.a(textureId, size);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      {
        {
        }
        var tmp0_this = this;
        var tmp = tmp0_this;
        var tmp$ret$0;
        {
          var tmp0_minus = tmp0_this.h1z_1;
          tmp$ret$0 = tmp0_minus.la(toLong(tmp0_safe_receiver));
        }
        tmp.h1z_1 = tmp$ret$0;
        tmp$ret$1 = Unit_getInstance();
      }
    }
    var tmp1_this = this;
    var tmp_0 = tmp1_this;
    var tmp$ret$2;
    {
      var tmp0_plus = tmp1_this.h1z_1;
      tmp$ret$2 = tmp0_plus.ka(toLong(size));
    }
    tmp_0.h1z_1 = tmp$ret$2;
  };
  EngineStats.prototype.p1z = function (textureId) {
    var tmp0_safe_receiver = this.g1z_1.tf(textureId);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      {
        {
        }
        var tmp0_this = this;
        var tmp = tmp0_this;
        var tmp$ret$0;
        {
          var tmp0_minus = tmp0_this.h1z_1;
          tmp$ret$0 = tmp0_minus.la(toLong(tmp0_safe_receiver));
        }
        tmp.h1z_1 = tmp$ret$0;
        tmp$ret$1 = Unit_getInstance();
      }
    }
  };
  EngineStats.prototype.q1z = function (pipelineId) {
    var tmp$ret$1;
    {
      var tmp0_getOrElse = this.i1z_1;
      var tmp0_elvis_lhs = tmp0_getOrElse.b3(pipelineId);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 0;
        }
        tmp = tmp$ret$0;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      tmp$ret$1 = tmp;
    }
    var insts = tmp$ret$1 + 1 | 0;
    {
      var tmp1_set = this.i1z_1;
      tmp1_set.a(pipelineId, insts);
    }
    var tmp0_this = this;
    var tmp1 = tmp0_this.j1z_1;
    tmp0_this.j1z_1 = tmp1 + 1 | 0;
  };
  EngineStats.prototype.r1z = function (pipelineId) {
    var tmp$ret$1;
    {
      var tmp0_getOrElse = this.i1z_1;
      var tmp0_elvis_lhs = tmp0_getOrElse.b3(pipelineId);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 0;
        }
        tmp = tmp$ret$0;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      tmp$ret$1 = tmp;
    }
    var insts = tmp$ret$1 - 1 | 0;
    if (insts >= 0) {
      {
        var tmp1_set = this.i1z_1;
        tmp1_set.a(pipelineId, insts);
      }
      var tmp0_this = this;
      var tmp1 = tmp0_this.j1z_1;
      tmp0_this.j1z_1 = tmp1 - 1 | 0;
    }
  };
  EngineStats.prototype.s1z = function (pipelineId) {
    var tmp0_safe_receiver = this.i1z_1.tf(pipelineId);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        var tmp0_this = this;
        tmp0_this.j1z_1 = tmp0_this.j1z_1 - tmp0_safe_receiver | 0;
        tmp$ret$0 = Unit_getInstance();
      }
    }
  };
  EngineStats.prototype.t1z = function () {
    this.k1z_1 = 0;
    this.l1z_1 = 0;
  };
  EngineStats.prototype.u1z = function (nCommands) {
    var tmp0_this = this;
    tmp0_this.k1z_1 = tmp0_this.k1z_1 + nCommands | 0;
  };
  EngineStats.prototype.v1z = function (nPrimitives) {
    var tmp0_this = this;
    tmp0_this.l1z_1 = tmp0_this.l1z_1 + nPrimitives | 0;
  };
  EngineStats.$metadata$ = classMeta('EngineStats');
  function updateButtonDownTimes($this) {
    var downEvents = $this.g20_1 & $this.f20_1;
    var inductionVariable = 0;
    var last = $this.k20_1.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!((downEvents & 1 << i) === 0)) {
          $this.k20_1[i] = Time_getInstance().b21();
          $this.l20_1[i] = Time_getInstance().a21_1;
        }
      }
       while (inductionVariable <= last);
  }
  function InputManager$BufferedPointerInput$UpdateState$STARTED() {
    UpdateState.call(this, 'STARTED', 0);
    UpdateState_STARTED_instance = this;
  }
  InputManager$BufferedPointerInput$UpdateState$STARTED.prototype.o = function () {
    return UpdateState_ACTIVE_getInstance();
  };
  InputManager$BufferedPointerInput$UpdateState$STARTED.$metadata$ = classMeta('STARTED', undefined, undefined, undefined, undefined, UpdateState.prototype);
  var UpdateState_STARTED_instance;
  function InputManager$BufferedPointerInput$UpdateState$ACTIVE() {
    UpdateState.call(this, 'ACTIVE', 1);
    UpdateState_ACTIVE_instance = this;
  }
  InputManager$BufferedPointerInput$UpdateState$ACTIVE.prototype.o = function () {
    return UpdateState_ACTIVE_getInstance();
  };
  InputManager$BufferedPointerInput$UpdateState$ACTIVE.$metadata$ = classMeta('ACTIVE', undefined, undefined, undefined, undefined, UpdateState.prototype);
  var UpdateState_ACTIVE_instance;
  function InputManager$BufferedPointerInput$UpdateState$ENDED_BEFORE_STARTED() {
    UpdateState.call(this, 'ENDED_BEFORE_STARTED', 2);
    UpdateState_ENDED_BEFORE_STARTED_instance = this;
  }
  InputManager$BufferedPointerInput$UpdateState$ENDED_BEFORE_STARTED.prototype.o = function () {
    return UpdateState_ENDED_BEFORE_ACTIVE_getInstance();
  };
  InputManager$BufferedPointerInput$UpdateState$ENDED_BEFORE_STARTED.$metadata$ = classMeta('ENDED_BEFORE_STARTED', undefined, undefined, undefined, undefined, UpdateState.prototype);
  var UpdateState_ENDED_BEFORE_STARTED_instance;
  function InputManager$BufferedPointerInput$UpdateState$ENDED_BEFORE_ACTIVE() {
    UpdateState.call(this, 'ENDED_BEFORE_ACTIVE', 3);
    UpdateState_ENDED_BEFORE_ACTIVE_instance = this;
  }
  InputManager$BufferedPointerInput$UpdateState$ENDED_BEFORE_ACTIVE.prototype.o = function () {
    return UpdateState_ENDED_getInstance();
  };
  InputManager$BufferedPointerInput$UpdateState$ENDED_BEFORE_ACTIVE.$metadata$ = classMeta('ENDED_BEFORE_ACTIVE', undefined, undefined, undefined, undefined, UpdateState.prototype);
  var UpdateState_ENDED_BEFORE_ACTIVE_instance;
  function InputManager$BufferedPointerInput$UpdateState$ENDED() {
    UpdateState.call(this, 'ENDED', 4);
    UpdateState_ENDED_instance = this;
  }
  InputManager$BufferedPointerInput$UpdateState$ENDED.prototype.o = function () {
    return UpdateState_INVALID_getInstance();
  };
  InputManager$BufferedPointerInput$UpdateState$ENDED.$metadata$ = classMeta('ENDED', undefined, undefined, undefined, undefined, UpdateState.prototype);
  var UpdateState_ENDED_instance;
  function InputManager$BufferedPointerInput$UpdateState$INVALID() {
    UpdateState.call(this, 'INVALID', 5);
    UpdateState_INVALID_instance = this;
  }
  InputManager$BufferedPointerInput$UpdateState$INVALID.prototype.o = function () {
    return UpdateState_INVALID_getInstance();
  };
  InputManager$BufferedPointerInput$UpdateState$INVALID.$metadata$ = classMeta('INVALID', undefined, undefined, undefined, undefined, UpdateState.prototype);
  var UpdateState_INVALID_instance;
  var UpdateState_entriesInitialized;
  function UpdateState_initEntries() {
    if (UpdateState_entriesInitialized)
      return Unit_getInstance();
    UpdateState_entriesInitialized = true;
    UpdateState_STARTED_instance = new InputManager$BufferedPointerInput$UpdateState$STARTED();
    UpdateState_ACTIVE_instance = new InputManager$BufferedPointerInput$UpdateState$ACTIVE();
    UpdateState_ENDED_BEFORE_STARTED_instance = new InputManager$BufferedPointerInput$UpdateState$ENDED_BEFORE_STARTED();
    UpdateState_ENDED_BEFORE_ACTIVE_instance = new InputManager$BufferedPointerInput$UpdateState$ENDED_BEFORE_ACTIVE();
    UpdateState_ENDED_instance = new InputManager$BufferedPointerInput$UpdateState$ENDED();
    UpdateState_INVALID_instance = new InputManager$BufferedPointerInput$UpdateState$INVALID();
  }
  function updateClickStates($this) {
    $this.q21(isClick($this, $this.o21(), 0, $this.p21()));
    $this.s21(isClick($this, $this.r21(), 1, $this.p21()));
    $this.u21(isClick($this, $this.t21(), 2, $this.p21()));
    $this.w21(isClick($this, $this.v21(), 3, $this.p21()));
    $this.y21(isClick($this, $this.x21(), 4, $this.p21()));
    $this.b22(updateRepeatedClickCount($this, $this.z21(), 0, $this.a22()));
    $this.e22(updateRepeatedClickCount($this, $this.c22(), 0, $this.d22()));
    $this.h22(updateRepeatedClickCount($this, $this.f22(), 0, $this.g22()));
    $this.k22(updateRepeatedClickCount($this, $this.i22(), 0, $this.j22()));
    $this.n22(updateRepeatedClickCount($this, $this.l22(), 0, $this.m22()));
    if ($this.z21()) {
      $this.o22()[0] = Time_getInstance().b21();
      $this.p22()[0] = Time_getInstance().a21_1;
    }
    if ($this.c22()) {
      $this.o22()[1] = Time_getInstance().b21();
      $this.p22()[1] = Time_getInstance().a21_1;
    }
    if ($this.f22()) {
      $this.o22()[2] = Time_getInstance().b21();
      $this.p22()[2] = Time_getInstance().a21_1;
    }
    if ($this.i22()) {
      $this.o22()[3] = Time_getInstance().b21();
      $this.p22()[3] = Time_getInstance().a21_1;
    }
    if ($this.l22()) {
      $this.o22()[4] = Time_getInstance().b21();
      $this.p22()[4] = Time_getInstance().a21_1;
    }
  }
  function isClick($this, isReleased, buttonI, dragMovement) {
    var pressedTime = $this.q22()[buttonI];
    var pressedFrame = $this.r22()[buttonI];
    var tmp;
    var tmp_0;
    if (isReleased) {
      Companion_getInstance_0();
      tmp_0 = dragMovement < 15.0;
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      var tmp_1;
      var tmp_2 = Time_getInstance().b21() - pressedTime;
      Companion_getInstance_0();
      if (tmp_2 < 0.25) {
        tmp_1 = true;
      } else {
        tmp_1 = (Time_getInstance().a21_1 - pressedFrame | 0) === 1;
      }
      tmp = tmp_1;
    } else {
      tmp = false;
    }
    return tmp;
  }
  function updateRepeatedClickCount($this, isClick, buttonI, currentClickCount) {
    var dt = Time_getInstance().b21() - $this.o22()[buttonI];
    var dFrm = Time_getInstance().a21_1 - $this.p22()[buttonI] | 0;
    var tmp;
    var tmp_0;
    var tmp_1;
    if (!isClick) {
      Companion_getInstance_0();
      tmp_1 = dt > 0.25;
    } else {
      tmp_1 = false;
    }
    if (tmp_1) {
      tmp_0 = dFrm > 2;
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = 0;
    } else {
      if (isClick) {
        tmp = currentClickCount + 1 | 0;
      } else {
        tmp = currentClickCount;
      }
    }
    return tmp;
  }
  function UpdateState(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  UpdateState.$metadata$ = classMeta('UpdateState', undefined, undefined, undefined, undefined, Enum.prototype);
  function UpdateState_STARTED_getInstance() {
    UpdateState_initEntries();
    return UpdateState_STARTED_instance;
  }
  function UpdateState_ACTIVE_getInstance() {
    UpdateState_initEntries();
    return UpdateState_ACTIVE_instance;
  }
  function UpdateState_ENDED_BEFORE_STARTED_getInstance() {
    UpdateState_initEntries();
    return UpdateState_ENDED_BEFORE_STARTED_instance;
  }
  function UpdateState_ENDED_BEFORE_ACTIVE_getInstance() {
    UpdateState_initEntries();
    return UpdateState_ENDED_BEFORE_ACTIVE_instance;
  }
  function UpdateState_ENDED_getInstance() {
    UpdateState_initEntries();
    return UpdateState_ENDED_instance;
  }
  function UpdateState_INVALID_getInstance() {
    UpdateState_initEntries();
    return UpdateState_INVALID_instance;
  }
  function KeyEvent_init_$Init$(keyCode, event, modifiers, $this) {
    KeyEvent.call($this, keyCode, keyCode, event, modifiers);
    return $this;
  }
  function KeyEvent_init_$Create$(keyCode, event, modifiers) {
    return KeyEvent_init_$Init$(keyCode, event, modifiers, Object.create(KeyEvent.prototype));
  }
  function getFreeInputPointer($this) {
    var inductionVariable = 0;
    var last = $this.w22_1.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!$this.w22_1[i].a23()) {
          return $this.w22_1[i];
        }
      }
       while (inductionVariable <= last);
    return null;
  }
  function findInputPointer($this, pointerId) {
    var inductionVariable = 0;
    var last = $this.w22_1.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if ($this.w22_1[i].a23() ? $this.w22_1[i].b23() === pointerId : false) {
          return $this.w22_1[i];
        }
      }
       while (inductionVariable <= last);
    return null;
  }
  var CursorMode_NORMAL_instance;
  var CursorMode_LOCKED_instance;
  var CursorMode_entriesInitialized;
  function CursorMode_initEntries() {
    if (CursorMode_entriesInitialized)
      return Unit_getInstance();
    CursorMode_entriesInitialized = true;
    CursorMode_NORMAL_instance = new CursorMode('NORMAL', 0);
    CursorMode_LOCKED_instance = new CursorMode('LOCKED', 1);
  }
  var CursorShape_DEFAULT_instance;
  var CursorShape_TEXT_instance;
  var CursorShape_CROSSHAIR_instance;
  var CursorShape_HAND_instance;
  var CursorShape_H_RESIZE_instance;
  var CursorShape_V_RESIZE_instance;
  var CursorShape_entriesInitialized;
  function CursorShape_initEntries() {
    if (CursorShape_entriesInitialized)
      return Unit_getInstance();
    CursorShape_entriesInitialized = true;
    CursorShape_DEFAULT_instance = new CursorShape('DEFAULT', 0);
    CursorShape_TEXT_instance = new CursorShape('TEXT', 1);
    CursorShape_CROSSHAIR_instance = new CursorShape('CROSSHAIR', 2);
    CursorShape_HAND_instance = new CursorShape('HAND', 3);
    CursorShape_H_RESIZE_instance = new CursorShape('H_RESIZE', 4);
    CursorShape_V_RESIZE_instance = new CursorShape('V_RESIZE', 5);
  }
  function Pointer() {
    this.w1z_1 = 0;
    this.x1z_1 = 0.0;
    this.y1z_1 = 0.0;
    this.z1z_1 = 0.0;
    this.a20_1 = 0.0;
    this.b20_1 = 0.0;
    this.c20_1 = 0.0;
    this.d20_1 = 0.0;
    this.e20_1 = 0.0;
    this.f20_1 = 0;
    this.g20_1 = 0;
    this.h20_1 = false;
    this.i20_1 = new Float64Array(5);
    this.j20_1 = new Int32Array(5);
    this.k20_1 = new Float64Array(5);
    this.l20_1 = new Int32Array(5);
    this.m20_1 = 0;
    this.n20_1 = 0.0;
    this.o20_1 = false;
    this.p20_1 = false;
    this.q20_1 = false;
    this.r20_1 = false;
    this.s20_1 = false;
    this.t20_1 = 0;
    this.u20_1 = 0;
    this.v20_1 = 0;
    this.w20_1 = 0;
    this.x20_1 = 0;
  }
  Pointer.prototype.c23 = function (_set____db54di) {
    this.w1z_1 = _set____db54di;
  };
  Pointer.prototype.b23 = function () {
    return this.w1z_1;
  };
  Pointer.prototype.d23 = function (_set____db54di) {
    this.x1z_1 = _set____db54di;
  };
  Pointer.prototype.e23 = function () {
    return this.x1z_1;
  };
  Pointer.prototype.f23 = function (_set____db54di) {
    this.y1z_1 = _set____db54di;
  };
  Pointer.prototype.g23 = function () {
    return this.y1z_1;
  };
  Pointer.prototype.h23 = function (_set____db54di) {
    this.z1z_1 = _set____db54di;
  };
  Pointer.prototype.i23 = function () {
    return this.z1z_1;
  };
  Pointer.prototype.j23 = function (_set____db54di) {
    this.a20_1 = _set____db54di;
  };
  Pointer.prototype.k23 = function () {
    return this.a20_1;
  };
  Pointer.prototype.l23 = function (_set____db54di) {
    this.b20_1 = _set____db54di;
  };
  Pointer.prototype.m23 = function () {
    return this.b20_1;
  };
  Pointer.prototype.n23 = function (_set____db54di) {
    this.c20_1 = _set____db54di;
  };
  Pointer.prototype.o23 = function () {
    return this.c20_1;
  };
  Pointer.prototype.p23 = function (_set____db54di) {
    this.d20_1 = _set____db54di;
  };
  Pointer.prototype.q23 = function () {
    return this.d20_1;
  };
  Pointer.prototype.r23 = function (_set____db54di) {
    this.e20_1 = _set____db54di;
  };
  Pointer.prototype.s23 = function () {
    return this.e20_1;
  };
  Pointer.prototype.t23 = function (value) {
    this.g20_1 = this.g20_1 | this.f20_1 ^ value;
    this.f20_1 = value;
    if (!((this.g20_1 & value) === 0)) {
      updateButtonDownTimes(this);
    }
  };
  Pointer.prototype.u23 = function () {
    return this.f20_1;
  };
  Pointer.prototype.v23 = function (_set____db54di) {
    this.g20_1 = _set____db54di;
  };
  Pointer.prototype.w23 = function (_set____db54di) {
    this.h20_1 = _set____db54di;
  };
  Pointer.prototype.a23 = function () {
    return this.h20_1;
  };
  Pointer.prototype.o22 = function () {
    return this.i20_1;
  };
  Pointer.prototype.p22 = function () {
    return this.j20_1;
  };
  Pointer.prototype.q22 = function () {
    return this.k20_1;
  };
  Pointer.prototype.r22 = function () {
    return this.l20_1;
  };
  Pointer.prototype.x23 = function (_set____db54di) {
    this.n20_1 = _set____db54di;
  };
  Pointer.prototype.p21 = function () {
    return this.n20_1;
  };
  Pointer.prototype.y23 = function () {
    return !(this.f20_1 === 0);
  };
  Pointer.prototype.z23 = function () {
    var tmp = this.f20_1;
    Companion_getInstance_0();
    return !((tmp & 1) === 0);
  };
  Pointer.prototype.a24 = function () {
    var tmp = this.f20_1;
    Companion_getInstance_0();
    return !((tmp & 2) === 0);
  };
  Pointer.prototype.b24 = function () {
    var tmp = this.f20_1;
    Companion_getInstance_0();
    return !((tmp & 4) === 0);
  };
  Pointer.prototype.c24 = function () {
    var tmp = this.f20_1;
    Companion_getInstance_0();
    return !((tmp & 8) === 0);
  };
  Pointer.prototype.d24 = function () {
    var tmp = this.f20_1;
    Companion_getInstance_0();
    return !((tmp & 16) === 0);
  };
  Pointer.prototype.e24 = function () {
    var tmp = this.g20_1;
    Companion_getInstance_0();
    return !((tmp & 1) === 0);
  };
  Pointer.prototype.f24 = function () {
    var tmp = this.g20_1;
    Companion_getInstance_0();
    return !((tmp & 2) === 0);
  };
  Pointer.prototype.g24 = function () {
    var tmp = this.g20_1;
    Companion_getInstance_0();
    return !((tmp & 4) === 0);
  };
  Pointer.prototype.h24 = function () {
    var tmp = this.g20_1;
    Companion_getInstance_0();
    return !((tmp & 8) === 0);
  };
  Pointer.prototype.i24 = function () {
    var tmp = this.g20_1;
    Companion_getInstance_0();
    return !((tmp & 16) === 0);
  };
  Pointer.prototype.j24 = function () {
    return this.e24() ? this.z23() : false;
  };
  Pointer.prototype.k24 = function () {
    return this.f24() ? this.a24() : false;
  };
  Pointer.prototype.l24 = function () {
    return this.g24() ? this.b24() : false;
  };
  Pointer.prototype.o21 = function () {
    return this.e24() ? !this.z23() : false;
  };
  Pointer.prototype.r21 = function () {
    return this.f24() ? !this.a24() : false;
  };
  Pointer.prototype.t21 = function () {
    return this.g24() ? !this.b24() : false;
  };
  Pointer.prototype.v21 = function () {
    return this.h24() ? !this.c24() : false;
  };
  Pointer.prototype.x21 = function () {
    return this.i24() ? !this.d24() : false;
  };
  Pointer.prototype.q21 = function (_set____db54di) {
    this.o20_1 = _set____db54di;
  };
  Pointer.prototype.z21 = function () {
    return this.o20_1;
  };
  Pointer.prototype.s21 = function (_set____db54di) {
    this.p20_1 = _set____db54di;
  };
  Pointer.prototype.c22 = function () {
    return this.p20_1;
  };
  Pointer.prototype.u21 = function (_set____db54di) {
    this.q20_1 = _set____db54di;
  };
  Pointer.prototype.f22 = function () {
    return this.q20_1;
  };
  Pointer.prototype.w21 = function (_set____db54di) {
    this.r20_1 = _set____db54di;
  };
  Pointer.prototype.i22 = function () {
    return this.r20_1;
  };
  Pointer.prototype.y21 = function (_set____db54di) {
    this.s20_1 = _set____db54di;
  };
  Pointer.prototype.l22 = function () {
    return this.s20_1;
  };
  Pointer.prototype.b22 = function (_set____db54di) {
    this.t20_1 = _set____db54di;
  };
  Pointer.prototype.a22 = function () {
    return this.t20_1;
  };
  Pointer.prototype.e22 = function (_set____db54di) {
    this.u20_1 = _set____db54di;
  };
  Pointer.prototype.d22 = function () {
    return this.u20_1;
  };
  Pointer.prototype.h22 = function (_set____db54di) {
    this.v20_1 = _set____db54di;
  };
  Pointer.prototype.g22 = function () {
    return this.v20_1;
  };
  Pointer.prototype.k22 = function (_set____db54di) {
    this.w20_1 = _set____db54di;
  };
  Pointer.prototype.j22 = function () {
    return this.w20_1;
  };
  Pointer.prototype.n22 = function (_set____db54di) {
    this.x20_1 = _set____db54di;
  };
  Pointer.prototype.m22 = function () {
    return this.x20_1;
  };
  Pointer.prototype.m24 = function () {
    return this.y23() ? !(this.b20_1 === 0.0) ? true : !(this.c20_1 === 0.0) : false;
  };
  Pointer.prototype.n24 = function (mask) {
    this.m20_1 = this.m20_1 | mask;
  };
  Pointer.prototype.o24 = function (mask, $mask0, $handler) {
    if (!(($mask0 & 1) === 0)) {
      Companion_getInstance_0();
      mask = -1;
    }
    return this.n24(mask);
  };
  Pointer.prototype.p24 = function (mask) {
    return !((this.m20_1 & mask) === 0);
  };
  Pointer.$metadata$ = classMeta('Pointer');
  function BufferedPointerInput() {
    Pointer.call(this);
    this.s25_1 = UpdateState_INVALID_getInstance();
    this.t25_1 = UpdateState_INVALID_getInstance();
    var tmp = this;
    var tmp$ret$3;
    {
      var tmp$ret$2;
      {
        var list = ArrayList_init_$Create$(8);
        {
          {
          }
          var inductionVariable = 0;
          if (inductionVariable < 8)
            do {
              var index = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              {
                var tmp$ret$1;
                {
                  var tmp$ret$0;
                  {
                    tmp$ret$0 = ArrayList_init_$Create$_0();
                  }
                  tmp$ret$1 = tmp$ret$0;
                }
                list.b(tmp$ret$1);
              }
            }
             while (inductionVariable < 8);
        }
        tmp$ret$2 = list;
      }
      tmp$ret$3 = tmp$ret$2;
    }
    tmp.u25_1 = tmp$ret$3;
    this.v25_1 = false;
    this.w25_1 = 0.0;
  }
  BufferedPointerInput.prototype.x25 = function (button, down) {
    if (!(0 <= button ? button <= (this.u25_1.m() - 1 | 0) : false)) {
      var tmp$ret$3;
      {
        var tmp$ret$2;
        {
          var tmp2_wExt = Log_getInstance();
          var tmp$ret$1;
          {
            var tmp1_logExt = Level_WARN_getInstance();
            var tmp0_log = getKClassFromExpression(this).ei();
            var tmp;
            if (tmp1_logExt.e1w_1 >= tmp2_wExt.y1v_1.e1w_1) {
              var tmp_0 = tmp2_wExt.z1v_1;
              var tmp$ret$0;
              {
                tmp$ret$0 = 'Discarding pointer button event for out of bounds button: ' + button;
              }
              tmp = tmp_0(tmp1_logExt, tmp0_log, tmp$ret$0);
            }
            tmp$ret$1 = tmp;
          }
          tmp$ret$2 = tmp$ret$1;
        }
        tmp$ret$3 = tmp$ret$2;
      }
      return Unit_getInstance();
    }
    var tmp0_array = this.u25_1;
    var tmp1_index0 = button;
    {
      var tmp3_plusAssign = tmp0_array.r(tmp1_index0);
      tmp3_plusAssign.b(down);
    }
    this.v25_1 = true;
  };
  BufferedPointerInput.prototype.y25 = function () {
    if (this.v25_1) {
      this.v25_1 = false;
      var updateMask = this.u23();
      {
        var tmp0_forEachIndexed = this.u25_1;
        var index = 0;
        var tmp0_iterator = tmp0_forEachIndexed.h();
        while (tmp0_iterator.n()) {
          var item = tmp0_iterator.o();
          {
            var tmp1 = index;
            index = tmp1 + 1 | 0;
            var tmp1__anonymous__uwfjfc = checkIndexOverflow(tmp1);
            var tmp$ret$0;
            {
              tmp$ret$0 = !item.q();
            }
            if (tmp$ret$0) {
              var event = item.d4(0);
              var tmp;
              if (event) {
                tmp = updateMask | 1 << tmp1__anonymous__uwfjfc;
              } else {
                tmp = updateMask & ~(1 << tmp1__anonymous__uwfjfc);
              }
              updateMask = tmp;
            }
          }
        }
      }
      this.t23(updateMask);
      if ((this.j24() ? true : this.k24()) ? true : this.l24()) {
        this.l23(0.0);
        this.n23(0.0);
        this.x23(0.0);
      }
    }
  };
  BufferedPointerInput.prototype.z25 = function (pointerId, x, y) {
    this.a26(x, y);
    this.c23(pointerId);
    this.h23(0.0);
    this.j23(0.0);
    this.l23(0.0);
    this.n23(0.0);
    this.x23(0.0);
    this.r23(0.0);
    this.p23(0.0);
    this.s25_1 = UpdateState_STARTED_getInstance();
    this.w23(true);
  };
  BufferedPointerInput.prototype.a26 = function (x, y) {
    var wasDrag = !(this.p21() === 0.0);
    if (this.y23()) {
      var tmp0_this = this;
      tmp0_this.l23(tmp0_this.m23() + (x - this.e23()));
      var tmp1_this = this;
      tmp1_this.n23(tmp1_this.o23() + (y - this.g23()));
      var tmp2_this = this;
      var tmp = tmp2_this.p21();
      var tmp$ret$0;
      {
        var tmp0_abs = x - this.e23();
        tmp$ret$0 = Math.abs(tmp0_abs);
      }
      var tmp_0 = tmp$ret$0;
      var tmp$ret$1;
      {
        var tmp1_abs = y - this.g23();
        tmp$ret$1 = Math.abs(tmp1_abs);
      }
      tmp2_this.x23(tmp + (tmp_0 + tmp$ret$1));
    }
    var tmp3_this = this;
    tmp3_this.h23(tmp3_this.i23() + (x - this.e23()));
    var tmp4_this = this;
    tmp4_this.j23(tmp4_this.k23() + (y - this.g23()));
    if (!this.m24() ? true : this.m24() === wasDrag) {
      this.d23(x);
      this.f23(y);
    }
    this.w25_1 = Time_getInstance().b21();
  };
  BufferedPointerInput.prototype.b26 = function () {
    var tmp = this;
    var tmp0_subject = this.t25_1;
    var tmp0 = tmp0_subject.y1();
    switch (tmp0) {
      case 1:
        tmp.s25_1 = UpdateState_ENDED_getInstance();
        break;
      case 0:
        tmp.s25_1 = UpdateState_ENDED_BEFORE_ACTIVE_getInstance();
        break;
      default:
        tmp.s25_1 = UpdateState_ENDED_BEFORE_STARTED_getInstance();
        break;
    }
  };
  BufferedPointerInput.prototype.c26 = function () {
    this.t23(0);
    this.v23(0);
    this.h23(0.0);
    this.j23(0.0);
    this.r23(0.0);
    this.p23(0.0);
    this.l23(0.0);
    this.n23(0.0);
    this.x23(0.0);
    this.s25_1 = UpdateState_INVALID_getInstance();
    this.w23(false);
  };
  BufferedPointerInput.prototype.d26 = function (target, t) {
    if (!this.s25_1.equals(UpdateState_INVALID_getInstance()) ? t - this.w25_1 > 200.0 : false) {
      var tmp$ret$3;
      {
        var tmp$ret$2;
        {
          var tmp2_wExt = Log_getInstance();
          var tmp$ret$1;
          {
            var tmp1_logExt = Level_WARN_getInstance();
            var tmp0_log = getKClassFromExpression(this).ei();
            var tmp;
            if (tmp1_logExt.e1w_1 >= tmp2_wExt.y1v_1.e1w_1) {
              var tmp_0 = tmp2_wExt.z1v_1;
              var tmp$ret$0;
              {
                tmp$ret$0 = 'Pointer ' + this.b23() + ' timed out!';
              }
              tmp = tmp_0(tmp1_logExt, tmp0_log, tmp$ret$0);
            }
            tmp$ret$1 = tmp;
          }
          tmp$ret$2 = tmp$ret$1;
        }
        tmp$ret$3 = tmp$ret$2;
      }
      this.c26();
    }
    this.y25();
    updateClickStates(this);
    target.w1z_1 = this.b23();
    target.z1z_1 = this.i23();
    target.a20_1 = this.k23();
    target.b20_1 = this.m23();
    target.c20_1 = this.o23();
    target.n20_1 = this.p21();
    target.e20_1 = this.s23();
    target.d20_1 = this.q23();
    target.x1z_1 = this.e23();
    target.y1z_1 = this.g23();
    target.h20_1 = true;
    target.m20_1 = 0;
    target.g20_1 = 0;
    target.o20_1 = this.z21();
    target.p20_1 = this.c22();
    target.q20_1 = this.f22();
    target.r20_1 = this.i22();
    target.s20_1 = this.l22();
    target.t20_1 = this.a22();
    target.u20_1 = this.d22();
    target.v20_1 = this.g22();
    target.w20_1 = this.j22();
    target.x20_1 = this.m22();
    var tmp0_subject = this.s25_1;
    var tmp0 = tmp0_subject.y1();
    switch (tmp0) {
      case 0:
        target.t23(0);
        break;
      case 2:
        target.t23(0);
        break;
      case 1:
        target.t23(this.u23());
        break;
      case 3:
        target.t23(this.u23());
        break;
      case 4:
        target.t23(0);
        break;
      case 5:
        this.w23(false);
        target.h20_1 = false;
        break;
    }
    this.h23(0.0);
    this.j23(0.0);
    this.r23(0.0);
    this.p23(0.0);
    this.v23(0);
    this.t25_1 = this.s25_1;
    this.s25_1 = this.s25_1.o();
  };
  BufferedPointerInput.$metadata$ = classMeta('BufferedPointerInput', undefined, undefined, undefined, undefined, Pointer.prototype);
  function KeyEventListener(keyCode, name, filter, callback) {
    this.e26_1 = keyCode;
    this.f26_1 = name;
    this.g26_1 = filter;
    this.h26_1 = callback;
  }
  KeyEventListener.prototype.il = function () {
    return this.f26_1;
  };
  KeyEventListener.prototype.i26 = function (evt) {
    return this.h26_1(evt);
  };
  KeyEventListener.$metadata$ = classMeta('KeyEventListener');
  function KeyEvent(keyCode, localKeyCode, event, modifiers) {
    this.j26_1 = keyCode;
    this.k26_1 = localKeyCode;
    this.l26_1 = modifiers;
    this.m26_1 = event;
    this.n26_1 = _Char___init__impl__6a9atx(0);
  }
  KeyEvent.prototype.o26 = function () {
    return this.l26_1;
  };
  KeyEvent.prototype.p26 = function () {
    var tmp = this.m26_1;
    Companion_getInstance_0();
    return !((tmp & 2) === 0);
  };
  KeyEvent.prototype.q26 = function () {
    var tmp = this.m26_1;
    Companion_getInstance_0();
    return !((tmp & 1) === 0);
  };
  KeyEvent.$metadata$ = classMeta('KeyEvent');
  function PointerState() {
    var tmp = this;
    var tmp_0 = 0;
    Companion_getInstance_0();
    var tmp_1 = 10;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(tmp_1), null);
    }
    var tmp_2 = tmp$ret$0;
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$1;
      {
        tmp$ret$1 = new Pointer();
      }
      tmp_2[tmp_3] = tmp$ret$1;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp.u22_1 = tmp_2;
    this.v22_1 = 0.0;
    var tmp_4 = this;
    var tmp_5 = 0;
    Companion_getInstance_0();
    var tmp_6 = 10;
    var tmp$ret$2;
    {
      tmp$ret$2 = fillArrayVal(Array(tmp_6), null);
    }
    var tmp_7 = tmp$ret$2;
    while (tmp_5 < tmp_6) {
      var tmp_8 = tmp_5;
      var tmp$ret$3;
      {
        tmp$ret$3 = new BufferedPointerInput();
      }
      tmp_7[tmp_8] = tmp$ret$3;
      tmp_5 = tmp_5 + 1 | 0;
    }
    tmp_4.w22_1 = tmp_7;
    this.x22_1 = new TouchGestureEvaluator();
    this.y22_1 = true;
    this.z22_1 = this.u22_1[0];
  }
  PointerState.prototype.r26 = function (result, consumedMask) {
    result.t7();
    var inductionVariable = 0;
    var last = this.u22_1.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (this.u22_1[i].h20_1 ? !this.u22_1[i].p24(consumedMask) : false) {
          result.b(this.u22_1[i]);
        }
      }
       while (inductionVariable <= last);
  };
  PointerState.prototype.s26 = function (result, consumedMask, $mask0, $handler) {
    if (!(($mask0 & 2) === 0)) {
      Companion_getInstance_0();
      consumedMask = -1;
    }
    return this.r26(result, consumedMask);
  };
  PointerState.prototype.t26 = function (ctx) {
    var inductionVariable = 0;
    var last = this.u22_1.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.w22_1[i].d26(this.u22_1[i], this.v22_1);
      }
       while (inductionVariable <= last);
    if (this.y22_1) {
      this.x22_1.a27(this, ctx);
      var tmp1_subject = this.x22_1.u26_1.i27_1;
      Companion_getInstance_48();
      if (tmp1_subject === 1) {
        this.z22_1.m20_1 = 0;
        this.z22_1.d20_1 = this.x22_1.u26_1.h27_1 / 20.0;
        this.z22_1.x1z_1 = this.x22_1.u26_1.c27_1.e23();
        this.z22_1.y1z_1 = this.x22_1.u26_1.c27_1.g23();
        this.z22_1.z1z_1 = this.x22_1.u26_1.e27_1.e23();
        this.z22_1.a20_1 = this.x22_1.u26_1.e27_1.g23();
      } else {
        Companion_getInstance_48();
        if (tmp1_subject === 2) {
          this.z22_1.m20_1 = 0;
          this.z22_1.x1z_1 = this.x22_1.u26_1.c27_1.e23();
          this.z22_1.y1z_1 = this.x22_1.u26_1.c27_1.g23();
          this.z22_1.z1z_1 = this.x22_1.u26_1.e27_1.e23();
          this.z22_1.a20_1 = this.x22_1.u26_1.e27_1.g23();
          var tmp = this.z22_1.f20_1;
          Companion_getInstance_0();
          if (tmp === 1) {
            Companion_getInstance_0();
            this.z22_1.t23(2);
            if (this.x22_1.u26_1.j27_1 > 1) {
              this.z22_1.g20_1 = 0;
            }
          }
        }
      }
    }
  };
  PointerState.prototype.l27 = function (pointerId, x, y) {
    this.v22_1 = Time_getInstance().b21();
    var tmp0_elvis_lhs = getFreeInputPointer(this);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return Unit_getInstance();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var inPtr = tmp;
    inPtr.z25(pointerId, x, y);
    inPtr.t23(1);
  };
  PointerState.prototype.m27 = function (pointerId) {
    var tmp0_safe_receiver = findInputPointer(this, pointerId);
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.b26();
    }
  };
  PointerState.prototype.n27 = function (pointerId) {
    var tmp0_safe_receiver = findInputPointer(this, pointerId);
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.c26();
    }
  };
  PointerState.prototype.o27 = function (pointerId, x, y) {
    this.v22_1 = Time_getInstance().b21();
    var tmp0_safe_receiver = findInputPointer(this, pointerId);
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.a26(x, y);
    }
  };
  PointerState.prototype.p27 = function (x, y) {
    this.v22_1 = Time_getInstance().b21();
    Companion_getInstance_0();
    var mousePtr = findInputPointer(this, -1000000);
    if (mousePtr == null) {
      var tmp0_elvis_lhs = getFreeInputPointer(this);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return Unit_getInstance();
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var startPtr = tmp;
      Companion_getInstance_0();
      startPtr.z25(-1000000, x, y);
    } else {
      mousePtr.a26(x, y);
    }
  };
  PointerState.prototype.q27 = function (button, down) {
    Companion_getInstance_0();
    var tmp0_elvis_lhs = findInputPointer(this, -1000000);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return Unit_getInstance();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var ptr = tmp;
    ptr.x25(button, down);
  };
  PointerState.prototype.r27 = function (xTicks, yTicks) {
    Companion_getInstance_0();
    var tmp0_elvis_lhs = findInputPointer(this, -1000000);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return Unit_getInstance();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var ptr = tmp;
    var tmp1_this = ptr;
    tmp1_this.r23(tmp1_this.s23() + xTicks);
    var tmp2_this = ptr;
    tmp2_this.p23(tmp2_this.q23() + yTicks);
  };
  PointerState.prototype.s27 = function () {
    Companion_getInstance_0();
    var tmp0_safe_receiver = findInputPointer(this, -1000000);
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.c26();
    }
  };
  PointerState.$metadata$ = classMeta('PointerState');
  function CursorMode(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  CursorMode.$metadata$ = classMeta('CursorMode', undefined, undefined, undefined, undefined, Enum.prototype);
  function CursorShape(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  CursorShape.$metadata$ = classMeta('CursorShape', undefined, undefined, undefined, undefined, Enum.prototype);
  function Companion_0() {
    Companion_instance_0 = this;
    this.t27_1 = 15.0;
    this.u27_1 = 0.25;
    this.v27_1 = 0.25;
    this.w27_1 = 0.3;
    this.x27_1 = 0;
    this.y27_1 = 1;
    this.z27_1 = 1;
    this.a28_1 = 2;
    this.b28_1 = 2;
    this.c28_1 = 4;
    this.d28_1 = 3;
    this.e28_1 = 8;
    this.f28_1 = 4;
    this.g28_1 = 16;
    this.h28_1 = 10;
    this.i28_1 = -1000000;
    this.j28_1 = -1;
    this.k28_1 = 1;
    this.l28_1 = 2;
    this.m28_1 = 4;
    this.n28_1 = 8;
    this.o28_1 = 16;
    this.p28_1 = 32;
    this.q28_1 = 64;
    this.r28_1 = 128;
    this.s28_1 = 256;
    this.t28_1 = 1;
    this.u28_1 = 2;
    this.v28_1 = 4;
    this.w28_1 = 8;
    this.x28_1 = 1;
    this.y28_1 = 2;
    this.z28_1 = 4;
    this.a29_1 = 8;
    this.b29_1 = new UniversalKeyCode(-1, 'CTRL_LEFT');
    this.c29_1 = new UniversalKeyCode(-2, 'CTRL_RIGHT');
    this.d29_1 = new UniversalKeyCode(-3, 'SHIFT_LEFT');
    this.e29_1 = new UniversalKeyCode(-4, 'SHIFT_RIGHT');
    this.f29_1 = new UniversalKeyCode(-5, 'ALT_LEFT');
    this.g29_1 = new UniversalKeyCode(-6, 'ALT_RIGHT');
    this.h29_1 = new UniversalKeyCode(-7, 'SUPER_LEFT');
    this.i29_1 = new UniversalKeyCode(-8, 'SUPER_RIGHT');
    this.j29_1 = new UniversalKeyCode(-9, 'ESC');
    this.k29_1 = new UniversalKeyCode(-10, 'MENU');
    this.l29_1 = new UniversalKeyCode(-11, 'ENTER');
    this.m29_1 = new UniversalKeyCode(-12, 'NP_ENTER');
    this.n29_1 = new UniversalKeyCode(-13, 'NP_DIV');
    this.o29_1 = new UniversalKeyCode(-14, 'NP_MUL');
    this.p29_1 = new UniversalKeyCode(-15, 'NP_PLUS');
    this.q29_1 = new UniversalKeyCode(-16, 'NP_MINUS');
    this.r29_1 = new UniversalKeyCode(-17, 'BACKSPACE');
    this.s29_1 = new UniversalKeyCode(-18, 'TAB');
    this.t29_1 = new UniversalKeyCode(-19, 'DEL');
    this.u29_1 = new UniversalKeyCode(-20, 'INSERT');
    this.v29_1 = new UniversalKeyCode(-21, 'HOME');
    this.w29_1 = new UniversalKeyCode(-22, 'END');
    this.x29_1 = new UniversalKeyCode(-23, 'PAGE_UP');
    this.y29_1 = new UniversalKeyCode(-24, 'PAGE_DOWN');
    this.z29_1 = new UniversalKeyCode(-25, 'CURSOR_LEFT');
    this.a2a_1 = new UniversalKeyCode(-26, 'CURSOR_RIGHT');
    this.b2a_1 = new UniversalKeyCode(-27, 'CURSOR_UP');
    this.c2a_1 = new UniversalKeyCode(-28, 'CURSOR_DOWN');
    this.d2a_1 = new UniversalKeyCode(-29, 'F1');
    this.e2a_1 = new UniversalKeyCode(-30, 'F2');
    this.f2a_1 = new UniversalKeyCode(-31, 'F3');
    this.g2a_1 = new UniversalKeyCode(-32, 'F4');
    this.h2a_1 = new UniversalKeyCode(-33, 'F5');
    this.i2a_1 = new UniversalKeyCode(-34, 'F6');
    this.j2a_1 = new UniversalKeyCode(-35, 'F7');
    this.k2a_1 = new UniversalKeyCode(-36, 'F8');
    this.l2a_1 = new UniversalKeyCode(-37, 'F9');
    this.m2a_1 = new UniversalKeyCode(-38, 'F10');
    this.n2a_1 = new UniversalKeyCode(-39, 'F11');
    this.o2a_1 = new UniversalKeyCode(-40, 'F12');
  }
  Companion_0.prototype.p2a = function () {
    return this.p28_1;
  };
  Companion_0.prototype.q2a = function () {
    return this.q28_1;
  };
  Companion_0.$metadata$ = objectMeta('Companion');
  var Companion_instance_0;
  function Companion_getInstance_0() {
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function InputManager$registerKeyListener$lambda() {
    return function (it) {
      return true;
    };
  }
  function CursorMode_NORMAL_getInstance() {
    CursorMode_initEntries();
    return CursorMode_NORMAL_instance;
  }
  function CursorMode_LOCKED_getInstance() {
    CursorMode_initEntries();
    return CursorMode_LOCKED_instance;
  }
  function CursorShape_DEFAULT_getInstance() {
    CursorShape_initEntries();
    return CursorShape_DEFAULT_instance;
  }
  function InputManager() {
    Companion_getInstance_0();
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.r2a_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = ArrayList_init_$Create$_0();
    }
    tmp_0.s2a_1 = tmp$ret$1;
    this.t2a_1 = 0;
    this.u2a_1 = 0;
    var tmp_1 = this;
    var tmp$ret$2;
    {
      tmp$ret$2 = LinkedHashMap_init_$Create$();
    }
    tmp_1.v2a_1 = tmp$ret$2;
    this.w2a_1 = new PointerState();
  }
  InputManager.prototype.y2a = function (keyCode, name, filter, callback) {
    var keyStr = toString(keyCode);
    var tmp$ret$2;
    {
      var tmp0_getOrPut = this.v2a_1;
      var value = tmp0_getOrPut.b3(keyCode);
      var tmp;
      if (value == null) {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = ArrayList_init_$Create$_0();
          }
          tmp$ret$1 = tmp$ret$0;
        }
        var answer = tmp$ret$1;
        tmp0_getOrPut.a(keyCode, answer);
        tmp = answer;
      } else {
        tmp = value;
      }
      tmp$ret$2 = tmp;
    }
    var listeners = tmp$ret$2;
    var tmp$ret$3;
    {
      tmp$ret$3 = !listeners.q();
    }
    if (tmp$ret$3) {
      var tmp$ret$10;
      {
        var tmp$ret$9;
        {
          var tmp3_wExt = Log_getInstance();
          var tmp$ret$8;
          {
            var tmp2_logExt = Level_WARN_getInstance();
            var tmp1_log = getKClassFromExpression(this).ei();
            var tmp_0;
            if (tmp2_logExt.e1w_1 >= tmp3_wExt.y1v_1.e1w_1) {
              var tmp_1 = tmp3_wExt.z1v_1;
              var tmp$ret$7;
              {
                var tmp$ret$6;
                {
                  var tmp$ret$5;
                  {
                    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(listeners, 10));
                    var tmp0_iterator = listeners.h();
                    while (tmp0_iterator.n()) {
                      var item = tmp0_iterator.o();
                      var tmp$ret$4;
                      {
                        tmp$ret$4 = item.f26_1;
                      }
                      tmp0_mapTo.b(tmp$ret$4);
                    }
                    tmp$ret$5 = tmp0_mapTo;
                  }
                  tmp$ret$6 = tmp$ret$5;
                }
                tmp$ret$7 = 'Multiple bindings for key ' + keyStr + ': ' + tmp$ret$6;
              }
              tmp_0 = tmp_1(tmp2_logExt, tmp1_log, tmp$ret$7);
            }
            tmp$ret$8 = tmp_0;
          }
          tmp$ret$9 = tmp$ret$8;
        }
        tmp$ret$10 = tmp$ret$9;
      }
    }
    var handler = new KeyEventListener(keyCode, name, filter, callback);
    {
      listeners.b(handler);
    }
    var tmp$ret$14;
    {
      var tmp$ret$13;
      {
        var tmp6_dExt = Log_getInstance();
        var tmp$ret$12;
        {
          var tmp5_logExt = Level_DEBUG_getInstance();
          var tmp4_log = getKClassFromExpression(this).ei();
          var tmp_2;
          if (tmp5_logExt.e1w_1 >= tmp6_dExt.y1v_1.e1w_1) {
            var tmp_3 = tmp6_dExt.z1v_1;
            var tmp$ret$11;
            {
              tmp$ret$11 = 'Registered key handler: "' + name + '" [keyCode=' + keyStr + ']';
            }
            tmp_2 = tmp_3(tmp5_logExt, tmp4_log, tmp$ret$11);
          }
          tmp$ret$12 = tmp_2;
        }
        tmp$ret$13 = tmp$ret$12;
      }
      tmp$ret$14 = tmp$ret$13;
    }
    return handler;
  };
  InputManager.prototype.z2a = function (keyCode, name, filter, callback, $mask0, $handler) {
    if (!(($mask0 & 4) === 0)) {
      filter = InputManager$registerKeyListener$lambda();
    }
    return this.y2a(keyCode, name, filter, callback);
  };
  InputManager.prototype.a2b = function (listener) {
    var tmp0_elvis_lhs = this.v2a_1.b3(listener.e26_1);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return Unit_getInstance();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var listeners = tmp;
    {
      listeners.c4(listener);
    }
  };
  InputManager.prototype.t26 = function (ctx) {
    this.w2a_1.t26(ctx);
    this.s2a_1.t7();
    this.s2a_1.o1(this.r2a_1);
    this.r2a_1.t7();
    var inductionVariable = 0;
    var last = this.s2a_1.m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var evt = this.s2a_1.r(i);
        if (!(evt.j26_1.b2b_1 === 0)) {
          var tmp1_safe_receiver = this.v2a_1.b3(evt.j26_1);
          if (tmp1_safe_receiver == null)
            null;
          else {
            var tmp$ret$0;
            {
              {
              }
              var inductionVariable_0 = 0;
              var last_0 = tmp1_safe_receiver.m() - 1 | 0;
              var tmp;
              if (inductionVariable_0 <= last_0) {
                do {
                  var j = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  if (tmp1_safe_receiver.r(j).g26_1(evt)) {
                    tmp1_safe_receiver.r(j).i26(evt);
                  }
                }
                 while (inductionVariable_0 <= last_0);
                tmp = Unit_getInstance();
              }
              tmp$ret$0 = tmp;
            }
          }
        }
        if (!(evt.k26_1.b2b_1 === 0)) {
          var tmp2_safe_receiver = this.v2a_1.b3(evt.k26_1);
          if (tmp2_safe_receiver == null)
            null;
          else {
            var tmp$ret$1;
            {
              {
              }
              var inductionVariable_1 = 0;
              var last_1 = tmp2_safe_receiver.m() - 1 | 0;
              var tmp_0;
              if (inductionVariable_1 <= last_1) {
                do {
                  var j_0 = inductionVariable_1;
                  inductionVariable_1 = inductionVariable_1 + 1 | 0;
                  if (tmp2_safe_receiver.r(j_0).g26_1(evt)) {
                    tmp2_safe_receiver.r(j_0).i26(evt);
                  }
                }
                 while (inductionVariable_1 <= last_1);
                tmp_0 = Unit_getInstance();
              }
              tmp$ret$1 = tmp_0;
            }
          }
        }
      }
       while (inductionVariable <= last);
    InputStack_getInstance().h2b(this, ctx);
  };
  InputManager.prototype.i2b = function (ev) {
    this.t2a_1 = ev.l26_1;
    var tmp = this;
    var tmp_0 = ev.m26_1;
    Companion_getInstance_0();
    tmp.u2a_1 = tmp_0 & 4;
    this.r2a_1.b(ev);
  };
  InputManager.prototype.j2b = function (typedChar) {
    var tmp$ret$0;
    {
      tmp$ret$0 = Char__toInt_impl_vasixd(typedChar);
    }
    var tmp = tmp$ret$0;
    var tmp_0 = LocalKeyCode_init_$Create$(tmp, null, 2, null);
    Companion_getInstance_0();
    var ev = KeyEvent_init_$Create$(tmp_0, 8 | this.u2a_1, this.t2a_1);
    ev.n26_1 = typedChar;
    this.r2a_1.b(ev);
  };
  InputManager.prototype.l27 = function (pointerId, x, y) {
    return this.w2a_1.l27(pointerId, x, y);
  };
  InputManager.prototype.m27 = function (pointerId) {
    return this.w2a_1.m27(pointerId);
  };
  InputManager.prototype.n27 = function (pointerId) {
    return this.w2a_1.n27(pointerId);
  };
  InputManager.prototype.o27 = function (pointerId, x, y) {
    return this.w2a_1.o27(pointerId, x, y);
  };
  InputManager.prototype.p27 = function (x, y) {
    return this.w2a_1.p27(x, y);
  };
  InputManager.prototype.k2b = function (button, down) {
    return this.w2a_1.q27(button, down);
  };
  InputManager.prototype.r27 = function (xTicks, yTicks) {
    return this.w2a_1.r27(xTicks, yTicks);
  };
  InputManager.prototype.s27 = function () {
    return this.w2a_1.s27();
  };
  InputManager.$metadata$ = classMeta('InputManager');
  function UniversalKeyCode_init_$Init$(code, name, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      name = null;
    UniversalKeyCode.call($this, code, name);
    return $this;
  }
  function UniversalKeyCode_init_$Create$(code, name, $mask0, $marker) {
    return UniversalKeyCode_init_$Init$(code, name, $mask0, $marker, Object.create(UniversalKeyCode.prototype));
  }
  function UniversalKeyCode_init_$Init$_0(codeChar, $this) {
    var tmp$ret$0;
    {
      var tmp0__get_code__88qj9g = uppercaseChar(codeChar);
      tmp$ret$0 = Char__toInt_impl_vasixd(tmp0__get_code__88qj9g);
    }
    var tmp = tmp$ret$0;
    UniversalKeyCode_init_$Init$(tmp, null, 2, null, $this);
    return $this;
  }
  function UniversalKeyCode_init_$Create$_0(codeChar) {
    return UniversalKeyCode_init_$Init$_0(codeChar, Object.create(UniversalKeyCode.prototype));
  }
  function UniversalKeyCode(code, name) {
    KeyCode.call(this, code, false, name);
  }
  UniversalKeyCode.prototype.toString = function () {
    return '{universal:' + this.il() + '}';
  };
  UniversalKeyCode.$metadata$ = classMeta('UniversalKeyCode', undefined, undefined, undefined, undefined, KeyCode.prototype);
  function KeyCode(code, isLocal, name) {
    this.b2b_1 = code;
    this.c2b_1 = isLocal;
    var tmp = this;
    var tmp0_elvis_lhs = name;
    var tmp_0;
    if (tmp0_elvis_lhs == null) {
      var tmp_1;
      var containsArg = this.b2b_1;
      if (32 <= containsArg ? containsArg <= 126 : false) {
        tmp_1 = '' + new Char(numberToChar(this.b2b_1));
      } else {
        tmp_1 = '' + this.b2b_1;
      }
      tmp_0 = tmp_1;
    } else {
      tmp_0 = tmp0_elvis_lhs;
    }
    tmp.d2b_1 = tmp_0;
  }
  KeyCode.prototype.l2b = function () {
    return this.b2b_1;
  };
  KeyCode.prototype.il = function () {
    return this.d2b_1;
  };
  KeyCode.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof KeyCode))
      return false;
    return this.b2b_1 === other.b2b_1 ? this.c2b_1 === other.c2b_1 : false;
  };
  KeyCode.prototype.hashCode = function () {
    return imul(this.b2b_1, this.c2b_1 ? -1 : 1);
  };
  KeyCode.$metadata$ = classMeta('KeyCode');
  function LocalKeyCode_init_$Init$(code, name, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      name = null;
    LocalKeyCode.call($this, code, name);
    return $this;
  }
  function LocalKeyCode_init_$Create$(code, name, $mask0, $marker) {
    return LocalKeyCode_init_$Init$(code, name, $mask0, $marker, Object.create(LocalKeyCode.prototype));
  }
  function LocalKeyCode_init_$Init$_0(codeChar, $this) {
    var tmp$ret$0;
    {
      var tmp0__get_code__88qj9g = uppercaseChar(codeChar);
      tmp$ret$0 = Char__toInt_impl_vasixd(tmp0__get_code__88qj9g);
    }
    var tmp = tmp$ret$0;
    LocalKeyCode_init_$Init$(tmp, null, 2, null, $this);
    return $this;
  }
  function LocalKeyCode_init_$Create$_0(codeChar) {
    return LocalKeyCode_init_$Init$_0(codeChar, Object.create(LocalKeyCode.prototype));
  }
  function LocalKeyCode(code, name) {
    KeyCode.call(this, code, true, name);
  }
  LocalKeyCode.prototype.toString = function () {
    return '{local:' + this.il() + '}';
  };
  LocalKeyCode.$metadata$ = classMeta('LocalKeyCode', undefined, undefined, undefined, undefined, KeyCode.prototype);
  function KeyValueStorage() {
  }
  KeyValueStorage.$metadata$ = interfaceMeta('KeyValueStorage');
  function DelayedCallback(callOnFrame, callback) {
    this.m2b_1 = callOnFrame;
    this.n2b_1 = callback;
  }
  DelayedCallback.$metadata$ = classMeta('DelayedCallback');
  function Companion_1() {
    Companion_instance_1 = this;
    this.o2b_1 = '0.10.0-SNAPSHOT';
  }
  Companion_1.$metadata$ = objectMeta('Companion');
  var Companion_instance_1;
  function Companion_getInstance_1() {
    if (Companion_instance_1 == null)
      new Companion_1();
    return Companion_instance_1;
  }
  function KoolContext$applicationCallbacks$1() {
  }
  KoolContext$applicationCallbacks$1.$metadata$ = classMeta(undefined, [ApplicationCallbacks]);
  function KoolContext$defaultPbrBrdfLut$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$0;
      {
        var tmp0_also = new BrdfLutPass(this$0.c2c_1);
        {
        }
        {
          this$0.h2c(tmp0_also);
        }
        tmp$ret$0 = tmp0_also;
      }
      return tmp$ret$0.j2d();
    };
  }
  function KoolContext() {
    Companion_getInstance_1();
    this.p2b_1 = 1.0;
    this.q2b_1 = true;
    this.r2b_1 = false;
    this.s2b_1 = new EngineStats();
    this.t2b_1 = new Mat4d();
    this.u2b_1 = new Mat4d();
    this.v2b_1 = (new Mat4d()).l2d(0.5, 0.5, 0.5).m2d(0.5, 0.5, 0.5);
    var tmp = this;
    tmp.w2b_1 = new KoolContext$applicationCallbacks$1();
    var tmp_0 = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp_0.x2b_1 = tmp$ret$0;
    var tmp_1 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = ArrayList_init_$Create$_0();
    }
    tmp_1.y2b_1 = tmp$ret$1;
    var tmp_2 = this;
    var tmp$ret$2;
    {
      tmp$ret$2 = ArrayList_init_$Create$_0();
    }
    tmp_2.z2b_1 = tmp$ret$2;
    this.a2c_1 = 60.0;
    var tmp_3 = this;
    var tmp$ret$3;
    {
      tmp$ret$3 = ArrayList_init_$Create$_0();
    }
    tmp_3.b2c_1 = tmp$ret$3;
    this.c2c_1 = new Scene('backgroundScene');
    var tmp_4 = this;
    tmp_4.d2c_1 = lazy(KoolContext$defaultPbrBrdfLut$delegate$lambda(this));
    var tmp_5 = this;
    var tmp$ret$4;
    {
      tmp$ret$4 = ArrayList_init_$Create$_0();
    }
    tmp_5.e2c_1 = tmp$ret$4;
    var tmp_6 = this;
    var tmp$ret$5;
    {
      tmp$ret$5 = ArrayList_init_$Create$_0();
    }
    tmp_6.f2c_1 = tmp$ret$5;
    var tmp_7 = this;
    var tmp_8 = 0;
    var tmp_9 = 25;
    var tmp_10 = new Float64Array(tmp_9);
    while (tmp_8 < tmp_9) {
      var tmp_11 = tmp_8;
      var tmp$ret$6;
      {
        tmp$ret$6 = 0.017;
      }
      tmp_10[tmp_11] = tmp$ret$6;
      tmp_8 = tmp_8 + 1 | 0;
    }
    tmp_7.g2c_1 = tmp_10;
  }
  KoolContext.prototype.n2d = function (value) {
    var userValue = this.w2b_1.n1r(value, this);
    if (!(userValue === this.p2b_1)) {
      var tmp$ret$4;
      {
        var tmp$ret$3;
        {
          var tmp2_dExt = Log_getInstance();
          var tmp$ret$2;
          {
            var tmp1_logExt = Level_DEBUG_getInstance();
            var tmp0_log = getKClassFromExpression(this).ei();
            var tmp;
            if (tmp1_logExt.e1w_1 >= tmp2_dExt.y1v_1.e1w_1) {
              var tmp_0 = tmp2_dExt.z1v_1;
              var tmp$ret$1;
              {
                var tmp$ret$0;
                {
                  var tmp0_roundToInt = userValue * 100.0;
                  tmp$ret$0 = roundToInt(tmp0_roundToInt);
                }
                tmp$ret$1 = 'Window scale changed: (' + tmp$ret$0 + ' %)';
              }
              tmp = tmp_0(tmp1_logExt, tmp0_log, tmp$ret$1);
            }
            tmp$ret$2 = tmp;
          }
          tmp$ret$3 = tmp$ret$2;
        }
        tmp$ret$4 = tmp$ret$3;
      }
      this.p2b_1 = userValue;
      {
        var tmp3_forEach = this.x2b_1;
        var tmp0_iterator = tmp3_forEach.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          {
            element(this);
          }
        }
      }
    }
  };
  KoolContext.prototype.o2d = function (value) {
    this.q2b_1 = value;
    {
      var tmp0_forEach = this.y2b_1;
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          element(this);
        }
      }
    }
  };
  KoolContext.prototype.p2d = function () {
    return this.r2b_1;
  };
  KoolContext.prototype.s2d = function () {
    return this.s2b_1;
  };
  KoolContext.prototype.t2d = function () {
    return this.w2b_1;
  };
  KoolContext.prototype.u2d = function () {
    return this.b2c_1;
  };
  KoolContext.prototype.v2d = function () {
    return this.c2c_1.b2f();
  };
  KoolContext.prototype.c2f = function () {
    return this.f2c_1;
  };
  KoolContext.prototype.g2f = function (frames, callback) {
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.e2c_1;
      var tmp1_plusAssign = new DelayedCallback(Time_getInstance().a21_1 + frames | 0, callback);
      tmp0_plusAssign.b(tmp1_plusAssign);
    }
  };
  KoolContext.prototype.h2f = function (pipeline) {
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.f2c_1;
      tmp0_plusAssign.b(pipeline);
    }
  };
  KoolContext.prototype.h2c = function (renderPass) {
    this.c2c_1.i2f(renderPass);
  };
  KoolContext.prototype.j2f = function (dt) {
    if (this.r2b_1) {
      Profiling_getInstance().o2f('!main-render-loop');
    }
    Time_getInstance().y20_1 = dt;
    var tmp0_this = Time_getInstance();
    tmp0_this.z20_1 = tmp0_this.z20_1 + dt;
    var tmp1_this = Time_getInstance();
    var tmp2 = tmp1_this.a21_1;
    tmp1_this.a21_1 = tmp2 + 1 | 0;
    var tmp$ret$0;
    {
      var tmp0_isNotEmpty = this.e2c_1;
      tmp$ret$0 = !tmp0_isNotEmpty.q();
    }
    if (tmp$ret$0) {
      var inductionVariable = this.e2c_1.m() - 1 | 0;
      if (0 <= inductionVariable)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + -1 | 0;
          var callback = this.e2c_1.r(i);
          if (callback.m2b_1 <= Time_getInstance().a21_1) {
            callback.n2b_1(this);
            this.e2c_1.d4(i);
          }
        }
         while (0 <= inductionVariable);
    }
    this.g2c_1[Time_getInstance().a21_1 % this.g2c_1.length | 0] = dt;
    var sum = 0.0;
    var inductionVariable_0 = 0;
    var last = this.g2c_1.length - 1 | 0;
    if (inductionVariable_0 <= last)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        sum = sum + this.g2c_1[i_0];
      }
       while (inductionVariable_0 <= last);
    this.a2c_1 = this.g2c_1.length / sum * 0.1 + this.a2c_1 * 0.9;
    this.r2d().t26(this);
    var inductionVariable_1 = 0;
    var last_0 = this.z2b_1.m() - 1 | 0;
    if (inductionVariable_1 <= last_0)
      do {
        var i_1 = inductionVariable_1;
        inductionVariable_1 = inductionVariable_1 + 1 | 0;
        this.z2b_1.r(i_1)(this);
      }
       while (inductionVariable_1 <= last_0);
    this.c2c_1.p2f(this);
    var inductionVariable_2 = 0;
    var last_1 = this.b2c_1.m() - 1 | 0;
    if (inductionVariable_2 <= last_1)
      do {
        var i_2 = inductionVariable_2;
        inductionVariable_2 = inductionVariable_2 + 1 | 0;
        if (this.b2c_1.r(i_2).f2g()) {
          this.b2c_1.r(i_2).p2f(this);
        }
      }
       while (inductionVariable_2 <= last_1);
    if (this.r2b_1) {
      Profiling_getInstance().g2g('!main-render-loop');
    }
  };
  KoolContext.$metadata$ = classMeta('KoolContext');
  function KoolException_init_$Init$(message, $this) {
    KoolException.call($this, message, null);
    return $this;
  }
  function KoolException_init_$Create$(message) {
    var tmp = KoolException_init_$Init$(message, Object.create(KoolException.prototype));
    captureStack(tmp, KoolException_init_$Create$);
    return tmp;
  }
  function KoolException(message, cause) {
    Exception_init_$Init$(message, cause, this);
    captureStack(this, KoolException);
  }
  KoolException.$metadata$ = classMeta('KoolException', undefined, undefined, undefined, undefined, Exception.prototype);
  function Companion_2() {
    Companion_instance_2 = this;
    this.h2g_1 = new Object();
    this.i2g_1 = new Mat3f();
    this.j2g_1 = new Mat3f();
  }
  Companion_2.$metadata$ = objectMeta('Companion');
  var Companion_instance_2;
  function Companion_getInstance_2() {
    if (Companion_instance_2 == null)
      new Companion_2();
    return Companion_instance_2;
  }
  function Mat3f() {
    Companion_getInstance_2();
    this.k2g_1 = new Float32Array(9);
    this.l2g();
  }
  Mat3f.prototype.l2g = function () {
    var inductionVariable = 1;
    if (inductionVariable <= 8)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.m2g(i, 0.0);
      }
       while (inductionVariable <= 8);
    var inductionVariable_0 = 0;
    var last = getProgressionLastElement(0, 8, 4);
    if (inductionVariable_0 <= last)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 4 | 0;
        this.m2g(i_0, 1.0);
      }
       while (!(i_0 === last));
    return this;
  };
  Mat3f.prototype.m2g = function (i, value) {
    this.k2g_1[i] = value;
  };
  Mat3f.$metadata$ = classMeta('Mat3f');
  function setLookAt($this, px, py, pz, lx, ly, lz, upx, upy, upz) {
    var fx = lx - px;
    var fy = ly - py;
    var fz = lz - pz;
    var tmp$ret$0;
    {
      var tmp0_sqrt = fx * fx + fy * fy + fz * fz;
      tmp$ret$0 = Math.sqrt(tmp0_sqrt);
    }
    var rlf = 1.0 / tmp$ret$0;
    fx = fx * rlf;
    fy = fy * rlf;
    fz = fz * rlf;
    var sx = fy * upz - fz * upy;
    var sy = fz * upx - fx * upz;
    var sz = fx * upy - fy * upx;
    var tmp$ret$1;
    {
      var tmp1_sqrt = sx * sx + sy * sy + sz * sz;
      tmp$ret$1 = Math.sqrt(tmp1_sqrt);
    }
    var rls = 1.0 / tmp$ret$1;
    sx = sx * rls;
    sy = sy * rls;
    sz = sz * rls;
    var ux = sy * fz - sz * fy;
    var uy = sz * fx - sx * fz;
    var uz = sx * fy - sy * fx;
    $this.k2d_1[0] = sx;
    $this.k2d_1[1] = ux;
    $this.k2d_1[2] = -fx;
    $this.k2d_1[3] = 0.0;
    $this.k2d_1[4] = sy;
    $this.k2d_1[5] = uy;
    $this.k2d_1[6] = -fy;
    $this.k2d_1[7] = 0.0;
    $this.k2d_1[8] = sz;
    $this.k2d_1[9] = uz;
    $this.k2d_1[10] = -fz;
    $this.k2d_1[11] = 0.0;
    $this.k2d_1[12] = 0.0;
    $this.k2d_1[13] = 0.0;
    $this.k2d_1[14] = 0.0;
    $this.k2d_1[15] = 1.0;
    return $this.l2d(-px, -py, -pz);
  }
  function Companion_3() {
    Companion_instance_3 = this;
    this.n2g_1 = new Object();
    this.o2g_1 = new Mat4d();
    this.p2g_1 = new Mat4d();
  }
  Companion_3.$metadata$ = objectMeta('Companion');
  var Companion_instance_3;
  function Companion_getInstance_3() {
    if (Companion_instance_3 == null)
      new Companion_3();
    return Companion_instance_3;
  }
  function Mat4d() {
    Companion_getInstance_3();
    this.k2d_1 = new Float64Array(16);
    this.l2g();
  }
  Mat4d.prototype.l2d = function (tx, ty, tz) {
    var inductionVariable = 0;
    if (inductionVariable <= 3)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp1_array = this.k2d_1;
        var tmp2_index0 = 12 + i | 0;
        tmp1_array[tmp2_index0] = tmp1_array[tmp2_index0] + (this.k2d_1[i] * tx + this.k2d_1[4 + i | 0] * ty + this.k2d_1[8 + i | 0] * tz);
      }
       while (inductionVariable <= 3);
    return this;
  };
  Mat4d.prototype.m2d = function (sx, sy, sz) {
    var inductionVariable = 0;
    if (inductionVariable <= 3)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp1_array = this.k2d_1;
        var tmp2_index0 = i;
        tmp1_array[tmp2_index0] = tmp1_array[tmp2_index0] * sx;
        var tmp3_array = this.k2d_1;
        var tmp4_index0 = 4 + i | 0;
        tmp3_array[tmp4_index0] = tmp3_array[tmp4_index0] * sy;
        var tmp5_array = this.k2d_1;
        var tmp6_index0 = 8 + i | 0;
        tmp5_array[tmp6_index0] = tmp5_array[tmp6_index0] * sz;
      }
       while (inductionVariable <= 3);
    return this;
  };
  Mat4d.prototype.q2g = function () {
    var tmp$ret$0;
    {
      var tmp0_sqrt = this.r2g(0, 0) * this.r2g(0, 0) + this.r2g(1, 0) * this.r2g(1, 0) + this.r2g(2, 0) * this.r2g(2, 0);
      tmp$ret$0 = Math.sqrt(tmp0_sqrt);
    }
    var s0 = 1.0 / tmp$ret$0;
    var tmp$ret$1;
    {
      var tmp1_sqrt = this.r2g(0, 1) * this.r2g(0, 1) + this.r2g(1, 1) * this.r2g(1, 1) + this.r2g(2, 1) * this.r2g(2, 1);
      tmp$ret$1 = Math.sqrt(tmp1_sqrt);
    }
    var s1 = 1.0 / tmp$ret$1;
    var tmp$ret$2;
    {
      var tmp2_sqrt = this.r2g(0, 2) * this.r2g(0, 2) + this.r2g(1, 2) * this.r2g(1, 2) + this.r2g(2, 2) * this.r2g(2, 2);
      tmp$ret$2 = Math.sqrt(tmp2_sqrt);
    }
    var s2 = 1.0 / tmp$ret$2;
    this.m2d(s0, s1, s2);
    return this;
  };
  Mat4d.prototype.s2g = function (result, eps) {
    var src0 = this.k2d_1[0];
    var src4 = this.k2d_1[1];
    var src8 = this.k2d_1[2];
    var src12 = this.k2d_1[3];
    var src1 = this.k2d_1[4];
    var src5 = this.k2d_1[5];
    var src9 = this.k2d_1[6];
    var src13 = this.k2d_1[7];
    var src2 = this.k2d_1[8];
    var src6 = this.k2d_1[9];
    var src10 = this.k2d_1[10];
    var src14 = this.k2d_1[11];
    var src3 = this.k2d_1[12];
    var src7 = this.k2d_1[13];
    var src11 = this.k2d_1[14];
    var src15 = this.k2d_1[15];
    var atmp0 = src10 * src15;
    var atmp1 = src11 * src14;
    var atmp2 = src9 * src15;
    var atmp3 = src11 * src13;
    var atmp4 = src9 * src14;
    var atmp5 = src10 * src13;
    var atmp6 = src8 * src15;
    var atmp7 = src11 * src12;
    var atmp8 = src8 * src14;
    var atmp9 = src10 * src12;
    var atmp10 = src8 * src13;
    var atmp11 = src9 * src12;
    var dst0 = atmp0 * src5 + atmp3 * src6 + atmp4 * src7 - (atmp1 * src5 + atmp2 * src6 + atmp5 * src7);
    var dst1 = atmp1 * src4 + atmp6 * src6 + atmp9 * src7 - (atmp0 * src4 + atmp7 * src6 + atmp8 * src7);
    var dst2 = atmp2 * src4 + atmp7 * src5 + atmp10 * src7 - (atmp3 * src4 + atmp6 * src5 + atmp11 * src7);
    var dst3 = atmp5 * src4 + atmp8 * src5 + atmp11 * src6 - (atmp4 * src4 + atmp9 * src5 + atmp10 * src6);
    var dst4 = atmp1 * src1 + atmp2 * src2 + atmp5 * src3 - (atmp0 * src1 + atmp3 * src2 + atmp4 * src3);
    var dst5 = atmp0 * src0 + atmp7 * src2 + atmp8 * src3 - (atmp1 * src0 + atmp6 * src2 + atmp9 * src3);
    var dst6 = atmp3 * src0 + atmp6 * src1 + atmp11 * src3 - (atmp2 * src0 + atmp7 * src1 + atmp10 * src3);
    var dst7 = atmp4 * src0 + atmp9 * src1 + atmp10 * src2 - (atmp5 * src0 + atmp8 * src1 + atmp11 * src2);
    var btmp0 = src2 * src7;
    var btmp1 = src3 * src6;
    var btmp2 = src1 * src7;
    var btmp3 = src3 * src5;
    var btmp4 = src1 * src6;
    var btmp5 = src2 * src5;
    var btmp6 = src0 * src7;
    var btmp7 = src3 * src4;
    var btmp8 = src0 * src6;
    var btmp9 = src2 * src4;
    var btmp10 = src0 * src5;
    var btmp11 = src1 * src4;
    var dst8 = btmp0 * src13 + btmp3 * src14 + btmp4 * src15 - (btmp1 * src13 + btmp2 * src14 + btmp5 * src15);
    var dst9 = btmp1 * src12 + btmp6 * src14 + btmp9 * src15 - (btmp0 * src12 + btmp7 * src14 + btmp8 * src15);
    var dst10 = btmp2 * src12 + btmp7 * src13 + btmp10 * src15 - (btmp3 * src12 + btmp6 * src13 + btmp11 * src15);
    var dst11 = btmp5 * src12 + btmp8 * src13 + btmp11 * src14 - (btmp4 * src12 + btmp9 * src13 + btmp10 * src14);
    var dst12 = btmp2 * src10 + btmp5 * src11 + btmp1 * src9 - (btmp4 * src11 + btmp0 * src9 + btmp3 * src10);
    var dst13 = btmp8 * src11 + btmp0 * src8 + btmp7 * src10 - (btmp6 * src10 + btmp9 * src11 + btmp1 * src8);
    var dst14 = btmp6 * src9 + btmp11 * src11 + btmp3 * src8 - (btmp10 * src11 + btmp2 * src8 + btmp7 * src9);
    var dst15 = btmp10 * src10 + btmp4 * src8 + btmp9 * src9 - (btmp8 * src9 + btmp11 * src10 + btmp5 * src8);
    var det = src0 * dst0 + src1 * dst1 + src2 * dst2 + src3 * dst3;
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = Math.abs(det);
      }
      tmp$ret$1 = tmp$ret$0 <= eps;
    }
    if (tmp$ret$1) {
      return false;
    }
    var invdet = 1.0 / det;
    result.k2d_1[0] = dst0 * invdet;
    result.k2d_1[1] = dst1 * invdet;
    result.k2d_1[2] = dst2 * invdet;
    result.k2d_1[3] = dst3 * invdet;
    result.k2d_1[4] = dst4 * invdet;
    result.k2d_1[5] = dst5 * invdet;
    result.k2d_1[6] = dst6 * invdet;
    result.k2d_1[7] = dst7 * invdet;
    result.k2d_1[8] = dst8 * invdet;
    result.k2d_1[9] = dst9 * invdet;
    result.k2d_1[10] = dst10 * invdet;
    result.k2d_1[11] = dst11 * invdet;
    result.k2d_1[12] = dst12 * invdet;
    result.k2d_1[13] = dst13 * invdet;
    result.k2d_1[14] = dst14 * invdet;
    result.k2d_1[15] = dst15 * invdet;
    return true;
  };
  Mat4d.prototype.t2g = function (result, eps, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      eps = 0.0;
    return this.s2g(result, eps);
  };
  Mat4d.prototype.u2g = function (vec, w) {
    var x = vec.e23() * this.r2g(0, 0) + vec.g23() * this.r2g(0, 1) + vec.w2g() * this.r2g(0, 2) + w * this.r2g(0, 3);
    var y = vec.e23() * this.r2g(1, 0) + vec.g23() * this.r2g(1, 1) + vec.w2g() * this.r2g(1, 2) + w * this.r2g(1, 3);
    var z = vec.e23() * this.r2g(2, 0) + vec.g23() * this.r2g(2, 1) + vec.w2g() * this.r2g(2, 2) + w * this.r2g(2, 3);
    return vec.x2g(x, y, z);
  };
  Mat4d.prototype.y2g = function (vec, w, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      w = 1.0;
    return this.u2g(vec, w);
  };
  Mat4d.prototype.z2g = function (other) {
    var tmp$ret$1;
    {
      var tmp0_lock = Companion_getInstance_3().n2g_1;
      var tmp$ret$0;
      {
        this.a2h(other, Companion_getInstance_3().o2g_1);
        tmp$ret$0 = this.b2h(Companion_getInstance_3().o2g_1);
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  Mat4d.prototype.a2h = function (other, result) {
    var inductionVariable = 0;
    if (inductionVariable <= 3)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var inductionVariable_0 = 0;
        if (inductionVariable_0 <= 3)
          do {
            var j = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var x = 0.0;
            var inductionVariable_1 = 0;
            if (inductionVariable_1 <= 3)
              do {
                var k = inductionVariable_1;
                inductionVariable_1 = inductionVariable_1 + 1 | 0;
                x = x + this.k2d_1[j + imul(k, 4) | 0] * other.k2d_1[imul(i, 4) + k | 0];
              }
               while (inductionVariable_1 <= 3);
            result.k2d_1[imul(i, 4) + j | 0] = x;
          }
           while (inductionVariable_0 <= 3);
      }
       while (inductionVariable <= 3);
    return result;
  };
  Mat4d.prototype.b2h = function (other) {
    var inductionVariable = 0;
    if (inductionVariable <= 15)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.k2d_1[i] = other.k2d_1[i];
      }
       while (inductionVariable <= 15);
    return this;
  };
  Mat4d.prototype.l2g = function () {
    var inductionVariable = 1;
    if (inductionVariable <= 15)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.k2d_1[i] = 0.0;
      }
       while (inductionVariable <= 15);
    this.k2d_1[0] = 1.0;
    this.k2d_1[5] = 1.0;
    this.k2d_1[10] = 1.0;
    this.k2d_1[15] = 1.0;
    return this;
  };
  Mat4d.prototype.c2h = function (position, lookAt, up) {
    return setLookAt(this, position.e23(), position.g23(), position.w2g(), lookAt.e23(), lookAt.g23(), lookAt.w2g(), up.e23(), up.g23(), up.w2g());
  };
  Mat4d.prototype.e2h = function (left, right, bottom, top, near, far) {
    return this.f2h(left, right, bottom, top, near, far);
  };
  Mat4d.prototype.f2h = function (left, right, bottom, top, near, far) {
    if (left === right) {
      throw IllegalArgumentException_init_$Create$('left == right');
    }
    if (bottom === top) {
      throw IllegalArgumentException_init_$Create$('bottom == top');
    }
    if (near === far) {
      throw IllegalArgumentException_init_$Create$('near == far');
    }
    var width = 1.0 / (right - left);
    var height = 1.0 / (top - bottom);
    var depth = 1.0 / (far - near);
    var x = 2.0 * width;
    var y = 2.0 * height;
    var z = -2.0 * depth;
    var tx = -(right + left) * width;
    var ty = -(top + bottom) * height;
    var tz = -(far + near) * depth;
    this.k2d_1[0] = x;
    this.k2d_1[5] = y;
    this.k2d_1[10] = z;
    this.k2d_1[12] = tx;
    this.k2d_1[13] = ty;
    this.k2d_1[14] = tz;
    this.k2d_1[15] = 1.0;
    this.k2d_1[1] = 0.0;
    this.k2d_1[2] = 0.0;
    this.k2d_1[3] = 0.0;
    this.k2d_1[4] = 0.0;
    this.k2d_1[6] = 0.0;
    this.k2d_1[7] = 0.0;
    this.k2d_1[8] = 0.0;
    this.k2d_1[9] = 0.0;
    this.k2d_1[11] = 0.0;
    return this;
  };
  Mat4d.prototype.g2h = function (fovy, aspect, near, far) {
    return this.h2h(fovy, aspect, near, far);
  };
  Mat4d.prototype.h2h = function (fovy, aspect, near, far) {
    var tmp$ret$0;
    {
      var tmp0_tan = fovy * (get_PI() / 360.0);
      tmp$ret$0 = Math.tan(tmp0_tan);
    }
    var f = 1.0 / tmp$ret$0;
    var rangeReciprocal = 1.0 / (near - far);
    this.k2d_1[0] = f / aspect;
    this.k2d_1[1] = 0.0;
    this.k2d_1[2] = 0.0;
    this.k2d_1[3] = 0.0;
    this.k2d_1[4] = 0.0;
    this.k2d_1[5] = f;
    this.k2d_1[6] = 0.0;
    this.k2d_1[7] = 0.0;
    this.k2d_1[8] = 0.0;
    this.k2d_1[9] = 0.0;
    this.k2d_1[10] = (far + near) * rangeReciprocal;
    this.k2d_1[11] = -1.0;
    this.k2d_1[12] = 0.0;
    this.k2d_1[13] = 0.0;
    this.k2d_1[14] = 2.0 * far * near * rangeReciprocal;
    this.k2d_1[15] = 0.0;
    return this;
  };
  Mat4d.prototype.r2g = function (row, col) {
    return this.k2d_1[imul(col, 4) + row | 0];
  };
  Mat4d.$metadata$ = classMeta('Mat4d');
  function Companion_4() {
    Companion_instance_4 = this;
    this.i2h_1 = new Object();
    this.j2h_1 = new Mat4f();
    this.k2h_1 = new Mat4f();
  }
  Companion_4.$metadata$ = objectMeta('Companion');
  var Companion_instance_4;
  function Companion_getInstance_4() {
    if (Companion_instance_4 == null)
      new Companion_4();
    return Companion_instance_4;
  }
  function Mat4f() {
    Companion_getInstance_4();
    this.l2h_1 = new Float32Array(16);
    this.l2g();
  }
  Mat4f.prototype.m2h = function () {
    return this.l2h_1;
  };
  Mat4f.prototype.n2h = function (tx, ty, tz) {
    var inductionVariable = 0;
    if (inductionVariable <= 3)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp1_array = this.l2h_1;
        var tmp2_index0 = 12 + i | 0;
        tmp1_array[tmp2_index0] = tmp1_array[tmp2_index0] + (this.l2h_1[i] * tx + this.l2h_1[4 + i | 0] * ty + this.l2h_1[8 + i | 0] * tz);
      }
       while (inductionVariable <= 3);
    return this;
  };
  Mat4f.prototype.o2h = function (angleDeg, axX, axY, axZ) {
    var tmp$ret$1;
    {
      var tmp0_lock = Companion_getInstance_4().i2h_1;
      var tmp$ret$0;
      {
        Companion_getInstance_4().j2h_1.p2h(angleDeg, axX, axY, axZ);
        tmp$ret$0 = this.r2h(this.q2h(Companion_getInstance_4().j2h_1, Companion_getInstance_4().k2h_1));
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  Mat4f.prototype.s2h = function (angleDeg, axis) {
    return this.o2h(angleDeg, axis.e23(), axis.g23(), axis.w2g());
  };
  Mat4f.prototype.t2h = function (sx, sy, sz) {
    var inductionVariable = 0;
    if (inductionVariable <= 3)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp1_array = this.l2h_1;
        var tmp2_index0 = i;
        tmp1_array[tmp2_index0] = tmp1_array[tmp2_index0] * sx;
        var tmp3_array = this.l2h_1;
        var tmp4_index0 = 4 + i | 0;
        tmp3_array[tmp4_index0] = tmp3_array[tmp4_index0] * sy;
        var tmp5_array = this.l2h_1;
        var tmp6_index0 = 8 + i | 0;
        tmp5_array[tmp6_index0] = tmp5_array[tmp6_index0] * sz;
      }
       while (inductionVariable <= 3);
    return this;
  };
  Mat4f.prototype.u2g = function (vec, w) {
    var x = vec.e23() * this.r2g(0, 0) + vec.g23() * this.r2g(0, 1) + vec.w2g() * this.r2g(0, 2) + w * this.r2g(0, 3);
    var y = vec.e23() * this.r2g(1, 0) + vec.g23() * this.r2g(1, 1) + vec.w2g() * this.r2g(1, 2) + w * this.r2g(1, 3);
    var z = vec.e23() * this.r2g(2, 0) + vec.g23() * this.r2g(2, 1) + vec.w2g() * this.r2g(2, 2) + w * this.r2g(2, 3);
    return vec.x2g(x, y, z);
  };
  Mat4f.prototype.y2g = function (vec, w, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      w = 1.0;
    return this.u2g(vec, w);
  };
  Mat4f.prototype.q2h = function (other, result) {
    var inductionVariable = 0;
    if (inductionVariable <= 3)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var inductionVariable_0 = 0;
        if (inductionVariable_0 <= 3)
          do {
            var j = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var x = 0.0;
            var inductionVariable_1 = 0;
            if (inductionVariable_1 <= 3)
              do {
                var k = inductionVariable_1;
                inductionVariable_1 = inductionVariable_1 + 1 | 0;
                x = x + this.l2h_1[j + imul(k, 4) | 0] * other.l2h_1[imul(i, 4) + k | 0];
              }
               while (inductionVariable_1 <= 3);
            result.l2h_1[imul(i, 4) + j | 0] = x;
          }
           while (inductionVariable_0 <= 3);
      }
       while (inductionVariable <= 3);
    return result;
  };
  Mat4f.prototype.r2h = function (other) {
    var inductionVariable = 0;
    if (inductionVariable <= 15)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.l2h_1[i] = other.l2h_1[i];
      }
       while (inductionVariable <= 15);
    return this;
  };
  Mat4f.prototype.b2h = function (other) {
    var inductionVariable = 0;
    if (inductionVariable <= 15)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.l2h_1[i] = other.k2d_1[i];
      }
       while (inductionVariable <= 15);
    return this;
  };
  Mat4f.prototype.l2g = function () {
    var inductionVariable = 1;
    if (inductionVariable <= 15)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.l2h_1[i] = 0.0;
      }
       while (inductionVariable <= 15);
    this.l2h_1[0] = 1.0;
    this.l2h_1[5] = 1.0;
    this.l2h_1[10] = 1.0;
    this.l2h_1[15] = 1.0;
    return this;
  };
  Mat4f.prototype.p2h = function (rotA, axX, axY, axZ) {
    var tmp$ret$0;
    {
      tmp$ret$0 = rotA * get_DEG_2_RAD();
    }
    var a = tmp$ret$0;
    var x = axX;
    var y = axY;
    var z = axZ;
    this.l2h_1[3] = 0.0;
    this.l2h_1[7] = 0.0;
    this.l2h_1[11] = 0.0;
    this.l2h_1[12] = 0.0;
    this.l2h_1[13] = 0.0;
    this.l2h_1[14] = 0.0;
    this.l2h_1[15] = 1.0;
    var tmp$ret$1;
    {
      tmp$ret$1 = Math.sin(a);
    }
    var s = tmp$ret$1;
    var tmp$ret$2;
    {
      tmp$ret$2 = Math.cos(a);
    }
    var c = tmp$ret$2;
    if ((x > 0.0 ? y === 0.0 : false) ? z === 0.0 : false) {
      this.l2h_1[5] = c;
      this.l2h_1[10] = c;
      this.l2h_1[6] = s;
      this.l2h_1[9] = -s;
      this.l2h_1[1] = 0.0;
      this.l2h_1[2] = 0.0;
      this.l2h_1[4] = 0.0;
      this.l2h_1[8] = 0.0;
      this.l2h_1[0] = 1.0;
    } else if ((x === 0.0 ? y > 0.0 : false) ? z === 0.0 : false) {
      this.l2h_1[0] = c;
      this.l2h_1[10] = c;
      this.l2h_1[8] = s;
      this.l2h_1[2] = -s;
      this.l2h_1[1] = 0.0;
      this.l2h_1[4] = 0.0;
      this.l2h_1[6] = 0.0;
      this.l2h_1[9] = 0.0;
      this.l2h_1[5] = 1.0;
    } else if ((x === 0.0 ? y === 0.0 : false) ? z > 0.0 : false) {
      this.l2h_1[0] = c;
      this.l2h_1[5] = c;
      this.l2h_1[1] = s;
      this.l2h_1[4] = -s;
      this.l2h_1[2] = 0.0;
      this.l2h_1[6] = 0.0;
      this.l2h_1[8] = 0.0;
      this.l2h_1[9] = 0.0;
      this.l2h_1[10] = 1.0;
    } else {
      var tmp$ret$3;
      {
        var tmp0_sqrt = x * x + y * y + z * z;
        tmp$ret$3 = Math.sqrt(tmp0_sqrt);
      }
      var recipLen = 1.0 / tmp$ret$3;
      x = x * recipLen;
      y = y * recipLen;
      z = z * recipLen;
      var nc = 1.0 - c;
      var xy = x * y;
      var yz = y * z;
      var zx = z * x;
      var xs = x * s;
      var ys = y * s;
      var zs = z * s;
      this.l2h_1[0] = x * x * nc + c;
      this.l2h_1[4] = xy * nc - zs;
      this.l2h_1[8] = zx * nc + ys;
      this.l2h_1[1] = xy * nc + zs;
      this.l2h_1[5] = y * y * nc + c;
      this.l2h_1[9] = yz * nc - xs;
      this.l2h_1[2] = zx * nc - ys;
      this.l2h_1[6] = yz * nc + xs;
      this.l2h_1[10] = z * z * nc + c;
    }
    return this;
  };
  Mat4f.prototype.r2g = function (row, col) {
    return this.l2h_1[imul(col, 4) + row | 0];
  };
  Mat4f.$metadata$ = classMeta('Mat4f');
  function Mat4fStack_init_$Init$(stackSize, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0)) {
      Companion_getInstance_5();
      stackSize = 32;
    }
    Mat4fStack.call($this, stackSize);
    return $this;
  }
  function Mat4fStack_init_$Create$(stackSize, $mask0, $marker) {
    return Mat4fStack_init_$Init$(stackSize, $mask0, $marker, Object.create(Mat4fStack.prototype));
  }
  function Companion_5() {
    Companion_instance_5 = this;
    this.u2h_1 = 32;
  }
  Companion_5.$metadata$ = objectMeta('Companion');
  var Companion_instance_5;
  function Companion_getInstance_5() {
    if (Companion_instance_5 == null)
      new Companion_5();
    return Companion_instance_5;
  }
  function Mat4fStack(stackSize) {
    Companion_getInstance_5();
    Mat4f.call(this);
    this.w2h_1 = stackSize;
    this.x2h_1 = 0;
    this.y2h_1 = new Float32Array(imul(16, this.w2h_1));
  }
  Mat4fStack.prototype.z2h = function () {
    if (this.x2h_1 >= this.w2h_1) {
      throw KoolException_init_$Create$('Matrix stack overflow');
    }
    var offset = imul(this.x2h_1, 16);
    var inductionVariable = 0;
    if (inductionVariable <= 15)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.y2h_1[offset + i | 0] = this.m2h()[i];
      }
       while (inductionVariable <= 15);
    var tmp1_this = this;
    var tmp2 = tmp1_this.x2h_1;
    tmp1_this.x2h_1 = tmp2 + 1 | 0;
    return this;
  };
  Mat4fStack.prototype.a2i = function () {
    if (this.x2h_1 <= 0) {
      throw KoolException_init_$Create$('Matrix stack underflow');
    }
    var tmp0_this = this;
    var tmp1 = tmp0_this.x2h_1;
    tmp0_this.x2h_1 = tmp1 - 1 | 0;
    var offset = imul(this.x2h_1, 16);
    var inductionVariable = 0;
    if (inductionVariable <= 15)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.m2h()[i] = this.y2h_1[offset + i | 0];
      }
       while (inductionVariable <= 15);
    return this;
  };
  Mat4fStack.$metadata$ = classMeta('Mat4fStack', undefined, undefined, undefined, undefined, Mat4f.prototype);
  function isFuzzyZero(_this__u8e3s4, eps) {
    var tmp$ret$0;
    {
      tmp$ret$0 = Math.abs(_this__u8e3s4);
    }
    return tmp$ret$0 <= eps;
  }
  function min(a, b) {
    return compareTo(a, b) <= 0 ? a : b;
  }
  function toRad(_this__u8e3s4) {
    return _this__u8e3s4 * 0.017453292519943295;
  }
  function get_FUZZY_EQ_F() {
    return FUZZY_EQ_F;
  }
  var FUZZY_EQ_F;
  function toDeg(_this__u8e3s4) {
    return _this__u8e3s4 * 57.29577951308232;
  }
  function isFuzzyZero_0(_this__u8e3s4, eps) {
    var tmp$ret$0;
    {
      tmp$ret$0 = Math.abs(_this__u8e3s4);
    }
    return tmp$ret$0 <= eps;
  }
  function get_DEG_2_RAD() {
    return DEG_2_RAD;
  }
  var DEG_2_RAD;
  function get_RAD_2_DEG() {
    return RAD_2_DEG;
  }
  var RAD_2_DEG;
  function clamp(_this__u8e3s4, min, max) {
    return _this__u8e3s4 < min ? min : _this__u8e3s4 > max ? max : _this__u8e3s4;
  }
  function clamp_0(_this__u8e3s4, min, max) {
    return _this__u8e3s4 < min ? min : _this__u8e3s4 > max ? max : _this__u8e3s4;
  }
  function smoothStep(low, high, x) {
    var tmp$ret$0;
    {
      var tmp0_clamp = (x - low) / (high - low);
      tmp$ret$0 = tmp0_clamp < 0.0 ? 0.0 : tmp0_clamp > 1.0 ? 1.0 : tmp0_clamp;
    }
    var nx = tmp$ret$0;
    return nx * nx * (3 - 2 * nx);
  }
  function get_defaultRandomInstance() {
    init_properties_Random_kt_cngb49();
    return defaultRandomInstance;
  }
  var defaultRandomInstance;
  function Random(seed) {
    this.b2i_1 = seed;
    this.c2i_1 = 362436000;
    this.d2i_1 = 521288629;
    this.e2i_1 = 7654321;
    this.f2i_1 = false;
    this.g2i_1 = 0.0;
  }
  Random.prototype.h2i = function () {
    this.b2i_1 = imul(69069, this.b2i_1) + 12345 | 0;
    this.c2i_1 = this.c2i_1 ^ this.c2i_1 << 13;
    this.c2i_1 = this.c2i_1 ^ this.c2i_1 >> 17;
    this.c2i_1 = this.c2i_1 ^ this.c2i_1 << 5;
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_times = this.d2i_1;
        tmp$ret$0 = (new Long(698769069, 0)).ja(toLong(tmp0_times));
      }
      var tmp1_plus = tmp$ret$0;
      var tmp2_plus = this.e2i_1;
      tmp$ret$1 = tmp1_plus.ka(toLong(tmp2_plus));
    }
    var t = tmp$ret$1;
    this.e2i_1 = t.eb(32).fb();
    this.d2i_1 = t.fb();
    return (this.b2i_1 + this.c2i_1 | 0) + this.d2i_1 | 0;
  };
  Random.prototype.i2i = function (min, max) {
    return (abs(this.h2i()) % ((max - min | 0) + 1 | 0) | 0) + min | 0;
  };
  Random.$metadata$ = classMeta('Random');
  function randomI(min, max) {
    init_properties_Random_kt_cngb49();
    return get_defaultRandomInstance().i2i(min, max);
  }
  var properties_initialized_Random_kt_mgnrvf;
  function init_properties_Random_kt_cngb49() {
    if (properties_initialized_Random_kt_mgnrvf) {
    } else {
      properties_initialized_Random_kt_mgnrvf = true;
      defaultRandomInstance = new Random(numberToInt(Time_getInstance().b21() * 1000.0));
    }
  }
  function Vec2i_init_$Init$(f, $this) {
    Vec2i.call($this, f, f);
    return $this;
  }
  function Vec2i_init_$Create$(f) {
    return Vec2i_init_$Init$(f, Object.create(Vec2i.prototype));
  }
  function Companion_6() {
    Companion_instance_6 = this;
    this.j2i_1 = Vec2i_init_$Create$(0);
    this.k2i_1 = new Vec2i(1, 0);
    this.l2i_1 = new Vec2i(0, 1);
    this.m2i_1 = new Vec2i(-1, 0);
    this.n2i_1 = new Vec2i(0, -1);
  }
  Companion_6.$metadata$ = objectMeta('Companion');
  var Companion_instance_6;
  function Companion_getInstance_6() {
    if (Companion_instance_6 == null)
      new Companion_6();
    return Companion_instance_6;
  }
  function Vec2i(x, y) {
    Companion_getInstance_6();
    this.o2i_1 = new Int32Array(2);
    this.o2i_1[0] = x;
    this.o2i_1[1] = y;
  }
  Vec2i.prototype.p2i = function () {
    return this.o2i_1;
  };
  Vec2i.prototype.e23 = function () {
    return this.r(0);
  };
  Vec2i.prototype.g23 = function () {
    return this.r(1);
  };
  Vec2i.prototype.r = function (i) {
    return this.o2i_1[i];
  };
  Vec2i.prototype.toString = function () {
    return '(' + this.e23() + ', ' + this.g23() + ')';
  };
  Vec2i.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Vec2i))
      return false;
    if (!(this.e23() === other.e23()))
      return false;
    if (!(this.g23() === other.g23()))
      return false;
    return true;
  };
  Vec2i.prototype.hashCode = function () {
    var result = this.e23();
    result = imul(31, result) + this.g23() | 0;
    return result;
  };
  Vec2i.$metadata$ = classMeta('Vec2i');
  function MutableVec2i_init_$Init$($this) {
    MutableVec2i.call($this, 0, 0);
    return $this;
  }
  function MutableVec2i_init_$Create$() {
    return MutableVec2i_init_$Init$(Object.create(MutableVec2i.prototype));
  }
  function MutableVec2i_init_$Init$_0(other, $this) {
    MutableVec2i.call($this, other.e23(), other.g23());
    return $this;
  }
  function MutableVec2i_init_$Create$_0(other) {
    return MutableVec2i_init_$Init$_0(other, Object.create(MutableVec2i.prototype));
  }
  function MutableVec2i(x, y) {
    Vec2i.call(this, x, y);
    this.p2i()[0] = x;
    this.p2i()[1] = y;
  }
  MutableVec2i.prototype.r2i = function (value) {
    this.p2i()[0] = value;
  };
  MutableVec2i.prototype.e23 = function () {
    return this.r(0);
  };
  MutableVec2i.prototype.s2i = function (value) {
    this.p2i()[1] = value;
  };
  MutableVec2i.prototype.g23 = function () {
    return this.r(1);
  };
  MutableVec2i.prototype.t2i = function () {
    return this.p2i();
  };
  MutableVec2i.prototype.u2i = function (other) {
    this.r2i(other.e23());
    this.s2i(other.g23());
    return this;
  };
  MutableVec2i.$metadata$ = classMeta('MutableVec2i', undefined, undefined, undefined, undefined, Vec2i.prototype);
  function MutableVec2f_init_$Init$($this) {
    MutableVec2f.call($this, 0.0, 0.0);
    return $this;
  }
  function MutableVec2f_init_$Create$() {
    return MutableVec2f_init_$Init$(Object.create(MutableVec2f.prototype));
  }
  function MutableVec2f_init_$Init$_0(v, $this) {
    MutableVec2f.call($this, v.e23(), v.g23());
    return $this;
  }
  function MutableVec2f_init_$Create$_0(v) {
    return MutableVec2f_init_$Init$_0(v, Object.create(MutableVec2f.prototype));
  }
  function MutableVec2f(x, y) {
    Vec2f.call(this, x, y);
  }
  MutableVec2f.prototype.x2i = function (value) {
    this.m2g(0, value);
  };
  MutableVec2f.prototype.e23 = function () {
    return this.r(0);
  };
  MutableVec2f.prototype.y2i = function (value) {
    this.m2g(1, value);
  };
  MutableVec2f.prototype.g23 = function () {
    return this.r(1);
  };
  MutableVec2f.prototype.t2i = function () {
    return this.p2i();
  };
  MutableVec2f.prototype.z2i = function (other) {
    var tmp0_this = this;
    tmp0_this.x2i(tmp0_this.e23() + other.e23());
    var tmp1_this = this;
    tmp1_this.y2i(tmp1_this.g23() + other.g23());
    return this;
  };
  MutableVec2f.prototype.a2j = function (angleDeg) {
    var tmp$ret$0;
    {
      tmp$ret$0 = angleDeg * get_DEG_2_RAD();
    }
    var rad = tmp$ret$0;
    var tmp$ret$1;
    {
      tmp$ret$1 = Math.cos(rad);
    }
    var cos = tmp$ret$1;
    var tmp$ret$2;
    {
      tmp$ret$2 = Math.sin(rad);
    }
    var sin = tmp$ret$2;
    var rx = this.e23() * cos - this.g23() * sin;
    var ry = this.e23() * sin + this.g23() * cos;
    this.x2i(rx);
    this.y2i(ry);
    return this;
  };
  MutableVec2f.prototype.b2j = function (factor) {
    var tmp0_this = this;
    tmp0_this.x2i(tmp0_this.e23() * factor);
    var tmp1_this = this;
    tmp1_this.y2i(tmp1_this.g23() * factor);
    return this;
  };
  MutableVec2f.prototype.c2j = function (x, y) {
    this.x2i(x);
    this.y2i(y);
    return this;
  };
  MutableVec2f.prototype.d2j = function (other) {
    this.x2i(other.e23());
    this.y2i(other.g23());
    return this;
  };
  MutableVec2f.prototype.e2j = function (other) {
    var tmp0_this = this;
    tmp0_this.x2i(tmp0_this.e23() - other.e23());
    var tmp1_this = this;
    tmp1_this.y2i(tmp1_this.g23() - other.g23());
    return this;
  };
  MutableVec2f.prototype.m2g = function (i, v) {
    this.p2i()[i] = v;
  };
  MutableVec2f.$metadata$ = classMeta('MutableVec2f', undefined, undefined, undefined, undefined, Vec2f.prototype);
  function Vec2f_init_$Init$(f, $this) {
    Vec2f.call($this, f, f);
    return $this;
  }
  function Vec2f_init_$Create$(f) {
    return Vec2f_init_$Init$(f, Object.create(Vec2f.prototype));
  }
  function Companion_7() {
    Companion_instance_7 = this;
    this.f2j_1 = Vec2f_init_$Create$(0.0);
    this.g2j_1 = new Vec2f(1.0, 0.0);
    this.h2j_1 = new Vec2f(0.0, 1.0);
    this.i2j_1 = new Vec2f(-1.0, 0.0);
    this.j2j_1 = new Vec2f(0.0, -1.0);
  }
  Companion_7.$metadata$ = objectMeta('Companion');
  var Companion_instance_7;
  function Companion_getInstance_7() {
    if (Companion_instance_7 == null)
      new Companion_7();
    return Companion_instance_7;
  }
  function Vec2f(x, y) {
    Companion_getInstance_7();
    this.v2i_1 = new Float32Array(2);
    this.v2i_1[0] = x;
    this.v2i_1[1] = y;
  }
  Vec2f.prototype.p2i = function () {
    return this.v2i_1;
  };
  Vec2f.prototype.e23 = function () {
    return this.r(0);
  };
  Vec2f.prototype.g23 = function () {
    return this.r(1);
  };
  Vec2f.prototype.r = function (i) {
    return this.v2i_1[i];
  };
  Vec2f.prototype.toString = function () {
    return '(' + this.e23() + ', ' + this.g23() + ')';
  };
  Vec2f.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Vec2f))
      return false;
    if (!(this.e23() === other.e23()))
      return false;
    if (!(this.g23() === other.g23()))
      return false;
    return true;
  };
  Vec2f.prototype.hashCode = function () {
    var result = getNumberHashCode(this.e23());
    result = imul(31, result) + getNumberHashCode(this.g23()) | 0;
    return result;
  };
  Vec2f.$metadata$ = classMeta('Vec2f');
  function Vec2d_init_$Init$(f, $this) {
    Vec2d.call($this, f, f);
    return $this;
  }
  function Vec2d_init_$Create$(f) {
    return Vec2d_init_$Init$(f, Object.create(Vec2d.prototype));
  }
  function Companion_8() {
    Companion_instance_8 = this;
    this.k2j_1 = Vec2d_init_$Create$(0.0);
    this.l2j_1 = new Vec2d(1.0, 0.0);
    this.m2j_1 = new Vec2d(0.0, 1.0);
    this.n2j_1 = new Vec2d(-1.0, 0.0);
    this.o2j_1 = new Vec2d(0.0, -1.0);
  }
  Companion_8.$metadata$ = objectMeta('Companion');
  var Companion_instance_8;
  function Companion_getInstance_8() {
    if (Companion_instance_8 == null)
      new Companion_8();
    return Companion_instance_8;
  }
  function Vec2d(x, y) {
    Companion_getInstance_8();
    this.p2j_1 = new Float64Array(2);
    this.p2j_1[0] = x;
    this.p2j_1[1] = y;
  }
  Vec2d.prototype.p2i = function () {
    return this.p2j_1;
  };
  Vec2d.prototype.e23 = function () {
    return this.r(0);
  };
  Vec2d.prototype.g23 = function () {
    return this.r(1);
  };
  Vec2d.prototype.q2j = function (other) {
    var tmp$ret$0;
    {
      var tmp0_sqrt = this.r2j(other);
      tmp$ret$0 = Math.sqrt(tmp0_sqrt);
    }
    return tmp$ret$0;
  };
  Vec2d.prototype.s2j = function (other) {
    return this.e23() * other.e23() + this.g23() * other.g23();
  };
  Vec2d.prototype.t2j = function () {
    var tmp$ret$0;
    {
      var tmp0_sqrt = this.u2j();
      tmp$ret$0 = Math.sqrt(tmp0_sqrt);
    }
    return tmp$ret$0;
  };
  Vec2d.prototype.r2j = function (other) {
    var dx = this.e23() - other.e23();
    var dy = this.g23() - other.g23();
    return dx * dx + dy * dy;
  };
  Vec2d.prototype.u2j = function () {
    return this.e23() * this.e23() + this.g23() * this.g23();
  };
  Vec2d.prototype.r = function (i) {
    return this.p2j_1[i];
  };
  Vec2d.prototype.v2j = function (other) {
    return this.s2j(other);
  };
  Vec2d.prototype.toString = function () {
    return '(' + this.e23() + ', ' + this.g23() + ')';
  };
  Vec2d.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Vec2d))
      return false;
    if (!(this.e23() === other.e23()))
      return false;
    if (!(this.g23() === other.g23()))
      return false;
    return true;
  };
  Vec2d.prototype.hashCode = function () {
    var result = getNumberHashCode(this.e23());
    result = imul(31, result) + getNumberHashCode(this.g23()) | 0;
    return result;
  };
  Vec2d.$metadata$ = classMeta('Vec2d');
  function MutableVec2d_init_$Init$($this) {
    MutableVec2d.call($this, 0.0, 0.0);
    return $this;
  }
  function MutableVec2d_init_$Create$() {
    return MutableVec2d_init_$Init$(Object.create(MutableVec2d.prototype));
  }
  function MutableVec2d(x, y) {
    Vec2d.call(this, x, y);
  }
  MutableVec2d.prototype.d23 = function (value) {
    this.w2j(0, value);
  };
  MutableVec2d.prototype.e23 = function () {
    return this.r(0);
  };
  MutableVec2d.prototype.f23 = function (value) {
    this.w2j(1, value);
  };
  MutableVec2d.prototype.g23 = function () {
    return this.r(1);
  };
  MutableVec2d.prototype.x2j = function (other) {
    var tmp0_this = this;
    tmp0_this.d23(tmp0_this.e23() + other.e23());
    var tmp1_this = this;
    tmp1_this.f23(tmp1_this.g23() + other.g23());
    return this;
  };
  MutableVec2d.prototype.y2j = function (factor) {
    var tmp0_this = this;
    tmp0_this.d23(tmp0_this.e23() * factor);
    var tmp1_this = this;
    tmp1_this.f23(tmp1_this.g23() * factor);
    return this;
  };
  MutableVec2d.prototype.z2j = function (x, y) {
    this.d23(x);
    this.f23(y);
    return this;
  };
  MutableVec2d.prototype.a2k = function (other) {
    this.d23(other.e23());
    this.f23(other.g23());
    return this;
  };
  MutableVec2d.prototype.b2k = function (other) {
    var tmp0_this = this;
    tmp0_this.d23(tmp0_this.e23() - other.e23());
    var tmp1_this = this;
    tmp1_this.f23(tmp1_this.g23() - other.g23());
    return this;
  };
  MutableVec2d.prototype.w2j = function (i, v) {
    this.p2i()[i] = v;
  };
  MutableVec2d.$metadata$ = classMeta('MutableVec2d', undefined, undefined, undefined, undefined, Vec2d.prototype);
  function Vec3f_init_$Init$(f, $this) {
    Vec3f.call($this, f, f, f);
    return $this;
  }
  function Vec3f_init_$Create$(f) {
    return Vec3f_init_$Init$(f, Object.create(Vec3f.prototype));
  }
  function Companion_9() {
    Companion_instance_9 = this;
    this.c2k_1 = Vec3f_init_$Create$(0.0);
    this.d2k_1 = Vec3f_init_$Create$(1.0);
    this.e2k_1 = new Vec3f(1.0, 0.0, 0.0);
    this.f2k_1 = new Vec3f(0.0, 1.0, 0.0);
    this.g2k_1 = new Vec3f(0.0, 0.0, 1.0);
    this.h2k_1 = new Vec3f(-1.0, 0.0, 0.0);
    this.i2k_1 = new Vec3f(0.0, -1.0, 0.0);
    this.j2k_1 = new Vec3f(0.0, 0.0, -1.0);
  }
  Companion_9.prototype.k2k = function () {
    return this.c2k_1;
  };
  Companion_9.prototype.l2k = function () {
    return this.g2k_1;
  };
  Companion_9.$metadata$ = objectMeta('Companion');
  var Companion_instance_9;
  function Companion_getInstance_9() {
    if (Companion_instance_9 == null)
      new Companion_9();
    return Companion_instance_9;
  }
  function Vec3f(x, y, z) {
    Companion_getInstance_9();
    this.d2h_1 = new Float32Array(3);
    this.d2h_1[0] = x;
    this.d2h_1[1] = y;
    this.d2h_1[2] = z;
  }
  Vec3f.prototype.p2i = function () {
    return this.d2h_1;
  };
  Vec3f.prototype.e23 = function () {
    return this.r(0);
  };
  Vec3f.prototype.g23 = function () {
    return this.r(1);
  };
  Vec3f.prototype.w2g = function () {
    return this.r(2);
  };
  Vec3f.prototype.m2k = function (other, result) {
    result.x2i(this.g23() * other.w2g() - this.w2g() * other.g23());
    result.y2i(this.w2g() * other.e23() - this.e23() * other.w2g());
    result.n2k(this.e23() * other.g23() - this.g23() * other.e23());
    return result;
  };
  Vec3f.prototype.o2k = function (other) {
    var tmp$ret$0;
    {
      var tmp0_sqrt = this.p2k(other);
      tmp$ret$0 = Math.sqrt(tmp0_sqrt);
    }
    return tmp$ret$0;
  };
  Vec3f.prototype.q2k = function (other) {
    return this.e23() * other.e23() + this.g23() * other.g23() + this.w2g() * other.w2g();
  };
  Vec3f.prototype.t2j = function () {
    var tmp$ret$0;
    {
      var tmp0_sqrt = this.u2j();
      tmp$ret$0 = Math.sqrt(tmp0_sqrt);
    }
    return tmp$ret$0;
  };
  Vec3f.prototype.r2k = function (factor, result) {
    return result.s2k(this).b2j(factor);
  };
  Vec3f.prototype.p2k = function (other) {
    var dx = this.e23() - other.e23();
    var dy = this.g23() - other.g23();
    var dz = this.w2g() - other.w2g();
    return dx * dx + dy * dy + dz * dz;
  };
  Vec3f.prototype.u2j = function () {
    return this.e23() * this.e23() + this.g23() * this.g23() + this.w2g() * this.w2g();
  };
  Vec3f.prototype.t2k = function (other, result) {
    return result.s2k(this).u2k(other);
  };
  Vec3f.prototype.r = function (i) {
    return this.d2h_1[i];
  };
  Vec3f.prototype.toString = function () {
    return '(' + this.e23() + ', ' + this.g23() + ', ' + this.w2g() + ')';
  };
  Vec3f.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Vec3f))
      return false;
    if (!(this.e23() === other.e23()))
      return false;
    if (!(this.g23() === other.g23()))
      return false;
    if (!(this.w2g() === other.w2g()))
      return false;
    return true;
  };
  Vec3f.prototype.hashCode = function () {
    var result = getNumberHashCode(this.e23());
    result = imul(31, result) + getNumberHashCode(this.g23()) | 0;
    result = imul(31, result) + getNumberHashCode(this.w2g()) | 0;
    return result;
  };
  Vec3f.$metadata$ = classMeta('Vec3f');
  function MutableVec3f_init_$Init$($this) {
    MutableVec3f.call($this, 0.0, 0.0, 0.0);
    return $this;
  }
  function MutableVec3f_init_$Create$() {
    return MutableVec3f_init_$Init$(Object.create(MutableVec3f.prototype));
  }
  function MutableVec3f_init_$Init$_0(v, $this) {
    MutableVec3f.call($this, v.e23(), v.g23(), v.w2g());
    return $this;
  }
  function MutableVec3f_init_$Create$_0(v) {
    return MutableVec3f_init_$Init$_0(v, Object.create(MutableVec3f.prototype));
  }
  function MutableVec3f(x, y, z) {
    Vec3f.call(this, x, y, z);
  }
  MutableVec3f.prototype.x2i = function (value) {
    this.m2g(0, value);
  };
  MutableVec3f.prototype.e23 = function () {
    return this.r(0);
  };
  MutableVec3f.prototype.y2i = function (value) {
    this.m2g(1, value);
  };
  MutableVec3f.prototype.g23 = function () {
    return this.r(1);
  };
  MutableVec3f.prototype.n2k = function (value) {
    this.m2g(2, value);
  };
  MutableVec3f.prototype.w2g = function () {
    return this.r(2);
  };
  MutableVec3f.prototype.t2i = function () {
    return this.p2i();
  };
  MutableVec3f.prototype.v2k = function (other) {
    var tmp0_this = this;
    tmp0_this.x2i(tmp0_this.e23() + other.e23());
    var tmp1_this = this;
    tmp1_this.y2i(tmp1_this.g23() + other.g23());
    var tmp2_this = this;
    tmp2_this.n2k(tmp2_this.w2g() + other.w2g());
    return this;
  };
  MutableVec3f.prototype.w2k = function () {
    var l = this.t2j();
    var tmp;
    if (!(l === 0.0)) {
      tmp = this.b2j(1.0 / l);
    } else {
      tmp = this.s2k(Companion_getInstance_9().c2k_1);
    }
    return tmp;
  };
  MutableVec3f.prototype.b2j = function (factor) {
    var tmp0_this = this;
    tmp0_this.x2i(tmp0_this.e23() * factor);
    var tmp1_this = this;
    tmp1_this.y2i(tmp1_this.g23() * factor);
    var tmp2_this = this;
    tmp2_this.n2k(tmp2_this.w2g() * factor);
    return this;
  };
  MutableVec3f.prototype.x2g = function (x, y, z) {
    this.x2i(x);
    this.y2i(y);
    this.n2k(z);
    return this;
  };
  MutableVec3f.prototype.s2k = function (other) {
    this.x2i(other.e23());
    this.y2i(other.g23());
    this.n2k(other.w2g());
    return this;
  };
  MutableVec3f.prototype.u2k = function (other) {
    var tmp0_this = this;
    tmp0_this.x2i(tmp0_this.e23() - other.e23());
    var tmp1_this = this;
    tmp1_this.y2i(tmp1_this.g23() - other.g23());
    var tmp2_this = this;
    tmp2_this.n2k(tmp2_this.w2g() - other.w2g());
    return this;
  };
  MutableVec3f.prototype.x2k = function (other) {
    this.u2k(other);
  };
  MutableVec3f.prototype.m2g = function (i, v) {
    this.p2i()[i] = v;
  };
  MutableVec3f.$metadata$ = classMeta('MutableVec3f', undefined, undefined, undefined, undefined, Vec3f.prototype);
  function Vec3i_init_$Init$(f, $this) {
    Vec3i.call($this, f, f, f);
    return $this;
  }
  function Vec3i_init_$Create$(f) {
    return Vec3i_init_$Init$(f, Object.create(Vec3i.prototype));
  }
  function Companion_10() {
    Companion_instance_10 = this;
    this.y2k_1 = Vec3i_init_$Create$(0);
    this.z2k_1 = new Vec3i(1, 0, 0);
    this.a2l_1 = new Vec3i(0, 1, 0);
    this.b2l_1 = new Vec3i(0, 0, 1);
    this.c2l_1 = new Vec3i(-1, 0, 0);
    this.d2l_1 = new Vec3i(0, -1, 0);
    this.e2l_1 = new Vec3i(0, 0, -1);
  }
  Companion_10.$metadata$ = objectMeta('Companion');
  var Companion_instance_10;
  function Companion_getInstance_10() {
    if (Companion_instance_10 == null)
      new Companion_10();
    return Companion_instance_10;
  }
  function Vec3i(x, y, z) {
    Companion_getInstance_10();
    this.f2l_1 = new Int32Array(3);
    this.f2l_1[0] = x;
    this.f2l_1[1] = y;
    this.f2l_1[2] = z;
  }
  Vec3i.prototype.p2i = function () {
    return this.f2l_1;
  };
  Vec3i.prototype.e23 = function () {
    return this.r(0);
  };
  Vec3i.prototype.g23 = function () {
    return this.r(1);
  };
  Vec3i.prototype.w2g = function () {
    return this.r(2);
  };
  Vec3i.prototype.r = function (i) {
    return this.f2l_1[i];
  };
  Vec3i.prototype.toString = function () {
    return '(' + this.e23() + ', ' + this.g23() + ', ' + this.w2g() + ')';
  };
  Vec3i.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Vec3i))
      return false;
    if (!(this.e23() === other.e23()))
      return false;
    if (!(this.g23() === other.g23()))
      return false;
    if (!(this.w2g() === other.w2g()))
      return false;
    return true;
  };
  Vec3i.prototype.hashCode = function () {
    var result = this.e23();
    result = imul(31, result) + this.g23() | 0;
    result = imul(31, result) + this.w2g() | 0;
    return result;
  };
  Vec3i.$metadata$ = classMeta('Vec3i');
  function MutableVec3i_init_$Init$($this) {
    MutableVec3i.call($this, 0, 0, 0);
    return $this;
  }
  function MutableVec3i_init_$Create$() {
    return MutableVec3i_init_$Init$(Object.create(MutableVec3i.prototype));
  }
  function MutableVec3i(x, y, z) {
    Vec3i.call(this, x, y, z);
    this.p2i()[0] = x;
    this.p2i()[1] = y;
    this.p2i()[2] = z;
  }
  MutableVec3i.prototype.e23 = function () {
    return this.r(0);
  };
  MutableVec3i.prototype.g23 = function () {
    return this.r(1);
  };
  MutableVec3i.prototype.w2g = function () {
    return this.r(2);
  };
  MutableVec3i.prototype.t2i = function () {
    return this.p2i();
  };
  MutableVec3i.$metadata$ = classMeta('MutableVec3i', undefined, undefined, undefined, undefined, Vec3i.prototype);
  function Vec4i_init_$Init$(f, $this) {
    Vec4i.call($this, f, f, f, f);
    return $this;
  }
  function Vec4i_init_$Create$(f) {
    return Vec4i_init_$Init$(f, Object.create(Vec4i.prototype));
  }
  function Companion_11() {
    Companion_instance_11 = this;
    this.h2l_1 = Vec4i_init_$Create$(0);
    this.i2l_1 = new Vec4i(1, 0, 0, 0);
    this.j2l_1 = new Vec4i(0, 1, 0, 0);
    this.k2l_1 = new Vec4i(0, 0, 1, 0);
    this.l2l_1 = new Vec4i(0, 0, 0, 1);
    this.m2l_1 = new Vec4i(-1, 0, 0, 0);
    this.n2l_1 = new Vec4i(0, -1, 0, 0);
    this.o2l_1 = new Vec4i(0, 0, -1, 0);
    this.p2l_1 = new Vec4i(0, 0, 0, -1);
  }
  Companion_11.$metadata$ = objectMeta('Companion');
  var Companion_instance_11;
  function Companion_getInstance_11() {
    if (Companion_instance_11 == null)
      new Companion_11();
    return Companion_instance_11;
  }
  function Vec4i(x, y, z, w) {
    Companion_getInstance_11();
    this.q2l_1 = new Int32Array(4);
    this.q2l_1[0] = x;
    this.q2l_1[1] = y;
    this.q2l_1[2] = z;
    this.q2l_1[3] = w;
  }
  Vec4i.prototype.p2i = function () {
    return this.q2l_1;
  };
  Vec4i.prototype.e23 = function () {
    return this.r(0);
  };
  Vec4i.prototype.g23 = function () {
    return this.r(1);
  };
  Vec4i.prototype.w2g = function () {
    return this.r(2);
  };
  Vec4i.prototype.r2l = function () {
    return this.r(3);
  };
  Vec4i.prototype.r = function (i) {
    return this.q2l_1[i];
  };
  Vec4i.prototype.toString = function () {
    return '(' + this.e23() + ', ' + this.g23() + ', ' + this.w2g() + ', ' + this.r2l() + ')';
  };
  Vec4i.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Vec4i))
      return false;
    if (!(this.e23() === other.e23()))
      return false;
    if (!(this.g23() === other.g23()))
      return false;
    if (!(this.w2g() === other.w2g()))
      return false;
    if (!(this.r2l() === other.r2l()))
      return false;
    return true;
  };
  Vec4i.prototype.hashCode = function () {
    var result = this.e23();
    result = imul(31, result) + this.g23() | 0;
    result = imul(31, result) + this.w2g() | 0;
    result = imul(31, result) + this.r2l() | 0;
    return result;
  };
  Vec4i.$metadata$ = classMeta('Vec4i');
  function MutableVec4f_init_$Init$($this) {
    MutableVec4f.call($this, 0.0, 0.0, 0.0, 0.0);
    return $this;
  }
  function MutableVec4f_init_$Create$() {
    return MutableVec4f_init_$Init$(Object.create(MutableVec4f.prototype));
  }
  function MutableVec4f_init_$Init$_0(other, $this) {
    MutableVec4f.call($this, other.e23(), other.g23(), other.w2g(), other.r2l());
    return $this;
  }
  function MutableVec4f_init_$Create$_0(other) {
    return MutableVec4f_init_$Init$_0(other, Object.create(MutableVec4f.prototype));
  }
  function MutableVec4f(x, y, z, w) {
    Vec4f.call(this, x, y, z, w);
  }
  MutableVec4f.prototype.x2i = function (value) {
    this.m2g(0, value);
  };
  MutableVec4f.prototype.e23 = function () {
    return this.r(0);
  };
  MutableVec4f.prototype.y2i = function (value) {
    this.m2g(1, value);
  };
  MutableVec4f.prototype.g23 = function () {
    return this.r(1);
  };
  MutableVec4f.prototype.n2k = function (value) {
    this.m2g(2, value);
  };
  MutableVec4f.prototype.w2g = function () {
    return this.r(2);
  };
  MutableVec4f.prototype.u2l = function (value) {
    this.m2g(3, value);
  };
  MutableVec4f.prototype.r2l = function () {
    return this.r(3);
  };
  MutableVec4f.prototype.t2i = function () {
    return this.p2i();
  };
  MutableVec4f.prototype.v2l = function (other) {
    var tmp0_this = this;
    tmp0_this.x2i(tmp0_this.e23() + other.e23());
    var tmp1_this = this;
    tmp1_this.y2i(tmp1_this.g23() + other.g23());
    var tmp2_this = this;
    tmp2_this.n2k(tmp2_this.w2g() + other.w2g());
    var tmp3_this = this;
    tmp3_this.u2l(tmp3_this.r2l() + other.r2l());
    return this;
  };
  MutableVec4f.prototype.w2k = function () {
    return this.b2j(1.0 / this.t2j());
  };
  MutableVec4f.prototype.b2j = function (factor) {
    var tmp0_this = this;
    tmp0_this.x2i(tmp0_this.e23() * factor);
    var tmp1_this = this;
    tmp1_this.y2i(tmp1_this.g23() * factor);
    var tmp2_this = this;
    tmp2_this.n2k(tmp2_this.w2g() * factor);
    var tmp3_this = this;
    tmp3_this.u2l(tmp3_this.r2l() * factor);
    return this;
  };
  MutableVec4f.prototype.w2l = function (x, y, z, w) {
    this.x2i(x);
    this.y2i(y);
    this.n2k(z);
    this.u2l(w);
    return this;
  };
  MutableVec4f.prototype.x2l = function (other) {
    this.x2i(other.e23());
    this.y2i(other.g23());
    this.n2k(other.w2g());
    this.u2l(other.r2l());
    return this;
  };
  MutableVec4f.prototype.y2l = function (xyz, w) {
    this.x2i(xyz.e23());
    this.y2i(xyz.g23());
    this.n2k(xyz.w2g());
    this.u2l(w);
    return this;
  };
  MutableVec4f.prototype.z2l = function (xyz, w, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      w = 0.0;
    return this.y2l(xyz, w);
  };
  MutableVec4f.prototype.a2m = function (other) {
    this.v2l(other);
  };
  MutableVec4f.prototype.m2g = function (i, v) {
    this.p2i()[i] = v;
  };
  MutableVec4f.$metadata$ = classMeta('MutableVec4f', undefined, undefined, undefined, undefined, Vec4f.prototype);
  function Vec4f_init_$Init$(f, $this) {
    Vec4f.call($this, f, f, f, f);
    return $this;
  }
  function Vec4f_init_$Create$(f) {
    return Vec4f_init_$Init$(f, Object.create(Vec4f.prototype));
  }
  function Vec4f_init_$Init$_0(xyz, w, $this) {
    Vec4f.call($this, xyz.e23(), xyz.g23(), xyz.w2g(), w);
    return $this;
  }
  function Vec4f_init_$Create$_0(xyz, w) {
    return Vec4f_init_$Init$_0(xyz, w, Object.create(Vec4f.prototype));
  }
  function Companion_12() {
    Companion_instance_12 = this;
    this.b2m_1 = Vec4f_init_$Create$(0.0);
    this.c2m_1 = new Vec4f(1.0, 0.0, 0.0, 0.0);
    this.d2m_1 = new Vec4f(0.0, 1.0, 0.0, 0.0);
    this.e2m_1 = new Vec4f(0.0, 0.0, 1.0, 0.0);
    this.f2m_1 = new Vec4f(0.0, 0.0, 0.0, 1.0);
    this.g2m_1 = new Vec4f(-1.0, 0.0, 0.0, 0.0);
    this.h2m_1 = new Vec4f(0.0, -1.0, 0.0, 0.0);
    this.i2m_1 = new Vec4f(0.0, 0.0, -1.0, 0.0);
    this.j2m_1 = new Vec4f(0.0, 0.0, 0.0, -1.0);
  }
  Companion_12.prototype.k2k = function () {
    return this.b2m_1;
  };
  Companion_12.$metadata$ = objectMeta('Companion');
  var Companion_instance_12;
  function Companion_getInstance_12() {
    if (Companion_instance_12 == null)
      new Companion_12();
    return Companion_instance_12;
  }
  function Vec4f(x, y, z, w) {
    Companion_getInstance_12();
    this.s2l_1 = new Float32Array(4);
    this.s2l_1[0] = x;
    this.s2l_1[1] = y;
    this.s2l_1[2] = z;
    this.s2l_1[3] = w;
  }
  Vec4f.prototype.p2i = function () {
    return this.s2l_1;
  };
  Vec4f.prototype.e23 = function () {
    return this.r(0);
  };
  Vec4f.prototype.g23 = function () {
    return this.r(1);
  };
  Vec4f.prototype.w2g = function () {
    return this.r(2);
  };
  Vec4f.prototype.r2l = function () {
    return this.r(3);
  };
  Vec4f.prototype.t2j = function () {
    var tmp$ret$0;
    {
      var tmp0_sqrt = this.u2j();
      tmp$ret$0 = Math.sqrt(tmp0_sqrt);
    }
    return tmp$ret$0;
  };
  Vec4f.prototype.u2j = function () {
    return this.e23() * this.e23() + this.g23() * this.g23() + this.w2g() * this.w2g() + this.r2l() * this.r2l();
  };
  Vec4f.prototype.r = function (i) {
    return this.s2l_1[i];
  };
  Vec4f.prototype.toString = function () {
    return '(' + this.e23() + ', ' + this.g23() + ', ' + this.w2g() + ', ' + this.r2l() + ')';
  };
  Vec4f.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Vec4f))
      return false;
    if (!(this.e23() === other.e23()))
      return false;
    if (!(this.g23() === other.g23()))
      return false;
    if (!(this.w2g() === other.w2g()))
      return false;
    if (!(this.r2l() === other.r2l()))
      return false;
    return true;
  };
  Vec4f.prototype.hashCode = function () {
    var result = getNumberHashCode(this.e23());
    result = imul(31, result) + getNumberHashCode(this.g23()) | 0;
    result = imul(31, result) + getNumberHashCode(this.w2g()) | 0;
    result = imul(31, result) + getNumberHashCode(this.r2l()) | 0;
    return result;
  };
  Vec4f.$metadata$ = classMeta('Vec4f');
  function MutableVec4i_init_$Init$($this) {
    MutableVec4i.call($this, 0, 0, 0, 0);
    return $this;
  }
  function MutableVec4i_init_$Create$() {
    return MutableVec4i_init_$Init$(Object.create(MutableVec4i.prototype));
  }
  function MutableVec4i(x, y, z, w) {
    Vec4i.call(this, x, y, z, w);
    this.p2i()[0] = x;
    this.p2i()[1] = y;
    this.p2i()[2] = z;
    this.p2i()[3] = w;
  }
  MutableVec4i.prototype.e23 = function () {
    return this.r(0);
  };
  MutableVec4i.prototype.g23 = function () {
    return this.r(1);
  };
  MutableVec4i.prototype.w2g = function () {
    return this.r(2);
  };
  MutableVec4i.prototype.r2l = function () {
    return this.r(3);
  };
  MutableVec4i.prototype.t2i = function () {
    return this.p2i();
  };
  MutableVec4i.$metadata$ = classMeta('MutableVec4i', undefined, undefined, undefined, undefined, Vec4i.prototype);
  function updateSizeAndCenter($this) {
    if (!$this.u2m_1) {
      $this.m2m_1.t2k($this.l2m_1, $this.n2m_1);
      $this.s2m_1.r2k(0.5, $this.o2m_1).v2k($this.q2m_1);
    }
  }
  function addPoint($this, point) {
    if ($this.p2m_1) {
      $this.l2m_1.s2k(point);
      $this.m2m_1.s2k(point);
      $this.p2m_1 = false;
    } else {
      if (point.e23() < $this.q2m_1.e23()) {
        $this.l2m_1.x2i(point.e23());
      }
      if (point.g23() < $this.q2m_1.g23()) {
        $this.l2m_1.y2i(point.g23());
      }
      if (point.w2g() < $this.q2m_1.w2g()) {
        $this.l2m_1.n2k(point.w2g());
      }
      if (point.e23() > $this.r2m_1.e23()) {
        $this.m2m_1.x2i(point.e23());
      }
      if (point.g23() > $this.r2m_1.g23()) {
        $this.m2m_1.y2i(point.g23());
      }
      if (point.w2g() > $this.r2m_1.w2g()) {
        $this.m2m_1.n2k(point.w2g());
      }
    }
  }
  function BoundingBox() {
    this.l2m_1 = MutableVec3f_init_$Create$();
    this.m2m_1 = MutableVec3f_init_$Create$();
    this.n2m_1 = MutableVec3f_init_$Create$();
    this.o2m_1 = MutableVec3f_init_$Create$();
    this.p2m_1 = true;
    this.q2m_1 = this.l2m_1;
    this.r2m_1 = this.m2m_1;
    this.s2m_1 = this.n2m_1;
    this.t2m_1 = this.o2m_1;
    this.u2m_1 = false;
  }
  BoundingBox.prototype.v2m = function () {
    return this.q2m_1;
  };
  BoundingBox.prototype.w2m = function () {
    return this.r2m_1;
  };
  BoundingBox.prototype.x2m = function () {
    this.p2m_1 = true;
    this.l2m_1.s2k(Companion_getInstance_9().c2k_1);
    this.m2m_1.s2k(Companion_getInstance_9().c2k_1);
    updateSizeAndCenter(this);
    return this;
  };
  BoundingBox.prototype.v2k = function (point) {
    addPoint(this, point);
    updateSizeAndCenter(this);
    return this;
  };
  BoundingBox.prototype.y2m = function (aabb) {
    if (!aabb.p2m_1) {
      addPoint(this, aabb.q2m_1);
      addPoint(this, aabb.r2m_1);
      updateSizeAndCenter(this);
    }
    return this;
  };
  BoundingBox.prototype.z2m = function (other) {
    this.l2m_1.s2k(other.q2m_1);
    this.m2m_1.s2k(other.r2m_1);
    this.n2m_1.s2k(other.s2m_1);
    this.o2m_1.s2k(other.t2m_1);
    this.p2m_1 = other.p2m_1;
    return this;
  };
  BoundingBox.prototype.a2n = function (point) {
    var tmp$ret$0;
    {
      var tmp0_clamp = point.e23();
      var tmp1_clamp = this.q2m_1.e23();
      var tmp2_clamp = this.r2m_1.e23();
      tmp$ret$0 = tmp0_clamp < tmp1_clamp ? tmp1_clamp : tmp0_clamp > tmp2_clamp ? tmp2_clamp : tmp0_clamp;
    }
    point.x2i(tmp$ret$0);
    var tmp$ret$1;
    {
      var tmp3_clamp = point.g23();
      var tmp4_clamp = this.q2m_1.g23();
      var tmp5_clamp = this.r2m_1.g23();
      tmp$ret$1 = tmp3_clamp < tmp4_clamp ? tmp4_clamp : tmp3_clamp > tmp5_clamp ? tmp5_clamp : tmp3_clamp;
    }
    point.y2i(tmp$ret$1);
    var tmp$ret$2;
    {
      var tmp6_clamp = point.w2g();
      var tmp7_clamp = this.q2m_1.w2g();
      var tmp8_clamp = this.r2m_1.w2g();
      tmp$ret$2 = tmp6_clamp < tmp7_clamp ? tmp7_clamp : tmp6_clamp > tmp8_clamp ? tmp8_clamp : tmp6_clamp;
    }
    point.n2k(tmp$ret$2);
  };
  BoundingBox.prototype.toString = function () {
    var tmp;
    if (this.p2m_1) {
      tmp = '[empty]';
    } else {
      tmp = '[min=' + this.q2m_1 + ', max=' + this.r2m_1 + ']';
    }
    return tmp;
  };
  BoundingBox.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof BoundingBox))
      return false;
    if (!(this.p2m_1 === other.p2m_1))
      return false;
    if (!this.q2m_1.equals(other.q2m_1))
      return false;
    if (!this.r2m_1.equals(other.r2m_1))
      return false;
    return true;
  };
  BoundingBox.prototype.hashCode = function () {
    var result = this.p2m_1 | 0;
    result = imul(31, result) + this.q2m_1.hashCode() | 0;
    result = imul(31, result) + this.r2m_1.hashCode() | 0;
    return result;
  };
  BoundingBox.$metadata$ = classMeta('BoundingBox');
  function setupUniforms($this, builder) {
    var descBuilder = new Builder_3();
    var tmp0_this = builder;
    {
      var tmp0_plusAssign = tmp0_this.j2n_1;
      tmp0_plusAssign.b(descBuilder);
    }
    {
      var tmp$ret$3;
      {
        var tmp1_filter = $this.z2n_1.q2n_1;
        var tmp$ret$2;
        {
          var tmp0_filterTo = ArrayList_init_$Create$_0();
          var tmp0_iterator = tmp1_filter.h();
          while (tmp0_iterator.n()) {
            var element = tmp0_iterator.o();
            var tmp$ret$1;
            {
              var tmp$ret$0;
              {
                var tmp0_isNotEmpty = element.k2o_1;
                tmp$ret$0 = !tmp0_isNotEmpty.q();
              }
              tmp$ret$1 = tmp$ret$0;
            }
            if (tmp$ret$1) {
              tmp0_filterTo.b(element);
            }
          }
          tmp$ret$2 = tmp0_filterTo;
        }
        tmp$ret$3 = tmp$ret$2;
      }
      var tmp2_forEach = tmp$ret$3;
      var tmp0_iterator_0 = tmp2_forEach.h();
      while (tmp0_iterator_0.n()) {
        var element_0 = tmp0_iterator_0.o();
        {
          var ubo = new Builder_5();
          var tmp0_this_0 = descBuilder;
          {
            var tmp0_plusAssign_0 = tmp0_this_0.l2o_1;
            tmp0_plusAssign_0.b(ubo);
          }
          ubo.o2o(element_0.h2o_1);
          var tmp$ret$4;
          $l$block_0: {
            var tmp1_any = element_0.k2o_1.d3();
            var tmp;
            if (isInterface(tmp1_any, Collection)) {
              tmp = tmp1_any.q();
            } else {
              tmp = false;
            }
            if (tmp) {
              tmp$ret$4 = false;
              break $l$block_0;
            }
            var tmp0_iterator_1 = tmp1_any.h();
            while (tmp0_iterator_1.n()) {
              var element_1 = tmp0_iterator_1.o();
              var tmp$ret$5;
              {
                tmp$ret$5 = $this.z2n_1.t2n_1.x2o().e2p().c3().p(element_1.n2());
              }
              if (tmp$ret$5) {
                tmp$ret$4 = true;
                break $l$block_0;
              }
            }
            tmp$ret$4 = false;
          }
          if (tmp$ret$4) {
            var tmp1_this = ubo;
            {
              var tmp2_plusAssign = tmp1_this.h2p();
              var tmp3_plusAssign = ShaderStage_VERTEX_SHADER_getInstance();
              tmp2_plusAssign.b(tmp3_plusAssign);
            }
          }
          var tmp$ret$6;
          $l$block_2: {
            var tmp4_any = element_0.k2o_1.d3();
            var tmp_0;
            if (isInterface(tmp4_any, Collection)) {
              tmp_0 = tmp4_any.q();
            } else {
              tmp_0 = false;
            }
            if (tmp_0) {
              tmp$ret$6 = false;
              break $l$block_2;
            }
            var tmp0_iterator_2 = tmp4_any.h();
            while (tmp0_iterator_2.n()) {
              var element_2 = tmp0_iterator_2.o();
              var tmp$ret$7;
              {
                tmp$ret$7 = $this.z2n_1.u2n_1.x2o().e2p().c3().p(element_2.n2());
              }
              if (tmp$ret$7) {
                tmp$ret$6 = true;
                break $l$block_2;
              }
            }
            tmp$ret$6 = false;
          }
          if (tmp$ret$6) {
            var tmp2_this = ubo;
            {
              var tmp5_plusAssign = tmp2_this.h2p();
              var tmp6_plusAssign = ShaderStage_FRAGMENT_SHADER_getInstance();
              tmp5_plusAssign.b(tmp6_plusAssign);
            }
          }
          {
            var tmp7_forEach = element_0.k2o_1.d3();
            var tmp0_iterator_3 = tmp7_forEach.h();
            while (tmp0_iterator_3.n()) {
              var element_3 = tmp0_iterator_3.o();
              {
                var tmp1_elvis_lhs = $this.b2o_1.b3(element_3.il());
                var tmp_1;
                if (tmp1_elvis_lhs == null) {
                  var type = element_3.n2().i2p();
                  var tmp_2;
                  if (type instanceof KslTypeFloat1) {
                    tmp_2 = new Uniform1f(element_3.il());
                  } else {
                    if (type instanceof KslTypeFloat2) {
                      tmp_2 = new Uniform2f(element_3.il());
                    } else {
                      if (type instanceof KslTypeFloat3) {
                        tmp_2 = new Uniform3f(element_3.il());
                      } else {
                        if (type instanceof KslTypeFloat4) {
                          tmp_2 = new Uniform4f(element_3.il());
                        } else {
                          if (type instanceof KslTypeInt1) {
                            tmp_2 = new Uniform1i(element_3.il());
                          } else {
                            if (type instanceof KslTypeInt2) {
                              tmp_2 = new Uniform2i(element_3.il());
                            } else {
                              if (type instanceof KslTypeInt3) {
                                tmp_2 = new Uniform3i(element_3.il());
                              } else {
                                if (type instanceof KslTypeInt4) {
                                  tmp_2 = new Uniform4i(element_3.il());
                                } else {
                                  if (type instanceof KslTypeMat3) {
                                    tmp_2 = new UniformMat3f(element_3.il());
                                  } else {
                                    if (type instanceof KslTypeMat4) {
                                      tmp_2 = new UniformMat4f(element_3.il());
                                    } else {
                                      if (type instanceof KslTypeArray) {
                                        var tmp0_subject = type.l2p_1;
                                        var tmp_3;
                                        if (tmp0_subject instanceof KslTypeFloat1) {
                                          tmp_3 = new Uniform1fv(element_3.il(), element_3.g2p_1);
                                        } else {
                                          if (tmp0_subject instanceof KslTypeFloat2) {
                                            tmp_3 = new Uniform2fv(element_3.il(), element_3.g2p_1);
                                          } else {
                                            if (tmp0_subject instanceof KslTypeFloat3) {
                                              tmp_3 = new Uniform3fv(element_3.il(), element_3.g2p_1);
                                            } else {
                                              if (tmp0_subject instanceof KslTypeFloat4) {
                                                tmp_3 = new Uniform4fv(element_3.il(), element_3.g2p_1);
                                              } else {
                                                if (tmp0_subject instanceof KslTypeInt1) {
                                                  tmp_3 = new Uniform1iv(element_3.il(), element_3.g2p_1);
                                                } else {
                                                  if (tmp0_subject instanceof KslTypeInt2) {
                                                    tmp_3 = new Uniform2iv(element_3.il(), element_3.g2p_1);
                                                  } else {
                                                    if (tmp0_subject instanceof KslTypeInt3) {
                                                      tmp_3 = new Uniform3iv(element_3.il(), element_3.g2p_1);
                                                    } else {
                                                      if (tmp0_subject instanceof KslTypeInt4) {
                                                        tmp_3 = new Uniform4iv(element_3.il(), element_3.g2p_1);
                                                      } else {
                                                        if (tmp0_subject instanceof KslTypeMat3) {
                                                          tmp_3 = new UniformMat3fv(element_3.il(), element_3.g2p_1);
                                                        } else {
                                                          if (tmp0_subject instanceof KslTypeMat4) {
                                                            tmp_3 = new UniformMat4fv(element_3.il(), element_3.g2p_1);
                                                          } else {
                                                            throw IllegalStateException_init_$Create$('Unsupported uniform array type: ' + type.l2p_1.j2p_1);
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        tmp_2 = tmp_3;
                                      } else {
                                        throw IllegalStateException_init_$Create$('Unsupported uniform type: ' + type.j2p_1);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  tmp_1 = tmp_2;
                } else {
                  tmp_1 = tmp1_elvis_lhs;
                }
                var createdUniform = tmp_1;
                var tmp2_this_0 = ubo;
                {
                  var tmp0_plusAssign_1 = tmp2_this_0.p2p_1;
                  tmp0_plusAssign_1.b(KslShader$setupUniforms$lambda(createdUniform));
                }
              }
            }
          }
        }
      }
    }
    var tmp$ret$8;
    {
      var tmp3_isNotEmpty = $this.z2n_1.r2n_1;
      tmp$ret$8 = !tmp3_isNotEmpty.q();
    }
    if (tmp$ret$8) {
      {
        var tmp4_forEach = $this.z2n_1.r2n_1.d3();
        var tmp0_iterator_4 = tmp4_forEach.h();
        while (tmp0_iterator_4.n()) {
          var element_4 = tmp0_iterator_4.o();
          {
            var type_0 = element_4.n2().i2p();
            var tmp_4;
            if (type_0 instanceof KslTypeDepthSampler2d) {
              var tmp$ret$9;
              {
                var tmp0_apply = new Builder_0();
                {
                }
                {
                  tmp0_apply.g2q_1 = true;
                }
                tmp$ret$9 = tmp0_apply;
              }
              tmp_4 = tmp$ret$9;
            } else {
              if (type_0 instanceof KslTypeDepthSamplerCube) {
                var tmp$ret$10;
                {
                  var tmp1_apply = new Builder_2();
                  {
                  }
                  {
                    tmp1_apply.v2p_1 = true;
                  }
                  tmp$ret$10 = tmp1_apply;
                }
                tmp_4 = tmp$ret$10;
              } else {
                if (type_0 instanceof KslTypeColorSampler1d) {
                  tmp_4 = new Builder();
                } else {
                  if (type_0 instanceof KslTypeColorSampler2d) {
                    tmp_4 = new Builder_0();
                  } else {
                    if (type_0 instanceof KslTypeColorSampler3d) {
                      tmp_4 = new Builder_1();
                    } else {
                      if (type_0 instanceof KslTypeColorSamplerCube) {
                        tmp_4 = new Builder_2();
                      } else {
                        if (type_0 instanceof KslTypeArray) {
                          var tmp0_subject_0 = type_0.l2p_1;
                          var tmp_5;
                          if (tmp0_subject_0 instanceof KslTypeDepthSampler2d) {
                            var tmp$ret$11;
                            {
                              var tmp2_apply = new Builder_0();
                              {
                              }
                              {
                                tmp2_apply.g2q_1 = true;
                                tmp2_apply.f2q_1 = element_4.g2p_1;
                              }
                              tmp$ret$11 = tmp2_apply;
                            }
                            tmp_5 = tmp$ret$11;
                          } else {
                            if (tmp0_subject_0 instanceof KslTypeDepthSamplerCube) {
                              var tmp$ret$12;
                              {
                                var tmp3_apply = new Builder_2();
                                {
                                }
                                {
                                  tmp3_apply.v2p_1 = true;
                                  tmp3_apply.u2p_1 = element_4.g2p_1;
                                }
                                tmp$ret$12 = tmp3_apply;
                              }
                              tmp_5 = tmp$ret$12;
                            } else {
                              if (tmp0_subject_0 instanceof KslTypeColorSampler1d) {
                                var tmp$ret$13;
                                {
                                  var tmp4_apply = new Builder();
                                  {
                                  }
                                  {
                                    tmp4_apply.l2q_1 = element_4.g2p_1;
                                  }
                                  tmp$ret$13 = tmp4_apply;
                                }
                                tmp_5 = tmp$ret$13;
                              } else {
                                if (tmp0_subject_0 instanceof KslTypeColorSampler2d) {
                                  var tmp$ret$14;
                                  {
                                    var tmp5_apply = new Builder_0();
                                    {
                                    }
                                    {
                                      tmp5_apply.f2q_1 = element_4.g2p_1;
                                    }
                                    tmp$ret$14 = tmp5_apply;
                                  }
                                  tmp_5 = tmp$ret$14;
                                } else {
                                  if (tmp0_subject_0 instanceof KslTypeColorSampler3d) {
                                    var tmp$ret$15;
                                    {
                                      var tmp6_apply = new Builder_1();
                                      {
                                      }
                                      {
                                        tmp6_apply.a2q_1 = element_4.g2p_1;
                                      }
                                      tmp$ret$15 = tmp6_apply;
                                    }
                                    tmp_5 = tmp$ret$15;
                                  } else {
                                    if (tmp0_subject_0 instanceof KslTypeColorSamplerCube) {
                                      var tmp$ret$16;
                                      {
                                        var tmp7_apply = new Builder_2();
                                        {
                                        }
                                        {
                                          tmp7_apply.u2p_1 = element_4.g2p_1;
                                        }
                                        tmp$ret$16 = tmp7_apply;
                                      }
                                      tmp_5 = tmp$ret$16;
                                    } else {
                                      throw IllegalStateException_init_$Create$('Unsupported sampler array type: ' + type_0.l2p_1.j2p_1);
                                    }
                                  }
                                }
                              }
                            }
                          }
                          tmp_4 = tmp_5;
                        } else {
                          throw IllegalStateException_init_$Create$('Unsupported sampler uniform type: ' + type_0.j2p_1);
                        }
                      }
                    }
                  }
                }
              }
            }
            var desc = tmp_4;
            desc.m2o_1 = element_4.il();
            if ($this.z2n_1.t2n_1.x2o().e2p().c3().p(element_4.n2())) {
              var tmp1_this_0 = desc;
              {
                var tmp8_plusAssign = tmp1_this_0.n2o_1;
                var tmp9_plusAssign = ShaderStage_VERTEX_SHADER_getInstance();
                tmp8_plusAssign.b(tmp9_plusAssign);
              }
            }
            if ($this.z2n_1.u2n_1.x2o().e2p().c3().p(element_4.n2())) {
              var tmp2_this_1 = desc;
              {
                var tmp10_plusAssign = tmp2_this_1.n2o_1;
                var tmp11_plusAssign = ShaderStage_FRAGMENT_SHADER_getInstance();
                tmp10_plusAssign.b(tmp11_plusAssign);
              }
            }
            var tmp3_this = descBuilder;
            {
              var tmp12_plusAssign = tmp3_this.l2o_1;
              tmp12_plusAssign.b(desc);
            }
          }
        }
      }
    }
  }
  function setupAttributes($this, mesh, builder) {
    var attribLocation = 0;
    var verts = mesh.e2r_1;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    var vertLayoutAttribs = tmp$ret$0;
    var tmp$ret$1;
    {
      tmp$ret$1 = ArrayList_init_$Create$_0();
    }
    var vertLayoutAttribsI = tmp$ret$1;
    var iBinding = 0;
    {
      var tmp = asSequence($this.z2n_1.t2n_1.a2s_1.d3());
      var tmp0_forEach = filter(tmp, KslShader$setupAttributes$lambda());
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          var tmp$ret$4;
          {
            var tmp0_find = verts.l2s_1.c3();
            var tmp$ret$3;
            $l$block: {
              var tmp0_iterator_0 = tmp0_find.h();
              while (tmp0_iterator_0.n()) {
                var element_0 = tmp0_iterator_0.o();
                var tmp$ret$2;
                {
                  tmp$ret$2 = element_0.x2s_1 === element.il();
                }
                if (tmp$ret$2) {
                  tmp$ret$3 = element_0;
                  break $l$block;
                }
              }
              tmp$ret$3 = null;
            }
            tmp$ret$4 = tmp$ret$3;
          }
          var tmp0_elvis_lhs = tmp$ret$4;
          var tmp_0;
          if (tmp0_elvis_lhs == null) {
            throw NoSuchElementException_init_$Create$('Mesh does not include required vertex attribute: ' + element.il());
          } else {
            tmp_0 = tmp0_elvis_lhs;
          }
          var attrib = tmp_0;
          var off = ensureNotNull(verts.l2s_1.b3(attrib));
          if (attrib.y2s_1.g2t_1) {
            {
              var tmp1_plusAssign = new VertexAttribute(attribLocation, off, attrib);
              vertLayoutAttribsI.b(tmp1_plusAssign);
            }
          } else {
            {
              var tmp2_plusAssign = new VertexAttribute(attribLocation, off, attrib);
              vertLayoutAttribs.b(tmp2_plusAssign);
            }
          }
          element.c2t_1 = attribLocation;
          attribLocation = attribLocation + attrib.z2s_1.i2t_1 | 0;
        }
      }
    }
    var tmp0_this = builder.i2n_1;
    {
      var tmp1_plusAssign_0 = tmp0_this.l2t_1;
      var tmp1 = iBinding;
      iBinding = tmp1 + 1 | 0;
      var tmp2_plusAssign_0 = new Binding(tmp1, InputRate_VERTEX_getInstance(), vertLayoutAttribs, verts.i2s_1);
      tmp1_plusAssign_0.b(tmp2_plusAssign_0);
    }
    var tmp$ret$5;
    {
      tmp$ret$5 = !vertLayoutAttribsI.q();
    }
    if (tmp$ret$5) {
      var tmp2_this = builder.i2n_1;
      {
        var tmp3_plusAssign = tmp2_this.l2t_1;
        var tmp3 = iBinding;
        iBinding = tmp3 + 1 | 0;
        var tmp4_plusAssign = new Binding(tmp3, InputRate_VERTEX_getInstance(), vertLayoutAttribsI, verts.k2s_1);
        tmp3_plusAssign.b(tmp4_plusAssign);
      }
    }
    var tmp$ret$8;
    {
      var tmp5_filter = $this.z2n_1.t2n_1.a2s_1.d3();
      var tmp$ret$7;
      {
        var tmp0_filterTo = ArrayList_init_$Create$_0();
        var tmp0_iterator_1 = tmp5_filter.h();
        while (tmp0_iterator_1.n()) {
          var element_1 = tmp0_iterator_1.o();
          var tmp$ret$6;
          {
            tmp$ret$6 = element_1.b2t_1.equals(KslInputRate_Instance_getInstance());
          }
          if (tmp$ret$6) {
            tmp0_filterTo.b(element_1);
          }
        }
        tmp$ret$7 = tmp0_filterTo;
      }
      tmp$ret$8 = tmp$ret$7;
    }
    var instanceAttribs = tmp$ret$8;
    var insts = mesh.g2r_1;
    if (!(insts == null)) {
      var tmp$ret$9;
      {
        tmp$ret$9 = ArrayList_init_$Create$_0();
      }
      var instLayoutAttribs = tmp$ret$9;
      {
        var tmp0_iterator_2 = instanceAttribs.h();
        while (tmp0_iterator_2.n()) {
          var element_2 = tmp0_iterator_2.o();
          {
            var tmp$ret$12;
            {
              var tmp0_find_0 = insts.n2t_1.c3();
              var tmp$ret$11;
              $l$block_0: {
                var tmp0_iterator_3 = tmp0_find_0.h();
                while (tmp0_iterator_3.n()) {
                  var element_3 = tmp0_iterator_3.o();
                  var tmp$ret$10;
                  {
                    tmp$ret$10 = element_3.x2s_1 === element_2.il();
                  }
                  if (tmp$ret$10) {
                    tmp$ret$11 = element_3;
                    break $l$block_0;
                  }
                }
                tmp$ret$11 = null;
              }
              tmp$ret$12 = tmp$ret$11;
            }
            var tmp0_elvis_lhs_0 = tmp$ret$12;
            var tmp_1;
            if (tmp0_elvis_lhs_0 == null) {
              throw NoSuchElementException_init_$Create$('Mesh does not include required instance attribute: ' + element_2.il());
            } else {
              tmp_1 = tmp0_elvis_lhs_0;
            }
            var attrib_0 = tmp_1;
            var off_0 = ensureNotNull(insts.n2t_1.b3(attrib_0));
            {
              var tmp1_plusAssign_1 = new VertexAttribute(attribLocation, off_0, attrib_0);
              instLayoutAttribs.b(tmp1_plusAssign_1);
            }
            element_2.c2t_1 = attribLocation;
            attribLocation = attribLocation + attrib_0.z2s_1.i2t_1 | 0;
          }
        }
      }
      var tmp4_this = builder.i2n_1;
      {
        var tmp6_plusAssign = tmp4_this.l2t_1;
        var tmp7_plusAssign = new Binding(iBinding, InputRate_INSTANCE_getInstance(), instLayoutAttribs, insts.p2t_1);
        tmp6_plusAssign.b(tmp7_plusAssign);
      }
    } else {
      var tmp$ret$13;
      {
        tmp$ret$13 = !instanceAttribs.q();
      }
      if (tmp$ret$13) {
        throw IllegalStateException_init_$Create$("Shader model requires instance attributes, but mesh doesn't provide any");
      }
    }
  }
  function PipelineConfig() {
    this.w2t_1 = BlendMode_BLEND_MULTIPLY_ALPHA_getInstance();
    this.x2t_1 = CullMethod_CULL_BACK_FACES_getInstance();
    this.y2t_1 = DepthCompareOp_LESS_EQUAL_getInstance();
    this.z2t_1 = true;
    this.a2u_1 = 1.0;
  }
  PipelineConfig.prototype.b2u = function (_set____db54di) {
    this.w2t_1 = _set____db54di;
  };
  PipelineConfig.prototype.c2u = function (_set____db54di) {
    this.x2t_1 = _set____db54di;
  };
  PipelineConfig.prototype.d2u = function (_set____db54di) {
    this.y2t_1 = _set____db54di;
  };
  PipelineConfig.$metadata$ = classMeta('PipelineConfig');
  function ConnectUniformListener() {
  }
  ConnectUniformListener.$metadata$ = interfaceMeta('ConnectUniformListener');
  function UniformInput1f($outer, uniformName, defaultVal) {
    this.j2u_1 = $outer;
    this.f2u_1 = uniformName;
    this.g2u_1 = null;
    this.h2u_1 = defaultVal;
    this.i2u_1 = !(this.g2u_1 == null);
  }
  UniformInput1f.prototype.e2u = function () {
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_get = this.j2u_1.b2o_1;
      var tmp1_get = this.f2u_1;
      tmp$ret$0 = (isInterface(tmp0_get, Map) ? tmp0_get : THROW_CCE()).b3(tmp1_get);
    }
    var tmp_0 = tmp$ret$0;
    var tmp0_safe_receiver = tmp_0 instanceof Uniform1f ? tmp_0 : null;
    var tmp_1;
    if (tmp0_safe_receiver == null) {
      tmp_1 = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        {
          tmp0_safe_receiver.n2u(this.h2u_1);
        }
        tmp$ret$1 = tmp0_safe_receiver;
      }
      tmp_1 = tmp$ret$1;
    }
    tmp.g2u_1 = tmp_1;
  };
  UniformInput1f.prototype.o2u = function (thisRef, property) {
    var tmp0_safe_receiver = this.g2u_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.n2();
    return tmp1_elvis_lhs == null ? this.h2u_1 : tmp1_elvis_lhs;
  };
  UniformInput1f.prototype.p2u = function (thisRef, property, value) {
    var tmp0_safe_receiver = this.g2u_1;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$0;
      {
        {
        }
        tmp$ret$0 = tmp0_safe_receiver.n2u(value);
      }
      tmp = Unit_getInstance();
    }
    var tmp1_elvis_lhs = tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp$ret$1;
      {
        {
        }
        this.h2u_1 = value;
        tmp$ret$1 = Unit_getInstance();
      }
    } else {
    }
  };
  UniformInput1f.$metadata$ = classMeta('UniformInput1f', [ConnectUniformListener]);
  function UniformInput2f($outer, uniformName, defaultVal) {
    this.u2u_1 = $outer;
    this.q2u_1 = uniformName;
    this.r2u_1 = null;
    this.s2u_1 = MutableVec2f_init_$Create$_0(defaultVal);
    this.t2u_1 = !(this.r2u_1 == null);
  }
  UniformInput2f.prototype.e2u = function () {
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_get = this.u2u_1.b2o_1;
      var tmp1_get = this.q2u_1;
      tmp$ret$0 = (isInterface(tmp0_get, Map) ? tmp0_get : THROW_CCE()).b3(tmp1_get);
    }
    var tmp_0 = tmp$ret$0;
    var tmp0_safe_receiver = tmp_0 instanceof Uniform2f ? tmp_0 : null;
    var tmp_1;
    if (tmp0_safe_receiver == null) {
      tmp_1 = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        {
          tmp0_safe_receiver.n2().d2j(this.s2u_1);
        }
        tmp$ret$1 = tmp0_safe_receiver;
      }
      tmp_1 = tmp$ret$1;
    }
    tmp.r2u_1 = tmp_1;
  };
  UniformInput2f.prototype.o2u = function (thisRef, property) {
    var tmp0_safe_receiver = this.r2u_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.n2();
    return tmp1_elvis_lhs == null ? this.s2u_1 : tmp1_elvis_lhs;
  };
  UniformInput2f.prototype.v2u = function (thisRef, property, value) {
    var tmp0_safe_receiver = this.r2u_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.n2();
    return (tmp1_elvis_lhs == null ? this.s2u_1 : tmp1_elvis_lhs).d2j(value);
  };
  UniformInput2f.$metadata$ = classMeta('UniformInput2f', [ConnectUniformListener]);
  function UniformInput4f($outer, uniformName, defaultVal) {
    this.a2v_1 = $outer;
    this.w2u_1 = uniformName;
    this.x2u_1 = null;
    this.y2u_1 = MutableVec4f_init_$Create$_0(defaultVal);
    this.z2u_1 = !(this.x2u_1 == null);
  }
  UniformInput4f.prototype.e2u = function () {
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_get = this.a2v_1.b2o_1;
      var tmp1_get = this.w2u_1;
      tmp$ret$0 = (isInterface(tmp0_get, Map) ? tmp0_get : THROW_CCE()).b3(tmp1_get);
    }
    var tmp_0 = tmp$ret$0;
    var tmp0_safe_receiver = tmp_0 instanceof Uniform4f ? tmp_0 : null;
    var tmp_1;
    if (tmp0_safe_receiver == null) {
      tmp_1 = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        {
          tmp0_safe_receiver.n2().x2l(this.y2u_1);
        }
        tmp$ret$1 = tmp0_safe_receiver;
      }
      tmp_1 = tmp$ret$1;
    }
    tmp.x2u_1 = tmp_1;
  };
  UniformInput4f.$metadata$ = classMeta('UniformInput4f', [ConnectUniformListener]);
  function UniformInput1i($outer, uniformName, defaultVal) {
    this.f2v_1 = $outer;
    this.b2v_1 = uniformName;
    this.c2v_1 = null;
    this.d2v_1 = defaultVal;
    this.e2v_1 = !(this.c2v_1 == null);
  }
  UniformInput1i.prototype.e2u = function () {
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_get = this.f2v_1.b2o_1;
      var tmp1_get = this.b2v_1;
      tmp$ret$0 = (isInterface(tmp0_get, Map) ? tmp0_get : THROW_CCE()).b3(tmp1_get);
    }
    var tmp_0 = tmp$ret$0;
    var tmp0_safe_receiver = tmp_0 instanceof Uniform1i ? tmp_0 : null;
    var tmp_1;
    if (tmp0_safe_receiver == null) {
      tmp_1 = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        {
          tmp0_safe_receiver.n2u(this.d2v_1);
        }
        tmp$ret$1 = tmp0_safe_receiver;
      }
      tmp_1 = tmp$ret$1;
    }
    tmp.c2v_1 = tmp_1;
  };
  UniformInput1i.prototype.o2u = function (thisRef, property) {
    var tmp0_safe_receiver = this.c2v_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.n2();
    return tmp1_elvis_lhs == null ? this.d2v_1 : tmp1_elvis_lhs;
  };
  UniformInput1i.prototype.g2v = function (thisRef, property, value) {
    var tmp0_safe_receiver = this.c2v_1;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$0;
      {
        {
        }
        tmp$ret$0 = tmp0_safe_receiver.n2u(value);
      }
      tmp = Unit_getInstance();
    }
    var tmp1_elvis_lhs = tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp$ret$1;
      {
        {
        }
        this.d2v_1 = value;
        tmp$ret$1 = Unit_getInstance();
      }
    } else {
    }
  };
  UniformInput1i.$metadata$ = classMeta('UniformInput1i', [ConnectUniformListener]);
  function UniformInput2i($outer, uniformName, defaultVal) {
    this.l2v_1 = $outer;
    this.h2v_1 = uniformName;
    this.i2v_1 = null;
    this.j2v_1 = MutableVec2i_init_$Create$_0(defaultVal);
    this.k2v_1 = !(this.i2v_1 == null);
  }
  UniformInput2i.prototype.e2u = function () {
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_get = this.l2v_1.b2o_1;
      var tmp1_get = this.h2v_1;
      tmp$ret$0 = (isInterface(tmp0_get, Map) ? tmp0_get : THROW_CCE()).b3(tmp1_get);
    }
    var tmp_0 = tmp$ret$0;
    var tmp0_safe_receiver = tmp_0 instanceof Uniform2i ? tmp_0 : null;
    var tmp_1;
    if (tmp0_safe_receiver == null) {
      tmp_1 = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        {
          tmp0_safe_receiver.n2().u2i(this.j2v_1);
        }
        tmp$ret$1 = tmp0_safe_receiver;
      }
      tmp_1 = tmp$ret$1;
    }
    tmp.i2v_1 = tmp_1;
  };
  UniformInput2i.prototype.o2u = function (thisRef, property) {
    var tmp0_safe_receiver = this.i2v_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.n2();
    return tmp1_elvis_lhs == null ? this.j2v_1 : tmp1_elvis_lhs;
  };
  UniformInput2i.prototype.m2v = function (thisRef, property, value) {
    var tmp0_safe_receiver = this.i2v_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.n2();
    return (tmp1_elvis_lhs == null ? this.j2v_1 : tmp1_elvis_lhs).u2i(value);
  };
  UniformInput2i.$metadata$ = classMeta('UniformInput2i', [ConnectUniformListener]);
  function UniformInputTexture2d($outer, uniformName, defaultVal) {
    this.r2v_1 = $outer;
    this.n2v_1 = uniformName;
    this.o2v_1 = null;
    this.p2v_1 = defaultVal;
    this.q2v_1 = !(this.o2v_1 == null);
  }
  UniformInputTexture2d.prototype.e2u = function () {
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_get = this.r2v_1.d2o_1;
      var tmp1_get = this.n2v_1;
      tmp$ret$0 = (isInterface(tmp0_get, Map) ? tmp0_get : THROW_CCE()).b3(tmp1_get);
    }
    var tmp0_safe_receiver = tmp$ret$0;
    var tmp_0;
    if (tmp0_safe_receiver == null) {
      tmp_0 = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        {
          tmp0_safe_receiver.b2w(this.p2v_1);
        }
        tmp$ret$1 = tmp0_safe_receiver;
      }
      tmp_0 = tmp$ret$1;
    }
    tmp.o2v_1 = tmp_0;
  };
  UniformInputTexture2d.prototype.o2u = function (thisRef, property) {
    var tmp0_safe_receiver = this.o2v_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.c2w();
    return tmp1_elvis_lhs == null ? this.p2v_1 : tmp1_elvis_lhs;
  };
  UniformInputTexture2d.prototype.d2w = function (thisRef, property, value) {
    var tmp0_safe_receiver = this.o2v_1;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$0;
      {
        {
        }
        tmp$ret$0 = tmp0_safe_receiver.b2w(value);
      }
      tmp = Unit_getInstance();
    }
    var tmp1_elvis_lhs = tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp$ret$1;
      {
        {
        }
        this.p2v_1 = value;
        tmp$ret$1 = Unit_getInstance();
      }
    } else {
    }
  };
  UniformInputTexture2d.$metadata$ = classMeta('UniformInputTexture2d', [ConnectUniformListener]);
  function UniformInputTexture3d($outer, uniformName, defaultVal) {
    this.i2w_1 = $outer;
    this.e2w_1 = uniformName;
    this.f2w_1 = null;
    this.g2w_1 = defaultVal;
    this.h2w_1 = !(this.f2w_1 == null);
  }
  UniformInputTexture3d.prototype.e2u = function () {
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_get = this.i2w_1.e2o_1;
      var tmp1_get = this.e2w_1;
      tmp$ret$0 = (isInterface(tmp0_get, Map) ? tmp0_get : THROW_CCE()).b3(tmp1_get);
    }
    var tmp0_safe_receiver = tmp$ret$0;
    var tmp_0;
    if (tmp0_safe_receiver == null) {
      tmp_0 = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        {
          tmp0_safe_receiver.r2w(this.g2w_1);
        }
        tmp$ret$1 = tmp0_safe_receiver;
      }
      tmp_0 = tmp$ret$1;
    }
    tmp.f2w_1 = tmp_0;
  };
  UniformInputTexture3d.prototype.o2u = function (thisRef, property) {
    var tmp0_safe_receiver = this.f2w_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.c2w();
    return tmp1_elvis_lhs == null ? this.g2w_1 : tmp1_elvis_lhs;
  };
  UniformInputTexture3d.prototype.s2w = function (thisRef, property, value) {
    var tmp0_safe_receiver = this.f2w_1;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$0;
      {
        {
        }
        tmp$ret$0 = tmp0_safe_receiver.r2w(value);
      }
      tmp = Unit_getInstance();
    }
    var tmp1_elvis_lhs = tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp$ret$1;
      {
        {
        }
        this.g2w_1 = value;
        tmp$ret$1 = Unit_getInstance();
      }
    } else {
    }
  };
  UniformInputTexture3d.$metadata$ = classMeta('UniformInputTexture3d', [ConnectUniformListener]);
  function KslShader$onPipelineSetup$lambda($ctx, this$0) {
    return function (it) {
      return $ctx.e2f(this$0, it);
    };
  }
  function KslShader$onPipelineCreated$lambda(this$0) {
    return function (cmd) {
      var inductionVariable = 0;
      var last = this$0.z2n_1.w2n_1.m() - 1 | 0;
      var tmp;
      if (inductionVariable <= last) {
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          this$0.z2n_1.w2n_1.r(i).t2w(cmd);
        }
         while (inductionVariable <= last);
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function KslShader$setupUniforms$lambda($createdUniform) {
    return function () {
      return $createdUniform;
    };
  }
  function KslShader$setupAttributes$lambda() {
    return function (it) {
      return it.b2t_1.equals(KslInputRate_Vertex_getInstance());
    };
  }
  function KslShader(program, pipelineConfig) {
    Shader.call(this);
    this.z2n_1 = program;
    this.a2o_1 = pipelineConfig;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$();
    }
    tmp.b2o_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = LinkedHashMap_init_$Create$();
    }
    tmp_0.c2o_1 = tmp$ret$1;
    var tmp_1 = this;
    var tmp$ret$2;
    {
      tmp$ret$2 = LinkedHashMap_init_$Create$();
    }
    tmp_1.d2o_1 = tmp$ret$2;
    var tmp_2 = this;
    var tmp$ret$3;
    {
      tmp$ret$3 = LinkedHashMap_init_$Create$();
    }
    tmp_2.e2o_1 = tmp$ret$3;
    var tmp_3 = this;
    var tmp$ret$4;
    {
      tmp$ret$4 = LinkedHashMap_init_$Create$();
    }
    tmp_3.f2o_1 = tmp$ret$4;
    var tmp_4 = this;
    var tmp$ret$5;
    {
      tmp$ret$5 = ArrayList_init_$Create$_0();
    }
    tmp_4.g2o_1 = tmp$ret$5;
  }
  KslShader.prototype.u2w = function () {
    return this.z2n_1;
  };
  KslShader.prototype.v2w = function () {
    return this.b2o_1;
  };
  KslShader.prototype.w2w = function () {
    return this.c2o_1;
  };
  KslShader.prototype.x2w = function () {
    return this.d2o_1;
  };
  KslShader.prototype.y2w = function () {
    return this.e2o_1;
  };
  KslShader.prototype.z2w = function () {
    return this.f2o_1;
  };
  KslShader.prototype.a2x = function (builder, mesh, ctx) {
    this.z2n_1.b2x();
    if (this.z2n_1.m2n_1) {
      this.z2n_1.t2n_1.c2x().e2x();
    }
    setupAttributes(this, mesh, builder);
    setupUniforms(this, builder);
    builder.d2n_1 = this.a2o_1.w2t_1;
    builder.c2n_1 = this.a2o_1.x2t_1;
    builder.e2n_1 = this.a2o_1.y2t_1;
    builder.f2n_1 = this.a2o_1.z2t_1;
    builder.g2n_1 = this.a2o_1.a2u_1;
    builder.b2n_1 = this.z2n_1.l2n_1;
    var tmp = builder;
    tmp.h2n_1 = KslShader$onPipelineSetup$lambda(ctx, this);
    Shader.prototype.a2x.call(this, builder, mesh, ctx);
  };
  KslShader.prototype.h2x = function (pipeline, mesh, ctx) {
    {
      var tmp0_forEach = pipeline.t2x_1.j2x_1;
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          {
            var tmp0_forEach_0 = element.x2x_1;
            var tmp0_iterator_0 = tmp0_forEach_0.h();
            while (tmp0_iterator_0.n()) {
              var element_0 = tmp0_iterator_0.o();
              {
                var tmp0_subject = element_0;
                if (tmp0_subject instanceof UniformBuffer) {
                  var tmp0_forEach_1 = element_0.j2y_1;
                  var tmp0_iterator_1 = tmp0_forEach_1.h();
                  while (tmp0_iterator_1.n()) {
                    var element_1 = tmp0_iterator_1.o();
                    {
                      {
                        var tmp0_set = this.b2o_1;
                        var tmp1_set = element_1.l2u_1;
                        tmp0_set.a(tmp1_set, element_1);
                      }
                    }
                  }
                } else {
                  if (tmp0_subject instanceof TextureSampler1d) {
                    var tmp1_set_0 = this.c2o_1;
                    var tmp2_set = element_0.b2y_1;
                    var tmp3_set = element_0;
                    tmp1_set_0.a(tmp2_set, tmp3_set);
                  } else {
                    if (tmp0_subject instanceof TextureSampler2d) {
                      var tmp4_set = this.d2o_1;
                      var tmp5_set = element_0.b2y_1;
                      var tmp6_set = element_0;
                      tmp4_set.a(tmp5_set, tmp6_set);
                    } else {
                      if (tmp0_subject instanceof TextureSampler3d) {
                        var tmp7_set = this.e2o_1;
                        var tmp8_set = element_0.b2y_1;
                        var tmp9_set = element_0;
                        tmp7_set.a(tmp8_set, tmp9_set);
                      } else {
                        if (tmp0_subject instanceof TextureSamplerCube) {
                          var tmp10_set = this.f2o_1;
                          var tmp11_set = element_0.b2y_1;
                          var tmp12_set = element_0;
                          tmp10_set.a(tmp11_set, tmp12_set);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    var tmp0_this = pipeline;
    {
      var tmp1_plusAssign = tmp0_this.v2x_1;
      tmp1_plusAssign.b(KslShader$onPipelineCreated$lambda(this));
    }
    {
      var tmp2_forEach = this.z2n_1.w2n_1;
      var tmp0_iterator_2 = tmp2_forEach.h();
      while (tmp0_iterator_2.n()) {
        var element_2 = tmp0_iterator_2.o();
        {
          element_2.m2y(this, pipeline, ctx);
        }
      }
    }
    {
      var tmp3_forEach = this.g2o_1;
      var tmp0_iterator_3 = tmp3_forEach.h();
      while (tmp0_iterator_3.n()) {
        var element_3 = tmp0_iterator_3.o();
        {
          element_3.e2u();
        }
      }
    }
    Shader.prototype.h2x.call(this, pipeline, mesh, ctx);
  };
  KslShader.prototype.n2y = function (uniformName, defaultVal) {
    var tmp$ret$0;
    {
      var tmp0_elvis_lhs = defaultVal;
      var tmp0_also = new UniformInput1f(this, uniformName, tmp0_elvis_lhs == null ? 0.0 : tmp0_elvis_lhs);
      {
      }
      {
        var tmp0_this = this;
        {
          var tmp0_plusAssign = tmp0_this.g2o_1;
          tmp0_plusAssign.b(tmp0_also);
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  KslShader.prototype.o2y = function (uniformName, defaultVal, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      defaultVal = null;
    return this.n2y(uniformName, defaultVal);
  };
  KslShader.prototype.p2y = function (uniformName, defaultVal) {
    var tmp$ret$0;
    {
      var tmp0_elvis_lhs = defaultVal;
      var tmp0_also = new UniformInput2f(this, uniformName, tmp0_elvis_lhs == null ? Companion_getInstance_7().f2j_1 : tmp0_elvis_lhs);
      {
      }
      {
        var tmp0_this = this;
        {
          var tmp0_plusAssign = tmp0_this.g2o_1;
          tmp0_plusAssign.b(tmp0_also);
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  KslShader.prototype.q2y = function (uniformName, defaultVal, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      defaultVal = null;
    return this.p2y(uniformName, defaultVal);
  };
  KslShader.prototype.r2y = function (uniformName, defaultVal) {
    var tmp$ret$0;
    {
      var tmp0_elvis_lhs = defaultVal;
      var tmp0_also = new UniformInput4f(this, uniformName, tmp0_elvis_lhs == null ? Companion_getInstance_12().b2m_1 : tmp0_elvis_lhs);
      {
      }
      {
        var tmp0_this = this;
        {
          var tmp0_plusAssign = tmp0_this.g2o_1;
          tmp0_plusAssign.b(tmp0_also);
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  KslShader.prototype.s2y = function (uniformName, defaultVal) {
    var tmp$ret$0;
    {
      var tmp0_elvis_lhs = defaultVal;
      var tmp0_also = new UniformInput1i(this, uniformName, tmp0_elvis_lhs == null ? 0 : tmp0_elvis_lhs);
      {
      }
      {
        var tmp0_this = this;
        {
          var tmp0_plusAssign = tmp0_this.g2o_1;
          tmp0_plusAssign.b(tmp0_also);
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  KslShader.prototype.t2y = function (uniformName, defaultVal, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      defaultVal = null;
    return this.s2y(uniformName, defaultVal);
  };
  KslShader.prototype.u2y = function (uniformName, defaultVal) {
    var tmp$ret$0;
    {
      var tmp0_elvis_lhs = defaultVal;
      var tmp0_also = new UniformInput2i(this, uniformName, tmp0_elvis_lhs == null ? Companion_getInstance_6().j2i_1 : tmp0_elvis_lhs);
      {
      }
      {
        var tmp0_this = this;
        {
          var tmp0_plusAssign = tmp0_this.g2o_1;
          tmp0_plusAssign.b(tmp0_also);
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  KslShader.prototype.v2y = function (uniformName, defaultVal, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      defaultVal = null;
    return this.u2y(uniformName, defaultVal);
  };
  KslShader.prototype.w2y = function (uniformName, defaultVal) {
    var tmp$ret$0;
    {
      var tmp0_also = new UniformInputTexture2d(this, uniformName, defaultVal);
      {
      }
      {
        var tmp0_this = this;
        {
          var tmp0_plusAssign = tmp0_this.g2o_1;
          tmp0_plusAssign.b(tmp0_also);
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  KslShader.prototype.x2y = function (uniformName, defaultVal, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      defaultVal = null;
    return this.w2y(uniformName, defaultVal);
  };
  KslShader.prototype.y2y = function (uniformName, defaultVal) {
    var tmp$ret$0;
    {
      var tmp0_also = new UniformInputTexture3d(this, uniformName, defaultVal);
      {
      }
      {
        var tmp0_this = this;
        {
          var tmp0_plusAssign = tmp0_this.g2o_1;
          tmp0_plusAssign.b(tmp0_also);
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  KslShader.prototype.z2y = function (uniformName, defaultVal, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      defaultVal = null;
    return this.y2y(uniformName, defaultVal);
  };
  KslShader.$metadata$ = classMeta('KslShader', undefined, undefined, undefined, undefined, Shader.prototype);
  function KslShaderListener() {
  }
  KslShaderListener.$metadata$ = interfaceMeta('KslShaderListener');
  function KslUnlitShader$Model$lambda$lambda(this$0, $cfg, $this_vertexStage) {
    return function ($this$main) {
      var tmp = mvpMatrix(this$0).m2h();
      var mvp = $this$main.m2z(tmp, null, 2, null);
      var tmp_0;
      if ($cfg.c30_1) {
        tmp_0 = $this$main.z2z(mvp, $this_vertexStage.y2z(Companion_getInstance_31().w2z_1.x2s_1));
      }
      $this$main.h30($this_vertexStage.d2s_1, times(mvp, $this$main.g30($this_vertexStage.f30(Companion_getInstance_31().n2z_1.x2s_1), 1.0)));
      return Unit_getInstance();
    };
  }
  function KslUnlitShader$Model$lambda(this$0, $cfg) {
    return function ($this$vertexStage) {
      $this$vertexStage.i30(KslUnlitShader$Model$lambda$lambda(this$0, $cfg, $this$vertexStage));
      return Unit_getInstance();
    };
  }
  function KslUnlitShader$Model$lambda$lambda_0($cfg, $this_fragmentStage) {
    return function ($this$main) {
      var colorBlock = fragmentColorBlock$default($this$main, $cfg.a30_1, null, 2, null);
      var baseColor = float4Port($this$main, 'baseColor', colorBlock.s30_1);
      var tmp = get_rgb(baseColor);
      var outRgb = $this$main.u30(tmp, null, 2, null);
      $this$main.h30(outRgb, convertColorSpace($this$main, outRgb, $cfg.d30_1));
      var tmp_0;
      if ($cfg.b30_1.w2t_1.equals(BlendMode_BLEND_PREMULTIPLIED_ALPHA_getInstance())) {
        tmp_0 = $this$main.h30(outRgb, times_0(outRgb, get_a(baseColor)));
      }
      var tmp_1 = get_a(baseColor);
      $this_fragmentStage.h31($this$main, outRgb, tmp_1, 0, 4, null);
      return Unit_getInstance();
    };
  }
  function KslUnlitShader$Model$lambda_0($cfg) {
    return function ($this$fragmentStage) {
      $this$fragmentStage.i30(KslUnlitShader$Model$lambda$lambda_0($cfg, $this$fragmentStage));
      return Unit_getInstance();
    };
  }
  function KslUnlitShader_init_$Init$(cfg, model, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      model = new Model(cfg);
    KslUnlitShader.call($this, cfg, model);
    return $this;
  }
  function KslUnlitShader_init_$Init$_0(block, $this) {
    var tmp$ret$0;
    {
      var tmp0_apply = new UnlitShaderConfig();
      {
      }
      block(tmp0_apply);
      tmp$ret$0 = tmp0_apply;
    }
    var tmp = tmp$ret$0;
    KslUnlitShader_init_$Init$(tmp, null, 2, null, $this);
    return $this;
  }
  function KslUnlitShader_init_$Create$(block) {
    return KslUnlitShader_init_$Init$_0(block, Object.create(KslUnlitShader.prototype));
  }
  function UnlitShaderConfig() {
    this.a30_1 = new ColorBlockConfig('baseColor');
    this.b30_1 = new PipelineConfig();
    this.c30_1 = false;
    this.d30_1 = ColorSpaceConversion_LINEAR_TO_sRGB_getInstance();
    this.e30_1 = null;
  }
  UnlitShaderConfig.prototype.i31 = function (block) {
    var tmp$ret$0;
    {
      var tmp0_apply = this.a30_1;
      {
      }
      block(tmp0_apply);
      tmp$ret$0 = tmp0_apply;
    }
  };
  UnlitShaderConfig.$metadata$ = classMeta('UnlitShaderConfig');
  function Model(cfg) {
    KslProgram.call(this, 'Unlit Shader');
    this.j31(KslUnlitShader$Model$lambda(this, cfg));
    this.k31(KslUnlitShader$Model$lambda_0(cfg));
    var tmp0_safe_receiver = cfg.e30_1;
    if (tmp0_safe_receiver == null)
      null;
    else
      tmp0_safe_receiver(this);
  }
  Model.$metadata$ = classMeta('Model', undefined, undefined, undefined, undefined, KslProgram.prototype);
  function KslUnlitShader(cfg, model) {
    KslShader.call(this, model, cfg.b30_1);
    var tmp = this;
    var tmp0_safe_receiver = cfg.a30_1.y31();
    var tmp_0 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.b32_1;
    var tmp1_safe_receiver = cfg.a30_1.y31();
    tmp.m32_1 = this.r2y(tmp_0, tmp1_safe_receiver == null ? null : tmp1_safe_receiver.a32_1);
    var tmp_1 = this;
    var tmp0_safe_receiver_0 = cfg.a30_1.o32();
    var tmp_2 = tmp0_safe_receiver_0 == null ? null : tmp0_safe_receiver_0.r32_1;
    var tmp1_safe_receiver_0 = cfg.a30_1.o32();
    tmp_1.n32_1 = this.w2y(tmp_2, tmp1_safe_receiver_0 == null ? null : tmp1_safe_receiver_0.q32_1);
  }
  KslUnlitShader.$metadata$ = classMeta('KslUnlitShader', undefined, undefined, undefined, undefined, KslShader.prototype);
  var MixMode_Set_instance;
  var MixMode_Multiply_instance;
  var MixMode_Add_instance;
  var MixMode_Subtract_instance;
  var MixMode_entriesInitialized;
  function MixMode_initEntries() {
    if (MixMode_entriesInitialized)
      return Unit_getInstance();
    MixMode_entriesInitialized = true;
    MixMode_Set_instance = new MixMode('Set', 0);
    MixMode_Multiply_instance = new MixMode('Multiply', 1);
    MixMode_Add_instance = new MixMode('Add', 2);
    MixMode_Subtract_instance = new MixMode('Subtract', 3);
  }
  function ColorSource(mixMode) {
    this.u32_1 = mixMode;
  }
  ColorSource.prototype.v32 = function () {
    return this.u32_1;
  };
  ColorSource.$metadata$ = classMeta('ColorSource');
  function ConstColor(constColor, mixMode) {
    ColorSource.call(this, mixMode);
    this.x32_1 = constColor;
  }
  ConstColor.prototype.y32 = function () {
    return this.x32_1;
  };
  ConstColor.$metadata$ = classMeta('ConstColor', undefined, undefined, undefined, undefined, ColorSource.prototype);
  function UniformColor() {
  }
  UniformColor.prototype.z32 = function () {
    return this.b32_1;
  };
  UniformColor.$metadata$ = classMeta('UniformColor', undefined, undefined, undefined, undefined, ColorSource.prototype);
  function VertexColor() {
  }
  VertexColor.prototype.c33 = function () {
    return this.b33_1;
  };
  VertexColor.$metadata$ = classMeta('VertexColor', undefined, undefined, undefined, undefined, ColorSource.prototype);
  function TextureColor(defaultTexture, textureName, coordAttribute, gamma, mixMode) {
    ColorSource.call(this, mixMode);
    this.q32_1 = defaultTexture;
    this.r32_1 = textureName;
    this.s32_1 = coordAttribute;
    this.t32_1 = gamma;
  }
  TextureColor.prototype.d33 = function () {
    return this.r32_1;
  };
  TextureColor.prototype.e33 = function () {
    return this.s32_1;
  };
  TextureColor.prototype.f33 = function () {
    return this.t32_1;
  };
  TextureColor.$metadata$ = classMeta('TextureColor', undefined, undefined, undefined, undefined, ColorSource.prototype);
  function InstanceColor() {
  }
  InstanceColor.prototype.c33 = function () {
    return this.h33_1;
  };
  InstanceColor.$metadata$ = classMeta('InstanceColor', undefined, undefined, undefined, undefined, ColorSource.prototype);
  function MixMode(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  MixMode.$metadata$ = classMeta('MixMode', undefined, undefined, undefined, undefined, Enum.prototype);
  function MixMode_Set_getInstance() {
    MixMode_initEntries();
    return MixMode_Set_instance;
  }
  function ColorBlockConfig(colorName) {
    this.w31_1 = colorName;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.x31_1 = tmp$ret$0;
  }
  ColorBlockConfig.prototype.i33 = function () {
    return this.w31_1;
  };
  ColorBlockConfig.prototype.j33 = function () {
    return this.x31_1;
  };
  ColorBlockConfig.prototype.k33 = function (constColor, mixMode) {
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.x31_1;
      var tmp1_plusAssign = new ConstColor(constColor, mixMode);
      tmp0_plusAssign.b(tmp1_plusAssign);
    }
  };
  ColorBlockConfig.prototype.l33 = function (constColor, mixMode, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      mixMode = MixMode_Set_getInstance();
    return this.k33(constColor, mixMode);
  };
  ColorBlockConfig.prototype.m33 = function (defaultTexture, textureName, coordAttribute, gamma, mixMode) {
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.x31_1;
      var tmp1_plusAssign = new TextureColor(defaultTexture, textureName, coordAttribute, gamma, mixMode);
      tmp0_plusAssign.b(tmp1_plusAssign);
    }
  };
  ColorBlockConfig.prototype.n33 = function (defaultTexture, textureName, coordAttribute, gamma, mixMode, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      defaultTexture = null;
    if (!(($mask0 & 2) === 0))
      textureName = 't' + this.w31_1;
    if (!(($mask0 & 4) === 0))
      coordAttribute = Companion_getInstance_31().q2z_1;
    if (!(($mask0 & 8) === 0)) {
      Companion_getInstance_43();
      gamma = 2.2;
    }
    if (!(($mask0 & 16) === 0))
      mixMode = MixMode_Set_getInstance();
    return this.m33(defaultTexture, textureName, coordAttribute, gamma, mixMode);
  };
  ColorBlockConfig.prototype.y31 = function () {
    var tmp$ret$2;
    {
      var tmp0_find = this.x31_1;
      var tmp$ret$1;
      $l$block: {
        var tmp0_iterator = tmp0_find.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          var tmp$ret$0;
          {
            tmp$ret$0 = element instanceof UniformColor;
          }
          if (tmp$ret$0) {
            tmp$ret$1 = element;
            break $l$block;
          }
        }
        tmp$ret$1 = null;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    var tmp = tmp$ret$2;
    return tmp instanceof UniformColor ? tmp : null;
  };
  ColorBlockConfig.prototype.o32 = function () {
    var tmp$ret$2;
    {
      var tmp0_find = this.x31_1;
      var tmp$ret$1;
      $l$block: {
        var tmp0_iterator = tmp0_find.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          var tmp$ret$0;
          {
            tmp$ret$0 = element instanceof TextureColor;
          }
          if (tmp$ret$0) {
            tmp$ret$1 = element;
            break $l$block;
          }
        }
        tmp$ret$1 = null;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    var tmp = tmp$ret$2;
    return tmp instanceof TextureColor ? tmp : null;
  };
  ColorBlockConfig.$metadata$ = classMeta('ColorBlockConfig');
  function mixColor(_this__u8e3s4, $this, mixMode, value) {
    var tmp0_subject = mixMode;
    var tmp0 = tmp0_subject.y1();
    switch (tmp0) {
      case 0:
        _this__u8e3s4.h30($this.s30_1, value);
        break;
      case 1:
        var tmp1_this = $this;
        _this__u8e3s4.z2z(tmp1_this.s30_1, value);
        break;
      case 2:
        var tmp2_this = $this;
        _this__u8e3s4.o33(tmp2_this.s30_1, value);
        break;
      case 3:
        var tmp3_this = $this;
        _this__u8e3s4.p33(tmp3_this.s30_1, value);
        break;
    }
  }
  function ColorBlockFragmentStage(cfg, vertexColorBlock_0, parentScope) {
    KslBlock.call(this, cfg.w31_1, parentScope);
    this.s30_1 = this.f34(parentScope.l31(this.v33() + '_outColor'));
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$();
    }
    tmp.t30_1 = tmp$ret$0;
    var tmp$ret$17;
    {
      var tmp0_apply = this.g34();
      {
      }
      {
        {
          var tmp_0 = tmp0_apply.l2z_1;
          var tmp0_check = tmp_0 instanceof KslFragmentStage;
          {
          }
          if (!tmp0_check) {
            var tmp$ret$1;
            {
              tmp$ret$1 = 'ColorBlockFragmentStage can only be added to KslFragmentStage';
            }
            var message = tmp$ret$1;
            throw IllegalStateException_init_$Create$(toString(message));
          }
        }
        var tmp$ret$6;
        {
          var tmp2_findBlock = tmp0_apply.l2z_1.p2o_1.t2n_1;
          var tmp$ret$5;
          {
            var tmp$ret$2;
            {
              tmp$ret$2 = ArrayList_init_$Create$_0();
            }
            var tmp1_find = tmp2_findBlock.u2o_1.h34(null, tmp$ret$2);
            var tmp$ret$4;
            $l$block: {
              var tmp0_iterator = tmp1_find.h();
              while (tmp0_iterator.n()) {
                var element = tmp0_iterator.o();
                var tmp$ret$3;
                {
                  tmp$ret$3 = element instanceof TexCoordAttributeBlock;
                }
                if (tmp$ret$3) {
                  tmp$ret$4 = element;
                  break $l$block;
                }
              }
              tmp$ret$4 = null;
            }
            tmp$ret$5 = tmp$ret$4;
          }
          var tmp_1 = tmp$ret$5;
          tmp$ret$6 = tmp_1 instanceof TexCoordAttributeBlock ? tmp_1 : null;
        }
        var tmp0_elvis_lhs = tmp$ret$6;
        var tmp_2;
        if (tmp0_elvis_lhs == null) {
          var tmp$ret$8;
          {
            var tmp3_run = tmp0_apply.l2z_1.p2o_1.t2n_1.x2o();
            {
            }
            var tmp$ret$7;
            {
              tmp$ret$7 = texCoordAttributeBlock(tmp3_run);
            }
            tmp$ret$8 = tmp$ret$7;
          }
          tmp_2 = tmp$ret$8;
        } else {
          tmp_2 = tmp0_elvis_lhs;
        }
        var texCoordBlock = tmp_2;
        var tmp1_elvis_lhs = vertexColorBlock_0;
        var tmp_3;
        if (tmp1_elvis_lhs == null) {
          var tmp$ret$13;
          {
            var tmp5_findBlock = tmp0_apply.l2z_1.p2o_1.t2n_1;
            var tmp6_findBlock = cfg.w31_1;
            var tmp$ret$12;
            {
              var tmp$ret$9;
              {
                tmp$ret$9 = ArrayList_init_$Create$_0();
              }
              var tmp4_find = tmp5_findBlock.u2o_1.h34(tmp6_findBlock, tmp$ret$9);
              var tmp$ret$11;
              $l$block_0: {
                var tmp0_iterator_0 = tmp4_find.h();
                while (tmp0_iterator_0.n()) {
                  var element_0 = tmp0_iterator_0.o();
                  var tmp$ret$10;
                  {
                    tmp$ret$10 = element_0 instanceof ColorBlockVertexStage;
                  }
                  if (tmp$ret$10) {
                    tmp$ret$11 = element_0;
                    break $l$block_0;
                  }
                }
                tmp$ret$11 = null;
              }
              tmp$ret$12 = tmp$ret$11;
            }
            var tmp_4 = tmp$ret$12;
            tmp$ret$13 = tmp_4 instanceof ColorBlockVertexStage ? tmp_4 : null;
          }
          tmp_3 = tmp$ret$13;
        } else {
          tmp_3 = tmp1_elvis_lhs;
        }
        var tmp2_elvis_lhs = tmp_3;
        var tmp_5;
        if (tmp2_elvis_lhs == null) {
          var tmp$ret$15;
          {
            var tmp7_run = tmp0_apply.l2z_1.p2o_1.t2n_1.x2o();
            {
            }
            var tmp$ret$14;
            {
              tmp$ret$14 = vertexColorBlock(tmp7_run, cfg);
            }
            tmp$ret$15 = tmp$ret$14;
          }
          tmp_5 = tmp$ret$15;
        } else {
          tmp_5 = tmp2_elvis_lhs;
        }
        var vertexBlock = tmp_5;
        if (cfg.x31_1.q() ? true : !first(cfg.x31_1).u32_1.equals(MixMode_Set_getInstance())) {
          tmp0_apply.h30(this.s30_1, tmp0_apply.l35(Companion_getInstance_43().k34_1));
        }
        {
          var tmp8_forEach = cfg.x31_1;
          var tmp0_iterator_1 = tmp8_forEach.h();
          while (tmp0_iterator_1.n()) {
            var element_1 = tmp0_iterator_1.o();
            {
              var tmp0_subject = element_1;
              var tmp_6;
              if (tmp0_subject instanceof ConstColor) {
                tmp_6 = tmp0_apply.l35(element_1.x32_1);
              } else {
                if (tmp0_subject instanceof UniformColor) {
                  tmp_6 = tmp0_apply.l2z_1.p2o_1.p31(element_1.b32_1);
                } else {
                  if (tmp0_subject instanceof VertexColor) {
                    var tmp1_safe_receiver = vertexBlock.k36_1.b3(element_1);
                    var tmp2_elvis_lhs_0 = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.q36();
                    tmp_6 = tmp2_elvis_lhs_0 == null ? tmp0_apply.l35(Companion_getInstance_12().b2m_1) : tmp2_elvis_lhs_0;
                  } else {
                    if (tmp0_subject instanceof InstanceColor) {
                      var tmp3_safe_receiver = vertexBlock.l36_1.b3(element_1);
                      var tmp4_elvis_lhs = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.q36();
                      tmp_6 = tmp4_elvis_lhs == null ? tmp0_apply.l35(Companion_getInstance_12().b2m_1) : tmp4_elvis_lhs;
                    } else {
                      if (tmp0_subject instanceof TextureColor) {
                        var tmp$ret$16;
                        {
                          var tmp0_also = tmp0_apply.l2z_1.p2o_1.r31(element_1.r32_1);
                          {
                          }
                          {
                            {
                              var tmp0_set = this.t30_1;
                              var tmp1_set = element_1;
                              tmp0_set.a(tmp1_set, tmp0_also);
                            }
                          }
                          tmp$ret$16 = tmp0_also;
                        }
                        var tex = tmp$ret$16;
                        var texCoords = texCoordBlock.w35(element_1.s32_1);
                        var tmp_7 = tmp0_apply.x35(tex, texCoords, null, 4, null);
                        var texColor = tmp0_apply.y35(tmp_7, null, 2, null);
                        if (!(element_1.t32_1 === 1.0)) {
                          tmp0_apply.h30(get_rgb(texColor), tmp0_apply.a36(get_rgb(texColor), tmp0_apply.z35(Vec3f_init_$Create$(element_1.t32_1))));
                        }
                        tmp_6 = texColor;
                      } else {
                        noWhenBranchMatchedException();
                      }
                    }
                  }
                }
              }
              var colorValue = tmp_6;
              mixColor(tmp0_apply, this, element_1.u32_1, colorValue);
            }
          }
        }
      }
      tmp$ret$17 = tmp0_apply;
    }
  }
  ColorBlockFragmentStage.prototype.r36 = function () {
    return this.s30_1;
  };
  ColorBlockFragmentStage.prototype.s36 = function () {
    return this.t30_1;
  };
  ColorBlockFragmentStage.$metadata$ = classMeta('ColorBlockFragmentStage', undefined, undefined, undefined, undefined, KslBlock.prototype);
  function fragmentColorBlock(_this__u8e3s4, cfg, vertexStage) {
    var colorBlock = new ColorBlockFragmentStage(cfg, vertexStage, _this__u8e3s4);
    var tmp0_this = _this__u8e3s4;
    {
      var tmp0_plusAssign = tmp0_this.m37();
      tmp0_plusAssign.b(colorBlock);
    }
    return colorBlock;
  }
  function fragmentColorBlock$default(_this__u8e3s4, cfg, vertexStage, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      vertexStage = null;
    return fragmentColorBlock(_this__u8e3s4, cfg, vertexStage);
  }
  function ColorBlockVertexStage(cfg, parentScope) {
    KslBlock.call(this, cfg.w31_1, parentScope);
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$();
    }
    tmp.k36_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = LinkedHashMap_init_$Create$();
    }
    tmp_0.l36_1 = tmp$ret$1;
    var tmp$ret$13;
    {
      var tmp0_apply = this.g34();
      {
      }
      {
        {
          var tmp_1 = tmp0_apply.l2z_1;
          var tmp0_check = tmp_1 instanceof KslVertexStage;
          {
          }
          if (!tmp0_check) {
            var tmp$ret$2;
            {
              tmp$ret$2 = 'ColorBlockVertexStage can only be added to KslVertexStage';
            }
            var message = tmp$ret$2;
            throw IllegalStateException_init_$Create$(toString(message));
          }
        }
        var tmp$ret$7;
        {
          var tmp$ret$4;
          {
            var tmp1_filterIsInstance = cfg.x31_1;
            var tmp$ret$3;
            {
              var tmp0_filterIsInstanceTo = ArrayList_init_$Create$_0();
              var tmp0_iterator = tmp1_filterIsInstance.h();
              while (tmp0_iterator.n()) {
                var element = tmp0_iterator.o();
                if (element instanceof VertexColor) {
                  tmp0_filterIsInstanceTo.b(element);
                }
              }
              tmp$ret$3 = tmp0_filterIsInstanceTo;
            }
            tmp$ret$4 = tmp$ret$3;
          }
          var tmp2_mapIndexed = tmp$ret$4;
          var tmp$ret$6;
          {
            var tmp0_mapIndexedTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp2_mapIndexed, 10));
            var index = 0;
            var tmp0_iterator_0 = tmp2_mapIndexed.h();
            while (tmp0_iterator_0.n()) {
              var item = tmp0_iterator_0.o();
              var tmp1 = index;
              index = tmp1 + 1 | 0;
              var tmp3__anonymous__ufb84q = checkIndexOverflow(tmp1);
              var tmp1_set = this.k36_1;
              var tmp$ret$5;
              {
                var tmp_2 = tmp0_apply.l31(this.v33() + '_vertexColor_' + tmp3__anonymous__ufb84q);
                var tmp0_apply_0 = tmp0_apply.l2z_1.p2o_1.v31(tmp_2, null, 2, null);
                {
                }
                {
                  tmp0_apply.h30(tmp0_apply_0.n37(), tmp0_apply.l2z_1.o37(item.b33_1.x2s_1));
                }
                tmp$ret$5 = tmp0_apply_0;
              }
              var tmp2_set = tmp$ret$5;
              tmp1_set.a(item, tmp2_set);
              tmp0_mapIndexedTo.b(Unit_getInstance());
            }
            tmp$ret$6 = tmp0_mapIndexedTo;
          }
          tmp$ret$7 = tmp$ret$6;
        }
        var tmp$ret$12;
        {
          var tmp$ret$9;
          {
            var tmp4_filterIsInstance = cfg.x31_1;
            var tmp$ret$8;
            {
              var tmp0_filterIsInstanceTo_0 = ArrayList_init_$Create$_0();
              var tmp0_iterator_1 = tmp4_filterIsInstance.h();
              while (tmp0_iterator_1.n()) {
                var element_0 = tmp0_iterator_1.o();
                if (element_0 instanceof InstanceColor) {
                  tmp0_filterIsInstanceTo_0.b(element_0);
                }
              }
              tmp$ret$8 = tmp0_filterIsInstanceTo_0;
            }
            tmp$ret$9 = tmp$ret$8;
          }
          var tmp5_mapIndexed = tmp$ret$9;
          var tmp$ret$11;
          {
            var tmp0_mapIndexedTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp5_mapIndexed, 10));
            var index_0 = 0;
            var tmp0_iterator_2 = tmp5_mapIndexed.h();
            while (tmp0_iterator_2.n()) {
              var item_0 = tmp0_iterator_2.o();
              var tmp1_0 = index_0;
              index_0 = tmp1_0 + 1 | 0;
              var tmp6__anonymous__fv9ai5 = checkIndexOverflow(tmp1_0);
              var tmp1_set_0 = this.l36_1;
              var tmp$ret$10;
              {
                var tmp_3 = tmp0_apply.l31(this.v33() + '_instanceColor_' + tmp6__anonymous__fv9ai5);
                var tmp0_apply_1 = tmp0_apply.l2z_1.p2o_1.v31(tmp_3, null, 2, null);
                {
                }
                {
                  tmp0_apply.h30(tmp0_apply_1.n37(), tmp0_apply.l2z_1.p37(item_0.h33_1.x2s_1));
                }
                tmp$ret$10 = tmp0_apply_1;
              }
              var tmp2_set_0 = tmp$ret$10;
              tmp1_set_0.a(item_0, tmp2_set_0);
              tmp0_mapIndexedTo_0.b(Unit_getInstance());
            }
            tmp$ret$11 = tmp0_mapIndexedTo_0;
          }
          tmp$ret$12 = tmp$ret$11;
        }
      }
      tmp$ret$13 = tmp0_apply;
    }
  }
  ColorBlockVertexStage.prototype.q37 = function () {
    return this.k36_1;
  };
  ColorBlockVertexStage.prototype.r37 = function () {
    return this.l36_1;
  };
  ColorBlockVertexStage.$metadata$ = classMeta('ColorBlockVertexStage', undefined, undefined, undefined, undefined, KslBlock.prototype);
  function vertexColorBlock(_this__u8e3s4, cfg) {
    var colorBlock = new ColorBlockVertexStage(cfg, _this__u8e3s4);
    var tmp0_this = _this__u8e3s4;
    {
      var tmp0_plusAssign = tmp0_this.m37();
      tmp0_plusAssign.b(colorBlock);
    }
    return colorBlock;
  }
  function convertColorSpace(_this__u8e3s4, inputColor, conversion) {
    var tmp0_subject = conversion;
    var tmp0 = tmp0_subject.y1();
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = inputColor;
        break;
      case 1:
        Companion_getInstance_43();
        tmp = _this__u8e3s4.a36(inputColor, _this__u8e3s4.z35(Vec3f_init_$Create$(2.2)));
        break;
      case 2:
        Companion_getInstance_43();
        tmp = _this__u8e3s4.a36(inputColor, _this__u8e3s4.z35(Vec3f_init_$Create$(0.45454544)));
        break;
      case 3:
        var tmp$ret$2;
        {
          var tmp1_getOrCreateFunction = _this__u8e3s4.l2z_1;
          Companion_getInstance_13();
          var tmp2_getOrCreateFunction = 'toneMapLinearColorUncharted2';
          var tmp$ret$1;
          {
            var tmp0_getOrPut = tmp1_getOrCreateFunction.w2o_1;
            var value = tmp0_getOrPut.b3(tmp2_getOrCreateFunction);
            var tmp_0;
            if (value == null) {
              var tmp$ret$0;
              {
                tmp$ret$0 = new ToneMapLinearColorUncharted2(_this__u8e3s4);
              }
              var answer = tmp$ret$0;
              tmp0_getOrPut.a(tmp2_getOrCreateFunction, answer);
              tmp_0 = answer;
            } else {
              tmp_0 = value;
            }
            tmp$ret$1 = tmp_0;
          }
          var tmp_1 = tmp$ret$1;
          tmp$ret$2 = tmp_1 instanceof ToneMapLinearColorUncharted2 ? tmp_1 : THROW_CCE();
        }

        var func = tmp$ret$2;
        var tmp_2 = _this__u8e3s4.s37(func, [inputColor]);
        Companion_getInstance_43();
        tmp = _this__u8e3s4.a36(tmp_2, _this__u8e3s4.z35(Vec3f_init_$Create$(0.45454544)));
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  var ColorSpaceConversion_AS_IS_instance;
  var ColorSpaceConversion_sRGB_TO_LINEAR_instance;
  var ColorSpaceConversion_LINEAR_TO_sRGB_instance;
  var ColorSpaceConversion_LINEAR_TO_sRGB_HDR_instance;
  var ColorSpaceConversion_entriesInitialized;
  function ColorSpaceConversion_initEntries() {
    if (ColorSpaceConversion_entriesInitialized)
      return Unit_getInstance();
    ColorSpaceConversion_entriesInitialized = true;
    ColorSpaceConversion_AS_IS_instance = new ColorSpaceConversion('AS_IS', 0);
    ColorSpaceConversion_sRGB_TO_LINEAR_instance = new ColorSpaceConversion('sRGB_TO_LINEAR', 1);
    ColorSpaceConversion_LINEAR_TO_sRGB_instance = new ColorSpaceConversion('LINEAR_TO_sRGB', 2);
    ColorSpaceConversion_LINEAR_TO_sRGB_HDR_instance = new ColorSpaceConversion('LINEAR_TO_sRGB_HDR', 3);
  }
  function ColorSpaceConversion(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  ColorSpaceConversion.$metadata$ = classMeta('ColorSpaceConversion', undefined, undefined, undefined, undefined, Enum.prototype);
  function toneMapFunc($this, x) {
    return (x * (0.15 * x + 0.1 * 0.5) + 0.2 * 0.02) / (x * (0.15 * x + 0.5) + 0.2 * 0.3) - 0.02 / 0.3;
  }
  function Companion_13() {
    Companion_instance_13 = this;
    this.t37_1 = 'toneMapLinearColorUncharted2';
    this.u37_1 = 0.15;
    this.v37_1 = 0.5;
    this.w37_1 = 0.1;
    this.x37_1 = 0.2;
    this.y37_1 = 0.02;
    this.z37_1 = 0.3;
    this.a38_1 = 11.2;
    this.b38_1 = Vec3f_init_$Create$(1.0 / toneMapFunc(this, 11.2));
    this.c38_1 = 2.0;
  }
  Companion_13.$metadata$ = objectMeta('Companion');
  var Companion_instance_13;
  function Companion_getInstance_13() {
    if (Companion_instance_13 == null)
      new Companion_13();
    return Companion_instance_13;
  }
  function ToneMapLinearColorUncharted2$lambda($linearColor) {
    return function ($this$body) {
      Companion_getInstance_13();
      var a = $this$body.d38(0.15);
      Companion_getInstance_13();
      var b = $this$body.d38(0.5);
      Companion_getInstance_13();
      var c = $this$body.d38(0.1);
      Companion_getInstance_13();
      var d = $this$body.d38(0.2);
      Companion_getInstance_13();
      var e = $this$body.d38(0.02);
      Companion_getInstance_13();
      var f = $this$body.d38(0.3);
      Companion_getInstance_13();
      var tmp = times_0($linearColor, $this$body.d38(2.0));
      var x = $this$body.u30(tmp, null, 2, null);
      var tmp_0 = minus_0(div_1(plus_1(times_1(x, plus_1(times_3(a, x), times_2(c, b))), times_2(d, e)), plus_1(times_1(x, plus_1(times_3(a, x), b)), times_2(d, f))), div(e, f));
      var curr = $this$body.u30(tmp_0, null, 2, null);
      return times_1(curr, $this$body.z35(Companion_getInstance_13().b38_1));
    };
  }
  function ToneMapLinearColorUncharted2(parentScope) {
    Companion_getInstance_13();
    Companion_getInstance_13();
    KslFunction.call(this, 'toneMapLinearColorUncharted2', KslTypeFloat3_getInstance(), parentScope.l2z_1);
    var linearColor = this.n38('linearColor');
    this.o38(ToneMapLinearColorUncharted2$lambda(linearColor));
  }
  ToneMapLinearColorUncharted2.$metadata$ = classMeta('ToneMapLinearColorUncharted2', undefined, undefined, undefined, undefined, KslFunction.prototype);
  function ColorSpaceConversion_LINEAR_TO_sRGB_getInstance() {
    ColorSpaceConversion_initEntries();
    return ColorSpaceConversion_LINEAR_TO_sRGB_instance;
  }
  function Companion_14() {
    Companion_instance_14 = this;
    this.t38_1 = 'MvpMatrixData';
  }
  Companion_14.$metadata$ = objectMeta('Companion');
  var Companion_instance_14;
  function Companion_getInstance_14() {
    if (Companion_instance_14 == null)
      new Companion_14();
    return Companion_instance_14;
  }
  function MvpMatrixData(program) {
    Companion_getInstance_14();
    MatrixData.call(this, program, 'uMvpMat');
    this.x38_1 = 'MvpMatrixData';
  }
  MvpMatrixData.prototype.t2w = function (cmd) {
    this.y38().n2().r2h(cmd.g39_1);
  };
  MvpMatrixData.$metadata$ = classMeta('MvpMatrixData', undefined, undefined, undefined, undefined, MatrixData.prototype);
  function mvpMatrix(_this__u8e3s4) {
    var tmp$ret$2;
    {
      var tmp0_find = _this__u8e3s4.s2n_1;
      var tmp$ret$1;
      $l$block: {
        var tmp0_iterator = tmp0_find.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          var tmp$ret$0;
          {
            tmp$ret$0 = element instanceof MvpMatrixData;
          }
          if (tmp$ret$0) {
            tmp$ret$1 = element;
            break $l$block;
          }
        }
        tmp$ret$1 = null;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    var tmp = tmp$ret$2;
    var tmp0_elvis_lhs = tmp instanceof MvpMatrixData ? tmp : null;
    return tmp0_elvis_lhs == null ? new MvpMatrixData(_this__u8e3s4) : tmp0_elvis_lhs;
  }
  function MatrixData(program, uniformName) {
    this.b2z_1 = uniformName;
    this.c2z_1 = program.q31(this.b2z_1);
    var tmp0_this = program;
    {
      var tmp0_plusAssign = tmp0_this.w2n_1;
      tmp0_plusAssign.b(this);
    }
    var tmp1_this = program;
    {
      var tmp1_plusAssign = tmp1_this.s2n_1;
      tmp1_plusAssign.b(this);
    }
  }
  MatrixData.prototype.m2h = function () {
    return this.c2z_1;
  };
  MatrixData.prototype.y38 = function () {
    var tmp = this.d2z_1;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('uMatrix');
    }
  };
  MatrixData.prototype.m2y = function (shader, pipeline, ctx) {
    var tmp = this;
    var tmp_0 = shader.b2o_1.b3(this.b2z_1);
    tmp.d2z_1 = tmp_0 instanceof UniformMat4f ? tmp_0 : THROW_CCE();
  };
  MatrixData.$metadata$ = classMeta('MatrixData', [KslDataBlock, KslShaderListener]);
  function TexCoordAttributeBlock(name, parentScope) {
    KslBlock.call(this, name, parentScope);
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$();
    }
    tmp.v35_1 = tmp$ret$0;
    {
      var tmp_0 = parentScope.l2z_1;
      var tmp0_check = tmp_0 instanceof KslVertexStage;
      {
      }
      if (!tmp0_check) {
        var tmp$ret$1;
        {
          tmp$ret$1 = 'TexCoordAttributeBlock must be added to KslVertexStage';
        }
        var message = tmp$ret$1;
        throw IllegalStateException_init_$Create$(toString(message));
      }
    }
  }
  TexCoordAttributeBlock.prototype.w35 = function (attribute) {
    var tmp$ret$3;
    {
      var tmp0_getOrPut = this.v35_1;
      var tmp1_getOrPut = attribute.x2s_1;
      var value = tmp0_getOrPut.b3(tmp1_getOrPut);
      var tmp;
      if (value == null) {
        var tmp$ret$2;
        {
          var tmp$ret$1;
          {
            var tmp0_run = this.g34();
            {
            }
            var tmp$ret$0;
            {
              var tmp_0 = tmp0_run.l2z_1;
              var vertexStage = tmp_0 instanceof KslVertexStage ? tmp_0 : THROW_CCE();
              var tmp_1 = vertexStage.u2w();
              var uv = tmp_1.t31(null, null, 3, null);
              tmp0_run.h30(uv.n37(), vertexStage.i39(attribute.x2s_1));
              tmp$ret$0 = uv;
            }
            tmp$ret$1 = tmp$ret$0;
          }
          tmp$ret$2 = tmp$ret$1;
        }
        var answer = tmp$ret$2;
        tmp0_getOrPut.a(tmp1_getOrPut, answer);
        tmp = answer;
      } else {
        tmp = value;
      }
      tmp$ret$3 = tmp;
    }
    return tmp$ret$3.q36();
  };
  TexCoordAttributeBlock.$metadata$ = classMeta('TexCoordAttributeBlock', undefined, undefined, undefined, undefined, KslBlock.prototype);
  function texCoordAttributeBlock(_this__u8e3s4) {
    var texCoordBlock = new TexCoordAttributeBlock(_this__u8e3s4.l2z_1.p2o_1.l31('texCoordBlock'), _this__u8e3s4);
    var tmp0_this = _this__u8e3s4;
    {
      var tmp0_plusAssign = tmp0_this.m37();
      tmp0_plusAssign.b(texCoordBlock);
    }
    return texCoordBlock;
  }
  function linePrefix($this, line) {
    var num = '' + line;
    while (num.length < 3) {
      num = ' ' + num;
    }
    return num + '  ';
  }
  function generateVertexSrc($this, vertexStage) {
    var src = StringBuilder_init_$Create$();
    var tmp$ret$1;
    {
      var tmp0_appendLine = trimIndent('\n            ' + $this.j39_1 + '\n            precision highp sampler3D;\n            \n            /* \n             * ' + vertexStage.u2w().l2n_1 + ' - generated vertex shader\n             */ \n        ');
      var tmp$ret$0;
      {
        var tmp0_appendLine_0 = src.ga(tmp0_appendLine);
        tmp$ret$0 = tmp0_appendLine_0.ea(_Char___init__impl__6a9atx(10));
      }
      tmp$ret$1 = tmp$ret$0;
    }
    var tmp$ret$2;
    {
      tmp$ret$2 = src.ea(_Char___init__impl__6a9atx(10));
    }
    $this.l39(src, vertexStage);
    $this.m39(src, vertexStage);
    var tmp$ret$5;
    {
      var tmp1_filter = vertexStage.a2s_1.d3();
      var tmp$ret$4;
      {
        var tmp0_filterTo = ArrayList_init_$Create$_0();
        var tmp0_iterator = tmp1_filter.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          var tmp$ret$3;
          {
            tmp$ret$3 = element.b2t_1.equals(KslInputRate_Instance_getInstance());
          }
          if (tmp$ret$3) {
            tmp0_filterTo.b(element);
          }
        }
        tmp$ret$4 = tmp0_filterTo;
      }
      tmp$ret$5 = tmp$ret$4;
    }
    $this.n39(src, tmp$ret$5, 'instance attributes');
    var tmp$ret$8;
    {
      var tmp2_filter = vertexStage.a2s_1.d3();
      var tmp$ret$7;
      {
        var tmp0_filterTo_0 = ArrayList_init_$Create$_0();
        var tmp0_iterator_0 = tmp2_filter.h();
        while (tmp0_iterator_0.n()) {
          var element_0 = tmp0_iterator_0.o();
          var tmp$ret$6;
          {
            tmp$ret$6 = element_0.b2t_1.equals(KslInputRate_Vertex_getInstance());
          }
          if (tmp$ret$6) {
            tmp0_filterTo_0.b(element_0);
          }
        }
        tmp$ret$7 = tmp0_filterTo_0;
      }
      tmp$ret$8 = tmp$ret$7;
    }
    $this.n39(src, tmp$ret$8, 'vertex attributes');
    $this.o39(src, vertexStage);
    generateFunctions(src, $this, vertexStage);
    var tmp$ret$10;
    {
      var tmp$ret$9;
      {
        var tmp0_appendLine_1 = src.ga('void main() {');
        tmp$ret$9 = tmp0_appendLine_1.ea(_Char___init__impl__6a9atx(10));
      }
      tmp$ret$10 = tmp$ret$9;
    }
    var tmp$ret$12;
    {
      var tmp3_appendLine = $this.p39(vertexStage.x2o(), $this.k39_1);
      var tmp$ret$11;
      {
        var tmp0_appendLine_2 = src.ga(tmp3_appendLine);
        tmp$ret$11 = tmp0_appendLine_2.ea(_Char___init__impl__6a9atx(10));
      }
      tmp$ret$12 = tmp$ret$11;
    }
    var tmp$ret$14;
    {
      var tmp$ret$13;
      {
        var tmp0_appendLine_3 = src.ga('}');
        tmp$ret$13 = tmp0_appendLine_3.ea(_Char___init__impl__6a9atx(10));
      }
      tmp$ret$14 = tmp$ret$13;
    }
    return src.toString();
  }
  function generateFragmentSrc($this, fragmentStage) {
    var src = StringBuilder_init_$Create$();
    var tmp$ret$1;
    {
      var tmp0_appendLine = trimIndent('\n            ' + $this.j39_1 + '\n            precision highp float;\n            precision highp sampler2DShadow;\n            precision highp sampler3D;\n            \n            /* \n             * ' + fragmentStage.u2w().l2n_1 + ' - generated fragment shader\n             */\n        ');
      var tmp$ret$0;
      {
        var tmp0_appendLine_0 = src.ga(tmp0_appendLine);
        tmp$ret$0 = tmp0_appendLine_0.ea(_Char___init__impl__6a9atx(10));
      }
      tmp$ret$1 = tmp$ret$0;
    }
    var tmp$ret$2;
    {
      tmp$ret$2 = src.ea(_Char___init__impl__6a9atx(10));
    }
    $this.l39(src, fragmentStage);
    $this.m39(src, fragmentStage);
    $this.q39(src, fragmentStage);
    $this.r39(src, fragmentStage.g31_1);
    generateFunctions(src, $this, fragmentStage);
    var tmp$ret$4;
    {
      var tmp$ret$3;
      {
        var tmp0_appendLine_1 = src.ga('void main() {');
        tmp$ret$3 = tmp0_appendLine_1.ea(_Char___init__impl__6a9atx(10));
      }
      tmp$ret$4 = tmp$ret$3;
    }
    var tmp$ret$6;
    {
      var tmp1_appendLine = $this.p39(fragmentStage.x2o(), $this.k39_1);
      var tmp$ret$5;
      {
        var tmp0_appendLine_2 = src.ga(tmp1_appendLine);
        tmp$ret$5 = tmp0_appendLine_2.ea(_Char___init__impl__6a9atx(10));
      }
      tmp$ret$6 = tmp$ret$5;
    }
    var tmp$ret$8;
    {
      var tmp$ret$7;
      {
        var tmp0_appendLine_3 = src.ga('}');
        tmp$ret$7 = tmp0_appendLine_3.ea(_Char___init__impl__6a9atx(10));
      }
      tmp$ret$8 = tmp$ret$7;
    }
    return src.toString();
  }
  function generateFunctions(_this__u8e3s4, $this, stage) {
    var tmp$ret$0;
    {
      var tmp0_isNotEmpty = stage.w2o_1;
      tmp$ret$0 = !tmp0_isNotEmpty.q();
    }
    if (tmp$ret$0) {
      var funcList = toMutableList(stage.w2o_1.d3());
      $this.s39(funcList);
      {
        var tmp0_iterator = funcList.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          {
            var tmp$ret$2;
            {
              var tmp = $this.t39(element.f38_1);
              var tmp0_appendLine = tmp + ' ' + element.e38_1 + '(' + joinToString$default(element.h38_1, null, null, null, 0, null, GlslGenerator$generateFunctions$lambda($this), 31, null) + ') {';
              var tmp$ret$1;
              {
                var tmp0_appendLine_0 = _this__u8e3s4.ga(tmp0_appendLine);
                tmp$ret$1 = tmp0_appendLine_0.ea(_Char___init__impl__6a9atx(10));
              }
              tmp$ret$2 = tmp$ret$1;
            }
            var tmp$ret$4;
            {
              var tmp1_appendLine = $this.p39(element.m38_1, $this.k39_1);
              var tmp$ret$3;
              {
                var tmp0_appendLine_1 = _this__u8e3s4.ga(tmp1_appendLine);
                tmp$ret$3 = tmp0_appendLine_1.ea(_Char___init__impl__6a9atx(10));
              }
              tmp$ret$4 = tmp$ret$3;
            }
            var tmp$ret$6;
            {
              var tmp$ret$5;
              {
                var tmp0_appendLine_2 = _this__u8e3s4.ga('}');
                tmp$ret$5 = tmp0_appendLine_2.ea(_Char___init__impl__6a9atx(10));
              }
              tmp$ret$6 = tmp$ret$5;
            }
            var tmp$ret$7;
            {
              tmp$ret$7 = _this__u8e3s4.ea(_Char___init__impl__6a9atx(10));
            }
          }
        }
      }
    }
  }
  function generateArgs($this, args, expectedArgs) {
    {
      var tmp0_check = args.m() === expectedArgs;
      {
      }
      {
        {
        }
        if (!tmp0_check) {
          var tmp$ret$0;
          {
            tmp$ret$0 = 'Check failed.';
          }
          var message = tmp$ret$0;
          throw IllegalStateException_init_$Create$(toString(message));
        }
      }
    }
    return joinToString$default(args, null, null, null, 0, null, GlslGenerator$generateArgs$lambda($this), 31, null);
  }
  function GlslGeneratorOutput(vertexSrc, fragmentSrc) {
    this.u39_1 = vertexSrc;
    this.v39_1 = fragmentSrc;
  }
  GlslGeneratorOutput.prototype.w39 = function () {
    println('###  vertex shader:');
    {
      var tmp0_forEachIndexed = lineSequence(this.u39_1);
      var index = 0;
      var tmp0_iterator = tmp0_forEachIndexed.h();
      while (tmp0_iterator.n()) {
        var item = tmp0_iterator.o();
        {
          var tmp1 = index;
          index = tmp1 + 1 | 0;
          var tmp1__anonymous__uwfjfc = checkIndexOverflow(tmp1);
          println(linePrefix(this, tmp1__anonymous__uwfjfc) + item);
        }
      }
    }
    println('###  fragment shader:');
    {
      var tmp2_forEachIndexed = lineSequence(this.v39_1);
      var index_0 = 0;
      var tmp0_iterator_0 = tmp2_forEachIndexed.h();
      while (tmp0_iterator_0.n()) {
        var item_0 = tmp0_iterator_0.o();
        {
          var tmp1_0 = index_0;
          index_0 = tmp1_0 + 1 | 0;
          var tmp3__anonymous__ufb84q = checkIndexOverflow(tmp1_0);
          println(linePrefix(this, tmp3__anonymous__ufb84q) + item_0);
        }
      }
    }
  };
  GlslGeneratorOutput.$metadata$ = classMeta('GlslGeneratorOutput', [GeneratorOutput]);
  function GlslGenerator$constFloatVecExpression$lambda(this$0) {
    return function (it) {
      return it.x39(this$0);
    };
  }
  function GlslGenerator$constIntVecExpression$lambda(this$0) {
    return function (it) {
      return it.x39(this$0);
    };
  }
  function GlslGenerator$generateFunctions$lambda(this$0) {
    return function (p) {
      return this$0.t39(p.i2p()) + ' ' + p.f3a();
    };
  }
  function GlslGenerator$opDeclareArray$lambda(this$0) {
    return function (it) {
      return it.x39(this$0);
    };
  }
  function GlslGenerator$generateArgs$lambda(this$0) {
    return function (it) {
      return it.x39(this$0);
    };
  }
  function GlslGenerator() {
    KslGenerator.call(this);
    this.j39_1 = '#version 300 es';
    this.k39_1 = '  ';
  }
  GlslGenerator.prototype.g3a = function () {
    return this.k39_1;
  };
  GlslGenerator.prototype.h3a = function (program) {
    return new GlslGeneratorOutput(generateVertexSrc(this, program.t2n_1), generateFragmentSrc(this, program.u2n_1));
  };
  GlslGenerator.prototype.i3a = function (values) {
    var containsArg = values.length;
    if (!(2 <= containsArg ? containsArg <= 4 : false)) {
      throw IllegalArgumentException_init_$Create$('invalid number of values: ' + values.length + ' (must be between 2 and 4)');
    }
    var tmp = values.length;
    return 'vec' + tmp + '(' + joinToString$default_0(values, null, null, null, 0, null, GlslGenerator$constFloatVecExpression$lambda(this), 31, null) + ')';
  };
  GlslGenerator.prototype.j3a = function (values) {
    var containsArg = values.length;
    if (!(2 <= containsArg ? containsArg <= 4 : false)) {
      throw IllegalArgumentException_init_$Create$('invalid number of values: ' + values.length + ' (must be between 2 and 4)');
    }
    var tmp = values.length;
    return 'ivec' + tmp + '(' + joinToString$default_0(values, null, null, null, 0, null, GlslGenerator$constIntVecExpression$lambda(this), 31, null) + ')';
  };
  GlslGenerator.prototype.k3a = function (castExpr) {
    return this.t39(castExpr.i2p()) + '(' + castExpr.l3a_1.x39(this) + ')';
  };
  GlslGenerator.prototype.n3a = function (expression) {
    var lt = expression.o3a_1.x39(this);
    var rt = expression.p3a_1.x39(this);
    var tmp;
    var tmp_0 = expression.o3a_1.i2p();
    if (isInterface(tmp_0, KslVector)) {
      var tmp0_subject = expression.q3a_1;
      var tmp0 = tmp0_subject.y1();
      var tmp_1;
      switch (tmp0) {
        case 0:
          tmp_1 = 'equal(' + lt + ', ' + rt + ')';
          break;
        case 1:
          tmp_1 = 'notEqual(' + lt + ', ' + rt + ')';
          break;
        case 2:
          tmp_1 = 'lessThan(' + lt + ', ' + rt + ')';
          break;
        case 3:
          tmp_1 = 'lessThanEqual(' + lt + ', ' + rt + ')';
          break;
        case 4:
          tmp_1 = 'greaterThan(' + lt + ', ' + rt + ')';
          break;
        case 5:
          tmp_1 = 'greaterThanEqual(' + lt + ', ' + rt + ')';
          break;
        default:
          noWhenBranchMatchedException();
          break;
      }
      tmp = tmp_1;
    } else {
      tmp = '(' + lt + ' ' + expression.q3a_1.u3a_1 + ' ' + rt + ')';
    }
    return tmp;
  };
  GlslGenerator.prototype.v3a = function (sampleTexture) {
    var sampler = sampleTexture.w3a_1.x39(this);
    var tmp;
    var tmp_0;
    var tmp_1 = sampleTexture.w3a_1.i2p();
    if (isInterface(tmp_1, KslTypeSampler1d)) {
      var tmp_2 = sampleTexture.x3a_1.i2p();
      tmp_0 = tmp_2 instanceof KslTypeFloat1;
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = 'vec2(' + sampleTexture.x3a_1.x39(this) + ', 0.5)';
    } else {
      tmp = sampleTexture.x3a_1.x39(this);
    }
    var coord = tmp;
    var tmp_3;
    if (!(sampleTexture.y3a_1 == null)) {
      tmp_3 = 'textureLod(' + sampler + ', ' + coord + ', ' + sampleTexture.y3a_1.x39(this) + ')';
    } else {
      tmp_3 = 'texture(' + sampler + ', ' + coord + ')';
    }
    return tmp_3;
  };
  GlslGenerator.prototype.a3b = function (textureSize) {
    return 'textureSize(' + textureSize.b3b_1.x39(this) + ', ' + textureSize.c3b_1.x39(this) + ')';
  };
  GlslGenerator.prototype.e3b = function (expression) {
    var sampler = expression.f3b_1.x39(this);
    var coords = expression.g3b_1.x39(this);
    var tmp0_safe_receiver = expression.h3b_1;
    var lod = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.x39(this);
    var tmp1_elvis_lhs = lod;
    return 'texelFetch(' + sampler + ', ' + coords + ', ' + toString(tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs) + ')';
  };
  GlslGenerator.prototype.m39 = function (_this__u8e3s4, stage) {
    var samplers = stage.j3b();
    var tmp$ret$0;
    {
      tmp$ret$0 = !samplers.q();
    }
    if (tmp$ret$0) {
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          var tmp0_appendLine = _this__u8e3s4.ga('// texture samplers');
          tmp$ret$1 = tmp0_appendLine.ea(_Char___init__impl__6a9atx(10));
        }
        tmp$ret$2 = tmp$ret$1;
      }
      var tmp0_iterator = samplers.h();
      while (tmp0_iterator.n()) {
        var u = tmp0_iterator.o();
        var tmp;
        var tmp_0 = u.n2();
        if (tmp_0 instanceof KslArray) {
          tmp = '[' + u.g2p_1 + ']';
        } else {
          tmp = '';
        }
        var arraySuffix = tmp;
        var tmp$ret$4;
        {
          var tmp0_appendLine_0 = 'uniform ' + this.t39(u.i2p()) + ' ' + this.k3b(u.n2()) + arraySuffix + ';';
          var tmp$ret$3;
          {
            var tmp0_appendLine_1 = _this__u8e3s4.ga(tmp0_appendLine_0);
            tmp$ret$3 = tmp0_appendLine_1.ea(_Char___init__impl__6a9atx(10));
          }
          tmp$ret$4 = tmp$ret$3;
        }
      }
      var tmp$ret$5;
      {
        tmp$ret$5 = _this__u8e3s4.ea(_Char___init__impl__6a9atx(10));
      }
    }
  };
  GlslGenerator.prototype.l39 = function (_this__u8e3s4, stage) {
    var ubos = stage.l3b();
    var tmp$ret$0;
    {
      tmp$ret$0 = !ubos.q();
    }
    if (tmp$ret$0) {
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          var tmp0_appendLine = _this__u8e3s4.ga('// uniform buffer objects');
          tmp$ret$1 = tmp0_appendLine.ea(_Char___init__impl__6a9atx(10));
        }
        tmp$ret$2 = tmp$ret$1;
      }
      var tmp0_iterator = ubos.h();
      while (tmp0_iterator.n()) {
        var ubo = tmp0_iterator.o();
        var tmp;
        if (ubo.j2o_1) {
          tmp = 'layout(std140) ';
        } else {
          tmp = '';
        }
        var layoutPrefix = tmp;
        var tmp$ret$4;
        {
          var tmp0_appendLine_0 = layoutPrefix + 'uniform ' + ubo.h2o_1 + ' {';
          var tmp$ret$3;
          {
            var tmp0_appendLine_1 = _this__u8e3s4.ga(tmp0_appendLine_0);
            tmp$ret$3 = tmp0_appendLine_1.ea(_Char___init__impl__6a9atx(10));
          }
          tmp$ret$4 = tmp$ret$3;
        }
        var tmp1_iterator = ubo.k2o_1.d3().h();
        while (tmp1_iterator.n()) {
          var u = tmp1_iterator.o();
          var tmp_0;
          var tmp_1 = u.n2();
          if (tmp_1 instanceof KslArray) {
            tmp_0 = '[' + u.g2p_1 + ']';
          } else {
            tmp_0 = '';
          }
          var arraySuffix = tmp_0;
          var tmp$ret$6;
          {
            var tmp1_appendLine = '    highp ' + this.t39(u.i2p()) + ' ' + this.k3b(u.n2()) + arraySuffix + ';';
            var tmp$ret$5;
            {
              var tmp0_appendLine_2 = _this__u8e3s4.ga(tmp1_appendLine);
              tmp$ret$5 = tmp0_appendLine_2.ea(_Char___init__impl__6a9atx(10));
            }
            tmp$ret$6 = tmp$ret$5;
          }
        }
        var tmp$ret$8;
        {
          var tmp$ret$7;
          {
            var tmp0_appendLine_3 = _this__u8e3s4.ga('};');
            tmp$ret$7 = tmp0_appendLine_3.ea(_Char___init__impl__6a9atx(10));
          }
          tmp$ret$8 = tmp$ret$7;
        }
      }
      var tmp$ret$9;
      {
        tmp$ret$9 = _this__u8e3s4.ea(_Char___init__impl__6a9atx(10));
      }
    }
  };
  GlslGenerator.prototype.n39 = function (_this__u8e3s4, attribs, info) {
    var tmp$ret$0;
    {
      tmp$ret$0 = !attribs.q();
    }
    if (tmp$ret$0) {
      var tmp$ret$2;
      {
        var tmp0_appendLine = '// ' + info;
        var tmp$ret$1;
        {
          var tmp0_appendLine_0 = _this__u8e3s4.ga(tmp0_appendLine);
          tmp$ret$1 = tmp0_appendLine_0.ea(_Char___init__impl__6a9atx(10));
        }
        tmp$ret$2 = tmp$ret$1;
      }
      {
        var tmp0_iterator = attribs.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          {
            var tmp$ret$4;
            {
              var tmp0_appendLine_1 = 'layout(location=' + element.c2t_1 + ') in ' + this.t39(element.i2p()) + ' ' + this.k3b(element.a2t_1) + ';';
              var tmp$ret$3;
              {
                var tmp0_appendLine_2 = _this__u8e3s4.ga(tmp0_appendLine_1);
                tmp$ret$3 = tmp0_appendLine_2.ea(_Char___init__impl__6a9atx(10));
              }
              tmp$ret$4 = tmp$ret$3;
            }
          }
        }
      }
      var tmp$ret$5;
      {
        tmp$ret$5 = _this__u8e3s4.ea(_Char___init__impl__6a9atx(10));
      }
    }
  };
  GlslGenerator.prototype.o39 = function (_this__u8e3s4, vertexStage) {
    var tmp$ret$0;
    {
      var tmp0_isNotEmpty = vertexStage.m3b();
      tmp$ret$0 = !tmp0_isNotEmpty.q();
    }
    if (tmp$ret$0) {
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          var tmp0_appendLine = _this__u8e3s4.ga('// custom vertex stage outputs');
          tmp$ret$1 = tmp0_appendLine.ea(_Char___init__impl__6a9atx(10));
        }
        tmp$ret$2 = tmp$ret$1;
      }
      {
        var tmp1_forEach = vertexStage.m3b();
        var tmp0_iterator = tmp1_forEach.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          {
            var value = element.n37();
            var tmp;
            if (value instanceof KslArray) {
              tmp = '[' + value.u3b_1 + ']';
            } else {
              tmp = '';
            }
            var arraySuffix = tmp;
            var tmp$ret$4;
            {
              var tmp0_appendLine_0 = this.w3b(element.q3b_1) + ' out ' + this.t39(value.i2p()) + ' ' + this.k3b(value) + arraySuffix + ';';
              var tmp$ret$3;
              {
                var tmp0_appendLine_1 = _this__u8e3s4.ga(tmp0_appendLine_0);
                tmp$ret$3 = tmp0_appendLine_1.ea(_Char___init__impl__6a9atx(10));
              }
              tmp$ret$4 = tmp$ret$3;
            }
          }
        }
      }
      var tmp$ret$5;
      {
        tmp$ret$5 = _this__u8e3s4.ea(_Char___init__impl__6a9atx(10));
      }
    }
  };
  GlslGenerator.prototype.q39 = function (_this__u8e3s4, fragmentStage) {
    var tmp$ret$0;
    {
      var tmp0_isNotEmpty = fragmentStage.m3b();
      tmp$ret$0 = !tmp0_isNotEmpty.q();
    }
    if (tmp$ret$0) {
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          var tmp0_appendLine = _this__u8e3s4.ga('// custom fragment stage inputs');
          tmp$ret$1 = tmp0_appendLine.ea(_Char___init__impl__6a9atx(10));
        }
        tmp$ret$2 = tmp$ret$1;
      }
      {
        var tmp1_forEach = fragmentStage.m3b();
        var tmp0_iterator = tmp1_forEach.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          {
            var value = element.q36();
            var tmp;
            if (value instanceof KslArray) {
              tmp = '[' + value.u3b_1 + ']';
            } else {
              tmp = '';
            }
            var arraySuffix = tmp;
            var tmp$ret$4;
            {
              var tmp0_appendLine_0 = this.w3b(element.q3b_1) + ' in ' + this.t39(value.i2p()) + ' ' + this.k3b(value) + arraySuffix + ';';
              var tmp$ret$3;
              {
                var tmp0_appendLine_1 = _this__u8e3s4.ga(tmp0_appendLine_0);
                tmp$ret$3 = tmp0_appendLine_1.ea(_Char___init__impl__6a9atx(10));
              }
              tmp$ret$4 = tmp$ret$3;
            }
          }
        }
      }
      var tmp$ret$5;
      {
        tmp$ret$5 = _this__u8e3s4.ea(_Char___init__impl__6a9atx(10));
      }
    }
  };
  GlslGenerator.prototype.r39 = function (_this__u8e3s4, outputs) {
    var tmp$ret$0;
    {
      tmp$ret$0 = !outputs.q();
    }
    if (tmp$ret$0) {
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          var tmp0_appendLine = _this__u8e3s4.ga('// stage outputs');
          tmp$ret$1 = tmp0_appendLine.ea(_Char___init__impl__6a9atx(10));
        }
        tmp$ret$2 = tmp$ret$1;
      }
      {
        var tmp0_iterator = outputs.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          {
            var loc = element.y3b_1 >= 0 ? 'layout(location=' + element.y3b_1 + ') ' : '';
            var tmp$ret$4;
            {
              var tmp0_appendLine_0 = loc + 'out ' + this.t39(element.i2p()) + ' ' + this.k3b(element.n2()) + ';';
              var tmp$ret$3;
              {
                var tmp0_appendLine_1 = _this__u8e3s4.ga(tmp0_appendLine_0);
                tmp$ret$3 = tmp0_appendLine_1.ea(_Char___init__impl__6a9atx(10));
              }
              tmp$ret$4 = tmp$ret$3;
            }
          }
        }
      }
      var tmp$ret$5;
      {
        tmp$ret$5 = _this__u8e3s4.ea(_Char___init__impl__6a9atx(10));
      }
    }
  };
  GlslGenerator.prototype.z3b = function (op) {
    var tmp0_safe_receiver = op.h3c_1;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          tmp$ret$0 = ' = ' + tmp0_safe_receiver.x39(this);
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    var tmp1_elvis_lhs = tmp;
    var initExpr = tmp1_elvis_lhs == null ? '' : tmp1_elvis_lhs;
    var state = op.g3c_1;
    return this.t39(state.i2p()) + ' ' + this.k3b(state) + initExpr + ';';
  };
  GlslGenerator.prototype.i3c = function (op) {
    var initExpr = joinToString$default(op.q3c_1, null, null, null, 0, null, GlslGenerator$opDeclareArray$lambda(this), 31, null);
    var array = op.p3c_1;
    var typeName = this.t39(array.i2p().l2p_1);
    return typeName + ' ' + this.k3b(array) + '[' + array.u3b_1 + '] = ' + typeName + '[](' + initExpr + ');';
  };
  GlslGenerator.prototype.r3c = function (op) {
    return op.y3c_1.a3d(this) + ' = ' + op.z3c_1.x39(this) + ';';
  };
  GlslGenerator.prototype.b3d = function (op) {
    return op.i3d_1.a3d(this) + ' ' + new Char(op.j3d_1.n3d_1) + '= ' + op.k3d_1.x39(this) + ';';
  };
  GlslGenerator.prototype.o3d = function (op) {
    var txt = new StringBuilder('if (' + op.v3d_1.x39(this) + ') {\n');
    var tmp$ret$1;
    {
      var tmp0_appendLine = this.p39(op.w3d_1, this.k39_1);
      var tmp$ret$0;
      {
        var tmp0_appendLine_0 = txt.ga(tmp0_appendLine);
        tmp$ret$0 = tmp0_appendLine_0.ea(_Char___init__impl__6a9atx(10));
      }
      tmp$ret$1 = tmp$ret$0;
    }
    txt.ga('}');
    {
      var tmp1_forEach = op.x3d_1;
      var tmp0_iterator = tmp1_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          var tmp$ret$3;
          {
            var tmp0_appendLine_1 = ' else if (' + element.v_1.x39(this) + ') {';
            var tmp$ret$2;
            {
              var tmp0_appendLine_2 = txt.ga(tmp0_appendLine_1);
              tmp$ret$2 = tmp0_appendLine_2.ea(_Char___init__impl__6a9atx(10));
            }
            tmp$ret$3 = tmp$ret$2;
          }
          var tmp$ret$5;
          {
            var tmp1_appendLine = this.p39(element.w_1, this.k39_1);
            var tmp$ret$4;
            {
              var tmp0_appendLine_3 = txt.ga(tmp1_appendLine);
              tmp$ret$4 = tmp0_appendLine_3.ea(_Char___init__impl__6a9atx(10));
            }
            tmp$ret$5 = tmp$ret$4;
          }
          txt.ga('}');
        }
      }
    }
    if (op.y3d_1.a3e()) {
      var tmp$ret$7;
      {
        var tmp$ret$6;
        {
          var tmp0_appendLine_4 = txt.ga(' else {');
          tmp$ret$6 = tmp0_appendLine_4.ea(_Char___init__impl__6a9atx(10));
        }
        tmp$ret$7 = tmp$ret$6;
      }
      var tmp$ret$9;
      {
        var tmp2_appendLine = this.p39(op.y3d_1, this.k39_1);
        var tmp$ret$8;
        {
          var tmp0_appendLine_5 = txt.ga(tmp2_appendLine);
          tmp$ret$8 = tmp0_appendLine_5.ea(_Char___init__impl__6a9atx(10));
        }
        tmp$ret$9 = tmp$ret$8;
      }
      txt.ga('}');
    }
    return txt.toString();
  };
  GlslGenerator.prototype.b3e = function (op) {
    var tmp$ret$3;
    {
      var tmp$ret$1;
      {
        var tmp0_appendLine = (new StringBuilder('for (; ')).ga(op.j3e_1.x39(this)).ga('; ').ga(op.i3e_1.a3d(this)).ga(' += ').ga(op.k3e_1.x39(this));
        var tmp$ret$0;
        {
          var tmp0_appendLine_0 = tmp0_appendLine.ga(') {');
          tmp$ret$0 = tmp0_appendLine_0.ea(_Char___init__impl__6a9atx(10));
        }
        tmp$ret$1 = tmp$ret$0;
      }
      var tmp1_appendLine = tmp$ret$1;
      var tmp2_appendLine = this.p39(op.l3e_1, this.k39_1);
      var tmp$ret$2;
      {
        var tmp0_appendLine_1 = tmp1_appendLine.ga(tmp2_appendLine);
        tmp$ret$2 = tmp0_appendLine_1.ea(_Char___init__impl__6a9atx(10));
      }
      tmp$ret$3 = tmp$ret$2;
    }
    return tmp$ret$3.ga('}').toString();
  };
  GlslGenerator.prototype.m3e = function (op) {
    var tmp$ret$1;
    {
      var tmp0_appendLine = new StringBuilder('while (' + op.t3e_1.x39(this) + ') {\n');
      var tmp1_appendLine = this.p39(op.u3e_1, this.k39_1);
      var tmp$ret$0;
      {
        var tmp0_appendLine_0 = tmp0_appendLine.ga(tmp1_appendLine);
        tmp$ret$0 = tmp0_appendLine_0.ea(_Char___init__impl__6a9atx(10));
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1.ga('}').toString();
  };
  GlslGenerator.prototype.v3e = function (op) {
    var tmp$ret$1;
    {
      var tmp0_appendLine = new StringBuilder('do {\n');
      var tmp1_appendLine = this.p39(op.d3f_1, this.k39_1);
      var tmp$ret$0;
      {
        var tmp0_appendLine_0 = tmp0_appendLine.ga(tmp1_appendLine);
        tmp$ret$0 = tmp0_appendLine_0.ea(_Char___init__impl__6a9atx(10));
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1.ga('} while (' + op.c3f_1.x39(this) + ');').toString();
  };
  GlslGenerator.prototype.e3f = function (op) {
    return 'break;';
  };
  GlslGenerator.prototype.f3f = function (op) {
    return 'continue;';
  };
  GlslGenerator.prototype.g3f = function (op) {
    return 'discard;';
  };
  GlslGenerator.prototype.h3f = function (op) {
    return 'return ' + op.o3f_1.x39(this) + ';';
  };
  GlslGenerator.prototype.p3f = function (op) {
    var txt = new StringBuilder('{ // block: ' + op.v33() + '\n');
    var tmp$ret$1;
    {
      var tmp0_appendLine = this.p39(op.e34_1, this.k39_1);
      var tmp$ret$0;
      {
        var tmp0_appendLine_0 = txt.ga(tmp0_appendLine);
        tmp$ret$0 = tmp0_appendLine_0.ea(_Char___init__impl__6a9atx(10));
      }
      tmp$ret$1 = tmp$ret$0;
    }
    txt.ga('}');
    return txt.toString();
  };
  GlslGenerator.prototype.q3f = function (func) {
    return func.r3f_1.e38_1 + '(' + generateArgs(this, func.s3f_1, func.s3f_1.m()) + ')';
  };
  GlslGenerator.prototype.u3f = function (func) {
    return 'abs(' + generateArgs(this, func.x3f(), 1) + ')';
  };
  GlslGenerator.prototype.y3f = function (func) {
    return 'clamp(' + generateArgs(this, func.x3f(), 3) + ')';
  };
  GlslGenerator.prototype.z3f = function (func) {
    return 'cross(' + generateArgs(this, func.x3f(), 2) + ')';
  };
  GlslGenerator.prototype.a3g = function (func) {
    return 'dot(' + generateArgs(this, func.x3f(), 2) + ')';
  };
  GlslGenerator.prototype.b3g = function (func) {
    return 'floor(' + generateArgs(this, func.x3f(), 1) + ')';
  };
  GlslGenerator.prototype.c3g = function (func) {
    return 'length(' + generateArgs(this, func.x3f(), 1) + ')';
  };
  GlslGenerator.prototype.d3g = function (func) {
    return 'max(' + generateArgs(this, func.x3f(), 2) + ')';
  };
  GlslGenerator.prototype.e3g = function (func) {
    return 'min(' + generateArgs(this, func.x3f(), 2) + ')';
  };
  GlslGenerator.prototype.f3g = function (func) {
    return 'normalize(' + generateArgs(this, func.x3f(), 1) + ')';
  };
  GlslGenerator.prototype.g3g = function (func) {
    return 'pow(' + generateArgs(this, func.x3f(), 2) + ')';
  };
  GlslGenerator.prototype.h3g = function (func) {
    return 'pow(' + generateArgs(this, func.x3f(), 2) + ')';
  };
  GlslGenerator.prototype.i3g = function (func) {
    return 'smoothstep(' + generateArgs(this, func.x3f(), 3) + ')';
  };
  GlslGenerator.prototype.j3g = function (func) {
    return 'sqrt(' + generateArgs(this, func.x3f(), 1) + ')';
  };
  GlslGenerator.prototype.k3g = function (func) {
    return 'step(' + generateArgs(this, func.x3f(), 2) + ')';
  };
  GlslGenerator.prototype.l3g = function (func) {
    return func.o3g_1 + '(' + generateArgs(this, func.x3f(), 1) + ')';
  };
  GlslGenerator.prototype.p3g = function (func) {
    return 'trunc(' + generateArgs(this, func.x3f(), 1) + ')';
  };
  GlslGenerator.prototype.w3b = function (_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4;
    var tmp0 = tmp0_subject.y1();
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = 'smooth';
        break;
      case 1:
        tmp = 'flat';
        break;
      case 2:
        tmp = 'noperspective';
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  GlslGenerator.prototype.k3b = function (_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.d3a_1;
    var tmp;
    Companion_getInstance_15();
    if (tmp0_subject === 'inVertexIndex') {
      tmp = 'gl_VertexID';
    } else {
      Companion_getInstance_15();
      if (tmp0_subject === 'inInstanceIndex') {
        tmp = 'gl_InstanceID';
      } else {
        Companion_getInstance_15();
        if (tmp0_subject === 'outPosition') {
          tmp = 'gl_Position';
        } else {
          Companion_getInstance_15();
          if (tmp0_subject === 'outPointSize') {
            tmp = 'gl_PointSize';
          } else {
            Companion_getInstance_16();
            if (tmp0_subject === 'inFragPosition') {
              tmp = 'gl_FragCoord';
            } else {
              Companion_getInstance_16();
              if (tmp0_subject === 'inIsFrontFacing') {
                tmp = 'gl_FrontFacing';
              } else {
                Companion_getInstance_16();
                if (tmp0_subject === 'outDepth') {
                  tmp = 'gl_FragDepth';
                } else {
                  tmp = _this__u8e3s4.d3a_1;
                }
              }
            }
          }
        }
      }
    }
    return tmp;
  };
  GlslGenerator.prototype.t39 = function (type) {
    var tmp0_subject = type;
    var tmp;
    if (equals(tmp0_subject, KslTypeVoid_getInstance())) {
      tmp = 'void';
    } else {
      if (equals(tmp0_subject, KslTypeBool1_getInstance())) {
        tmp = 'bool';
      } else {
        if (equals(tmp0_subject, KslTypeBool2_getInstance())) {
          tmp = 'bvec2';
        } else {
          if (equals(tmp0_subject, KslTypeBool3_getInstance())) {
            tmp = 'bvec3';
          } else {
            if (equals(tmp0_subject, KslTypeBool4_getInstance())) {
              tmp = 'bvec4';
            } else {
              if (equals(tmp0_subject, KslTypeFloat1_getInstance())) {
                tmp = 'float';
              } else {
                if (equals(tmp0_subject, KslTypeFloat2_getInstance())) {
                  tmp = 'vec2';
                } else {
                  if (equals(tmp0_subject, KslTypeFloat3_getInstance())) {
                    tmp = 'vec3';
                  } else {
                    if (equals(tmp0_subject, KslTypeFloat4_getInstance())) {
                      tmp = 'vec4';
                    } else {
                      if (equals(tmp0_subject, KslTypeInt1_getInstance())) {
                        tmp = 'int';
                      } else {
                        if (equals(tmp0_subject, KslTypeInt2_getInstance())) {
                          tmp = 'ivec2';
                        } else {
                          if (equals(tmp0_subject, KslTypeInt3_getInstance())) {
                            tmp = 'ivec3';
                          } else {
                            if (equals(tmp0_subject, KslTypeInt4_getInstance())) {
                              tmp = 'ivec4';
                            } else {
                              if (equals(tmp0_subject, KslTypeUint1_getInstance())) {
                                tmp = 'uint';
                              } else {
                                if (equals(tmp0_subject, KslTypeUint2_getInstance())) {
                                  tmp = 'uvec2';
                                } else {
                                  if (equals(tmp0_subject, KslTypeUint3_getInstance())) {
                                    tmp = 'uvec3';
                                  } else {
                                    if (equals(tmp0_subject, KslTypeUint4_getInstance())) {
                                      tmp = 'uvec4';
                                    } else {
                                      if (equals(tmp0_subject, KslTypeMat2_getInstance())) {
                                        tmp = 'mat2';
                                      } else {
                                        if (equals(tmp0_subject, KslTypeMat3_getInstance())) {
                                          tmp = 'mat3';
                                        } else {
                                          if (equals(tmp0_subject, KslTypeMat4_getInstance())) {
                                            tmp = 'mat4';
                                          } else {
                                            if (equals(tmp0_subject, KslTypeColorSampler1d_getInstance())) {
                                              tmp = 'sampler2D';
                                            } else {
                                              if (equals(tmp0_subject, KslTypeColorSampler2d_getInstance())) {
                                                tmp = 'sampler2D';
                                              } else {
                                                if (equals(tmp0_subject, KslTypeColorSampler3d_getInstance())) {
                                                  tmp = 'sampler3D';
                                                } else {
                                                  if (equals(tmp0_subject, KslTypeColorSamplerCube_getInstance())) {
                                                    tmp = 'samplerCube';
                                                  } else {
                                                    if (equals(tmp0_subject, KslTypeColorSampler2dArray_getInstance())) {
                                                      tmp = 'sampler2DArray';
                                                    } else {
                                                      if (equals(tmp0_subject, KslTypeColorSamplerCubeArray_getInstance())) {
                                                        tmp = 'samplerCubeArray';
                                                      } else {
                                                        if (equals(tmp0_subject, KslTypeDepthSampler2d_getInstance())) {
                                                          tmp = 'sampler2DShadow';
                                                        } else {
                                                          if (equals(tmp0_subject, KslTypeDepthSamplerCube_getInstance())) {
                                                            tmp = 'samplerCubeShadow';
                                                          } else {
                                                            if (equals(tmp0_subject, KslTypeDepthSampler2dArray_getInstance())) {
                                                              tmp = 'sampler2DArrayShadow';
                                                            } else {
                                                              if (equals(tmp0_subject, KslTypeDepthSamplerCubeArray_getInstance())) {
                                                                tmp = 'samplerCubeArrayShadow';
                                                              } else {
                                                                if (tmp0_subject instanceof KslTypeArray) {
                                                                  tmp = this.t39(type.l2p_1);
                                                                } else {
                                                                  noWhenBranchMatchedException();
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return tmp;
  };
  GlslGenerator.$metadata$ = classMeta('GlslGenerator', undefined, undefined, undefined, undefined, KslGenerator.prototype);
  function GeneratorOutput() {
  }
  GeneratorOutput.$metadata$ = interfaceMeta('GeneratorOutput');
  function KslGenerator$generateScope$lambda(this$0, $indent) {
    return function (it) {
      return prependIndent(this$0.b3h(it), $indent);
    };
  }
  function KslGenerator() {
  }
  KslGenerator.prototype.q3g = function (value) {
    return '' + value;
  };
  KslGenerator.prototype.r3g = function (value) {
    return '' + new UInt(value) + 'u';
  };
  KslGenerator.prototype.s3g = function (value) {
    var str = '' + value;
    var tmp = str;
    var tmp_0 = _Char___init__impl__6a9atx(46);
    if (!contains$default(tmp, tmp_0, false, 2, null)) {
      str = str + '.0';
    }
    return str;
  };
  KslGenerator.prototype.t3g = function (value) {
    return this.k3b(value);
  };
  KslGenerator.prototype.u3g = function (swizzleExpr) {
    return swizzleExpr.c3h_1.x39(this) + '.' + swizzleExpr.d3h_1;
  };
  KslGenerator.prototype.v3g = function (expression) {
    return '(' + expression.h3h_1.x39(this) + ' ' + new Char(expression.j3h_1.n3d_1) + ' ' + expression.i3h_1.x39(this) + ')';
  };
  KslGenerator.prototype.w3g = function (expression) {
    return '(' + expression.l3h_1.x39(this) + ' ' + expression.n3h_1.r3h_1 + ' ' + expression.m3h_1.x39(this) + ')';
  };
  KslGenerator.prototype.n3a = function (expression) {
    return '(' + expression.o3a_1.x39(this) + ' ' + expression.q3a_1.u3a_1 + ' ' + expression.p3a_1.x39(this) + ')';
  };
  KslGenerator.prototype.x3g = function (expression) {
    return expression.w3h_1.u3h_1 + '(' + expression.v3h_1.x39(this) + ')';
  };
  KslGenerator.prototype.y3g = function (expression) {
    return '(' + expression.y3h_1.x39(this) + ' ' + expression.a3i_1.e3i_1 + ' ' + expression.z3h_1.x39(this) + ')';
  };
  KslGenerator.prototype.z3g = function (assignable) {
    return this.k3b(assignable);
  };
  KslGenerator.prototype.a3h = function (swizzleAssignable) {
    return swizzleAssignable.c3h_1.x39(this) + '.' + swizzleAssignable.d3h_1;
  };
  KslGenerator.prototype.p39 = function (scope, indent) {
    var tmp = asSequence(scope.c2p_1);
    var tmp_0 = map(tmp, KslGenerator$generateScope$lambda(this, indent));
    return joinToString$default_1(tmp_0, '\n', null, null, 0, null, null, 62, null);
  };
  KslGenerator.prototype.b3h = function (op) {
    var tmp0_subject = op;
    var tmp;
    if (tmp0_subject instanceof KslDeclareVar) {
      tmp = this.z3b(op);
    } else {
      if (tmp0_subject instanceof KslDeclareArray) {
        tmp = this.i3c(op);
      } else {
        if (tmp0_subject instanceof KslAssign) {
          tmp = this.r3c(op);
        } else {
          if (tmp0_subject instanceof KslAugmentedAssign) {
            tmp = this.b3d(op);
          } else {
            if (tmp0_subject instanceof KslIf) {
              tmp = this.o3d(op);
            } else {
              if (tmp0_subject instanceof KslLoopFor) {
                tmp = this.b3e(op);
              } else {
                if (tmp0_subject instanceof KslLoopWhile) {
                  tmp = this.m3e(op);
                } else {
                  if (tmp0_subject instanceof KslLoopDoWhile) {
                    tmp = this.v3e(op);
                  } else {
                    if (tmp0_subject instanceof KslLoopBreak) {
                      tmp = this.e3f(op);
                    } else {
                      if (tmp0_subject instanceof KslLoopContinue) {
                        tmp = this.f3f(op);
                      } else {
                        if (tmp0_subject instanceof KslDiscard) {
                          tmp = this.g3f(op);
                        } else {
                          if (tmp0_subject instanceof KslReturn) {
                            tmp = this.h3f(op);
                          } else {
                            if (tmp0_subject instanceof KslBlock) {
                              tmp = this.p3f(op);
                            } else {
                              throw IllegalArgumentException_init_$Create$('Unsupported op: ' + op.j37());
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return tmp;
  };
  KslGenerator.prototype.s39 = function (functions) {
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashSet_init_$Create$();
    }
    var closed = tmp$ret$0;
    var tmp$ret$1;
    {
      tmp$ret$1 = LinkedHashSet_init_$Create$();
    }
    var open = tmp$ret$1;
    {
      addAll(open, functions);
    }
    functions.t7();
    $l$loop: while (true) {
      var tmp$ret$2;
      {
        tmp$ret$2 = !open.q();
      }
      if (!tmp$ret$2) {
        break $l$loop;
      }
      var tmp$ret$7;
      {
        var tmp$ret$6;
        $l$block_1: {
          var tmp0_iterator = open.h();
          while (tmp0_iterator.n()) {
            var element = tmp0_iterator.o();
            var tmp$ret$5;
            {
              var tmp$ret$3;
              $l$block_0: {
                var tmp0_all = element.i38_1;
                var tmp;
                if (isInterface(tmp0_all, Collection)) {
                  tmp = tmp0_all.q();
                } else {
                  tmp = false;
                }
                if (tmp) {
                  tmp$ret$3 = true;
                  break $l$block_0;
                }
                var tmp0_iterator_0 = tmp0_all.h();
                while (tmp0_iterator_0.n()) {
                  var element_0 = tmp0_iterator_0.o();
                  var tmp$ret$4;
                  {
                    tmp$ret$4 = closed.p(element_0);
                  }
                  if (!tmp$ret$4) {
                    tmp$ret$3 = false;
                    break $l$block_0;
                  }
                }
                tmp$ret$3 = true;
              }
              tmp$ret$5 = tmp$ret$3;
            }
            if (tmp$ret$5) {
              tmp$ret$6 = element;
              break $l$block_1;
            }
          }
          tmp$ret$6 = null;
        }
        tmp$ret$7 = tmp$ret$6;
      }
      var tmp0_elvis_lhs = tmp$ret$7;
      var tmp_0;
      if (tmp0_elvis_lhs == null) {
        throw IllegalStateException_init_$Create$('Unable to sort functions, circular dependencies?');
      } else {
        tmp_0 = tmp0_elvis_lhs;
      }
      var next = tmp_0;
      {
        open.c4(next);
      }
      {
        closed.b(next);
      }
      {
        functions.b(next);
      }
    }
  };
  KslGenerator.$metadata$ = classMeta('KslGenerator');
  function KslArray() {
  }
  KslArray.prototype.f3i = function () {
    return this.u3b_1;
  };
  KslArray.prototype.i2p = function () {
    return this.v3b_1;
  };
  KslArray.$metadata$ = classMeta('KslArray', undefined, undefined, undefined, undefined, KslValue.prototype);
  function KslAssign(assignTarget, assignExpression, scopeBuilder) {
    KslStatement.call(this, 'assign', scopeBuilder);
    this.y3c_1 = assignTarget;
    this.z3c_1 = assignExpression;
    this.y3c_1.g3i(scopeBuilder);
    this.h3i(this.z3c_1);
    this.k3i(ensureNotNull(this.y3c_1.i3i()).j3i());
  }
  KslAssign.prototype.j37 = function () {
    return this.y3c_1.j37() + ' = ' + this.z3c_1.j37() + ' // ' + this.k37();
  };
  KslAssign.$metadata$ = classMeta('KslAssign', undefined, undefined, undefined, undefined, KslStatement.prototype);
  function KslAssignable() {
  }
  KslAssignable.$metadata$ = interfaceMeta('KslAssignable');
  function KslAugmentedAssign(assignTarget, augmentationMode, assignExpression, scopeBuilder) {
    KslStatement.call(this, 'augmentedAssign', scopeBuilder);
    this.i3d_1 = assignTarget;
    this.j3d_1 = augmentationMode;
    this.k3d_1 = assignExpression;
    this.i3d_1.g3i(scopeBuilder);
    this.h3i(this.k3d_1);
    this.k3i(ensureNotNull(this.i3d_1.i3i()).j3i());
  }
  KslAugmentedAssign.prototype.j37 = function () {
    return this.i3d_1.j37() + ' ' + new Char(this.j3d_1.n3d_1) + '= ' + this.k3d_1.j37() + ' // ' + this.k37();
  };
  KslAugmentedAssign.$metadata$ = classMeta('KslAugmentedAssign', undefined, undefined, undefined, undefined, KslStatement.prototype);
  function nextName($this, suffix) {
    return $this.c37().l2z_1.p2o_1.l31($this.v33() + '_' + suffix);
  }
  function updateDependencies($this, input, newExpression) {
    {
      var tmp0_set = $this.c34_1;
      var tmp0_safe_receiver = newExpression;
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.o3i();
      var tmp1_set = tmp1_elvis_lhs == null ? emptySet() : tmp1_elvis_lhs;
      tmp0_set.a(input, tmp1_set);
    }
    $this.e2p().t7();
    {
      var tmp2_forEach = $this.c34_1.d3();
      var tmp0_iterator = tmp2_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          {
            var tmp0_iterator_0 = element.h();
            while (tmp0_iterator_0.n()) {
              var element_0 = tmp0_iterator_0.o();
              {
                {
                  var tmp0_set_0 = $this.e2p();
                  var tmp1_set_0 = element_0.p3i_1;
                  tmp0_set_0.a(tmp1_set_0, element_0);
                }
              }
            }
          }
        }
      }
    }
  }
  function BlockInput($outer, name, expressionType, defaultValue) {
    this.u3i_1 = $outer;
    this.r3i_1 = name;
    this.s3i_1 = expressionType;
    this.t3i_1 = defaultValue;
  }
  BlockInput.prototype.il = function () {
    return this.r3i_1;
  };
  BlockInput.prototype.i2p = function () {
    return this.s3i_1;
  };
  BlockInput.prototype.v3i = function (value) {
    updateDependencies(this.u3i_1, this, value);
    this.t3i_1 = value;
  };
  BlockInput.prototype.n37 = function () {
    return this.t3i_1;
  };
  BlockInput.prototype.w3i = function (assignExpression) {
    this.v3i(assignExpression);
  };
  BlockInput.prototype.o3i = function () {
    return emptySet();
  };
  BlockInput.prototype.x39 = function (generator) {
    var tmp0_safe_receiver = this.t3i_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.x39(generator);
    var tmp;
    if (tmp1_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$('Missing input value for input ' + this.r3i_1 + ' of block ' + this.u3i_1.v33());
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  };
  BlockInput.prototype.j37 = function () {
    var tmp0_safe_receiver = this.t3i_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.j37();
    var tmp;
    if (tmp1_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$('Missing input value for input ' + this.r3i_1 + ' of block ' + this.u3i_1.v33());
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  };
  BlockInput.$metadata$ = classMeta('BlockInput', [KslExpression]);
  function VectorInput($outer, name, expressionType, defaultValue) {
    this.b3j_1 = $outer;
    BlockInput.call(this, $outer, name, expressionType, defaultValue);
  }
  VectorInput.$metadata$ = classMeta('VectorInput', [KslVectorExpression], undefined, undefined, undefined, BlockInput.prototype);
  function KslBlock(blockName, parentScope) {
    KslStatement.call(this, blockName, parentScope);
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$();
    }
    tmp.c34_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = ArrayList_init_$Create$_0();
    }
    tmp_0.d34_1 = tmp$ret$1;
    var tmp_1 = this;
    var tmp$ret$2;
    {
      var tmp0_apply = new KslScopeBuilder(this, parentScope, parentScope.l2z_1);
      {
      }
      {
        tmp0_apply.c3j(blockName);
      }
      tmp$ret$2 = tmp0_apply;
    }
    tmp_1.e34_1 = tmp$ret$2;
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.f37();
      var tmp1_plusAssign = this.e34_1;
      tmp0_plusAssign.b(tmp1_plusAssign);
    }
  }
  KslBlock.prototype.g34 = function () {
    return this.e34_1;
  };
  KslBlock.prototype.t36 = function (name, defaultValue) {
    var tmp$ret$0;
    {
      var tmp0_elvis_lhs = name;
      var tmp0_also = new VectorInput(this, tmp0_elvis_lhs == null ? nextName(this, 'inF4') : tmp0_elvis_lhs, KslTypeFloat4_getInstance(), defaultValue);
      {
      }
      {
        updateDependencies(this, tmp0_also, defaultValue);
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  KslBlock.prototype.u36 = function (name, defaultValue, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      name = null;
    if (!(($mask0 & 2) === 0))
      defaultValue = null;
    return this.t36(name, defaultValue);
  };
  KslBlock.prototype.f34 = function (name) {
    var tmp$ret$0;
    {
      var tmp = this.c37();
      var tmp0_elvis_lhs = name;
      var tmp0_also = tmp.y35(null, nextName(this, tmp0_elvis_lhs == null ? 'outF4' : tmp0_elvis_lhs), 1, null);
      {
      }
      {
        var tmp0_this = this;
        {
          var tmp0_plusAssign = tmp0_this.d34_1;
          tmp0_plusAssign.b(tmp0_also);
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  KslBlock.prototype.v36 = function () {
    KslStatement.prototype.v36.call(this);
    {
      var tmp0_forEach = this.c34_1.c3();
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          if (element.t3i_1 == null) {
            throw IllegalStateException_init_$Create$('Missing input value for input ' + element.r3i_1 + ' of block ' + this.v33());
          }
        }
      }
    }
  };
  KslBlock.$metadata$ = classMeta('KslBlock', undefined, undefined, undefined, undefined, KslStatement.prototype);
  function KslBuiltinLength(vec) {
    KslBuiltinFunctionScalar.call(this, KslTypeFloat1_getInstance(), [vec]);
    this.f3j_1 = 'length';
  }
  KslBuiltinLength.prototype.il = function () {
    return this.f3j_1;
  };
  KslBuiltinLength.prototype.x39 = function (generator) {
    return generator.c3g(this);
  };
  KslBuiltinLength.$metadata$ = classMeta('KslBuiltinLength', undefined, undefined, undefined, undefined, KslBuiltinFunctionScalar.prototype);
  function KslBuiltinFloorVector(vec) {
    KslBuiltinFunctionVector.call(this, vec.i2p(), [vec]);
    this.i3j_1 = 'floor';
  }
  KslBuiltinFloorVector.prototype.il = function () {
    return this.i3j_1;
  };
  KslBuiltinFloorVector.prototype.x39 = function (generator) {
    return generator.b3g(this);
  };
  KslBuiltinFloorVector.$metadata$ = classMeta('KslBuiltinFloorVector', undefined, undefined, undefined, undefined, KslBuiltinFunctionVector.prototype);
  function KslBuiltinTruncVector(vec) {
    KslBuiltinFunctionVector.call(this, vec.i2p(), [vec]);
    this.l3j_1 = 'trunc';
  }
  KslBuiltinTruncVector.prototype.il = function () {
    return this.l3j_1;
  };
  KslBuiltinTruncVector.prototype.x39 = function (generator) {
    return generator.p3g(this);
  };
  KslBuiltinTruncVector.$metadata$ = classMeta('KslBuiltinTruncVector', undefined, undefined, undefined, undefined, KslBuiltinFunctionVector.prototype);
  function KslBuiltinPowVector(vec, power) {
    KslBuiltinFunctionVector.call(this, vec.i2p(), [vec, power]);
    this.o3j_1 = 'pow';
  }
  KslBuiltinPowVector.prototype.il = function () {
    return this.o3j_1;
  };
  KslBuiltinPowVector.prototype.x39 = function (generator) {
    return generator.h3g(this);
  };
  KslBuiltinPowVector.$metadata$ = classMeta('KslBuiltinPowVector', undefined, undefined, undefined, undefined, KslBuiltinFunctionVector.prototype);
  function KslBuiltinAbsScalar(value) {
    KslBuiltinFunctionScalar.call(this, value.i2p(), [value]);
    this.r3j_1 = 'abs';
  }
  KslBuiltinAbsScalar.prototype.il = function () {
    return this.r3j_1;
  };
  KslBuiltinAbsScalar.prototype.x39 = function (generator) {
    return generator.u3f(this);
  };
  KslBuiltinAbsScalar.$metadata$ = classMeta('KslBuiltinAbsScalar', undefined, undefined, undefined, undefined, KslBuiltinFunctionScalar.prototype);
  function KslBuiltinClampScalar(value, min, max) {
    KslBuiltinFunctionScalar.call(this, value.i2p(), [value, min, max]);
    this.u3j_1 = 'clamp';
  }
  KslBuiltinClampScalar.prototype.il = function () {
    return this.u3j_1;
  };
  KslBuiltinClampScalar.prototype.x39 = function (generator) {
    return generator.y3f(this);
  };
  KslBuiltinClampScalar.$metadata$ = classMeta('KslBuiltinClampScalar', undefined, undefined, undefined, undefined, KslBuiltinFunctionScalar.prototype);
  function KslBuiltinCross(vec1, vec2) {
    KslBuiltinFunctionVector.call(this, KslTypeFloat3_getInstance(), [vec1, vec2]);
    this.x3j_1 = 'cross';
  }
  KslBuiltinCross.prototype.il = function () {
    return this.x3j_1;
  };
  KslBuiltinCross.prototype.x39 = function (generator) {
    return generator.z3f(this);
  };
  KslBuiltinCross.$metadata$ = classMeta('KslBuiltinCross', undefined, undefined, undefined, undefined, KslBuiltinFunctionVector.prototype);
  function KslBuiltinDot(a, b) {
    KslBuiltinFunctionScalar.call(this, KslTypeFloat1_getInstance(), [a, b]);
    this.a3k_1 = 'dot';
  }
  KslBuiltinDot.prototype.il = function () {
    return this.a3k_1;
  };
  KslBuiltinDot.prototype.x39 = function (generator) {
    return generator.a3g(this);
  };
  KslBuiltinDot.$metadata$ = classMeta('KslBuiltinDot', undefined, undefined, undefined, undefined, KslBuiltinFunctionScalar.prototype);
  function KslBuiltinMaxScalar(a, b) {
    KslBuiltinFunctionScalar.call(this, a.i2p(), [a, b]);
    this.d3k_1 = 'max';
  }
  KslBuiltinMaxScalar.prototype.il = function () {
    return this.d3k_1;
  };
  KslBuiltinMaxScalar.prototype.x39 = function (generator) {
    return generator.d3g(this);
  };
  KslBuiltinMaxScalar.$metadata$ = classMeta('KslBuiltinMaxScalar', undefined, undefined, undefined, undefined, KslBuiltinFunctionScalar.prototype);
  function KslBuiltinMinScalar(a, b) {
    KslBuiltinFunctionScalar.call(this, a.i2p(), [a, b]);
    this.g3k_1 = 'min';
  }
  KslBuiltinMinScalar.prototype.il = function () {
    return this.g3k_1;
  };
  KslBuiltinMinScalar.prototype.x39 = function (generator) {
    return generator.e3g(this);
  };
  KslBuiltinMinScalar.$metadata$ = classMeta('KslBuiltinMinScalar', undefined, undefined, undefined, undefined, KslBuiltinFunctionScalar.prototype);
  function KslBuiltinNormalize(vec) {
    KslBuiltinFunctionVector.call(this, vec.i2p(), [vec]);
    this.j3k_1 = 'normalize';
  }
  KslBuiltinNormalize.prototype.il = function () {
    return this.j3k_1;
  };
  KslBuiltinNormalize.prototype.x39 = function (generator) {
    return generator.f3g(this);
  };
  KslBuiltinNormalize.$metadata$ = classMeta('KslBuiltinNormalize', undefined, undefined, undefined, undefined, KslBuiltinFunctionVector.prototype);
  function KslBuiltinPowScalar(value, power) {
    KslBuiltinFunctionScalar.call(this, KslTypeFloat1_getInstance(), [value, power]);
    this.m3k_1 = 'pow';
  }
  KslBuiltinPowScalar.prototype.il = function () {
    return this.m3k_1;
  };
  KslBuiltinPowScalar.prototype.x39 = function (generator) {
    return generator.g3g(this);
  };
  KslBuiltinPowScalar.$metadata$ = classMeta('KslBuiltinPowScalar', undefined, undefined, undefined, undefined, KslBuiltinFunctionScalar.prototype);
  function KslBuiltinSmoothStepScalar(low, high, x) {
    KslBuiltinFunctionScalar.call(this, x.i2p(), [low, high, x]);
    this.p3k_1 = 'smoothStep';
  }
  KslBuiltinSmoothStepScalar.prototype.il = function () {
    return this.p3k_1;
  };
  KslBuiltinSmoothStepScalar.prototype.x39 = function (generator) {
    return generator.i3g(this);
  };
  KslBuiltinSmoothStepScalar.$metadata$ = classMeta('KslBuiltinSmoothStepScalar', undefined, undefined, undefined, undefined, KslBuiltinFunctionScalar.prototype);
  function KslBuiltinSqrtScalar(value) {
    KslBuiltinFunctionScalar.call(this, value.i2p(), [value]);
    this.s3k_1 = 'sqrt';
  }
  KslBuiltinSqrtScalar.prototype.il = function () {
    return this.s3k_1;
  };
  KslBuiltinSqrtScalar.prototype.x39 = function (generator) {
    return generator.j3g(this);
  };
  KslBuiltinSqrtScalar.$metadata$ = classMeta('KslBuiltinSqrtScalar', undefined, undefined, undefined, undefined, KslBuiltinFunctionScalar.prototype);
  function KslBuiltinStepScalar(edge, x) {
    KslBuiltinFunctionScalar.call(this, edge.i2p(), [edge, x]);
    this.v3k_1 = 'step';
  }
  KslBuiltinStepScalar.prototype.il = function () {
    return this.v3k_1;
  };
  KslBuiltinStepScalar.prototype.x39 = function (generator) {
    return generator.k3g(this);
  };
  KslBuiltinStepScalar.$metadata$ = classMeta('KslBuiltinStepScalar', undefined, undefined, undefined, undefined, KslBuiltinFunctionScalar.prototype);
  function KslBuiltinTrigonometryScalar(value, name) {
    KslBuiltinFunctionScalar.call(this, value.i2p(), [value]);
    this.o3g_1 = name;
  }
  KslBuiltinTrigonometryScalar.prototype.il = function () {
    return this.o3g_1;
  };
  KslBuiltinTrigonometryScalar.prototype.x39 = function (generator) {
    return generator.l3g(this);
  };
  KslBuiltinTrigonometryScalar.$metadata$ = classMeta('KslBuiltinTrigonometryScalar', undefined, undefined, undefined, undefined, KslBuiltinFunctionScalar.prototype);
  function KslBuiltinFunctionScalar(returnType, args) {
    KslBuiltinFunction.call(this, returnType, args.slice());
  }
  KslBuiltinFunctionScalar.$metadata$ = classMeta('KslBuiltinFunctionScalar', [KslScalarExpression], undefined, undefined, undefined, KslBuiltinFunction.prototype);
  function KslBuiltinFunctionVector(returnType, args) {
    KslBuiltinFunction.call(this, returnType, args.slice());
  }
  KslBuiltinFunctionVector.$metadata$ = classMeta('KslBuiltinFunctionVector', [KslVectorExpression], undefined, undefined, undefined, KslBuiltinFunction.prototype);
  function KslBuiltinFunction$toPseudoCode$lambda() {
    return function (it) {
      return it.j37();
    };
  }
  function KslBuiltinFunction(returnType, args) {
    this.v3f_1 = listOf(args.slice());
    this.w3f_1 = returnType;
  }
  KslBuiltinFunction.prototype.x3f = function () {
    return this.v3f_1;
  };
  KslBuiltinFunction.prototype.i2p = function () {
    return this.w3f_1;
  };
  KslBuiltinFunction.prototype.o3i = function () {
    var tmp$ret$2;
    {
      var tmp0_flatMap = this.v3f_1;
      var tmp$ret$1;
      {
        var tmp0_flatMapTo = ArrayList_init_$Create$_0();
        var tmp0_iterator = tmp0_flatMap.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          var tmp$ret$0;
          {
            tmp$ret$0 = element.o3i();
          }
          var list = tmp$ret$0;
          addAll(tmp0_flatMapTo, list);
        }
        tmp$ret$1 = tmp0_flatMapTo;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return toSet(tmp$ret$2);
  };
  KslBuiltinFunction.prototype.j37 = function () {
    var tmp = this.il();
    return tmp + '(' + joinToString$default(this.v3f_1, null, null, null, 0, null, KslBuiltinFunction$toPseudoCode$lambda(), 31, null) + ')';
  };
  KslBuiltinFunction.$metadata$ = classMeta('KslBuiltinFunction', [KslExpression]);
  function KslDataBlock() {
  }
  KslDataBlock.$metadata$ = interfaceMeta('KslDataBlock');
  function KslDeclareArray() {
  }
  KslDeclareArray.$metadata$ = classMeta('KslDeclareArray', undefined, undefined, undefined, undefined, KslStatement.prototype);
  function KslDeclareVar(declareVar, initExpression, parentScope) {
    KslStatement.call(this, 'declareVar', parentScope);
    this.g3c_1 = declareVar;
    this.h3c_1 = initExpression;
    var tmp0_this = parentScope;
    {
      var tmp0_plusAssign = tmp0_this.w3k();
      var tmp1_plusAssign = this.g3c_1;
      tmp0_plusAssign.b(tmp1_plusAssign);
    }
    var tmp1_safe_receiver = initExpression;
    if (tmp1_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        tmp$ret$0 = this.h3i(tmp1_safe_receiver);
      }
    }
    this.k3i(this.g3c_1.j3i());
  }
  KslDeclareVar.prototype.j37 = function () {
    var tmp = this.g3c_1.f3a();
    var tmp0_safe_receiver = this.h3c_1;
    return 'declare(' + tmp + ') = ' + (tmp0_safe_receiver == null ? null : tmp0_safe_receiver.j37()) + ' // ' + this.k37();
  };
  KslDeclareVar.$metadata$ = classMeta('KslDeclareVar', undefined, undefined, undefined, undefined, KslStatement.prototype);
  function KslDiscard(parentScope) {
    KslStatement.call(this, 'break', parentScope);
    {
      var tmp = parentScope.l2z_1;
      var tmp0_check = tmp instanceof KslFragmentStage;
      {
      }
      if (!tmp0_check) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'discard can only be used in fragment stage';
        }
        var message = tmp$ret$0;
        throw IllegalStateException_init_$Create$(toString(message));
      }
    }
  }
  KslDiscard.$metadata$ = classMeta('KslDiscard', undefined, undefined, undefined, undefined, KslStatement.prototype);
  function KslVectorExpression() {
  }
  KslVectorExpression.$metadata$ = interfaceMeta('KslVectorExpression', [KslExpression]);
  function KslScalarExpression() {
  }
  KslScalarExpression.$metadata$ = interfaceMeta('KslScalarExpression', [KslExpression]);
  function KslExpression() {
  }
  KslExpression.$metadata$ = interfaceMeta('KslExpression');
  function KslMatrixExpression() {
  }
  KslMatrixExpression.$metadata$ = interfaceMeta('KslMatrixExpression', [KslExpression]);
  function KslExpressionBit(left, right, operator, expressionType) {
    this.l3h_1 = left;
    this.m3h_1 = right;
    this.n3h_1 = operator;
    this.o3h_1 = expressionType;
  }
  KslExpressionBit.prototype.i2p = function () {
    return this.o3h_1;
  };
  KslExpressionBit.prototype.o3i = function () {
    return plus(this.l3h_1.o3i(), this.m3h_1.o3i());
  };
  KslExpressionBit.prototype.x39 = function (generator) {
    return generator.w3g(this);
  };
  KslExpressionBit.prototype.j37 = function () {
    return '(' + this.l3h_1.j37() + ' ' + this.n3h_1.r3h_1 + ' ' + this.m3h_1.j37() + ')';
  };
  KslExpressionBit.$metadata$ = classMeta('KslExpressionBit', [KslExpression]);
  var KslBitOperator_And_instance;
  var KslBitOperator_Or_instance;
  var KslBitOperator_Xor_instance;
  var KslBitOperator_Shl_instance;
  var KslBitOperator_Shr_instance;
  var KslBitOperator_entriesInitialized;
  function KslBitOperator_initEntries() {
    if (KslBitOperator_entriesInitialized)
      return Unit_getInstance();
    KslBitOperator_entriesInitialized = true;
    KslBitOperator_And_instance = new KslBitOperator('And', 0, '&');
    KslBitOperator_Or_instance = new KslBitOperator('Or', 1, '|');
    KslBitOperator_Xor_instance = new KslBitOperator('Xor', 2, '^');
    KslBitOperator_Shl_instance = new KslBitOperator('Shl', 3, '<<');
    KslBitOperator_Shr_instance = new KslBitOperator('Shr', 4, '>>');
  }
  function KslBitOperator(name, ordinal, opString) {
    Enum.call(this, name, ordinal);
    this.r3h_1 = opString;
  }
  KslBitOperator.$metadata$ = classMeta('KslBitOperator', undefined, undefined, undefined, undefined, Enum.prototype);
  function KslExpressionBitScalar(left, right, operator, expressionType) {
    KslExpressionBit.call(this, left, right, operator, expressionType);
  }
  KslExpressionBitScalar.$metadata$ = classMeta('KslExpressionBitScalar', [KslScalarExpression], undefined, undefined, undefined, KslExpressionBit.prototype);
  function or(_this__u8e3s4, right) {
    return new KslExpressionBitScalar(_this__u8e3s4, right, KslBitOperator_Or_getInstance(), _this__u8e3s4.i2p());
  }
  function shr(_this__u8e3s4, right) {
    return new KslExpressionBitScalar(_this__u8e3s4, right, KslBitOperator_Shr_getInstance(), _this__u8e3s4.i2p());
  }
  function shl(_this__u8e3s4, right) {
    return new KslExpressionBitScalar(_this__u8e3s4, right, KslBitOperator_Shl_getInstance(), _this__u8e3s4.i2p());
  }
  function and(_this__u8e3s4, right) {
    return new KslExpressionBitScalar(_this__u8e3s4, right, KslBitOperator_And_getInstance(), _this__u8e3s4.i2p());
  }
  function KslBitOperator_And_getInstance() {
    KslBitOperator_initEntries();
    return KslBitOperator_And_instance;
  }
  function KslBitOperator_Or_getInstance() {
    KslBitOperator_initEntries();
    return KslBitOperator_Or_instance;
  }
  function KslBitOperator_Shl_getInstance() {
    KslBitOperator_initEntries();
    return KslBitOperator_Shl_instance;
  }
  function KslBitOperator_Shr_getInstance() {
    KslBitOperator_initEntries();
    return KslBitOperator_Shr_instance;
  }
  function KslExpressionCastVector(value, type) {
    KslExpressionCast.call(this, value, type);
  }
  KslExpressionCastVector.$metadata$ = classMeta('KslExpressionCastVector', [KslVectorExpression], undefined, undefined, undefined, KslExpressionCast.prototype);
  function KslExpressionCastScalar(value, type) {
    KslExpressionCast.call(this, value, type);
  }
  KslExpressionCastScalar.$metadata$ = classMeta('KslExpressionCastScalar', [KslScalarExpression], undefined, undefined, undefined, KslExpressionCast.prototype);
  function KslExpressionCast(value, type) {
    this.l3a_1 = value;
    this.m3a_1 = type;
  }
  KslExpressionCast.prototype.i2p = function () {
    return this.m3a_1;
  };
  KslExpressionCast.prototype.o3i = function () {
    return this.l3a_1.o3i();
  };
  KslExpressionCast.prototype.x39 = function (generator) {
    return generator.k3a(this);
  };
  KslExpressionCast.prototype.j37 = function () {
    return 'cast<' + this.i2p().j2p_1 + '>(' + this.l3a_1.j37() + ')';
  };
  KslExpressionCast.$metadata$ = classMeta('KslExpressionCast', [KslExpression]);
  function toInt2(_this__u8e3s4) {
    return new KslExpressionCastVector(_this__u8e3s4, KslTypeInt2_getInstance());
  }
  function toInt1(_this__u8e3s4) {
    return new KslExpressionCastScalar(_this__u8e3s4, KslTypeInt1_getInstance());
  }
  function toFloat2(_this__u8e3s4) {
    return new KslExpressionCastVector(_this__u8e3s4, KslTypeFloat2_getInstance());
  }
  function toFloat3(_this__u8e3s4) {
    return new KslExpressionCastVector(_this__u8e3s4, KslTypeFloat3_getInstance());
  }
  function toFloat1(_this__u8e3s4) {
    return new KslExpressionCastScalar(_this__u8e3s4, KslTypeFloat1_getInstance());
  }
  function toUint1(_this__u8e3s4) {
    return new KslExpressionCastScalar(_this__u8e3s4, KslTypeUint1_getInstance());
  }
  function toFloat1_0(_this__u8e3s4) {
    return new KslExpressionCastScalar(_this__u8e3s4, KslTypeFloat1_getInstance());
  }
  function KslExpressionCompareScalar(left, right, operator) {
    KslExpressionCompare.call(this, left, right, operator, KslTypeBool1_getInstance());
  }
  KslExpressionCompareScalar.$metadata$ = classMeta('KslExpressionCompareScalar', [KslScalarExpression], undefined, undefined, undefined, KslExpressionCompare.prototype);
  function ge(_this__u8e3s4, right) {
    return new KslExpressionCompareScalar(_this__u8e3s4, right, KslCompareOperator_GreaterEqual_getInstance());
  }
  function gt(_this__u8e3s4, right) {
    return new KslExpressionCompareScalar(_this__u8e3s4, right, KslCompareOperator_Greater_getInstance());
  }
  function lt(_this__u8e3s4, right) {
    return new KslExpressionCompareScalar(_this__u8e3s4, right, KslCompareOperator_Less_getInstance());
  }
  function KslExpressionCompare(left, right, operator, expressionType) {
    this.o3a_1 = left;
    this.p3a_1 = right;
    this.q3a_1 = operator;
    this.r3a_1 = expressionType;
  }
  KslExpressionCompare.prototype.i2p = function () {
    return this.r3a_1;
  };
  KslExpressionCompare.prototype.o3i = function () {
    return plus(this.o3a_1.o3i(), this.p3a_1.o3i());
  };
  KslExpressionCompare.prototype.x39 = function (generator) {
    return generator.n3a(this);
  };
  KslExpressionCompare.prototype.j37 = function () {
    return '(' + this.o3a_1.j37() + ' ' + this.q3a_1.u3a_1 + ' ' + this.p3a_1.j37() + ')';
  };
  KslExpressionCompare.$metadata$ = classMeta('KslExpressionCompare', [KslExpression]);
  var KslCompareOperator_Equal_instance;
  var KslCompareOperator_NotEqual_instance;
  var KslCompareOperator_Less_instance;
  var KslCompareOperator_LessEqual_instance;
  var KslCompareOperator_Greater_instance;
  var KslCompareOperator_GreaterEqual_instance;
  var KslCompareOperator_entriesInitialized;
  function KslCompareOperator_initEntries() {
    if (KslCompareOperator_entriesInitialized)
      return Unit_getInstance();
    KslCompareOperator_entriesInitialized = true;
    KslCompareOperator_Equal_instance = new KslCompareOperator('Equal', 0, '==');
    KslCompareOperator_NotEqual_instance = new KslCompareOperator('NotEqual', 1, '!=');
    KslCompareOperator_Less_instance = new KslCompareOperator('Less', 2, '<');
    KslCompareOperator_LessEqual_instance = new KslCompareOperator('LessEqual', 3, '<=');
    KslCompareOperator_Greater_instance = new KslCompareOperator('Greater', 4, '>');
    KslCompareOperator_GreaterEqual_instance = new KslCompareOperator('GreaterEqual', 5, '>=');
  }
  function KslCompareOperator(name, ordinal, opString) {
    Enum.call(this, name, ordinal);
    this.u3a_1 = opString;
  }
  KslCompareOperator.$metadata$ = classMeta('KslCompareOperator', undefined, undefined, undefined, undefined, Enum.prototype);
  function KslExpressionCompareVector(left, right, operator, expressionType) {
    KslExpressionCompare.call(this, left, right, operator, expressionType);
  }
  KslExpressionCompareVector.$metadata$ = classMeta('KslExpressionCompareVector', [KslVectorExpression], undefined, undefined, undefined, KslExpressionCompare.prototype);
  function gt_0(_this__u8e3s4, right) {
    return compareExpression(_this__u8e3s4, right, KslCompareOperator_Greater_getInstance(), _this__u8e3s4.i2p());
  }
  function lt_0(_this__u8e3s4, right) {
    return compareExpression(_this__u8e3s4, right, KslCompareOperator_Less_getInstance(), _this__u8e3s4.i2p());
  }
  function compareExpression(left, right, op, expressionType) {
    var tmp0_subject = expressionType;
    var tmp;
    if (isInterface(tmp0_subject, KslVector2)) {
      tmp = new KslExpressionCompareVector(left, right, op, KslTypeBool2_getInstance());
    } else {
      if (isInterface(tmp0_subject, KslVector3)) {
        tmp = new KslExpressionCompareVector(left, right, op, KslTypeBool3_getInstance());
      } else {
        if (isInterface(tmp0_subject, KslVector4)) {
          tmp = new KslExpressionCompareVector(left, right, op, KslTypeBool4_getInstance());
        } else {
          throw NotImplementedError_init_$Create$(null, 1, null);
        }
      }
    }
    return tmp;
  }
  function KslCompareOperator_Less_getInstance() {
    KslCompareOperator_initEntries();
    return KslCompareOperator_Less_instance;
  }
  function KslCompareOperator_Greater_getInstance() {
    KslCompareOperator_initEntries();
    return KslCompareOperator_Greater_instance;
  }
  function KslCompareOperator_GreaterEqual_getInstance() {
    KslCompareOperator_initEntries();
    return KslCompareOperator_GreaterEqual_instance;
  }
  function KslBoolVectorExpr(boolVec, op) {
    this.v3h_1 = boolVec;
    this.w3h_1 = op;
    this.x3h_1 = KslTypeBool1_getInstance();
  }
  KslBoolVectorExpr.prototype.i2p = function () {
    return this.x3h_1;
  };
  KslBoolVectorExpr.prototype.o3i = function () {
    return this.v3h_1.o3i();
  };
  KslBoolVectorExpr.prototype.x39 = function (generator) {
    return generator.x3g(this);
  };
  KslBoolVectorExpr.prototype.j37 = function () {
    return this.w3h_1.u3h_1 + '(' + this.v3h_1.j37() + ')';
  };
  KslBoolVectorExpr.$metadata$ = classMeta('KslBoolVectorExpr', [KslScalarExpression]);
  var KslBoolVecOperator_Any_instance;
  var KslBoolVecOperator_All_instance;
  var KslBoolVecOperator_entriesInitialized;
  function KslBoolVecOperator_initEntries() {
    if (KslBoolVecOperator_entriesInitialized)
      return Unit_getInstance();
    KslBoolVecOperator_entriesInitialized = true;
    KslBoolVecOperator_Any_instance = new KslBoolVecOperator('Any', 0, 'any');
    KslBoolVecOperator_All_instance = new KslBoolVecOperator('All', 1, 'all');
  }
  function KslBoolVecOperator(name, ordinal, opString) {
    Enum.call(this, name, ordinal);
    this.u3h_1 = opString;
  }
  KslBoolVecOperator.$metadata$ = classMeta('KslBoolVecOperator', undefined, undefined, undefined, undefined, Enum.prototype);
  function KslBoolScalarExpr(left, right, op) {
    this.y3h_1 = left;
    this.z3h_1 = right;
    this.a3i_1 = op;
    this.b3i_1 = KslTypeBool1_getInstance();
  }
  KslBoolScalarExpr.prototype.i2p = function () {
    return this.b3i_1;
  };
  KslBoolScalarExpr.prototype.o3i = function () {
    return plus(this.y3h_1.o3i(), this.z3h_1.o3i());
  };
  KslBoolScalarExpr.prototype.x39 = function (generator) {
    return generator.y3g(this);
  };
  KslBoolScalarExpr.prototype.j37 = function () {
    return '(' + this.y3h_1.j37() + ' ' + this.a3i_1.e3i_1 + ' ' + this.z3h_1.j37() + ')';
  };
  KslBoolScalarExpr.$metadata$ = classMeta('KslBoolScalarExpr', [KslScalarExpression]);
  function or_0(_this__u8e3s4, right) {
    return new KslBoolScalarExpr(_this__u8e3s4, right, KslBoolScalarOperator_Or_getInstance());
  }
  var KslBoolScalarOperator_And_instance;
  var KslBoolScalarOperator_Or_instance;
  var KslBoolScalarOperator_entriesInitialized;
  function KslBoolScalarOperator_initEntries() {
    if (KslBoolScalarOperator_entriesInitialized)
      return Unit_getInstance();
    KslBoolScalarOperator_entriesInitialized = true;
    KslBoolScalarOperator_And_instance = new KslBoolScalarOperator('And', 0, '&&');
    KslBoolScalarOperator_Or_instance = new KslBoolScalarOperator('Or', 1, '||');
  }
  function KslBoolScalarOperator(name, ordinal, opString) {
    Enum.call(this, name, ordinal);
    this.e3i_1 = opString;
  }
  KslBoolScalarOperator.$metadata$ = classMeta('KslBoolScalarOperator', undefined, undefined, undefined, undefined, Enum.prototype);
  function KslBoolVecOperator_Any_getInstance() {
    KslBoolVecOperator_initEntries();
    return KslBoolVecOperator_Any_instance;
  }
  function KslBoolScalarOperator_Or_getInstance() {
    KslBoolScalarOperator_initEntries();
    return KslBoolScalarOperator_Or_instance;
  }
  function KslExpressionMathVector(left, right, operator, expressionType) {
    KslExpressionMath.call(this, left, right, operator, expressionType);
  }
  KslExpressionMathVector.$metadata$ = classMeta('KslExpressionMathVector', [KslVectorExpression], undefined, undefined, undefined, KslExpressionMath.prototype);
  function times(_this__u8e3s4, right) {
    return new KslExpressionMathVector(_this__u8e3s4, right, KslMathOperator_Times_getInstance(), right.i2p());
  }
  function minus(_this__u8e3s4, right) {
    return new KslExpressionMathVector(_this__u8e3s4, right, KslMathOperator_Minus_getInstance(), _this__u8e3s4.i2p());
  }
  function times_0(_this__u8e3s4, right) {
    return new KslExpressionMathVector(_this__u8e3s4, right, KslMathOperator_Times_getInstance(), _this__u8e3s4.i2p());
  }
  function KslExpressionMathScalar(left, right, operator, expressionType) {
    KslExpressionMath.call(this, left, right, operator, expressionType);
  }
  KslExpressionMathScalar.$metadata$ = classMeta('KslExpressionMathScalar', [KslScalarExpression], undefined, undefined, undefined, KslExpressionMath.prototype);
  function div(_this__u8e3s4, right) {
    return new KslExpressionMathScalar(_this__u8e3s4, right, KslMathOperator_Divide_getInstance(), _this__u8e3s4.i2p());
  }
  function div_0(_this__u8e3s4, right) {
    return new KslExpressionMathVector(_this__u8e3s4, right, KslMathOperator_Divide_getInstance(), _this__u8e3s4.i2p());
  }
  function times_1(_this__u8e3s4, right) {
    return new KslExpressionMathVector(_this__u8e3s4, right, KslMathOperator_Times_getInstance(), _this__u8e3s4.i2p());
  }
  function times_2(_this__u8e3s4, right) {
    return new KslExpressionMathScalar(_this__u8e3s4, right, KslMathOperator_Times_getInstance(), _this__u8e3s4.i2p());
  }
  function div_1(_this__u8e3s4, right) {
    return new KslExpressionMathVector(_this__u8e3s4, right, KslMathOperator_Divide_getInstance(), _this__u8e3s4.i2p());
  }
  function plus_0(_this__u8e3s4, right) {
    return new KslExpressionMathVector(_this__u8e3s4, right, KslMathOperator_Plus_getInstance(), _this__u8e3s4.i2p());
  }
  var KslMathOperator_Plus_instance;
  var KslMathOperator_Minus_instance;
  var KslMathOperator_Times_instance;
  var KslMathOperator_Divide_instance;
  var KslMathOperator_Remainder_instance;
  var KslMathOperator_entriesInitialized;
  function KslMathOperator_initEntries() {
    if (KslMathOperator_entriesInitialized)
      return Unit_getInstance();
    KslMathOperator_entriesInitialized = true;
    KslMathOperator_Plus_instance = new KslMathOperator('Plus', 0, _Char___init__impl__6a9atx(43));
    KslMathOperator_Minus_instance = new KslMathOperator('Minus', 1, _Char___init__impl__6a9atx(45));
    KslMathOperator_Times_instance = new KslMathOperator('Times', 2, _Char___init__impl__6a9atx(42));
    KslMathOperator_Divide_instance = new KslMathOperator('Divide', 3, _Char___init__impl__6a9atx(47));
    KslMathOperator_Remainder_instance = new KslMathOperator('Remainder', 4, _Char___init__impl__6a9atx(37));
  }
  function KslMathOperator(name, ordinal, opChar) {
    Enum.call(this, name, ordinal);
    this.n3d_1 = opChar;
  }
  KslMathOperator.$metadata$ = classMeta('KslMathOperator', undefined, undefined, undefined, undefined, Enum.prototype);
  function KslExpressionMath(left, right, operator, expressionType) {
    this.h3h_1 = left;
    this.i3h_1 = right;
    this.j3h_1 = operator;
    this.k3h_1 = expressionType;
  }
  KslExpressionMath.prototype.i2p = function () {
    return this.k3h_1;
  };
  KslExpressionMath.prototype.o3i = function () {
    return plus(this.h3h_1.o3i(), this.i3h_1.o3i());
  };
  KslExpressionMath.prototype.x39 = function (generator) {
    return generator.v3g(this);
  };
  KslExpressionMath.prototype.j37 = function () {
    return '(' + this.h3h_1.j37() + ' ' + new Char(this.j3h_1.n3d_1) + ' ' + this.i3h_1.j37() + ')';
  };
  KslExpressionMath.$metadata$ = classMeta('KslExpressionMath', [KslExpression]);
  function minus_0(_this__u8e3s4, right) {
    return new KslExpressionMathVector(_this__u8e3s4, right, KslMathOperator_Minus_getInstance(), _this__u8e3s4.i2p());
  }
  function plus_1(_this__u8e3s4, right) {
    return new KslExpressionMathVector(_this__u8e3s4, right, KslMathOperator_Plus_getInstance(), _this__u8e3s4.i2p());
  }
  function times_3(_this__u8e3s4, right) {
    return new KslExpressionMathVector(_this__u8e3s4, right, KslMathOperator_Times_getInstance(), right.i2p());
  }
  function plus_2(_this__u8e3s4, right) {
    return new KslExpressionMathScalar(_this__u8e3s4, right, KslMathOperator_Plus_getInstance(), _this__u8e3s4.i2p());
  }
  function minus_1(_this__u8e3s4, right) {
    return new KslExpressionMathScalar(_this__u8e3s4, right, KslMathOperator_Minus_getInstance(), _this__u8e3s4.i2p());
  }
  function KslMathOperator_Plus_getInstance() {
    KslMathOperator_initEntries();
    return KslMathOperator_Plus_instance;
  }
  function KslMathOperator_Minus_getInstance() {
    KslMathOperator_initEntries();
    return KslMathOperator_Minus_instance;
  }
  function KslMathOperator_Times_getInstance() {
    KslMathOperator_initEntries();
    return KslMathOperator_Times_instance;
  }
  function KslMathOperator_Divide_getInstance() {
    KslMathOperator_initEntries();
    return KslMathOperator_Divide_instance;
  }
  function paramScalar($this, name, type) {
    var tmp$ret$0;
    {
      var tmp0_also = new KslVarScalar(name, type, false);
      {
      }
      {
        var tmp0_this = $this;
        {
          var tmp0_plusAssign = tmp0_this.h38_1;
          tmp0_plusAssign.b(tmp0_also);
        }
        var tmp1_this = $this.j38_1;
        {
          var tmp1_plusAssign = tmp1_this.w3k();
          tmp1_plusAssign.b(tmp0_also);
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  }
  function paramVector($this, name, value) {
    var tmp$ret$0;
    {
      var tmp0_also = new KslVarVector(name, value, false);
      {
      }
      {
        var tmp0_this = $this;
        {
          var tmp0_plusAssign = tmp0_this.h38_1;
          tmp0_plusAssign.b(tmp0_also);
        }
        var tmp1_this = $this.j38_1;
        {
          var tmp1_plusAssign = tmp1_this.w3k();
          tmp1_plusAssign.b(tmp0_also);
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  }
  function FunctionRoot($outer, function_0) {
    this.d3l_1 = $outer;
    KslOp.call(this, 'body', $outer.j38_1);
    this.c3l_1 = function_0;
  }
  FunctionRoot.$metadata$ = classMeta('FunctionRoot', undefined, undefined, undefined, undefined, KslOp.prototype);
  function KslFunction(name, returnType, parentStage) {
    this.e38_1 = name;
    this.f38_1 = returnType;
    this.g38_1 = parentStage;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.h38_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = LinkedHashSet_init_$Create$();
    }
    tmp_0.i38_1 = tmp$ret$1;
    this.j38_1 = new KslScopeBuilder(null, this.g38_1.s2o_1, this.g38_1);
    this.k38_1 = new FunctionRoot(this, this);
    this.l38_1 = new KslHierarchy(this.j38_1);
    this.m38_1 = new KslScopeBuilder(this.k38_1, this.j38_1, this.g38_1);
    this.j38_1.c3j(this.e38_1);
    var tmp0_this = this.j38_1;
    {
      var tmp0_plusAssign = tmp0_this.m37();
      var tmp1_plusAssign = this.k38_1;
      tmp0_plusAssign.b(tmp1_plusAssign);
    }
    var tmp1_this = this.k38_1;
    {
      var tmp2_plusAssign = tmp1_this.f37();
      var tmp3_plusAssign = this.m38_1;
      tmp2_plusAssign.b(tmp3_plusAssign);
    }
  }
  KslFunction.prototype.il = function () {
    return this.e38_1;
  };
  KslFunction.prototype.p38 = function () {
    return this.f38_1;
  };
  KslFunction.prototype.q38 = function () {
    return this.h38_1;
  };
  KslFunction.prototype.r38 = function () {
    return this.i38_1;
  };
  KslFunction.prototype.g34 = function () {
    return this.m38_1;
  };
  KslFunction.prototype.o38 = function (block) {
    var tmp$ret$0;
    {
      var tmp0_apply = this.m38_1;
      {
      }
      {
        this.s38(tmp0_apply, block(tmp0_apply));
      }
      tmp$ret$0 = tmp0_apply;
    }
  };
  KslFunction.prototype.e3l = function (name) {
    var tmp0_elvis_lhs = name;
    return paramScalar(this, tmp0_elvis_lhs == null ? this.g38_1.p2o_1.l31('paramF1') : tmp0_elvis_lhs, KslTypeFloat1_getInstance());
  };
  KslFunction.prototype.f3l = function (name) {
    var tmp0_elvis_lhs = name;
    return paramVector(this, tmp0_elvis_lhs == null ? this.g38_1.p2o_1.l31('paramF2') : tmp0_elvis_lhs, KslTypeFloat2_getInstance());
  };
  KslFunction.prototype.n38 = function (name) {
    var tmp0_elvis_lhs = name;
    return paramVector(this, tmp0_elvis_lhs == null ? this.g38_1.p2o_1.l31('paramF3') : tmp0_elvis_lhs, KslTypeFloat3_getInstance());
  };
  KslFunction.prototype.g3l = function (name) {
    var tmp0_elvis_lhs = name;
    return paramVector(this, tmp0_elvis_lhs == null ? this.g38_1.p2o_1.l31('paramF4') : tmp0_elvis_lhs, KslTypeFloat4_getInstance());
  };
  KslFunction.prototype.h3l = function (name) {
    var tmp0_elvis_lhs = name;
    return paramScalar(this, tmp0_elvis_lhs == null ? this.g38_1.p2o_1.l31('paramI1') : tmp0_elvis_lhs, KslTypeInt1_getInstance());
  };
  KslFunction.prototype.b2x = function () {
    var tmp0_this = this.l38_1.d2x_1;
    {
      var tmp0_plusAssign = tmp0_this.b2p_1;
      var tmp1_plusAssign = this.g38_1.s2o_1.w3k();
      addAll(tmp0_plusAssign, tmp1_plusAssign);
    }
    (new KslProcessor()).j3l(this.l38_1);
  };
  KslFunction.prototype.s38 = function (_this__u8e3s4, returnValue) {
    var tmp0_this = _this__u8e3s4;
    {
      var tmp0_plusAssign = tmp0_this.m37();
      var tmp1_plusAssign = new KslReturn(_this__u8e3s4, returnValue);
      tmp0_plusAssign.b(tmp1_plusAssign);
    }
  };
  KslFunction.$metadata$ = classMeta('KslFunction');
  function KslInvokeFunctionScalar(function_0, parentScope, returnType, args) {
    KslInvokeFunction.call(this, function_0, parentScope, returnType, args.slice());
  }
  KslInvokeFunctionScalar.$metadata$ = classMeta('KslInvokeFunctionScalar', [KslScalarExpression], undefined, undefined, undefined, KslInvokeFunction.prototype);
  function KslInvokeFunctionVector(function_0, parentScope, returnType, args) {
    KslInvokeFunction.call(this, function_0, parentScope, returnType, args.slice());
  }
  KslInvokeFunctionVector.$metadata$ = classMeta('KslInvokeFunctionVector', [KslVectorExpression], undefined, undefined, undefined, KslInvokeFunction.prototype);
  function KslFunctionFloat1(name, parentStage) {
    KslFunction.call(this, name, KslTypeFloat1_getInstance(), parentStage);
  }
  KslFunctionFloat1.$metadata$ = classMeta('KslFunctionFloat1', undefined, undefined, undefined, undefined, KslFunction.prototype);
  function functionFloat1(_this__u8e3s4, name, block) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_apply = new KslFunctionFloat1(name, _this__u8e3s4);
        {
        }
        block(tmp0_apply);
        tmp$ret$0 = tmp0_apply;
      }
      var tmp1_also = tmp$ret$0;
      {
      }
      {
        _this__u8e3s4.l3l(name, tmp1_also);
      }
      tmp$ret$1 = tmp1_also;
    }
    return tmp$ret$1;
  }
  function KslFunctionFloat2(name, parentStage) {
    KslFunction.call(this, name, KslTypeFloat2_getInstance(), parentStage);
  }
  KslFunctionFloat2.$metadata$ = classMeta('KslFunctionFloat2', undefined, undefined, undefined, undefined, KslFunction.prototype);
  function functionFloat2(_this__u8e3s4, name, block) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_apply = new KslFunctionFloat2(name, _this__u8e3s4);
        {
        }
        block(tmp0_apply);
        tmp$ret$0 = tmp0_apply;
      }
      var tmp1_also = tmp$ret$0;
      {
      }
      {
        _this__u8e3s4.l3l(name, tmp1_also);
      }
      tmp$ret$1 = tmp1_also;
    }
    return tmp$ret$1;
  }
  function KslInvokeFunction$lambda() {
    return function (it) {
      return it.f3a();
    };
  }
  function KslInvokeFunction$lambda_0() {
    return function (it) {
      return it.j37();
    };
  }
  function KslInvokeFunction$toPseudoCode$lambda() {
    return function (it) {
      return it.j37();
    };
  }
  function KslInvokeFunction(function_0, parentScope, returnType, args) {
    this.r3f_1 = function_0;
    this.s3f_1 = listOf(args.slice());
    if (!(this.r3f_1.h38_1.m() === args.length)) {
      var tmp = 'Wrong number of parameters for invoking function ' + this.r3f_1.e38_1 + '. ';
      var tmp_0 = this.r3f_1.h38_1.m();
      var tmp_1 = joinToString$default(this.r3f_1.h38_1, null, null, null, 0, null, KslInvokeFunction$lambda(), 31, null);
      var tmp_2 = args.length;
      throw IllegalArgumentException_init_$Create$(tmp + ('Expected: ' + tmp_0 + ' [' + tmp_1 + '], provided: ' + tmp_2 + ' [' + joinToString$default_0(args, null, null, null, 0, null, KslInvokeFunction$lambda_0(), 31, null) + ']'));
    }
    {
      var tmp0_forEachIndexed = this.r3f_1.h38_1;
      var index = 0;
      var tmp0_iterator = tmp0_forEachIndexed.h();
      while (tmp0_iterator.n()) {
        var item = tmp0_iterator.o();
        {
          var tmp1 = index;
          index = tmp1 + 1 | 0;
          var tmp1__anonymous__uwfjfc = checkIndexOverflow(tmp1);
          if (!equals(args[tmp1__anonymous__uwfjfc].i2p(), item.i2p())) {
            throw IllegalArgumentException_init_$Create$('Wrong type of parameter ' + (tmp1__anonymous__uwfjfc + 1 | 0) + ' (' + item.f3a() + ') on invoking function ' + this.r3f_1.e38_1 + '. ' + ('Expected: ' + item.i2p().j2p_1 + ', provided: ' + args[tmp1__anonymous__uwfjfc].i2p().j2p_1 + ' (' + args[tmp1__anonymous__uwfjfc].j37() + ')'));
          }
        }
      }
    }
    var tmp0_safe_receiver = parentScope.m3l();
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        var tmp0_this = tmp0_safe_receiver;
        var tmp0_plusAssign = tmp0_this.i38_1;
        var tmp1_plusAssign = this.r3f_1;
        tmp0_plusAssign.b(tmp1_plusAssign);
        tmp$ret$0 = Unit_getInstance();
      }
    }
    this.t3f_1 = returnType;
  }
  KslInvokeFunction.prototype.k3l = function () {
    return this.r3f_1;
  };
  KslInvokeFunction.prototype.i2p = function () {
    return this.t3f_1;
  };
  KslInvokeFunction.prototype.o3i = function () {
    var tmp$ret$2;
    {
      var tmp0_flatMap = this.s3f_1;
      var tmp$ret$1;
      {
        var tmp0_flatMapTo = ArrayList_init_$Create$_0();
        var tmp0_iterator = tmp0_flatMap.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          var tmp$ret$0;
          {
            tmp$ret$0 = element.o3i();
          }
          var list = tmp$ret$0;
          addAll(tmp0_flatMapTo, list);
        }
        tmp$ret$1 = tmp0_flatMapTo;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return toSet(tmp$ret$2);
  };
  KslInvokeFunction.prototype.j37 = function () {
    return this.r3f_1.e38_1 + '(' + joinToString$default(this.s3f_1, null, null, null, 0, null, KslInvokeFunction$toPseudoCode$lambda(), 31, null) + ')';
  };
  KslInvokeFunction.prototype.x39 = function (generator) {
    return generator.q3f(this);
  };
  KslInvokeFunction.$metadata$ = classMeta('KslInvokeFunction', [KslExpression]);
  function KslIf(condition, parentScope) {
    KslStatement.call(this, 'if', parentScope);
    this.v3d_1 = condition;
    this.w3d_1 = new KslScopeBuilder(this, parentScope, parentScope.l2z_1);
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.x3d_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      var tmp0_apply = new KslScopeBuilder(this, parentScope, parentScope.l2z_1);
      {
      }
      {
        tmp0_apply.c3j('else');
      }
      tmp$ret$1 = tmp0_apply;
    }
    tmp_0.y3d_1 = tmp$ret$1;
    this.z3d_1 = parentScope;
    this.h3i(this.v3d_1);
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.f37();
      var tmp1_plusAssign = this.w3d_1;
      tmp0_plusAssign.b(tmp1_plusAssign);
    }
    var tmp1_this = this;
    {
      var tmp2_plusAssign = tmp1_this.f37();
      var tmp3_plusAssign = this.y3d_1;
      tmp2_plusAssign.b(tmp3_plusAssign);
    }
  }
  KslIf.prototype.g34 = function () {
    return this.w3d_1;
  };
  KslIf.prototype.n3l = function (block) {
    var tmp$ret$0;
    {
      var tmp0_apply = this.y3d_1;
      {
      }
      block(tmp0_apply);
      tmp$ret$0 = tmp0_apply;
    }
  };
  KslIf.prototype.j37 = function () {
    var str = new StringBuilder('if (' + this.v3d_1.j37() + ') // ' + this.k37() + '\n');
    str.ga(this.w3d_1.j37());
    {
      var tmp0_forEach = this.x3d_1;
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          str.ga(' else if (' + element.v_1.j37() + ') ' + element.w_1.j37());
        }
      }
    }
    if (this.y3d_1.a3e()) {
      str.ga(' else ' + this.y3d_1.j37());
    }
    return str.toString();
  };
  KslIf.$metadata$ = classMeta('KslIf', undefined, undefined, undefined, undefined, KslStatement.prototype);
  function KslInterStageVector(input, output, outputStage, interpolation) {
    KslInterStageVar.call(this, input, output, outputStage, interpolation);
  }
  KslInterStageVector.prototype.n37 = function () {
    var tmp = KslInterStageVar.prototype.n37.call(this);
    return tmp instanceof KslVarVector ? tmp : THROW_CCE();
  };
  KslInterStageVector.prototype.q36 = function () {
    var tmp = KslInterStageVar.prototype.q36.call(this);
    return tmp instanceof KslVarVector ? tmp : THROW_CCE();
  };
  KslInterStageVector.$metadata$ = classMeta('KslInterStageVector', undefined, undefined, undefined, undefined, KslInterStageVar.prototype);
  function KslInterStageVar(input, output, outputStage, interpolation) {
    this.n3b_1 = input;
    this.o3b_1 = output;
    this.p3b_1 = outputStage;
    this.q3b_1 = interpolation;
  }
  KslInterStageVar.prototype.n37 = function () {
    return this.n3b_1;
  };
  KslInterStageVar.prototype.q36 = function () {
    return this.o3b_1;
  };
  KslInterStageVar.prototype.o3l = function () {
    return this.q3b_1;
  };
  KslInterStageVar.$metadata$ = classMeta('KslInterStageVar');
  var KslInterStageInterpolation_Smooth_instance;
  var KslInterStageInterpolation_Flat_instance;
  var KslInterStageInterpolation_NoPerspective_instance;
  var KslInterStageInterpolation_entriesInitialized;
  function KslInterStageInterpolation_initEntries() {
    if (KslInterStageInterpolation_entriesInitialized)
      return Unit_getInstance();
    KslInterStageInterpolation_entriesInitialized = true;
    KslInterStageInterpolation_Smooth_instance = new KslInterStageInterpolation('Smooth', 0);
    KslInterStageInterpolation_Flat_instance = new KslInterStageInterpolation('Flat', 1);
    KslInterStageInterpolation_NoPerspective_instance = new KslInterStageInterpolation('NoPerspective', 2);
  }
  function KslInterStageInterpolation(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  KslInterStageInterpolation.$metadata$ = classMeta('KslInterStageInterpolation', undefined, undefined, undefined, undefined, Enum.prototype);
  function KslInterStageInterpolation_Smooth_getInstance() {
    KslInterStageInterpolation_initEntries();
    return KslInterStageInterpolation_Smooth_instance;
  }
  function KslInterStageInterpolation_Flat_getInstance() {
    KslInterStageInterpolation_initEntries();
    return KslInterStageInterpolation_Flat_instance;
  }
  function KslLoop() {
  }
  KslLoop.$metadata$ = interfaceMeta('KslLoop');
  function KslLoopBreak() {
  }
  KslLoopBreak.$metadata$ = classMeta('KslLoopBreak', undefined, undefined, undefined, undefined, KslStatement.prototype);
  function KslLoopContinue() {
  }
  KslLoopContinue.$metadata$ = classMeta('KslLoopContinue', undefined, undefined, undefined, undefined, KslStatement.prototype);
  function KslLoopDoWhile() {
  }
  KslLoopDoWhile.$metadata$ = classMeta('KslLoopDoWhile', [KslLoop], undefined, undefined, undefined, KslStatement.prototype);
  function KslLoopFor(loopVar, whileExpression, incExpr, parentScope) {
    KslStatement.call(this, 'for', parentScope);
    this.i3e_1 = loopVar;
    this.j3e_1 = whileExpression;
    this.k3e_1 = incExpr;
    this.l3e_1 = new KslScopeBuilder(this, parentScope, parentScope.l2z_1);
    this.h3i(this.j3e_1);
    this.h3i(this.k3e_1);
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.f37();
      var tmp1_plusAssign = this.l3e_1;
      tmp0_plusAssign.b(tmp1_plusAssign);
    }
  }
  KslLoopFor.prototype.g34 = function () {
    return this.l3e_1;
  };
  KslLoopFor.prototype.j37 = function () {
    var str = new StringBuilder('for (' + this.i3e_1.j37() + '; ' + this.j3e_1.j37() + '; ' + this.i3e_1.f3a() + ' += ' + this.k3e_1.j37() + ') // ' + this.k37() + '\n');
    str.ga(this.l3e_1.j37());
    return str.toString();
  };
  KslLoopFor.$metadata$ = classMeta('KslLoopFor', [KslLoop], undefined, undefined, undefined, KslStatement.prototype);
  function KslLoopWhile() {
  }
  KslLoopWhile.$metadata$ = classMeta('KslLoopWhile', [KslLoop], undefined, undefined, undefined, KslStatement.prototype);
  function PortFloat4(name, parentScope) {
    KslPort.call(this, name, parentScope);
    var tmp = this;
    tmp.y3l_1 = this.u36('input', null, 2, null);
    this.z3l_1 = this.f34('output');
    var tmp$ret$0;
    {
      var tmp0_apply = this.g34();
      {
      }
      {
        tmp0_apply.h30(this.z3l_1, this.y3l_1);
      }
      tmp$ret$0 = tmp0_apply;
    }
  }
  PortFloat4.prototype.n37 = function () {
    return this.y3l_1;
  };
  PortFloat4.prototype.q36 = function () {
    return this.z3l_1;
  };
  PortFloat4.$metadata$ = classMeta('PortFloat4', [KslVectorExpression], undefined, undefined, undefined, KslPort.prototype);
  function float4Port(_this__u8e3s4, name, input) {
    var tmp$ret$1;
    {
      var tmp0_also = new PortFloat4(name, _this__u8e3s4);
      {
      }
      {
        var tmp0_safe_receiver = input;
        if (tmp0_safe_receiver == null)
          null;
        else {
          var tmp$ret$0;
          {
            {
            }
            tmp$ret$0 = tmp0_also.y3l_1.w3i(tmp0_safe_receiver);
          }
        }
        var tmp1_this = _this__u8e3s4;
        {
          var tmp0_plusAssign = tmp1_this.m37();
          tmp0_plusAssign.b(tmp0_also);
        }
      }
      tmp$ret$1 = tmp0_also;
    }
    return tmp$ret$1;
  }
  function KslPort(name, parentScope) {
    KslBlock.call(this, name, parentScope);
  }
  KslPort.prototype.i2p = function () {
    return this.q36().i2p();
  };
  KslPort.prototype.o3i = function () {
    return this.q36().o3i();
  };
  KslPort.prototype.x39 = function (generator) {
    return this.q36().x39(generator);
  };
  KslPort.prototype.j37 = function () {
    return this.q36().j37();
  };
  KslPort.$metadata$ = classMeta('KslPort', [KslExpression], undefined, undefined, undefined, KslBlock.prototype);
  function registerSampler($this, uniform) {
    {
      var tmp0_set = $this.r2n_1;
      var tmp1_set = uniform.il();
      tmp0_set.a(tmp1_set, uniform);
    }
    {
      var tmp2_forEach = $this.v2n_1;
      var tmp0_iterator = tmp2_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          var tmp0_this = element.s2o_1;
          {
            var tmp0_plusAssign = tmp0_this.w3k();
            var tmp1_plusAssign = uniform.n2();
            tmp0_plusAssign.b(tmp1_plusAssign);
          }
        }
      }
    }
  }
  function registerInterStageVar($this, interStageVar) {
    {
      var tmp0_forEach = $this.v2n_1;
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          var tmp0_this = element;
          {
            var tmp0_plusAssign = tmp0_this.r2o_1;
            tmp0_plusAssign.b(interStageVar);
          }
        }
      }
    }
    var tmp0_this_0 = $this.t2n_1.j3m();
    {
      var tmp1_plusAssign = tmp0_this_0.w3k();
      var tmp2_plusAssign = interStageVar.n37();
      tmp1_plusAssign.b(tmp2_plusAssign);
    }
    var tmp1_this = $this.u2n_1.j3m();
    {
      var tmp3_plusAssign = tmp1_this.w3k();
      var tmp4_plusAssign = interStageVar.q36();
      tmp3_plusAssign.b(tmp4_plusAssign);
    }
  }
  function interStageVector($this, type, interpolation, name) {
    var input = new KslVarVector(name, type, true);
    var output = new KslVarVector(name, type, false);
    var tmp$ret$0;
    {
      var tmp0_also = new KslInterStageVector(input, output, KslShaderStageType_VertexShader_getInstance(), interpolation);
      {
      }
      {
        registerInterStageVar($this, tmp0_also);
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  }
  function KslProgram$prepareGenerate$lambda(this$0) {
    return function (u) {
      return this$0.t2n_1.k3m(u) ? true : this$0.u2n_1.k3m(u);
    };
  }
  function KslProgram$prepareGenerate$lambda_0() {
    return function (it) {
      return it.k2o_1.q();
    };
  }
  function KslProgram$prepareGenerate$lambda_1(this$0) {
    return function (u) {
      return this$0.t2n_1.k3m(u) ? true : this$0.u2n_1.k3m(u);
    };
  }
  function KslProgram(name) {
    this.l2n_1 = name;
    this.m2n_1 = false;
    this.n2n_1 = false;
    this.o2n_1 = 1;
    var tmp = this;
    tmp.p2n_1 = KslUniformBuffer_init_$Create$('CommonUniforms', this, false, 4, null);
    this.q2n_1 = mutableListOf([this.p2n_1]);
    var tmp_0 = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$();
    }
    tmp_0.r2n_1 = tmp$ret$0;
    var tmp_1 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = ArrayList_init_$Create$_0();
    }
    tmp_1.s2n_1 = tmp$ret$1;
    this.t2n_1 = new KslVertexStage(this);
    this.u2n_1 = new KslFragmentStage(this);
    this.v2n_1 = listOf([this.t2n_1, this.u2n_1]);
    var tmp_2 = this;
    var tmp$ret$2;
    {
      tmp$ret$2 = ArrayList_init_$Create$_0();
    }
    tmp_2.w2n_1 = tmp$ret$2;
  }
  KslProgram.prototype.l31 = function (prefix) {
    var tmp0_this = this;
    var tmp1 = tmp0_this.o2n_1;
    tmp0_this.o2n_1 = tmp1 + 1 | 0;
    return prefix + '_' + tmp1;
  };
  KslProgram.prototype.m31 = function () {
    return this.r2n_1;
  };
  KslProgram.prototype.n31 = function () {
    return this.t2n_1;
  };
  KslProgram.prototype.o31 = function () {
    return this.u2n_1;
  };
  KslProgram.prototype.j31 = function (block) {
    {
    }
    var tmp$ret$0;
    {
      var tmp0_apply = this.t2n_1;
      {
      }
      block(tmp0_apply);
      tmp$ret$0 = tmp0_apply;
    }
  };
  KslProgram.prototype.k31 = function (block) {
    {
    }
    var tmp$ret$0;
    {
      var tmp0_apply = this.u2n_1;
      {
      }
      block(tmp0_apply);
      tmp$ret$0 = tmp0_apply;
    }
  };
  KslProgram.prototype.l3m = function (name) {
    return this.p2n_1.l3m(name);
  };
  KslProgram.prototype.m3m = function (name) {
    return this.p2n_1.m3m(name);
  };
  KslProgram.prototype.p31 = function (name) {
    return this.p2n_1.p31(name);
  };
  KslProgram.prototype.n3m = function (name) {
    return this.p2n_1.n3m(name);
  };
  KslProgram.prototype.o3m = function (name) {
    return this.p2n_1.o3m(name);
  };
  KslProgram.prototype.q31 = function (name) {
    return this.p2n_1.q31(name);
  };
  KslProgram.prototype.r31 = function (name) {
    var tmp$ret$2;
    {
      var tmp0_elvis_lhs = this.r2n_1.b3(name);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            var tmp_0 = new KslVar(name, KslTypeColorSampler2d_getInstance(), false);
            tmp$ret$0 = KslUniform_init_$Create$(tmp_0, 0, 2, null);
          }
          var tmp0_also = tmp$ret$0;
          {
          }
          {
            registerSampler(this, tmp0_also);
          }
          tmp$ret$1 = tmp0_also;
        }
        tmp = tmp$ret$1;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var uniform = tmp;
      if (!(uniform instanceof KslUniform)) {
        throw IllegalStateException_init_$Create$('Existing uniform with name "' + name + '" has not the expected type');
      }
      tmp$ret$2 = uniform;
    }
    return tmp$ret$2;
  };
  KslProgram.prototype.p3m = function (name) {
    var tmp$ret$2;
    {
      var tmp0_elvis_lhs = this.r2n_1.b3(name);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            var tmp_0 = new KslVar(name, KslTypeColorSampler3d_getInstance(), false);
            tmp$ret$0 = KslUniform_init_$Create$(tmp_0, 0, 2, null);
          }
          var tmp0_also = tmp$ret$0;
          {
          }
          {
            registerSampler(this, tmp0_also);
          }
          tmp$ret$1 = tmp0_also;
        }
        tmp = tmp$ret$1;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var uniform = tmp;
      if (!(uniform instanceof KslUniform)) {
        throw IllegalStateException_init_$Create$('Existing uniform with name "' + name + '" has not the expected type');
      }
      tmp$ret$2 = uniform;
    }
    return tmp$ret$2;
  };
  KslProgram.prototype.s31 = function (name, interpolation) {
    var tmp = KslTypeFloat2_getInstance();
    var tmp0_elvis_lhs = name;
    return interStageVector(this, tmp, interpolation, tmp0_elvis_lhs == null ? this.l31('interStageF2') : tmp0_elvis_lhs);
  };
  KslProgram.prototype.t31 = function (name, interpolation, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      name = null;
    if (!(($mask0 & 2) === 0))
      interpolation = KslInterStageInterpolation_Smooth_getInstance();
    return this.s31(name, interpolation);
  };
  KslProgram.prototype.u31 = function (name, interpolation) {
    var tmp = KslTypeFloat4_getInstance();
    var tmp0_elvis_lhs = name;
    return interStageVector(this, tmp, interpolation, tmp0_elvis_lhs == null ? this.l31('interStageF4') : tmp0_elvis_lhs);
  };
  KslProgram.prototype.v31 = function (name, interpolation, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      name = null;
    if (!(($mask0 & 2) === 0))
      interpolation = KslInterStageInterpolation_Smooth_getInstance();
    return this.u31(name, interpolation);
  };
  KslProgram.prototype.b2x = function () {
    if (!this.n2n_1) {
      this.n2n_1 = true;
      {
        var tmp0_forEach = this.v2n_1;
        var tmp0_iterator = tmp0_forEach.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          {
            element.b2x();
          }
        }
      }
      {
        var tmp$ret$2;
        {
          var tmp1_filter = this.q2n_1;
          var tmp$ret$1;
          {
            var tmp0_filterTo = ArrayList_init_$Create$_0();
            var tmp0_iterator_0 = tmp1_filter.h();
            while (tmp0_iterator_0.n()) {
              var element_0 = tmp0_iterator_0.o();
              var tmp$ret$0;
              {
                tmp$ret$0 = !element_0.j2o_1;
              }
              if (tmp$ret$0) {
                tmp0_filterTo.b(element_0);
              }
            }
            tmp$ret$1 = tmp0_filterTo;
          }
          tmp$ret$2 = tmp$ret$1;
        }
        var tmp2_forEach = tmp$ret$2;
        var tmp0_iterator_1 = tmp2_forEach.h();
        while (tmp0_iterator_1.n()) {
          var element_1 = tmp0_iterator_1.o();
          {
            var tmp = element_1.k2o_1.d3();
            retainAll(tmp, KslProgram$prepareGenerate$lambda(this));
          }
        }
      }
      removeAll(this.q2n_1, KslProgram$prepareGenerate$lambda_0());
      var tmp_0 = this.r2n_1.d3();
      retainAll(tmp_0, KslProgram$prepareGenerate$lambda_1(this));
    }
  };
  KslProgram.$metadata$ = classMeta('KslProgram');
  function KslReturn(parentScope, returnValue) {
    KslStatement.call(this, 'return', parentScope);
    this.o3f_1 = returnValue;
    {
      var tmp0_check = parentScope.q3m();
      {
      }
      if (!tmp0_check) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'return can only be used within a function';
        }
        var message = tmp$ret$0;
        throw IllegalStateException_init_$Create$(toString(message));
      }
    }
    this.h3i(this.o3f_1);
  }
  KslReturn.prototype.j37 = function () {
    return 'return ' + this.o3f_1.j37() + ' // ' + this.k37();
  };
  KslReturn.$metadata$ = classMeta('KslReturn', undefined, undefined, undefined, undefined, KslStatement.prototype);
  function KslSampleColorTexture(sampler, coord, lod) {
    this.w3a_1 = sampler;
    this.x3a_1 = coord;
    this.y3a_1 = lod;
    this.z3a_1 = KslTypeFloat4_getInstance();
  }
  KslSampleColorTexture.prototype.i2p = function () {
    return this.z3a_1;
  };
  KslSampleColorTexture.prototype.o3i = function () {
    var deps = plus(this.w3a_1.o3i(), this.x3a_1.o3i());
    var tmp0_safe_receiver = this.y3a_1;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          tmp$ret$0 = plus(deps, tmp0_safe_receiver.o3i());
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    var tmp1_elvis_lhs = tmp;
    return tmp1_elvis_lhs == null ? deps : tmp1_elvis_lhs;
  };
  KslSampleColorTexture.prototype.x39 = function (generator) {
    return generator.v3a(this);
  };
  KslSampleColorTexture.prototype.j37 = function () {
    var tmp = this.w3a_1.j37();
    var tmp_0 = this.x3a_1.j37();
    var tmp0_safe_receiver = this.y3a_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.j37();
    return tmp + '.sample(' + tmp_0 + ', lod=' + (tmp1_elvis_lhs == null ? '0' : tmp1_elvis_lhs) + ')';
  };
  KslSampleColorTexture.$metadata$ = classMeta('KslSampleColorTexture', [KslVectorExpression]);
  function KslScopeBuilder$getBlocks$lambda() {
    return function (it) {
      return it instanceof KslScopeBuilder;
    };
  }
  function KslScopeBuilder(parentOp, parentScope, parentStage) {
    KslScope.call(this, parentOp);
    this.k2z_1 = parentScope;
    this.l2z_1 = parentStage;
  }
  KslScopeBuilder.prototype.r3m = function () {
    return this.l2z_1;
  };
  KslScopeBuilder.prototype.m3l = function () {
    var tmp$ret$0;
    {
      var parent = this.s3m();
      $l$loop: while (true) {
        var tmp;
        if (!(parent instanceof FunctionRoot)) {
          tmp = !(parent == null);
        } else {
          tmp = false;
        }
        if (!tmp) {
          break $l$loop;
        }
        parent = parent.r33_1.y2o_1;
      }
      tmp$ret$0 = parent instanceof FunctionRoot ? parent : null;
    }
    var tmp0_safe_receiver = tmp$ret$0;
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.c3l_1;
  };
  KslScopeBuilder.prototype.q3m = function () {
    return !(this.m3l() == null);
  };
  KslScopeBuilder.prototype.l31 = function (prefix) {
    return this.l2z_1.p2o_1.l31(prefix);
  };
  KslScopeBuilder.prototype.h34 = function (name, result) {
    {
      var tmp0_forEach = this.m37();
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          var tmp;
          if (element instanceof KslBlock) {
            tmp = name == null ? true : element.q33_1 === name;
          } else {
            tmp = false;
          }
          if (tmp) {
            {
              var tmp0_plusAssign = element;
              result.b(tmp0_plusAssign);
            }
          }
          {
            var tmp$ret$0;
            {
              var tmp1_filterIsInstance = asSequence(element.u33_1);
              var tmp_0 = filter(tmp1_filterIsInstance, KslScopeBuilder$getBlocks$lambda());
              tmp$ret$0 = isInterface(tmp_0, Sequence) ? tmp_0 : THROW_CCE();
            }
            var tmp2_forEach = tmp$ret$0;
            var tmp0_iterator_0 = tmp2_forEach.h();
            while (tmp0_iterator_0.n()) {
              var element_0 = tmp0_iterator_0.o();
              {
                element_0.h34(name, result);
              }
            }
          }
        }
      }
    }
    return result;
  };
  KslScopeBuilder.prototype.t3m = function (_this__u8e3s4) {
    return new KslValueFloat1(_this__u8e3s4);
  };
  KslScopeBuilder.prototype.d38 = function (_this__u8e3s4) {
    return new KslValueFloat1(_this__u8e3s4);
  };
  KslScopeBuilder.prototype.u3m = function (_this__u8e3s4) {
    return KslValueFloat2_init_$Create$(_this__u8e3s4, _this__u8e3s4);
  };
  KslScopeBuilder.prototype.v3m = function (_this__u8e3s4) {
    return KslValueFloat4_init_$Create$(_this__u8e3s4, _this__u8e3s4, _this__u8e3s4, _this__u8e3s4);
  };
  KslScopeBuilder.prototype.w3m = function (_this__u8e3s4) {
    return new KslValueInt1(_this__u8e3s4);
  };
  KslScopeBuilder.prototype.x3m = function (_this__u8e3s4) {
    return new KslValueUint1(_this__u8e3s4);
  };
  KslScopeBuilder.prototype.z35 = function (_this__u8e3s4) {
    return this.y3m(_this__u8e3s4.e23(), _this__u8e3s4.g23(), _this__u8e3s4.w2g());
  };
  KslScopeBuilder.prototype.l35 = function (_this__u8e3s4) {
    return this.z3m(_this__u8e3s4.e23(), _this__u8e3s4.g23(), _this__u8e3s4.w2g(), _this__u8e3s4.r2l());
  };
  KslScopeBuilder.prototype.a3n = function (x, y) {
    return new KslValueFloat2(x, y);
  };
  KslScopeBuilder.prototype.y3m = function (x, y, z) {
    return KslValueFloat3_init_$Create$(x, y, z);
  };
  KslScopeBuilder.prototype.b3n = function (x, y, z) {
    return new KslValueFloat3(x, y, z);
  };
  KslScopeBuilder.prototype.z3m = function (x, y, z, w) {
    return KslValueFloat4_init_$Create$(x, y, z, w);
  };
  KslScopeBuilder.prototype.c3n = function (x, y, z, w) {
    return new KslValueFloat4(x, y, z, w);
  };
  KslScopeBuilder.prototype.g30 = function (xyz, w) {
    return this.d3n(xyz, this.d38(w));
  };
  KslScopeBuilder.prototype.d3n = function (xyz, w) {
    return new KslValueFloat4(get_x(xyz), get_y(xyz), get_z(xyz), w);
  };
  KslScopeBuilder.prototype.e3n = function (x, y, z) {
    return new KslValueInt3(x, y, z);
  };
  KslScopeBuilder.prototype.f3n = function (initValue, name) {
    var tmp$ret$0;
    {
      var tmp0_elvis_lhs = name;
      var tmp0_also = new KslVarScalar(tmp0_elvis_lhs == null ? this.l31('f1') : tmp0_elvis_lhs, KslTypeFloat1_getInstance(), true);
      {
      }
      {
        var tmp0_this = this;
        {
          var tmp0_plusAssign = tmp0_this.m37();
          var tmp1_plusAssign = new KslDeclareVar(tmp0_also, initValue, this);
          tmp0_plusAssign.b(tmp1_plusAssign);
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  KslScopeBuilder.prototype.g3n = function (initValue, name, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      initValue = null;
    if (!(($mask0 & 2) === 0))
      name = null;
    return this.f3n(initValue, name);
  };
  KslScopeBuilder.prototype.h3n = function (initValue, name) {
    var tmp$ret$0;
    {
      var tmp0_elvis_lhs = name;
      var tmp0_also = new KslVarVector(tmp0_elvis_lhs == null ? this.l31('f2') : tmp0_elvis_lhs, KslTypeFloat2_getInstance(), true);
      {
      }
      {
        var tmp0_this = this;
        {
          var tmp0_plusAssign = tmp0_this.m37();
          var tmp1_plusAssign = new KslDeclareVar(tmp0_also, initValue, this);
          tmp0_plusAssign.b(tmp1_plusAssign);
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  KslScopeBuilder.prototype.i3n = function (initValue, name, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      initValue = null;
    if (!(($mask0 & 2) === 0))
      name = null;
    return this.h3n(initValue, name);
  };
  KslScopeBuilder.prototype.j3n = function (initValue, name) {
    var tmp$ret$0;
    {
      var tmp0_elvis_lhs = name;
      var tmp0_also = new KslVarVector(tmp0_elvis_lhs == null ? this.l31('f3') : tmp0_elvis_lhs, KslTypeFloat3_getInstance(), true);
      {
      }
      {
        var tmp0_this = this;
        {
          var tmp0_plusAssign = tmp0_this.m37();
          var tmp1_plusAssign = new KslDeclareVar(tmp0_also, initValue, this);
          tmp0_plusAssign.b(tmp1_plusAssign);
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  KslScopeBuilder.prototype.u30 = function (initValue, name, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      initValue = null;
    if (!(($mask0 & 2) === 0))
      name = null;
    return this.j3n(initValue, name);
  };
  KslScopeBuilder.prototype.k3n = function (initValue, name) {
    var tmp$ret$0;
    {
      var tmp0_elvis_lhs = name;
      var tmp0_also = new KslVarVector(tmp0_elvis_lhs == null ? this.l31('f4') : tmp0_elvis_lhs, KslTypeFloat4_getInstance(), true);
      {
      }
      {
        var tmp0_this = this;
        {
          var tmp0_plusAssign = tmp0_this.m37();
          var tmp1_plusAssign = new KslDeclareVar(tmp0_also, initValue, this);
          tmp0_plusAssign.b(tmp1_plusAssign);
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  KslScopeBuilder.prototype.y35 = function (initValue, name, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      initValue = null;
    if (!(($mask0 & 2) === 0))
      name = null;
    return this.k3n(initValue, name);
  };
  KslScopeBuilder.prototype.l3n = function (initValue, name) {
    var tmp$ret$0;
    {
      var tmp0_elvis_lhs = name;
      var tmp0_also = new KslVarScalar(tmp0_elvis_lhs == null ? this.l31('i1') : tmp0_elvis_lhs, KslTypeInt1_getInstance(), true);
      {
      }
      {
        var tmp0_this = this;
        {
          var tmp0_plusAssign = tmp0_this.m37();
          var tmp1_plusAssign = new KslDeclareVar(tmp0_also, initValue, this);
          tmp0_plusAssign.b(tmp1_plusAssign);
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  KslScopeBuilder.prototype.m3n = function (initValue, name, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      initValue = null;
    if (!(($mask0 & 2) === 0))
      name = null;
    return this.l3n(initValue, name);
  };
  KslScopeBuilder.prototype.n3n = function (initValue, name) {
    var tmp$ret$0;
    {
      var tmp0_elvis_lhs = name;
      var tmp0_also = new KslVarVector(tmp0_elvis_lhs == null ? this.l31('i3') : tmp0_elvis_lhs, KslTypeInt3_getInstance(), true);
      {
      }
      {
        var tmp0_this = this;
        {
          var tmp0_plusAssign = tmp0_this.m37();
          var tmp1_plusAssign = new KslDeclareVar(tmp0_also, initValue, this);
          tmp0_plusAssign.b(tmp1_plusAssign);
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  KslScopeBuilder.prototype.o3n = function (initValue, name, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      initValue = null;
    if (!(($mask0 & 2) === 0))
      name = null;
    return this.n3n(initValue, name);
  };
  KslScopeBuilder.prototype.p3n = function (initValue, name) {
    var tmp$ret$0;
    {
      var tmp0_elvis_lhs = name;
      var tmp0_also = new KslVarScalar(tmp0_elvis_lhs == null ? this.l31('u1') : tmp0_elvis_lhs, KslTypeUint1_getInstance(), true);
      {
      }
      {
        var tmp0_this = this;
        {
          var tmp0_plusAssign = tmp0_this.m37();
          var tmp1_plusAssign = new KslDeclareVar(tmp0_also, initValue, this);
          tmp0_plusAssign.b(tmp1_plusAssign);
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  KslScopeBuilder.prototype.q3n = function (initValue, name, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      initValue = null;
    if (!(($mask0 & 2) === 0))
      name = null;
    return this.p3n(initValue, name);
  };
  KslScopeBuilder.prototype.r3n = function (initValue, name) {
    var tmp$ret$0;
    {
      var tmp0_elvis_lhs = name;
      var tmp0_also = new KslVarMatrix(tmp0_elvis_lhs == null ? this.l31('m4') : tmp0_elvis_lhs, KslTypeMat4_getInstance(), true);
      {
      }
      {
        var tmp0_this = this;
        {
          var tmp0_plusAssign = tmp0_this.m37();
          var tmp1_plusAssign = new KslDeclareVar(tmp0_also, initValue, this);
          tmp0_plusAssign.b(tmp1_plusAssign);
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  KslScopeBuilder.prototype.m2z = function (initValue, name, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      initValue = null;
    if (!(($mask0 & 2) === 0))
      name = null;
    return this.r3n(initValue, name);
  };
  KslScopeBuilder.prototype.h30 = function (_this__u8e3s4, expression) {
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.m37();
      var tmp1_plusAssign = new KslAssign(_this__u8e3s4, expression, this);
      tmp0_plusAssign.b(tmp1_plusAssign);
    }
  };
  KslScopeBuilder.prototype.s3n = function (condition, block) {
    var tmp$ret$0;
    {
      var tmp0_apply = new KslIf(condition, this);
      {
      }
      {
        block(tmp0_apply.w3d_1);
      }
      tmp$ret$0 = tmp0_apply;
    }
    var stmt = tmp$ret$0;
    var tmp0_this = this;
    {
      var tmp1_plusAssign = tmp0_this.m37();
      tmp1_plusAssign.b(stmt);
    }
    return stmt;
  };
  KslScopeBuilder.prototype.t3n = function (fromInclusive, toExclusive, block) {
    var i = this.m3n(fromInclusive, null, 2, null);
    this.u3n(i, lt(i, toExclusive), this.w3m(1), block);
  };
  KslScopeBuilder.prototype.u3n = function (loopVar, whileExpr, incExpr, block) {
    var tmp$ret$0;
    {
      var tmp0_apply = new KslLoopFor(loopVar, whileExpr, incExpr, this);
      {
      }
      {
        block(tmp0_apply.l3e_1, loopVar);
      }
      tmp$ret$0 = tmp0_apply;
    }
    var loop = tmp$ret$0;
    var tmp0_this = this;
    {
      var tmp1_plusAssign = tmp0_this.m37();
      tmp1_plusAssign.b(loop);
    }
  };
  KslScopeBuilder.prototype.v3n = function () {
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.m37();
      var tmp1_plusAssign = new KslDiscard(this);
      tmp0_plusAssign.b(tmp1_plusAssign);
    }
  };
  KslScopeBuilder.prototype.w3n = function (boolVec) {
    return new KslBoolVectorExpr(boolVec, KslBoolVecOperator_Any_getInstance());
  };
  KslScopeBuilder.prototype.o33 = function (_this__u8e3s4, expr) {
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.m37();
      var tmp1_plusAssign = new KslAugmentedAssign(_this__u8e3s4, KslMathOperator_Plus_getInstance(), expr, this);
      tmp0_plusAssign.b(tmp1_plusAssign);
    }
  };
  KslScopeBuilder.prototype.p33 = function (_this__u8e3s4, expr) {
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.m37();
      var tmp1_plusAssign = new KslAugmentedAssign(_this__u8e3s4, KslMathOperator_Minus_getInstance(), expr, this);
      tmp0_plusAssign.b(tmp1_plusAssign);
    }
  };
  KslScopeBuilder.prototype.z2z = function (_this__u8e3s4, expr) {
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.m37();
      var tmp1_plusAssign = new KslAugmentedAssign(_this__u8e3s4, KslMathOperator_Times_getInstance(), expr, this);
      tmp0_plusAssign.b(tmp1_plusAssign);
    }
  };
  KslScopeBuilder.prototype.x3n = function (_this__u8e3s4, args) {
    return new KslInvokeFunctionScalar(_this__u8e3s4, this, _this__u8e3s4.f38_1, args.slice());
  };
  KslScopeBuilder.prototype.s37 = function (_this__u8e3s4, args) {
    return new KslInvokeFunctionVector(_this__u8e3s4, this, _this__u8e3s4.f38_1, args.slice());
  };
  KslScopeBuilder.prototype.y3n = function (value) {
    return new KslBuiltinAbsScalar(value);
  };
  KslScopeBuilder.prototype.z3n = function (value, min, max) {
    return new KslBuiltinClampScalar(value, min, max);
  };
  KslScopeBuilder.prototype.a3o = function (a, b) {
    return new KslBuiltinCross(a, b);
  };
  KslScopeBuilder.prototype.b3o = function (a, b) {
    return new KslBuiltinDot(a, b);
  };
  KslScopeBuilder.prototype.c3o = function (vec) {
    return new KslBuiltinFloorVector(vec);
  };
  KslScopeBuilder.prototype.d3o = function (arg) {
    return new KslBuiltinLength(arg);
  };
  KslScopeBuilder.prototype.e3o = function (a, b) {
    return new KslBuiltinMaxScalar(a, b);
  };
  KslScopeBuilder.prototype.f3o = function (a, b) {
    return new KslBuiltinMinScalar(a, b);
  };
  KslScopeBuilder.prototype.g3o = function (arg) {
    return new KslBuiltinNormalize(arg);
  };
  KslScopeBuilder.prototype.h3o = function (value, power) {
    return new KslBuiltinPowScalar(value, power);
  };
  KslScopeBuilder.prototype.a36 = function (vec, power) {
    return new KslBuiltinPowVector(vec, power);
  };
  KslScopeBuilder.prototype.i3o = function (low, high, x) {
    return new KslBuiltinSmoothStepScalar(low, high, x);
  };
  KslScopeBuilder.prototype.j3o = function (value) {
    return new KslBuiltinSqrtScalar(value);
  };
  KslScopeBuilder.prototype.k3o = function (edge, x) {
    return new KslBuiltinStepScalar(edge, x);
  };
  KslScopeBuilder.prototype.l3o = function (vec) {
    return new KslBuiltinTruncVector(vec);
  };
  KslScopeBuilder.prototype.m3o = function (value) {
    return new KslBuiltinTrigonometryScalar(value, 'cos');
  };
  KslScopeBuilder.prototype.n3o = function (value) {
    return new KslBuiltinTrigonometryScalar(value, 'sin');
  };
  KslScopeBuilder.prototype.o3o = function (sampler, coord, lod) {
    return new KslSampleColorTexture(sampler, coord, lod);
  };
  KslScopeBuilder.prototype.x35 = function (sampler, coord, lod, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      lod = null;
    return this.o3o(sampler, coord, lod);
  };
  KslScopeBuilder.prototype.p3o = function (sampler, coord, lod) {
    return new KslTexelFetch(sampler, coord, lod);
  };
  KslScopeBuilder.prototype.q3o = function (sampler, coord, lod, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      lod = null;
    return this.p3o(sampler, coord, lod);
  };
  KslScopeBuilder.prototype.r3o = function (sampler, lod) {
    return new KslTextureSize2d(sampler, lod);
  };
  KslScopeBuilder.prototype.s3o = function (sampler, lod, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      lod = this.w3m(0);
    return this.r3o(sampler, lod);
  };
  KslScopeBuilder.prototype.t3o = function (sampler, lod) {
    return new KslTextureSize3d(sampler, lod);
  };
  KslScopeBuilder.prototype.u3o = function (sampler, lod, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      lod = this.w3m(0);
    return this.t3o(sampler, lod);
  };
  KslScopeBuilder.$metadata$ = classMeta('KslScopeBuilder', undefined, undefined, undefined, undefined, KslScope.prototype);
  function attribVector($this, name, type, rate) {
    var tmp$ret$2;
    {
      var tmp0_elvis_lhs = $this.a2s_1.b3(name);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = new KslVertexAttributeVector(new KslVarVector(name, type, false), rate);
          }
          var tmp0_also = tmp$ret$0;
          {
          }
          {
            {
              var tmp0_set = $this.a2s_1;
              tmp0_set.a(name, tmp0_also);
            }
            var tmp0_this = $this.j3m();
            {
              var tmp1_plusAssign = tmp0_this.w3k();
              var tmp2_plusAssign = tmp0_also.a2t_1;
              tmp1_plusAssign.b(tmp2_plusAssign);
            }
          }
          tmp$ret$1 = tmp0_also;
        }
        tmp = tmp$ret$1;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var attribute = tmp;
      if (!(attribute instanceof KslVertexAttributeVector)) {
        throw IllegalStateException_init_$Create$('Existing attribute with name "' + name + '" has not the expected type');
      }
      tmp$ret$2 = attribute;
    }
    return tmp$ret$2;
  }
  function attribMatrix($this, name, type, rate) {
    var tmp$ret$2;
    {
      var tmp0_elvis_lhs = $this.a2s_1.b3(name);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = new KslVertexAttributeMatrix(new KslVarMatrix(name, type, false), rate);
          }
          var tmp0_also = tmp$ret$0;
          {
          }
          {
            {
              var tmp0_set = $this.a2s_1;
              tmp0_set.a(name, tmp0_also);
            }
            var tmp0_this = $this.j3m();
            {
              var tmp1_plusAssign = tmp0_this.w3k();
              var tmp2_plusAssign = tmp0_also.a2t_1;
              tmp1_plusAssign.b(tmp2_plusAssign);
            }
          }
          tmp$ret$1 = tmp0_also;
        }
        tmp = tmp$ret$1;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var attribute = tmp;
      if (!(attribute instanceof KslVertexAttributeMatrix)) {
        throw IllegalStateException_init_$Create$('Existing attribute with name "' + name + '" has not the expected type');
      }
      tmp$ret$2 = attribute;
    }
    return tmp$ret$2;
  }
  function Companion_15() {
    Companion_instance_15 = this;
    this.w3o_1 = 'inVertexIndex';
    this.x3o_1 = 'inInstanceIndex';
    this.y3o_1 = 'outPosition';
    this.z3o_1 = 'outPointSize';
  }
  Companion_15.$metadata$ = objectMeta('Companion');
  var Companion_instance_15;
  function Companion_getInstance_15() {
    if (Companion_instance_15 == null)
      new Companion_15();
    return Companion_instance_15;
  }
  function KslVertexStage(program) {
    Companion_getInstance_15();
    KslShaderStage.call(this, program, KslShaderStageType_VertexShader_getInstance());
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$();
    }
    tmp.a2s_1 = tmp$ret$0;
    var tmp_0 = this;
    Companion_getInstance_15();
    tmp_0.b2s_1 = new KslStageInputScalar(new KslVarScalar('inVertexIndex', KslTypeInt1_getInstance(), false));
    var tmp_1 = this;
    Companion_getInstance_15();
    tmp_1.c2s_1 = new KslStageInputScalar(new KslVarScalar('inInstanceIndex', KslTypeInt1_getInstance(), false));
    var tmp_2 = this;
    Companion_getInstance_15();
    tmp_2.d2s_1 = new KslStageOutputVector(new KslVarVector('outPosition', KslTypeFloat4_getInstance(), true));
    var tmp_3 = this;
    Companion_getInstance_15();
    tmp_3.e2s_1 = new KslStageOutputScalar(new KslVarScalar('outPointSize', KslTypeFloat1_getInstance(), true));
    var tmp0_this = this.j3m();
    {
      var tmp0_plusAssign = tmp0_this.w3k();
      var tmp1_plusAssign = this.b2s_1.n2();
      tmp0_plusAssign.b(tmp1_plusAssign);
    }
    var tmp1_this = this.j3m();
    {
      var tmp2_plusAssign = tmp1_this.w3k();
      var tmp3_plusAssign = this.c2s_1.n2();
      tmp2_plusAssign.b(tmp3_plusAssign);
    }
    var tmp2_this = this.j3m();
    {
      var tmp4_plusAssign = tmp2_this.w3k();
      var tmp5_plusAssign = this.d2s_1.n2();
      tmp4_plusAssign.b(tmp5_plusAssign);
    }
    var tmp3_this = this.j3m();
    {
      var tmp6_plusAssign = tmp3_this.w3k();
      var tmp7_plusAssign = this.e2s_1.n2();
      tmp6_plusAssign.b(tmp7_plusAssign);
    }
  }
  KslVertexStage.prototype.f3p = function () {
    return this.a2s_1;
  };
  KslVertexStage.prototype.i39 = function (name) {
    return attribVector(this, name, KslTypeFloat2_getInstance(), KslInputRate_Vertex_getInstance());
  };
  KslVertexStage.prototype.f30 = function (name) {
    return attribVector(this, name, KslTypeFloat3_getInstance(), KslInputRate_Vertex_getInstance());
  };
  KslVertexStage.prototype.o37 = function (name) {
    return attribVector(this, name, KslTypeFloat4_getInstance(), KslInputRate_Vertex_getInstance());
  };
  KslVertexStage.prototype.g3p = function (name) {
    return attribVector(this, name, KslTypeFloat2_getInstance(), KslInputRate_Instance_getInstance());
  };
  KslVertexStage.prototype.p37 = function (name) {
    return attribVector(this, name, KslTypeFloat4_getInstance(), KslInputRate_Instance_getInstance());
  };
  KslVertexStage.prototype.y2z = function (name) {
    return attribMatrix(this, name, KslTypeMat4_getInstance(), KslInputRate_Instance_getInstance());
  };
  KslVertexStage.$metadata$ = classMeta('KslVertexStage', undefined, undefined, undefined, undefined, KslShaderStage.prototype);
  function Companion_16() {
    Companion_instance_16 = this;
    this.i3p_1 = 'inFragPosition';
    this.j3p_1 = 'inIsFrontFacing';
    this.k3p_1 = 'outDepth';
    this.l3p_1 = 'outColor_';
  }
  Companion_16.$metadata$ = objectMeta('Companion');
  var Companion_instance_16;
  function Companion_getInstance_16() {
    if (Companion_instance_16 == null)
      new Companion_16();
    return Companion_instance_16;
  }
  function KslFragmentStage(program) {
    Companion_getInstance_16();
    KslShaderStage.call(this, program, KslShaderStageType_FragmentShader_getInstance());
    var tmp = this;
    Companion_getInstance_16();
    tmp.d31_1 = new KslStageInputVector(new KslVarVector('inFragPosition', KslTypeFloat4_getInstance(), false));
    var tmp_0 = this;
    Companion_getInstance_16();
    tmp_0.e31_1 = new KslStageInputScalar(new KslVarScalar('inIsFrontFacing', KslTypeBool1_getInstance(), false));
    var tmp_1 = this;
    Companion_getInstance_16();
    tmp_1.f31_1 = new KslStageOutputScalar(new KslVarScalar('outDepth', KslTypeFloat1_getInstance(), true));
    var tmp_2 = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp_2.g31_1 = tmp$ret$0;
    var tmp0_this = this.j3m();
    {
      var tmp0_plusAssign = tmp0_this.w3k();
      var tmp1_plusAssign = this.d31_1.n2();
      tmp0_plusAssign.b(tmp1_plusAssign);
    }
    var tmp1_this = this.j3m();
    {
      var tmp2_plusAssign = tmp1_this.w3k();
      var tmp3_plusAssign = this.e31_1.n2();
      tmp2_plusAssign.b(tmp3_plusAssign);
    }
    var tmp2_this = this.j3m();
    {
      var tmp4_plusAssign = tmp2_this.w3k();
      var tmp5_plusAssign = this.f31_1.n2();
      tmp4_plusAssign.b(tmp5_plusAssign);
    }
  }
  KslFragmentStage.prototype.m3p = function () {
    return this.g31_1;
  };
  KslFragmentStage.prototype.n3p = function (location) {
    Companion_getInstance_16();
    var name = 'outColor_' + location;
    var tmp$ret$2;
    {
      var tmp0_find = this.g31_1;
      var tmp$ret$1;
      $l$block: {
        var tmp0_iterator = tmp0_find.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          var tmp$ret$0;
          {
            tmp$ret$0 = element.n2().f3a() === name;
          }
          if (tmp$ret$0) {
            tmp$ret$1 = element;
            break $l$block;
          }
        }
        tmp$ret$1 = null;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    var tmp0_elvis_lhs = tmp$ret$2;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$3;
      {
        var tmp1_also = new KslStageOutputVector(new KslVarVector(name, KslTypeFloat4_getInstance(), true));
        {
        }
        {
          tmp1_also.o3p(location);
          var tmp0_this = this.j3m();
          {
            var tmp0_plusAssign = tmp0_this.w3k();
            var tmp1_plusAssign = tmp1_also.n2();
            tmp0_plusAssign.b(tmp1_plusAssign);
          }
          var tmp1_this = this;
          {
            var tmp2_plusAssign = tmp1_this.g31_1;
            tmp2_plusAssign.b(tmp1_also);
          }
        }
        tmp$ret$3 = tmp1_also;
      }
      tmp = tmp$ret$3;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  KslFragmentStage.prototype.p3p = function (_this__u8e3s4, rgb, a, location) {
    {
      var tmp = _this__u8e3s4.l2z_1;
      var tmp0_check = tmp instanceof KslFragmentStage;
      {
      }
      if (!tmp0_check) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'colorOutput is only available in fragment stage';
        }
        var message = tmp$ret$0;
        throw IllegalStateException_init_$Create$(toString(message));
      }
    }
    var outColor = _this__u8e3s4.l2z_1.n3p(location);
    _this__u8e3s4.h30(get_rgb(outColor.n2()), rgb);
    _this__u8e3s4.h30(get_a(outColor.n2()), a);
  };
  KslFragmentStage.prototype.h31 = function (_this__u8e3s4, rgb, a, location, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      a = _this__u8e3s4.d38(1.0);
    if (!(($mask0 & 4) === 0))
      location = 0;
    return this.p3p(_this__u8e3s4, rgb, a, location);
  };
  KslFragmentStage.prototype.q3p = function (_this__u8e3s4, value, location) {
    {
      var tmp = _this__u8e3s4.l2z_1;
      var tmp0_check = tmp instanceof KslFragmentStage;
      {
      }
      if (!tmp0_check) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'colorOutput is only available in fragment stage';
        }
        var message = tmp$ret$0;
        throw IllegalStateException_init_$Create$(toString(message));
      }
    }
    _this__u8e3s4.h30(_this__u8e3s4.l2z_1.n3p(location), value);
  };
  KslFragmentStage.prototype.r3p = function (_this__u8e3s4, value, location, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      location = 0;
    return this.q3p(_this__u8e3s4, value, location);
  };
  KslFragmentStage.$metadata$ = classMeta('KslFragmentStage', undefined, undefined, undefined, undefined, KslShaderStage.prototype);
  function KslShaderStage(program, type) {
    this.p2o_1 = program;
    this.q2o_1 = type;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.r2o_1 = tmp$ret$0;
    this.s2o_1 = new KslScopeBuilder(null, null, this);
    this.t2o_1 = new KslOp('main', this.s2o_1);
    this.u2o_1 = new KslScopeBuilder(this.t2o_1, this.s2o_1, this);
    this.v2o_1 = new KslHierarchy(this.s2o_1);
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = LinkedHashMap_init_$Create$();
    }
    tmp_0.w2o_1 = tmp$ret$1;
    this.s2o_1.c3j('global');
    var tmp0_this = this.s2o_1;
    {
      var tmp0_plusAssign = tmp0_this.m37();
      var tmp1_plusAssign = this.t2o_1;
      tmp0_plusAssign.b(tmp1_plusAssign);
    }
    var tmp1_this = this.t2o_1;
    {
      var tmp2_plusAssign = tmp1_this.u33_1;
      var tmp3_plusAssign = this.u2o_1;
      tmp2_plusAssign.b(tmp3_plusAssign);
    }
  }
  KslShaderStage.prototype.u2w = function () {
    return this.p2o_1;
  };
  KslShaderStage.prototype.m3b = function () {
    return this.r2o_1;
  };
  KslShaderStage.prototype.j3m = function () {
    return this.s2o_1;
  };
  KslShaderStage.prototype.x2o = function () {
    return this.u2o_1;
  };
  KslShaderStage.prototype.c2x = function () {
    return this.v2o_1;
  };
  KslShaderStage.prototype.h3p = function () {
    return this.w2o_1;
  };
  KslShaderStage.prototype.i30 = function (block) {
    {
    }
    var tmp$ret$0;
    {
      var tmp0_apply = this.u2o_1;
      {
      }
      block(tmp0_apply);
      tmp$ret$0 = tmp0_apply;
    }
  };
  KslShaderStage.prototype.l3l = function (name, function_0) {
    if (this.w2o_1.c3().p(name)) {
      throw IllegalStateException_init_$Create$('Function with name ' + name + ' is already defined');
    }
    {
      var tmp0_set = this.w2o_1;
      tmp0_set.a(name, function_0);
    }
  };
  KslShaderStage.prototype.k3m = function (uniform) {
    var tmp;
    var tmp$ret$1;
    {
      var tmp0_contains = this.u2o_1.e2p();
      var tmp1_contains = uniform.n2();
      var tmp$ret$0;
      {
        tmp$ret$0 = (isInterface(tmp0_contains, Map) ? tmp0_contains : THROW_CCE()).v2(tmp1_contains);
      }
      tmp$ret$1 = tmp$ret$0;
    }
    if (tmp$ret$1) {
      tmp = true;
    } else {
      var tmp$ret$2;
      $l$block_0: {
        var tmp2_any = this.w2o_1.d3();
        var tmp_0;
        if (isInterface(tmp2_any, Collection)) {
          tmp_0 = tmp2_any.q();
        } else {
          tmp_0 = false;
        }
        if (tmp_0) {
          tmp$ret$2 = false;
          break $l$block_0;
        }
        var tmp0_iterator = tmp2_any.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          var tmp$ret$5;
          {
            var tmp$ret$4;
            {
              var tmp0_contains_0 = element.m38_1.e2p();
              var tmp1_contains_0 = uniform.n2();
              var tmp$ret$3;
              {
                tmp$ret$3 = (isInterface(tmp0_contains_0, Map) ? tmp0_contains_0 : THROW_CCE()).v2(tmp1_contains_0);
              }
              tmp$ret$4 = tmp$ret$3;
            }
            tmp$ret$5 = tmp$ret$4;
          }
          if (tmp$ret$5) {
            tmp$ret$2 = true;
            break $l$block_0;
          }
        }
        tmp$ret$2 = false;
      }
      tmp = tmp$ret$2;
    }
    return tmp;
  };
  KslShaderStage.prototype.j3b = function () {
    var tmp$ret$2;
    {
      var tmp0_filter = this.p2o_1.r2n_1.d3();
      var tmp$ret$1;
      {
        var tmp0_filterTo = ArrayList_init_$Create$_0();
        var tmp0_iterator = tmp0_filter.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          var tmp$ret$0;
          {
            tmp$ret$0 = this.k3m(element);
          }
          if (tmp$ret$0) {
            tmp0_filterTo.b(element);
          }
        }
        tmp$ret$1 = tmp0_filterTo;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  KslShaderStage.prototype.l3b = function () {
    var tmp$ret$4;
    {
      var tmp0_filter = this.p2o_1.q2n_1;
      var tmp$ret$3;
      {
        var tmp0_filterTo = ArrayList_init_$Create$_0();
        var tmp0_iterator = tmp0_filter.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          var tmp$ret$2;
          {
            var tmp$ret$0;
            $l$block_0: {
              var tmp0_any = element.k2o_1.d3();
              var tmp;
              if (isInterface(tmp0_any, Collection)) {
                tmp = tmp0_any.q();
              } else {
                tmp = false;
              }
              if (tmp) {
                tmp$ret$0 = false;
                break $l$block_0;
              }
              var tmp0_iterator_0 = tmp0_any.h();
              while (tmp0_iterator_0.n()) {
                var element_0 = tmp0_iterator_0.o();
                var tmp$ret$1;
                {
                  tmp$ret$1 = this.k3m(element_0);
                }
                if (tmp$ret$1) {
                  tmp$ret$0 = true;
                  break $l$block_0;
                }
              }
              tmp$ret$0 = false;
            }
            tmp$ret$2 = tmp$ret$0;
          }
          if (tmp$ret$2) {
            tmp0_filterTo.b(element);
          }
        }
        tmp$ret$3 = tmp0_filterTo;
      }
      tmp$ret$4 = tmp$ret$3;
    }
    return tmp$ret$4;
  };
  KslShaderStage.prototype.b2x = function () {
    (new KslProcessor()).j3l(this.v2o_1);
    {
      var tmp0_forEach = this.w2o_1.d3();
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          element.b2x();
        }
      }
    }
  };
  KslShaderStage.$metadata$ = classMeta('KslShaderStage');
  var KslShaderStageType_VertexShader_instance;
  var KslShaderStageType_FragmentShader_instance;
  var KslShaderStageType_entriesInitialized;
  function KslShaderStageType_initEntries() {
    if (KslShaderStageType_entriesInitialized)
      return Unit_getInstance();
    KslShaderStageType_entriesInitialized = true;
    KslShaderStageType_VertexShader_instance = new KslShaderStageType('VertexShader', 0);
    KslShaderStageType_FragmentShader_instance = new KslShaderStageType('FragmentShader', 1);
  }
  function KslShaderStageType(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  KslShaderStageType.$metadata$ = classMeta('KslShaderStageType', undefined, undefined, undefined, undefined, Enum.prototype);
  function KslShaderStageType_VertexShader_getInstance() {
    KslShaderStageType_initEntries();
    return KslShaderStageType_VertexShader_instance;
  }
  function KslShaderStageType_FragmentShader_getInstance() {
    KslShaderStageType_initEntries();
    return KslShaderStageType_FragmentShader_instance;
  }
  function KslStageInputScalar(value) {
    KslStageInput.call(this, value);
  }
  KslStageInputScalar.$metadata$ = classMeta('KslStageInputScalar', [KslScalarExpression], undefined, undefined, undefined, KslStageInput.prototype);
  function KslStageInputVector(value) {
    KslStageInput.call(this, value);
  }
  KslStageInputVector.$metadata$ = classMeta('KslStageInputVector', [KslVectorExpression], undefined, undefined, undefined, KslStageInput.prototype);
  function KslStageInput(value) {
    this.a3p_1 = value;
  }
  KslStageInput.prototype.n2 = function () {
    return this.a3p_1;
  };
  KslStageInput.prototype.i2p = function () {
    return this.a3p_1.i2p();
  };
  KslStageInput.prototype.o3i = function () {
    return this.a3p_1.o3i();
  };
  KslStageInput.prototype.x39 = function (generator) {
    return this.a3p_1.x39(generator);
  };
  KslStageInput.prototype.j37 = function () {
    return this.a3p_1.j37();
  };
  KslStageInput.$metadata$ = classMeta('KslStageInput', [KslExpression]);
  function KslStageOutputVector(value) {
    KslStageOutput.call(this, value);
  }
  KslStageOutputVector.prototype.n2 = function () {
    var tmp = KslStageOutput.prototype.n2.call(this);
    return tmp instanceof KslVarVector ? tmp : THROW_CCE();
  };
  KslStageOutputVector.$metadata$ = classMeta('KslStageOutputVector', [KslVectorExpression], undefined, undefined, undefined, KslStageOutput.prototype);
  function KslStageOutputScalar(value) {
    KslStageOutput.call(this, value);
  }
  KslStageOutputScalar.prototype.n2 = function () {
    var tmp = KslStageOutput.prototype.n2.call(this);
    return tmp instanceof KslVarScalar ? tmp : THROW_CCE();
  };
  KslStageOutputScalar.$metadata$ = classMeta('KslStageOutputScalar', [KslScalarExpression], undefined, undefined, undefined, KslStageOutput.prototype);
  function KslStageOutput(value) {
    this.x3b_1 = value;
    this.y3b_1 = -1;
  }
  KslStageOutput.prototype.n2 = function () {
    return this.x3b_1;
  };
  KslStageOutput.prototype.i2p = function () {
    return this.x3b_1.i2p();
  };
  KslStageOutput.prototype.o3i = function () {
    return this.x3b_1.o3i();
  };
  KslStageOutput.prototype.x39 = function (generator) {
    return this.x3b_1.x39(generator);
  };
  KslStageOutput.prototype.i3i = function () {
    return this.x3b_1.i3i();
  };
  KslStageOutput.prototype.g3i = function (scopeBuilder) {
    this.x3b_1.g3i(scopeBuilder);
  };
  KslStageOutput.prototype.a3d = function (generator) {
    return this.x3b_1.a3d(generator);
  };
  KslStageOutput.prototype.o3p = function (_set____db54di) {
    this.y3b_1 = _set____db54di;
  };
  KslStageOutput.prototype.s3p = function () {
    return this.y3b_1;
  };
  KslStageOutput.prototype.j37 = function () {
    return this.n2().j37();
  };
  KslStageOutput.$metadata$ = classMeta('KslStageOutput', [KslExpression, KslAssignable]);
  function KslStatement(opName, parentScopeBuilder) {
    KslOp.call(this, opName, parentScopeBuilder);
    this.b37_1 = parentScopeBuilder;
  }
  KslStatement.prototype.c37 = function () {
    return this.b37_1;
  };
  KslStatement.prototype.h3i = function (expression) {
    {
      var tmp0_forEach = expression.o3i();
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          {
            var tmp0_set = this.e2p();
            var tmp1_set = element.p3i_1;
            tmp0_set.a(tmp1_set, element);
          }
        }
      }
    }
  };
  KslStatement.$metadata$ = classMeta('KslStatement', undefined, undefined, undefined, undefined, KslOp.prototype);
  function KslTexelFetch(sampler, coord, lod) {
    this.f3b_1 = sampler;
    this.g3b_1 = coord;
    this.h3b_1 = lod;
    this.i3b_1 = KslTypeFloat4_getInstance();
  }
  KslTexelFetch.prototype.i2p = function () {
    return this.i3b_1;
  };
  KslTexelFetch.prototype.o3i = function () {
    var deps = plus(this.f3b_1.o3i(), this.g3b_1.o3i());
    var tmp0_safe_receiver = this.h3b_1;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          tmp$ret$0 = plus(deps, tmp0_safe_receiver.o3i());
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    var tmp1_elvis_lhs = tmp;
    return tmp1_elvis_lhs == null ? deps : tmp1_elvis_lhs;
  };
  KslTexelFetch.prototype.x39 = function (generator) {
    return generator.e3b(this);
  };
  KslTexelFetch.prototype.j37 = function () {
    var tmp = this.f3b_1.j37();
    var tmp_0 = this.g3b_1.j37();
    var tmp0_safe_receiver = this.h3b_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.j37();
    return tmp + '.texelFetch(' + tmp_0 + ', lod=' + (tmp1_elvis_lhs == null ? '0' : tmp1_elvis_lhs) + ')';
  };
  KslTexelFetch.$metadata$ = classMeta('KslTexelFetch', [KslVectorExpression]);
  function KslTextureSize2d(sampler, lod) {
    KslTextureSize.call(this, sampler, lod, KslTypeInt2_getInstance());
  }
  KslTextureSize2d.$metadata$ = classMeta('KslTextureSize2d', [KslVectorExpression], undefined, undefined, undefined, KslTextureSize.prototype);
  function KslTextureSize3d(sampler, lod) {
    KslTextureSize.call(this, sampler, lod, KslTypeInt3_getInstance());
  }
  KslTextureSize3d.$metadata$ = classMeta('KslTextureSize3d', [KslVectorExpression], undefined, undefined, undefined, KslTextureSize.prototype);
  function KslTextureSize(sampler, lod, expressionType) {
    this.b3b_1 = sampler;
    this.c3b_1 = lod;
    this.d3b_1 = expressionType;
  }
  KslTextureSize.prototype.i2p = function () {
    return this.d3b_1;
  };
  KslTextureSize.prototype.o3i = function () {
    return this.b3b_1.o3i();
  };
  KslTextureSize.prototype.x39 = function (generator) {
    return generator.a3b(this);
  };
  KslTextureSize.prototype.j37 = function () {
    return 'textureSize(' + this.b3b_1.j37() + ')';
  };
  KslTextureSize.$metadata$ = classMeta('KslTextureSize', [KslExpression]);
  function KslTypeFloat2() {
    KslTypeFloat2_instance = this;
    KslFloatType.call(this, 'float2');
  }
  KslTypeFloat2.$metadata$ = objectMeta('KslTypeFloat2', [KslVector2], undefined, undefined, undefined, KslFloatType.prototype);
  var KslTypeFloat2_instance;
  function KslTypeFloat2_getInstance() {
    if (KslTypeFloat2_instance == null)
      new KslTypeFloat2();
    return KslTypeFloat2_instance;
  }
  function KslTypeFloat1() {
    KslTypeFloat1_instance = this;
    KslFloatType.call(this, 'float1');
  }
  KslTypeFloat1.$metadata$ = objectMeta('KslTypeFloat1', [KslScalar], undefined, undefined, undefined, KslFloatType.prototype);
  var KslTypeFloat1_instance;
  function KslTypeFloat1_getInstance() {
    if (KslTypeFloat1_instance == null)
      new KslTypeFloat1();
    return KslTypeFloat1_instance;
  }
  function KslTypeMat4() {
    KslTypeMat4_instance = this;
    KslFloatType.call(this, 'mat4');
  }
  KslTypeMat4.$metadata$ = objectMeta('KslTypeMat4', [KslMatrix], undefined, undefined, undefined, KslFloatType.prototype);
  var KslTypeMat4_instance;
  function KslTypeMat4_getInstance() {
    if (KslTypeMat4_instance == null)
      new KslTypeMat4();
    return KslTypeMat4_instance;
  }
  function KslTypeFloat4() {
    KslTypeFloat4_instance = this;
    KslFloatType.call(this, 'float4');
  }
  KslTypeFloat4.$metadata$ = objectMeta('KslTypeFloat4', [KslVector4], undefined, undefined, undefined, KslFloatType.prototype);
  var KslTypeFloat4_instance;
  function KslTypeFloat4_getInstance() {
    if (KslTypeFloat4_instance == null)
      new KslTypeFloat4();
    return KslTypeFloat4_instance;
  }
  function KslTypeFloat3() {
    KslTypeFloat3_instance = this;
    KslFloatType.call(this, 'float3');
  }
  KslTypeFloat3.$metadata$ = objectMeta('KslTypeFloat3', [KslVector3], undefined, undefined, undefined, KslFloatType.prototype);
  var KslTypeFloat3_instance;
  function KslTypeFloat3_getInstance() {
    if (KslTypeFloat3_instance == null)
      new KslTypeFloat3();
    return KslTypeFloat3_instance;
  }
  function KslTypeColorSampler2d() {
    KslTypeColorSampler2d_instance = this;
    KslTypeColorSampler.call(this, 'sampler2d');
  }
  KslTypeColorSampler2d.$metadata$ = objectMeta('KslTypeColorSampler2d', [KslTypeSampler2d], undefined, undefined, undefined, KslTypeColorSampler.prototype);
  var KslTypeColorSampler2d_instance;
  function KslTypeColorSampler2d_getInstance() {
    if (KslTypeColorSampler2d_instance == null)
      new KslTypeColorSampler2d();
    return KslTypeColorSampler2d_instance;
  }
  function KslTypeColorSampler3d() {
    KslTypeColorSampler3d_instance = this;
    KslTypeColorSampler.call(this, 'sampler3d');
  }
  KslTypeColorSampler3d.$metadata$ = objectMeta('KslTypeColorSampler3d', [KslTypeSampler3d], undefined, undefined, undefined, KslTypeColorSampler.prototype);
  var KslTypeColorSampler3d_instance;
  function KslTypeColorSampler3d_getInstance() {
    if (KslTypeColorSampler3d_instance == null)
      new KslTypeColorSampler3d();
    return KslTypeColorSampler3d_instance;
  }
  function KslTypeInt2() {
    KslTypeInt2_instance = this;
    KslIntType.call(this, 'int2');
  }
  KslTypeInt2.$metadata$ = objectMeta('KslTypeInt2', [KslVector2], undefined, undefined, undefined, KslIntType.prototype);
  var KslTypeInt2_instance;
  function KslTypeInt2_getInstance() {
    if (KslTypeInt2_instance == null)
      new KslTypeInt2();
    return KslTypeInt2_instance;
  }
  function KslTypeInt1() {
    KslTypeInt1_instance = this;
    KslIntType.call(this, 'int1');
  }
  KslTypeInt1.$metadata$ = objectMeta('KslTypeInt1', [KslScalar], undefined, undefined, undefined, KslIntType.prototype);
  var KslTypeInt1_instance;
  function KslTypeInt1_getInstance() {
    if (KslTypeInt1_instance == null)
      new KslTypeInt1();
    return KslTypeInt1_instance;
  }
  function KslTypeInt3() {
    KslTypeInt3_instance = this;
    KslIntType.call(this, 'int3');
  }
  KslTypeInt3.$metadata$ = objectMeta('KslTypeInt3', [KslVector3], undefined, undefined, undefined, KslIntType.prototype);
  var KslTypeInt3_instance;
  function KslTypeInt3_getInstance() {
    if (KslTypeInt3_instance == null)
      new KslTypeInt3();
    return KslTypeInt3_instance;
  }
  function KslType(typeName) {
    this.j2p_1 = typeName;
  }
  KslType.prototype.t3p = function () {
    return this.j2p_1;
  };
  KslType.prototype.toString = function () {
    return this.j2p_1;
  };
  KslType.$metadata$ = classMeta('KslType');
  function KslTypeInt4() {
    KslTypeInt4_instance = this;
    KslIntType.call(this, 'int4');
  }
  KslTypeInt4.$metadata$ = objectMeta('KslTypeInt4', [KslVector4], undefined, undefined, undefined, KslIntType.prototype);
  var KslTypeInt4_instance;
  function KslTypeInt4_getInstance() {
    if (KslTypeInt4_instance == null)
      new KslTypeInt4();
    return KslTypeInt4_instance;
  }
  function KslTypeMat2() {
    KslTypeMat2_instance = this;
    KslFloatType.call(this, 'mat2');
  }
  KslTypeMat2.$metadata$ = objectMeta('KslTypeMat2', [KslMatrix], undefined, undefined, undefined, KslFloatType.prototype);
  var KslTypeMat2_instance;
  function KslTypeMat2_getInstance() {
    if (KslTypeMat2_instance == null)
      new KslTypeMat2();
    return KslTypeMat2_instance;
  }
  function KslTypeMat3() {
    KslTypeMat3_instance = this;
    KslFloatType.call(this, 'mat3');
  }
  KslTypeMat3.$metadata$ = objectMeta('KslTypeMat3', [KslMatrix], undefined, undefined, undefined, KslFloatType.prototype);
  var KslTypeMat3_instance;
  function KslTypeMat3_getInstance() {
    if (KslTypeMat3_instance == null)
      new KslTypeMat3();
    return KslTypeMat3_instance;
  }
  function KslTypeColorSampler1d() {
    KslTypeColorSampler1d_instance = this;
    KslTypeColorSampler.call(this, 'sampler1d');
  }
  KslTypeColorSampler1d.$metadata$ = objectMeta('KslTypeColorSampler1d', [KslTypeSampler1d], undefined, undefined, undefined, KslTypeColorSampler.prototype);
  var KslTypeColorSampler1d_instance;
  function KslTypeColorSampler1d_getInstance() {
    if (KslTypeColorSampler1d_instance == null)
      new KslTypeColorSampler1d();
    return KslTypeColorSampler1d_instance;
  }
  function KslTypeColorSamplerCube() {
    KslTypeColorSamplerCube_instance = this;
    KslTypeColorSampler.call(this, 'samplerCube');
  }
  KslTypeColorSamplerCube.$metadata$ = objectMeta('KslTypeColorSamplerCube', [KslTypeSamplerCube], undefined, undefined, undefined, KslTypeColorSampler.prototype);
  var KslTypeColorSamplerCube_instance;
  function KslTypeColorSamplerCube_getInstance() {
    if (KslTypeColorSamplerCube_instance == null)
      new KslTypeColorSamplerCube();
    return KslTypeColorSamplerCube_instance;
  }
  function KslTypeDepthSampler2d() {
    KslTypeDepthSampler2d_instance = this;
    KslTypeDepthSampler.call(this, 'depthSampler2d');
  }
  KslTypeDepthSampler2d.$metadata$ = objectMeta('KslTypeDepthSampler2d', [KslTypeSampler2d], undefined, undefined, undefined, KslTypeDepthSampler.prototype);
  var KslTypeDepthSampler2d_instance;
  function KslTypeDepthSampler2d_getInstance() {
    if (KslTypeDepthSampler2d_instance == null)
      new KslTypeDepthSampler2d();
    return KslTypeDepthSampler2d_instance;
  }
  function KslTypeDepthSamplerCube() {
    KslTypeDepthSamplerCube_instance = this;
    KslTypeDepthSampler.call(this, 'depthSamplerCube');
  }
  KslTypeDepthSamplerCube.$metadata$ = objectMeta('KslTypeDepthSamplerCube', [KslTypeSamplerCube], undefined, undefined, undefined, KslTypeDepthSampler.prototype);
  var KslTypeDepthSamplerCube_instance;
  function KslTypeDepthSamplerCube_getInstance() {
    if (KslTypeDepthSamplerCube_instance == null)
      new KslTypeDepthSamplerCube();
    return KslTypeDepthSamplerCube_instance;
  }
  function KslScalar() {
  }
  KslScalar.$metadata$ = interfaceMeta('KslScalar');
  function KslVector() {
  }
  KslVector.$metadata$ = interfaceMeta('KslVector');
  function KslTypeArray() {
  }
  KslTypeArray.prototype.v3p = function () {
    return this.l2p_1;
  };
  KslTypeArray.$metadata$ = classMeta('KslTypeArray', undefined, undefined, undefined, undefined, KslType.prototype);
  function KslFloatType(typeName) {
    KslNumericType.call(this, typeName);
  }
  KslFloatType.$metadata$ = classMeta('KslFloatType', undefined, undefined, undefined, undefined, KslNumericType.prototype);
  function KslVector2() {
  }
  KslVector2.$metadata$ = interfaceMeta('KslVector2', [KslVector]);
  function KslMatrix() {
  }
  KslMatrix.$metadata$ = interfaceMeta('KslMatrix');
  function KslVector4() {
  }
  KslVector4.$metadata$ = interfaceMeta('KslVector4', [KslVector]);
  function KslVector3() {
  }
  KslVector3.$metadata$ = interfaceMeta('KslVector3', [KslVector]);
  function KslTypeColorSampler(typeName) {
    KslTypeSampler.call(this, typeName);
  }
  KslTypeColorSampler.$metadata$ = classMeta('KslTypeColorSampler', undefined, undefined, undefined, undefined, KslTypeSampler.prototype);
  function KslTypeSampler2d() {
  }
  KslTypeSampler2d.$metadata$ = interfaceMeta('KslTypeSampler2d');
  function KslTypeSampler3d() {
  }
  KslTypeSampler3d.$metadata$ = interfaceMeta('KslTypeSampler3d');
  function KslIntType(typeName) {
    KslNumericType.call(this, typeName);
  }
  KslIntType.$metadata$ = classMeta('KslIntType', undefined, undefined, undefined, undefined, KslNumericType.prototype);
  function KslBoolType(typeName) {
    KslType.call(this, typeName);
  }
  KslBoolType.$metadata$ = classMeta('KslBoolType', undefined, undefined, undefined, undefined, KslType.prototype);
  function KslNumericType(typeName) {
    KslType.call(this, typeName);
  }
  KslNumericType.$metadata$ = classMeta('KslNumericType', undefined, undefined, undefined, undefined, KslType.prototype);
  function KslTypeSampler(typeName) {
    KslType.call(this, typeName);
  }
  KslTypeSampler.$metadata$ = classMeta('KslTypeSampler', undefined, undefined, undefined, undefined, KslType.prototype);
  function KslTypeVoid() {
    KslTypeVoid_instance = this;
    KslType.call(this, 'void');
  }
  KslTypeVoid.$metadata$ = objectMeta('KslTypeVoid', undefined, undefined, undefined, undefined, KslType.prototype);
  var KslTypeVoid_instance;
  function KslTypeVoid_getInstance() {
    if (KslTypeVoid_instance == null)
      new KslTypeVoid();
    return KslTypeVoid_instance;
  }
  function KslTypeSampler1d() {
  }
  KslTypeSampler1d.$metadata$ = interfaceMeta('KslTypeSampler1d');
  function KslTypeSamplerCube() {
  }
  KslTypeSamplerCube.$metadata$ = interfaceMeta('KslTypeSamplerCube');
  function KslTypeDepthSampler(typeName) {
    KslTypeSampler.call(this, typeName);
  }
  KslTypeDepthSampler.$metadata$ = classMeta('KslTypeDepthSampler', undefined, undefined, undefined, undefined, KslTypeSampler.prototype);
  function KslTypeColorSampler2dArray() {
    KslTypeColorSampler2dArray_instance = this;
    KslTypeColorSampler.call(this, 'sampler2dArray');
  }
  KslTypeColorSampler2dArray.$metadata$ = objectMeta('KslTypeColorSampler2dArray', [KslTypeSampler2dArray], undefined, undefined, undefined, KslTypeColorSampler.prototype);
  var KslTypeColorSampler2dArray_instance;
  function KslTypeColorSampler2dArray_getInstance() {
    if (KslTypeColorSampler2dArray_instance == null)
      new KslTypeColorSampler2dArray();
    return KslTypeColorSampler2dArray_instance;
  }
  function KslTypeColorSamplerCubeArray() {
    KslTypeColorSamplerCubeArray_instance = this;
    KslTypeColorSampler.call(this, 'samplerCubeArray');
  }
  KslTypeColorSamplerCubeArray.$metadata$ = objectMeta('KslTypeColorSamplerCubeArray', [KslTypeSamplerCubeArray], undefined, undefined, undefined, KslTypeColorSampler.prototype);
  var KslTypeColorSamplerCubeArray_instance;
  function KslTypeColorSamplerCubeArray_getInstance() {
    if (KslTypeColorSamplerCubeArray_instance == null)
      new KslTypeColorSamplerCubeArray();
    return KslTypeColorSamplerCubeArray_instance;
  }
  function KslTypeUint1() {
    KslTypeUint1_instance = this;
    KslIntType.call(this, 'uint1');
  }
  KslTypeUint1.$metadata$ = objectMeta('KslTypeUint1', [KslScalar], undefined, undefined, undefined, KslIntType.prototype);
  var KslTypeUint1_instance;
  function KslTypeUint1_getInstance() {
    if (KslTypeUint1_instance == null)
      new KslTypeUint1();
    return KslTypeUint1_instance;
  }
  function KslTypeUint2() {
    KslTypeUint2_instance = this;
    KslIntType.call(this, 'uint2');
  }
  KslTypeUint2.$metadata$ = objectMeta('KslTypeUint2', [KslVector2], undefined, undefined, undefined, KslIntType.prototype);
  var KslTypeUint2_instance;
  function KslTypeUint2_getInstance() {
    if (KslTypeUint2_instance == null)
      new KslTypeUint2();
    return KslTypeUint2_instance;
  }
  function KslTypeUint3() {
    KslTypeUint3_instance = this;
    KslIntType.call(this, 'uint3');
  }
  KslTypeUint3.$metadata$ = objectMeta('KslTypeUint3', [KslVector3], undefined, undefined, undefined, KslIntType.prototype);
  var KslTypeUint3_instance;
  function KslTypeUint3_getInstance() {
    if (KslTypeUint3_instance == null)
      new KslTypeUint3();
    return KslTypeUint3_instance;
  }
  function KslTypeUint4() {
    KslTypeUint4_instance = this;
    KslIntType.call(this, 'uint4');
  }
  KslTypeUint4.$metadata$ = objectMeta('KslTypeUint4', [KslVector4], undefined, undefined, undefined, KslIntType.prototype);
  var KslTypeUint4_instance;
  function KslTypeUint4_getInstance() {
    if (KslTypeUint4_instance == null)
      new KslTypeUint4();
    return KslTypeUint4_instance;
  }
  function KslTypeBool1() {
    KslTypeBool1_instance = this;
    KslBoolType.call(this, 'bool1');
  }
  KslTypeBool1.$metadata$ = objectMeta('KslTypeBool1', [KslScalar], undefined, undefined, undefined, KslBoolType.prototype);
  var KslTypeBool1_instance;
  function KslTypeBool1_getInstance() {
    if (KslTypeBool1_instance == null)
      new KslTypeBool1();
    return KslTypeBool1_instance;
  }
  function KslTypeBool2() {
    KslTypeBool2_instance = this;
    KslBoolType.call(this, 'bool2');
  }
  KslTypeBool2.$metadata$ = objectMeta('KslTypeBool2', [KslVector2], undefined, undefined, undefined, KslBoolType.prototype);
  var KslTypeBool2_instance;
  function KslTypeBool2_getInstance() {
    if (KslTypeBool2_instance == null)
      new KslTypeBool2();
    return KslTypeBool2_instance;
  }
  function KslTypeBool3() {
    KslTypeBool3_instance = this;
    KslBoolType.call(this, 'bool3');
  }
  KslTypeBool3.$metadata$ = objectMeta('KslTypeBool3', [KslVector3], undefined, undefined, undefined, KslBoolType.prototype);
  var KslTypeBool3_instance;
  function KslTypeBool3_getInstance() {
    if (KslTypeBool3_instance == null)
      new KslTypeBool3();
    return KslTypeBool3_instance;
  }
  function KslTypeBool4() {
    KslTypeBool4_instance = this;
    KslBoolType.call(this, 'bool4');
  }
  KslTypeBool4.$metadata$ = objectMeta('KslTypeBool4', [KslVector4], undefined, undefined, undefined, KslBoolType.prototype);
  var KslTypeBool4_instance;
  function KslTypeBool4_getInstance() {
    if (KslTypeBool4_instance == null)
      new KslTypeBool4();
    return KslTypeBool4_instance;
  }
  function KslTypeDepthSampler2dArray() {
    KslTypeDepthSampler2dArray_instance = this;
    KslTypeDepthSampler.call(this, 'depthSampler2dArray');
  }
  KslTypeDepthSampler2dArray.$metadata$ = objectMeta('KslTypeDepthSampler2dArray', [KslTypeSampler2dArray], undefined, undefined, undefined, KslTypeDepthSampler.prototype);
  var KslTypeDepthSampler2dArray_instance;
  function KslTypeDepthSampler2dArray_getInstance() {
    if (KslTypeDepthSampler2dArray_instance == null)
      new KslTypeDepthSampler2dArray();
    return KslTypeDepthSampler2dArray_instance;
  }
  function KslTypeDepthSamplerCubeArray() {
    KslTypeDepthSamplerCubeArray_instance = this;
    KslTypeDepthSampler.call(this, 'depthSamplerCubeArray');
  }
  KslTypeDepthSamplerCubeArray.$metadata$ = objectMeta('KslTypeDepthSamplerCubeArray', [KslTypeSamplerCubeArray], undefined, undefined, undefined, KslTypeDepthSampler.prototype);
  var KslTypeDepthSamplerCubeArray_instance;
  function KslTypeDepthSamplerCubeArray_getInstance() {
    if (KslTypeDepthSamplerCubeArray_instance == null)
      new KslTypeDepthSamplerCubeArray();
    return KslTypeDepthSamplerCubeArray_instance;
  }
  function KslTypeSampler2dArray() {
  }
  KslTypeSampler2dArray.$metadata$ = interfaceMeta('KslTypeSampler2dArray');
  function KslTypeSamplerCubeArray() {
  }
  KslTypeSamplerCubeArray.$metadata$ = interfaceMeta('KslTypeSamplerCubeArray');
  function KslUniformMatrix(value) {
    KslUniform_init_$Init$(value, 0, 2, null, this);
  }
  KslUniformMatrix.$metadata$ = classMeta('KslUniformMatrix', [KslMatrixExpression], undefined, undefined, undefined, KslUniform.prototype);
  function KslUniformScalar(value) {
    KslUniform_init_$Init$(value, 0, 2, null, this);
  }
  KslUniformScalar.$metadata$ = classMeta('KslUniformScalar', [KslScalarExpression], undefined, undefined, undefined, KslUniform.prototype);
  function KslUniform_init_$Init$(value, arraySize, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      arraySize = -1;
    KslUniform.call($this, value, arraySize);
    return $this;
  }
  function KslUniform_init_$Create$(value, arraySize, $mask0, $marker) {
    return KslUniform_init_$Init$(value, arraySize, $mask0, $marker, Object.create(KslUniform.prototype));
  }
  function KslUniform(value, arraySize) {
    this.f2p_1 = value;
    this.g2p_1 = arraySize;
  }
  KslUniform.prototype.n2 = function () {
    return this.f2p_1;
  };
  KslUniform.prototype.f3i = function () {
    return this.g2p_1;
  };
  KslUniform.prototype.i2p = function () {
    return this.f2p_1.i2p();
  };
  KslUniform.prototype.o3i = function () {
    return this.f2p_1.o3i();
  };
  KslUniform.prototype.x39 = function (generator) {
    return this.f2p_1.x39(generator);
  };
  KslUniform.prototype.j37 = function () {
    return this.f2p_1.j37();
  };
  KslUniform.prototype.il = function () {
    return this.n2().f3a();
  };
  KslUniform.$metadata$ = classMeta('KslUniform', [KslExpression]);
  function KslUniformVector(value) {
    KslUniform_init_$Init$(value, 0, 2, null, this);
  }
  KslUniformVector.$metadata$ = classMeta('KslUniformVector', [KslVectorExpression], undefined, undefined, undefined, KslUniform.prototype);
  function KslUniformBuffer_init_$Init$(name, program, isShared, $mask0, $marker, $this) {
    if (!(($mask0 & 4) === 0))
      isShared = false;
    KslUniformBuffer.call($this, name, program, isShared);
    return $this;
  }
  function KslUniformBuffer_init_$Create$(name, program, isShared, $mask0, $marker) {
    return KslUniformBuffer_init_$Init$(name, program, isShared, $mask0, $marker, Object.create(KslUniformBuffer.prototype));
  }
  function registerUniform($this, uniform) {
    {
      var tmp0_set = $this.k2o_1;
      var tmp1_set = uniform.il();
      tmp0_set.a(tmp1_set, uniform);
    }
    {
      var tmp2_forEach = $this.i2o_1.v2n_1;
      var tmp0_iterator = tmp2_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          var tmp0_this = element.s2o_1;
          {
            var tmp0_plusAssign = tmp0_this.w3k();
            var tmp1_plusAssign = uniform.n2();
            tmp0_plusAssign.b(tmp1_plusAssign);
          }
        }
      }
    }
  }
  function KslUniformBuffer(name, program, isShared) {
    this.h2o_1 = name;
    this.i2o_1 = program;
    this.j2o_1 = isShared;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$();
    }
    tmp.k2o_1 = tmp$ret$0;
  }
  KslUniformBuffer.prototype.il = function () {
    return this.h2o_1;
  };
  KslUniformBuffer.prototype.w3p = function () {
    return this.j2o_1;
  };
  KslUniformBuffer.prototype.v2w = function () {
    return this.k2o_1;
  };
  KslUniformBuffer.prototype.l3m = function (name) {
    var tmp$ret$2;
    {
      var tmp0_elvis_lhs = this.k2o_1.b3(name);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = new KslUniformScalar(new KslVarScalar(name, KslTypeFloat1_getInstance(), false));
          }
          var tmp0_also = tmp$ret$0;
          {
          }
          {
            registerUniform(this, tmp0_also);
          }
          tmp$ret$1 = tmp0_also;
        }
        tmp = tmp$ret$1;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var uniform = tmp;
      if (!(uniform instanceof KslUniformScalar)) {
        throw IllegalStateException_init_$Create$('Existing uniform with name "' + name + '" has not the expected type');
      }
      tmp$ret$2 = uniform;
    }
    return tmp$ret$2;
  };
  KslUniformBuffer.prototype.m3m = function (name) {
    var tmp$ret$2;
    {
      var tmp0_elvis_lhs = this.k2o_1.b3(name);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = new KslUniformVector(new KslVarVector(name, KslTypeFloat2_getInstance(), false));
          }
          var tmp0_also = tmp$ret$0;
          {
          }
          {
            registerUniform(this, tmp0_also);
          }
          tmp$ret$1 = tmp0_also;
        }
        tmp = tmp$ret$1;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var uniform = tmp;
      if (!(uniform instanceof KslUniformVector)) {
        throw IllegalStateException_init_$Create$('Existing uniform with name "' + name + '" has not the expected type');
      }
      tmp$ret$2 = uniform;
    }
    return tmp$ret$2;
  };
  KslUniformBuffer.prototype.p31 = function (name) {
    var tmp$ret$2;
    {
      var tmp0_elvis_lhs = this.k2o_1.b3(name);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = new KslUniformVector(new KslVarVector(name, KslTypeFloat4_getInstance(), false));
          }
          var tmp0_also = tmp$ret$0;
          {
          }
          {
            registerUniform(this, tmp0_also);
          }
          tmp$ret$1 = tmp0_also;
        }
        tmp = tmp$ret$1;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var uniform = tmp;
      if (!(uniform instanceof KslUniformVector)) {
        throw IllegalStateException_init_$Create$('Existing uniform with name "' + name + '" has not the expected type');
      }
      tmp$ret$2 = uniform;
    }
    return tmp$ret$2;
  };
  KslUniformBuffer.prototype.n3m = function (name) {
    var tmp$ret$2;
    {
      var tmp0_elvis_lhs = this.k2o_1.b3(name);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = new KslUniformScalar(new KslVarScalar(name, KslTypeInt1_getInstance(), false));
          }
          var tmp0_also = tmp$ret$0;
          {
          }
          {
            registerUniform(this, tmp0_also);
          }
          tmp$ret$1 = tmp0_also;
        }
        tmp = tmp$ret$1;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var uniform = tmp;
      if (!(uniform instanceof KslUniformScalar)) {
        throw IllegalStateException_init_$Create$('Existing uniform with name "' + name + '" has not the expected type');
      }
      tmp$ret$2 = uniform;
    }
    return tmp$ret$2;
  };
  KslUniformBuffer.prototype.o3m = function (name) {
    var tmp$ret$2;
    {
      var tmp0_elvis_lhs = this.k2o_1.b3(name);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = new KslUniformVector(new KslVarVector(name, KslTypeInt2_getInstance(), false));
          }
          var tmp0_also = tmp$ret$0;
          {
          }
          {
            registerUniform(this, tmp0_also);
          }
          tmp$ret$1 = tmp0_also;
        }
        tmp = tmp$ret$1;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var uniform = tmp;
      if (!(uniform instanceof KslUniformVector)) {
        throw IllegalStateException_init_$Create$('Existing uniform with name "' + name + '" has not the expected type');
      }
      tmp$ret$2 = uniform;
    }
    return tmp$ret$2;
  };
  KslUniformBuffer.prototype.q31 = function (name) {
    var tmp$ret$2;
    {
      var tmp0_elvis_lhs = this.k2o_1.b3(name);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = new KslUniformMatrix(new KslVarMatrix(name, KslTypeMat4_getInstance(), false));
          }
          var tmp0_also = tmp$ret$0;
          {
          }
          {
            registerUniform(this, tmp0_also);
          }
          tmp$ret$1 = tmp0_also;
        }
        tmp = tmp$ret$1;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var uniform = tmp;
      if (!(uniform instanceof KslUniformMatrix)) {
        throw IllegalStateException_init_$Create$('Existing uniform with name "' + name + '" has not the expected type');
      }
      tmp$ret$2 = uniform;
    }
    return tmp$ret$2;
  };
  KslUniformBuffer.$metadata$ = classMeta('KslUniformBuffer');
  function KslValue(stateName, isMutable) {
    KslState.call(this, stateName);
    this.n3i_1 = isMutable;
  }
  KslValue.prototype.o3i = function () {
    return setOf(this.x3p());
  };
  KslValue.prototype.x39 = function (generator) {
    return generator.t3g(this);
  };
  KslValue.$metadata$ = classMeta('KslValue', [KslExpression], undefined, undefined, undefined, KslState.prototype);
  function KslValueFloat4_init_$Init$(x, y, z, w, $this) {
    KslValueFloat4.call($this, new KslValueFloat1(x), new KslValueFloat1(y), new KslValueFloat1(z), new KslValueFloat1(w));
    return $this;
  }
  function KslValueFloat4_init_$Create$(x, y, z, w) {
    return KslValueFloat4_init_$Init$(x, y, z, w, Object.create(KslValueFloat4.prototype));
  }
  function KslValueFloat4(x, y, z, w) {
    KslValueExpression.call(this, KslTypeFloat4_getInstance());
    this.z3p_1 = x;
    this.a3q_1 = y;
    this.b3q_1 = z;
    this.c3q_1 = w;
  }
  KslValueFloat4.prototype.o3i = function () {
    var tmp$ret$2;
    {
      var tmp0_flatMap = listOf([this.z3p_1, this.a3q_1, this.b3q_1, this.c3q_1]);
      var tmp$ret$1;
      {
        var tmp0_flatMapTo = ArrayList_init_$Create$_0();
        var tmp0_iterator = tmp0_flatMap.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          var tmp$ret$0;
          {
            tmp$ret$0 = element.o3i();
          }
          var list = tmp$ret$0;
          addAll(tmp0_flatMapTo, list);
        }
        tmp$ret$1 = tmp0_flatMapTo;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return toSet(tmp$ret$2);
  };
  KslValueFloat4.prototype.x39 = function (generator) {
    return generator.i3a([this.z3p_1, this.a3q_1, this.b3q_1, this.c3q_1]);
  };
  KslValueFloat4.prototype.j37 = function () {
    return 'vec4(' + this.z3p_1.j37() + ', ' + this.a3q_1.j37() + ', ' + this.b3q_1.j37() + ', ' + this.c3q_1.j37() + ')';
  };
  KslValueFloat4.$metadata$ = classMeta('KslValueFloat4', [KslVectorExpression], undefined, undefined, undefined, KslValueExpression.prototype);
  function KslValueFloat1(value) {
    KslValueExpression.call(this, KslTypeFloat1_getInstance());
    this.f3q_1 = value;
  }
  KslValueFloat1.prototype.o3i = function () {
    return emptySet();
  };
  KslValueFloat1.prototype.x39 = function (generator) {
    return generator.s3g(this.f3q_1);
  };
  KslValueFloat1.prototype.j37 = function () {
    return '' + this.f3q_1;
  };
  KslValueFloat1.$metadata$ = classMeta('KslValueFloat1', [KslScalarExpression], undefined, undefined, undefined, KslValueExpression.prototype);
  function KslValueFloat2_init_$Init$(x, y, $this) {
    KslValueFloat2.call($this, new KslValueFloat1(x), new KslValueFloat1(y));
    return $this;
  }
  function KslValueFloat2_init_$Create$(x, y) {
    return KslValueFloat2_init_$Init$(x, y, Object.create(KslValueFloat2.prototype));
  }
  function KslValueFloat2(x, y) {
    KslValueExpression.call(this, KslTypeFloat2_getInstance());
    this.h3q_1 = x;
    this.i3q_1 = y;
  }
  KslValueFloat2.prototype.o3i = function () {
    var tmp$ret$2;
    {
      var tmp0_flatMap = listOf([this.h3q_1, this.i3q_1]);
      var tmp$ret$1;
      {
        var tmp0_flatMapTo = ArrayList_init_$Create$_0();
        var tmp0_iterator = tmp0_flatMap.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          var tmp$ret$0;
          {
            tmp$ret$0 = element.o3i();
          }
          var list = tmp$ret$0;
          addAll(tmp0_flatMapTo, list);
        }
        tmp$ret$1 = tmp0_flatMapTo;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return toSet(tmp$ret$2);
  };
  KslValueFloat2.prototype.x39 = function (generator) {
    return generator.i3a([this.h3q_1, this.i3q_1]);
  };
  KslValueFloat2.prototype.j37 = function () {
    return 'vec2(' + this.h3q_1.j37() + ', ' + this.i3q_1.j37() + ')';
  };
  KslValueFloat2.$metadata$ = classMeta('KslValueFloat2', [KslVectorExpression], undefined, undefined, undefined, KslValueExpression.prototype);
  function KslValueInt3(x, y, z) {
    KslValueExpression.call(this, KslTypeInt3_getInstance());
    this.k3q_1 = x;
    this.l3q_1 = y;
    this.m3q_1 = z;
  }
  KslValueInt3.prototype.o3i = function () {
    var tmp$ret$2;
    {
      var tmp0_flatMap = listOf([this.k3q_1, this.l3q_1, this.m3q_1]);
      var tmp$ret$1;
      {
        var tmp0_flatMapTo = ArrayList_init_$Create$_0();
        var tmp0_iterator = tmp0_flatMap.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          var tmp$ret$0;
          {
            tmp$ret$0 = element.o3i();
          }
          var list = tmp$ret$0;
          addAll(tmp0_flatMapTo, list);
        }
        tmp$ret$1 = tmp0_flatMapTo;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return toSet(tmp$ret$2);
  };
  KslValueInt3.prototype.x39 = function (generator) {
    return generator.j3a([this.k3q_1, this.l3q_1, this.m3q_1]);
  };
  KslValueInt3.prototype.j37 = function () {
    return 'ivec3(' + this.k3q_1.j37() + ', ' + this.l3q_1.j37() + ', ' + this.m3q_1.j37() + ')';
  };
  KslValueInt3.$metadata$ = classMeta('KslValueInt3', [KslVectorExpression], undefined, undefined, undefined, KslValueExpression.prototype);
  function KslValueInt1(value) {
    KslValueExpression.call(this, KslTypeInt1_getInstance());
    this.o3q_1 = value;
  }
  KslValueInt1.prototype.o3i = function () {
    return emptySet();
  };
  KslValueInt1.prototype.x39 = function (generator) {
    return generator.q3g(this.o3q_1);
  };
  KslValueInt1.prototype.j37 = function () {
    return '' + this.o3q_1;
  };
  KslValueInt1.$metadata$ = classMeta('KslValueInt1', [KslScalarExpression], undefined, undefined, undefined, KslValueExpression.prototype);
  function KslValueFloat3_init_$Init$(x, y, z, $this) {
    KslValueFloat3.call($this, new KslValueFloat1(x), new KslValueFloat1(y), new KslValueFloat1(z));
    return $this;
  }
  function KslValueFloat3_init_$Create$(x, y, z) {
    return KslValueFloat3_init_$Init$(x, y, z, Object.create(KslValueFloat3.prototype));
  }
  function KslValueFloat3(x, y, z) {
    KslValueExpression.call(this, KslTypeFloat3_getInstance());
    this.q3q_1 = x;
    this.r3q_1 = y;
    this.s3q_1 = z;
  }
  KslValueFloat3.prototype.o3i = function () {
    var tmp$ret$2;
    {
      var tmp0_flatMap = listOf([this.q3q_1, this.r3q_1, this.s3q_1]);
      var tmp$ret$1;
      {
        var tmp0_flatMapTo = ArrayList_init_$Create$_0();
        var tmp0_iterator = tmp0_flatMap.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          var tmp$ret$0;
          {
            tmp$ret$0 = element.o3i();
          }
          var list = tmp$ret$0;
          addAll(tmp0_flatMapTo, list);
        }
        tmp$ret$1 = tmp0_flatMapTo;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return toSet(tmp$ret$2);
  };
  KslValueFloat3.prototype.x39 = function (generator) {
    return generator.i3a([this.q3q_1, this.r3q_1, this.s3q_1]);
  };
  KslValueFloat3.prototype.j37 = function () {
    return 'vec3(' + this.q3q_1.j37() + ', ' + this.r3q_1.j37() + ', ' + this.s3q_1.j37() + ')';
  };
  KslValueFloat3.$metadata$ = classMeta('KslValueFloat3', [KslVectorExpression], undefined, undefined, undefined, KslValueExpression.prototype);
  function KslValueUint1(value) {
    KslValueExpression.call(this, KslTypeUint1_getInstance());
    this.u3q_1 = value;
  }
  KslValueUint1.prototype.o3i = function () {
    return emptySet();
  };
  KslValueUint1.prototype.x39 = function (generator) {
    return generator.r3g(this.u3q_1);
  };
  KslValueUint1.prototype.j37 = function () {
    return '' + new UInt(this.u3q_1);
  };
  KslValueUint1.$metadata$ = classMeta('KslValueUint1', [KslScalarExpression], undefined, undefined, undefined, KslValueExpression.prototype);
  function KslValueExpression(expressionType) {
    this.d3q_1 = expressionType;
  }
  KslValueExpression.prototype.i2p = function () {
    return this.d3q_1;
  };
  KslValueExpression.$metadata$ = classMeta('KslValueExpression', [KslExpression]);
  function KslVarMatrix(name, type, isMutable) {
    KslVar.call(this, name, type, isMutable);
  }
  KslVarMatrix.$metadata$ = classMeta('KslVarMatrix', [KslMatrixExpression], undefined, undefined, undefined, KslVar.prototype);
  function KslVarVector(name, type, isMutable) {
    KslVar.call(this, name, type, isMutable);
  }
  KslVarVector.$metadata$ = classMeta('KslVarVector', [KslVectorExpression], undefined, undefined, undefined, KslVar.prototype);
  function KslVarScalar(name, type, isMutable) {
    KslVar.call(this, name, type, isMutable);
  }
  KslVarScalar.$metadata$ = classMeta('KslVarScalar', [KslScalarExpression], undefined, undefined, undefined, KslVar.prototype);
  function KslVar(name, type, isMutable) {
    KslValue.call(this, name, isMutable);
    this.b3a_1 = type;
    this.c3a_1 = type;
  }
  KslVar.prototype.i2p = function () {
    return this.b3a_1;
  };
  KslVar.prototype.i3i = function () {
    return this;
  };
  KslVar.prototype.a3d = function (generator) {
    return generator.z3g(this);
  };
  KslVar.$metadata$ = classMeta('KslVar', [KslAssignable], undefined, undefined, undefined, KslValue.prototype);
  function KslVectorAccessorVector(vector, components, type) {
    KslVectorAccessor.call(this, vector, components, type, type.u3p());
  }
  KslVectorAccessorVector.$metadata$ = classMeta('KslVectorAccessorVector', [KslVectorExpression], undefined, undefined, undefined, KslVectorAccessor.prototype);
  function KslVectorAccessorScalar(vector, components, type) {
    KslVectorAccessor.call(this, vector, components, type, 1);
  }
  KslVectorAccessorScalar.$metadata$ = classMeta('KslVectorAccessorScalar', [KslScalarExpression], undefined, undefined, undefined, KslVectorAccessor.prototype);
  function get_a(_this__u8e3s4) {
    return new KslVectorAccessorScalar(_this__u8e3s4, 'a', scalarTypeOf(_this__u8e3s4));
  }
  function get_r(_this__u8e3s4) {
    return new KslVectorAccessorScalar(_this__u8e3s4, 'r', scalarTypeOf(_this__u8e3s4));
  }
  function get_x(_this__u8e3s4) {
    return new KslVectorAccessorScalar(_this__u8e3s4, 'x', scalarTypeOf(_this__u8e3s4));
  }
  function get_y(_this__u8e3s4) {
    return new KslVectorAccessorScalar(_this__u8e3s4, 'y', scalarTypeOf(_this__u8e3s4));
  }
  function float3(_this__u8e3s4, components) {
    return new KslVectorAccessorVector(_this__u8e3s4, components, KslTypeFloat3_getInstance());
  }
  function get_z(_this__u8e3s4) {
    return new KslVectorAccessorScalar(_this__u8e3s4, 'z', scalarTypeOf(_this__u8e3s4));
  }
  function checkComponents($this, components, inputDim) {
    var tmp$ret$0;
    {
      var tmp0_matches = Regex_init_$Create$('[xyzwrgba]+');
      tmp$ret$0 = tmp0_matches.bb(components);
    }
    if (!tmp$ret$0) {
      throw IllegalArgumentException_init_$Create$('invalid swizzle components requested: ' + components + ' (supported: xyzw, rgba)');
    }
    var reqDim = 1;
    {
      var indexedObject = components;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var element = charSequenceGet(indexedObject, inductionVariable);
        inductionVariable = inductionVariable + 1 | 0;
        {
          var tmp0_subject = element;
          var tmp;
          if (equals(new Char(tmp0_subject), new Char(_Char___init__impl__6a9atx(121)))) {
            var tmp$ret$1;
            {
              var tmp0_max = reqDim;
              tmp$ret$1 = Math.max(tmp0_max, 2);
            }
            tmp = tmp$ret$1;
          } else if (equals(new Char(tmp0_subject), new Char(_Char___init__impl__6a9atx(122)))) {
            var tmp$ret$2;
            {
              var tmp1_max = reqDim;
              tmp$ret$2 = Math.max(tmp1_max, 3);
            }
            tmp = tmp$ret$2;
          } else if (equals(new Char(tmp0_subject), new Char(_Char___init__impl__6a9atx(119)))) {
            var tmp$ret$3;
            {
              var tmp2_max = reqDim;
              tmp$ret$3 = Math.max(tmp2_max, 4);
            }
            tmp = tmp$ret$3;
          } else if (equals(new Char(tmp0_subject), new Char(_Char___init__impl__6a9atx(103)))) {
            var tmp$ret$4;
            {
              var tmp3_max = reqDim;
              tmp$ret$4 = Math.max(tmp3_max, 2);
            }
            tmp = tmp$ret$4;
          } else if (equals(new Char(tmp0_subject), new Char(_Char___init__impl__6a9atx(98)))) {
            var tmp$ret$5;
            {
              var tmp4_max = reqDim;
              tmp$ret$5 = Math.max(tmp4_max, 3);
            }
            tmp = tmp$ret$5;
          } else if (equals(new Char(tmp0_subject), new Char(_Char___init__impl__6a9atx(97)))) {
            var tmp$ret$6;
            {
              var tmp5_max = reqDim;
              tmp$ret$6 = Math.max(tmp5_max, 4);
            }
            tmp = tmp$ret$6;
          } else {
            tmp = reqDim;
          }
          reqDim = tmp;
        }
      }
    }
    if (reqDim > inputDim) {
      throw IllegalArgumentException_init_$Create$('requested swizzle requires ' + reqDim + ' dimensions but input expression has only ' + inputDim);
    }
  }
  function KslVectorAccessor(vector, components, type, expectedLength) {
    this.c3h_1 = vector;
    this.d3h_1 = components;
    this.e3h_1 = type;
    this.f3h_1 = this.e3h_1;
    this.g3h_1 = this.e3h_1;
    if (!(this.d3h_1.length === expectedLength)) {
      throw IllegalArgumentException_init_$Create$('invalid swizzle length: ' + this.d3h_1.length + ' != ' + expectedLength);
    }
    var tmp = this.c3h_1.i2p();
    checkComponents(this, this.d3h_1, (isInterface(tmp, KslVector) ? tmp : THROW_CCE()).u3p());
  }
  KslVectorAccessor.prototype.i2p = function () {
    return this.f3h_1;
  };
  KslVectorAccessor.prototype.i3i = function () {
    var tmp = this.c3h_1;
    var tmp1_elvis_lhs = tmp instanceof KslValue ? tmp : null;
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      var tmp_1 = this.c3h_1;
      var tmp0_safe_receiver = isInterface(tmp_1, KslAssignable) ? tmp_1 : null;
      tmp_0 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.i3i();
    } else {
      tmp_0 = tmp1_elvis_lhs;
    }
    return tmp_0;
  };
  KslVectorAccessor.prototype.o3i = function () {
    return this.c3h_1.o3i();
  };
  KslVectorAccessor.prototype.a3d = function (generator) {
    return generator.a3h(this);
  };
  KslVectorAccessor.prototype.x39 = function (generator) {
    return generator.u3g(this);
  };
  KslVectorAccessor.prototype.j37 = function () {
    return this.c3h_1.j37() + '.' + this.d3h_1;
  };
  KslVectorAccessor.$metadata$ = classMeta('KslVectorAccessor', [KslExpression, KslAssignable]);
  function scalarTypeOf(expr) {
    var tmp0_subject = expr.i2p();
    var tmp;
    if (tmp0_subject instanceof KslFloatType) {
      var tmp_0 = KslTypeFloat1_getInstance();
      tmp = (tmp_0 instanceof KslType ? isInterface(tmp_0, KslScalar) : false) ? tmp_0 : THROW_CCE();
    } else {
      if (tmp0_subject instanceof KslIntType) {
        var tmp_1 = KslTypeInt1_getInstance();
        tmp = (tmp_1 instanceof KslType ? isInterface(tmp_1, KslScalar) : false) ? tmp_1 : THROW_CCE();
      } else {
        if (tmp0_subject instanceof KslBoolType) {
          var tmp_2 = KslTypeBool1_getInstance();
          tmp = (tmp_2 instanceof KslType ? isInterface(tmp_2, KslScalar) : false) ? tmp_2 : THROW_CCE();
        } else {
          throw IllegalStateException_init_$Create$('invalid vector expression type: ' + expr.i2p());
        }
      }
    }
    return tmp;
  }
  function float2(_this__u8e3s4, components) {
    return new KslVectorAccessorVector(_this__u8e3s4, components, KslTypeFloat2_getInstance());
  }
  function get_xy(_this__u8e3s4) {
    return float2(_this__u8e3s4, 'xy');
  }
  function get_rgb(_this__u8e3s4) {
    return float3(_this__u8e3s4, 'rgb');
  }
  function get_zw(_this__u8e3s4) {
    return float2(_this__u8e3s4, 'zw');
  }
  function get_xy_0(_this__u8e3s4) {
    return float2(_this__u8e3s4, 'xy');
  }
  function KslVertexAttributeVector(value, inputRate) {
    KslVertexAttribute.call(this, value, inputRate);
  }
  KslVertexAttributeVector.$metadata$ = classMeta('KslVertexAttributeVector', [KslVectorExpression], undefined, undefined, undefined, KslVertexAttribute.prototype);
  function KslVertexAttributeMatrix(value, inputRate) {
    KslVertexAttribute.call(this, value, inputRate);
  }
  KslVertexAttributeMatrix.$metadata$ = classMeta('KslVertexAttributeMatrix', [KslMatrixExpression], undefined, undefined, undefined, KslVertexAttribute.prototype);
  function KslVertexAttribute(value, inputRate) {
    this.a2t_1 = value;
    this.b2t_1 = inputRate;
    this.c2t_1 = -1;
  }
  KslVertexAttribute.prototype.n2 = function () {
    return this.a2t_1;
  };
  KslVertexAttribute.prototype.v3q = function () {
    return this.b2t_1;
  };
  KslVertexAttribute.prototype.i2p = function () {
    return this.a2t_1.i2p();
  };
  KslVertexAttribute.prototype.o3i = function () {
    return this.a2t_1.o3i();
  };
  KslVertexAttribute.prototype.x39 = function (generator) {
    return this.a2t_1.x39(generator);
  };
  KslVertexAttribute.prototype.j37 = function () {
    return this.a2t_1.j37();
  };
  KslVertexAttribute.prototype.o3p = function (_set____db54di) {
    this.c2t_1 = _set____db54di;
  };
  KslVertexAttribute.prototype.s3p = function () {
    return this.c2t_1;
  };
  KslVertexAttribute.prototype.il = function () {
    return this.a2t_1.f3a();
  };
  KslVertexAttribute.$metadata$ = classMeta('KslVertexAttribute', [KslExpression]);
  var KslInputRate_Vertex_instance;
  var KslInputRate_Instance_instance;
  var KslInputRate_entriesInitialized;
  function KslInputRate_initEntries() {
    if (KslInputRate_entriesInitialized)
      return Unit_getInstance();
    KslInputRate_entriesInitialized = true;
    KslInputRate_Vertex_instance = new KslInputRate('Vertex', 0);
    KslInputRate_Instance_instance = new KslInputRate('Instance', 1);
  }
  function KslInputRate(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  KslInputRate.$metadata$ = classMeta('KslInputRate', undefined, undefined, undefined, undefined, Enum.prototype);
  function KslInputRate_Vertex_getInstance() {
    KslInputRate_initEntries();
    return KslInputRate_Vertex_instance;
  }
  function KslInputRate_Instance_getInstance() {
    KslInputRate_initEntries();
    return KslInputRate_Instance_instance;
  }
  function KslHierarchy(globalScope) {
    this.d2x_1 = globalScope;
  }
  KslHierarchy.prototype.e2x = function () {
    println(this.d2x_1.j37());
  };
  KslHierarchy.$metadata$ = classMeta('KslHierarchy');
  function KslMutatedState(state, mutation) {
    this.p3i_1 = state;
    this.q3i_1 = mutation;
  }
  KslMutatedState.prototype.i18 = function () {
    return this.p3i_1;
  };
  KslMutatedState.prototype.w3q = function () {
    return this.q3i_1;
  };
  KslMutatedState.prototype.toString = function () {
    return this.p3i_1.d3a_1 + '@' + this.q3i_1;
  };
  KslMutatedState.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof KslMutatedState)
      other;
    else
      THROW_CCE();
    if (!equals(this.p3i_1, other.p3i_1))
      return false;
    if (!(this.q3i_1 === other.q3i_1))
      return false;
    return true;
  };
  KslMutatedState.prototype.hashCode = function () {
    var result = hashCode(this.p3i_1);
    result = imul(31, result) + this.q3i_1 | 0;
    return result;
  };
  KslMutatedState.$metadata$ = classMeta('KslMutatedState');
  function KslOp$dependenciesAndMutationsToString$lambda() {
    return function (it) {
      return it.toString();
    };
  }
  function KslOp$dependenciesAndMutationsToString$lambda_0() {
    return function (it) {
      return it.toString();
    };
  }
  function KslOp(opName, parentScope) {
    this.q33_1 = opName;
    this.r33_1 = parentScope;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$();
    }
    tmp.s33_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = LinkedHashMap_init_$Create$();
    }
    tmp_0.t33_1 = tmp$ret$1;
    var tmp_1 = this;
    var tmp$ret$2;
    {
      tmp$ret$2 = ArrayList_init_$Create$_0();
    }
    tmp_1.u33_1 = tmp$ret$2;
  }
  KslOp.prototype.v33 = function () {
    return this.q33_1;
  };
  KslOp.prototype.d37 = function () {
    return this.r33_1;
  };
  KslOp.prototype.e2p = function () {
    return this.s33_1;
  };
  KslOp.prototype.e37 = function () {
    return this.t33_1;
  };
  KslOp.prototype.f37 = function () {
    return this.u33_1;
  };
  KslOp.prototype.g37 = function (processorState) {
    var tmp$ret$0;
    $l$block_0: {
      var tmp0_all = this.s33_1.d3();
      var tmp;
      if (isInterface(tmp0_all, Collection)) {
        tmp = tmp0_all.q();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_all.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        var tmp$ret$1;
        {
          tmp$ret$1 = processorState.y3q(element);
        }
        if (!tmp$ret$1) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  KslOp.prototype.h37 = function (mutation) {
    var tmp0_safe_receiver = this.s33_1.b3(mutation.z3q_1);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          tmp$ret$0 = mutation.b3r_1 > tmp0_safe_receiver.q3i_1;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    var tmp1_elvis_lhs = tmp;
    return tmp1_elvis_lhs == null ? false : tmp1_elvis_lhs;
  };
  KslOp.prototype.i37 = function (dep) {
    {
      var tmp0_set = this.s33_1;
      var tmp1_set = dep.p3i_1;
      tmp0_set.a(tmp1_set, dep);
    }
  };
  KslOp.prototype.k3i = function (mut) {
    this.i37(new KslMutatedState(mut.z3q_1, mut.a3r_1));
    {
      var tmp0_set = this.t33_1;
      var tmp1_set = mut.z3q_1;
      tmp0_set.a(tmp1_set, mut);
    }
  };
  KslOp.prototype.j37 = function () {
    var str = new StringBuilder(this.q33_1 + ' // ' + this.k37());
    {
      var tmp0_forEach = this.u33_1;
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          str.ga('\n' + element.j37());
        }
      }
    }
    return str.toString();
  };
  KslOp.prototype.k37 = function () {
    var tmp;
    var tmp$ret$0;
    {
      var tmp0_isNotEmpty = this.s33_1;
      tmp$ret$0 = !tmp0_isNotEmpty.q();
    }
    if (tmp$ret$0) {
      var tmp_0 = this.s33_1.d3();
      tmp = joinToString$default(tmp_0, null, null, null, 0, null, KslOp$dependenciesAndMutationsToString$lambda(), 31, null);
    } else {
      tmp = 'none';
    }
    var tmp_1 = 'depends on: [' + tmp + ']; ';
    var tmp_2;
    var tmp$ret$1;
    {
      var tmp1_isNotEmpty = this.t33_1;
      tmp$ret$1 = !tmp1_isNotEmpty.q();
    }
    if (tmp$ret$1) {
      var tmp_3 = this.t33_1.d3();
      tmp_2 = joinToString$default(tmp_3, null, null, null, 0, null, KslOp$dependenciesAndMutationsToString$lambda_0(), 31, null);
    } else {
      tmp_2 = 'none';
    }
    return tmp_1 + ('mutates: [' + tmp_2 + ']; ');
  };
  KslOp.prototype.v36 = function () {
    var tmp$ret$0;
    $l$block_0: {
      var tmp0_any = this.t33_1.c3();
      var tmp;
      if (isInterface(tmp0_any, Collection)) {
        tmp = tmp0_any.q();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_any.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        var tmp$ret$1;
        {
          tmp$ret$1 = !this.s33_1.c3().p(element);
        }
        if (tmp$ret$1) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    if (tmp$ret$0) {
      throw IllegalStateException_init_$Create$('Op ' + this.q33_1 + ' mutates state it does not depend on: ' + this.j37() + ' // ' + this.k37());
    }
    var tmp$ret$6;
    {
      var tmp1_find = this.t33_1.d3();
      var tmp$ret$5;
      $l$block_1: {
        var tmp0_iterator_0 = tmp1_find.h();
        while (tmp0_iterator_0.n()) {
          var element_0 = tmp0_iterator_0.o();
          var tmp$ret$4;
          {
            var tmp0_safe_receiver = this.s33_1.b3(element_0.z3q_1);
            var tmp_0;
            if (tmp0_safe_receiver == null) {
              tmp_0 = null;
            } else {
              var tmp$ret$3;
              {
                {
                }
                var tmp$ret$2;
                {
                  tmp$ret$2 = !(tmp0_safe_receiver.q3i_1 === element_0.a3r_1);
                }
                tmp$ret$3 = tmp$ret$2;
              }
              tmp_0 = tmp$ret$3;
            }
            tmp$ret$4 = tmp_0 === true;
          }
          if (tmp$ret$4) {
            tmp$ret$5 = element_0;
            break $l$block_1;
          }
        }
        tmp$ret$5 = null;
      }
      tmp$ret$6 = tmp$ret$5;
    }
    var tmp0_safe_receiver_0 = tmp$ret$6;
    if (tmp0_safe_receiver_0 == null)
      null;
    else {
      var tmp$ret$7;
      {
        {
        }
        throw IllegalStateException_init_$Create$('Op ' + this.q33_1 + ' mutation and dependency states do not match: ' + this.j37() + ' // ' + this.k37());
      }
    }
  };
  KslOp.prototype.l37 = function () {
    {
      var tmp0_forEach = this.u33_1;
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          element.l37();
        }
      }
    }
    this.v36();
  };
  KslOp.$metadata$ = classMeta('KslOp');
  function processScope($this, scope) {
    $this.i3l_1.c3r(scope);
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = LinkedHashSet_init_$Create$();
      }
      var tmp0_also = tmp$ret$0;
      {
      }
      {
        {
          var tmp0_plusAssign = scope.c2p_1;
          addAll(tmp0_also, tmp0_plusAssign);
        }
      }
      tmp$ret$1 = tmp0_also;
    }
    var openOps = tmp$ret$1;
    scope.c2p_1.t7();
    $l$loop: while (true) {
      var tmp$ret$2;
      {
        tmp$ret$2 = !openOps.q();
      }
      if (!tmp$ret$2) {
        break $l$loop;
      }
      var tmp0_elvis_lhs = selectNextOp($this, openOps);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        failScope($this, scope, openOps);
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var nextOp = tmp;
      {
        openOps.c4(nextOp);
      }
      var tmp1_this = scope;
      {
        var tmp1_plusAssign = tmp1_this.c2p_1;
        tmp1_plusAssign.b(nextOp);
      }
      {
        var tmp2_forEach = nextOp.u33_1;
        var tmp0_iterator = tmp2_forEach.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          {
            processScope($this, element);
            $this.i3l_1.d3r(element);
          }
        }
      }
      $this.i3l_1.e3r(nextOp);
    }
    $this.i3l_1.f3r(scope);
  }
  function selectNextOp($this, ops) {
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp0_filterTo = ArrayList_init_$Create$_0();
        var tmp0_iterator = ops.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          var tmp$ret$0;
          {
            tmp$ret$0 = element.g37($this.i3l_1);
          }
          if (tmp$ret$0) {
            tmp0_filterTo.b(element);
          }
        }
        tmp$ret$1 = tmp0_filterTo;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    var candidates = tmp$ret$2;
    var tmp0_iterator_0 = candidates.h();
    while (tmp0_iterator_0.n()) {
      var c = tmp0_iterator_0.o();
      if (findPreventingOp($this, c, ops) == null) {
        return c;
      }
    }
    return null;
  }
  function findPreventingOp($this, op, fromOps) {
    var tmp$ret$4;
    {
      var tmp$ret$3;
      $l$block_1: {
        var tmp0_iterator = fromOps.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          var tmp$ret$2;
          {
            var tmp;
            if (!equals(element, op)) {
              var tmp$ret$0;
              $l$block_0: {
                var tmp0_any = op.t33_1.d3();
                var tmp_0;
                if (isInterface(tmp0_any, Collection)) {
                  tmp_0 = tmp0_any.q();
                } else {
                  tmp_0 = false;
                }
                if (tmp_0) {
                  tmp$ret$0 = false;
                  break $l$block_0;
                }
                var tmp0_iterator_0 = tmp0_any.h();
                while (tmp0_iterator_0.n()) {
                  var element_0 = tmp0_iterator_0.o();
                  var tmp$ret$1;
                  {
                    tmp$ret$1 = element.h37(element_0);
                  }
                  if (tmp$ret$1) {
                    tmp$ret$0 = true;
                    break $l$block_0;
                  }
                }
                tmp$ret$0 = false;
              }
              tmp = tmp$ret$0;
            } else {
              tmp = false;
            }
            tmp$ret$2 = tmp;
          }
          if (tmp$ret$2) {
            tmp$ret$3 = element;
            break $l$block_1;
          }
        }
        tmp$ret$3 = null;
      }
      tmp$ret$4 = tmp$ret$3;
    }
    return tmp$ret$4;
  }
  function failScope($this, scope, remainingOps) {
    var tmp$ret$3;
    {
      var tmp$ret$2;
      {
        var tmp2_eExt = Log_getInstance();
        var tmp$ret$1;
        {
          var tmp1_logExt = Level_ERROR_getInstance();
          var tmp0_log = getKClassFromExpression($this).ei();
          var tmp;
          if (tmp1_logExt.e1w_1 >= tmp2_eExt.y1v_1.e1w_1) {
            var tmp_0 = tmp2_eExt.z1v_1;
            var tmp$ret$0;
            {
              tmp$ret$0 = 'Unable to process scope, ' + remainingOps.m() + ' ops remain:';
            }
            tmp = tmp_0(tmp1_logExt, tmp0_log, tmp$ret$0);
          }
          tmp$ret$1 = tmp;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      tmp$ret$3 = tmp$ret$2;
    }
    {
      var tmp0_iterator = remainingOps.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          var tmp$ret$7;
          {
            var tmp$ret$6;
            {
              var tmp2_eExt_0 = Log_getInstance();
              var tmp$ret$5;
              {
                var tmp1_logExt_0 = Level_ERROR_getInstance();
                var tmp0_log_0 = getKClassFromExpression($this).ei();
                var tmp_1;
                if (tmp1_logExt_0.e1w_1 >= tmp2_eExt_0.y1v_1.e1w_1) {
                  var tmp_2 = tmp2_eExt_0.z1v_1;
                  var tmp$ret$4;
                  {
                    var tmp_3 = element.q33_1 + ' \n';
                    var tmp_4 = element.s33_1.d3();
                    var tmp_5 = tmp_3 + ('        depends on: ' + joinToString$default(tmp_4, null, null, null, 0, null, KslProcessor$failScope$lambda(), 31, null) + '\n');
                    var tmp_6 = element.t33_1.d3();
                    var tmp_7 = tmp_5 + ('        mutates:    ' + joinToString$default(tmp_6, null, null, null, 0, null, KslProcessor$failScope$lambda_0(), 31, null) + '\n');
                    var tmp0_elvis_lhs = findPreventingOp($this, element, remainingOps);
                    tmp$ret$4 = tmp_7 + ('        prevents:   ' + toString(tmp0_elvis_lhs == null ? 'none' : tmp0_elvis_lhs));
                  }
                  tmp_1 = tmp_2(tmp1_logExt_0, tmp0_log_0, tmp$ret$4);
                }
                tmp$ret$5 = tmp_1;
              }
              tmp$ret$6 = tmp$ret$5;
            }
            tmp$ret$7 = tmp$ret$6;
          }
        }
      }
    }
    var tmp$ret$11;
    {
      var tmp$ret$10;
      {
        var tmp5_eExt = Log_getInstance();
        var tmp$ret$9;
        {
          var tmp4_logExt = Level_ERROR_getInstance();
          var tmp3_log = getKClassFromExpression($this).ei();
          var tmp_8;
          if (tmp4_logExt.e1w_1 >= tmp5_eExt.y1v_1.e1w_1) {
            var tmp_9 = tmp5_eExt.z1v_1;
            var tmp$ret$8;
            {
              tmp$ret$8 = 'Processor state:';
            }
            tmp_8 = tmp_9(tmp4_logExt, tmp3_log, tmp$ret$8);
          }
          tmp$ret$9 = tmp_8;
        }
        tmp$ret$10 = tmp$ret$9;
      }
      tmp$ret$11 = tmp$ret$10;
    }
    $this.i3l_1.g3r();
    throw IllegalStateException_init_$Create$('Unable to complete scope ' + scope.d2p_1);
  }
  function KslProcessor$failScope$lambda() {
    return function (it) {
      return it.toString();
    };
  }
  function KslProcessor$failScope$lambda_0() {
    return function (it) {
      return it.toString();
    };
  }
  function KslProcessor() {
    this.i3l_1 = new KslProcessorState();
  }
  KslProcessor.prototype.j3l = function (hierarchy) {
    hierarchy.d2x_1.l37();
    processScope(this, hierarchy.d2x_1);
  };
  KslProcessor.$metadata$ = classMeta('KslProcessor');
  function ScopeState_init_$Init$($outer, scope, initialState, statesInScope, $mask0, $marker, $this) {
    if (!(($mask0 & 8) === 0)) {
      var tmp$ret$0;
      var tmp$ret$0_0;
      {
        tmp$ret$0 = LinkedHashMap_init_$Create$();
        tmp$ret$0_0 = Unit_getInstance();
      }
      statesInScope = tmp$ret$0;
    }
    ScopeState.call($this, $outer, scope, initialState, statesInScope);
    return $this;
  }
  function ScopeState_init_$Create$($outer, scope, initialState, statesInScope, $mask0, $marker) {
    return ScopeState_init_$Init$($outer, scope, initialState, statesInScope, $mask0, $marker, Object.create(ScopeState.prototype));
  }
  function _get_statesInScope__37x4rg($this) {
    return $this.x3q_1.q() ? emptyMap() : last($this.x3q_1);
  }
  function ScopeState($outer, scope, initialState, statesInScope) {
    this.j3r_1 = $outer;
    this.h3r_1 = scope;
    this.i3r_1 = statesInScope;
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.i3r_1;
      tmp0_plusAssign.b4(initialState);
    }
    {
      var tmp1_forEach = this.h3r_1.b2p_1;
      var tmp0_iterator = tmp1_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          {
            var tmp0_set = this.i3r_1;
            var tmp1_set = new KslMutatedState(element, 0);
            tmp0_set.a(element, tmp1_set);
          }
        }
      }
    }
  }
  ScopeState.prototype.k3r = function () {
    return this.i3r_1;
  };
  ScopeState.prototype.a1 = function () {
    return this.i3r_1.a1();
  };
  ScopeState.prototype.c3 = function () {
    return this.i3r_1.c3();
  };
  ScopeState.prototype.m = function () {
    return this.i3r_1.m();
  };
  ScopeState.prototype.d3 = function () {
    return this.i3r_1.d3();
  };
  ScopeState.prototype.l3r = function (key) {
    return this.i3r_1.v2(key);
  };
  ScopeState.prototype.v2 = function (key) {
    if (!(key instanceof KslState))
      return false;
    return this.l3r(key instanceof KslState ? key : THROW_CCE());
  };
  ScopeState.prototype.m3r = function (key) {
    return this.i3r_1.b3(key);
  };
  ScopeState.prototype.b3 = function (key) {
    if (!(key instanceof KslState))
      return null;
    return this.m3r(key instanceof KslState ? key : THROW_CCE());
  };
  ScopeState.prototype.q = function () {
    return this.i3r_1.q();
  };
  ScopeState.prototype.d3r = function (scope) {
    {
      var tmp0_forEach = scope.a2p_1.d3();
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          if (!this.i3r_1.v2(element.z3q_1)) {
            throw IllegalStateException_init_$Create$('Unable to apply scope ' + scope.d2p_1 + ': State ' + element.z3q_1.d3a_1 + ' not in scope. Current stack: ' + this.j3r_1.n3r());
          }
          {
            var tmp0_set = this.i3r_1;
            var tmp1_set = element.z3q_1;
            var tmp2_set = new KslMutatedState(element.z3q_1, element.b3r_1);
            tmp0_set.a(tmp1_set, tmp2_set);
          }
        }
      }
    }
  };
  ScopeState.prototype.e3r = function (op) {
    {
      var tmp0_forEach = op.t33_1.d3();
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          if (!this.i3r_1.v2(element.z3q_1)) {
            throw IllegalStateException_init_$Create$('Unable to apply op ' + op.q33_1 + ': State ' + element.z3q_1.d3a_1 + ' not in scope. Current stack: ' + this.j3r_1.n3r());
          }
          {
            var tmp0_set = this.i3r_1;
            var tmp1_set = element.z3q_1;
            var tmp2_set = new KslMutatedState(element.z3q_1, element.b3r_1);
            tmp0_set.a(tmp1_set, tmp2_set);
          }
        }
      }
    }
  };
  ScopeState.$metadata$ = classMeta('ScopeState', [Map]);
  function KslProcessorState$_get_stackTrace_$lambda_dmmehw() {
    return function (it) {
      return it.h3r_1.d2p_1;
    };
  }
  function KslProcessorState() {
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.x3q_1 = tmp$ret$0;
  }
  KslProcessorState.prototype.n3r = function () {
    return joinToString$default(this.x3q_1, ' -> ', null, null, 0, null, KslProcessorState$_get_stackTrace_$lambda_dmmehw(), 30, null);
  };
  KslProcessorState.prototype.y3q = function (mutatedState) {
    return equals(_get_statesInScope__37x4rg(this).b3(mutatedState.p3i_1), mutatedState);
  };
  KslProcessorState.prototype.c3r = function (scope) {
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.x3q_1;
      var tmp = _get_statesInScope__37x4rg(this);
      var tmp1_plusAssign = ScopeState_init_$Create$(this, scope, tmp, null, 8, null);
      tmp0_plusAssign.b(tmp1_plusAssign);
    }
  };
  KslProcessorState.prototype.f3r = function (scope) {
    if (!equals(last(this.x3q_1).h3r_1, scope)) {
      throw IllegalStateException_init_$Create$('Unable to leave scope ' + scope.d2p_1 + ': Not on top of stack, current stack: ' + this.n3r());
    }
    removeLast(this.x3q_1);
  };
  KslProcessorState.prototype.e3r = function (op) {
    return last(this.x3q_1).e3r(op);
  };
  KslProcessorState.prototype.d3r = function (scope) {
    return last(this.x3q_1).d3r(scope);
  };
  KslProcessorState.prototype.g3r = function () {
    var tmp$ret$3;
    {
      var tmp$ret$2;
      {
        var tmp2_eExt = Log_getInstance();
        var tmp$ret$1;
        {
          var tmp1_logExt = Level_ERROR_getInstance();
          var tmp0_log = getKClassFromExpression(this).ei();
          var tmp;
          if (tmp1_logExt.e1w_1 >= tmp2_eExt.y1v_1.e1w_1) {
            var tmp_0 = tmp2_eExt.z1v_1;
            var tmp$ret$0;
            {
              tmp$ret$0 = 'stack: ' + this.n3r();
            }
            tmp = tmp_0(tmp1_logExt, tmp0_log, tmp$ret$0);
          }
          tmp$ret$1 = tmp;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      tmp$ret$3 = tmp$ret$2;
    }
    var tmp$ret$7;
    {
      var tmp$ret$6;
      {
        var tmp5_eExt = Log_getInstance();
        var tmp$ret$5;
        {
          var tmp4_logExt = Level_ERROR_getInstance();
          var tmp3_log = getKClassFromExpression(this).ei();
          var tmp_1;
          if (tmp4_logExt.e1w_1 >= tmp5_eExt.y1v_1.e1w_1) {
            var tmp_2 = tmp5_eExt.z1v_1;
            var tmp$ret$4;
            {
              tmp$ret$4 = 'current state:';
            }
            tmp_1 = tmp_2(tmp4_logExt, tmp3_log, tmp$ret$4);
          }
          tmp$ret$5 = tmp_1;
        }
        tmp$ret$6 = tmp$ret$5;
      }
      tmp$ret$7 = tmp$ret$6;
    }
    {
      var tmp6_forEach = _get_statesInScope__37x4rg(this).d3();
      var tmp0_iterator = tmp6_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          var tmp$ret$11;
          {
            var tmp$ret$10;
            {
              var tmp2_eExt_0 = Log_getInstance();
              var tmp$ret$9;
              {
                var tmp1_logExt_0 = Level_ERROR_getInstance();
                var tmp0_log_0 = getKClassFromExpression(this).ei();
                var tmp_3;
                if (tmp1_logExt_0.e1w_1 >= tmp2_eExt_0.y1v_1.e1w_1) {
                  var tmp_4 = tmp2_eExt_0.z1v_1;
                  var tmp$ret$8;
                  {
                    tmp$ret$8 = '  ' + element;
                  }
                  tmp_3 = tmp_4(tmp1_logExt_0, tmp0_log_0, tmp$ret$8);
                }
                tmp$ret$9 = tmp_3;
              }
              tmp$ret$10 = tmp$ret$9;
            }
            tmp$ret$11 = tmp$ret$10;
          }
        }
      }
    }
  };
  KslProcessorState.$metadata$ = classMeta('KslProcessorState');
  function updateDependenciesAndMutations($this) {
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$();
    }
    var startStates = tmp$ret$0;
    var tmp$ret$1;
    {
      tmp$ret$1 = LinkedHashMap_init_$Create$();
    }
    var endStates = tmp$ret$1;
    var tmp0_safe_receiver = $this.y2o_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$2;
      {
        {
        }
        {
          var tmp0_forEach = tmp0_safe_receiver.s33_1.d3();
          var tmp0_iterator = tmp0_forEach.h();
          while (tmp0_iterator.n()) {
            var element = tmp0_iterator.o();
            {
              {
                var tmp0_set = element.p3i_1;
                var tmp1_set = element.q3i_1;
                startStates.a(tmp0_set, tmp1_set);
              }
            }
          }
        }
        var tmp1_forEach = tmp0_safe_receiver.t33_1.d3();
        var tmp0_iterator_0 = tmp1_forEach.h();
        while (tmp0_iterator_0.n()) {
          var element_0 = tmp0_iterator_0.o();
          {
            {
              var tmp0_set_0 = element_0.z3q_1;
              var tmp1_set_0 = element_0.b3r_1;
              endStates.a(tmp0_set_0, tmp1_set_0);
            }
          }
        }
        tmp$ret$2 = Unit_getInstance();
      }
    }
    {
      var tmp0_forEach_0 = $this.c2p_1;
      var tmp0_iterator_1 = tmp0_forEach_0.h();
      while (tmp0_iterator_1.n()) {
        var element_1 = tmp0_iterator_1.o();
        {
          {
            var tmp$ret$5;
            {
              var tmp0_filter = element_1.s33_1.d3();
              var tmp$ret$4;
              {
                var tmp0_filterTo = ArrayList_init_$Create$_0();
                var tmp0_iterator_2 = tmp0_filter.h();
                while (tmp0_iterator_2.n()) {
                  var element_2 = tmp0_iterator_2.o();
                  var tmp$ret$3;
                  {
                    tmp$ret$3 = !$this.b2p_1.p(element_2.p3i_1);
                  }
                  if (tmp$ret$3) {
                    tmp0_filterTo.b(element_2);
                  }
                }
                tmp$ret$4 = tmp0_filterTo;
              }
              tmp$ret$5 = tmp$ret$4;
            }
            var tmp1_forEach_0 = tmp$ret$5;
            var tmp0_iterator_3 = tmp1_forEach_0.h();
            while (tmp0_iterator_3.n()) {
              var element_3 = tmp0_iterator_3.o();
              {
                var tmp$ret$8;
                {
                  var tmp$ret$7;
                  {
                    var tmp0_getOrElse = element_3.p3i_1;
                    var tmp0_elvis_lhs = startStates.b3(tmp0_getOrElse);
                    var tmp;
                    if (tmp0_elvis_lhs == null) {
                      var tmp$ret$6;
                      {
                        tmp$ret$6 = element_3.q3i_1;
                      }
                      tmp = tmp$ret$6;
                    } else {
                      tmp = tmp0_elvis_lhs;
                    }
                    tmp$ret$7 = tmp;
                  }
                  var tmp1_min = tmp$ret$7;
                  var tmp2_min = element_3.q3i_1;
                  tmp$ret$8 = Math.min(tmp1_min, tmp2_min);
                }
                var start = tmp$ret$8;
                {
                  var tmp3_set = element_3.p3i_1;
                  startStates.a(tmp3_set, start);
                }
              }
            }
          }
          {
            var tmp$ret$11;
            {
              var tmp2_filter = element_1.t33_1.d3();
              var tmp$ret$10;
              {
                var tmp0_filterTo_0 = ArrayList_init_$Create$_0();
                var tmp0_iterator_4 = tmp2_filter.h();
                while (tmp0_iterator_4.n()) {
                  var element_4 = tmp0_iterator_4.o();
                  var tmp$ret$9;
                  {
                    tmp$ret$9 = !$this.b2p_1.p(element_4.z3q_1);
                  }
                  if (tmp$ret$9) {
                    tmp0_filterTo_0.b(element_4);
                  }
                }
                tmp$ret$10 = tmp0_filterTo_0;
              }
              tmp$ret$11 = tmp$ret$10;
            }
            var tmp3_forEach = tmp$ret$11;
            var tmp0_iterator_5 = tmp3_forEach.h();
            while (tmp0_iterator_5.n()) {
              var element_5 = tmp0_iterator_5.o();
              {
                var tmp$ret$14;
                {
                  var tmp$ret$13;
                  {
                    var tmp0_getOrElse_0 = element_5.z3q_1;
                    var tmp0_elvis_lhs_0 = endStates.b3(tmp0_getOrElse_0);
                    var tmp_0;
                    if (tmp0_elvis_lhs_0 == null) {
                      var tmp$ret$12;
                      {
                        tmp$ret$12 = element_5.b3r_1;
                      }
                      tmp_0 = tmp$ret$12;
                    } else {
                      tmp_0 = tmp0_elvis_lhs_0;
                    }
                    tmp$ret$13 = tmp_0;
                  }
                  var tmp1_max = tmp$ret$13;
                  var tmp2_max = element_5.b3r_1;
                  tmp$ret$14 = Math.max(tmp1_max, tmp2_max);
                }
                var end = tmp$ret$14;
                {
                  var tmp3_set_0 = element_5.z3q_1;
                  endStates.a(tmp3_set_0, end);
                }
              }
            }
          }
        }
      }
    }
    $this.z2o_1.t7();
    $this.a2p_1.t7();
    {
      var tmp$ret$15;
      {
        tmp$ret$15 = startStates.a1().h();
      }
      var tmp0_iterator_6 = tmp$ret$15;
      while (tmp0_iterator_6.n()) {
        var element_6 = tmp0_iterator_6.o();
        {
          var tmp$ret$16;
          {
            tmp$ret$16 = element_6.l2();
          }
          var state = tmp$ret$16;
          var tmp$ret$17;
          {
            tmp$ret$17 = element_6.n2();
          }
          var startMutation = tmp$ret$17;
          var tmp0_elvis_lhs_1 = endStates.b3(state);
          var endMutation = tmp0_elvis_lhs_1 == null ? startMutation : tmp0_elvis_lhs_1;
          {
            var tmp0_set_1 = $this.z2o_1;
            var tmp1_set_1 = new KslMutatedState(state, startMutation);
            tmp0_set_1.a(state, tmp1_set_1);
          }
          if (!(startMutation === endMutation)) {
            {
              var tmp2_set = $this.a2p_1;
              var tmp3_set_1 = new KslStateMutation(state, startMutation, endMutation);
              tmp2_set.a(state, tmp3_set_1);
            }
          }
          var tmp1_safe_receiver = $this.y2o_1;
          if (tmp1_safe_receiver == null)
            null;
          else {
            var tmp$ret$18;
            {
              {
              }
              {
                var tmp0_set_2 = tmp1_safe_receiver.s33_1;
                var tmp1_set_2 = new KslMutatedState(state, startMutation);
                tmp0_set_2.a(state, tmp1_set_2);
              }
              var tmp_1;
              if (!(startMutation === endMutation)) {
                var tmp2_set_0 = tmp1_safe_receiver.t33_1;
                var tmp3_set_2 = new KslStateMutation(state, startMutation, endMutation);
                tmp2_set_0.a(state, tmp3_set_2);
                tmp_1 = Unit_getInstance();
              }
              tmp$ret$18 = tmp_1;
            }
          }
        }
      }
    }
  }
  function KslScope(parentOp) {
    this.y2o_1 = parentOp;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$();
    }
    tmp.z2o_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = LinkedHashMap_init_$Create$();
    }
    tmp_0.a2p_1 = tmp$ret$1;
    var tmp_1 = this;
    var tmp$ret$2;
    {
      tmp$ret$2 = LinkedHashSet_init_$Create$();
    }
    tmp_1.b2p_1 = tmp$ret$2;
    var tmp_2 = this;
    var tmp$ret$3;
    {
      tmp$ret$3 = ArrayList_init_$Create$_0();
    }
    tmp_2.c2p_1 = tmp$ret$3;
    var tmp_3 = this;
    var tmp0_safe_receiver = this.y2o_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.q33_1;
    tmp_3.d2p_1 = tmp1_elvis_lhs == null ? 'unnamed' : tmp1_elvis_lhs;
  }
  KslScope.prototype.s3m = function () {
    return this.y2o_1;
  };
  KslScope.prototype.e2p = function () {
    return this.z2o_1;
  };
  KslScope.prototype.e37 = function () {
    return this.a2p_1;
  };
  KslScope.prototype.w3k = function () {
    return this.b2p_1;
  };
  KslScope.prototype.m37 = function () {
    return this.c2p_1;
  };
  KslScope.prototype.c3j = function (_set____db54di) {
    this.d2p_1 = _set____db54di;
  };
  KslScope.prototype.v3o = function () {
    return this.d2p_1;
  };
  KslScope.prototype.a3e = function () {
    var tmp$ret$0;
    {
      var tmp0_isNotEmpty = this.c2p_1;
      tmp$ret$0 = !tmp0_isNotEmpty.q();
    }
    return tmp$ret$0;
  };
  KslScope.prototype.l37 = function () {
    {
      var tmp0_forEach = this.c2p_1;
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          element.l37();
        }
      }
    }
    updateDependenciesAndMutations(this);
  };
  KslScope.prototype.j37 = function () {
    var str = new StringBuilder('{ // scope: ' + this.d2p_1 + '\n');
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_appendLine = str.ga('    // depends on:');
        tmp$ret$0 = tmp0_appendLine.ea(_Char___init__impl__6a9atx(10));
      }
      tmp$ret$1 = tmp$ret$0;
    }
    {
      var tmp0_forEach = this.z2o_1.d3();
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          var tmp$ret$3;
          {
            var tmp0_appendLine_0 = '    //   ' + element;
            var tmp$ret$2;
            {
              var tmp0_appendLine_1 = str.ga(tmp0_appendLine_0);
              tmp$ret$2 = tmp0_appendLine_1.ea(_Char___init__impl__6a9atx(10));
            }
            tmp$ret$3 = tmp$ret$2;
          }
        }
      }
    }
    var tmp$ret$4;
    {
      tmp$ret$4 = str.ea(_Char___init__impl__6a9atx(10));
    }
    var tmp$ret$6;
    {
      var tmp$ret$5;
      {
        var tmp0_appendLine_2 = str.ga('    // mutates:');
        tmp$ret$5 = tmp0_appendLine_2.ea(_Char___init__impl__6a9atx(10));
      }
      tmp$ret$6 = tmp$ret$5;
    }
    {
      var tmp1_forEach = this.a2p_1.d3();
      var tmp0_iterator_0 = tmp1_forEach.h();
      while (tmp0_iterator_0.n()) {
        var element_0 = tmp0_iterator_0.o();
        {
          var tmp$ret$8;
          {
            var tmp0_appendLine_3 = '    //   ' + element_0;
            var tmp$ret$7;
            {
              var tmp0_appendLine_4 = str.ga(tmp0_appendLine_3);
              tmp$ret$7 = tmp0_appendLine_4.ea(_Char___init__impl__6a9atx(10));
            }
            tmp$ret$8 = tmp$ret$7;
          }
        }
      }
    }
    var tmp$ret$9;
    {
      tmp$ret$9 = str.ea(_Char___init__impl__6a9atx(10));
    }
    {
      var tmp2_forEach = this.b2p_1;
      var tmp0_iterator_1 = tmp2_forEach.h();
      while (tmp0_iterator_1.n()) {
        var element_1 = tmp0_iterator_1.o();
        {
          var tmp$ret$11;
          {
            var tmp0_appendLine_5 = '    def ' + element_1.j37();
            var tmp$ret$10;
            {
              var tmp0_appendLine_6 = str.ga(tmp0_appendLine_5);
              tmp$ret$10 = tmp0_appendLine_6.ea(_Char___init__impl__6a9atx(10));
            }
            tmp$ret$11 = tmp$ret$10;
          }
        }
      }
    }
    var tmp$ret$12;
    {
      var tmp3_isNotEmpty = this.b2p_1;
      tmp$ret$12 = !tmp3_isNotEmpty.q();
    }
    if (tmp$ret$12) {
      var tmp$ret$13;
      {
        tmp$ret$13 = str.ea(_Char___init__impl__6a9atx(10));
      }
    }
    {
      var tmp4_forEach = this.c2p_1;
      var tmp0_iterator_2 = tmp4_forEach.h();
      while (tmp0_iterator_2.n()) {
        var element_2 = tmp0_iterator_2.o();
        {
          var tmp$ret$15;
          {
            var tmp0_appendLine_7 = prependIndent(element_2.j37(), '    ');
            var tmp$ret$14;
            {
              var tmp0_appendLine_8 = str.ga(tmp0_appendLine_7);
              tmp$ret$14 = tmp0_appendLine_8.ea(_Char___init__impl__6a9atx(10));
            }
            tmp$ret$15 = tmp$ret$14;
          }
        }
      }
    }
    str.ga('}');
    return str.toString();
  };
  KslScope.$metadata$ = classMeta('KslScope');
  function KslState(stateName) {
    this.d3a_1 = stateName;
    this.e3a_1 = 0;
  }
  KslState.prototype.f3a = function () {
    return this.d3a_1;
  };
  KslState.prototype.x3p = function () {
    return new KslMutatedState(this, this.e3a_1);
  };
  KslState.prototype.j3i = function () {
    var tmp = this.e3a_1;
    var tmp0_this = this;
    tmp0_this.e3a_1 = tmp0_this.e3a_1 + 1 | 0;
    return new KslStateMutation(this, tmp, tmp0_this.e3a_1);
  };
  KslState.prototype.j37 = function () {
    return this.d3a_1;
  };
  KslState.$metadata$ = classMeta('KslState');
  function KslStateMutation(state, fromMutation, toMutation) {
    this.z3q_1 = state;
    this.a3r_1 = fromMutation;
    this.b3r_1 = toMutation;
  }
  KslStateMutation.prototype.i18 = function () {
    return this.z3q_1;
  };
  KslStateMutation.prototype.o3r = function () {
    return this.a3r_1;
  };
  KslStateMutation.prototype.p3r = function () {
    return this.b3r_1;
  };
  KslStateMutation.prototype.toString = function () {
    return this.z3q_1.d3a_1 + '@' + this.a3r_1 + '->' + this.b3r_1;
  };
  KslStateMutation.$metadata$ = classMeta('KslStateMutation');
  function AnimationState(duration) {
    MutableStateValue.call(this, 1.0);
    this.u3r_1 = duration;
    this.v3r_1 = false;
    this.w3r_1 = this.u3r_1;
  }
  AnimationState.prototype.x3r = function () {
    this.m1e(0.0);
    this.e3s();
    this.w3r_1 = 0.0;
    this.v3r_1 = true;
  };
  AnimationState.prototype.f3s = function (deltaT) {
    if (this.w3r_1 < this.u3r_1) {
      var tmp0_this = this;
      tmp0_this.w3r_1 = tmp0_this.w3r_1 + deltaT;
      if (this.w3r_1 >= this.u3r_1) {
        this.m1e(1.0);
        this.v3r_1 = false;
      } else {
        this.m1e(this.w3r_1 / this.u3r_1);
      }
    } else {
      this.v3r_1 = false;
    }
  };
  AnimationState.$metadata$ = classMeta('AnimationState', undefined, undefined, undefined, undefined, MutableStateValue.prototype);
  function RowScope() {
  }
  RowScope.$metadata$ = interfaceMeta('RowScope', [UiScope]);
  function Row(_this__u8e3s4, width, height, block) {
    var row = _this__u8e3s4.l3s().b3t(getKClass(RowNode), Companion_getInstance_18().m3s_1);
    layout(size(row.s3t(), width, height), RowLayout_getInstance());
    block(row);
    return row;
  }
  function BoxNode$Companion$factory$lambda() {
    return function (parent, surface) {
      return new BoxNode(parent, surface);
    };
  }
  function Companion_17() {
    Companion_instance_17 = this;
    var tmp = this;
    tmp.t3t_1 = BoxNode$Companion$factory$lambda();
  }
  Companion_17.$metadata$ = objectMeta('Companion');
  var Companion_instance_17;
  function Companion_getInstance_17() {
    if (Companion_instance_17 == null)
      new Companion_17();
    return Companion_instance_17;
  }
  function BoxNode(parent, surface) {
    Companion_getInstance_17();
    UiNode.call(this, parent, surface);
    this.i3u_1 = new UiModifier(surface);
  }
  BoxNode.prototype.s3t = function () {
    return this.i3u_1;
  };
  BoxNode.$metadata$ = classMeta('BoxNode', [UiScope], undefined, undefined, undefined, UiNode.prototype);
  function Box(_this__u8e3s4, width, height, block) {
    var box = _this__u8e3s4.l3s().b3t(getKClass(BoxNode), Companion_getInstance_17().t3t_1);
    size(box.s3t(), width, height);
    block(box);
    return box;
  }
  function RowNode$Companion$factory$lambda() {
    return function (parent, surface) {
      return new RowNode(parent, surface);
    };
  }
  function Companion_18() {
    Companion_instance_18 = this;
    var tmp = this;
    tmp.m3s_1 = RowNode$Companion$factory$lambda();
  }
  Companion_18.$metadata$ = objectMeta('Companion');
  var Companion_instance_18;
  function Companion_getInstance_18() {
    if (Companion_instance_18 == null)
      new Companion_18();
    return Companion_instance_18;
  }
  function RowNode(parent, surface) {
    Companion_getInstance_18();
    BoxNode.call(this, parent, surface);
    this.r3t_1 = new UiModifier(surface);
  }
  RowNode.prototype.s3t = function () {
    return this.r3t_1;
  };
  RowNode.$metadata$ = classMeta('RowNode', [RowScope], undefined, undefined, undefined, BoxNode.prototype);
  function CachedGeometry(node, cacheData) {
    this.w3v_1 = node;
    this.x3v_1 = cacheData;
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_apply = new MeshBuilder(this.x3v_1);
      {
      }
      {
        tmp0_apply.g3w_1 = true;
      }
      tmp$ret$0 = tmp0_apply;
    }
    tmp.y3v_1 = tmp$ret$0;
    this.z3v_1 = MutableVec2f_init_$Create$();
    this.a3w_1 = MutableVec2f_init_$Create$();
    this.b3w_1 = MutableVec4f_init_$Create$();
    this.c3w_1 = ensureNotNull(this.x3v_1.l2s_1.b3(Companion_getInstance_31().n2z_1)) / 4 | 0;
    this.d3w_1 = ensureNotNull(this.x3v_1.l2s_1.b3(Companion_getInstance_26().n3w_1)) / 4 | 0;
  }
  CachedGeometry.prototype.r3w = function () {
    return this.w3v_1;
  };
  CachedGeometry.prototype.s3w = function () {
    return this.x3v_1;
  };
  CachedGeometry.prototype.t3w = function () {
    return this.y3v_1;
  };
  CachedGeometry.prototype.u3w = function (target) {
    var i0 = target.o2s_1;
    target.w3w(this.x3v_1.v3w());
    var inductionVariable = 0;
    var last = this.x3v_1.v3w();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        target.r2s_1.x3w(i0 + this.x3v_1.r2s_1.r(i) | 0);
      }
       while (inductionVariable < last);
    target.y3w(this.x3v_1.o2s_1);
    target.p2s_1.z3w(this.x3v_1.p2s_1);
    var tmp1_this = target;
    tmp1_this.o2s_1 = tmp1_this.o2s_1 + this.x3v_1.o2s_1 | 0;
  };
  CachedGeometry.prototype.a3x = function () {
    return !(this.a3w_1.e23() === this.w3v_1.n3u()) ? true : !(this.a3w_1.g23() === this.w3v_1.o3u());
  };
  CachedGeometry.prototype.b3x = function (posX, posY, clip) {
    return (!this.b3w_1.equals(clip) ? true : !(this.z3v_1.e23() === posX)) ? true : !(this.z3v_1.g23() === posY);
  };
  CachedGeometry.prototype.c3x = function (posX, posY, clip, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      clip = this.w3v_1.z3s_1;
    return this.b3x(posX, posY, clip);
  };
  CachedGeometry.prototype.d3x = function (posX, posY, clip) {
    var tmp;
    if (this.c3x(posX, posY, null, 4, null)) {
      tmp = true;
    } else {
      tmp = !clip.equals(this.b3w_1);
    }
    if (tmp) {
      this.e3x(posX, posY, clip);
    }
  };
  CachedGeometry.prototype.e3x = function (posX, posY, clip) {
    var posOffX = posX - this.z3v_1.e23();
    var posOffY = posY - this.z3v_1.g23();
    this.z3v_1.c2j(posX, posY);
    this.b3w_1.x2l(clip);
    var inductionVariable = 0;
    var last = this.x3v_1.o2s_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var j = imul(i, this.x3v_1.h2s_1);
        this.x3v_1.p2s_1.m2g(j + this.c3w_1 | 0, this.x3v_1.p2s_1.r(j + this.c3w_1 | 0) + posOffX);
        this.x3v_1.p2s_1.m2g((j + this.c3w_1 | 0) + 1 | 0, this.x3v_1.p2s_1.r((j + this.c3w_1 | 0) + 1 | 0) + posOffY);
        this.x3v_1.p2s_1.m2g(j + this.d3w_1 | 0, this.b3w_1.e23());
        this.x3v_1.p2s_1.m2g((j + this.d3w_1 | 0) + 1 | 0, this.b3w_1.g23());
        this.x3v_1.p2s_1.m2g((j + this.d3w_1 | 0) + 2 | 0, this.b3w_1.w2g());
        this.x3v_1.p2s_1.m2g((j + this.d3w_1 | 0) + 3 | 0, this.b3w_1.r2l());
      }
       while (inductionVariable < last);
  };
  CachedGeometry.$metadata$ = classMeta('CachedGeometry');
  function checkCache($this, text, font) {
    var fontScale = font.g3x();
    if ((!(text === $this.r3x_1) ? true : !(font === $this.q3x_1)) ? true : !($this.s3x_1 === font.g3x())) {
      $this.q3x_1 = font;
      $this.s3x_1 = fontScale;
      $this.r3x_1 = text;
      $this.v3x_1 = false;
      $this.w3x_1 = false;
    }
  }
  function hasContentChanged($this, rotation, color) {
    return (($this.a3x() ? true : !$this.w3x_1) ? true : !(rotation === $this.t3x_1)) ? true : !color.equals($this.u3x_1);
  }
  function rebuildTextGeometry($this, textProps, textColor, textRotation) {
    var tmp0_rebuildCache = $this.r3w().v3s_1 + textProps.z3x_1.e23();
    var tmp1_rebuildCache = $this.r3w().w3s_1 + textProps.z3x_1.g23();
    var tmp$ret$5;
    {
      var tmp0_apply = $this.w3v_1;
      {
      }
      {
        $this.y3v_1.t7();
        {
          var tmp0_configured = $this.y3v_1;
          var prevMod = tmp0_configured.l3w_1;
          tmp0_configured.l3w_1 = tmp0_apply.a3t_1;
          var prevColor = tmp0_configured.h3w_1;
          var tmp0_safe_receiver = textColor;
          if (tmp0_safe_receiver == null)
            null;
          else {
            var tmp$ret$0;
            {
              {
              }
              tmp0_configured.h3w_1 = tmp0_safe_receiver;
              tmp$ret$0 = Unit_getInstance();
            }
          }
          {
            tmp0_configured.f3w_1.z2h();
            {
              tmp0_configured.n2h(tmp0_apply.v3s_1, tmp0_apply.w3s_1, 0.0);
              {
                $this.w3x_1 = true;
                $this.t3x_1 = textRotation;
                $this.u3x_1.x2l(tmp0_configured.h3w_1);
                if (!(textRotation === 0.0)) {
                  tmp0_configured.f3y(textProps.z3x_1);
                  var tmp0_subject = textRotation;
                  switch (tmp0_subject) {
                    case 90.0:
                      tmp0_configured.s2h(90.0, Companion_getInstance_9().g2k_1);
                      ;
                      break;
                    case 180.0:
                      tmp0_configured.s2h(180.0, Companion_getInstance_9().g2k_1);
                      ;
                      break;
                    case 270.0:
                      tmp0_configured.s2h(270.0, Companion_getInstance_9().g2k_1);
                      ;
                      break;
                    default:
                      var tmp$ret$4;
                      {
                        var tmp$ret$3;
                        {
                          var tmp2_wExt = Log_getInstance();
                          var tmp$ret$2;
                          {
                            var tmp1_logExt = Level_WARN_getInstance();
                            var tmp0_log = getKClassFromExpression(tmp0_configured).ei();
                            var tmp;
                            if (tmp1_logExt.e1w_1 >= tmp2_wExt.y1v_1.e1w_1) {
                              var tmp_0 = tmp2_wExt.z1v_1;
                              var tmp$ret$1;
                              {
                                tmp$ret$1 = 'CachedText supports only 90 degrees rotation steps';
                              }
                              tmp = tmp_0(tmp1_logExt, tmp0_log, tmp$ret$1);
                            }
                            tmp$ret$2 = tmp;
                          }
                          tmp$ret$3 = tmp$ret$2;
                        }
                        tmp$ret$4 = tmp$ret$3;
                      }

                      break;
                  }
                  tmp0_configured.n2h(-textProps.z3x_1.e23(), -textProps.z3x_1.g23(), -textProps.z3x_1.w2g());
                }
                tmp0_configured.g3y(textProps);
              }
            }
            tmp0_configured.f3w_1.a2i();
          }
          tmp0_configured.l3w_1 = prevMod;
          tmp0_configured.h3w_1 = prevColor;
        }
        $this.x3v_1.p2s_1.h3y();
      }
      tmp$ret$5 = tmp0_apply;
    }
    $this.z3v_1.c2j(tmp0_rebuildCache, tmp1_rebuildCache);
    $this.b3w_1.x2l($this.w3v_1.z3s_1);
    $this.a3w_1.c2j($this.w3v_1.n3u(), $this.w3v_1.o3u());
    return Unit_getInstance();
  }
  function updateTextCache($this, textProps, textClip) {
    $this.d3x($this.r3w().v3s_1 + textProps.z3x_1.e23(), $this.r3w().w3s_1 + textProps.z3x_1.g23(), textClip);
  }
  function CachedTextGeometry(node) {
    CachedGeometry.call(this, node, new IndexedVertexList(Companion_getInstance_22().k3y_1));
    this.p3x_1 = new TextMetrics();
    this.q3x_1 = null;
    this.r3x_1 = null;
    this.s3x_1 = 0.0;
    this.t3x_1 = 0.0;
    this.u3x_1 = MutableColor_init_$Create$();
    this.v3x_1 = false;
    this.w3x_1 = false;
  }
  CachedTextGeometry.prototype.l3y = function (text, font) {
    checkCache(this, text, font);
    if (!this.v3x_1) {
      this.v3x_1 = true;
      font.m3y(text, this.p3x_1);
    }
    return this.p3x_1;
  };
  CachedTextGeometry.prototype.n3y = function (target, textProps, textColor, textRotation, textClip) {
    if (hasContentChanged(this, textRotation, textColor)) {
      rebuildTextGeometry(this, textProps, textColor, textRotation);
    }
    updateTextCache(this, textProps, textClip);
    this.u3w(target);
  };
  CachedTextGeometry.prototype.o3y = function (target, textProps, textColor, textRotation, textClip, $mask0, $handler) {
    if (!(($mask0 & 8) === 0))
      textRotation = 0.0;
    if (!(($mask0 & 16) === 0))
      textClip = this.r3w().z3s_1;
    return this.n3y(target, textProps, textColor, textRotation, textClip);
  };
  CachedTextGeometry.$metadata$ = classMeta('CachedTextGeometry', undefined, undefined, undefined, undefined, CachedGeometry.prototype);
  function CellLayout() {
    CellLayout_instance = this;
  }
  CellLayout.prototype.p3y = function (uiNode, ctx) {
    var tmp$ret$6;
    {
      {
      }
      var modWidth = uiNode.s3t().u3z();
      var modHeight = uiNode.s3t().v3z();
      var measuredWidth = 0.0;
      var measuredHeight = 0.0;
      var isDynamicWidth = true;
      var isDynamicHeight = true;
      if (modWidth instanceof Dp) {
        measuredWidth = _Dp___get_px__impl__e6g4pw(modWidth.w3z_1);
        isDynamicWidth = false;
      }
      if (modHeight instanceof Dp) {
        measuredHeight = _Dp___get_px__impl__e6g4pw(modHeight.w3z_1);
        isDynamicHeight = false;
      }
      if (isDynamicWidth ? true : isDynamicHeight) {
        var inductionVariable = 0;
        var last = uiNode.k3u().m() - 1 | 0;
        if (inductionVariable <= last)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var child = uiNode.k3u().r(i);
            if (isDynamicWidth) {
              var tmp$ret$0;
              {
                var tmp0_max = uiNode.u3u();
                var tmp1_max = child.y3u();
                tmp$ret$0 = Math.max(tmp0_max, tmp1_max);
              }
              var pStart = tmp$ret$0;
              var tmp$ret$1;
              {
                var tmp2_max = uiNode.v3u();
                var tmp3_max = child.z3u();
                tmp$ret$1 = Math.max(tmp2_max, tmp3_max);
              }
              var pEnd = tmp$ret$1;
              var tmp$ret$2;
              {
                var tmp4_max = measuredWidth;
                var tmp5_max = child.t3s_1 + pStart + pEnd;
                tmp$ret$2 = Math.max(tmp4_max, tmp5_max);
              }
              measuredWidth = tmp$ret$2;
            }
            if (isDynamicHeight) {
              var tmp$ret$3;
              {
                var tmp6_max = uiNode.w3u();
                var tmp7_max = child.a3v();
                tmp$ret$3 = Math.max(tmp6_max, tmp7_max);
              }
              var pTop = tmp$ret$3;
              var tmp$ret$4;
              {
                var tmp8_max = uiNode.x3u();
                var tmp9_max = child.b3v();
                tmp$ret$4 = Math.max(tmp8_max, tmp9_max);
              }
              var pBottom = tmp$ret$4;
              var tmp$ret$5;
              {
                var tmp10_max = measuredHeight;
                var tmp11_max = child.u3s_1 + pTop + pBottom;
                tmp$ret$5 = Math.max(tmp10_max, tmp11_max);
              }
              measuredHeight = tmp$ret$5;
            }
          }
           while (inductionVariable <= last);
        if (modWidth instanceof Grow)
          measuredWidth = modWidth.a40(measuredWidth, measuredWidth);
        if (modHeight instanceof Grow)
          measuredHeight = modHeight.a40(measuredHeight, measuredHeight);
      }
      tmp$ret$6 = uiNode.f3v(measuredWidth, measuredHeight);
    }
    return tmp$ret$6;
  };
  CellLayout.prototype.b40 = function (uiNode, ctx) {
    var tmp$ret$8;
    {
      {
      }
      {
        {
          var tmp0_forEach = uiNode.k3u();
          var tmp0_iterator = tmp0_forEach.h();
          while (tmp0_iterator.n()) {
            var element = tmp0_iterator.o();
            {
              var tmp = uiNode.n3u();
              var tmp$ret$0;
              {
                var tmp0_max = uiNode.u3u();
                var tmp1_max = element.y3u();
                tmp$ret$0 = Math.max(tmp0_max, tmp1_max);
              }
              var tmp_0 = tmp - tmp$ret$0;
              var tmp$ret$1;
              {
                var tmp2_max = uiNode.v3u();
                var tmp3_max = element.z3u();
                tmp$ret$1 = Math.max(tmp2_max, tmp3_max);
              }
              var growSpaceW = tmp_0 - tmp$ret$1;
              var tmp_1 = uiNode.o3u();
              var tmp$ret$2;
              {
                var tmp4_max = uiNode.w3u();
                var tmp5_max = element.a3v();
                tmp$ret$2 = Math.max(tmp4_max, tmp5_max);
              }
              var tmp_2 = tmp_1 - tmp$ret$2;
              var tmp$ret$3;
              {
                var tmp6_max = uiNode.x3u();
                var tmp7_max = element.b3v();
                tmp$ret$3 = Math.max(tmp6_max, tmp7_max);
              }
              var growSpaceH = tmp_2 - tmp$ret$3;
              var tmp$ret$4;
              {
                var tmp8_round = element.h3v(growSpaceW);
                tmp$ret$4 = round(tmp8_round);
              }
              var childWidth = tmp$ret$4;
              var tmp$ret$5;
              {
                var tmp9_round = element.i3v(growSpaceH);
                tmp$ret$5 = round(tmp9_round);
              }
              var childHeight = tmp$ret$5;
              var tmp$ret$6;
              {
                var tmp10_round = uiNode.j3v(element, childWidth);
                tmp$ret$6 = round(tmp10_round);
              }
              var childX = tmp$ret$6;
              var tmp$ret$7;
              {
                var tmp11_round = uiNode.k3v(element, childHeight);
                tmp$ret$7 = round(tmp11_round);
              }
              var childY = tmp$ret$7;
              element.g3v(childX, childY, childX + childWidth, childY + childHeight);
            }
          }
        }
      }
      tmp$ret$8 = uiNode;
    }
  };
  CellLayout.$metadata$ = objectMeta('CellLayout', [Layout]);
  var CellLayout_instance;
  function CellLayout_getInstance() {
    if (CellLayout_instance == null)
      new CellLayout();
    return CellLayout_instance;
  }
  function Companion_19() {
    Companion_instance_19 = this;
    var tmp = this;
    var tmp_0 = Color_0('b2ff00');
    var tmp_1 = Color_0('7cb200');
    var tmp_2 = Color_0('b2ff00').d40(0.6);
    var tmp_3 = Color_0('7cb200').d40(0.6);
    var tmp_4 = Color_0('101010d0');
    var tmp_5 = Color_0('202020d0');
    var tmp_6 = Companion_getInstance_43().k34_1;
    tmp.e40_1 = this.f40(tmp_0, tmp_1, tmp_2, tmp_3, tmp_4, tmp_5, tmp_6, null, null, false, 896, null);
  }
  Companion_19.prototype.g40 = function (primary, primaryVariant, secondary, secondaryVariant, background, backgroundVariant, onPrimary, onSecondary, onBackground, isLight) {
    return new Colors(primary, primaryVariant, secondary, secondaryVariant, background, backgroundVariant, onPrimary, onSecondary, onBackground, isLight);
  };
  Companion_19.prototype.f40 = function (primary, primaryVariant, secondary, secondaryVariant, background, backgroundVariant, onPrimary, onSecondary, onBackground, isLight, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      primary = Color_0('ffb703ff');
    if (!(($mask0 & 2) === 0))
      primaryVariant = Color_0('fb8500f0');
    if (!(($mask0 & 4) === 0))
      secondary = Color_0('8ecae6ff');
    if (!(($mask0 & 8) === 0))
      secondaryVariant = Color_0('219ebcff');
    if (!(($mask0 & 16) === 0))
      background = Color_0('023047ff');
    if (!(($mask0 & 32) === 0))
      backgroundVariant = Color_0('143d52ff');
    if (!(($mask0 & 64) === 0))
      onPrimary = Companion_getInstance_43().o34_1;
    if (!(($mask0 & 128) === 0))
      onSecondary = Companion_getInstance_43().k34_1;
    if (!(($mask0 & 256) === 0))
      onBackground = Color_0('dcf7ffff');
    if (!(($mask0 & 512) === 0))
      isLight = false;
    return this.g40(primary, primaryVariant, secondary, secondaryVariant, background, backgroundVariant, onPrimary, onSecondary, onBackground, isLight);
  };
  Companion_19.$metadata$ = objectMeta('Companion');
  var Companion_instance_19;
  function Companion_getInstance_19() {
    if (Companion_instance_19 == null)
      new Companion_19();
    return Companion_instance_19;
  }
  function Colors(primary, primaryVariant, secondary, secondaryVariant, background, backgroundVariant, onPrimary, onSecondary, onBackground, isLight) {
    Companion_getInstance_19();
    this.h40_1 = primary;
    this.i40_1 = primaryVariant;
    this.j40_1 = secondary;
    this.k40_1 = secondaryVariant;
    this.l40_1 = background;
    this.m40_1 = backgroundVariant;
    this.n40_1 = onPrimary;
    this.o40_1 = onSecondary;
    this.p40_1 = onBackground;
    this.q40_1 = isLight;
  }
  Colors.prototype.r40 = function () {
    return this.l40_1;
  };
  Colors.prototype.toString = function () {
    return 'Colors(primary=' + this.h40_1 + ', primaryVariant=' + this.i40_1 + ', secondary=' + this.j40_1 + ', secondaryVariant=' + this.k40_1 + ', background=' + this.l40_1 + ', backgroundVariant=' + this.m40_1 + ', onPrimary=' + this.n40_1 + ', onSecondary=' + this.o40_1 + ', onBackground=' + this.p40_1 + ', isLight=' + this.q40_1 + ')';
  };
  Colors.prototype.hashCode = function () {
    var result = this.h40_1.hashCode();
    result = imul(result, 31) + this.i40_1.hashCode() | 0;
    result = imul(result, 31) + this.j40_1.hashCode() | 0;
    result = imul(result, 31) + this.k40_1.hashCode() | 0;
    result = imul(result, 31) + this.l40_1.hashCode() | 0;
    result = imul(result, 31) + this.m40_1.hashCode() | 0;
    result = imul(result, 31) + this.n40_1.hashCode() | 0;
    result = imul(result, 31) + this.o40_1.hashCode() | 0;
    result = imul(result, 31) + this.p40_1.hashCode() | 0;
    result = imul(result, 31) + (this.q40_1 | 0) | 0;
    return result;
  };
  Colors.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Colors))
      return false;
    var tmp0_other_with_cast = other instanceof Colors ? other : THROW_CCE();
    if (!this.h40_1.equals(tmp0_other_with_cast.h40_1))
      return false;
    if (!this.i40_1.equals(tmp0_other_with_cast.i40_1))
      return false;
    if (!this.j40_1.equals(tmp0_other_with_cast.j40_1))
      return false;
    if (!this.k40_1.equals(tmp0_other_with_cast.k40_1))
      return false;
    if (!this.l40_1.equals(tmp0_other_with_cast.l40_1))
      return false;
    if (!this.m40_1.equals(tmp0_other_with_cast.m40_1))
      return false;
    if (!this.n40_1.equals(tmp0_other_with_cast.n40_1))
      return false;
    if (!this.o40_1.equals(tmp0_other_with_cast.o40_1))
      return false;
    if (!this.p40_1.equals(tmp0_other_with_cast.p40_1))
      return false;
    if (!(this.q40_1 === tmp0_other_with_cast.q40_1))
      return false;
    return true;
  };
  Colors.$metadata$ = classMeta('Colors');
  function ColumnLayout() {
    ColumnLayout_instance = this;
  }
  ColumnLayout.prototype.p3y = function (uiNode, ctx) {
    VerticalLayout_getInstance().s40(uiNode, true);
  };
  ColumnLayout.prototype.b40 = function (uiNode, ctx) {
    VerticalLayout_getInstance().t40(uiNode, true);
  };
  ColumnLayout.$metadata$ = objectMeta('ColumnLayout', [Layout]);
  var ColumnLayout_instance;
  function ColumnLayout_getInstance() {
    if (ColumnLayout_instance == null)
      new ColumnLayout();
    return ColumnLayout_instance;
  }
  function determineAvailableGrowSpace(_this__u8e3s4, $this, isTopToBottom) {
    var prevMargin = _this__u8e3s4.w3u();
    var remainingSpace = _this__u8e3s4.o3u();
    var totalWeight = 0.0;
    var indices = isTopToBottom ? get_indices(_this__u8e3s4.k3u()) : reversed(get_indices(_this__u8e3s4.k3u()));
    var inductionVariable = indices.g1_1;
    var last = indices.h1_1;
    var step = indices.i1_1;
    if ((step > 0 ? inductionVariable <= last : false) ? true : step < 0 ? last <= inductionVariable : false)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + step | 0;
        var child = _this__u8e3s4.k3u().r(i);
        var childH = child.s3t().v3z();
        if (childH instanceof Dp)
          remainingSpace = remainingSpace - _Dp___get_px__impl__e6g4pw(childH.w3z_1);
        else {
          if (childH instanceof Grow)
            totalWeight = totalWeight + childH.x3z_1;
          else {
            if (equals(childH, FitContent_getInstance()))
              remainingSpace = remainingSpace - child.u3s_1;
          }
        }
        var tmp = remainingSpace;
        var tmp$ret$0;
        {
          var tmp0_max = prevMargin;
          var tmp1_max = child.a3v();
          tmp$ret$0 = Math.max(tmp0_max, tmp1_max);
        }
        remainingSpace = tmp - tmp$ret$0;
        prevMargin = child.b3v();
        if (i === get_lastIndex(_this__u8e3s4.l3s().k3u())) {
          var tmp_0 = remainingSpace;
          var tmp$ret$1;
          {
            var tmp2_max = prevMargin;
            var tmp3_max = _this__u8e3s4.l3s().x3u();
            tmp$ret$1 = Math.max(tmp2_max, tmp3_max);
          }
          remainingSpace = tmp_0 - tmp$ret$1;
        }
      }
       while (!(i === last));
    if (totalWeight === 0.0)
      totalWeight = 1.0;
    return new MutableVec2f(remainingSpace, totalWeight);
  }
  function VerticalLayout() {
    VerticalLayout_instance = this;
  }
  VerticalLayout.prototype.s40 = function (uiNode, isTopToBottom) {
    var tmp$ret$9;
    {
      {
      }
      var modWidth = uiNode.s3t().u3z();
      var modHeight = uiNode.s3t().v3z();
      var measuredWidth = 0.0;
      var measuredHeight = 0.0;
      var isDynamicWidth = true;
      var isDynamicHeight = true;
      if (modWidth instanceof Dp) {
        measuredWidth = _Dp___get_px__impl__e6g4pw(modWidth.w3z_1);
        isDynamicWidth = false;
      }
      if (modHeight instanceof Dp) {
        measuredHeight = _Dp___get_px__impl__e6g4pw(modHeight.w3z_1);
        isDynamicHeight = false;
      }
      if (isDynamicWidth ? true : isDynamicHeight) {
        var prevMargin = uiNode.w3u();
        var indices = isTopToBottom ? get_indices(uiNode.k3u()) : reversed(get_indices(uiNode.k3u()));
        var inductionVariable = indices.g1_1;
        var last = indices.h1_1;
        var step = indices.i1_1;
        if ((step > 0 ? inductionVariable <= last : false) ? true : step < 0 ? last <= inductionVariable : false)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + step | 0;
            var child = uiNode.k3u().r(i);
            if (isDynamicWidth) {
              var tmp$ret$0;
              {
                var tmp0_max = uiNode.u3u();
                var tmp1_max = child.y3u();
                tmp$ret$0 = Math.max(tmp0_max, tmp1_max);
              }
              var pStart = tmp$ret$0;
              var tmp$ret$1;
              {
                var tmp2_max = uiNode.v3u();
                var tmp3_max = child.z3u();
                tmp$ret$1 = Math.max(tmp2_max, tmp3_max);
              }
              var pEnd = tmp$ret$1;
              var tmp$ret$3;
              {
                var tmp5_max = measuredWidth;
                var tmp$ret$2;
                {
                  var tmp4_round = child.t3s_1 + pStart + pEnd;
                  tmp$ret$2 = round(tmp4_round);
                }
                var tmp6_max = tmp$ret$2;
                tmp$ret$3 = Math.max(tmp5_max, tmp6_max);
              }
              measuredWidth = tmp$ret$3;
            }
            if (isDynamicHeight) {
              var tmp = measuredHeight;
              var tmp$ret$4;
              {
                var tmp7_round = child.u3s_1;
                tmp$ret$4 = round(tmp7_round);
              }
              var tmp_0 = tmp$ret$4;
              var tmp$ret$6;
              {
                var tmp$ret$5;
                {
                  var tmp8_max = prevMargin;
                  var tmp9_max = child.a3v();
                  tmp$ret$5 = Math.max(tmp8_max, tmp9_max);
                }
                var tmp10_round = tmp$ret$5;
                tmp$ret$6 = round(tmp10_round);
              }
              measuredHeight = tmp + (tmp_0 + tmp$ret$6);
              prevMargin = child.b3v();
            }
            if (i === get_lastIndex(uiNode.k3u()) ? isDynamicHeight : false) {
              var tmp_1 = measuredHeight;
              var tmp$ret$8;
              {
                var tmp$ret$7;
                {
                  var tmp11_max = prevMargin;
                  var tmp12_max = uiNode.x3u();
                  tmp$ret$7 = Math.max(tmp11_max, tmp12_max);
                }
                var tmp13_round = tmp$ret$7;
                tmp$ret$8 = round(tmp13_round);
              }
              measuredHeight = tmp_1 + tmp$ret$8;
            }
          }
           while (!(i === last));
        if (modWidth instanceof Grow)
          measuredWidth = modWidth.a40(measuredWidth, measuredWidth);
        if (modHeight instanceof Grow)
          measuredHeight = modHeight.a40(measuredHeight, measuredHeight);
      }
      tmp$ret$9 = uiNode.f3v(measuredWidth, measuredHeight);
    }
    return tmp$ret$9;
  };
  VerticalLayout.prototype.t40 = function (uiNode, isTopToBottom) {
    var tmp$ret$11;
    {
      {
      }
      var growSpace = determineAvailableGrowSpace(uiNode, VerticalLayout_getInstance(), isTopToBottom);
      var y = isTopToBottom ? uiNode.w3s_1 : uiNode.y3s_1;
      var prevMargin = isTopToBottom ? uiNode.w3u() : uiNode.x3u();
      var inductionVariable = 0;
      var last = uiNode.k3u().m() - 1 | 0;
      var tmp;
      if (inductionVariable <= last) {
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var child = uiNode.k3u().r(i);
          var growSpaceH = growSpace.e23() / growSpace.g23();
          var tmp_0 = uiNode.n3u();
          var tmp$ret$0;
          {
            var tmp0_max = uiNode.u3u();
            var tmp1_max = child.y3u();
            tmp$ret$0 = Math.max(tmp0_max, tmp1_max);
          }
          var tmp_1 = tmp_0 - tmp$ret$0;
          var tmp$ret$1;
          {
            var tmp2_max = uiNode.v3u();
            var tmp3_max = child.z3u();
            tmp$ret$1 = Math.max(tmp2_max, tmp3_max);
          }
          var growSpaceW = tmp_1 - tmp$ret$1;
          var tmp$ret$2;
          {
            var tmp4_round = child.h3v(growSpaceW);
            tmp$ret$2 = round(tmp4_round);
          }
          var layoutW = tmp$ret$2;
          var tmp$ret$3;
          {
            var tmp5_round = child.i3v(growSpaceH);
            tmp$ret$3 = round(tmp5_round);
          }
          var layoutH = tmp$ret$3;
          var tmp$ret$4;
          {
            var tmp6_round = uiNode.j3v(child, layoutW);
            tmp$ret$4 = round(tmp6_round);
          }
          var layoutX = tmp$ret$4;
          var ch = child.s3t().v3z();
          if (ch instanceof Grow) {
            var tmp1_this = growSpace;
            tmp1_this.x2i(tmp1_this.e23() - layoutH);
            var tmp2_this = growSpace;
            tmp2_this.y2i(tmp2_this.g23() - ch.x3z_1);
          }
          var layoutY;
          if (isTopToBottom) {
            var tmp_2 = y;
            var tmp$ret$6;
            {
              var tmp$ret$5;
              {
                var tmp7_max = prevMargin;
                var tmp8_max = child.a3v();
                tmp$ret$5 = Math.max(tmp7_max, tmp8_max);
              }
              var tmp9_round = tmp$ret$5;
              tmp$ret$6 = round(tmp9_round);
            }
            y = tmp_2 + tmp$ret$6;
            prevMargin = child.b3v();
            var tmp$ret$7;
            {
              var tmp10_round = y;
              tmp$ret$7 = round(tmp10_round);
            }
            layoutY = tmp$ret$7;
            y = y + layoutH;
          } else {
            var tmp_3 = y;
            var tmp$ret$9;
            {
              var tmp$ret$8;
              {
                var tmp11_max = prevMargin;
                var tmp12_max = child.b3v();
                tmp$ret$8 = Math.max(tmp11_max, tmp12_max);
              }
              var tmp13_round = tmp$ret$8;
              tmp$ret$9 = round(tmp13_round);
            }
            y = tmp_3 - tmp$ret$9;
            prevMargin = child.a3v();
            y = y - layoutH;
            var tmp$ret$10;
            {
              var tmp14_round = y;
              tmp$ret$10 = round(tmp14_round);
            }
            layoutY = tmp$ret$10;
          }
          child.g3v(layoutX, layoutY, layoutX + layoutW, layoutY + layoutH);
        }
         while (inductionVariable <= last);
        tmp = Unit_getInstance();
      }
      tmp$ret$11 = tmp;
    }
    return tmp$ret$11;
  };
  VerticalLayout.$metadata$ = objectMeta('VerticalLayout');
  var VerticalLayout_instance;
  function VerticalLayout_getInstance() {
    if (VerticalLayout_instance == null)
      new VerticalLayout();
    return VerticalLayout_instance;
  }
  function _Dp___init__impl__ms3zkb(value) {
    return value;
  }
  function _Dp___get_value__impl__geb1vb($this) {
    return $this;
  }
  function _Dp___get_px__impl__e6g4pw($this) {
    return _Dp___get_value__impl__geb1vb($this) * UiScale_getInstance().w40_1;
  }
  function Dp__times_impl_bnlh65($this, factor) {
    return _Dp___init__impl__ms3zkb(_Dp___get_value__impl__geb1vb($this) * factor);
  }
  function Dp__compareTo_impl_tlg3dl($this, other) {
    return compareTo(_Dp___get_value__impl__geb1vb($this), _Dp___get_value__impl__geb1vb(other));
  }
  function Dp__compareTo_impl_tlg3dl_0($this, other) {
    var tmp = $this.w3z_1;
    return Dp__compareTo_impl_tlg3dl(tmp, other instanceof Dp ? other.w3z_1 : THROW_CCE());
  }
  function Dp__toString_impl_kcddez($this) {
    return 'Dp(' + _Dp___get_value__impl__geb1vb($this) + ')';
  }
  function Companion_20() {
    Companion_instance_20 = this;
    this.x40_1 = _Dp___init__impl__ms3zkb(0.0);
    this.y40_1 = _Dp___init__impl__ms3zkb(1.0E9);
  }
  Companion_20.prototype.z40 = function (px) {
    return _Dp___init__impl__ms3zkb(px / UiScale_getInstance().w40_1);
  };
  Companion_20.$metadata$ = objectMeta('Companion');
  var Companion_instance_20;
  function Companion_getInstance_20() {
    if (Companion_instance_20 == null)
      new Companion_20();
    return Companion_instance_20;
  }
  function Dp__hashCode_impl_sxkrra($this) {
    return getNumberHashCode($this);
  }
  function Dp__equals_impl_bc4gpq($this, other) {
    if (!(other instanceof Dp))
      return false;
    var tmp0_other_with_cast = other instanceof Dp ? other.w3z_1 : THROW_CCE();
    if (!equals($this, tmp0_other_with_cast))
      return false;
    return true;
  }
  function Dp(value) {
    Companion_getInstance_20();
    this.w3z_1 = value;
  }
  Dp.prototype.a41 = function (other) {
    return Dp__compareTo_impl_tlg3dl(this.w3z_1, other);
  };
  Dp.prototype.sb = function (other) {
    return Dp__compareTo_impl_tlg3dl_0(this, other);
  };
  Dp.prototype.toString = function () {
    return Dp__toString_impl_kcddez(this.w3z_1);
  };
  Dp.prototype.hashCode = function () {
    return Dp__hashCode_impl_sxkrra(this.w3z_1);
  };
  Dp.prototype.equals = function (other) {
    return Dp__equals_impl_bc4gpq(this.w3z_1, other);
  };
  Dp.$metadata$ = classMeta('Dp', [Dimension, Comparable]);
  function FitContent() {
    FitContent_instance = this;
  }
  FitContent.prototype.toString = function () {
    return 'FitContent';
  };
  FitContent.$metadata$ = objectMeta('FitContent', [Dimension]);
  var FitContent_instance;
  function FitContent_getInstance() {
    if (FitContent_instance == null)
      new FitContent();
    return FitContent_instance;
  }
  function Grow_init_$Init$(weight, min, max, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      min = new Dp(Companion_getInstance_20().x40_1);
    if (!(($mask0 & 4) === 0))
      max = new Dp(Companion_getInstance_20().y40_1);
    Grow.call($this, weight, min, max);
    return $this;
  }
  function Grow_init_$Create$(weight, min, max, $mask0, $marker) {
    return Grow_init_$Init$(weight, min, max, $mask0, $marker, Object.create(Grow.prototype));
  }
  function Companion_21() {
    Companion_instance_21 = this;
    var tmp = this;
    tmp.b41_1 = Grow_init_$Create$(1.0, null, null, 6, null);
  }
  Companion_21.prototype.c41 = function () {
    return this.b41_1;
  };
  Companion_21.$metadata$ = objectMeta('Companion');
  var Companion_instance_21;
  function Companion_getInstance_21() {
    if (Companion_instance_21 == null)
      new Companion_21();
    return Companion_instance_21;
  }
  function Grow(weight, min, max) {
    Companion_getInstance_21();
    this.x3z_1 = weight;
    this.y3z_1 = min;
    this.z3z_1 = max;
  }
  Grow.prototype.toString = function () {
    return 'Grow(weight=' + this.x3z_1 + ')';
  };
  Grow.prototype.a40 = function (px, contentSize) {
    var tmp;
    var tmp_0 = this.y3z_1;
    if (tmp_0 instanceof Dp) {
      tmp = _Dp___get_px__impl__e6g4pw(this.y3z_1.w3z_1);
    } else {
      tmp = contentSize;
    }
    var minPx = tmp;
    var tmp_1;
    var tmp_2 = this.z3z_1;
    if (tmp_2 instanceof Dp) {
      tmp_1 = _Dp___get_px__impl__e6g4pw(this.z3z_1.w3z_1);
    } else {
      tmp_1 = contentSize;
    }
    var maxPx = tmp_1;
    var tmp$ret$0;
    {
      tmp$ret$0 = px < minPx ? minPx : px > maxPx ? maxPx : px;
    }
    return tmp$ret$0;
  };
  Grow.$metadata$ = classMeta('Grow', [Dimension]);
  function Dimension() {
  }
  Dimension.$metadata$ = interfaceMeta('Dimension');
  function Focusable() {
  }
  Focusable.$metadata$ = interfaceMeta('Focusable', [UiScope]);
  function Layout() {
  }
  Layout.$metadata$ = interfaceMeta('Layout');
  function MsdfUiShader$Model$lambda$lambda($fgColor, $this_vertexStage, $glowColor, $msdfProps, $clipBounds, $uv, this$0, $screenPos) {
    return function ($this$main) {
      $this$main.h30($fgColor.n37(), $this_vertexStage.o37(Companion_getInstance_31().r2z_1.x2s_1));
      $this$main.h30($glowColor.n37(), $this_vertexStage.o37(Companion_getInstance_22().j3y_1.x2s_1));
      $this$main.h30($msdfProps.n37(), $this_vertexStage.o37(Companion_getInstance_22().i3y_1.x2s_1));
      $this$main.h30($clipBounds.n37(), $this_vertexStage.o37(Companion_getInstance_26().n3w_1.x2s_1));
      $this$main.h30($uv.n37(), $this_vertexStage.i39(Companion_getInstance_31().q2z_1.x2s_1));
      var tmp = mvpMatrix(this$0).m2h();
      var mvp = $this$main.m2z(tmp, null, 2, null);
      var tmp_0 = $this$main.g30($this_vertexStage.f30(Companion_getInstance_31().n2z_1.x2s_1), 1.0);
      var vertexPos = $this$main.y35(tmp_0, null, 2, null);
      $this$main.h30($screenPos.n37(), get_xy_0(vertexPos));
      $this$main.h30($this_vertexStage.d2s_1, times(mvp, vertexPos));
      return Unit_getInstance();
    };
  }
  function MsdfUiShader$Model$lambda($fgColor, $glowColor, $msdfProps, $clipBounds, $uv, this$0, $screenPos) {
    return function ($this$vertexStage) {
      $this$vertexStage.i30(MsdfUiShader$Model$lambda$lambda($fgColor, $this$vertexStage, $glowColor, $msdfProps, $clipBounds, $uv, this$0, $screenPos));
      return Unit_getInstance();
    };
  }
  function MsdfUiShader$Model$lambda$lambda$lambda($p) {
    return function ($this$body) {
      return $this$body.e3o($this$body.f3o(get_x($p), get_y($p)), $this$body.f3o($this$body.e3o(get_x($p), get_y($p)), get_z($p)));
    };
  }
  function MsdfUiShader$Model$lambda$lambda_0() {
    return function ($this$functionFloat1) {
      var p = $this$functionFloat1.n38('p');
      $this$functionFloat1.o38(MsdfUiShader$Model$lambda$lambda$lambda(p));
      return Unit_getInstance();
    };
  }
  function MsdfUiShader$Model$lambda$lambda$lambda_0($median3, $msdf, $props) {
    return function ($this$body) {
      var tmp = $this$body.x3n($median3, [$msdf]);
      var sd = $this$body.g3n(tmp, null, 2, null);
      var tmp_0 = plus_2(minus_1(sd, $this$body.d38(0.5)), get_y($props));
      var dist = $this$body.g3n(tmp_0, null, 2, null);
      var p = $this$body.k3o(get_z($props), dist);
      $this$body.h30(dist, plus_2(dist, times_2(times_2(p, $this$body.d38(2.0)), minus_1(get_z($props), dist))));
      var tmp_1 = times_2(get_x($props), dist);
      var screenPxDistance = $this$body.g3n(tmp_1, null, 2, null);
      return $this$body.z3n(plus_2(screenPxDistance, $this$body.d38(0.5)), $this$body.d38(0.0), $this$body.d38(1.0));
    };
  }
  function MsdfUiShader$Model$lambda$lambda_1($median3) {
    return function ($this$functionFloat1) {
      var msdf = $this$functionFloat1.n38('msdf');
      var props = $this$functionFloat1.g3l('props');
      $this$functionFloat1.o38(MsdfUiShader$Model$lambda$lambda$lambda_0($median3, msdf, props));
      return Unit_getInstance();
    };
  }
  function MsdfUiShader$Model$lambda$lambda$lambda_1() {
    return function ($this$if) {
      $this$if.v3n();
      return Unit_getInstance();
    };
  }
  function MsdfUiShader$Model$lambda$lambda$lambda_2($fgColor, this$0, $uv, $msdfProps, $computeOpacity, $glowColor, $this_fragmentStage) {
    return function ($this$else) {
      var tmp = $fgColor.q36();
      var color = $this$else.y35(tmp, null, 2, null);
      var fontMap = this$0.r31('tFontMap');
      var tmp_0 = $uv.q36();
      var msdfVals = $this$else.x35(fontMap, tmp_0, null, 4, null);
      var pxRange = get_x($msdfProps.q36());
      var weight = get_y($msdfProps.q36());
      var tmp_1 = plus_2(minus_1(get_a(msdfVals), $this$else.d38(0.5)), weight);
      var dist = $this$else.g3n(tmp_1, null, 2, null);
      var tmp_2 = times_2(pxRange, dist);
      var screenPxDistance = $this$else.g3n(tmp_2, null, 2, null);
      var tmp_3 = $this$else.z3n(plus_2(screenPxDistance, $this$else.d38(0.5)), $this$else.d38(0.0), $this$else.d38(1.0));
      var sdfOpa = $this$else.g3n(tmp_3, null, 2, null);
      var msdfOpa = $this$else.x3n($computeOpacity, [get_rgb(msdfVals), $msdfProps.q36()]);
      var tmp_4 = $this$else.i3o($this$else.d38(5.0), $this$else.d38(10.0), pxRange);
      var wMsdf = $this$else.g3n(tmp_4, null, 2, null);
      var tmp0_receiver = color;
      $this$else.z2z(get_a(tmp0_receiver), plus_2(times_2(sdfOpa, minus_1($this$else.d38(1.0), wMsdf)), times_2(msdfOpa, wMsdf)));
      var tmp_5 = $glowColor.q36();
      var glow = $this$else.y35(tmp_5, null, 2, null);
      var tmp1_receiver = glow;
      $this$else.z2z(get_a(tmp1_receiver), times_2($this$else.i3o($this$else.d38(0.0), $this$else.d38(1.0), times_2(get_a(msdfVals), $this$else.d38(1.5))), minus_1($this$else.d38(1.0), get_a(color))));
      var tmp_6 = $this$else.d3n(plus_0(times_0(get_rgb(color), get_a(color)), times_0(get_rgb(glow), get_a(glow))), plus_2(get_a(color), get_a(glow)));
      var outColor = $this$else.y35(tmp_6, null, 2, null);
      $this_fragmentStage.r3p($this$else, outColor, 0, 2, null);
      return Unit_getInstance();
    };
  }
  function MsdfUiShader$Model$lambda$lambda_2($screenPos, $clipBounds, $fgColor, this$0, $uv, $msdfProps, $computeOpacity, $glowColor, $this_fragmentStage) {
    return function ($this$main) {
      var tmp = or_0($this$main.w3n(lt_0($screenPos.q36(), get_xy_0($clipBounds.q36()))), $this$main.w3n(gt_0($screenPos.q36(), get_zw($clipBounds.q36()))));
      var tmp_0 = $this$main.s3n(tmp, MsdfUiShader$Model$lambda$lambda$lambda_1());
      tmp_0.n3l(MsdfUiShader$Model$lambda$lambda$lambda_2($fgColor, this$0, $uv, $msdfProps, $computeOpacity, $glowColor, $this_fragmentStage));
      return Unit_getInstance();
    };
  }
  function MsdfUiShader$Model$lambda_0($screenPos, $clipBounds, $fgColor, this$0, $uv, $msdfProps, $glowColor) {
    return function ($this$fragmentStage) {
      var median3 = functionFloat1($this$fragmentStage, 'median', MsdfUiShader$Model$lambda$lambda_0());
      var computeOpacity = functionFloat1($this$fragmentStage, 'computeOpacity', MsdfUiShader$Model$lambda$lambda_1(median3));
      $this$fragmentStage.i30(MsdfUiShader$Model$lambda$lambda_2($screenPos, $clipBounds, $fgColor, this$0, $uv, $msdfProps, computeOpacity, $glowColor, $this$fragmentStage));
      return Unit_getInstance();
    };
  }
  function Model_0() {
    KslProgram.call(this, 'Msdf UI2 Shader');
    var fgColor = this.v31(null, KslInterStageInterpolation_Flat_getInstance(), 1, null);
    var glowColor = this.v31(null, KslInterStageInterpolation_Flat_getInstance(), 1, null);
    var msdfProps = this.v31(null, KslInterStageInterpolation_Flat_getInstance(), 1, null);
    var clipBounds = this.v31(null, KslInterStageInterpolation_Flat_getInstance(), 1, null);
    var screenPos = this.t31(null, null, 3, null);
    var uv = this.t31(null, null, 3, null);
    this.j31(MsdfUiShader$Model$lambda(fgColor, glowColor, msdfProps, clipBounds, uv, this, screenPos));
    this.k31(MsdfUiShader$Model$lambda_0(screenPos, clipBounds, fgColor, this, uv, msdfProps, glowColor));
  }
  Model_0.$metadata$ = classMeta('Model', undefined, undefined, undefined, undefined, KslProgram.prototype);
  function Companion_22() {
    Companion_instance_22 = this;
    this.i3y_1 = new Attribute('aMsdfProps', GlslType_VEC_4F_getInstance());
    this.j3y_1 = new Attribute('aGlowColor', GlslType_VEC_4F_getInstance());
    this.k3y_1 = listOf([this.i3y_1, Companion_getInstance_31().r2z_1, this.j3y_1, Companion_getInstance_26().n3w_1, Companion_getInstance_31().n2z_1, Companion_getInstance_31().q2z_1]);
  }
  Companion_22.prototype.g41 = function () {
    return this.i3y_1;
  };
  Companion_22.prototype.h41 = function () {
    return this.j3y_1;
  };
  Companion_22.$metadata$ = objectMeta('Companion');
  var Companion_instance_22;
  function Companion_getInstance_22() {
    if (Companion_instance_22 == null)
      new Companion_22();
    return Companion_instance_22;
  }
  function MsdfUiShader() {
    Companion_getInstance_22();
    var tmp = new Model_0();
    var tmp$ret$0;
    {
      var tmp0_apply = new PipelineConfig();
      {
      }
      {
        tmp0_apply.x2t_1 = CullMethod_NO_CULLING_getInstance();
        tmp0_apply.w2t_1 = BlendMode_BLEND_PREMULTIPLIED_ALPHA_getInstance();
      }
      tmp$ret$0 = tmp0_apply;
    }
    KslShader.call(this, tmp, tmp$ret$0);
    var tmp_0 = this;
    tmp_0.s41_1 = this.x2y('tFontMap', null, 2, null);
  }
  MsdfUiShader.prototype.t41 = function (_set____db54di) {
    return this.s41_1.d2w(this, fontMap$factory(), _set____db54di);
  };
  MsdfUiShader.prototype.u41 = function () {
    return this.s41_1.o2u(this, fontMap$factory_0());
  };
  MsdfUiShader.$metadata$ = classMeta('MsdfUiShader', undefined, undefined, undefined, undefined, KslShader.prototype);
  function fontMap$factory() {
    return getPropertyCallableRef('fontMap', 1, KMutableProperty1, function (receiver) {
      return receiver.u41();
    }, function (receiver, value) {
      return receiver.t41(value);
    });
  }
  function fontMap$factory_0() {
    return getPropertyCallableRef('fontMap', 1, KMutableProperty1, function (receiver) {
      return receiver.u41();
    }, function (receiver, value) {
      return receiver.t41(value);
    });
  }
  function notifyListeners($this, newState) {
    var tmp$ret$0;
    {
      var tmp0_isNotEmpty = $this.a3s_1;
      tmp$ret$0 = !tmp0_isNotEmpty.q();
    }
    if (tmp$ret$0) {
      var inductionVariable = 0;
      var last = $this.a3s_1.m() - 1 | 0;
      if (inductionVariable <= last)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          $this.a3s_1.r(i)(newState);
        }
         while (inductionVariable <= last);
    }
  }
  function MutableStateValue(initValue) {
    MutableState.call(this);
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.a3s_1 = tmp$ret$0;
    this.b3s_1 = initValue;
  }
  MutableStateValue.prototype.n2u = function (value) {
    if (!equals(value, this.b3s_1)) {
      this.e3s();
      notifyListeners(this, value);
    }
    this.b3s_1 = value;
  };
  MutableStateValue.prototype.n2 = function () {
    return this.b3s_1;
  };
  MutableStateValue.prototype.m1e = function (value) {
    this.n2u(value);
  };
  MutableStateValue.prototype.g3s = function (surface) {
    this.i3s(surface);
    return this.b3s_1;
  };
  MutableStateValue.prototype.h3s = function (block) {
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.a3s_1;
      tmp0_plusAssign.b(block);
    }
    return this;
  };
  MutableStateValue.prototype.toString = function () {
    return 'mutableStateOf(' + this.b3s_1 + ')';
  };
  MutableStateValue.$metadata$ = classMeta('MutableStateValue', undefined, undefined, undefined, undefined, MutableState.prototype);
  function mutableStateOf(value) {
    return new MutableStateValue(value);
  }
  function toggle(_this__u8e3s4) {
    _this__u8e3s4.n2u(!_this__u8e3s4.b3s_1);
  }
  function MutableState() {
    this.c3s_1 = true;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.d3s_1 = tmp$ret$0;
  }
  MutableState.prototype.e3s = function () {
    if (!this.c3s_1) {
      this.c3s_1 = true;
      var inductionVariable = 0;
      var last = this.d3s_1.m() - 1 | 0;
      if (inductionVariable <= last)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          this.d3s_1.r(i).p43();
        }
         while (inductionVariable <= last);
    }
  };
  MutableState.prototype.i3s = function (surface) {
    if (!this.d3s_1.p(surface)) {
      var tmp0_this = this;
      {
        var tmp0_plusAssign = tmp0_this.d3s_1;
        tmp0_plusAssign.b(surface);
      }
      surface.q43(this);
      if (this.c3s_1) {
        surface.p43();
      }
    }
  };
  MutableState.prototype.j3s = function (surface) {
    var tmp0_this = this;
    {
      var tmp0_minusAssign = tmp0_this.d3s_1;
      tmp0_minusAssign.c4(surface);
    }
    this.c3s_1 = false;
  };
  MutableState.$metadata$ = classMeta('MutableState');
  function Panel(colors, sizes, name, content) {
    var surface = new UiSurface(colors, sizes, name);
    var tmp = surface;
    tmp.h43_1 = Panel$lambda(colors, content);
    return surface;
  }
  function Panel$default(colors, sizes, name, content, $mask0, $handler) {
    if (!(($mask0 & 1) === 0)) {
      var tmp = Companion_getInstance_19();
      colors = tmp.f40(null, null, null, null, null, null, null, null, null, false, 1023, null);
    }
    if (!(($mask0 & 2) === 0))
      sizes = Companion_getInstance_23().s43_1;
    if (!(($mask0 & 4) === 0))
      name = 'Panel';
    return Panel(colors, sizes, name, content);
  }
  function Panel$lambda($colors, $content) {
    return function ($this$null) {
      var tmp$ret$0;
      {
        var tmp0_Box = FitContent_getInstance();
        var tmp1_Box = FitContent_getInstance();
        var box = $this$null.l3s().b3t(getKClass(BoxNode), Companion_getInstance_17().t3t_1);
        size(box.s3t(), tmp0_Box, tmp1_Box);
        {
          layout(backgroundColor(box.s3t(), $colors.l40_1), ColumnLayout_getInstance());
          $content(box);
        }
        tmp$ret$0 = box;
      }
      return Unit_getInstance();
    };
  }
  function Clickable() {
  }
  Clickable.$metadata$ = interfaceMeta('Clickable');
  function RowLayout() {
    RowLayout_instance = this;
  }
  RowLayout.prototype.p3y = function (uiNode, ctx) {
    HorizontalLayout_getInstance().s40(uiNode, true);
  };
  RowLayout.prototype.b40 = function (uiNode, ctx) {
    HorizontalLayout_getInstance().t40(uiNode, true);
  };
  RowLayout.$metadata$ = objectMeta('RowLayout', [Layout]);
  var RowLayout_instance;
  function RowLayout_getInstance() {
    if (RowLayout_instance == null)
      new RowLayout();
    return RowLayout_instance;
  }
  function determineAvailableGrowSpace_0(_this__u8e3s4, $this, isStartToEnd) {
    var prevMargin = _this__u8e3s4.u3u();
    var remainingSpace = _this__u8e3s4.n3u();
    var totalWeight = 0.0;
    var indices = isStartToEnd ? get_indices(_this__u8e3s4.k3u()) : reversed(get_indices(_this__u8e3s4.k3u()));
    var inductionVariable = indices.g1_1;
    var last = indices.h1_1;
    var step = indices.i1_1;
    if ((step > 0 ? inductionVariable <= last : false) ? true : step < 0 ? last <= inductionVariable : false)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + step | 0;
        var child = _this__u8e3s4.k3u().r(i);
        var childW = child.s3t().u3z();
        if (childW instanceof Dp)
          remainingSpace = remainingSpace - _Dp___get_px__impl__e6g4pw(childW.w3z_1);
        else {
          if (childW instanceof Grow)
            totalWeight = totalWeight + childW.x3z_1;
          else {
            if (equals(childW, FitContent_getInstance()))
              remainingSpace = remainingSpace - child.t3s_1;
          }
        }
        var tmp = remainingSpace;
        var tmp$ret$0;
        {
          var tmp0_max = prevMargin;
          var tmp1_max = child.y3u();
          tmp$ret$0 = Math.max(tmp0_max, tmp1_max);
        }
        remainingSpace = tmp - tmp$ret$0;
        prevMargin = child.z3u();
        if (i === get_lastIndex(_this__u8e3s4.l3s().k3u())) {
          var tmp_0 = remainingSpace;
          var tmp$ret$1;
          {
            var tmp2_max = prevMargin;
            var tmp3_max = _this__u8e3s4.l3s().v3u();
            tmp$ret$1 = Math.max(tmp2_max, tmp3_max);
          }
          remainingSpace = tmp_0 - tmp$ret$1;
        }
      }
       while (!(i === last));
    if (totalWeight === 0.0)
      totalWeight = 1.0;
    return new MutableVec2f(remainingSpace, totalWeight);
  }
  function HorizontalLayout() {
    HorizontalLayout_instance = this;
  }
  HorizontalLayout.prototype.s40 = function (uiNode, isStartToEnd) {
    var tmp$ret$9;
    {
      {
      }
      var modWidth = uiNode.s3t().u3z();
      var modHeight = uiNode.s3t().v3z();
      var measuredWidth = 0.0;
      var measuredHeight = 0.0;
      var isDynamicWidth = true;
      var isDynamicHeight = true;
      if (modWidth instanceof Dp) {
        measuredWidth = _Dp___get_px__impl__e6g4pw(modWidth.w3z_1);
        isDynamicWidth = false;
      }
      if (modHeight instanceof Dp) {
        measuredHeight = _Dp___get_px__impl__e6g4pw(modHeight.w3z_1);
        isDynamicHeight = false;
      }
      if (isDynamicWidth ? true : isDynamicHeight) {
        var prevMargin = uiNode.w3u();
        var indices = isStartToEnd ? get_indices(uiNode.k3u()) : reversed(get_indices(uiNode.k3u()));
        var inductionVariable = indices.g1_1;
        var last = indices.h1_1;
        var step = indices.i1_1;
        if ((step > 0 ? inductionVariable <= last : false) ? true : step < 0 ? last <= inductionVariable : false)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + step | 0;
            var child = uiNode.k3u().r(i);
            if (isDynamicWidth) {
              var tmp = measuredWidth;
              var tmp$ret$0;
              {
                var tmp0_round = child.t3s_1;
                tmp$ret$0 = round(tmp0_round);
              }
              var tmp_0 = tmp$ret$0;
              var tmp$ret$2;
              {
                var tmp$ret$1;
                {
                  var tmp1_max = prevMargin;
                  var tmp2_max = child.y3u();
                  tmp$ret$1 = Math.max(tmp1_max, tmp2_max);
                }
                var tmp3_round = tmp$ret$1;
                tmp$ret$2 = round(tmp3_round);
              }
              measuredWidth = tmp + (tmp_0 + tmp$ret$2);
              prevMargin = child.z3u();
            }
            if (isDynamicHeight) {
              var tmp$ret$3;
              {
                var tmp4_max = uiNode.w3u();
                var tmp5_max = child.a3v();
                tmp$ret$3 = Math.max(tmp4_max, tmp5_max);
              }
              var pTop = tmp$ret$3;
              var tmp$ret$4;
              {
                var tmp6_max = uiNode.x3u();
                var tmp7_max = child.b3v();
                tmp$ret$4 = Math.max(tmp6_max, tmp7_max);
              }
              var pBottom = tmp$ret$4;
              var tmp$ret$6;
              {
                var tmp9_max = measuredHeight;
                var tmp$ret$5;
                {
                  var tmp8_round = child.u3s_1 + pTop + pBottom;
                  tmp$ret$5 = round(tmp8_round);
                }
                var tmp10_max = tmp$ret$5;
                tmp$ret$6 = Math.max(tmp9_max, tmp10_max);
              }
              measuredHeight = tmp$ret$6;
            }
            if (i === get_lastIndex(uiNode.k3u()) ? isDynamicWidth : false) {
              var tmp_1 = measuredWidth;
              var tmp$ret$8;
              {
                var tmp$ret$7;
                {
                  var tmp11_max = prevMargin;
                  var tmp12_max = uiNode.v3u();
                  tmp$ret$7 = Math.max(tmp11_max, tmp12_max);
                }
                var tmp13_round = tmp$ret$7;
                tmp$ret$8 = round(tmp13_round);
              }
              measuredWidth = tmp_1 + tmp$ret$8;
            }
          }
           while (!(i === last));
        if (modWidth instanceof Grow)
          measuredWidth = modWidth.a40(measuredWidth, measuredWidth);
        if (modHeight instanceof Grow)
          measuredHeight = modHeight.a40(measuredHeight, measuredHeight);
      }
      tmp$ret$9 = uiNode.f3v(measuredWidth, measuredHeight);
    }
    return tmp$ret$9;
  };
  HorizontalLayout.prototype.t40 = function (uiNode, isStartToEnd) {
    var tmp$ret$11;
    {
      {
      }
      var growSpace = determineAvailableGrowSpace_0(uiNode, HorizontalLayout_getInstance(), isStartToEnd);
      var x = isStartToEnd ? uiNode.v3s_1 : uiNode.x3s_1;
      var prevMargin = isStartToEnd ? uiNode.u3u() : uiNode.v3u();
      var inductionVariable = 0;
      var last = uiNode.k3u().m() - 1 | 0;
      var tmp;
      if (inductionVariable <= last) {
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var child = uiNode.k3u().r(i);
          var growSpaceW = growSpace.e23() / growSpace.g23();
          var tmp_0 = uiNode.o3u();
          var tmp$ret$0;
          {
            var tmp0_max = uiNode.w3u();
            var tmp1_max = child.a3v();
            tmp$ret$0 = Math.max(tmp0_max, tmp1_max);
          }
          var tmp_1 = tmp_0 - tmp$ret$0;
          var tmp$ret$1;
          {
            var tmp2_max = uiNode.x3u();
            var tmp3_max = child.b3v();
            tmp$ret$1 = Math.max(tmp2_max, tmp3_max);
          }
          var growSpaceH = tmp_1 - tmp$ret$1;
          var tmp$ret$2;
          {
            var tmp4_round = child.h3v(growSpaceW);
            tmp$ret$2 = round(tmp4_round);
          }
          var layoutW = tmp$ret$2;
          var tmp$ret$3;
          {
            var tmp5_round = child.i3v(growSpaceH);
            tmp$ret$3 = round(tmp5_round);
          }
          var layoutH = tmp$ret$3;
          var tmp$ret$4;
          {
            var tmp6_round = uiNode.k3v(child, layoutH);
            tmp$ret$4 = round(tmp6_round);
          }
          var layoutY = tmp$ret$4;
          var cw = child.s3t().u3z();
          if (cw instanceof Grow) {
            var tmp1_this = growSpace;
            tmp1_this.x2i(tmp1_this.e23() - layoutW);
            var tmp2_this = growSpace;
            tmp2_this.y2i(tmp2_this.g23() - cw.x3z_1);
          }
          var layoutX;
          if (isStartToEnd) {
            var tmp_2 = x;
            var tmp$ret$6;
            {
              var tmp$ret$5;
              {
                var tmp7_max = prevMargin;
                var tmp8_max = child.y3u();
                tmp$ret$5 = Math.max(tmp7_max, tmp8_max);
              }
              var tmp9_round = tmp$ret$5;
              tmp$ret$6 = round(tmp9_round);
            }
            x = tmp_2 + tmp$ret$6;
            prevMargin = child.z3u();
            var tmp$ret$7;
            {
              var tmp10_round = x;
              tmp$ret$7 = round(tmp10_round);
            }
            layoutX = tmp$ret$7;
            x = x + layoutW;
          } else {
            var tmp_3 = x;
            var tmp$ret$9;
            {
              var tmp$ret$8;
              {
                var tmp11_max = prevMargin;
                var tmp12_max = child.z3u();
                tmp$ret$8 = Math.max(tmp11_max, tmp12_max);
              }
              var tmp13_round = tmp$ret$8;
              tmp$ret$9 = round(tmp13_round);
            }
            x = tmp_3 - tmp$ret$9;
            prevMargin = child.y3u();
            x = x - layoutW;
            var tmp$ret$10;
            {
              var tmp14_round = x;
              tmp$ret$10 = round(tmp14_round);
            }
            layoutX = tmp$ret$10;
          }
          child.g3v(layoutX, layoutY, layoutX + layoutW, layoutY + layoutH);
        }
         while (inductionVariable <= last);
        tmp = Unit_getInstance();
      }
      tmp$ret$11 = tmp;
    }
    return tmp$ret$11;
  };
  HorizontalLayout.$metadata$ = objectMeta('HorizontalLayout');
  var HorizontalLayout_instance;
  function HorizontalLayout_getInstance() {
    if (HorizontalLayout_instance == null)
      new HorizontalLayout();
    return HorizontalLayout_instance;
  }
  function Companion_23() {
    Companion_instance_23 = this;
    var tmp = this;
    tmp.r43_1 = this.v43(null, null, null, null, null, null, null, null, null, null, 1023, null);
    var tmp_0 = this;
    tmp_0.s43_1 = this.w43(null, null, null, null, null, null, null, null, null, null, 1023, null);
    var tmp_1 = this;
    tmp_1.t43_1 = this.x43(null, null, null, null, null, null, null, null, null, null, 1023, null);
  }
  Companion_23.prototype.y43 = function (normalText, largeText, sliderHeight, checkboxSize, radioButtonSize, switchSize, gap, smallGap, largeGap, borderWidth) {
    return new Sizes(normalText, largeText, sliderHeight, checkboxSize, radioButtonSize, switchSize, gap, smallGap, largeGap, borderWidth);
  };
  Companion_23.prototype.v43 = function (normalText, largeText, sliderHeight, checkboxSize, radioButtonSize, switchSize, gap, smallGap, largeGap, borderWidth, $mask0, $handler) {
    if (!(($mask0 & 1) === 0)) {
      normalText = MsdfFont_init_$Create$(null, 12.0, 0.0, 0.0, 0.0, null, 61, null);
    }
    if (!(($mask0 & 2) === 0)) {
      largeText = MsdfFont_init_$Create$(null, 16.0, 0.0, 0.0, 0.0, null, 61, null);
    }
    if (!(($mask0 & 4) === 0))
      sliderHeight = _Dp___init__impl__ms3zkb(14.0);
    if (!(($mask0 & 8) === 0))
      checkboxSize = _Dp___init__impl__ms3zkb(14.0);
    if (!(($mask0 & 16) === 0))
      radioButtonSize = _Dp___init__impl__ms3zkb(14.0);
    if (!(($mask0 & 32) === 0))
      switchSize = _Dp___init__impl__ms3zkb(14.0);
    if (!(($mask0 & 64) === 0))
      gap = _Dp___init__impl__ms3zkb(8.0);
    if (!(($mask0 & 128) === 0))
      smallGap = _Dp___init__impl__ms3zkb(4.0);
    if (!(($mask0 & 256) === 0))
      largeGap = _Dp___init__impl__ms3zkb(16.0);
    if (!(($mask0 & 512) === 0))
      borderWidth = _Dp___init__impl__ms3zkb(1.0);
    return this.y43(normalText, largeText, sliderHeight, checkboxSize, radioButtonSize, switchSize, gap, smallGap, largeGap, borderWidth);
  };
  Companion_23.prototype.z43 = function (normalText, largeText, sliderHeight, checkboxSize, radioButtonSize, switchSize, gap, smallGap, largeGap, borderWidth) {
    return new Sizes(normalText, largeText, sliderHeight, checkboxSize, radioButtonSize, switchSize, gap, smallGap, largeGap, borderWidth);
  };
  Companion_23.prototype.w43 = function (normalText, largeText, sliderHeight, checkboxSize, radioButtonSize, switchSize, gap, smallGap, largeGap, borderWidth, $mask0, $handler) {
    if (!(($mask0 & 1) === 0)) {
      normalText = MsdfFont_init_$Create$(null, 15.0, 0.0, 0.0, 0.0, null, 61, null);
    }
    if (!(($mask0 & 2) === 0)) {
      largeText = MsdfFont_init_$Create$(null, 20.0, 0.0, 0.0, 0.0, null, 61, null);
    }
    if (!(($mask0 & 4) === 0))
      sliderHeight = _Dp___init__impl__ms3zkb(17.0);
    if (!(($mask0 & 8) === 0))
      checkboxSize = _Dp___init__impl__ms3zkb(17.0);
    if (!(($mask0 & 16) === 0))
      radioButtonSize = _Dp___init__impl__ms3zkb(17.0);
    if (!(($mask0 & 32) === 0))
      switchSize = _Dp___init__impl__ms3zkb(17.0);
    if (!(($mask0 & 64) === 0))
      gap = _Dp___init__impl__ms3zkb(10.0);
    if (!(($mask0 & 128) === 0))
      smallGap = _Dp___init__impl__ms3zkb(5.0);
    if (!(($mask0 & 256) === 0))
      largeGap = _Dp___init__impl__ms3zkb(20.0);
    if (!(($mask0 & 512) === 0))
      borderWidth = _Dp___init__impl__ms3zkb(1.25);
    return this.z43(normalText, largeText, sliderHeight, checkboxSize, radioButtonSize, switchSize, gap, smallGap, largeGap, borderWidth);
  };
  Companion_23.prototype.a44 = function (normalText, largeText, sliderHeight, checkboxSize, radioButtonSize, switchSize, gap, smallGap, largeGap, borderWidth) {
    return new Sizes(normalText, largeText, sliderHeight, checkboxSize, radioButtonSize, switchSize, gap, smallGap, largeGap, borderWidth);
  };
  Companion_23.prototype.x43 = function (normalText, largeText, sliderHeight, checkboxSize, radioButtonSize, switchSize, gap, smallGap, largeGap, borderWidth, $mask0, $handler) {
    if (!(($mask0 & 1) === 0)) {
      normalText = MsdfFont_init_$Create$(null, 18.0, 0.0, 0.0, 0.0, null, 61, null);
    }
    if (!(($mask0 & 2) === 0)) {
      largeText = MsdfFont_init_$Create$(null, 24.0, 0.0, 0.0, 0.0, null, 61, null);
    }
    if (!(($mask0 & 4) === 0))
      sliderHeight = _Dp___init__impl__ms3zkb(20.0);
    if (!(($mask0 & 8) === 0))
      checkboxSize = _Dp___init__impl__ms3zkb(20.0);
    if (!(($mask0 & 16) === 0))
      radioButtonSize = _Dp___init__impl__ms3zkb(20.0);
    if (!(($mask0 & 32) === 0))
      switchSize = _Dp___init__impl__ms3zkb(20.0);
    if (!(($mask0 & 64) === 0))
      gap = _Dp___init__impl__ms3zkb(12.0);
    if (!(($mask0 & 128) === 0))
      smallGap = _Dp___init__impl__ms3zkb(6.0);
    if (!(($mask0 & 256) === 0))
      largeGap = _Dp___init__impl__ms3zkb(24.0);
    if (!(($mask0 & 512) === 0))
      borderWidth = _Dp___init__impl__ms3zkb(1.5);
    return this.a44(normalText, largeText, sliderHeight, checkboxSize, radioButtonSize, switchSize, gap, smallGap, largeGap, borderWidth);
  };
  Companion_23.$metadata$ = objectMeta('Companion');
  var Companion_instance_23;
  function Companion_getInstance_23() {
    if (Companion_instance_23 == null)
      new Companion_23();
    return Companion_instance_23;
  }
  function Sizes(normalText, largeText, sliderHeight, checkboxSize, radioButtonSize, switchSize, gap, smallGap, largeGap, borderWidth) {
    Companion_getInstance_23();
    this.b44_1 = normalText;
    this.c44_1 = largeText;
    this.d44_1 = sliderHeight;
    this.e44_1 = checkboxSize;
    this.f44_1 = radioButtonSize;
    this.g44_1 = switchSize;
    this.h44_1 = gap;
    this.i44_1 = smallGap;
    this.j44_1 = largeGap;
    this.k44_1 = borderWidth;
  }
  Sizes.prototype.toString = function () {
    return 'Sizes(normalText=' + this.b44_1 + ', largeText=' + this.c44_1 + ', sliderHeight=' + new Dp(this.d44_1) + ', checkboxSize=' + new Dp(this.e44_1) + ', radioButtonSize=' + new Dp(this.f44_1) + ', switchSize=' + new Dp(this.g44_1) + ', gap=' + new Dp(this.h44_1) + ', smallGap=' + new Dp(this.i44_1) + ', largeGap=' + new Dp(this.j44_1) + ', borderWidth=' + new Dp(this.k44_1) + ')';
  };
  Sizes.prototype.hashCode = function () {
    var result = hashCode(this.b44_1);
    result = imul(result, 31) + hashCode(this.c44_1) | 0;
    result = imul(result, 31) + Dp__hashCode_impl_sxkrra(this.d44_1) | 0;
    result = imul(result, 31) + Dp__hashCode_impl_sxkrra(this.e44_1) | 0;
    result = imul(result, 31) + Dp__hashCode_impl_sxkrra(this.f44_1) | 0;
    result = imul(result, 31) + Dp__hashCode_impl_sxkrra(this.g44_1) | 0;
    result = imul(result, 31) + Dp__hashCode_impl_sxkrra(this.h44_1) | 0;
    result = imul(result, 31) + Dp__hashCode_impl_sxkrra(this.i44_1) | 0;
    result = imul(result, 31) + Dp__hashCode_impl_sxkrra(this.j44_1) | 0;
    result = imul(result, 31) + Dp__hashCode_impl_sxkrra(this.k44_1) | 0;
    return result;
  };
  Sizes.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Sizes))
      return false;
    var tmp0_other_with_cast = other instanceof Sizes ? other : THROW_CCE();
    if (!equals(this.b44_1, tmp0_other_with_cast.b44_1))
      return false;
    if (!equals(this.c44_1, tmp0_other_with_cast.c44_1))
      return false;
    if (!equals(this.d44_1, tmp0_other_with_cast.d44_1))
      return false;
    if (!equals(this.e44_1, tmp0_other_with_cast.e44_1))
      return false;
    if (!equals(this.f44_1, tmp0_other_with_cast.f44_1))
      return false;
    if (!equals(this.g44_1, tmp0_other_with_cast.g44_1))
      return false;
    if (!equals(this.h44_1, tmp0_other_with_cast.h44_1))
      return false;
    if (!equals(this.i44_1, tmp0_other_with_cast.i44_1))
      return false;
    if (!equals(this.j44_1, tmp0_other_with_cast.j44_1))
      return false;
    if (!equals(this.k44_1, tmp0_other_with_cast.k44_1))
      return false;
    return true;
  };
  Sizes.$metadata$ = classMeta('Sizes');
  function TextScope() {
  }
  TextScope.$metadata$ = interfaceMeta('TextScope', [UiScope]);
  function Text(_this__u8e3s4, text_0, block) {
    var textNd = _this__u8e3s4.l3s().b3t(getKClass(TextNode), Companion_getInstance_24().l44_1);
    text(textNd.s3t(), text_0);
    block(textNd);
    return textNd;
  }
  function TextModifier$font$delegate$lambda() {
    return function (it) {
      return it.f45().b44_1;
    };
  }
  function TextModifier$textColor$delegate$lambda() {
    return function (it) {
      return it.g45().p40_1;
    };
  }
  function TextModifier(surface) {
    UiModifier.call(this, surface);
    this.l46_1 = this.t46('');
    var tmp = this;
    tmp.m46_1 = this.u46(TextModifier$font$delegate$lambda());
    var tmp_0 = this;
    tmp_0.n46_1 = this.u46(TextModifier$textColor$delegate$lambda());
    this.o46_1 = this.t46(AlignmentX_Start_getInstance());
    this.p46_1 = this.t46(AlignmentY_Top_getInstance());
    this.q46_1 = this.t46(0.0);
    this.r46_1 = this.t46(null);
    this.s46_1 = this.t46(null);
  }
  TextModifier.prototype.v46 = function (_set____db54di) {
    return this.l46_1.z46(this, text$factory(), _set____db54di);
  };
  TextModifier.prototype.a47 = function () {
    return this.l46_1.o2u(this, text$factory_0());
  };
  TextModifier.prototype.b47 = function (_set____db54di) {
    return this.m46_1.z46(this, font$factory(), _set____db54di);
  };
  TextModifier.prototype.c47 = function () {
    return this.m46_1.o2u(this, font$factory_0());
  };
  TextModifier.prototype.d47 = function (_set____db54di) {
    return this.n46_1.z46(this, textColor$factory(), _set____db54di);
  };
  TextModifier.prototype.e47 = function () {
    return this.n46_1.o2u(this, textColor$factory_0());
  };
  TextModifier.prototype.f47 = function (_set____db54di) {
    return this.o46_1.z46(this, textAlignX$factory(), _set____db54di);
  };
  TextModifier.prototype.g47 = function () {
    return this.o46_1.o2u(this, textAlignX$factory_0());
  };
  TextModifier.prototype.h47 = function (_set____db54di) {
    return this.p46_1.z46(this, textAlignY$factory(), _set____db54di);
  };
  TextModifier.prototype.i47 = function () {
    return this.p46_1.o2u(this, textAlignY$factory_0());
  };
  TextModifier.prototype.j47 = function (_set____db54di) {
    return this.q46_1.z46(this, textRotation$factory(), _set____db54di);
  };
  TextModifier.prototype.k47 = function () {
    return this.q46_1.o2u(this, textRotation$factory_0());
  };
  TextModifier.prototype.l47 = function (_set____db54di) {
    var tmp = baselineBottomMargin$factory();
    var tmp_0 = _set____db54di;
    return this.r46_1.z46(this, tmp, tmp_0 == null ? null : new Dp(tmp_0));
  };
  TextModifier.prototype.m47 = function () {
    var tmp = this.r46_1.o2u(this, baselineBottomMargin$factory_0());
    return tmp == null ? null : tmp.w3z_1;
  };
  TextModifier.prototype.n47 = function (_set____db54di) {
    var tmp = baselineTopMargin$factory();
    var tmp_0 = _set____db54di;
    return this.s46_1.z46(this, tmp, tmp_0 == null ? null : new Dp(tmp_0));
  };
  TextModifier.prototype.o47 = function () {
    var tmp = this.s46_1.o2u(this, baselineTopMargin$factory_0());
    return tmp == null ? null : tmp.w3z_1;
  };
  TextModifier.$metadata$ = classMeta('TextModifier', undefined, undefined, undefined, undefined, UiModifier.prototype);
  function TextNode$Companion$factory$lambda() {
    return function (parent, surface) {
      return new TextNode(parent, surface);
    };
  }
  function transformMetrics($this, rotation, inMetrics) {
    $this.e45_1 = false;
    var tmp0_subject = rotation;
    switch (tmp0_subject) {
      case 0.0:
        $this.d45_1.x2i(inMetrics.p49_1);
        $this.d45_1.y2i(inMetrics.n49_1);
        $this.d45_1.n2k(inMetrics.u3z());
        $this.d45_1.u2l(inMetrics.m49_1);
        break;
      case 90.0:
        $this.d45_1.x2i(inMetrics.m49_1 - inMetrics.n49_1);
        $this.d45_1.y2i(0.0);
        $this.d45_1.n2k(inMetrics.m49_1);
        $this.d45_1.u2l(inMetrics.u3z());
        break;
      case 180.0:
        $this.d45_1.x2i(inMetrics.u3z());
        $this.d45_1.y2i(inMetrics.m49_1 - inMetrics.n49_1);
        $this.d45_1.n2k(inMetrics.u3z());
        $this.d45_1.u2l(inMetrics.m49_1);
        break;
      case 270.0:
        $this.d45_1.x2i(inMetrics.n49_1);
        $this.d45_1.y2i(inMetrics.u3z());
        $this.d45_1.n2k(inMetrics.m49_1);
        $this.d45_1.u2l(inMetrics.u3z());
        break;
      default:
        $this.e45_1 = true;
        var a = (new MutableVec2f(0.0, inMetrics.m49_1)).a2j(rotation);
        var b = (new MutableVec2f(inMetrics.u3z(), 0.0)).a2j(rotation);
        var c = (new MutableVec2f(inMetrics.u3z(), inMetrics.m49_1)).a2j(rotation);
        var lt = minOf(0.0, new Float32Array([a.e23(), b.e23(), c.e23()]));
        var rt = maxOf(0.0, new Float32Array([a.e23(), b.e23(), c.e23()]));
        var tp = minOf(0.0, new Float32Array([a.g23(), b.g23(), c.g23()]));
        var dn = maxOf(0.0, new Float32Array([a.g23(), b.g23(), c.g23()]));
        $this.d45_1.x2i(0.0);
        $this.d45_1.y2i(0.0);
        $this.d45_1.n2k(rt - lt);
        $this.d45_1.u2l(dn - tp);
        break;
    }
  }
  function Companion_24() {
    Companion_instance_24 = this;
    var tmp = this;
    tmp.l44_1 = TextNode$Companion$factory$lambda();
  }
  Companion_24.prototype.t49 = function () {
    return this.l44_1;
  };
  Companion_24.$metadata$ = objectMeta('Companion');
  var Companion_instance_24;
  function Companion_getInstance_24() {
    if (Companion_instance_24 == null)
      new Companion_24();
    return Companion_instance_24;
  }
  function TextNode(parent, surface) {
    Companion_getInstance_24();
    UiNode.call(this, parent, surface);
    this.a45_1 = new TextModifier(surface);
    this.b45_1 = new TextProps(Companion_getInstance_44().u49());
    this.c45_1 = new CachedTextGeometry(this);
    this.d45_1 = MutableVec4f_init_$Create$();
    this.e45_1 = false;
  }
  TextNode.prototype.s3t = function () {
    return this.a45_1;
  };
  TextNode.prototype.m3v = function (ctx) {
    this.j3u().v49(this.s3t().c47(), ctx);
    var textMetrics = this.c45_1.l3y(this.s3t().a47(), this.s3t().c47());
    transformMetrics(this, this.s3t().k47(), textMetrics);
    var textWidth = this.d45_1.w2g();
    var textHeight = this.d45_1.r2l();
    var modWidth = this.s3t().u3z();
    var modHeight = this.s3t().v3z();
    var tmp;
    if (modWidth instanceof Dp) {
      tmp = _Dp___get_px__impl__e6g4pw(modWidth.w3z_1);
    } else {
      tmp = textWidth + this.u3u() + this.v3u();
    }
    var measuredWidth = tmp;
    var tmp_0;
    if (modHeight instanceof Dp) {
      tmp_0 = _Dp___get_px__impl__e6g4pw(modHeight.w3z_1);
    } else {
      tmp_0 = textHeight + this.w3u() + this.x3u();
    }
    var measuredHeight = tmp_0;
    this.f3v(measuredWidth, measuredHeight);
  };
  TextNode.prototype.l3v = function (ctx) {
    UiNode.prototype.l3v.call(this, ctx);
    var textMetrics = this.c45_1.p3x_1;
    var tmp$ret$0;
    {
      var tmp0_apply = this.b45_1;
      {
      }
      {
        tmp0_apply.x3x_1 = this.s3t().c47();
        tmp0_apply.y3x_1 = this.s3t().a47();
        tmp0_apply.c3y_1 = false;
        var txtX = this.d45_1.e23();
        var txtY = this.d45_1.g23();
        var textWidth = this.d45_1.w2g();
        var textHeight = this.d45_1.r2l();
        var tmp0_subject = this.s3t().g47();
        var tmp0 = tmp0_subject.y1();
        var tmp;
        switch (tmp0) {
          case 0:
            tmp = this.u3u();
            break;
          case 1:
            tmp = (this.n3u() - textWidth) / 2.0;
            break;
          case 2:
            tmp = this.n3u() - textWidth - this.v3u();
            break;
          default:
            noWhenBranchMatchedException();
            break;
        }
        var oriX = txtX + tmp;
        var baseBotMargin = this.s3t().m47();
        var baseTopMargin = this.s3t().o47();
        var tmp_0;
        var tmp_1 = baseBotMargin;
        if (!((tmp_1 == null ? null : new Dp(tmp_1)) == null)) {
          tmp_0 = this.o3u() - _Dp___get_px__impl__e6g4pw(baseBotMargin);
        } else {
          var tmp_2 = baseTopMargin;
          if (!((tmp_2 == null ? null : new Dp(tmp_2)) == null)) {
            tmp_0 = textMetrics.n49_1 + _Dp___get_px__impl__e6g4pw(baseTopMargin);
          } else {
            var tmp1_subject = this.s3t().i47();
            var tmp0_0 = tmp1_subject.y1();
            var tmp_3;
            switch (tmp0_0) {
              case 0:
                tmp_3 = this.w3u();
                break;
              case 1:
                tmp_3 = (this.o3u() - textHeight) / 2.0;
                break;
              case 2:
                tmp_3 = this.o3u() - textHeight - this.x3u();
                break;
              default:
                noWhenBranchMatchedException();
                break;
            }
            tmp_0 = txtY + tmp_3;
          }
        }
        var oriY = tmp_0;
        tmp0_apply.z3x_1.x2g(oriX, oriY, 0.0);
      }
      tmp$ret$0 = tmp0_apply;
    }
    var tmp_4 = this.s3t().c47();
    var builder = this.t3v(tmp_4, ctx, 0, 4, null);
    if (!this.e45_1) {
      var tmp_5 = this.s3t().e47();
      var tmp_6 = this.s3t().k47();
      this.c45_1.o3y(builder.e3w_1, this.b45_1, tmp_5, tmp_6, null, 16, null);
    } else {
      {
        var tmp1_configured = this.s3t().e47();
        var prevMod = builder.l3w_1;
        builder.l3w_1 = this.a3t_1;
        var prevColor = builder.h3w_1;
        var tmp0_safe_receiver = tmp1_configured;
        if (tmp0_safe_receiver == null)
          null;
        else {
          var tmp$ret$1;
          {
            {
            }
            builder.h3w_1 = tmp0_safe_receiver;
            tmp$ret$1 = Unit_getInstance();
          }
        }
        {
          builder.f3w_1.z2h();
          {
            builder.n2h(this.v3s_1, this.w3s_1, 0.0);
            {
              builder.n2h(this.n3u() * 0.5, this.o3u() * 0.5, 0.0);
              builder.s2h(this.s3t().k47(), Companion_getInstance_9().g2k_1);
              builder.n2h(-textMetrics.u3z() * 0.5, textMetrics.n49_1 - textMetrics.m49_1 * 0.5, 0.0);
              this.b45_1.z3x_1.s2k(Companion_getInstance_9().c2k_1);
              builder.g3y(this.b45_1);
            }
          }
          builder.f3w_1.a2i();
        }
        builder.l3w_1 = prevMod;
        builder.h3w_1 = prevColor;
      }
    }
  };
  TextNode.$metadata$ = classMeta('TextNode', [TextScope], undefined, undefined, undefined, UiNode.prototype);
  function text(_this__u8e3s4, text) {
    _this__u8e3s4.v46(text);
    return _this__u8e3s4;
  }
  function text$factory() {
    return getPropertyCallableRef('text', 1, KMutableProperty1, function (receiver) {
      return receiver.a47();
    }, function (receiver, value) {
      return receiver.v46(value);
    });
  }
  function text$factory_0() {
    return getPropertyCallableRef('text', 1, KMutableProperty1, function (receiver) {
      return receiver.a47();
    }, function (receiver, value) {
      return receiver.v46(value);
    });
  }
  function font$factory() {
    return getPropertyCallableRef('font', 1, KMutableProperty1, function (receiver) {
      return receiver.c47();
    }, function (receiver, value) {
      return receiver.b47(value);
    });
  }
  function font$factory_0() {
    return getPropertyCallableRef('font', 1, KMutableProperty1, function (receiver) {
      return receiver.c47();
    }, function (receiver, value) {
      return receiver.b47(value);
    });
  }
  function textColor$factory() {
    return getPropertyCallableRef('textColor', 1, KMutableProperty1, function (receiver) {
      return receiver.e47();
    }, function (receiver, value) {
      return receiver.d47(value);
    });
  }
  function textColor$factory_0() {
    return getPropertyCallableRef('textColor', 1, KMutableProperty1, function (receiver) {
      return receiver.e47();
    }, function (receiver, value) {
      return receiver.d47(value);
    });
  }
  function textAlignX$factory() {
    return getPropertyCallableRef('textAlignX', 1, KMutableProperty1, function (receiver) {
      return receiver.g47();
    }, function (receiver, value) {
      return receiver.f47(value);
    });
  }
  function textAlignX$factory_0() {
    return getPropertyCallableRef('textAlignX', 1, KMutableProperty1, function (receiver) {
      return receiver.g47();
    }, function (receiver, value) {
      return receiver.f47(value);
    });
  }
  function textAlignY$factory() {
    return getPropertyCallableRef('textAlignY', 1, KMutableProperty1, function (receiver) {
      return receiver.i47();
    }, function (receiver, value) {
      return receiver.h47(value);
    });
  }
  function textAlignY$factory_0() {
    return getPropertyCallableRef('textAlignY', 1, KMutableProperty1, function (receiver) {
      return receiver.i47();
    }, function (receiver, value) {
      return receiver.h47(value);
    });
  }
  function textRotation$factory() {
    return getPropertyCallableRef('textRotation', 1, KMutableProperty1, function (receiver) {
      return receiver.k47();
    }, function (receiver, value) {
      return receiver.j47(value);
    });
  }
  function textRotation$factory_0() {
    return getPropertyCallableRef('textRotation', 1, KMutableProperty1, function (receiver) {
      return receiver.k47();
    }, function (receiver, value) {
      return receiver.j47(value);
    });
  }
  function baselineBottomMargin$factory() {
    return getPropertyCallableRef('baselineBottomMargin', 1, KMutableProperty1, function (receiver) {
      var tmp = receiver.m47();
      return tmp == null ? null : new Dp(tmp);
    }, function (receiver, value) {
      var tmp = value;
      return receiver.l47(tmp == null ? null : tmp.w3z_1);
    });
  }
  function baselineBottomMargin$factory_0() {
    return getPropertyCallableRef('baselineBottomMargin', 1, KMutableProperty1, function (receiver) {
      var tmp = receiver.m47();
      return tmp == null ? null : new Dp(tmp);
    }, function (receiver, value) {
      var tmp = value;
      return receiver.l47(tmp == null ? null : tmp.w3z_1);
    });
  }
  function baselineTopMargin$factory() {
    return getPropertyCallableRef('baselineTopMargin', 1, KMutableProperty1, function (receiver) {
      var tmp = receiver.o47();
      return tmp == null ? null : new Dp(tmp);
    }, function (receiver, value) {
      var tmp = value;
      return receiver.n47(tmp == null ? null : tmp.w3z_1);
    });
  }
  function baselineTopMargin$factory_0() {
    return getPropertyCallableRef('baselineTopMargin', 1, KMutableProperty1, function (receiver) {
      var tmp = receiver.o47();
      return tmp == null ? null : new Dp(tmp);
    }, function (receiver, value) {
      var tmp = value;
      return receiver.n47(tmp == null ? null : tmp.w3z_1);
    });
  }
  function SwitchScope() {
  }
  SwitchScope.$metadata$ = interfaceMeta('SwitchScope', [UiScope]);
  function Switch(_this__u8e3s4, state, block) {
    var switch_0 = _this__u8e3s4.l3s().b3t(getKClass(SwitchNode), Companion_getInstance_25().w49_1);
    var tmp0_safe_receiver = state;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          tmp$ret$0 = toggleState(switch_0.o4a_1, tmp0_safe_receiver);
        }
        tmp$ret$1 = tmp$ret$0;
      }
    }
    block(switch_0);
    return switch_0;
  }
  function SwitchModifier$switchWidth$delegate$lambda() {
    return function (it) {
      return new Dp(Dp__times_impl_bnlh65(it.f45().g44_1, 2.0));
    };
  }
  function SwitchModifier$switchHeight$delegate$lambda() {
    return function (it) {
      return new Dp(it.f45().g44_1);
    };
  }
  function SwitchModifier$knobColorOn$delegate$lambda() {
    return function (it) {
      return it.g45().h40_1;
    };
  }
  function SwitchModifier$knobColorOff$delegate$lambda() {
    return function (it) {
      return it.g45().h40_1;
    };
  }
  function SwitchModifier$trackColorOn$delegate$lambda() {
    return function (it) {
      return it.g45().j40_1;
    };
  }
  function SwitchModifier$trackColorOff$delegate$lambda() {
    return function (it) {
      return it.g45().k40_1;
    };
  }
  function SwitchModifier(surface) {
    ToggleModifier.call(this, surface);
    var tmp = this;
    tmp.v4b_1 = this.u46(SwitchModifier$switchWidth$delegate$lambda());
    var tmp_0 = this;
    tmp_0.w4b_1 = this.u46(SwitchModifier$switchHeight$delegate$lambda());
    var tmp_1 = this;
    tmp_1.x4b_1 = this.u46(SwitchModifier$knobColorOn$delegate$lambda());
    var tmp_2 = this;
    tmp_2.y4b_1 = this.u46(SwitchModifier$knobColorOff$delegate$lambda());
    var tmp_3 = this;
    tmp_3.z4b_1 = this.u46(SwitchModifier$trackColorOn$delegate$lambda());
    var tmp_4 = this;
    tmp_4.a4c_1 = this.u46(SwitchModifier$trackColorOff$delegate$lambda());
  }
  SwitchModifier.prototype.b4c = function (_set____db54di) {
    return this.v4b_1.z46(this, switchWidth$factory(), new Dp(_set____db54di));
  };
  SwitchModifier.prototype.c4c = function () {
    return this.v4b_1.o2u(this, switchWidth$factory_0()).w3z_1;
  };
  SwitchModifier.prototype.d4c = function (_set____db54di) {
    return this.w4b_1.z46(this, switchHeight$factory(), new Dp(_set____db54di));
  };
  SwitchModifier.prototype.e4c = function () {
    return this.w4b_1.o2u(this, switchHeight$factory_0()).w3z_1;
  };
  SwitchModifier.prototype.f4c = function (_set____db54di) {
    return this.x4b_1.z46(this, knobColorOn$factory(), _set____db54di);
  };
  SwitchModifier.prototype.g4c = function () {
    return this.x4b_1.o2u(this, knobColorOn$factory_0());
  };
  SwitchModifier.prototype.h4c = function (_set____db54di) {
    return this.y4b_1.z46(this, knobColorOff$factory(), _set____db54di);
  };
  SwitchModifier.prototype.i4c = function () {
    return this.y4b_1.o2u(this, knobColorOff$factory_0());
  };
  SwitchModifier.prototype.j4c = function (_set____db54di) {
    return this.z4b_1.z46(this, trackColorOn$factory(), _set____db54di);
  };
  SwitchModifier.prototype.k4c = function () {
    return this.z4b_1.o2u(this, trackColorOn$factory_0());
  };
  SwitchModifier.prototype.l4c = function (_set____db54di) {
    return this.a4c_1.z46(this, trackColorOff$factory(), _set____db54di);
  };
  SwitchModifier.prototype.m4c = function () {
    return this.a4c_1.o2u(this, trackColorOff$factory_0());
  };
  SwitchModifier.$metadata$ = classMeta('SwitchModifier', undefined, undefined, undefined, undefined, ToggleModifier.prototype);
  function onToggle(_this__u8e3s4, block) {
    _this__u8e3s4.v4d(block);
    return _this__u8e3s4;
  }
  function SwitchNode$Companion$factory$lambda() {
    return function (parent, surface) {
      return new SwitchNode(parent, surface);
    };
  }
  function Companion_25() {
    Companion_instance_25 = this;
    var tmp = this;
    tmp.w49_1 = SwitchNode$Companion$factory$lambda();
  }
  Companion_25.prototype.t49 = function () {
    return this.w49_1;
  };
  Companion_25.$metadata$ = objectMeta('Companion');
  var Companion_instance_25;
  function Companion_getInstance_25() {
    if (Companion_instance_25 == null)
      new Companion_25();
    return Companion_instance_25;
  }
  function SwitchNode(parent, surface) {
    Companion_getInstance_25();
    ToggleNode.call(this, parent, surface);
    this.o4a_1 = new SwitchModifier(surface);
  }
  SwitchNode.prototype.s3t = function () {
    return this.o4a_1;
  };
  SwitchNode.prototype.x4d = function () {
    return this.o4a_1.c4c();
  };
  SwitchNode.prototype.y4d = function () {
    return this.o4a_1.e4c();
  };
  SwitchNode.prototype.l3v = function (ctx) {
    ToggleNode.prototype.l3v.call(this, ctx);
    var c = this.q4e();
    var w = _Dp___get_px__impl__e6g4pw(this.x4d());
    var h = _Dp___get_px__impl__e6g4pw(this.y4d());
    var tH = _Dp___get_px__impl__e6g4pw(this.y4d()) * 0.75;
    var tW = _Dp___get_px__impl__e6g4pw(this.x4d()) - (h - tH) * 0.5;
    var draw = this.r3v(0, 1, null);
    var p = this.r4e();
    var tmp0_subject = p;
    var tmp;
    switch (tmp0_subject) {
      case 0.0:
        tmp = this.o4a_1.m4c();
        break;
      case 1.0:
        tmp = this.o4a_1.k4c();
        break;
      default:
        var tmp_0 = this.o4a_1.m4c();
        var tmp_1 = this.o4a_1.k4c();
        tmp = tmp_0.s4e(tmp_1, p, null, 4, null);
        break;
    }
    var trackColor = tmp;
    var tmp1_subject = p;
    var tmp_2;
    switch (tmp1_subject) {
      case 0.0:
        tmp_2 = this.o4a_1.i4c();
        break;
      case 1.0:
        tmp_2 = this.o4a_1.g4c();
        break;
      default:
        var tmp_3 = this.o4a_1.i4c();
        var tmp_4 = this.o4a_1.g4c();
        tmp_2 = tmp_3.s4e(tmp_4, p, null, 4, null);
        break;
    }
    var knobColor = tmp_2;
    this.t4e(draw, c.e23() - tW * 0.5, c.g23() - tH * 0.5, tW, tH, tH * 0.5, trackColor);
    var extent = w - h;
    var knobX = c.e23() - extent * 0.5 + extent * this.r4e();
    var tmp_5 = c.g23();
    var tmp$ret$0;
    {
      var tmp0_floor = h * 0.5;
      tmp$ret$0 = Math.floor(tmp0_floor);
    }
    this.u4e(draw, knobX, tmp_5, tmp$ret$0, knobColor);
  };
  SwitchNode.$metadata$ = classMeta('SwitchNode', [SwitchScope], undefined, undefined, undefined, ToggleNode.prototype);
  function toggleState(_this__u8e3s4, value) {
    _this__u8e3s4.t4d(value);
    return _this__u8e3s4;
  }
  function ToggleModifier(surface) {
    UiModifier.call(this, surface);
    this.r4d_1 = this.t46(false);
    this.s4d_1 = this.t46(null);
  }
  ToggleModifier.prototype.t4d = function (_set____db54di) {
    return this.r4d_1.z46(this, toggleState$factory(), _set____db54di);
  };
  ToggleModifier.prototype.u4d = function () {
    return this.r4d_1.o2u(this, toggleState$factory_0());
  };
  ToggleModifier.prototype.v4d = function (_set____db54di) {
    return this.s4d_1.z46(this, onToggle$factory(), _set____db54di);
  };
  ToggleModifier.prototype.w4d = function () {
    return this.s4d_1.o2u(this, onToggle$factory_0());
  };
  ToggleModifier.$metadata$ = classMeta('ToggleModifier', undefined, undefined, undefined, undefined, UiModifier.prototype);
  function ToggleNode(parent, surface) {
    UiNode.call(this, parent, surface);
    this.n4e_1 = new AnimationState(0.1);
    this.o4e_1 = true;
    this.p4e_1 = false;
  }
  ToggleNode.prototype.r4e = function () {
    var ax = this.n4e_1.v3r_1 ? this.y4e(this.n4e_1) : 1.0;
    return this.s3t().u4d() ? ax : 1.0 - ax;
  };
  ToggleNode.prototype.q4e = function () {
    return new MutableVec2f(this.u3u() + this.w4e() * 0.5, this.w3u() + this.x4e() * 0.5);
  };
  ToggleNode.prototype.v4e = function (ev) {
    var d = this.q4e().e2j(ev.b4f_1);
    var tmp;
    var tmp_0 = Companion_getInstance_20();
    var tmp$ret$0;
    {
      var tmp0_abs = d.e23();
      tmp$ret$0 = Math.abs(tmp0_abs);
    }
    if (Dp__compareTo_impl_tlg3dl(tmp_0.z40(tmp$ret$0), Dp__times_impl_bnlh65(this.x4d(), 0.5)) < 0) {
      var tmp_1 = Companion_getInstance_20();
      var tmp$ret$1;
      {
        var tmp1_abs = d.g23();
        tmp$ret$1 = Math.abs(tmp1_abs);
      }
      tmp = Dp__compareTo_impl_tlg3dl(tmp_1.z40(tmp$ret$1), Dp__times_impl_bnlh65(this.y4d(), 0.5)) < 0;
    } else {
      tmp = false;
    }
    return tmp;
  };
  ToggleNode.prototype.m3v = function (ctx) {
    var modWidth = this.s3t().u3z();
    var modHeight = this.s3t().v3z();
    var tmp;
    if (modWidth instanceof Dp) {
      tmp = _Dp___get_px__impl__e6g4pw(modWidth.w3z_1);
    } else {
      tmp = _Dp___get_px__impl__e6g4pw(this.x4d()) + this.u3u() + this.v3u();
    }
    var measuredWidth = tmp;
    var tmp_0;
    if (modHeight instanceof Dp) {
      tmp_0 = _Dp___get_px__impl__e6g4pw(modHeight.w3z_1);
    } else {
      tmp_0 = _Dp___get_px__impl__e6g4pw(this.y4d()) + this.w3u() + this.x3u();
    }
    var measuredHeight = tmp_0;
    this.f3v(measuredWidth, measuredHeight);
    if (this.o4e_1) {
      this.o4e_1 = false;
    } else if (!(this.p4e_1 === this.s3t().u4d())) {
      this.n4e_1.x3r();
    }
    this.p4e_1 = this.s3t().u4d();
  };
  ToggleNode.prototype.o3v = function () {
    UiNode.prototype.o3v.call(this);
    onClick_1(this.s3t(), this);
  };
  ToggleNode.prototype.u43 = function (ev) {
    if (this.v4e(ev)) {
      var tmp0_safe_receiver = this.s3t().w4d();
      if (tmp0_safe_receiver == null)
        null;
      else
        tmp0_safe_receiver(!this.s3t().u4d());
    } else {
      ev.e4f();
    }
  };
  ToggleNode.$metadata$ = classMeta('ToggleNode', [Clickable], undefined, undefined, undefined, UiNode.prototype);
  function switchWidth$factory() {
    return getPropertyCallableRef('switchWidth', 1, KMutableProperty1, function (receiver) {
      return new Dp(receiver.c4c());
    }, function (receiver, value) {
      return receiver.b4c(value.w3z_1);
    });
  }
  function switchWidth$factory_0() {
    return getPropertyCallableRef('switchWidth', 1, KMutableProperty1, function (receiver) {
      return new Dp(receiver.c4c());
    }, function (receiver, value) {
      return receiver.b4c(value.w3z_1);
    });
  }
  function switchHeight$factory() {
    return getPropertyCallableRef('switchHeight', 1, KMutableProperty1, function (receiver) {
      return new Dp(receiver.e4c());
    }, function (receiver, value) {
      return receiver.d4c(value.w3z_1);
    });
  }
  function switchHeight$factory_0() {
    return getPropertyCallableRef('switchHeight', 1, KMutableProperty1, function (receiver) {
      return new Dp(receiver.e4c());
    }, function (receiver, value) {
      return receiver.d4c(value.w3z_1);
    });
  }
  function knobColorOn$factory() {
    return getPropertyCallableRef('knobColorOn', 1, KMutableProperty1, function (receiver) {
      return receiver.g4c();
    }, function (receiver, value) {
      return receiver.f4c(value);
    });
  }
  function knobColorOn$factory_0() {
    return getPropertyCallableRef('knobColorOn', 1, KMutableProperty1, function (receiver) {
      return receiver.g4c();
    }, function (receiver, value) {
      return receiver.f4c(value);
    });
  }
  function knobColorOff$factory() {
    return getPropertyCallableRef('knobColorOff', 1, KMutableProperty1, function (receiver) {
      return receiver.i4c();
    }, function (receiver, value) {
      return receiver.h4c(value);
    });
  }
  function knobColorOff$factory_0() {
    return getPropertyCallableRef('knobColorOff', 1, KMutableProperty1, function (receiver) {
      return receiver.i4c();
    }, function (receiver, value) {
      return receiver.h4c(value);
    });
  }
  function trackColorOn$factory() {
    return getPropertyCallableRef('trackColorOn', 1, KMutableProperty1, function (receiver) {
      return receiver.k4c();
    }, function (receiver, value) {
      return receiver.j4c(value);
    });
  }
  function trackColorOn$factory_0() {
    return getPropertyCallableRef('trackColorOn', 1, KMutableProperty1, function (receiver) {
      return receiver.k4c();
    }, function (receiver, value) {
      return receiver.j4c(value);
    });
  }
  function trackColorOff$factory() {
    return getPropertyCallableRef('trackColorOff', 1, KMutableProperty1, function (receiver) {
      return receiver.m4c();
    }, function (receiver, value) {
      return receiver.l4c(value);
    });
  }
  function trackColorOff$factory_0() {
    return getPropertyCallableRef('trackColorOff', 1, KMutableProperty1, function (receiver) {
      return receiver.m4c();
    }, function (receiver, value) {
      return receiver.l4c(value);
    });
  }
  function toggleState$factory() {
    return getPropertyCallableRef('toggleState', 1, KMutableProperty1, function (receiver) {
      return receiver.u4d();
    }, function (receiver, value) {
      return receiver.t4d(value);
    });
  }
  function toggleState$factory_0() {
    return getPropertyCallableRef('toggleState', 1, KMutableProperty1, function (receiver) {
      return receiver.u4d();
    }, function (receiver, value) {
      return receiver.t4d(value);
    });
  }
  function onToggle$factory() {
    return getPropertyCallableRef('onToggle', 1, KMutableProperty1, function (receiver) {
      return receiver.w4d();
    }, function (receiver, value) {
      return receiver.v4d(value);
    });
  }
  function onToggle$factory_0() {
    return getPropertyCallableRef('onToggle', 1, KMutableProperty1, function (receiver) {
      return receiver.w4d();
    }, function (receiver, value) {
      return receiver.v4d(value);
    });
  }
  function Ui2Shader$Model$lambda$lambda($texCoords, $this_vertexStage, $color, $clipBounds, $screenPos, this$0) {
    return function ($this$main) {
      $this$main.h30($texCoords.n37(), $this_vertexStage.i39(Companion_getInstance_31().q2z_1.x2s_1));
      $this$main.h30($color.n37(), $this_vertexStage.o37(Companion_getInstance_31().r2z_1.x2s_1));
      $this$main.h30($clipBounds.n37(), $this_vertexStage.o37(Companion_getInstance_26().n3w_1.x2s_1));
      var tmp = $this$main.g30($this_vertexStage.f30(Companion_getInstance_31().n2z_1.x2s_1), 1.0);
      var vertexPos = $this$main.y35(tmp, null, 2, null);
      $this$main.h30($screenPos.n37(), get_xy_0(vertexPos));
      $this$main.h30($this_vertexStage.d2s_1, times(mvpMatrix(this$0).m2h(), vertexPos));
      return Unit_getInstance();
    };
  }
  function Ui2Shader$Model$lambda($texCoords, $color, $clipBounds, $screenPos, this$0) {
    return function ($this$vertexStage) {
      $this$vertexStage.i30(Ui2Shader$Model$lambda$lambda($texCoords, $this$vertexStage, $color, $clipBounds, $screenPos, this$0));
      return Unit_getInstance();
    };
  }
  function Ui2Shader$Model$lambda$lambda$lambda() {
    return function ($this$if) {
      $this$if.v3n();
      return Unit_getInstance();
    };
  }
  function Ui2Shader$Model$lambda$lambda$lambda_0(this$0, $texCoords, $color, $this_fragmentStage) {
    return function ($this$else) {
      var tmp = this$0.r31('uFontTex');
      var tmp_0 = $texCoords.q36();
      var alpha = times_2(get_r($this$else.x35(tmp, tmp_0, null, 4, null)), get_a($color.q36()));
      var tmp_1 = times_0(get_rgb($color.q36()), alpha);
      $this_fragmentStage.h31($this$else, tmp_1, alpha, 0, 4, null);
      return Unit_getInstance();
    };
  }
  function Ui2Shader$Model$lambda$lambda_0($screenPos, $clipBounds, this$0, $texCoords, $color, $this_fragmentStage) {
    return function ($this$main) {
      var tmp = or_0($this$main.w3n(lt_0($screenPos.q36(), get_xy_0($clipBounds.q36()))), $this$main.w3n(gt_0($screenPos.q36(), get_zw($clipBounds.q36()))));
      var tmp_0 = $this$main.s3n(tmp, Ui2Shader$Model$lambda$lambda$lambda());
      tmp_0.n3l(Ui2Shader$Model$lambda$lambda$lambda_0(this$0, $texCoords, $color, $this_fragmentStage));
      return Unit_getInstance();
    };
  }
  function Ui2Shader$Model$lambda_0($screenPos, $clipBounds, this$0, $texCoords, $color) {
    return function ($this$fragmentStage) {
      $this$fragmentStage.i30(Ui2Shader$Model$lambda$lambda_0($screenPos, $clipBounds, this$0, $texCoords, $color, $this$fragmentStage));
      return Unit_getInstance();
    };
  }
  function Model_1() {
    KslProgram.call(this, 'UI2 Shader');
    var texCoords = this.t31(null, null, 3, null);
    var screenPos = this.t31(null, null, 3, null);
    var color = this.v31(null, null, 3, null);
    var clipBounds = this.v31(null, KslInterStageInterpolation_Flat_getInstance(), 1, null);
    this.j31(Ui2Shader$Model$lambda(texCoords, color, clipBounds, screenPos, this));
    this.k31(Ui2Shader$Model$lambda_0(screenPos, clipBounds, this, texCoords, color));
  }
  Model_1.$metadata$ = classMeta('Model', undefined, undefined, undefined, undefined, KslProgram.prototype);
  function Companion_26() {
    Companion_instance_26 = this;
    this.n3w_1 = new Attribute('aClip', GlslType_VEC_4F_getInstance());
    this.o3w_1 = listOf([Companion_getInstance_31().n2z_1, Companion_getInstance_31().r2z_1, this.n3w_1, Companion_getInstance_31().q2z_1]);
    this.p3w_1 = new SingleColorTexture(Companion_getInstance_43().o34_1);
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_apply = new PipelineConfig();
      {
      }
      {
        tmp0_apply.w2t_1 = BlendMode_BLEND_PREMULTIPLIED_ALPHA_getInstance();
        tmp0_apply.x2t_1 = CullMethod_NO_CULLING_getInstance();
        tmp0_apply.y2t_1 = DepthCompareOp_DISABLED_getInstance();
      }
      tmp$ret$0 = tmp0_apply;
    }
    tmp.q3w_1 = tmp$ret$0;
  }
  Companion_26.$metadata$ = objectMeta('Companion');
  var Companion_instance_26;
  function Companion_getInstance_26() {
    if (Companion_instance_26 == null)
      new Companion_26();
    return Companion_instance_26;
  }
  function Ui2Shader() {
    Companion_getInstance_26();
    KslShader.call(this, new Model_1(), Companion_getInstance_26().q3w_1);
    this.p4f_1 = this.w2y('uFontTex', Companion_getInstance_26().p3w_1);
  }
  Ui2Shader.prototype.q4f = function (_set____db54di) {
    return this.p4f_1.d2w(this, fontTex$factory(), _set____db54di);
  };
  Ui2Shader.prototype.r4f = function () {
    return this.p4f_1.o2u(this, fontTex$factory_0());
  };
  Ui2Shader.prototype.s4f = function (font, ctx) {
    this.q4f(font.t4f(ctx, UiScale_getInstance().w40_1).f1y_1);
  };
  Ui2Shader.$metadata$ = classMeta('Ui2Shader', undefined, undefined, undefined, undefined, KslShader.prototype);
  function fontTex$factory() {
    return getPropertyCallableRef('fontTex', 1, KMutableProperty1, function (receiver) {
      return receiver.r4f();
    }, function (receiver, value) {
      return receiver.q4f(value);
    });
  }
  function fontTex$factory_0() {
    return getPropertyCallableRef('fontTex', 1, KMutableProperty1, function (receiver) {
      return receiver.r4f();
    }, function (receiver, value) {
      return receiver.q4f(value);
    });
  }
  function UiModifier$ListPropertyHolder$_init_$lambda_gys1oz() {
    return function (it) {
      var tmp$ret$0;
      {
        tmp$ret$0 = ArrayList_init_$Create$_0();
      }
      return tmp$ret$0;
    };
  }
  function PropertyHolder($outer, defaultVal) {
    this.y46_1 = $outer;
    this.w46_1 = defaultVal;
    this.x46_1 = this.w46_1(this.y46_1.q3y_1);
  }
  PropertyHolder.prototype.u4f = function () {
    return this.x46_1;
  };
  PropertyHolder.prototype.v4f = function () {
    this.x46_1 = this.w46_1(this.y46_1.q3y_1);
  };
  PropertyHolder.prototype.o2u = function (thisRef, property) {
    return this.x46_1;
  };
  PropertyHolder.prototype.z46 = function (thisRef, property, value) {
    this.x46_1 = value;
  };
  PropertyHolder.$metadata$ = classMeta('PropertyHolder');
  function ListPropertyHolder($outer) {
    this.z4f_1 = $outer;
    PropertyHolder.call(this, $outer, UiModifier$ListPropertyHolder$_init_$lambda_gys1oz());
  }
  ListPropertyHolder.prototype.v4f = function () {
    this.u4f().t7();
  };
  ListPropertyHolder.$metadata$ = classMeta('ListPropertyHolder', undefined, undefined, undefined, undefined, PropertyHolder.prototype);
  function UiModifier$property$lambda($defaultVal) {
    return function (it) {
      return $defaultVal;
    };
  }
  function UiModifier(surface) {
    this.q3y_1 = surface;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.r3y_1 = tmp$ret$0;
    this.s3y_1 = this.t46(FitContent_getInstance());
    this.t3y_1 = this.t46(FitContent_getInstance());
    this.u3y_1 = this.t46(CellLayout_getInstance());
    this.v3y_1 = this.t46(null);
    this.w3y_1 = this.t46(null);
    this.x3y_1 = this.t46(0);
    this.y3y_1 = this.t46(new Dp(Companion_getInstance_20().x40_1));
    this.z3y_1 = this.t46(new Dp(Companion_getInstance_20().x40_1));
    this.a3z_1 = this.t46(new Dp(Companion_getInstance_20().x40_1));
    this.b3z_1 = this.t46(new Dp(Companion_getInstance_20().x40_1));
    this.c3z_1 = this.t46(new Dp(Companion_getInstance_20().x40_1));
    this.d3z_1 = this.t46(new Dp(Companion_getInstance_20().x40_1));
    this.e3z_1 = this.t46(new Dp(Companion_getInstance_20().x40_1));
    this.f3z_1 = this.t46(new Dp(Companion_getInstance_20().x40_1));
    this.g3z_1 = this.t46(AlignmentX_Start_getInstance());
    this.h3z_1 = this.t46(AlignmentY_Top_getInstance());
    this.i3z_1 = this.t46(null);
    this.j3z_1 = this.t46(null);
    this.k3z_1 = this.g49();
    this.l3z_1 = this.g49();
    this.m3z_1 = this.g49();
    this.n3z_1 = this.g49();
    this.o3z_1 = this.g49();
    this.p3z_1 = this.g49();
    this.q3z_1 = this.g49();
    this.r3z_1 = this.g49();
    this.s3z_1 = this.g49();
    this.t3z_1 = this.g49();
  }
  UiModifier.prototype.p47 = function (_set____db54di) {
    return this.s3y_1.z46(this, width$factory(), _set____db54di);
  };
  UiModifier.prototype.u3z = function () {
    return this.s3y_1.o2u(this, width$factory_0());
  };
  UiModifier.prototype.q47 = function (_set____db54di) {
    return this.t3y_1.z46(this, height$factory(), _set____db54di);
  };
  UiModifier.prototype.v3z = function () {
    return this.t3y_1.o2u(this, height$factory_0());
  };
  UiModifier.prototype.r47 = function (_set____db54di) {
    return this.u3y_1.z46(this, layout$factory(), _set____db54di);
  };
  UiModifier.prototype.s47 = function () {
    return this.u3y_1.o2u(this, layout$factory_0());
  };
  UiModifier.prototype.t47 = function (_set____db54di) {
    return this.v3y_1.z46(this, background$factory(), _set____db54di);
  };
  UiModifier.prototype.r40 = function () {
    return this.v3y_1.o2u(this, background$factory_0());
  };
  UiModifier.prototype.u47 = function (_set____db54di) {
    return this.w3y_1.z46(this, border$factory(), _set____db54di);
  };
  UiModifier.prototype.v47 = function () {
    return this.w3y_1.o2u(this, border$factory_0());
  };
  UiModifier.prototype.w47 = function (_set____db54di) {
    return this.x3y_1.z46(this, zLayer$factory(), _set____db54di);
  };
  UiModifier.prototype.x47 = function () {
    return this.x3y_1.o2u(this, zLayer$factory_0());
  };
  UiModifier.prototype.y47 = function (_set____db54di) {
    return this.y3y_1.z46(this, paddingStart$factory(), new Dp(_set____db54di));
  };
  UiModifier.prototype.z47 = function () {
    return this.y3y_1.o2u(this, paddingStart$factory_0()).w3z_1;
  };
  UiModifier.prototype.a48 = function (_set____db54di) {
    return this.z3y_1.z46(this, paddingEnd$factory(), new Dp(_set____db54di));
  };
  UiModifier.prototype.b48 = function () {
    return this.z3y_1.o2u(this, paddingEnd$factory_0()).w3z_1;
  };
  UiModifier.prototype.c48 = function (_set____db54di) {
    return this.a3z_1.z46(this, paddingTop$factory(), new Dp(_set____db54di));
  };
  UiModifier.prototype.d48 = function () {
    return this.a3z_1.o2u(this, paddingTop$factory_0()).w3z_1;
  };
  UiModifier.prototype.e48 = function (_set____db54di) {
    return this.b3z_1.z46(this, paddingBottom$factory(), new Dp(_set____db54di));
  };
  UiModifier.prototype.f48 = function () {
    return this.b3z_1.o2u(this, paddingBottom$factory_0()).w3z_1;
  };
  UiModifier.prototype.g48 = function (_set____db54di) {
    return this.c3z_1.z46(this, marginStart$factory(), new Dp(_set____db54di));
  };
  UiModifier.prototype.h48 = function () {
    return this.c3z_1.o2u(this, marginStart$factory_0()).w3z_1;
  };
  UiModifier.prototype.i48 = function (_set____db54di) {
    return this.d3z_1.z46(this, marginEnd$factory(), new Dp(_set____db54di));
  };
  UiModifier.prototype.j48 = function () {
    return this.d3z_1.o2u(this, marginEnd$factory_0()).w3z_1;
  };
  UiModifier.prototype.k48 = function (_set____db54di) {
    return this.e3z_1.z46(this, marginTop$factory(), new Dp(_set____db54di));
  };
  UiModifier.prototype.l48 = function () {
    return this.e3z_1.o2u(this, marginTop$factory_0()).w3z_1;
  };
  UiModifier.prototype.m48 = function (_set____db54di) {
    return this.f3z_1.z46(this, marginBottom$factory(), new Dp(_set____db54di));
  };
  UiModifier.prototype.n48 = function () {
    return this.f3z_1.o2u(this, marginBottom$factory_0()).w3z_1;
  };
  UiModifier.prototype.o48 = function (_set____db54di) {
    return this.g3z_1.z46(this, alignX$factory(), _set____db54di);
  };
  UiModifier.prototype.p48 = function () {
    return this.g3z_1.o2u(this, alignX$factory_0());
  };
  UiModifier.prototype.q48 = function (_set____db54di) {
    return this.h3z_1.z46(this, alignY$factory(), _set____db54di);
  };
  UiModifier.prototype.r48 = function () {
    return this.h3z_1.o2u(this, alignY$factory_0());
  };
  UiModifier.prototype.s48 = function (_set____db54di) {
    return this.i3z_1.z46(this, onMeasured$factory(), _set____db54di);
  };
  UiModifier.prototype.t48 = function () {
    return this.i3z_1.o2u(this, onMeasured$factory_0());
  };
  UiModifier.prototype.u48 = function (_set____db54di) {
    return this.j3z_1.z46(this, onPositioned$factory(), _set____db54di);
  };
  UiModifier.prototype.v48 = function () {
    return this.j3z_1.o2u(this, onPositioned$factory_0());
  };
  UiModifier.prototype.w48 = function () {
    return this.k3z_1.o2u(this, onPointer$factory());
  };
  UiModifier.prototype.x48 = function () {
    return this.l3z_1.o2u(this, onClick$factory());
  };
  UiModifier.prototype.y48 = function () {
    return this.m3z_1.o2u(this, onWheelX$factory());
  };
  UiModifier.prototype.z48 = function () {
    return this.n3z_1.o2u(this, onWheelY$factory());
  };
  UiModifier.prototype.a49 = function () {
    return this.o3z_1.o2u(this, onEnter$factory());
  };
  UiModifier.prototype.b49 = function () {
    return this.p3z_1.o2u(this, onExit$factory());
  };
  UiModifier.prototype.c49 = function () {
    return this.q3z_1.o2u(this, onHover$factory());
  };
  UiModifier.prototype.d49 = function () {
    return this.r3z_1.o2u(this, onDragStart$factory());
  };
  UiModifier.prototype.e49 = function () {
    return this.s3z_1.o2u(this, onDrag$factory());
  };
  UiModifier.prototype.f49 = function () {
    return this.t3z_1.o2u(this, onDragEnd$factory());
  };
  UiModifier.prototype.t46 = function (defaultVal) {
    var holder = new PropertyHolder(this, UiModifier$property$lambda(defaultVal));
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.r3y_1;
      tmp0_plusAssign.b(holder);
    }
    return holder;
  };
  UiModifier.prototype.u46 = function (defaultVal) {
    var holder = new PropertyHolder(this, defaultVal);
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.r3y_1;
      tmp0_plusAssign.b(holder);
    }
    return holder;
  };
  UiModifier.prototype.g49 = function () {
    var holder = new ListPropertyHolder(this);
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.r3y_1;
      tmp0_plusAssign.b(holder);
    }
    return holder;
  };
  UiModifier.prototype.h49 = function () {
    var inductionVariable = 0;
    var last = this.r3y_1.m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.r3y_1.r(i).v4f();
      }
       while (inductionVariable <= last);
  };
  UiModifier.prototype.i49 = function () {
    var tmp;
    var tmp_0;
    var tmp_1;
    var tmp_2;
    var tmp_3;
    var tmp_4;
    var tmp_5;
    var tmp_6;
    var tmp_7;
    var tmp$ret$0;
    {
      var tmp0_isNotEmpty = this.w48();
      tmp$ret$0 = !tmp0_isNotEmpty.q();
    }
    if (tmp$ret$0) {
      tmp_7 = true;
    } else {
      var tmp$ret$1;
      {
        var tmp1_isNotEmpty = this.x48();
        tmp$ret$1 = !tmp1_isNotEmpty.q();
      }
      tmp_7 = tmp$ret$1;
    }
    if (tmp_7) {
      tmp_6 = true;
    } else {
      var tmp$ret$2;
      {
        var tmp2_isNotEmpty = this.y48();
        tmp$ret$2 = !tmp2_isNotEmpty.q();
      }
      tmp_6 = tmp$ret$2;
    }
    if (tmp_6) {
      tmp_5 = true;
    } else {
      var tmp$ret$3;
      {
        var tmp3_isNotEmpty = this.z48();
        tmp$ret$3 = !tmp3_isNotEmpty.q();
      }
      tmp_5 = tmp$ret$3;
    }
    if (tmp_5) {
      tmp_4 = true;
    } else {
      var tmp$ret$4;
      {
        var tmp4_isNotEmpty = this.a49();
        tmp$ret$4 = !tmp4_isNotEmpty.q();
      }
      tmp_4 = tmp$ret$4;
    }
    if (tmp_4) {
      tmp_3 = true;
    } else {
      var tmp$ret$5;
      {
        var tmp5_isNotEmpty = this.b49();
        tmp$ret$5 = !tmp5_isNotEmpty.q();
      }
      tmp_3 = tmp$ret$5;
    }
    if (tmp_3) {
      tmp_2 = true;
    } else {
      var tmp$ret$6;
      {
        var tmp6_isNotEmpty = this.c49();
        tmp$ret$6 = !tmp6_isNotEmpty.q();
      }
      tmp_2 = tmp$ret$6;
    }
    if (tmp_2) {
      tmp_1 = true;
    } else {
      var tmp$ret$7;
      {
        var tmp7_isNotEmpty = this.d49();
        tmp$ret$7 = !tmp7_isNotEmpty.q();
      }
      tmp_1 = tmp$ret$7;
    }
    if (tmp_1) {
      tmp_0 = true;
    } else {
      var tmp$ret$8;
      {
        var tmp8_isNotEmpty = this.e49();
        tmp$ret$8 = !tmp8_isNotEmpty.q();
      }
      tmp_0 = tmp$ret$8;
    }
    if (tmp_0) {
      tmp = true;
    } else {
      var tmp$ret$9;
      {
        var tmp9_isNotEmpty = this.f49();
        tmp$ret$9 = !tmp9_isNotEmpty.q();
      }
      tmp = tmp$ret$9;
    }
    return tmp;
  };
  UiModifier.prototype.j49 = function () {
    var tmp;
    var tmp_0;
    var tmp$ret$0;
    {
      var tmp0_isNotEmpty = this.a49();
      tmp$ret$0 = !tmp0_isNotEmpty.q();
    }
    if (tmp$ret$0) {
      tmp_0 = true;
    } else {
      var tmp$ret$1;
      {
        var tmp1_isNotEmpty = this.b49();
        tmp$ret$1 = !tmp1_isNotEmpty.q();
      }
      tmp_0 = tmp$ret$1;
    }
    if (tmp_0) {
      tmp = true;
    } else {
      var tmp$ret$2;
      {
        var tmp2_isNotEmpty = this.c49();
        tmp$ret$2 = !tmp2_isNotEmpty.q();
      }
      tmp = tmp$ret$2;
    }
    return tmp;
  };
  UiModifier.prototype.k49 = function () {
    var tmp;
    var tmp_0;
    var tmp$ret$0;
    {
      var tmp0_isNotEmpty = this.d49();
      tmp$ret$0 = !tmp0_isNotEmpty.q();
    }
    if (tmp$ret$0) {
      tmp_0 = true;
    } else {
      var tmp$ret$1;
      {
        var tmp1_isNotEmpty = this.e49();
        tmp$ret$1 = !tmp1_isNotEmpty.q();
      }
      tmp_0 = tmp$ret$1;
    }
    if (tmp_0) {
      tmp = true;
    } else {
      var tmp$ret$2;
      {
        var tmp2_isNotEmpty = this.f49();
        tmp$ret$2 = !tmp2_isNotEmpty.q();
      }
      tmp = tmp$ret$2;
    }
    return tmp;
  };
  UiModifier.$metadata$ = classMeta('UiModifier');
  function alignY(_this__u8e3s4, alignment) {
    _this__u8e3s4.q48(alignment);
    return _this__u8e3s4;
  }
  var AlignmentY_Top_instance;
  var AlignmentY_Center_instance;
  var AlignmentY_Bottom_instance;
  var AlignmentY_entriesInitialized;
  function AlignmentY_initEntries() {
    if (AlignmentY_entriesInitialized)
      return Unit_getInstance();
    AlignmentY_entriesInitialized = true;
    AlignmentY_Top_instance = new AlignmentY('Top', 0);
    AlignmentY_Center_instance = new AlignmentY('Center', 1);
    AlignmentY_Bottom_instance = new AlignmentY('Bottom', 2);
  }
  function AlignmentY(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  AlignmentY.$metadata$ = classMeta('AlignmentY', undefined, undefined, undefined, undefined, Enum.prototype);
  function alignX(_this__u8e3s4, alignment) {
    _this__u8e3s4.o48(alignment);
    return _this__u8e3s4;
  }
  var AlignmentX_Start_instance;
  var AlignmentX_Center_instance;
  var AlignmentX_End_instance;
  var AlignmentX_entriesInitialized;
  function AlignmentX_initEntries() {
    if (AlignmentX_entriesInitialized)
      return Unit_getInstance();
    AlignmentX_entriesInitialized = true;
    AlignmentX_Start_instance = new AlignmentX('Start', 0);
    AlignmentX_Center_instance = new AlignmentX('Center', 1);
    AlignmentX_End_instance = new AlignmentX('End', 2);
  }
  function AlignmentX(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  AlignmentX.$metadata$ = classMeta('AlignmentX', undefined, undefined, undefined, undefined, Enum.prototype);
  function layout(_this__u8e3s4, layout) {
    _this__u8e3s4.r47(layout);
    return _this__u8e3s4;
  }
  function margin(_this__u8e3s4, start, end, top, bottom) {
    _this__u8e3s4.g48(start);
    _this__u8e3s4.i48(end);
    _this__u8e3s4.k48(top);
    _this__u8e3s4.m48(bottom);
    return _this__u8e3s4;
  }
  function margin$default(_this__u8e3s4, start, end, top, bottom, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      start = _this__u8e3s4.h48();
    if (!(($mask0 & 2) === 0))
      end = _this__u8e3s4.j48();
    if (!(($mask0 & 4) === 0))
      top = _this__u8e3s4.l48();
    if (!(($mask0 & 8) === 0))
      bottom = _this__u8e3s4.n48();
    return margin(_this__u8e3s4, start, end, top, bottom);
  }
  function height(_this__u8e3s4, height) {
    _this__u8e3s4.q47(height);
    return _this__u8e3s4;
  }
  function width(_this__u8e3s4, width) {
    _this__u8e3s4.p47(width);
    return _this__u8e3s4;
  }
  function align(_this__u8e3s4, xAlignment, yAlignment) {
    _this__u8e3s4.o48(xAlignment);
    _this__u8e3s4.q48(yAlignment);
    return _this__u8e3s4;
  }
  function align$default(_this__u8e3s4, xAlignment, yAlignment, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      xAlignment = _this__u8e3s4.p48();
    if (!(($mask0 & 2) === 0))
      yAlignment = _this__u8e3s4.r48();
    return align(_this__u8e3s4, xAlignment, yAlignment);
  }
  function onClick_0(_this__u8e3s4, block) {
    var tmp0_this = _this__u8e3s4;
    {
      var tmp0_plusAssign = tmp0_this.x48();
      tmp0_plusAssign.b(block);
    }
    return _this__u8e3s4;
  }
  function PointerEvent(pointer, ctx) {
    this.z4e_1 = pointer;
    this.a4f_1 = ctx;
    this.b4f_1 = MutableVec2f_init_$Create$();
    this.c4f_1 = new Vec2f(this.z4e_1.x1z_1, this.z4e_1.y1z_1);
    this.d4f_1 = true;
  }
  PointerEvent.prototype.a4g = function () {
    return this.z4e_1;
  };
  PointerEvent.prototype.e4f = function () {
    this.d4f_1 = false;
  };
  PointerEvent.$metadata$ = classMeta('PointerEvent');
  function backgroundColor(_this__u8e3s4, color) {
    _this__u8e3s4.t47(!(color == null) ? new RectBackground(color) : null);
    return _this__u8e3s4;
  }
  function size(_this__u8e3s4, width, height) {
    _this__u8e3s4.p47(width);
    _this__u8e3s4.q47(height);
    return _this__u8e3s4;
  }
  function onClick_1(_this__u8e3s4, clickable) {
    var tmp0_this = _this__u8e3s4;
    {
      var tmp0_plusAssign = tmp0_this.x48();
      var tmp1_plusAssign = Clickable$onClick$ref(clickable);
      tmp0_plusAssign.b(tmp1_plusAssign);
    }
    return _this__u8e3s4;
  }
  function zLayer(_this__u8e3s4, zLayer) {
    _this__u8e3s4.w47(zLayer);
    return _this__u8e3s4;
  }
  function Clickable$onClick$ref($boundThis) {
    var l = function (p0) {
      $boundThis.u43(p0);
      return Unit_getInstance();
    };
    l.callableName = 'onClick';
    return l;
  }
  function AlignmentY_Top_getInstance() {
    AlignmentY_initEntries();
    return AlignmentY_Top_instance;
  }
  function AlignmentY_Center_getInstance() {
    AlignmentY_initEntries();
    return AlignmentY_Center_instance;
  }
  function AlignmentY_Bottom_getInstance() {
    AlignmentY_initEntries();
    return AlignmentY_Bottom_instance;
  }
  function AlignmentX_Start_getInstance() {
    AlignmentX_initEntries();
    return AlignmentX_Start_instance;
  }
  function AlignmentX_End_getInstance() {
    AlignmentX_initEntries();
    return AlignmentX_End_instance;
  }
  function width$factory() {
    return getPropertyCallableRef('width', 1, KMutableProperty1, function (receiver) {
      return receiver.u3z();
    }, function (receiver, value) {
      return receiver.p47(value);
    });
  }
  function width$factory_0() {
    return getPropertyCallableRef('width', 1, KMutableProperty1, function (receiver) {
      return receiver.u3z();
    }, function (receiver, value) {
      return receiver.p47(value);
    });
  }
  function height$factory() {
    return getPropertyCallableRef('height', 1, KMutableProperty1, function (receiver) {
      return receiver.v3z();
    }, function (receiver, value) {
      return receiver.q47(value);
    });
  }
  function height$factory_0() {
    return getPropertyCallableRef('height', 1, KMutableProperty1, function (receiver) {
      return receiver.v3z();
    }, function (receiver, value) {
      return receiver.q47(value);
    });
  }
  function layout$factory() {
    return getPropertyCallableRef('layout', 1, KMutableProperty1, function (receiver) {
      return receiver.s47();
    }, function (receiver, value) {
      return receiver.r47(value);
    });
  }
  function layout$factory_0() {
    return getPropertyCallableRef('layout', 1, KMutableProperty1, function (receiver) {
      return receiver.s47();
    }, function (receiver, value) {
      return receiver.r47(value);
    });
  }
  function background$factory() {
    return getPropertyCallableRef('background', 1, KMutableProperty1, function (receiver) {
      return receiver.r40();
    }, function (receiver, value) {
      return receiver.t47(value);
    });
  }
  function background$factory_0() {
    return getPropertyCallableRef('background', 1, KMutableProperty1, function (receiver) {
      return receiver.r40();
    }, function (receiver, value) {
      return receiver.t47(value);
    });
  }
  function border$factory() {
    return getPropertyCallableRef('border', 1, KMutableProperty1, function (receiver) {
      return receiver.v47();
    }, function (receiver, value) {
      return receiver.u47(value);
    });
  }
  function border$factory_0() {
    return getPropertyCallableRef('border', 1, KMutableProperty1, function (receiver) {
      return receiver.v47();
    }, function (receiver, value) {
      return receiver.u47(value);
    });
  }
  function zLayer$factory() {
    return getPropertyCallableRef('zLayer', 1, KMutableProperty1, function (receiver) {
      return receiver.x47();
    }, function (receiver, value) {
      return receiver.w47(value);
    });
  }
  function zLayer$factory_0() {
    return getPropertyCallableRef('zLayer', 1, KMutableProperty1, function (receiver) {
      return receiver.x47();
    }, function (receiver, value) {
      return receiver.w47(value);
    });
  }
  function paddingStart$factory() {
    return getPropertyCallableRef('paddingStart', 1, KMutableProperty1, function (receiver) {
      return new Dp(receiver.z47());
    }, function (receiver, value) {
      return receiver.y47(value.w3z_1);
    });
  }
  function paddingStart$factory_0() {
    return getPropertyCallableRef('paddingStart', 1, KMutableProperty1, function (receiver) {
      return new Dp(receiver.z47());
    }, function (receiver, value) {
      return receiver.y47(value.w3z_1);
    });
  }
  function paddingEnd$factory() {
    return getPropertyCallableRef('paddingEnd', 1, KMutableProperty1, function (receiver) {
      return new Dp(receiver.b48());
    }, function (receiver, value) {
      return receiver.a48(value.w3z_1);
    });
  }
  function paddingEnd$factory_0() {
    return getPropertyCallableRef('paddingEnd', 1, KMutableProperty1, function (receiver) {
      return new Dp(receiver.b48());
    }, function (receiver, value) {
      return receiver.a48(value.w3z_1);
    });
  }
  function paddingTop$factory() {
    return getPropertyCallableRef('paddingTop', 1, KMutableProperty1, function (receiver) {
      return new Dp(receiver.d48());
    }, function (receiver, value) {
      return receiver.c48(value.w3z_1);
    });
  }
  function paddingTop$factory_0() {
    return getPropertyCallableRef('paddingTop', 1, KMutableProperty1, function (receiver) {
      return new Dp(receiver.d48());
    }, function (receiver, value) {
      return receiver.c48(value.w3z_1);
    });
  }
  function paddingBottom$factory() {
    return getPropertyCallableRef('paddingBottom', 1, KMutableProperty1, function (receiver) {
      return new Dp(receiver.f48());
    }, function (receiver, value) {
      return receiver.e48(value.w3z_1);
    });
  }
  function paddingBottom$factory_0() {
    return getPropertyCallableRef('paddingBottom', 1, KMutableProperty1, function (receiver) {
      return new Dp(receiver.f48());
    }, function (receiver, value) {
      return receiver.e48(value.w3z_1);
    });
  }
  function marginStart$factory() {
    return getPropertyCallableRef('marginStart', 1, KMutableProperty1, function (receiver) {
      return new Dp(receiver.h48());
    }, function (receiver, value) {
      return receiver.g48(value.w3z_1);
    });
  }
  function marginStart$factory_0() {
    return getPropertyCallableRef('marginStart', 1, KMutableProperty1, function (receiver) {
      return new Dp(receiver.h48());
    }, function (receiver, value) {
      return receiver.g48(value.w3z_1);
    });
  }
  function marginEnd$factory() {
    return getPropertyCallableRef('marginEnd', 1, KMutableProperty1, function (receiver) {
      return new Dp(receiver.j48());
    }, function (receiver, value) {
      return receiver.i48(value.w3z_1);
    });
  }
  function marginEnd$factory_0() {
    return getPropertyCallableRef('marginEnd', 1, KMutableProperty1, function (receiver) {
      return new Dp(receiver.j48());
    }, function (receiver, value) {
      return receiver.i48(value.w3z_1);
    });
  }
  function marginTop$factory() {
    return getPropertyCallableRef('marginTop', 1, KMutableProperty1, function (receiver) {
      return new Dp(receiver.l48());
    }, function (receiver, value) {
      return receiver.k48(value.w3z_1);
    });
  }
  function marginTop$factory_0() {
    return getPropertyCallableRef('marginTop', 1, KMutableProperty1, function (receiver) {
      return new Dp(receiver.l48());
    }, function (receiver, value) {
      return receiver.k48(value.w3z_1);
    });
  }
  function marginBottom$factory() {
    return getPropertyCallableRef('marginBottom', 1, KMutableProperty1, function (receiver) {
      return new Dp(receiver.n48());
    }, function (receiver, value) {
      return receiver.m48(value.w3z_1);
    });
  }
  function marginBottom$factory_0() {
    return getPropertyCallableRef('marginBottom', 1, KMutableProperty1, function (receiver) {
      return new Dp(receiver.n48());
    }, function (receiver, value) {
      return receiver.m48(value.w3z_1);
    });
  }
  function alignX$factory() {
    return getPropertyCallableRef('alignX', 1, KMutableProperty1, function (receiver) {
      return receiver.p48();
    }, function (receiver, value) {
      return receiver.o48(value);
    });
  }
  function alignX$factory_0() {
    return getPropertyCallableRef('alignX', 1, KMutableProperty1, function (receiver) {
      return receiver.p48();
    }, function (receiver, value) {
      return receiver.o48(value);
    });
  }
  function alignY$factory() {
    return getPropertyCallableRef('alignY', 1, KMutableProperty1, function (receiver) {
      return receiver.r48();
    }, function (receiver, value) {
      return receiver.q48(value);
    });
  }
  function alignY$factory_0() {
    return getPropertyCallableRef('alignY', 1, KMutableProperty1, function (receiver) {
      return receiver.r48();
    }, function (receiver, value) {
      return receiver.q48(value);
    });
  }
  function onMeasured$factory() {
    return getPropertyCallableRef('onMeasured', 1, KMutableProperty1, function (receiver) {
      return receiver.t48();
    }, function (receiver, value) {
      return receiver.s48(value);
    });
  }
  function onMeasured$factory_0() {
    return getPropertyCallableRef('onMeasured', 1, KMutableProperty1, function (receiver) {
      return receiver.t48();
    }, function (receiver, value) {
      return receiver.s48(value);
    });
  }
  function onPositioned$factory() {
    return getPropertyCallableRef('onPositioned', 1, KMutableProperty1, function (receiver) {
      return receiver.v48();
    }, function (receiver, value) {
      return receiver.u48(value);
    });
  }
  function onPositioned$factory_0() {
    return getPropertyCallableRef('onPositioned', 1, KMutableProperty1, function (receiver) {
      return receiver.v48();
    }, function (receiver, value) {
      return receiver.u48(value);
    });
  }
  function onPointer$factory() {
    return getPropertyCallableRef('onPointer', 1, KProperty1, function (receiver) {
      return receiver.w48();
    }, null);
  }
  function onClick$factory() {
    return getPropertyCallableRef('onClick', 1, KProperty1, function (receiver) {
      return receiver.x48();
    }, null);
  }
  function onWheelX$factory() {
    return getPropertyCallableRef('onWheelX', 1, KProperty1, function (receiver) {
      return receiver.y48();
    }, null);
  }
  function onWheelY$factory() {
    return getPropertyCallableRef('onWheelY', 1, KProperty1, function (receiver) {
      return receiver.z48();
    }, null);
  }
  function onEnter$factory() {
    return getPropertyCallableRef('onEnter', 1, KProperty1, function (receiver) {
      return receiver.a49();
    }, null);
  }
  function onExit$factory() {
    return getPropertyCallableRef('onExit', 1, KProperty1, function (receiver) {
      return receiver.b49();
    }, null);
  }
  function onHover$factory() {
    return getPropertyCallableRef('onHover', 1, KProperty1, function (receiver) {
      return receiver.c49();
    }, null);
  }
  function onDragStart$factory() {
    return getPropertyCallableRef('onDragStart', 1, KProperty1, function (receiver) {
      return receiver.d49();
    }, null);
  }
  function onDrag$factory() {
    return getPropertyCallableRef('onDrag', 1, KProperty1, function (receiver) {
      return receiver.e49();
    }, null);
  }
  function onDragEnd$factory() {
    return getPropertyCallableRef('onDragEnd', 1, KProperty1, function (receiver) {
      return receiver.f49();
    }, null);
  }
  function dimensionToPx($this, dim, contentPx, scaledGrowSpace, isGrowAllowed) {
    var tmp0_subject = dim;
    var tmp;
    if (equals(tmp0_subject, FitContent_getInstance())) {
      tmp = contentPx;
    } else {
      if (tmp0_subject instanceof Dp) {
        tmp = _Dp___get_px__impl__e6g4pw(dim.w3z_1);
      } else {
        if (tmp0_subject instanceof Grow) {
          var tmp_0;
          if (isGrowAllowed) {
            var min = dimensionToPx($this, dim.y3z_1, contentPx, 0.0, false);
            var max = dimensionToPx($this, dim.z3z_1, contentPx, 0.0, false);
            var tmp$ret$0;
            {
              var tmp0_clamp = scaledGrowSpace * dim.x3z_1;
              tmp$ret$0 = tmp0_clamp < min ? min : tmp0_clamp > max ? max : tmp0_clamp;
            }
            tmp_0 = tmp$ret$0;
          } else {
            tmp_0 = 0.0;
          }
          tmp = tmp_0;
        } else {
          noWhenBranchMatchedException();
        }
      }
    }
    return tmp;
  }
  function UiNode$setBoundsVertexMod$lambda(this$0) {
    return function ($this$null) {
      var tmp0_safe_receiver = $this$null.q4g(Companion_getInstance_26().n3w_1);
      if (tmp0_safe_receiver == null)
        null;
      else
        tmp0_safe_receiver.w2l(this$0.p3u(), this$0.q3u(), this$0.r3u(), this$0.s3u());
      return Unit_getInstance();
    };
  }
  function UiNode(parent, surface) {
    this.n3s_1 = parent;
    this.o3s_1 = surface;
    this.p3s_1 = 0;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.q3s_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = ArrayList_init_$Create$_0();
    }
    tmp_0.r3s_1 = tmp$ret$1;
    this.s3s_1 = new WeakMemory();
    this.t3s_1 = 0.0;
    this.u3s_1 = 0.0;
    this.v3s_1 = 0.0;
    this.w3s_1 = 0.0;
    this.x3s_1 = 0.0;
    this.y3s_1 = 0.0;
    this.z3s_1 = MutableVec4f_init_$Create$();
    var tmp_1 = this;
    tmp_1.a3t_1 = UiNode$setBoundsVertexMod$lambda(this);
  }
  UiNode.prototype.j3u = function () {
    return this.o3s_1;
  };
  UiNode.prototype.l3s = function () {
    return this;
  };
  UiNode.prototype.k3u = function () {
    return this.r3s_1;
  };
  UiNode.prototype.l3u = function () {
    return this.v3s_1;
  };
  UiNode.prototype.m3u = function () {
    return this.w3s_1;
  };
  UiNode.prototype.n3u = function () {
    return this.x3s_1 - this.v3s_1;
  };
  UiNode.prototype.o3u = function () {
    return this.y3s_1 - this.w3s_1;
  };
  UiNode.prototype.w4e = function () {
    return this.n3u() - this.u3u() - this.v3u();
  };
  UiNode.prototype.x4e = function () {
    return this.o3u() - this.w3u() - this.x3u();
  };
  UiNode.prototype.p3u = function () {
    return this.z3s_1.e23();
  };
  UiNode.prototype.q3u = function () {
    return this.z3s_1.g23();
  };
  UiNode.prototype.r3u = function () {
    return this.z3s_1.w2g();
  };
  UiNode.prototype.s3u = function () {
    return this.z3s_1.r2l();
  };
  UiNode.prototype.t3u = function () {
    return this.r3u() - this.p3u() > 0.5 ? this.s3u() - this.q3u() > 0.5 : false;
  };
  UiNode.prototype.u3u = function () {
    return _Dp___get_px__impl__e6g4pw(this.s3t().z47());
  };
  UiNode.prototype.v3u = function () {
    return _Dp___get_px__impl__e6g4pw(this.s3t().b48());
  };
  UiNode.prototype.w3u = function () {
    return _Dp___get_px__impl__e6g4pw(this.s3t().d48());
  };
  UiNode.prototype.x3u = function () {
    return _Dp___get_px__impl__e6g4pw(this.s3t().f48());
  };
  UiNode.prototype.y3u = function () {
    return _Dp___get_px__impl__e6g4pw(this.s3t().h48());
  };
  UiNode.prototype.z3u = function () {
    return _Dp___get_px__impl__e6g4pw(this.s3t().j48());
  };
  UiNode.prototype.a3v = function () {
    return _Dp___get_px__impl__e6g4pw(this.s3t().l48());
  };
  UiNode.prototype.b3v = function () {
    return _Dp___get_px__impl__e6g4pw(this.s3t().n48());
  };
  UiNode.prototype.c3v = function () {
    return this.a3t_1;
  };
  UiNode.prototype.d3v = function (screenX, screenY, result) {
    return result.c2j(screenX - this.v3s_1, screenY - this.w3s_1);
  };
  UiNode.prototype.e3v = function (point) {
    var tmp;
    var containsLower = this.v3s_1;
    var containsUpper = this.x3s_1;
    var containsArg = point.e23();
    if (containsLower <= containsArg ? containsArg <= containsUpper : false) {
      var containsLower_0 = this.w3s_1;
      var containsUpper_0 = this.y3s_1;
      var containsArg_0 = point.g23();
      tmp = containsLower_0 <= containsArg_0 ? containsArg_0 <= containsUpper_0 : false;
    } else {
      tmp = false;
    }
    return tmp;
  };
  UiNode.prototype.f3v = function (width, height) {
    this.t3s_1 = width;
    this.u3s_1 = height;
    var tmp0_safe_receiver = this.s3t().t48();
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        tmp$ret$0 = tmp0_safe_receiver(this);
      }
    }
  };
  UiNode.prototype.g3v = function (minX, minY, maxX, maxY) {
    this.v3s_1 = minX;
    this.w3s_1 = minY;
    this.x3s_1 = maxX;
    this.y3s_1 = maxY;
    if (!(this.n3s_1 == null)) {
      var tmp$ret$0;
      {
        var tmp0_max = this.n3s_1.p3u();
        tmp$ret$0 = Math.max(tmp0_max, minX);
      }
      this.z3s_1.x2i(tmp$ret$0);
      var tmp$ret$1;
      {
        var tmp1_max = this.n3s_1.q3u();
        tmp$ret$1 = Math.max(tmp1_max, minY);
      }
      this.z3s_1.y2i(tmp$ret$1);
      var tmp$ret$2;
      {
        var tmp2_min = this.n3s_1.r3u();
        tmp$ret$2 = Math.min(tmp2_min, maxX);
      }
      this.z3s_1.n2k(tmp$ret$2);
      var tmp$ret$3;
      {
        var tmp3_min = this.n3s_1.s3u();
        tmp$ret$3 = Math.min(tmp3_min, maxY);
      }
      this.z3s_1.u2l(tmp$ret$3);
    } else {
      this.z3s_1.x2i(minX);
      this.z3s_1.y2i(minY);
      this.z3s_1.n2k(maxX);
      this.z3s_1.u2l(maxY);
    }
    var tmp0_safe_receiver = this.s3t().v48();
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$4;
      {
        {
        }
        tmp$ret$4 = tmp0_safe_receiver(this);
      }
    }
  };
  UiNode.prototype.h3v = function (scaledGrowSpace) {
    return dimensionToPx(this, this.s3t().u3z(), this.t3s_1, scaledGrowSpace, true);
  };
  UiNode.prototype.i3v = function (scaledGrowSpace) {
    return dimensionToPx(this, this.s3t().v3z(), this.u3s_1, scaledGrowSpace, true);
  };
  UiNode.prototype.j3v = function (child, measuredChildWidth) {
    var tmp = this.v3s_1;
    var tmp0_subject = child.s3t().p48();
    var tmp0 = tmp0_subject.y1();
    var tmp_0;
    switch (tmp0) {
      case 0:
        var tmp$ret$0;
        {
          var tmp0_max = this.u3u();
          var tmp1_max = child.y3u();
          tmp$ret$0 = Math.max(tmp0_max, tmp1_max);
        }

        tmp_0 = tmp$ret$0;
        break;
      case 1:
        tmp_0 = (this.n3u() - measuredChildWidth) * 0.5;
        break;
      case 2:
        var tmp_1 = this.n3u() - measuredChildWidth;
        var tmp$ret$1;
        {
          var tmp2_max = this.v3u();
          var tmp3_max = child.z3u();
          tmp$ret$1 = Math.max(tmp2_max, tmp3_max);
        }

        tmp_0 = tmp_1 - tmp$ret$1;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp + tmp_0;
  };
  UiNode.prototype.k3v = function (child, measuredChildHeight) {
    var tmp = this.w3s_1;
    var tmp0_subject = child.s3t().r48();
    var tmp0 = tmp0_subject.y1();
    var tmp_0;
    switch (tmp0) {
      case 0:
        var tmp$ret$0;
        {
          var tmp0_max = this.w3u();
          var tmp1_max = child.a3v();
          tmp$ret$0 = Math.max(tmp0_max, tmp1_max);
        }

        tmp_0 = tmp$ret$0;
        break;
      case 1:
        tmp_0 = (this.o3u() - measuredChildHeight) * 0.5;
        break;
      case 2:
        var tmp_1 = this.o3u() - measuredChildHeight;
        var tmp$ret$1;
        {
          var tmp2_max = this.x3u();
          var tmp3_max = child.b3v();
          tmp$ret$1 = Math.max(tmp2_max, tmp3_max);
        }

        tmp_0 = tmp_1 - tmp$ret$1;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp + tmp_0;
  };
  UiNode.prototype.l3v = function (ctx) {
    var tmp0_safe_receiver = this.s3t().r40();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.r4g(this);
    }
    var tmp1_safe_receiver = this.s3t().v47();
    if (tmp1_safe_receiver == null)
      null;
    else {
      tmp1_safe_receiver.r4g(this);
    }
  };
  UiNode.prototype.m3v = function (ctx) {
    this.s3t().s47().p3y(this, ctx);
  };
  UiNode.prototype.n3v = function (ctx) {
    this.s3t().s47().b40(this, ctx);
  };
  UiNode.prototype.o3v = function () {
    var tmp = this;
    var tmp0_this = this.j3u();
    var tmp1 = tmp0_this.b43_1;
    tmp0_this.b43_1 = tmp1 + 1 | 0;
    tmp.p3s_1 = tmp1;
    var tmp$ret$0;
    {
      var tmp0_isNotEmpty = this.k3u();
      tmp$ret$0 = !tmp0_isNotEmpty.q();
    }
    if (tmp$ret$0) {
      this.q3s_1.t7();
      var inductionVariable = get_lastIndex(this.r3s_1);
      if (0 <= inductionVariable)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + -1 | 0;
          var tmp3_this = this;
          {
            var tmp1_plusAssign = tmp3_this.q3s_1;
            var tmp2_plusAssign = this.r3s_1.r(i);
            tmp1_plusAssign.b(tmp2_plusAssign);
          }
        }
         while (0 <= inductionVariable);
      this.r3s_1.t7();
    }
    this.s3t().h49();
    var tmp_0 = this.s3t();
    var tmp4_safe_receiver = this.n3s_1;
    var tmp5_safe_receiver = tmp4_safe_receiver == null ? null : tmp4_safe_receiver.s3t();
    var tmp6_elvis_lhs = tmp5_safe_receiver == null ? null : tmp5_safe_receiver.x47();
    var tmp_1;
    if (tmp6_elvis_lhs == null) {
      Companion_getInstance_30();
      tmp_1 = 0;
    } else {
      tmp_1 = tmp6_elvis_lhs;
    }
    zLayer(tmp_0, tmp_1);
    this.s3s_1.t4g();
  };
  UiNode.prototype.b3t = function (type, factory) {
    var child = null;
    var tmp$ret$0;
    {
      var tmp0_isNotEmpty = this.q3s_1;
      tmp$ret$0 = !tmp0_isNotEmpty.q();
    }
    if (tmp$ret$0) {
      var old = removeLast(this.q3s_1);
      if (getKClassFromExpression(old) === type) {
        child = old instanceof UiNode ? old : THROW_CCE();
      }
    }
    if (child == null) {
      child = factory(this, this.j3u());
    }
    child.o3v();
    var tmp0_this = this;
    {
      var tmp1_plusAssign = tmp0_this.r3s_1;
      var tmp2_plusAssign = child;
      tmp1_plusAssign.b(tmp2_plusAssign);
    }
    return child;
  };
  UiNode.prototype.p3v = function (_this__u8e3s4, color, block) {
    var prevMod = _this__u8e3s4.l3w_1;
    _this__u8e3s4.l3w_1 = this.a3t_1;
    var prevColor = _this__u8e3s4.h3w_1;
    var tmp0_safe_receiver = color;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        _this__u8e3s4.h3w_1 = tmp0_safe_receiver;
        tmp$ret$0 = Unit_getInstance();
      }
    }
    {
      _this__u8e3s4.f3w_1.z2h();
      {
        _this__u8e3s4.n2h(this.v3s_1, this.w3s_1, 0.0);
        block(_this__u8e3s4);
      }
      _this__u8e3s4.f3w_1.a2i();
    }
    _this__u8e3s4.l3w_1 = prevMod;
    _this__u8e3s4.h3w_1 = prevColor;
  };
  UiNode.prototype.q3v = function (layerOffset) {
    return this.j3u().z4h(this.s3t().x47() + layerOffset | 0).v4h_1;
  };
  UiNode.prototype.r3v = function (layerOffset, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      layerOffset = 0;
    return this.q3v(layerOffset);
  };
  UiNode.prototype.s3v = function (fontProps, ctx, layerOffset) {
    return this.j3u().z4h(this.s3t().x47() + layerOffset | 0).a4i(fontProps, ctx);
  };
  UiNode.prototype.t3v = function (fontProps, ctx, layerOffset, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      layerOffset = 0;
    return this.s3v(fontProps, ctx, layerOffset);
  };
  UiNode.prototype.u3v = function (_this__u8e3s4, x, y, width, height, color) {
    var tmp = this.v3s_1 + x;
    var tmp_0 = this.w3s_1 + y;
    _this__u8e3s4.f4j(tmp, tmp_0, width, height, this.z3s_1, color, null, 0.0, 0.0, 448, null);
  };
  UiNode.prototype.t4e = function (_this__u8e3s4, x, y, width, height, radius, color) {
    var tmp = this.v3s_1 + x;
    var tmp_0 = this.w3s_1 + y;
    _this__u8e3s4.g4j(tmp, tmp_0, width, height, radius, this.z3s_1, color, null, 0.0, 0.0, 896, null);
  };
  UiNode.prototype.u4e = function (_this__u8e3s4, x, y, radius, color) {
    var tmp = this.v3s_1 + x;
    var tmp_0 = this.w3s_1 + y;
    _this__u8e3s4.h4j(tmp, tmp_0, radius, this.z3s_1, color, null, 0.0, 0.0, 224, null);
  };
  UiNode.$metadata$ = classMeta('UiNode', [UiScope]);
  function UiPrimitiveMesh$PrimitiveShader$Model$lambda$lambda($clipBounds, $this_vertexStage, $color, $screenPos, this$0) {
    return function ($this$main) {
      $this$main.h30($clipBounds.n37(), $this_vertexStage.p37(Companion_getInstance_26().n3w_1.x2s_1));
      var tmp = $this_vertexStage.g3p(Companion_getInstance_28().i4j_1.x2s_1);
      var center = $this$main.i3n(tmp, null, 2, null);
      var tmp_0 = $this_vertexStage.p37(Companion_getInstance_28().j4j_1.x2s_1);
      var outerDimens = $this$main.y35(tmp_0, null, 2, null);
      var tmp_1 = $this_vertexStage.p37(Companion_getInstance_28().k4j_1.x2s_1);
      var innerDimens = $this$main.y35(tmp_1, null, 2, null);
      var tmp_2 = $this_vertexStage.o37(Companion_getInstance_28().l4j_1.x2s_1);
      var outerPosWeights = $this$main.y35(tmp_2, null, 2, null);
      var tmp_3 = $this_vertexStage.o37(Companion_getInstance_28().m4j_1.x2s_1);
      var innerPosWeights = $this$main.y35(tmp_3, null, 2, null);
      var tmp_4 = $this$main.z35(Companion_getInstance_9().c2k_1);
      var pos = $this$main.u30(tmp_4, null, 2, null);
      $this$main.h30(get_xy(pos), plus_0(plus_0(center, times_1(get_xy_0(outerPosWeights), get_xy_0(outerDimens))), times_1(get_zw(outerPosWeights), get_zw(outerDimens))));
      var tmp0_receiver = pos;
      $this$main.o33(get_xy(tmp0_receiver), plus_0(times_1(get_xy_0(innerPosWeights), get_xy_0(innerDimens)), times_1(get_zw(innerPosWeights), get_zw(innerDimens))));
      var colorA = $this_vertexStage.p37(Companion_getInstance_28().n4j_1.x2s_1);
      var colorB = $this_vertexStage.p37(Companion_getInstance_28().o4j_1.x2s_1);
      var gradientDir = $this_vertexStage.g3p(Companion_getInstance_28().p4j_1.x2s_1);
      var tmp_5 = plus_0(get_xy_0(outerDimens), get_zw(outerDimens));
      var widthHeight = $this$main.i3n(tmp_5, null, 2, null);
      var tmp_6 = times_0(div_1(minus(get_xy(pos), center), widthHeight), $this$main.d38(2.0));
      var normPos = $this$main.i3n(tmp_6, null, 2, null);
      var wB = $this$main.z3n(plus_2(times_2($this$main.b3o(normPos, gradientDir), $this$main.d38(0.5)), $this$main.d38(0.5)), $this$main.d38(0.0), $this$main.d38(1.0));
      var wA = minus_1($this$main.d38(1.0), wB);
      $this$main.h30($color.n37(), plus_0(times_0(colorA, wA), times_0(colorB, wB)));
      $this$main.h30(get_rgb($color.n37()), times_0(get_rgb($color.n37()), get_a($color.n37())));
      $this$main.h30($screenPos.n37(), get_xy(pos));
      $this$main.h30($this_vertexStage.d2s_1, times(mvpMatrix(this$0).m2h(), $this$main.d3n(pos, $this$main.d38(1.0))));
      return Unit_getInstance();
    };
  }
  function UiPrimitiveMesh$PrimitiveShader$Model$lambda($clipBounds, $color, $screenPos, this$0) {
    return function ($this$vertexStage) {
      $this$vertexStage.i30(UiPrimitiveMesh$PrimitiveShader$Model$lambda$lambda($clipBounds, $this$vertexStage, $color, $screenPos, this$0));
      return Unit_getInstance();
    };
  }
  function UiPrimitiveMesh$PrimitiveShader$Model$lambda$lambda$lambda() {
    return function ($this$if) {
      $this$if.v3n();
      return Unit_getInstance();
    };
  }
  function UiPrimitiveMesh$PrimitiveShader$Model$lambda$lambda$lambda_0($this_fragmentStage, $color) {
    return function ($this$else) {
      var tmp = $color.q36();
      $this_fragmentStage.r3p($this$else, tmp, 0, 2, null);
      return Unit_getInstance();
    };
  }
  function UiPrimitiveMesh$PrimitiveShader$Model$lambda$lambda_0($screenPos, $clipBounds, $this_fragmentStage, $color) {
    return function ($this$main) {
      var tmp = or_0($this$main.w3n(lt_0($screenPos.q36(), get_xy_0($clipBounds.q36()))), $this$main.w3n(gt_0($screenPos.q36(), get_zw($clipBounds.q36()))));
      var tmp_0 = $this$main.s3n(tmp, UiPrimitiveMesh$PrimitiveShader$Model$lambda$lambda$lambda());
      tmp_0.n3l(UiPrimitiveMesh$PrimitiveShader$Model$lambda$lambda$lambda_0($this_fragmentStage, $color));
      return Unit_getInstance();
    };
  }
  function UiPrimitiveMesh$PrimitiveShader$Model$lambda_0($screenPos, $clipBounds, $color) {
    return function ($this$fragmentStage) {
      $this$fragmentStage.i30(UiPrimitiveMesh$PrimitiveShader$Model$lambda$lambda_0($screenPos, $clipBounds, $this$fragmentStage, $color));
      return Unit_getInstance();
    };
  }
  function Model_2() {
    KslProgram.call(this, 'UI2 primitive shape shader');
    var screenPos = this.t31(null, null, 3, null);
    var color = this.v31(null, null, 3, null);
    var clipBounds = this.v31(null, KslInterStageInterpolation_Flat_getInstance(), 1, null);
    this.j31(UiPrimitiveMesh$PrimitiveShader$Model$lambda(clipBounds, color, screenPos, this));
    this.k31(UiPrimitiveMesh$PrimitiveShader$Model$lambda_0(screenPos, clipBounds, color));
  }
  Model_2.$metadata$ = classMeta('Model', undefined, undefined, undefined, undefined, KslProgram.prototype);
  function Companion_27() {
    Companion_instance_27 = this;
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_apply = new PipelineConfig();
      {
      }
      {
        tmp0_apply.w2t_1 = BlendMode_BLEND_PREMULTIPLIED_ALPHA_getInstance();
        tmp0_apply.x2t_1 = CullMethod_NO_CULLING_getInstance();
        tmp0_apply.y2t_1 = DepthCompareOp_DISABLED_getInstance();
      }
      tmp$ret$0 = tmp0_apply;
    }
    tmp.q4j_1 = tmp$ret$0;
  }
  Companion_27.$metadata$ = objectMeta('Companion');
  var Companion_instance_27;
  function Companion_getInstance_27() {
    if (Companion_instance_27 == null)
      new Companion_27();
    return Companion_instance_27;
  }
  function addPrimitive($this, x, y, outerW, outerH, outerRx, outerRy, innerW, innerH, innerRx, innerRy, clip, colorA, colorB, gradientX, gradientY) {
    var vec4 = MutableVec4f_init_$Create$();
    var tmp$ret$8;
    {
      var tmp1_addInstance = $this.e4j_1;
      tmp1_addInstance.r4j(1);
      var szBefore = tmp1_addInstance.s2t_1.qr();
      {
        var tmp0__anonymous__q1qw7t = tmp1_addInstance.s2t_1;
        {
          var tmp$ret$0;
          {
            var tmp0_max = outerW - outerRx * 2.0;
            tmp$ret$0 = Math.max(tmp0_max, 0.0);
          }
          var tmp = tmp$ret$0;
          var tmp$ret$1;
          {
            var tmp1_max = outerH - outerRy * 2.0;
            tmp$ret$1 = Math.max(tmp1_max, 0.0);
          }
          var tmp_0 = tmp$ret$1;
          var tmp$ret$2;
          {
            var tmp2_min = outerW * 0.5;
            tmp$ret$2 = Math.min(outerRx, tmp2_min);
          }
          var tmp_1 = tmp$ret$2;
          var tmp$ret$3;
          {
            var tmp3_min = outerH * 0.5;
            tmp$ret$3 = Math.min(outerRy, tmp3_min);
          }
          tmp0__anonymous__q1qw7t.s4j(vec4.w2l(tmp, tmp_0, tmp_1, tmp$ret$3).t2i());
          var tmp$ret$4;
          {
            var tmp4_max = innerW - innerRx * 2.0;
            tmp$ret$4 = Math.max(tmp4_max, 0.0);
          }
          var tmp_2 = tmp$ret$4;
          var tmp$ret$5;
          {
            var tmp5_max = innerH - innerRy * 2.0;
            tmp$ret$5 = Math.max(tmp5_max, 0.0);
          }
          var tmp_3 = tmp$ret$5;
          var tmp$ret$6;
          {
            var tmp6_min = innerW * 0.5;
            tmp$ret$6 = Math.min(innerRx, tmp6_min);
          }
          var tmp_4 = tmp$ret$6;
          var tmp$ret$7;
          {
            var tmp7_min = innerH * 0.5;
            tmp$ret$7 = Math.min(innerRy, tmp7_min);
          }
          tmp0__anonymous__q1qw7t.s4j(vec4.w2l(tmp_2, tmp_3, tmp_4, tmp$ret$7).t2i());
          tmp0__anonymous__q1qw7t.s4j(vec4.x2l(clip).t2i());
          tmp0__anonymous__q1qw7t.s4j(vec4.x2l(colorA).t2i());
          tmp0__anonymous__q1qw7t.s4j(vec4.x2l(colorB).t2i());
          tmp0__anonymous__q1qw7t.t4j(gradientX);
          tmp0__anonymous__q1qw7t.t4j(gradientY);
          tmp0__anonymous__q1qw7t.t4j(x + outerW * 0.5);
          tmp0__anonymous__q1qw7t.t4j(y + outerH * 0.5);
        }
      }
      var growSz = tmp1_addInstance.s2t_1.qr() - szBefore | 0;
      if (!(growSz === imul(tmp1_addInstance.o2t_1, 1))) {
        throw IllegalStateException_init_$Create$('Expected data to grow by ' + imul(tmp1_addInstance.o2t_1, 1) + ' elements, instead it grew by ' + growSz);
      }
      var tmp0_this = tmp1_addInstance;
      tmp0_this.r2t_1 = tmp0_this.r2t_1 + 1 | 0;
      tmp1_addInstance.v2t_1 = true;
      tmp$ret$8 = Unit_getInstance();
    }
  }
  function Companion_28() {
    Companion_instance_28 = this;
    this.i4j_1 = new Attribute('aCenter', GlslType_VEC_2F_getInstance());
    this.j4j_1 = new Attribute('aOuterDimens', GlslType_VEC_4F_getInstance());
    this.k4j_1 = new Attribute('aInnerDimens', GlslType_VEC_4F_getInstance());
    this.l4j_1 = new Attribute('aOuterW', GlslType_VEC_4F_getInstance());
    this.m4j_1 = new Attribute('aInnerW', GlslType_VEC_4F_getInstance());
    this.n4j_1 = new Attribute('aColorA', GlslType_VEC_4F_getInstance());
    this.o4j_1 = new Attribute('aColorB', GlslType_VEC_4F_getInstance());
    this.p4j_1 = new Attribute('aGradientDir', GlslType_VEC_2F_getInstance());
  }
  Companion_28.$metadata$ = objectMeta('Companion');
  var Companion_instance_28;
  function Companion_getInstance_28() {
    if (Companion_instance_28 == null)
      new Companion_28();
    return Companion_instance_28;
  }
  function PrimitiveShader() {
    Companion_getInstance_27();
    KslShader.call(this, new Model_2(), Companion_getInstance_27().q4j_1);
  }
  PrimitiveShader.$metadata$ = classMeta('PrimitiveShader', undefined, undefined, undefined, undefined, KslShader.prototype);
  function invoke$addOuterInnerVerts($this_generate, outerWeights, innerWeights, weights) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_addVertex = $this_generate.e3w_1;
        tmp0_addVertex.u4j(0, 1, null);
        var inductionVariable = 1;
        var last = tmp0_addVertex.h2s_1;
        if (inductionVariable <= last)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var tmp1_this = tmp0_addVertex;
            tmp1_this.p2s_1.v4j(0.0);
          }
           while (!(i === last));
        var inductionVariable_0 = 1;
        var last_0 = tmp0_addVertex.j2s_1;
        if (inductionVariable_0 <= last_0)
          do {
            var i_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var tmp3_this = tmp0_addVertex;
            tmp3_this.q2s_1.w4j(0);
          }
           while (!(i_0 === last_0));
        var tmp4_this = tmp0_addVertex;
        var tmp5 = tmp4_this.o2s_1;
        tmp4_this.o2s_1 = tmp5 + 1 | 0;
        tmp0_addVertex.t2s_1.ue(tmp5);
        {
          var tmp1__anonymous__uwfjfc = tmp0_addVertex.t2s_1;
          tmp1__anonymous__uwfjfc.j4g_1.x2l($this_generate.h3w_1);
          tmp1__anonymous__uwfjfc.x4j($this_generate.i3w_1);
          tmp1__anonymous__uwfjfc.y4j($this_generate.j3w_1);
          tmp1__anonymous__uwfjfc.z4j($this_generate.k3w_1);
          {
            outerWeights.x2l(weights);
            innerWeights.x2l(Companion_getInstance_12().b2m_1);
          }
          $this_generate.f3w_1.y2g(tmp1__anonymous__uwfjfc.g4g_1, 0.0, 2, null);
          if ($this_generate.m3w_1 ? !(tmp1__anonymous__uwfjfc.h4g_1.u2j() === 0.0) : false) {
            $this_generate.f3w_1.u2g(tmp1__anonymous__uwfjfc.h4g_1, 0.0);
            tmp1__anonymous__uwfjfc.h4g_1.w2k();
          }
          var tmp0_safe_receiver = $this_generate.l3w_1;
          if (tmp0_safe_receiver == null)
            null;
          else
            tmp0_safe_receiver(tmp1__anonymous__uwfjfc);
        }
        tmp0_addVertex.s2s_1.v2k(tmp0_addVertex.t2s_1.g4g_1);
        tmp0_addVertex.v2s_1 = true;
        tmp$ret$0 = tmp0_addVertex.o2s_1 - 1 | 0;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    var tmp$ret$3;
    {
      var tmp$ret$2;
      {
        var tmp2_addVertex = $this_generate.e3w_1;
        tmp2_addVertex.u4j(0, 1, null);
        var inductionVariable_1 = 1;
        var last_1 = tmp2_addVertex.h2s_1;
        if (inductionVariable_1 <= last_1)
          do {
            var i_1 = inductionVariable_1;
            inductionVariable_1 = inductionVariable_1 + 1 | 0;
            var tmp1_this_0 = tmp2_addVertex;
            tmp1_this_0.p2s_1.v4j(0.0);
          }
           while (!(i_1 === last_1));
        var inductionVariable_2 = 1;
        var last_2 = tmp2_addVertex.j2s_1;
        if (inductionVariable_2 <= last_2)
          do {
            var i_2 = inductionVariable_2;
            inductionVariable_2 = inductionVariable_2 + 1 | 0;
            var tmp3_this_0 = tmp2_addVertex;
            tmp3_this_0.q2s_1.w4j(0);
          }
           while (!(i_2 === last_2));
        var tmp4_this_0 = tmp2_addVertex;
        var tmp5_0 = tmp4_this_0.o2s_1;
        tmp4_this_0.o2s_1 = tmp5_0 + 1 | 0;
        tmp2_addVertex.t2s_1.ue(tmp5_0);
        {
          var tmp3__anonymous__ufb84q = tmp2_addVertex.t2s_1;
          tmp3__anonymous__ufb84q.j4g_1.x2l($this_generate.h3w_1);
          tmp3__anonymous__ufb84q.x4j($this_generate.i3w_1);
          tmp3__anonymous__ufb84q.y4j($this_generate.j3w_1);
          tmp3__anonymous__ufb84q.z4j($this_generate.k3w_1);
          {
            outerWeights.x2l(Companion_getInstance_12().b2m_1);
            innerWeights.x2l(weights);
          }
          $this_generate.f3w_1.y2g(tmp3__anonymous__ufb84q.g4g_1, 0.0, 2, null);
          if ($this_generate.m3w_1 ? !(tmp3__anonymous__ufb84q.h4g_1.u2j() === 0.0) : false) {
            $this_generate.f3w_1.u2g(tmp3__anonymous__ufb84q.h4g_1, 0.0);
            tmp3__anonymous__ufb84q.h4g_1.w2k();
          }
          var tmp0_safe_receiver_0 = $this_generate.l3w_1;
          if (tmp0_safe_receiver_0 == null)
            null;
          else
            tmp0_safe_receiver_0(tmp3__anonymous__ufb84q);
        }
        tmp2_addVertex.s2s_1.v2k(tmp2_addVertex.t2s_1.g4g_1);
        tmp2_addVertex.v2s_1 = true;
        tmp$ret$2 = tmp2_addVertex.o2s_1 - 1 | 0;
      }
      tmp$ret$3 = tmp$ret$2;
    }
  }
  function UiPrimitiveMesh$lambda$lambda($outerWeights, $innerWeights) {
    return function ($this$null) {
      ensureNotNull($this$null.q4g(Companion_getInstance_28().l4j_1)).x2l($outerWeights);
      ensureNotNull($this$null.q4g(Companion_getInstance_28().m4j_1)).x2l($innerWeights);
      return Unit_getInstance();
    };
  }
  function UiPrimitiveMesh$lambda() {
    return function ($this$generate) {
      var weights = MutableVec4f_init_$Create$();
      var outerWeights = MutableVec4f_init_$Create$();
      var innerWeights = MutableVec4f_init_$Create$();
      var tmp = $this$generate;
      tmp.l3w_1 = UiPrimitiveMesh$lambda$lambda(outerWeights, innerWeights);
      invoke$addOuterInnerVerts($this$generate, outerWeights, innerWeights, weights.w2l(-0.5, -0.5, 0.0, -1.0));
      var inductionVariable = 0;
      var tmp_0;
      if (inductionVariable <= 7) {
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var a = get_PI() / 2.0 * i / 7.0;
          var tmp$ret$0;
          {
            tmp$ret$0 = Math.sin(a);
          }
          var tmp_1 = tmp$ret$0;
          var tmp$ret$1;
          {
            tmp$ret$1 = Math.cos(a);
          }
          invoke$addOuterInnerVerts($this$generate, outerWeights, innerWeights, weights.w2l(0.5, -0.5, tmp_1, -tmp$ret$1));
        }
         while (inductionVariable <= 7);
        tmp_0 = Unit_getInstance();
      }
      var inductionVariable_0 = 0;
      var tmp_2;
      if (inductionVariable_0 <= 7) {
        do {
          var i_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          var a_0 = get_PI() / 2.0 * i_0 / 7.0;
          var tmp$ret$2;
          {
            tmp$ret$2 = Math.cos(a_0);
          }
          var tmp_3 = tmp$ret$2;
          var tmp$ret$3;
          {
            tmp$ret$3 = Math.sin(a_0);
          }
          invoke$addOuterInnerVerts($this$generate, outerWeights, innerWeights, weights.w2l(0.5, 0.5, tmp_3, tmp$ret$3));
        }
         while (inductionVariable_0 <= 7);
        tmp_2 = Unit_getInstance();
      }
      var inductionVariable_1 = 0;
      var tmp_4;
      if (inductionVariable_1 <= 7) {
        do {
          var i_1 = inductionVariable_1;
          inductionVariable_1 = inductionVariable_1 + 1 | 0;
          var a_1 = get_PI() / 2.0 * i_1 / 7.0;
          var tmp$ret$4;
          {
            tmp$ret$4 = Math.sin(a_1);
          }
          var tmp_5 = -tmp$ret$4;
          var tmp$ret$5;
          {
            tmp$ret$5 = Math.cos(a_1);
          }
          invoke$addOuterInnerVerts($this$generate, outerWeights, innerWeights, weights.w2l(-0.5, 0.5, tmp_5, tmp$ret$5));
        }
         while (inductionVariable_1 <= 7);
        tmp_4 = Unit_getInstance();
      }
      var inductionVariable_2 = 0;
      var tmp_6;
      if (inductionVariable_2 <= 7) {
        do {
          var i_2 = inductionVariable_2;
          inductionVariable_2 = inductionVariable_2 + 1 | 0;
          var a_2 = get_PI() / 2.0 * i_2 / 7.0;
          var tmp$ret$6;
          {
            tmp$ret$6 = Math.cos(a_2);
          }
          var tmp_7 = -tmp$ret$6;
          var tmp$ret$7;
          {
            tmp$ret$7 = Math.sin(a_2);
          }
          invoke$addOuterInnerVerts($this$generate, outerWeights, innerWeights, weights.w2l(-0.5, -0.5, tmp_7, -tmp$ret$7));
        }
         while (inductionVariable_2 <= 7);
        tmp_6 = Unit_getInstance();
      }
      var progression = step(until(3, $this$generate.e3w_1.o2s_1), 2);
      var inductionVariable_3 = progression.g1_1;
      var last = progression.h1_1;
      var step_0 = progression.i1_1;
      var tmp_8;
      if ((step_0 > 0 ? inductionVariable_3 <= last : false) ? true : step_0 < 0 ? last <= inductionVariable_3 : false) {
        do {
          var i_3 = inductionVariable_3;
          inductionVariable_3 = inductionVariable_3 + step_0 | 0;
          $this$generate.a4k(i_3 - 3 | 0, i_3 - 2 | 0, i_3);
          $this$generate.a4k(i_3 - 3 | 0, i_3, i_3 - 1 | 0);
        }
         while (!(i_3 === last));
        tmp_8 = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function UiPrimitiveMesh() {
    Companion_getInstance_28();
    var tmp = IndexedVertexList_init_$Create$([Companion_getInstance_28().l4j_1, Companion_getInstance_28().m4j_1]);
    Mesh_init_$Init$(tmp, null, 2, null, this);
    var tmp_0 = this;
    var tmp_1 = listOf([Companion_getInstance_28().j4j_1, Companion_getInstance_28().k4j_1, Companion_getInstance_26().n3w_1, Companion_getInstance_28().n4j_1, Companion_getInstance_28().o4j_1, Companion_getInstance_28().p4j_1, Companion_getInstance_28().i4j_1]);
    tmp_0.e4j_1 = MeshInstanceList_init_$Create$(tmp_1, 0, 2, null);
    this.b4k(this.e4j_1);
    this.c4k(false);
    this.d4k(UiPrimitiveMesh$lambda());
    this.e4k(new PrimitiveShader());
  }
  UiPrimitiveMesh.prototype.f4k = function (x, y, width, height, clip, colorA, colorB, gradientX, gradientY) {
    addPrimitive(this, x, y, width, height, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, clip, colorA, colorB, gradientX, gradientY);
  };
  UiPrimitiveMesh.prototype.f4j = function (x, y, width, height, clip, colorA, colorB, gradientX, gradientY, $mask0, $handler) {
    if (!(($mask0 & 64) === 0))
      colorB = colorA;
    if (!(($mask0 & 128) === 0))
      gradientX = 1.0;
    if (!(($mask0 & 256) === 0))
      gradientY = 0.0;
    return this.f4k(x, y, width, height, clip, colorA, colorB, gradientX, gradientY);
  };
  UiPrimitiveMesh.prototype.g4k = function (x, y, width, height, radius, clip, colorA, colorB, gradientX, gradientY) {
    addPrimitive(this, x, y, width, height, radius, radius, 0.0, 0.0, 0.0, 0.0, clip, colorA, colorB, gradientX, gradientY);
  };
  UiPrimitiveMesh.prototype.g4j = function (x, y, width, height, radius, clip, colorA, colorB, gradientX, gradientY, $mask0, $handler) {
    if (!(($mask0 & 128) === 0))
      colorB = colorA;
    if (!(($mask0 & 256) === 0))
      gradientX = 1.0;
    if (!(($mask0 & 512) === 0))
      gradientY = 0.0;
    return this.g4k(x, y, width, height, radius, clip, colorA, colorB, gradientX, gradientY);
  };
  UiPrimitiveMesh.prototype.h4k = function (x, y, radius, clip, colorA, colorB, gradientX, gradientY) {
    addPrimitive(this, x - radius, y - radius, radius * 2.0, radius * 2.0, radius, radius, 0.0, 0.0, 0.0, 0.0, clip, colorA, colorB, gradientX, gradientY);
  };
  UiPrimitiveMesh.prototype.h4j = function (x, y, radius, clip, colorA, colorB, gradientX, gradientY, $mask0, $handler) {
    if (!(($mask0 & 32) === 0))
      colorB = colorA;
    if (!(($mask0 & 64) === 0))
      gradientX = 1.0;
    if (!(($mask0 & 128) === 0))
      gradientY = 0.0;
    return this.h4k(x, y, radius, clip, colorA, colorB, gradientX, gradientY);
  };
  UiPrimitiveMesh.$metadata$ = classMeta('UiPrimitiveMesh', undefined, undefined, undefined, undefined, Mesh.prototype);
  function UiRenderer() {
  }
  UiRenderer.$metadata$ = interfaceMeta('UiRenderer');
  function RectBackground(backgroundColor) {
    this.c4l_1 = backgroundColor;
  }
  RectBackground.prototype.d4l = function () {
    return this.c4l_1;
  };
  RectBackground.prototype.e4l = function (node) {
    var tmp$ret$0;
    {
      {
      }
      {
        Companion_getInstance_30();
        node.u3v(node.q3v(-100), 0.0, 0.0, node.n3u(), node.o3u(), this.c4l_1);
      }
      tmp$ret$0 = node;
    }
  };
  RectBackground.prototype.r4g = function (node) {
    return this.e4l(node instanceof UiNode ? node : THROW_CCE());
  };
  RectBackground.$metadata$ = classMeta('RectBackground', [UiRenderer]);
  function UiScale() {
    UiScale_instance = this;
    this.u40_1 = mutableStateOf(1.0);
    this.v40_1 = mutableStateOf(1.0);
    this.w40_1 = 1.0;
  }
  UiScale.prototype.f4l = function (surface) {
    this.w40_1 = this.u40_1.g3s(surface) * this.v40_1.g3s(surface);
  };
  UiScale.$metadata$ = objectMeta('UiScale');
  var UiScale_instance;
  function UiScale_getInstance() {
    if (UiScale_instance == null)
      new UiScale();
    return UiScale_instance;
  }
  function UiScene(name, clearScreen, block) {
    var tmp$ret$0;
    {
      var tmp0_apply = new Scene(name);
      {
      }
      {
        setupUiScene(tmp0_apply, clearScreen);
        block(tmp0_apply);
      }
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0;
  }
  function UiScene$default(name, clearScreen, block, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      name = 'UiScene';
    if (!(($mask0 & 2) === 0))
      clearScreen = false;
    return UiScene(name, clearScreen, block);
  }
  function setupUiScene(_this__u8e3s4, clearScreen) {
    if (!clearScreen) {
      _this__u8e3s4.w2e_1.x4l(null);
    }
    var tmp = _this__u8e3s4;
    tmp.t2e_1 = OrthographicCamera_init_$Create$(null, 1, null);
    var tmp0_this = _this__u8e3s4;
    {
      var tmp0_plusAssign = tmp0_this.n4k();
      tmp0_plusAssign.b(setupUiScene$lambda(_this__u8e3s4));
    }
  }
  function setupUiScene$lambda($this_setupUiScene) {
    return function (ev) {
      var tmp = $this_setupUiScene.t2e_1;
      var tmp0_safe_receiver = tmp instanceof OrthographicCamera ? tmp : null;
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$0;
        {
          {
          }
          tmp0_safe_receiver.l4n_1 = 0.0;
          tmp0_safe_receiver.o4n_1 = 0.0;
          tmp0_safe_receiver.m4n_1 = ev.w4n_1.j4l_1.u4n_1;
          tmp0_safe_receiver.n4n_1 = -ev.w4n_1.j4l_1.v3z();
          tmp$ret$0 = Unit_getInstance();
        }
      }
      return Unit_getInstance();
    };
  }
  function UiScope() {
  }
  UiScope.$metadata$ = interfaceMeta('UiScope');
  var InputCaptureMode_CaptureInsideBounds_instance;
  var InputCaptureMode_CaptureOverBackground_instance;
  var InputCaptureMode_CaptureDisabled_instance;
  var InputCaptureMode_entriesInitialized;
  function InputCaptureMode_initEntries() {
    if (InputCaptureMode_entriesInitialized)
      return Unit_getInstance();
    InputCaptureMode_entriesInitialized = true;
    InputCaptureMode_CaptureInsideBounds_instance = new InputCaptureMode('CaptureInsideBounds', 0);
    InputCaptureMode_CaptureOverBackground_instance = new InputCaptureMode('CaptureOverBackground', 1);
    InputCaptureMode_CaptureDisabled_instance = new InputCaptureMode('CaptureDisabled', 2);
  }
  function handleHover($this, currentHover, ptrEv) {
    if ($this.e4o_1.p(currentHover)) {
      if (!invokePointerCallback($this, currentHover, ptrEv, currentHover.s3t().c49(), true)) {
        $this.g4o_1 = null;
      }
    } else {
      var tmp = currentHover.s3t().b49();
      invokePointerCallback$default($this, currentHover, ptrEv, tmp, false, 16, null);
      $this.g4o_1 = null;
    }
  }
  function handleDrag($this, currentDrag, ptrEv) {
    $this.k4o_1.d43_1 = Time_getInstance().z20_1;
    var ptr = ptrEv.z4e_1;
    if (ptr.m24()) {
      if (!invokePointerCallback($this, currentDrag, ptrEv, currentDrag.s3t().e49(), true)) {
        $this.i4o_1 = null;
      }
    } else {
      var tmp = currentDrag.s3t().f49();
      invokePointerCallback$default($this, currentDrag, ptrEv, tmp, false, 16, null);
      $this.i4o_1 = null;
    }
  }
  function invokePointerCallback($this, uiNode, ptrEvent, callbacks, consumedIfNull) {
    var wasConsumed = consumedIfNull;
    var tmp$ret$0;
    {
      tmp$ret$0 = !callbacks.q();
    }
    if (tmp$ret$0) {
      uiNode.d3v(ptrEvent.c4f_1.e23(), ptrEvent.c4f_1.g23(), ptrEvent.b4f_1);
      ptrEvent.d4f_1 = true;
      {
        var tmp0_iterator = callbacks.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          {
            element(ptrEvent);
          }
        }
      }
      wasConsumed = ptrEvent.d4f_1;
    }
    return wasConsumed;
  }
  function invokePointerCallback$default($this, uiNode, ptrEvent, callbacks, consumedIfNull, $mask0, $handler) {
    if (!(($mask0 & 16) === 0))
      consumedIfNull = false;
    return invokePointerCallback($this, uiNode, ptrEvent, callbacks, consumedIfNull);
  }
  function collectNodesAt(_this__u8e3s4, $this, x, y, result, predicate) {
    if ($this.l4o(_this__u8e3s4, x, y)) {
      traverseChildren($this, _this__u8e3s4, x, y, result, predicate);
    }
    if (result.m() > 1) {
      sortWith(result, $this.j4o_1);
    }
  }
  function traverseChildren($this, node, x, y, result, predicate) {
    var inductionVariable = 0;
    var last = node.k3u().m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var child = node.k3u().r(i);
        if ($this.l4o(child, x, y)) {
          traverseChildren($this, child, x, y, result, predicate);
        }
      }
       while (inductionVariable <= last);
    if (predicate(node)) {
      {
        result.b(node);
      }
    }
  }
  function sam$kotlin_Comparator$0(function_0) {
    this.m4o_1 = function_0;
  }
  sam$kotlin_Comparator$0.prototype.y = function (a, b) {
    return this.m4o_1(a, b);
  };
  sam$kotlin_Comparator$0.prototype.compare = function (a, b) {
    return this.y(a, b);
  };
  sam$kotlin_Comparator$0.$metadata$ = classMeta('sam$kotlin_Comparator$0', [Comparator]);
  function UiSurface$UiInputHandler$nodeComparator$lambda() {
    return function (a, b) {
      var tmp;
      if (a.s3t().x47() === b.s3t().x47()) {
        tmp = compareTo(b.p3s_1, a.p3s_1);
      } else {
        tmp = compareTo(b.s3t().x47(), a.s3t().x47());
      }
      return tmp;
    };
  }
  function UiSurface$UiInputHandler$checkInputHandler$lambda() {
    return function (it) {
      return Companion_getInstance_30().r4o_1(it) ? true : !(it.s3t().r40() == null);
    };
  }
  function Companion_29() {
    Companion_instance_29 = this;
  }
  Companion_29.prototype.s4o = function (font) {
    var tmp$ret$0;
    {
      var tmp0_apply = new MsdfUiShader();
      {
      }
      {
        tmp0_apply.t41(font.y4o_1.t4o_1);
      }
      tmp$ret$0 = tmp0_apply;
    }
    var shader = tmp$ret$0;
    return new TextMesh(shader);
  };
  Companion_29.prototype.e4p = function (font, ctx) {
    var tmp$ret$0;
    {
      var tmp0_apply = new Ui2Shader();
      {
      }
      {
        tmp0_apply.s4f(font, ctx);
      }
      tmp$ret$0 = tmp0_apply;
    }
    var shader = tmp$ret$0;
    return new TextMesh(shader);
  };
  Companion_29.$metadata$ = objectMeta('Companion');
  var Companion_instance_29;
  function Companion_getInstance_29() {
    if (Companion_instance_29 == null)
      new Companion_29();
    return Companion_instance_29;
  }
  function getMsdfTextBuilder($this, font) {
    var tmp$ret$2;
    {
      var tmp0_getOrPut = $this.q4h_1;
      var tmp1_getOrPut = font.y4o_1;
      var value = tmp0_getOrPut.b3(tmp1_getOrPut);
      var tmp;
      if (value == null) {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            var tmp0_also = Companion_getInstance_29().s4o(font);
            {
            }
            {
              $this.e4q(tmp0_also.f4p_1);
            }
            tmp$ret$0 = tmp0_also;
          }
          tmp$ret$1 = tmp$ret$0;
        }
        var answer = tmp$ret$1;
        tmp0_getOrPut.a(tmp1_getOrPut, answer);
        tmp = answer;
      } else {
        tmp = value;
      }
      tmp$ret$2 = tmp;
    }
    var textMesh = tmp$ret$2;
    {
      var tmp2_set = $this.r4h_1;
      tmp2_set.a(font, textMesh);
    }
    textMesh.h4p_1 = true;
    return textMesh.g4p_1;
  }
  function getAtlasTextBuilder($this, font, ctx) {
    var tmp$ret$2;
    {
      var tmp0_getOrPut = $this.r4h_1;
      var value = tmp0_getOrPut.b3(font);
      var tmp;
      if (value == null) {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            var tmp0_also = Companion_getInstance_29().e4p(font, ctx);
            {
            }
            {
              $this.e4q(tmp0_also.f4p_1);
            }
            tmp$ret$0 = tmp0_also;
          }
          tmp$ret$1 = tmp$ret$0;
        }
        var answer = tmp$ret$1;
        tmp0_getOrPut.a(font, answer);
        tmp = answer;
      } else {
        tmp = value;
      }
      tmp$ret$2 = tmp;
    }
    var textMesh = tmp$ret$2;
    textMesh.h4p_1 = true;
    return textMesh.g4p_1;
  }
  function UiSurface$Companion$hasPointerListener$lambda() {
    return function (it) {
      return it.s3t().i49();
    };
  }
  function updateUi($this, updateEvent) {
    var pt = new PerfTimer();
    $this.b43_1 = 0;
    {
      var tmp0_forEach = $this.z42_1;
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          element.j3s($this);
        }
      }
    }
    $this.z42_1.t7();
    {
      var tmp1_forEach = $this.r42_1.d3();
      var tmp0_iterator_0 = tmp1_forEach.h();
      while (tmp0_iterator_0.n()) {
        var element_0 = tmp0_iterator_0.o();
        {
          element_0.t7();
          $this.i4q(element_0);
        }
      }
    }
    $this.s42_1.t7();
    $this.c43_1.t7();
    UiScale_getInstance().f4l($this);
    var tmp = $this;
    var tmp$ret$0;
    {
      var tmp2_also = pt.k4q();
      {
      }
      {
        pt.l4q();
      }
      tmp$ret$0 = tmp2_also;
    }
    tmp.k43_1 = tmp$ret$0;
    $this.w42_1.g3v(0.0, 0.0, $this.u42_1.g3s($this), $this.v42_1.g3s($this));
    $this.w42_1.o3v();
    composeContent($this);
    var tmp_0 = $this;
    var tmp$ret$1;
    {
      var tmp3_also = pt.k4q();
      {
      }
      {
        pt.l4q();
      }
      tmp$ret$1 = tmp3_also;
    }
    tmp_0.l43_1 = tmp$ret$1;
    $this.m4q($this.w42_1, updateEvent.x4n_1);
    var tmp_1 = $this;
    var tmp$ret$2;
    {
      var tmp4_also = pt.k4q();
      {
      }
      {
        pt.l4q();
      }
      tmp$ret$2 = tmp4_also;
    }
    tmp_1.m43_1 = tmp$ret$2;
    $this.n4q($this.w42_1, updateEvent.x4n_1);
    var tmp_2 = $this;
    var tmp$ret$3;
    {
      var tmp5_also = pt.k4q();
      {
      }
      {
        pt.l4q();
      }
      tmp$ret$3 = tmp5_also;
    }
    tmp_2.n43_1 = tmp$ret$3;
    $this.o4q($this.w42_1, updateEvent.x4n_1);
    {
      var tmp6_forEach = $this.r42_1.d3();
      var tmp0_iterator_1 = tmp6_forEach.h();
      while (tmp0_iterator_1.n()) {
        var element_1 = tmp0_iterator_1.o();
        {
          if (element_1.x4h_1) {
            $this.p4q(element_1);
          }
        }
      }
    }
    var tmp_3 = $this;
    var tmp$ret$4;
    {
      var tmp7_also = pt.k4q();
      {
      }
      {
        pt.l4q();
      }
      tmp$ret$4 = tmp7_also;
    }
    tmp_3.o43_1 = tmp$ret$4;
    if ($this.j43_1) {
      var tmp$ret$8;
      {
        var tmp$ret$7;
        {
          var tmp10_dExt = Log_getInstance();
          var tmp$ret$6;
          {
            var tmp9_logExt = Level_DEBUG_getInstance();
            var tmp8_log = getKClassFromExpression($this).ei();
            var tmp_4;
            if (tmp9_logExt.e1w_1 >= tmp10_dExt.y1v_1.e1w_1) {
              var tmp_5 = tmp10_dExt.z1v_1;
              var tmp$ret$5;
              {
                tmp$ret$5 = 'UI update: prep: ' + numberToInt($this.k43_1 * 1000) + ' us, ' + ('compose: ' + numberToInt($this.l43_1 * 1000) + ' us, ') + ('measure: ' + numberToInt($this.m43_1 * 1000) + ' us, ') + ('layout: ' + numberToInt($this.n43_1 * 1000) + ' us, ') + ('render: ' + numberToInt($this.n43_1 * 1000) + ' us');
              }
              tmp_4 = tmp_5(tmp9_logExt, tmp8_log, tmp$ret$5);
            }
            tmp$ret$6 = tmp_4;
          }
          tmp$ret$7 = tmp$ret$6;
        }
        tmp$ret$8 = tmp$ret$7;
      }
    }
  }
  function composeContent($this) {
    var tmp$ret$1;
    {
      var tmp0_with = $this.w42_1;
      {
      }
      var tmp$ret$0;
      {
        tmp0_with.k3s($this.y42_1);
        tmp0_with.k3s($this.x42_1);
        var tmp0_safe_receiver = $this.h43_1;
        tmp$ret$0 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver(tmp0_with);
      }
      tmp$ret$1 = tmp$ret$0;
    }
  }
  function InputCaptureMode(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  InputCaptureMode.$metadata$ = classMeta('InputCaptureMode', undefined, undefined, undefined, undefined, Enum.prototype);
  function UiInputHandler($outer) {
    this.k4o_1 = $outer;
    var tmp0_elvis_lhs = $outer.il();
    InputHandler.call(this, tmp0_elvis_lhs == null ? 'UiSurface' : tmp0_elvis_lhs);
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.e4o_1 = tmp$ret$0;
    this.f4o_1 = null;
    this.g4o_1 = null;
    this.h4o_1 = false;
    this.i4o_1 = null;
    var tmp_0 = this;
    var tmp_1 = UiSurface$UiInputHandler$nodeComparator$lambda();
    tmp_0.j4o_1 = new sam$kotlin_Comparator$0(tmp_1);
  }
  UiInputHandler.prototype.q4q = function (focusable) {
    if (!equals(focusable, this.f4o_1)) {
      var tmp0_safe_receiver = this.f4o_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        tmp0_safe_receiver.e41();
      }
      this.f4o_1 = focusable;
      var tmp1_safe_receiver = focusable;
      if (tmp1_safe_receiver == null)
        null;
      else {
        tmp1_safe_receiver.d41();
      }
    }
  };
  UiInputHandler.prototype.r4q = function (ctx) {
    if (this.k4o_1.i43_1.equals(InputCaptureMode_CaptureDisabled_getInstance())) {
      InputStack_getInstance().s4q(this);
      return Unit_getInstance();
    }
    this.y4q(!(this.f4o_1 == null));
    var wasBlockingPointerInput = this.z4q();
    this.a4r(false);
    var ptr = ctx.r2d().w2a_1.z22_1;
    if (ptr.h20_1) {
      var ptrPos = new Vec2f(ptr.x1z_1, ptr.y1z_1);
      var tmp;
      if (!(this.i4o_1 == null)) {
        tmp = true;
      } else {
        var tmp$ret$0;
        $l$block_0: {
          var tmp0_any = this.k4o_1.w42_1.k3u();
          var tmp_0;
          if (isInterface(tmp0_any, Collection)) {
            tmp_0 = tmp0_any.q();
          } else {
            tmp_0 = false;
          }
          if (tmp_0) {
            tmp$ret$0 = false;
            break $l$block_0;
          }
          var tmp0_iterator = tmp0_any.h();
          while (tmp0_iterator.n()) {
            var element = tmp0_iterator.o();
            var tmp$ret$1;
            {
              tmp$ret$1 = element.e3v(ptrPos);
            }
            if (tmp$ret$1) {
              tmp$ret$0 = true;
              break $l$block_0;
            }
          }
          tmp$ret$0 = false;
        }
        tmp = tmp$ret$0;
      }
      var isPointerOnSurface = tmp;
      if (this.i4o_1 == null ? this.k4o_1.i43_1.equals(InputCaptureMode_CaptureOverBackground_getInstance()) : false) {
        this.e4o_1.t7();
        var tmp_1 = ptr.x1z_1;
        var tmp_2 = ptr.y1z_1;
        collectNodesAt(this.k4o_1.w42_1, this, tmp_1, tmp_2, this.e4o_1, UiSurface$UiInputHandler$checkInputHandler$lambda());
        var tmp$ret$2;
        {
          var tmp1_isNotEmpty = this.e4o_1;
          tmp$ret$2 = !tmp1_isNotEmpty.q();
        }
        isPointerOnSurface = tmp$ret$2;
      }
      if (isPointerOnSurface ? wasBlockingPointerInput ? true : !ptr.m24() : false) {
        this.a4r(true);
      }
    }
    if (this.z4q() ? true : this.c4r()) {
      InputStack_getInstance().b4r(this);
    } else {
      InputStack_getInstance().s4q(this);
    }
  };
  UiInputHandler.prototype.d4r = function (pointerState, ctx) {
    InputHandler.prototype.d4r.call(this, pointerState, ctx);
    var ptr = pointerState.z22_1;
    this.e4o_1.t7();
    if (!ctx.r2d().x2a().equals(CursorMode_LOCKED_getInstance())) {
      collectNodesAt(this.k4o_1.w42_1, this, ptr.x1z_1, ptr.y1z_1, this.e4o_1, Companion_getInstance_30().r4o_1);
    }
    if ((this.g4o_1 == null ? this.i4o_1 == null : false) ? this.e4o_1.q() : false) {
      return Unit_getInstance();
    }
    var ptrEv = new PointerEvent(ptr, ctx);
    if (this.i4o_1 == null) {
      var tmp0_safe_receiver = this.g4o_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$0;
        {
          {
          }
          tmp$ret$0 = handleHover(this, tmp0_safe_receiver, ptrEv);
        }
      }
    }
    var tmp$ret$1;
    {
      var tmp0_isNotEmpty = this.e4o_1;
      tmp$ret$1 = !tmp0_isNotEmpty.q();
    }
    if (tmp$ret$1) {
      this.e4r(this.e4o_1, ptrEv);
    }
    var tmp1_safe_receiver = this.i4o_1;
    if (tmp1_safe_receiver == null)
      null;
    else {
      var tmp$ret$2;
      {
        {
        }
        tmp$ret$2 = handleDrag(this, tmp1_safe_receiver, ptrEv);
      }
    }
  };
  UiInputHandler.prototype.f4r = function (keyEvents, ctx) {
    InputHandler.prototype.f4r.call(this, keyEvents, ctx);
    var tmp$ret$0;
    {
      tmp$ret$0 = !keyEvents.q();
    }
    if (tmp$ret$0) {
      var tmp0_safe_receiver = this.f4o_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$1;
        {
          {
          }
          this.k4o_1.d43_1 = Time_getInstance().z20_1;
          var tmp0_iterator = keyEvents.h();
          while (tmp0_iterator.n()) {
            var keyEv = tmp0_iterator.o();
            tmp0_safe_receiver.f41(keyEv);
          }
          tmp$ret$1 = Unit_getInstance();
        }
      }
    }
  };
  UiInputHandler.prototype.e4r = function (relevantNodes, ptrEv) {
    var ptr = ptrEv.z4e_1;
    var isWheelX = !(ptr.e20_1 === 0.0);
    var isWheelY = !(ptr.d20_1 === 0.0);
    var isDragStart = !this.h4o_1 ? ptr.m24() : false;
    var isAnyClick = (((ptr.o20_1 ? true : ptr.p20_1) ? true : ptr.q20_1) ? true : ptr.s20_1) ? true : ptr.r20_1;
    this.h4o_1 = ptr.m24();
    {
      var tmp0_iterator = relevantNodes.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          var mod = element.s3t();
          var tmp = mod.w48();
          invokePointerCallback$default(this, element, ptrEv, tmp, false, 16, null);
          var tmp_0;
          if (this.i4o_1 == null ? mod.j49() : false) {
            var tmp0_safe_receiver = this.g4o_1;
            var tmp_1;
            if (tmp0_safe_receiver == null) {
              tmp_1 = null;
            } else {
              var tmp$ret$1;
              {
                {
                }
                var tmp$ret$0;
                {
                  tmp$ret$0 = this.j4o_1.compare(element, tmp0_safe_receiver) < 0;
                }
                tmp$ret$1 = tmp$ret$0;
              }
              tmp_1 = tmp$ret$1;
            }
            tmp_0 = !(tmp_1 === false);
          } else {
            tmp_0 = false;
          }
          if (tmp_0) {
            var tmp1_safe_receiver = this.g4o_1;
            if (tmp1_safe_receiver == null)
              null;
            else {
              var tmp$ret$3;
              {
                {
                }
                var tmp$ret$2;
                {
                  var tmp_2 = tmp1_safe_receiver.s3t().b49();
                  tmp$ret$2 = invokePointerCallback$default(this, tmp1_safe_receiver, ptrEv, tmp_2, false, 16, null);
                }
                tmp$ret$3 = tmp$ret$2;
              }
            }
            if (invokePointerCallback(this, element, ptrEv, mod.a49(), true)) {
              this.g4o_1 = element;
            }
          }
          if (((isDragStart ? this.i4o_1 == null : false) ? mod.k49() : false) ? invokePointerCallback(this, element, ptrEv, mod.d49(), true) : false) {
            this.i4o_1 = element;
            this.k4o_1.d43_1 = Time_getInstance().z20_1;
            if (!equals(element, this.f4o_1)) {
              this.q4q(null);
            }
          }
          var tmp_3;
          if (isAnyClick) {
            var tmp_4 = mod.x48();
            tmp_3 = invokePointerCallback$default(this, element, ptrEv, tmp_4, false, 16, null);
          } else {
            tmp_3 = false;
          }
          if (tmp_3) {
            ptrEv.z4e_1.o24(0, 1, null);
            isAnyClick = false;
            this.k4o_1.d43_1 = Time_getInstance().z20_1;
            if (!equals(element, this.f4o_1)) {
              this.q4q(null);
            }
          }
          var tmp_5;
          if (isWheelX) {
            var tmp_6 = mod.y48();
            tmp_5 = invokePointerCallback$default(this, element, ptrEv, tmp_6, false, 16, null);
          } else {
            tmp_5 = false;
          }
          if (tmp_5) {
            Companion_getInstance_0();
            ptrEv.z4e_1.n24(32);
            isWheelX = false;
          }
          var tmp_7;
          if (isWheelY) {
            var tmp_8 = mod.z48();
            tmp_7 = invokePointerCallback$default(this, element, ptrEv, tmp_8, false, 16, null);
          } else {
            tmp_7 = false;
          }
          if (tmp_7) {
            Companion_getInstance_0();
            ptrEv.z4e_1.n24(64);
            isWheelY = false;
          }
        }
      }
    }
  };
  UiInputHandler.prototype.l4o = function (_this__u8e3s4, x, y) {
    var tmp;
    var containsLower = _this__u8e3s4.p3u();
    if (x <= _this__u8e3s4.r3u() ? containsLower <= x : false) {
      var containsLower_0 = _this__u8e3s4.q3u();
      tmp = y <= _this__u8e3s4.s3u() ? containsLower_0 <= y : false;
    } else {
      tmp = false;
    }
    return tmp;
  };
  UiInputHandler.$metadata$ = classMeta('UiInputHandler', undefined, undefined, undefined, undefined, InputHandler.prototype);
  function TextMesh(shader) {
    Companion_getInstance_29();
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_mesh = Companion_getInstance_22().k3y_1;
      var mesh = new Mesh(new IndexedVertexList(tmp0_mesh), null);
      {
        mesh.e4k(shader);
      }
      tmp$ret$0 = mesh;
    }
    tmp.f4p_1 = tmp$ret$0;
    this.g4p_1 = new MeshBuilder(this.f4p_1.e2r_1);
    this.h4p_1 = false;
    Companion_getInstance_30().g4r(this.g4p_1);
  }
  TextMesh.prototype.h4r = function () {
    return this.f4p_1;
  };
  TextMesh.prototype.t7 = function () {
    this.g4p_1.t7();
    this.h4p_1 = false;
  };
  TextMesh.$metadata$ = classMeta('TextMesh');
  function MeshLayer($outer) {
    this.y4h_1 = $outer;
    Group_init_$Init$(null, 1, null, this);
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$();
    }
    tmp.q4h_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = LinkedHashMap_init_$Create$();
    }
    tmp_0.r4h_1 = tmp$ret$1;
    var tmp_1 = this;
    var tmp$ret$2;
    {
      tmp$ret$2 = LinkedHashMap_init_$Create$();
    }
    tmp_1.s4h_1 = tmp$ret$2;
    var tmp_2 = this;
    var tmp$ret$3;
    {
      tmp$ret$3 = LinkedHashMap_init_$Create$();
    }
    tmp_2.t4h_1 = tmp$ret$3;
    var tmp_3 = this;
    var tmp$ret$4;
    {
      var tmp0_mesh = Companion_getInstance_26().o3w_1;
      var mesh = new Mesh(new IndexedVertexList(tmp0_mesh), null);
      {
        mesh.e4k(new Ui2Shader());
      }
      tmp$ret$4 = mesh;
    }
    tmp_3.u4h_1 = tmp$ret$4;
    this.v4h_1 = new UiPrimitiveMesh();
    var tmp_4 = this;
    var tmp$ret$5;
    {
      var tmp0_apply = new MeshBuilder(this.u4h_1.e2r_1);
      {
      }
      {
        tmp0_apply.g3w_1 = true;
      }
      tmp$ret$5 = tmp0_apply;
    }
    tmp_4.w4h_1 = tmp$ret$5;
    this.x4h_1 = false;
    this.p4q(this.v4h_1);
    this.p4q(this.u4h_1);
  }
  MeshLayer.prototype.i4r = function () {
    return this.x4h_1;
  };
  MeshLayer.prototype.a4i = function (font, ctx) {
    var tmp0_safe_receiver = this.r4h_1.b3(font);
    var tmp2_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.g4p_1;
    var tmp;
    if (tmp2_elvis_lhs == null) {
      var tmp1_subject = font;
      var tmp_0;
      if (tmp1_subject instanceof MsdfFont) {
        tmp_0 = getMsdfTextBuilder(this, font);
      } else {
        if (tmp1_subject instanceof AtlasFont) {
          tmp_0 = getAtlasTextBuilder(this, font, ctx);
        } else {
          noWhenBranchMatchedException();
        }
      }
      tmp = tmp_0;
    } else {
      tmp = tmp2_elvis_lhs;
    }
    return tmp;
  };
  MeshLayer.prototype.t7 = function () {
    this.x4h_1 = false;
    {
      var tmp0_forEach = this.r4h_1.d3();
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          element.t7();
        }
      }
    }
    var tmp0_safe_receiver = this.v4h_1.i4k();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.t7();
    }
    this.w4h_1.t7();
    var tmp$ret$0;
    {
      var tmp1_isNotEmpty = this.s4h_1;
      tmp$ret$0 = !tmp1_isNotEmpty.q();
    }
    if (tmp$ret$0) {
      {
        var tmp2_forEach = this.s4h_1.d3();
        var tmp0_iterator_0 = tmp2_forEach.h();
        while (tmp0_iterator_0.n()) {
          var element_0 = tmp0_iterator_0.o();
          {
            var tmp0_this = this;
            {
              var tmp0_minusAssign = tmp0_this.j4r();
              var tmp1_minusAssign = toSet(element_0.k4r_1);
              removeAll_0(tmp0_minusAssign, tmp1_minusAssign);
            }
            element_0.t7();
          }
        }
      }
    }
    var tmp$ret$1;
    {
      var tmp3_isNotEmpty = this.t4h_1;
      tmp$ret$1 = !tmp3_isNotEmpty.q();
    }
    if (tmp$ret$1) {
      {
        var tmp4_forEach = this.t4h_1.d3();
        var tmp0_iterator_1 = tmp4_forEach.h();
        while (tmp0_iterator_1.n()) {
          var element_1 = tmp0_iterator_1.o();
          {
            element_1.t7();
            this.i4q(element_1.m4r_1);
          }
        }
      }
    }
  };
  MeshLayer.prototype.l4k = function (ctx) {
    Group.prototype.l4k.call(this, ctx);
    {
      var tmp0_forEach = this.s4h_1.d3();
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          {
            var tmp0_forEach_0 = element.k4r_1;
            var tmp0_iterator_0 = tmp0_forEach_0.h();
            while (tmp0_iterator_0.n()) {
              var element_0 = tmp0_iterator_0.o();
              {
                element_0.l4k(ctx);
              }
            }
          }
        }
      }
    }
  };
  MeshLayer.$metadata$ = classMeta('MeshLayer', undefined, undefined, undefined, undefined, Group.prototype);
  function Companion_30() {
    Companion_instance_30 = this;
    this.n4o_1 = 0;
    this.o4o_1 = -100;
    this.p4o_1 = 100;
    this.q4o_1 = 1000;
    var tmp = this;
    tmp.r4o_1 = UiSurface$Companion$hasPointerListener$lambda();
  }
  Companion_30.prototype.v4r = function () {
    return this.o4o_1;
  };
  Companion_30.prototype.g4r = function (_this__u8e3s4) {
    _this__u8e3s4.g3w_1 = true;
  };
  Companion_30.$metadata$ = objectMeta('Companion');
  var Companion_instance_30;
  function Companion_getInstance_30() {
    if (Companion_instance_30 == null)
      new Companion_30();
    return Companion_instance_30;
  }
  function UiSurface$lambda(this$0) {
    return function (it) {
      UiScale_getInstance().v40_1.m1e(it.x4n_1.p2b_1);
      this$0.u42_1.m1e(it.w4n_1.j4l_1.u4n_1);
      this$0.v42_1.m1e(it.w4n_1.j4l_1.v3z());
      var inductionVariable = 0;
      var last = this$0.s42_1.m() - 1 | 0;
      var tmp;
      if (inductionVariable <= last) {
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          this$0.s42_1.r(i)(it.x4n_1);
        }
         while (inductionVariable <= last);
        tmp = Unit_getInstance();
      }
      this$0.t42_1.r4q(it.x4n_1);
      var tmp_0;
      if (this$0.a43_1) {
        this$0.a43_1 = false;
        tmp_0 = updateUi(this$0, it);
      }
      return Unit_getInstance();
    };
  }
  function UiSurface$lambda_0(this$0) {
    return function (it) {
      InputStack_getInstance().s4q(this$0.t42_1);
      return Unit_getInstance();
    };
  }
  function InputCaptureMode_CaptureInsideBounds_getInstance() {
    InputCaptureMode_initEntries();
    return InputCaptureMode_CaptureInsideBounds_instance;
  }
  function InputCaptureMode_CaptureOverBackground_getInstance() {
    InputCaptureMode_initEntries();
    return InputCaptureMode_CaptureOverBackground_instance;
  }
  function InputCaptureMode_CaptureDisabled_getInstance() {
    InputCaptureMode_initEntries();
    return InputCaptureMode_CaptureDisabled_instance;
  }
  function UiSurface(colors, sizes, name) {
    Companion_getInstance_30();
    Group.call(this, name);
    this.r42_1 = new TreeMap();
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.s42_1 = tmp$ret$0;
    this.t42_1 = new UiInputHandler(this);
    this.u42_1 = mutableStateOf(0.0);
    this.v42_1 = mutableStateOf(0.0);
    var tmp_0 = this;
    var tmp$ret$1;
    {
      var tmp0_apply = new BoxNode(null, this);
      {
      }
      {
        layout(tmp0_apply.s3t(), CellLayout_getInstance());
      }
      tmp$ret$1 = tmp0_apply;
    }
    tmp_0.w42_1 = tmp$ret$1;
    this.x42_1 = mutableStateOf(colors);
    this.y42_1 = mutableStateOf(sizes);
    var tmp_1 = this;
    var tmp$ret$2;
    {
      tmp$ret$2 = ArrayList_init_$Create$_0();
    }
    tmp_1.z42_1 = tmp$ret$2;
    this.a43_1 = true;
    this.b43_1 = 0;
    var tmp_2 = this;
    var tmp$ret$3;
    {
      tmp$ret$3 = ArrayList_init_$Create$_0();
    }
    tmp_2.c43_1 = tmp$ret$3;
    this.d43_1 = 0.0;
    this.e43_1 = null;
    this.f43_1 = value$factory(this.x42_1);
    this.g43_1 = value$factory_0(this.y42_1);
    this.h43_1 = null;
    this.i43_1 = InputCaptureMode_CaptureInsideBounds_getInstance();
    this.j43_1 = false;
    this.k43_1 = 0.0;
    this.l43_1 = 0.0;
    this.m43_1 = 0.0;
    this.n43_1 = 0.0;
    this.o43_1 = 0.0;
    this.t2h(1.0, -1.0, 1.0);
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.n4k();
      tmp0_plusAssign.b(UiSurface$lambda(this));
    }
    var tmp1_this = this;
    {
      var tmp1_plusAssign = tmp1_this.w4r();
      tmp1_plusAssign.b(UiSurface$lambda_0(this));
    }
  }
  UiSurface.prototype.x4r = function (_set____db54di) {
    this.d43_1 = _set____db54di;
  };
  UiSurface.prototype.y4r = function (_set____db54di) {
    var tmp0_setValue = colors$factory();
    return this.f43_1.set(_set____db54di);
  };
  UiSurface.prototype.g45 = function () {
    var tmp$ret$0;
    {
      var tmp0_getValue = colors$factory_0();
      tmp$ret$0 = this.f43_1.get();
    }
    return tmp$ret$0;
  };
  UiSurface.prototype.z4r = function (_set____db54di) {
    var tmp0_setValue = sizes$factory();
    return this.g43_1.set(_set____db54di);
  };
  UiSurface.prototype.f45 = function () {
    var tmp$ret$0;
    {
      var tmp0_getValue = sizes$factory_0();
      tmp$ret$0 = this.g43_1.get();
    }
    return tmp$ret$0;
  };
  UiSurface.prototype.q10 = function () {
    return this.h43_1;
  };
  UiSurface.prototype.a4s = function () {
    return this.k43_1;
  };
  UiSurface.prototype.b4s = function () {
    return this.l43_1;
  };
  UiSurface.prototype.c4s = function () {
    return this.m43_1;
  };
  UiSurface.prototype.d4s = function () {
    return this.n43_1;
  };
  UiSurface.prototype.q43 = function (state) {
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.z42_1;
      tmp0_plusAssign.b(state);
    }
  };
  UiSurface.prototype.p43 = function () {
    this.a43_1 = true;
  };
  UiSurface.prototype.z4h = function (layer) {
    var tmp0_elvis_lhs = this.r42_1.b3(layer);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$0;
      {
        var tmp0_also = new MeshLayer(this);
        {
        }
        {
          {
            var tmp0_set = this.r42_1;
            tmp0_set.a(layer, tmp0_also);
          }
        }
        tmp$ret$0 = tmp0_also;
      }
      tmp = tmp$ret$0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var meshLayer = tmp;
    meshLayer.x4h_1 = true;
    return meshLayer;
  };
  UiSurface.prototype.v49 = function (font, ctx) {
    font.e4s(UiScale_getInstance().w40_1, ctx);
  };
  UiSurface.prototype.m4q = function (node, ctx) {
    var inductionVariable = 0;
    var last = node.k3u().m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.m4q(node.k3u().r(i), ctx);
      }
       while (inductionVariable <= last);
    node.m3v(ctx);
  };
  UiSurface.prototype.n4q = function (node, ctx) {
    node.n3v(ctx);
    if (isInterface(node, Focusable)) {
      var tmp0_this = this;
      {
        var tmp0_plusAssign = tmp0_this.c43_1;
        var tmp1_plusAssign = node;
        tmp0_plusAssign.b(tmp1_plusAssign);
      }
    }
    var inductionVariable = 0;
    var last = node.k3u().m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (node.k3u().r(i).t3u()) {
          this.n4q(node.k3u().r(i), ctx);
        }
      }
       while (inductionVariable <= last);
  };
  UiSurface.prototype.o4q = function (node, ctx) {
    node.l3v(ctx);
    var inductionVariable = 0;
    var last = node.k3u().m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (node.k3u().r(i).t3u()) {
          this.o4q(node.k3u().r(i), ctx);
        }
      }
       while (inductionVariable <= last);
  };
  UiSurface.$metadata$ = classMeta('UiSurface', undefined, undefined, undefined, undefined, Group.prototype);
  function value$factory($b0) {
    return getPropertyCallableRef('value', 0, KMutableProperty0, function () {
      return $b0.b3s_1;
    }, function (value) {
      return $b0.n2u(value);
    });
  }
  function value$factory_0($b0) {
    return getPropertyCallableRef('value', 0, KMutableProperty0, function () {
      return $b0.b3s_1;
    }, function (value) {
      return $b0.n2u(value);
    });
  }
  function colors$factory() {
    return getPropertyCallableRef('colors', 1, KMutableProperty1, function (receiver) {
      return receiver.g45();
    }, function (receiver, value) {
      return receiver.y4r(value);
    });
  }
  function colors$factory_0() {
    return getPropertyCallableRef('colors', 1, KMutableProperty1, function (receiver) {
      return receiver.g45();
    }, function (receiver, value) {
      return receiver.y4r(value);
    });
  }
  function sizes$factory() {
    return getPropertyCallableRef('sizes', 1, KMutableProperty1, function (receiver) {
      return receiver.f45();
    }, function (receiver, value) {
      return receiver.z4r(value);
    });
  }
  function sizes$factory_0() {
    return getPropertyCallableRef('sizes', 1, KMutableProperty1, function (receiver) {
      return receiver.f45();
    }, function (receiver, value) {
      return receiver.z4r(value);
    });
  }
  function WeakMemory() {
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.s4g_1 = tmp$ret$0;
  }
  WeakMemory.prototype.t4g = function () {
    var tmp$ret$0;
    {
      var tmp0_isNotEmpty = this.s4g_1;
      tmp$ret$0 = !tmp0_isNotEmpty.q();
    }
    if (tmp$ret$0) {
      {
        var tmp1_forEach = this.s4g_1;
        var tmp0_iterator = tmp1_forEach.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          {
            element.t4g();
          }
        }
      }
    }
  };
  WeakMemory.$metadata$ = classMeta('WeakMemory');
  function Companion_31() {
    Companion_instance_31 = this;
    this.n2z_1 = new Attribute('attrib_positions', GlslType_VEC_3F_getInstance());
    this.o2z_1 = new Attribute('attrib_normals', GlslType_VEC_3F_getInstance());
    this.p2z_1 = new Attribute('attrib_tangents', GlslType_VEC_4F_getInstance());
    this.q2z_1 = new Attribute('attrib_texture_coords', GlslType_VEC_2F_getInstance());
    this.r2z_1 = new Attribute('attrib_colors', GlslType_VEC_4F_getInstance());
    this.s2z_1 = new Attribute('attrib_joints', GlslType_VEC_4I_getInstance());
    this.t2z_1 = new Attribute('attrib_weights', GlslType_VEC_4F_getInstance());
    this.u2z_1 = new Attribute('attrib_emissive_color', GlslType_VEC_3F_getInstance());
    this.v2z_1 = new Attribute('attrib_metal_rough', GlslType_VEC_2F_getInstance());
    this.w2z_1 = new Attribute('attrib_model_mat', GlslType_MAT_4F_getInstance());
    this.x2z_1 = new Attribute('attrib_instance_color', GlslType_VEC_4F_getInstance());
  }
  Companion_31.prototype.i4s = function () {
    return this.n2z_1;
  };
  Companion_31.prototype.j4s = function () {
    return this.q2z_1;
  };
  Companion_31.$metadata$ = objectMeta('Companion');
  var Companion_instance_31;
  function Companion_getInstance_31() {
    if (Companion_instance_31 == null)
      new Companion_31();
    return Companion_instance_31;
  }
  function Attribute(name, type) {
    Companion_getInstance_31();
    this.x2s_1 = name;
    this.y2s_1 = type;
    this.z2s_1 = new PlatformAttributeProps(this);
  }
  Attribute.prototype.il = function () {
    return this.x2s_1;
  };
  Attribute.prototype.k4s = function () {
    return this.y2s_1;
  };
  Attribute.prototype.l4s = function () {
    return this.z2s_1;
  };
  Attribute.prototype.toString = function () {
    return this.x2s_1;
  };
  Attribute.prototype.hashCode = function () {
    var result = getStringHashCode(this.x2s_1);
    result = imul(result, 31) + this.y2s_1.hashCode() | 0;
    return result;
  };
  Attribute.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Attribute))
      return false;
    var tmp0_other_with_cast = other instanceof Attribute ? other : THROW_CCE();
    if (!(this.x2s_1 === tmp0_other_with_cast.x2s_1))
      return false;
    if (!this.y2s_1.equals(tmp0_other_with_cast.y2s_1))
      return false;
    return true;
  };
  Attribute.$metadata$ = classMeta('Attribute');
  var GlslType_FLOAT_instance;
  var GlslType_VEC_2F_instance;
  var GlslType_VEC_3F_instance;
  var GlslType_VEC_4F_instance;
  var GlslType_INT_instance;
  var GlslType_VEC_2I_instance;
  var GlslType_VEC_3I_instance;
  var GlslType_VEC_4I_instance;
  var GlslType_MAT_2F_instance;
  var GlslType_MAT_3F_instance;
  var GlslType_MAT_4F_instance;
  var GlslType_entriesInitialized;
  function GlslType_initEntries() {
    if (GlslType_entriesInitialized)
      return Unit_getInstance();
    GlslType_entriesInitialized = true;
    GlslType_FLOAT_instance = new GlslType('FLOAT', 0, 4, false, 'float');
    GlslType_VEC_2F_instance = new GlslType('VEC_2F', 1, 8, false, 'vec2');
    GlslType_VEC_3F_instance = new GlslType('VEC_3F', 2, 12, false, 'vec3');
    GlslType_VEC_4F_instance = new GlslType('VEC_4F', 3, 16, false, 'vec4');
    GlslType_INT_instance = new GlslType('INT', 4, 4, true, 'int');
    GlslType_VEC_2I_instance = new GlslType('VEC_2I', 5, 8, true, 'ivec2');
    GlslType_VEC_3I_instance = new GlslType('VEC_3I', 6, 12, true, 'ivec3');
    GlslType_VEC_4I_instance = new GlslType('VEC_4I', 7, 16, true, 'ivec4');
    GlslType_MAT_2F_instance = new GlslType('MAT_2F', 8, 16, false, 'mat2');
    GlslType_MAT_3F_instance = new GlslType('MAT_3F', 9, 36, false, 'mat3');
    GlslType_MAT_4F_instance = new GlslType('MAT_4F', 10, 64, false, 'mat4');
  }
  function GlslType(name, ordinal, byteSize, isInt, glslType) {
    Enum.call(this, name, ordinal);
    this.f2t_1 = byteSize;
    this.g2t_1 = isInt;
    this.h2t_1 = glslType;
  }
  GlslType.prototype.m4s = function () {
    return this.g2t_1;
  };
  GlslType.$metadata$ = classMeta('GlslType', undefined, undefined, undefined, undefined, Enum.prototype);
  function GlslType_VEC_2F_getInstance() {
    GlslType_initEntries();
    return GlslType_VEC_2F_instance;
  }
  function GlslType_VEC_3F_getInstance() {
    GlslType_initEntries();
    return GlslType_VEC_3F_instance;
  }
  function GlslType_VEC_4F_getInstance() {
    GlslType_initEntries();
    return GlslType_VEC_4F_instance;
  }
  function GlslType_VEC_4I_getInstance() {
    GlslType_initEntries();
    return GlslType_VEC_4I_instance;
  }
  function GlslType_MAT_2F_getInstance() {
    GlslType_initEntries();
    return GlslType_MAT_2F_instance;
  }
  function GlslType_MAT_3F_getInstance() {
    GlslType_initEntries();
    return GlslType_MAT_3F_instance;
  }
  function GlslType_MAT_4F_getInstance() {
    GlslType_initEntries();
    return GlslType_MAT_4F_instance;
  }
  function Companion_32() {
    Companion_instance_32 = this;
  }
  Companion_32.prototype.n4s = function (u) {
    var tmp0_subject = u;
    var tmp;
    if (tmp0_subject instanceof Uniform1f) {
      tmp = 4;
    } else {
      if (tmp0_subject instanceof Uniform2f) {
        tmp = 8;
      } else {
        if (tmp0_subject instanceof Uniform3f) {
          tmp = 12;
        } else {
          if (tmp0_subject instanceof Uniform4f) {
            tmp = 16;
          } else {
            if (tmp0_subject instanceof UniformColor_0) {
              tmp = 16;
            } else {
              if (tmp0_subject instanceof Uniform1fv) {
                tmp = imul(16, u.m2u_1);
              } else {
                if (tmp0_subject instanceof Uniform3fv) {
                  tmp = imul(16, u.m2u_1);
                } else {
                  if (tmp0_subject instanceof Uniform2fv) {
                    tmp = imul(16, u.m2u_1);
                  } else {
                    if (tmp0_subject instanceof Uniform4fv) {
                      tmp = imul(16, u.m2u_1);
                    } else {
                      if (tmp0_subject instanceof Uniform1i) {
                        tmp = 4;
                      } else {
                        if (tmp0_subject instanceof Uniform2i) {
                          tmp = 8;
                        } else {
                          if (tmp0_subject instanceof Uniform3i) {
                            tmp = 12;
                          } else {
                            if (tmp0_subject instanceof Uniform4i) {
                              tmp = 16;
                            } else {
                              if (tmp0_subject instanceof Uniform1iv) {
                                tmp = imul(16, u.m2u_1);
                              } else {
                                if (tmp0_subject instanceof Uniform2iv) {
                                  tmp = imul(16, u.m2u_1);
                                } else {
                                  if (tmp0_subject instanceof Uniform3iv) {
                                    tmp = imul(16, u.m2u_1);
                                  } else {
                                    if (tmp0_subject instanceof Uniform4iv) {
                                      tmp = imul(16, u.m2u_1);
                                    } else {
                                      if (tmp0_subject instanceof UniformMat3f) {
                                        tmp = 48;
                                      } else {
                                        if (tmp0_subject instanceof UniformMat4f) {
                                          tmp = 64;
                                        } else {
                                          if (tmp0_subject instanceof UniformMat3fv) {
                                            tmp = imul(48, u.m2u_1);
                                          } else {
                                            if (tmp0_subject instanceof UniformMat4fv) {
                                              tmp = imul(64, u.m2u_1);
                                            } else {
                                              noWhenBranchMatchedException();
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return tmp;
  };
  Companion_32.$metadata$ = objectMeta('Companion');
  var Companion_instance_32;
  function Companion_getInstance_32() {
    if (Companion_instance_32 == null)
      new Companion_32();
    return Companion_instance_32;
  }
  function Std140BufferLayout(uniforms) {
    Companion_getInstance_32();
    BufferLayout.call(this, uniforms);
    var pos = 0;
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = uniforms.m();
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(tmp_1), null);
    }
    var tmp_2 = tmp$ret$0;
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$1;
      {
        var u = uniforms.r(tmp_3);
        var tmp0_subject = u;
        var tmp_4;
        if (tmp0_subject instanceof Uniform1f) {
          tmp_4 = 4;
        } else {
          if (tmp0_subject instanceof Uniform1i) {
            tmp_4 = 4;
          } else {
            if (tmp0_subject instanceof Uniform2f) {
              tmp_4 = 8;
            } else {
              if (tmp0_subject instanceof Uniform2i) {
                tmp_4 = 8;
              } else {
                tmp_4 = 16;
              }
            }
          }
        }
        var alignment = tmp_4;
        var bufPos = imul(((pos + alignment | 0) - 1 | 0) / alignment | 0, alignment);
        pos = bufPos + Companion_getInstance_32().n4s(u) | 0;
        tmp$ret$1 = new BufferPosition(bufPos, pos - bufPos | 0);
      }
      tmp_2[tmp_3] = tmp$ret$1;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp.p4s_1 = tmp_2;
    this.q4s_1 = pos;
  }
  Std140BufferLayout.prototype.r4s = function () {
    return this.p4s_1;
  };
  Std140BufferLayout.prototype.m = function () {
    return this.q4s_1;
  };
  Std140BufferLayout.$metadata$ = classMeta('Std140BufferLayout', undefined, undefined, undefined, undefined, BufferLayout.prototype);
  function BufferLayout(uniforms) {
    this.s4s_1 = uniforms;
  }
  BufferLayout.prototype.t4s = function (uniforms, target) {
    {
      var tmp0_check = uniforms.m() === this.r4s().length;
      {
      }
      if (!tmp0_check) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Supplied list of uniforms does not match this BufferLayout';
        }
        var message = tmp$ret$0;
        throw IllegalStateException_init_$Create$(toString(message));
      }
    }
    {
      var tmp1_check = target.b1w() >= this.m();
      {
      }
      if (!tmp1_check) {
        var tmp$ret$1;
        {
          tmp$ret$1 = 'Supplied target buffer is too small';
        }
        var message_0 = tmp$ret$1;
        throw IllegalStateException_init_$Create$(toString(message_0));
      }
    }
    var inductionVariable = 0;
    var last = uniforms.m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        target.w4s(this.r4s()[i].u4s_1);
        uniforms.r(i).x4s(target, this.r4s()[i].v4s_1);
      }
       while (inductionVariable <= last);
  };
  BufferLayout.$metadata$ = classMeta('BufferLayout');
  function BufferPosition(position, len) {
    this.u4s_1 = position;
    this.v4s_1 = len;
  }
  BufferPosition.prototype.toString = function () {
    return 'BufferPosition(position=' + this.u4s_1 + ', len=' + this.v4s_1 + ')';
  };
  BufferPosition.prototype.hashCode = function () {
    var result = this.u4s_1;
    result = imul(result, 31) + this.v4s_1 | 0;
    return result;
  };
  BufferPosition.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof BufferPosition))
      return false;
    var tmp0_other_with_cast = other instanceof BufferPosition ? other : THROW_CCE();
    if (!(this.u4s_1 === tmp0_other_with_cast.u4s_1))
      return false;
    if (!(this.v4s_1 === tmp0_other_with_cast.v4s_1))
      return false;
    return true;
  };
  BufferPosition.$metadata$ = classMeta('BufferPosition');
  function ExternalBufferLayout(uniforms, uniformPositions, size) {
    BufferLayout.call(this, uniforms);
    this.z4s_1 = uniformPositions;
    this.a4t_1 = size;
    {
      var tmp0_check = this.z4s_1.length === uniforms.m();
      {
      }
      if (!tmp0_check) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Given lists of uniforms and offsets mismatch in length';
        }
        var message = tmp$ret$0;
        throw IllegalStateException_init_$Create$(toString(message));
      }
    }
  }
  ExternalBufferLayout.prototype.r4s = function () {
    return this.z4s_1;
  };
  ExternalBufferLayout.prototype.m = function () {
    return this.a4t_1;
  };
  ExternalBufferLayout.$metadata$ = classMeta('ExternalBufferLayout', undefined, undefined, undefined, undefined, BufferLayout.prototype);
  function Builder() {
    Builder_4.call(this);
    this.l2q_1 = 1;
    this.m2q_1 = false;
    this.n2q_1 = null;
    this.o2q_1 = null;
    this.o2o('texture');
  }
  Builder.prototype.b4t = function (_set____db54di) {
    this.l2q_1 = _set____db54di;
  };
  Builder.prototype.c4t = function (binding) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_toULong = DescriptorType_SAMPLER_1D_getInstance().hashCode();
        tmp$ret$0 = _ULong___init__impl__c78o9k(toLong(tmp0_toULong));
      }
      var tmp1_times = tmp$ret$0;
      tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_times).ja(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(71023, 0)))));
    }
    var sampler = new TextureSampler1d(this, binding, tmp$ret$1);
    var tmp0_safe_receiver = this.o2q_1;
    if (tmp0_safe_receiver == null)
      null;
    else
      tmp0_safe_receiver(sampler);
    return sampler;
  };
  Builder.$metadata$ = classMeta('Builder', undefined, undefined, undefined, undefined, Builder_4.prototype);
  function TextureSampler1d(builder, binding, hash) {
    Descriptor.call(this, builder, binding, DescriptorType_SAMPLER_1D_getInstance(), hash);
    this.i4t_1 = builder.l2q_1;
    this.j4t_1 = builder.n2q_1;
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = this.i4t_1;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(tmp_1), null);
    }
    var tmp_2 = tmp$ret$0;
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$1;
      {
        tmp$ret$1 = null;
      }
      tmp_2[tmp_3] = tmp$ret$1;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp.k4t_1 = tmp_2;
  }
  TextureSampler1d.prototype.f3i = function () {
    return this.i4t_1;
  };
  TextureSampler1d.$metadata$ = classMeta('TextureSampler1d', undefined, undefined, undefined, undefined, Descriptor.prototype);
  function Builder_0() {
    Builder_4.call(this);
    this.f2q_1 = 1;
    this.g2q_1 = false;
    this.h2q_1 = null;
    this.i2q_1 = null;
    this.o2o('texture');
  }
  Builder_0.prototype.b4t = function (_set____db54di) {
    this.f2q_1 = _set____db54di;
  };
  Builder_0.prototype.m4t = function (_set____db54di) {
    this.g2q_1 = _set____db54di;
  };
  Builder_0.prototype.c4t = function (binding) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_toULong = DescriptorType_SAMPLER_2D_getInstance().hashCode();
        tmp$ret$0 = _ULong___init__impl__c78o9k(toLong(tmp0_toULong));
      }
      var tmp1_times = tmp$ret$0;
      tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_times).ja(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(71023, 0)))));
    }
    var sampler = new TextureSampler2d(this, binding, tmp$ret$1);
    var tmp0_safe_receiver = this.i2q_1;
    if (tmp0_safe_receiver == null)
      null;
    else
      tmp0_safe_receiver(sampler);
    return sampler;
  };
  Builder_0.$metadata$ = classMeta('Builder', undefined, undefined, undefined, undefined, Builder_4.prototype);
  function TextureSampler2d(builder, binding, hash) {
    Descriptor.call(this, builder, binding, DescriptorType_SAMPLER_2D_getInstance(), hash);
    this.x2v_1 = builder.f2q_1;
    this.y2v_1 = builder.g2q_1;
    this.z2v_1 = builder.h2q_1;
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = this.x2v_1;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(tmp_1), null);
    }
    var tmp_2 = tmp$ret$0;
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$1;
      {
        tmp$ret$1 = null;
      }
      tmp_2[tmp_3] = tmp$ret$1;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp.a2w_1 = tmp_2;
  }
  TextureSampler2d.prototype.f3i = function () {
    return this.x2v_1;
  };
  TextureSampler2d.prototype.b2w = function (value) {
    this.a2w_1[0] = value;
  };
  TextureSampler2d.prototype.c2w = function () {
    return this.a2w_1[0];
  };
  TextureSampler2d.$metadata$ = classMeta('TextureSampler2d', undefined, undefined, undefined, undefined, Descriptor.prototype);
  function Builder_1() {
    Builder_4.call(this);
    this.a2q_1 = 1;
    this.b2q_1 = null;
    this.c2q_1 = null;
    this.o2o('texture');
  }
  Builder_1.prototype.b4t = function (_set____db54di) {
    this.a2q_1 = _set____db54di;
  };
  Builder_1.prototype.c4t = function (binding) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_toULong = DescriptorType_SAMPLER_3D_getInstance().hashCode();
        tmp$ret$0 = _ULong___init__impl__c78o9k(toLong(tmp0_toULong));
      }
      var tmp1_times = tmp$ret$0;
      tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_times).ja(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(71023, 0)))));
    }
    var sampler = new TextureSampler3d(this, binding, tmp$ret$1);
    var tmp0_safe_receiver = this.c2q_1;
    if (tmp0_safe_receiver == null)
      null;
    else
      tmp0_safe_receiver(sampler);
    return sampler;
  };
  Builder_1.$metadata$ = classMeta('Builder', undefined, undefined, undefined, undefined, Builder_4.prototype);
  function TextureSampler3d(builder, binding, hash) {
    Descriptor.call(this, builder, binding, DescriptorType_SAMPLER_3D_getInstance(), hash);
    this.o2w_1 = builder.a2q_1;
    this.p2w_1 = builder.b2q_1;
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = this.o2w_1;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(tmp_1), null);
    }
    var tmp_2 = tmp$ret$0;
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$1;
      {
        tmp$ret$1 = null;
      }
      tmp_2[tmp_3] = tmp$ret$1;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp.q2w_1 = tmp_2;
  }
  TextureSampler3d.prototype.f3i = function () {
    return this.o2w_1;
  };
  TextureSampler3d.prototype.r2w = function (value) {
    this.q2w_1[0] = value;
  };
  TextureSampler3d.prototype.c2w = function () {
    return this.q2w_1[0];
  };
  TextureSampler3d.$metadata$ = classMeta('TextureSampler3d', undefined, undefined, undefined, undefined, Descriptor.prototype);
  function Builder_2() {
    Builder_4.call(this);
    this.u2p_1 = 1;
    this.v2p_1 = false;
    this.w2p_1 = null;
    this.x2p_1 = null;
    this.o2o('cubeTexture');
  }
  Builder_2.prototype.b4t = function (_set____db54di) {
    this.u2p_1 = _set____db54di;
  };
  Builder_2.prototype.m4t = function (_set____db54di) {
    this.v2p_1 = _set____db54di;
  };
  Builder_2.prototype.c4t = function (binding) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_toULong = DescriptorType_SAMPLER_CUBE_getInstance().hashCode();
        tmp$ret$0 = _ULong___init__impl__c78o9k(toLong(tmp0_toULong));
      }
      var tmp1_times = tmp$ret$0;
      tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_times).ja(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(71023, 0)))));
    }
    var sampler = new TextureSamplerCube(this, binding, tmp$ret$1);
    var tmp0_safe_receiver = this.x2p_1;
    if (tmp0_safe_receiver == null)
      null;
    else
      tmp0_safe_receiver(sampler);
    return sampler;
  };
  Builder_2.$metadata$ = classMeta('Builder', undefined, undefined, undefined, undefined, Builder_4.prototype);
  function TextureSamplerCube(builder, binding, hash) {
    Descriptor.call(this, builder, binding, DescriptorType_SAMPLER_CUBE_getInstance(), hash);
    this.s4t_1 = builder.u2p_1;
    this.t4t_1 = builder.v2p_1;
    this.u4t_1 = builder.w2p_1;
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = this.s4t_1;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(tmp_1), null);
    }
    var tmp_2 = tmp$ret$0;
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$1;
      {
        tmp$ret$1 = null;
      }
      tmp_2[tmp_3] = tmp$ret$1;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp.v4t_1 = tmp_2;
  }
  TextureSamplerCube.prototype.f3i = function () {
    return this.s4t_1;
  };
  TextureSamplerCube.$metadata$ = classMeta('TextureSamplerCube', undefined, undefined, undefined, undefined, Descriptor.prototype);
  function Builder_3() {
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.l2o_1 = tmp$ret$0;
  }
  Builder_3.prototype.w4t = function () {
    return this.l2o_1;
  };
  Builder_3.prototype.c4t = function (set) {
    var tmp$ret$2;
    {
      var tmp0_List = this.l2o_1.m();
      var tmp$ret$1;
      {
        var list = ArrayList_init_$Create$(tmp0_List);
        {
          {
          }
          var inductionVariable = 0;
          if (inductionVariable < tmp0_List)
            do {
              var index = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              {
                var tmp$ret$0;
                {
                  tmp$ret$0 = this.l2o_1.r(index).c4t(index);
                }
                list.b(tmp$ret$0);
              }
            }
             while (inductionVariable < tmp0_List);
        }
        tmp$ret$1 = list;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return new DescriptorSetLayout(set, tmp$ret$2);
  };
  Builder_3.$metadata$ = classMeta('Builder');
  function DescriptorSetLayout(set, descriptors) {
    this.w2x_1 = set;
    this.x2x_1 = descriptors;
    var hash = _ULong___init__impl__c78o9k(new Long(0, 0));
    {
      var tmp0_forEach = this.x2x_1;
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          var tmp$ret$1;
          {
            var tmp$ret$0;
            {
              var tmp0_times = hash;
              tmp$ret$0 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_times).ja(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(71023, 0)))));
            }
            var tmp1_plus = tmp$ret$0;
            var tmp2_plus = element.d2y_1;
            tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_plus).ka(_ULong___get_data__impl__fggpzb(tmp2_plus)));
          }
          hash = tmp$ret$1;
        }
      }
    }
    this.y2x_1 = hash;
  }
  DescriptorSetLayout.prototype.w4t = function () {
    return this.x2x_1;
  };
  DescriptorSetLayout.prototype.l4t = function () {
    return this.y2x_1;
  };
  DescriptorSetLayout.$metadata$ = classMeta('DescriptorSetLayout');
  function Builder_4() {
    this.m2o_1 = '';
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashSet_init_$Create$();
    }
    tmp.n2o_1 = tmp$ret$0;
  }
  Builder_4.prototype.o2o = function (_set____db54di) {
    this.m2o_1 = _set____db54di;
  };
  Builder_4.prototype.h2p = function () {
    return this.n2o_1;
  };
  Builder_4.$metadata$ = classMeta('Builder');
  function Descriptor(builder, binding, type, hash) {
    this.z2x_1 = binding;
    this.a2y_1 = type;
    this.b2y_1 = builder.m2o_1;
    this.c2y_1 = copy_0(builder.n2o_1);
    var h = hash;
    var tmp$ret$2;
    {
      var tmp$ret$0;
      {
        var tmp0_times = h;
        tmp$ret$0 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_times).ja(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(71023, 0)))));
      }
      var tmp2_plus = tmp$ret$0;
      var tmp$ret$1;
      {
        var tmp1_toULong = getStringHashCode(builder.m2o_1);
        tmp$ret$1 = _ULong___init__impl__c78o9k(toLong(tmp1_toULong));
      }
      var tmp3_plus = tmp$ret$1;
      tmp$ret$2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp2_plus).ka(_ULong___get_data__impl__fggpzb(tmp3_plus)));
    }
    h = tmp$ret$2;
    var tmp$ret$5;
    {
      var tmp$ret$3;
      {
        var tmp4_times = h;
        tmp$ret$3 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_times).ja(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(71023, 0)))));
      }
      var tmp6_plus = tmp$ret$3;
      var tmp$ret$4;
      {
        var tmp5_toULong = this.a2y_1.hashCode();
        tmp$ret$4 = _ULong___init__impl__c78o9k(toLong(tmp5_toULong));
      }
      var tmp7_plus = tmp$ret$4;
      tmp$ret$5 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp6_plus).ka(_ULong___get_data__impl__fggpzb(tmp7_plus)));
    }
    h = tmp$ret$5;
    this.d2y_1 = h;
  }
  Descriptor.prototype.x4t = function () {
    return this.z2x_1;
  };
  Descriptor.prototype.il = function () {
    return this.b2y_1;
  };
  Descriptor.prototype.l4t = function () {
    return this.d2y_1;
  };
  Descriptor.$metadata$ = classMeta('Descriptor');
  function Builder_5() {
    Builder_4.call(this);
    this.o2p_1 = null;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.p2p_1 = tmp$ret$0;
    this.q2p_1 = null;
    this.r2p_1 = null;
    this.o2o('Ubo');
  }
  Builder_5.prototype.v2w = function () {
    return this.p2p_1;
  };
  Builder_5.prototype.c4t = function (binding) {
    var tmp$ret$2;
    {
      var tmp0_List = this.p2p_1.m();
      var tmp$ret$1;
      {
        var list = ArrayList_init_$Create$(tmp0_List);
        {
          {
          }
          var inductionVariable = 0;
          if (inductionVariable < tmp0_List)
            do {
              var index = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              {
                var tmp$ret$0;
                {
                  tmp$ret$0 = this.p2p_1.r(index)();
                }
                list.b(tmp$ret$0);
              }
            }
             while (inductionVariable < tmp0_List);
        }
        tmp$ret$1 = list;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    var uniforms = tmp$ret$2;
    var tmp$ret$4;
    {
      var tmp$ret$3;
      {
        var tmp1_toULong = DescriptorType_UNIFORM_BUFFER_getInstance().hashCode();
        tmp$ret$3 = _ULong___init__impl__c78o9k(toLong(tmp1_toULong));
      }
      var tmp2_times = tmp$ret$3;
      tmp$ret$4 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp2_times).ja(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(71023, 0)))));
    }
    var hash = tmp$ret$4;
    {
      var tmp0_iterator = uniforms.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          var tmp$ret$7;
          {
            var tmp$ret$5;
            {
              var tmp0_times = hash;
              tmp$ret$5 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_times).ja(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(71023, 0)))));
            }
            var tmp2_plus = tmp$ret$5;
            var tmp$ret$6;
            {
              var tmp1_toULong_0 = getKClassFromExpression(element).hashCode();
              tmp$ret$6 = _ULong___init__impl__c78o9k(toLong(tmp1_toULong_0));
            }
            var tmp3_plus = tmp$ret$6;
            tmp$ret$7 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp2_plus).ka(_ULong___get_data__impl__fggpzb(tmp3_plus)));
          }
          hash = tmp$ret$7;
          var tmp$ret$10;
          {
            var tmp$ret$8;
            {
              var tmp4_times = hash;
              tmp$ret$8 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_times).ja(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(71023, 0)))));
            }
            var tmp6_plus = tmp$ret$8;
            var tmp$ret$9;
            {
              var tmp5_toULong = getStringHashCode(element.l2u_1);
              tmp$ret$9 = _ULong___init__impl__c78o9k(toLong(tmp5_toULong));
            }
            var tmp7_plus = tmp$ret$9;
            tmp$ret$10 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp6_plus).ka(_ULong___get_data__impl__fggpzb(tmp7_plus)));
          }
          hash = tmp$ret$10;
        }
      }
    }
    var ubo = new UniformBuffer(this, binding, uniforms, hash);
    var tmp0_safe_receiver = this.r2p_1;
    if (tmp0_safe_receiver == null)
      null;
    else
      tmp0_safe_receiver(ubo);
    return ubo;
  };
  Builder_5.$metadata$ = classMeta('Builder', undefined, undefined, undefined, undefined, Builder_4.prototype);
  function UniformBuffer(builder, binding, uniforms, hash) {
    Descriptor.call(this, builder, binding, DescriptorType_UNIFORM_BUFFER_getInstance(), hash);
    this.j2y_1 = uniforms;
    this.k2y_1 = builder.o2p_1;
    this.l2y_1 = builder.q2p_1;
  }
  UniformBuffer.prototype.v2w = function () {
    return this.j2y_1;
  };
  UniformBuffer.$metadata$ = classMeta('UniformBuffer', undefined, undefined, undefined, undefined, Descriptor.prototype);
  var DescriptorType_SAMPLER_1D_instance;
  var DescriptorType_SAMPLER_2D_instance;
  var DescriptorType_SAMPLER_3D_instance;
  var DescriptorType_SAMPLER_CUBE_instance;
  var DescriptorType_UNIFORM_BUFFER_instance;
  var DescriptorType_entriesInitialized;
  function DescriptorType_initEntries() {
    if (DescriptorType_entriesInitialized)
      return Unit_getInstance();
    DescriptorType_entriesInitialized = true;
    DescriptorType_SAMPLER_1D_instance = new DescriptorType('SAMPLER_1D', 0);
    DescriptorType_SAMPLER_2D_instance = new DescriptorType('SAMPLER_2D', 1);
    DescriptorType_SAMPLER_3D_instance = new DescriptorType('SAMPLER_3D', 2);
    DescriptorType_SAMPLER_CUBE_instance = new DescriptorType('SAMPLER_CUBE', 3);
    DescriptorType_UNIFORM_BUFFER_instance = new DescriptorType('UNIFORM_BUFFER', 4);
  }
  function DescriptorType(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  DescriptorType.$metadata$ = classMeta('DescriptorType', undefined, undefined, undefined, undefined, Enum.prototype);
  function DescriptorType_SAMPLER_1D_getInstance() {
    DescriptorType_initEntries();
    return DescriptorType_SAMPLER_1D_instance;
  }
  function DescriptorType_SAMPLER_2D_getInstance() {
    DescriptorType_initEntries();
    return DescriptorType_SAMPLER_2D_instance;
  }
  function DescriptorType_SAMPLER_3D_getInstance() {
    DescriptorType_initEntries();
    return DescriptorType_SAMPLER_3D_instance;
  }
  function DescriptorType_SAMPLER_CUBE_getInstance() {
    DescriptorType_initEntries();
    return DescriptorType_SAMPLER_CUBE_instance;
  }
  function DescriptorType_UNIFORM_BUFFER_getInstance() {
    DescriptorType_initEntries();
    return DescriptorType_UNIFORM_BUFFER_instance;
  }
  function FullscreenShaderUtil$generateFullscreenQuad$lambda($mirrorTexCoordsY) {
    return function ($this$generate) {
      var props = new RectProps();
      {
        props.a4u_1.x2g(-1.0, -1.0, 0.0);
        props.b4u_1.c2j(2.0, 2.0);
        if ($mirrorTexCoordsY) {
          props.g4u();
        }
      }
      $this$generate.h4u(props);
      return Unit_getInstance();
    };
  }
  function FullscreenShaderUtil$fullscreenQuadVertexStage$lambda$lambda($uv, $this_vertexStage) {
    return function ($this$main) {
      var tmp0_safe_receiver = $uv;
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$0;
        {
          {
          }
          tmp$ret$0 = $this$main.h30(tmp0_safe_receiver.n37(), $this_vertexStage.i39(Companion_getInstance_31().q2z_1.x2s_1));
        }
      }
      $this$main.h30($this_vertexStage.d2s_1, $this$main.g30($this_vertexStage.f30(Companion_getInstance_31().n2z_1.x2s_1), 1.0));
      return Unit_getInstance();
    };
  }
  function FullscreenShaderUtil$fullscreenQuadVertexStage$lambda($uv) {
    return function ($this$vertexStage) {
      $this$vertexStage.i30(FullscreenShaderUtil$fullscreenQuadVertexStage$lambda$lambda($uv, $this$vertexStage));
      return Unit_getInstance();
    };
  }
  function FullscreenShaderUtil() {
    FullscreenShaderUtil_instance = this;
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_apply = new PipelineConfig();
      {
      }
      {
        tmp0_apply.w2t_1 = BlendMode_DISABLED_getInstance();
        tmp0_apply.x2t_1 = CullMethod_NO_CULLING_getInstance();
        tmp0_apply.y2t_1 = DepthCompareOp_DISABLED_getInstance();
      }
      tmp$ret$0 = tmp0_apply;
    }
    tmp.i4u_1 = tmp$ret$0;
  }
  FullscreenShaderUtil.prototype.j4u = function (_this__u8e3s4, mirrorTexCoordsY) {
    _this__u8e3s4.c4k(false);
    _this__u8e3s4.d4k(FullscreenShaderUtil$generateFullscreenQuad$lambda(mirrorTexCoordsY));
  };
  FullscreenShaderUtil.prototype.k4u = function (_this__u8e3s4, mirrorTexCoordsY, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      mirrorTexCoordsY = true;
    return this.j4u(_this__u8e3s4, mirrorTexCoordsY);
  };
  FullscreenShaderUtil.prototype.l4u = function (_this__u8e3s4, uv) {
    _this__u8e3s4.j31(FullscreenShaderUtil$fullscreenQuadVertexStage$lambda(uv));
  };
  FullscreenShaderUtil.$metadata$ = objectMeta('FullscreenShaderUtil');
  var FullscreenShaderUtil_instance;
  function FullscreenShaderUtil_getInstance() {
    if (FullscreenShaderUtil_instance == null)
      new FullscreenShaderUtil();
    return FullscreenShaderUtil_instance;
  }
  function LoadedTexture() {
  }
  LoadedTexture.$metadata$ = interfaceMeta('LoadedTexture');
  var RenderTarget_TEXTURE_instance;
  var RenderTarget_RENDER_BUFFER_instance;
  var RenderTarget_entriesInitialized;
  function RenderTarget_initEntries() {
    if (RenderTarget_entriesInitialized)
      return Unit_getInstance();
    RenderTarget_entriesInitialized = true;
    RenderTarget_TEXTURE_instance = new RenderTarget('TEXTURE', 0);
    RenderTarget_RENDER_BUFFER_instance = new RenderTarget('RENDER_BUFFER', 1);
  }
  function Config(builder) {
    this.m4u_1 = builder.w4u_1;
    this.n4u_1 = builder.x4u_1;
    this.o4u_1 = builder.y4u_1;
    this.p4u_1 = builder.z4u_1;
    this.q4u_1 = builder.a4v_1;
    this.r4u_1 = builder.c4v_1;
    this.s4u_1 = builder.b4v_1;
    var tmp = this;
    var tmp_0;
    if (this.r4u_1.equals(RenderTarget_TEXTURE_getInstance())) {
      var tmp0_safe_receiver = builder.e4v_1;
      var tmp_1;
      if (tmp0_safe_receiver == null) {
        tmp_1 = null;
      } else {
        var tmp$ret$1;
        {
          {
          }
          var tmp$ret$0;
          {
            tmp$ret$0 = new TextureAttachmentConfig(tmp0_safe_receiver);
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp_1 = tmp$ret$1;
      }
      tmp_0 = tmp_1;
    } else {
      tmp_0 = null;
    }
    tmp.t4u_1 = tmp_0;
    var tmp_2 = this;
    var tmp_3;
    if (this.s4u_1.equals(RenderTarget_TEXTURE_getInstance())) {
      var tmp$ret$4;
      {
        var tmp0_map = builder.d4v_1;
        var tmp$ret$3;
        {
          var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
          var tmp0_iterator = tmp0_map.h();
          while (tmp0_iterator.n()) {
            var item = tmp0_iterator.o();
            var tmp$ret$2;
            {
              tmp$ret$2 = new TextureAttachmentConfig(item);
            }
            tmp0_mapTo.b(tmp$ret$2);
          }
          tmp$ret$3 = tmp0_mapTo;
        }
        tmp$ret$4 = tmp$ret$3;
      }
      tmp_3 = tmp$ret$4;
    } else {
      tmp_3 = emptyList();
    }
    tmp_2.u4u_1 = tmp_3;
    this.v4u_1 = this.u4u_1.m();
    if (this.s4u_1.equals(RenderTarget_TEXTURE_getInstance()) ? this.u4u_1.q() : false) {
      throw IllegalStateException_init_$Create$('colorAttachments must be configured if colorRenderTarget is TEXTURE');
    } else {
      var tmp_4;
      if (this.s4u_1.equals(RenderTarget_RENDER_BUFFER_getInstance())) {
        var tmp$ret$5;
        {
          var tmp0_isNotEmpty = builder.d4v_1;
          tmp$ret$5 = !tmp0_isNotEmpty.q();
        }
        tmp_4 = tmp$ret$5;
      } else {
        tmp_4 = false;
      }
      if (tmp_4) {
        var tmp$ret$9;
        {
          var tmp$ret$8;
          {
            var tmp3_wExt = Log_getInstance();
            var tmp$ret$7;
            {
              var tmp2_logExt = Level_WARN_getInstance();
              var tmp1_log = getKClassFromExpression(this).ei();
              var tmp_5;
              if (tmp2_logExt.e1w_1 >= tmp3_wExt.y1v_1.e1w_1) {
                var tmp_6 = tmp3_wExt.z1v_1;
                var tmp$ret$6;
                {
                  tmp$ret$6 = 'colorAttachments are ignored if colorRenderTarget is RENDER_BUFFER';
                }
                tmp_5 = tmp_6(tmp2_logExt, tmp1_log, tmp$ret$6);
              }
              tmp$ret$7 = tmp_5;
            }
            tmp$ret$8 = tmp$ret$7;
          }
          tmp$ret$9 = tmp$ret$8;
        }
      }
    }
    if (this.r4u_1.equals(RenderTarget_TEXTURE_getInstance()) ? this.t4u_1 == null : false) {
      throw IllegalStateException_init_$Create$('depthAttachment must be configured if depthRenderTarget is TEXTURE');
    } else if (this.r4u_1.equals(RenderTarget_RENDER_BUFFER_getInstance()) ? !(builder.e4v_1 == null) : false) {
      var tmp$ret$13;
      {
        var tmp$ret$12;
        {
          var tmp6_wExt = Log_getInstance();
          var tmp$ret$11;
          {
            var tmp5_logExt = Level_WARN_getInstance();
            var tmp4_log = getKClassFromExpression(this).ei();
            var tmp_7;
            if (tmp5_logExt.e1w_1 >= tmp6_wExt.y1v_1.e1w_1) {
              var tmp_8 = tmp6_wExt.z1v_1;
              var tmp$ret$10;
              {
                tmp$ret$10 = 'depthAttachment is ignored if depthRenderTarget is RENDER_BUFFER';
              }
              tmp_7 = tmp_8(tmp5_logExt, tmp4_log, tmp$ret$10);
            }
            tmp$ret$11 = tmp_7;
          }
          tmp$ret$12 = tmp$ret$11;
        }
        tmp$ret$13 = tmp$ret$12;
      }
    }
  }
  Config.prototype.f4v = function () {
    return this.p4u_1;
  };
  Config.prototype.g4v = function () {
    return this.u4u_1;
  };
  Config.prototype.h4v = function () {
    return this.v4u_1;
  };
  Config.$metadata$ = classMeta('Config');
  function ConfigBuilder() {
    this.w4u_1 = 'OffscreenRenderPass';
    this.x4u_1 = 0;
    this.y4u_1 = 0;
    this.z4u_1 = 1;
    this.a4v_1 = true;
    this.b4v_1 = RenderTarget_TEXTURE_getInstance();
    this.c4v_1 = RenderTarget_RENDER_BUFFER_getInstance();
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.d4v_1 = tmp$ret$0;
    this.e4v_1 = null;
  }
  ConfigBuilder.prototype.o2o = function (_set____db54di) {
    this.w4u_1 = _set____db54di;
  };
  ConfigBuilder.prototype.i4v = function (width, height) {
    this.x4u_1 = width;
    this.y4u_1 = height;
  };
  ConfigBuilder.prototype.j4v = function () {
    this.c4v_1 = RenderTarget_RENDER_BUFFER_getInstance();
    this.e4v_1 = null;
  };
  ConfigBuilder.prototype.k4v = function (usedAsShadowMap) {
    this.c4v_1 = RenderTarget_TEXTURE_getInstance();
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_apply = new TextureAttachmentConfigBuilder();
      {
      }
      {
        if (usedAsShadowMap) {
          tmp0_apply.m4v_1 = FilterMethod_LINEAR_getInstance();
          tmp0_apply.n4v_1 = FilterMethod_LINEAR_getInstance();
          tmp0_apply.q4v_1 = DepthCompareOp_LESS_getInstance();
        } else {
          tmp0_apply.m4v_1 = FilterMethod_NEAREST_getInstance();
          tmp0_apply.n4v_1 = FilterMethod_NEAREST_getInstance();
          tmp0_apply.q4v_1 = DepthCompareOp_DISABLED_getInstance();
        }
      }
      tmp$ret$0 = tmp0_apply;
    }
    tmp.e4v_1 = tmp$ret$0;
  };
  ConfigBuilder.prototype.s4v = function (format) {
    this.b4v_1 = RenderTarget_TEXTURE_getInstance();
    var tmp0_this = this;
    {
      var tmp1_plusAssign = tmp0_this.d4v_1;
      var tmp$ret$0;
      {
        var tmp0_apply = new TextureAttachmentConfigBuilder();
        {
        }
        {
          tmp0_apply.l4v_1 = format;
        }
        tmp$ret$0 = tmp0_apply;
      }
      var tmp2_plusAssign = tmp$ret$0;
      tmp1_plusAssign.b(tmp2_plusAssign);
    }
  };
  ConfigBuilder.prototype.t4v = function (block) {
    this.b4v_1 = RenderTarget_TEXTURE_getInstance();
    var tmp0_this = this;
    {
      var tmp1_plusAssign = tmp0_this.d4v_1;
      var tmp$ret$0;
      {
        var tmp0_apply = new TextureAttachmentConfigBuilder();
        {
        }
        block(tmp0_apply);
        tmp$ret$0 = tmp0_apply;
      }
      var tmp2_plusAssign = tmp$ret$0;
      tmp1_plusAssign.b(tmp2_plusAssign);
    }
  };
  ConfigBuilder.$metadata$ = classMeta('ConfigBuilder');
  function TextureAttachmentConfig(builder) {
    this.u4v_1 = builder.l4v_1;
    this.v4v_1 = builder.m4v_1;
    this.w4v_1 = builder.n4v_1;
    this.x4v_1 = builder.o4v_1;
    this.y4v_1 = builder.p4v_1;
    this.z4v_1 = builder.q4v_1;
    this.a4w_1 = 1;
    this.b4w_1 = builder.r4v_1;
  }
  TextureAttachmentConfig.prototype.c4w = function () {
    return this.b4w_1;
  };
  TextureAttachmentConfig.prototype.d4w = function () {
    return !(this.b4w_1 == null);
  };
  TextureAttachmentConfig.prototype.e4w = function (mipMapping) {
    return new TextureProps(this.u4v_1, this.x4v_1, this.y4v_1, AddressMode_CLAMP_TO_EDGE_getInstance(), this.v4v_1, this.w4v_1, mipMapping, this.a4w_1);
  };
  TextureAttachmentConfig.$metadata$ = classMeta('TextureAttachmentConfig');
  function TextureAttachmentConfigBuilder() {
    this.l4v_1 = TexFormat_RGBA_getInstance();
    this.m4v_1 = FilterMethod_LINEAR_getInstance();
    this.n4v_1 = FilterMethod_LINEAR_getInstance();
    this.o4v_1 = AddressMode_CLAMP_TO_EDGE_getInstance();
    this.p4v_1 = AddressMode_CLAMP_TO_EDGE_getInstance();
    this.q4v_1 = DepthCompareOp_DISABLED_getInstance();
    this.r4v_1 = null;
  }
  TextureAttachmentConfigBuilder.prototype.f4w = function (_set____db54di) {
    this.l4v_1 = _set____db54di;
  };
  TextureAttachmentConfigBuilder.prototype.g4w = function (_set____db54di) {
    this.m4v_1 = _set____db54di;
  };
  TextureAttachmentConfigBuilder.prototype.h4w = function (_set____db54di) {
    this.n4v_1 = _set____db54di;
  };
  TextureAttachmentConfigBuilder.prototype.i4w = function (_set____db54di) {
    this.q4v_1 = _set____db54di;
  };
  TextureAttachmentConfigBuilder.$metadata$ = classMeta('TextureAttachmentConfigBuilder');
  function RenderTarget(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  RenderTarget.$metadata$ = classMeta('RenderTarget', undefined, undefined, undefined, undefined, Enum.prototype);
  function RenderTarget_TEXTURE_getInstance() {
    RenderTarget_initEntries();
    return RenderTarget_TEXTURE_instance;
  }
  function RenderTarget_RENDER_BUFFER_getInstance() {
    RenderTarget_initEntries();
    return RenderTarget_RENDER_BUFFER_instance;
  }
  function OffscreenRenderPass(drawNode, config) {
    RenderPass.call(this, drawNode);
    this.a4x_1 = config;
    this.b4x_1 = true;
    this.c4x_1 = this.a4x_1.n4u_1;
    this.d4x_1 = this.a4x_1.o4u_1;
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_apply = PerspectiveCamera_init_$Create$(null, 1, null);
      {
      }
      {
        tmp0_apply.t4y(ProjCorrectionMode_OFFSCREEN_getInstance());
      }
      tmp$ret$0 = tmp0_apply;
    }
    tmp.e4x_1 = tmp$ret$0;
    this.f4x_1 = null;
    this.u4y(this.a4x_1.m4u_1);
    var tmp_0 = 0;
    var tmp_1 = this.a4x_1.v4u_1;
    var tmp$ret$1;
    {
      tmp$ret$1 = fillArrayVal(Array(tmp_1), null);
    }
    var tmp_2 = tmp$ret$1;
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$2;
      {
        tmp$ret$2 = null;
      }
      tmp_2[tmp_3] = tmp$ret$2;
      tmp_0 = tmp_0 + 1 | 0;
    }
    this.v4y(tmp_2);
    this.w4y(0);
    if (this.c4x_1 === 0) {
      this.c4x_1 = 16;
    }
    if (this.d4x_1 === 0) {
      this.d4x_1 = 16;
    }
  }
  OffscreenRenderPass.prototype.x4y = function () {
    return this.a4x_1;
  };
  OffscreenRenderPass.prototype.y4y = function (_set____db54di) {
    this.b4x_1 = _set____db54di;
  };
  OffscreenRenderPass.prototype.u3z = function () {
    return this.c4x_1;
  };
  OffscreenRenderPass.prototype.v3z = function () {
    return this.d4x_1;
  };
  OffscreenRenderPass.prototype.z4y = function (_set____db54di) {
    this.e4x_1 = _set____db54di;
  };
  OffscreenRenderPass.prototype.a4z = function () {
    return this.e4x_1;
  };
  OffscreenRenderPass.prototype.b4z = function () {
    return this.f4x_1;
  };
  OffscreenRenderPass.prototype.c4z = function (colorAttachment) {
    return this.a4x_1.u4u_1.r(colorAttachment).e4w(this.a4x_1.p4u_1 > 1);
  };
  OffscreenRenderPass.prototype.d4z = function (colorAttachment, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      colorAttachment = 0;
    return this.c4z(colorAttachment);
  };
  OffscreenRenderPass.prototype.e4z = function (mipLevel) {
    return mipLevel <= 0 ? this.c4x_1 : this.c4x_1 >> mipLevel;
  };
  OffscreenRenderPass.prototype.f4z = function (mipLevel) {
    return mipLevel <= 0 ? this.d4x_1 : this.d4x_1 >> mipLevel;
  };
  OffscreenRenderPass.prototype.w4y = function (mipLevel) {
    this.g4z().h4z(0, 0, this.e4z(mipLevel), this.f4z(mipLevel));
  };
  OffscreenRenderPass.$metadata$ = classMeta('OffscreenRenderPass', undefined, undefined, undefined, undefined, RenderPass.prototype);
  function renderPassConfig(block) {
    var builder = new ConfigBuilder();
    block(builder);
    return new Config(builder);
  }
  function makeColorAttachmentTexs($this) {
    var tmp$ret$2;
    {
      var tmp0_mapIndexed = $this.x4y().u4u_1;
      var tmp$ret$1;
      {
        var tmp0_mapIndexedTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_mapIndexed, 10));
        var index = 0;
        var tmp0_iterator = tmp0_mapIndexed.h();
        while (tmp0_iterator.n()) {
          var item = tmp0_iterator.o();
          var tmp$ret$0;
          {
            var tmp1 = index;
            index = tmp1 + 1 | 0;
            var tmp1__anonymous__uwfjfc = checkIndexOverflow(tmp1);
            var tmp;
            if (item.d4w()) {
              var tmp_0 = ensureNotNull(item.b4w_1);
              tmp = tmp_0 instanceof Texture2d ? tmp_0 : THROW_CCE();
            } else {
              var name = '' + $this.il() + '_color[' + tmp1__anonymous__uwfjfc + ']';
              var props = item.e4w($this.x4y().p4u_1 > 1);
              tmp = Texture2d_init_$Create$_0(props, name, null, 4, null);
            }
            tmp$ret$0 = tmp;
          }
          tmp0_mapIndexedTo.b(tmp$ret$0);
        }
        tmp$ret$1 = tmp0_mapIndexedTo;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  }
  function makeDepthAttachmentTex($this) {
    var tmp0_safe_receiver = $this.x4y().t4u_1;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          var tmp_0;
          if (tmp0_safe_receiver.d4w()) {
            var tmp_1 = ensureNotNull(tmp0_safe_receiver.b4w_1);
            tmp_0 = tmp_1 instanceof Texture2d ? tmp_1 : THROW_CCE();
          } else {
            var name = '' + $this.il() + '_depth';
            var props = tmp0_safe_receiver.e4w($this.x4y().p4u_1 > 1);
            tmp_0 = Texture2d_init_$Create$_0(props, name, null, 4, null);
          }
          tmp$ret$0 = tmp_0;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    return tmp;
  }
  function OffscreenRenderPass2d$dispose$lambda(this$0) {
    return function (it) {
      var tmp;
      var tmp0_safe_receiver = this$0.x4y().t4u_1;
      if ((tmp0_safe_receiver == null ? null : tmp0_safe_receiver.b4w_1) == null) {
        var tmp1_safe_receiver = this$0.g2d_1;
        if (tmp1_safe_receiver == null)
          null;
        else {
          tmp1_safe_receiver.n1a();
        }
        tmp = Unit_getInstance();
      }
      var tmp0_forEachIndexed = this$0.h2d_1;
      var index = 0;
      var tmp0_iterator = tmp0_forEachIndexed.h();
      while (tmp0_iterator.n()) {
        var item = tmp0_iterator.o();
        {
          var tmp1 = index;
          index = tmp1 + 1 | 0;
          var tmp1__anonymous__uwfjfc = checkIndexOverflow(tmp1);
          if (!this$0.x4y().u4u_1.r(tmp1__anonymous__uwfjfc).d4w()) {
            item.n1a();
          }
        }
      }
      return Unit_getInstance();
    };
  }
  function OffscreenRenderPass2d(drawNode, config) {
    OffscreenRenderPass.call(this, drawNode, config);
    this.f2d_1 = new OffscreenPass2dImpl(this);
    this.g2d_1 = makeDepthAttachmentTex(this);
    this.h2d_1 = makeColorAttachmentTexs(this);
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.i2d_1 = tmp$ret$0;
  }
  OffscreenRenderPass2d.prototype.z4z = function () {
    var tmp;
    var tmp$ret$0;
    {
      var tmp0_isNotEmpty = this.h2d_1;
      tmp$ret$0 = !tmp0_isNotEmpty.q();
    }
    if (tmp$ret$0) {
      tmp = this.h2d_1.r(0);
    } else {
      tmp = null;
    }
    return tmp;
  };
  OffscreenRenderPass2d.prototype.j2d = function () {
    var tmp = this.d4z(0, 1, null);
    var tmp_0 = '' + this.il() + '-copy-' + this.i2d_1.m();
    var tex = Texture2d_init_$Create$_0(tmp, tmp_0, null, 4, null);
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.i2d_1;
      tmp0_plusAssign.b(tex);
    }
    return tex;
  };
  OffscreenRenderPass2d.prototype.l4k = function (ctx) {
    OffscreenRenderPass.prototype.l4k.call(this, ctx);
    this.f2d_1.l4k(ctx);
    ctx.g2f(3, OffscreenRenderPass2d$dispose$lambda(this));
  };
  OffscreenRenderPass2d.$metadata$ = classMeta('OffscreenRenderPass2d', undefined, undefined, undefined, undefined, OffscreenRenderPass.prototype);
  function OffscreenRenderPass2dPingPong() {
  }
  OffscreenRenderPass2dPingPong.$metadata$ = classMeta('OffscreenRenderPass2dPingPong', undefined, undefined, undefined, undefined, OffscreenRenderPass.prototype);
  var ViewDirection_FRONT_instance;
  var ViewDirection_BACK_instance;
  var ViewDirection_LEFT_instance;
  var ViewDirection_RIGHT_instance;
  var ViewDirection_UP_instance;
  var ViewDirection_DOWN_instance;
  var ViewDirection_entriesInitialized;
  function ViewDirection_initEntries() {
    if (ViewDirection_entriesInitialized)
      return Unit_getInstance();
    ViewDirection_entriesInitialized = true;
    ViewDirection_FRONT_instance = new ViewDirection('FRONT', 0, 0);
    ViewDirection_BACK_instance = new ViewDirection('BACK', 1, 1);
    ViewDirection_LEFT_instance = new ViewDirection('LEFT', 2, 2);
    ViewDirection_RIGHT_instance = new ViewDirection('RIGHT', 3, 3);
    ViewDirection_UP_instance = new ViewDirection('UP', 4, 4);
    ViewDirection_DOWN_instance = new ViewDirection('DOWN', 5, 5);
  }
  function ViewDirection(name, ordinal, index) {
    Enum.call(this, name, ordinal);
    this.l50_1 = index;
  }
  ViewDirection.$metadata$ = classMeta('ViewDirection', undefined, undefined, undefined, undefined, Enum.prototype);
  function ViewDirection_FRONT_getInstance() {
    ViewDirection_initEntries();
    return ViewDirection_FRONT_instance;
  }
  function ViewDirection_BACK_getInstance() {
    ViewDirection_initEntries();
    return ViewDirection_BACK_instance;
  }
  function ViewDirection_LEFT_getInstance() {
    ViewDirection_initEntries();
    return ViewDirection_LEFT_instance;
  }
  function ViewDirection_RIGHT_getInstance() {
    ViewDirection_initEntries();
    return ViewDirection_RIGHT_instance;
  }
  function ViewDirection_UP_getInstance() {
    ViewDirection_initEntries();
    return ViewDirection_UP_instance;
  }
  function ViewDirection_DOWN_getInstance() {
    ViewDirection_initEntries();
    return ViewDirection_DOWN_instance;
  }
  function OffscreenRenderPassCube() {
  }
  OffscreenRenderPassCube.prototype.z4z = function () {
    var tmp;
    var tmp$ret$0;
    {
      var tmp0_isNotEmpty = this.k51_1;
      tmp$ret$0 = !tmp0_isNotEmpty.q();
    }
    if (tmp$ret$0) {
      tmp = this.k51_1.r(0);
    } else {
      tmp = null;
    }
    return tmp;
  };
  OffscreenRenderPassCube.$metadata$ = classMeta('OffscreenRenderPassCube', undefined, undefined, undefined, undefined, OffscreenRenderPass.prototype);
  var BlendMode_DISABLED_instance;
  var BlendMode_BLEND_ADDITIVE_instance;
  var BlendMode_BLEND_MULTIPLY_ALPHA_instance;
  var BlendMode_BLEND_PREMULTIPLIED_ALPHA_instance;
  var BlendMode_entriesInitialized;
  function BlendMode_initEntries() {
    if (BlendMode_entriesInitialized)
      return Unit_getInstance();
    BlendMode_entriesInitialized = true;
    BlendMode_DISABLED_instance = new BlendMode('DISABLED', 0);
    BlendMode_BLEND_ADDITIVE_instance = new BlendMode('BLEND_ADDITIVE', 1);
    BlendMode_BLEND_MULTIPLY_ALPHA_instance = new BlendMode('BLEND_MULTIPLY_ALPHA', 2);
    BlendMode_BLEND_PREMULTIPLIED_ALPHA_instance = new BlendMode('BLEND_PREMULTIPLIED_ALPHA', 3);
  }
  function BlendMode(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  BlendMode.$metadata$ = classMeta('BlendMode', undefined, undefined, undefined, undefined, Enum.prototype);
  var CullMethod_CULL_BACK_FACES_instance;
  var CullMethod_CULL_FRONT_FACES_instance;
  var CullMethod_NO_CULLING_instance;
  var CullMethod_entriesInitialized;
  function CullMethod_initEntries() {
    if (CullMethod_entriesInitialized)
      return Unit_getInstance();
    CullMethod_entriesInitialized = true;
    CullMethod_CULL_BACK_FACES_instance = new CullMethod('CULL_BACK_FACES', 0, true, false);
    CullMethod_CULL_FRONT_FACES_instance = new CullMethod('CULL_FRONT_FACES', 1, false, true);
    CullMethod_NO_CULLING_instance = new CullMethod('NO_CULLING', 2, true, true);
  }
  function CullMethod(name, ordinal, isFrontVisible, isBackVisible) {
    Enum.call(this, name, ordinal);
    this.p51_1 = isFrontVisible;
    this.q51_1 = isBackVisible;
  }
  CullMethod.$metadata$ = classMeta('CullMethod', undefined, undefined, undefined, undefined, Enum.prototype);
  var DepthCompareOp_DISABLED_instance;
  var DepthCompareOp_ALWAYS_instance;
  var DepthCompareOp_NEVER_instance;
  var DepthCompareOp_LESS_instance;
  var DepthCompareOp_LESS_EQUAL_instance;
  var DepthCompareOp_GREATER_instance;
  var DepthCompareOp_GREATER_EQUAL_instance;
  var DepthCompareOp_EQUAL_instance;
  var DepthCompareOp_NOT_EQUAL_instance;
  var DepthCompareOp_entriesInitialized;
  function DepthCompareOp_initEntries() {
    if (DepthCompareOp_entriesInitialized)
      return Unit_getInstance();
    DepthCompareOp_entriesInitialized = true;
    DepthCompareOp_DISABLED_instance = new DepthCompareOp('DISABLED', 0);
    DepthCompareOp_ALWAYS_instance = new DepthCompareOp('ALWAYS', 1);
    DepthCompareOp_NEVER_instance = new DepthCompareOp('NEVER', 2);
    DepthCompareOp_LESS_instance = new DepthCompareOp('LESS', 3);
    DepthCompareOp_LESS_EQUAL_instance = new DepthCompareOp('LESS_EQUAL', 4);
    DepthCompareOp_GREATER_instance = new DepthCompareOp('GREATER', 5);
    DepthCompareOp_GREATER_EQUAL_instance = new DepthCompareOp('GREATER_EQUAL', 6);
    DepthCompareOp_EQUAL_instance = new DepthCompareOp('EQUAL', 7);
    DepthCompareOp_NOT_EQUAL_instance = new DepthCompareOp('NOT_EQUAL', 8);
  }
  function DepthCompareOp(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  DepthCompareOp.$metadata$ = classMeta('DepthCompareOp', undefined, undefined, undefined, undefined, Enum.prototype);
  function Layout_0(vertices, descriptorSets, pushConstantRanges) {
    this.i2x_1 = vertices;
    this.j2x_1 = descriptorSets;
    this.k2x_1 = pushConstantRanges;
  }
  Layout_0.$metadata$ = classMeta('Layout');
  function Builder_6() {
    this.b2n_1 = 'pipeline';
    this.c2n_1 = CullMethod_CULL_BACK_FACES_getInstance();
    this.d2n_1 = BlendMode_DISABLED_getInstance();
    this.e2n_1 = DepthCompareOp_LESS_getInstance();
    this.f2n_1 = true;
    this.g2n_1 = 1.0;
    this.i2n_1 = new Builder_7();
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.j2n_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = ArrayList_init_$Create$_0();
    }
    tmp_0.k2n_1 = tmp$ret$1;
  }
  Builder_6.prototype.r51 = function () {
    var tmp = this.h2n_1;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('shaderCodeGenerator');
    }
  };
  Builder_6.prototype.s51 = function () {
    return new Pipeline(this);
  };
  Builder_6.$metadata$ = classMeta('Builder');
  function Companion_33() {
    Companion_instance_33 = this;
    this.t51_1 = new Long(1, 0);
  }
  Companion_33.$metadata$ = objectMeta('Companion');
  var Companion_instance_33;
  function Companion_getInstance_33() {
    if (Companion_instance_33 == null)
      new Companion_33();
    return Companion_instance_33;
  }
  function Pipeline(builder) {
    Companion_getInstance_33();
    this.l2x_1 = builder.b2n_1;
    var tmp = this;
    var tmp0_this = Companion_getInstance_33();
    var tmp1 = tmp0_this.t51_1;
    tmp0_this.t51_1 = tmp1.yl();
    tmp.n2x_1 = tmp1;
    this.o2x_1 = builder.c2n_1;
    this.p2x_1 = builder.d2n_1;
    this.q2x_1 = builder.e2n_1;
    this.r2x_1 = builder.f2n_1;
    this.s2x_1 = builder.g2n_1;
    var tmp_0 = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp_0.v2x_1 = tmp$ret$0;
    var vertexLayout = builder.i2n_1.s51();
    var tmp$ret$3;
    {
      var tmp0_mapIndexed = builder.j2n_1;
      var tmp$ret$2;
      {
        var tmp0_mapIndexedTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_mapIndexed, 10));
        var index = 0;
        var tmp0_iterator = tmp0_mapIndexed.h();
        while (tmp0_iterator.n()) {
          var item = tmp0_iterator.o();
          var tmp$ret$1;
          {
            var tmp1_0 = index;
            index = tmp1_0 + 1 | 0;
            var tmp1__anonymous__uwfjfc = checkIndexOverflow(tmp1_0);
            tmp$ret$1 = item.c4t(tmp1__anonymous__uwfjfc);
          }
          tmp0_mapIndexedTo.b(tmp$ret$1);
        }
        tmp$ret$2 = tmp0_mapIndexedTo;
      }
      tmp$ret$3 = tmp$ret$2;
    }
    var descriptorSetLayouts = tmp$ret$3;
    var tmp$ret$6;
    {
      var tmp2_map = builder.k2n_1;
      var tmp$ret$5;
      {
        var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp2_map, 10));
        var tmp0_iterator_0 = tmp2_map.h();
        while (tmp0_iterator_0.n()) {
          var item_0 = tmp0_iterator_0.o();
          var tmp$ret$4;
          {
            tmp$ret$4 = item_0.s51();
          }
          tmp0_mapTo.b(tmp$ret$4);
        }
        tmp$ret$5 = tmp0_mapTo;
      }
      tmp$ret$6 = tmp$ret$5;
    }
    var pushConstantRanges = tmp$ret$6;
    this.t2x_1 = new Layout_0(vertexLayout, descriptorSetLayouts, pushConstantRanges);
    this.u2x_1 = builder.r51()(this.t2x_1);
    var tmp$ret$7;
    {
      var tmp3_toULong = this.o2x_1.hashCode();
      tmp$ret$7 = _ULong___init__impl__c78o9k(toLong(tmp3_toULong));
    }
    var hash = tmp$ret$7;
    var tmp$ret$10;
    {
      var tmp$ret$8;
      {
        var tmp4_times = hash;
        tmp$ret$8 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_times).ja(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(71023, 0)))));
      }
      var tmp6_plus = tmp$ret$8;
      var tmp$ret$9;
      {
        var tmp5_toULong = this.q2x_1.hashCode();
        tmp$ret$9 = _ULong___init__impl__c78o9k(toLong(tmp5_toULong));
      }
      var tmp7_plus = tmp$ret$9;
      tmp$ret$10 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp6_plus).ka(_ULong___get_data__impl__fggpzb(tmp7_plus)));
    }
    hash = tmp$ret$10;
    var tmp$ret$13;
    {
      var tmp$ret$11;
      {
        var tmp8_times = hash;
        tmp$ret$11 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp8_times).ja(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(71023, 0)))));
      }
      var tmp10_plus = tmp$ret$11;
      var tmp$ret$12;
      {
        var tmp9_toULong = this.r2x_1 | 0;
        tmp$ret$12 = _ULong___init__impl__c78o9k(toLong(tmp9_toULong));
      }
      var tmp11_plus = tmp$ret$12;
      tmp$ret$13 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp10_plus).ka(_ULong___get_data__impl__fggpzb(tmp11_plus)));
    }
    hash = tmp$ret$13;
    var tmp$ret$16;
    {
      var tmp$ret$14;
      {
        var tmp12_times = hash;
        tmp$ret$14 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp12_times).ja(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(71023, 0)))));
      }
      var tmp14_plus = tmp$ret$14;
      var tmp$ret$15;
      {
        var tmp13_toULong = getNumberHashCode(this.s2x_1);
        tmp$ret$15 = _ULong___init__impl__c78o9k(toLong(tmp13_toULong));
      }
      var tmp15_plus = tmp$ret$15;
      tmp$ret$16 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp14_plus).ka(_ULong___get_data__impl__fggpzb(tmp15_plus)));
    }
    hash = tmp$ret$16;
    var tmp$ret$18;
    {
      var tmp$ret$17;
      {
        var tmp16_times = hash;
        tmp$ret$17 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp16_times).ja(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(71023, 0)))));
      }
      var tmp17_plus = tmp$ret$17;
      var tmp18_plus = vertexLayout.b52_1;
      tmp$ret$18 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp17_plus).ka(_ULong___get_data__impl__fggpzb(tmp18_plus)));
    }
    hash = tmp$ret$18;
    var tmp$ret$20;
    {
      var tmp$ret$19;
      {
        var tmp19_times = hash;
        tmp$ret$19 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp19_times).ja(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(71023, 0)))));
      }
      var tmp20_plus = tmp$ret$19;
      var tmp21_plus = this.u2x_1.e52_1;
      tmp$ret$20 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp20_plus).ka(_ULong___get_data__impl__fggpzb(tmp21_plus)));
    }
    hash = tmp$ret$20;
    {
      var tmp0_iterator_1 = descriptorSetLayouts.h();
      while (tmp0_iterator_1.n()) {
        var element = tmp0_iterator_1.o();
        {
          var tmp$ret$22;
          {
            var tmp$ret$21;
            {
              var tmp0_times = hash;
              tmp$ret$21 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_times).ja(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(71023, 0)))));
            }
            var tmp1_plus = tmp$ret$21;
            var tmp2_plus = element.y2x_1;
            tmp$ret$22 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_plus).ka(_ULong___get_data__impl__fggpzb(tmp2_plus)));
          }
          hash = tmp$ret$22;
        }
      }
    }
    {
      var tmp0_iterator_2 = pushConstantRanges.h();
      while (tmp0_iterator_2.n()) {
        var element_0 = tmp0_iterator_2.o();
        {
          var tmp$ret$24;
          {
            var tmp$ret$23;
            {
              var tmp0_times_0 = hash;
              tmp$ret$23 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_times_0).ja(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(71023, 0)))));
            }
            var tmp1_plus_0 = tmp$ret$23;
            var tmp2_plus_0 = element_0.f52_1;
            tmp$ret$24 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_plus_0).ka(_ULong___get_data__impl__fggpzb(tmp2_plus_0)));
          }
          hash = tmp$ret$24;
        }
      }
    }
    this.m2x_1 = hash;
  }
  Pipeline.prototype.o52 = function () {
    return this.o2x_1;
  };
  Pipeline.prototype.p52 = function () {
    return this.u2x_1;
  };
  Pipeline.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Pipeline))
      return false;
    return equals(this.m2x_1, other.m2x_1);
  };
  Pipeline.prototype.hashCode = function () {
    return ULong__hashCode_impl_6hv2lb(this.m2x_1);
  };
  Pipeline.$metadata$ = classMeta('Pipeline');
  function BlendMode_DISABLED_getInstance() {
    BlendMode_initEntries();
    return BlendMode_DISABLED_instance;
  }
  function BlendMode_BLEND_MULTIPLY_ALPHA_getInstance() {
    BlendMode_initEntries();
    return BlendMode_BLEND_MULTIPLY_ALPHA_instance;
  }
  function BlendMode_BLEND_PREMULTIPLIED_ALPHA_getInstance() {
    BlendMode_initEntries();
    return BlendMode_BLEND_PREMULTIPLIED_ALPHA_instance;
  }
  function CullMethod_CULL_BACK_FACES_getInstance() {
    CullMethod_initEntries();
    return CullMethod_CULL_BACK_FACES_instance;
  }
  function CullMethod_NO_CULLING_getInstance() {
    CullMethod_initEntries();
    return CullMethod_NO_CULLING_instance;
  }
  function DepthCompareOp_DISABLED_getInstance() {
    DepthCompareOp_initEntries();
    return DepthCompareOp_DISABLED_instance;
  }
  function DepthCompareOp_LESS_getInstance() {
    DepthCompareOp_initEntries();
    return DepthCompareOp_LESS_instance;
  }
  function DepthCompareOp_LESS_EQUAL_getInstance() {
    DepthCompareOp_initEntries();
    return DepthCompareOp_LESS_EQUAL_instance;
  }
  function PushConstantRange(builder, longHash, pushConstants) {
    this.f52_1 = longHash;
    this.g52_1 = pushConstants;
    this.h52_1 = builder.u51_1;
    this.i52_1 = builder.v51_1;
    this.j52_1 = copy_0(builder.w51_1);
    this.k52_1 = new Std140BufferLayout(this.g52_1);
    this.l52_1 = this.k52_1.q4s_1;
    this.m52_1 = createMixedBuffer(this.l52_1);
    this.n52_1 = builder.y51_1;
  }
  PushConstantRange.prototype.l4t = function () {
    return this.f52_1;
  };
  PushConstantRange.prototype.q52 = function () {
    return this.g52_1;
  };
  PushConstantRange.$metadata$ = classMeta('PushConstantRange');
  function RenderPass$UpdateEvent$meshFilter$lambda() {
    return function (it) {
      return true;
    };
  }
  function setupUpdateEvent($this, ctx) {
    var tmp0_elvis_lhs = $this.n4l_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$0;
      {
        var tmp0_also = new UpdateEvent($this, ctx);
        {
        }
        {
          $this.n4l_1 = tmp0_also;
        }
        tmp$ret$0 = tmp0_also;
      }
      tmp = tmp$ret$0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var event = tmp;
    event.y4n_1 = $this.m4l_1;
    return event;
  }
  function UpdateEvent(renderPass, ctx) {
    this.w4n_1 = renderPass;
    this.x4n_1 = ctx;
    var tmp = this;
    tmp.y4n_1 = RenderPass$UpdateEvent$meshFilter$lambda();
  }
  UpdateEvent.prototype.r52 = function () {
    return this.x4n_1;
  };
  UpdateEvent.prototype.s52 = function () {
    return Time_getInstance().z20_1;
  };
  UpdateEvent.prototype.a4z = function () {
    return this.w4n_1.a4z();
  };
  UpdateEvent.$metadata$ = classMeta('UpdateEvent');
  function RenderPass$drawMeshFilter$lambda() {
    return function (it) {
      return true;
    };
  }
  function RenderPass(drawNode) {
    this.g4l_1 = drawNode;
    this.h4l_1 = null;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.i4l_1 = tmp$ret$0;
    this.j4l_1 = new Viewport(0, 0, 0, 0);
    this.k4l_1 = null;
    this.l4l_1 = true;
    var tmp_0 = this;
    tmp_0.m4l_1 = RenderPass$drawMeshFilter$lambda();
    this.n4l_1 = null;
    var tmp_1 = this;
    var tmp_2 = 0;
    var tmp_3 = 1;
    var tmp$ret$1;
    {
      tmp$ret$1 = fillArrayVal(Array(tmp_3), null);
    }
    var tmp_4 = tmp$ret$1;
    while (tmp_2 < tmp_3) {
      var tmp_5 = tmp_2;
      var tmp$ret$2;
      {
        tmp$ret$2 = new Color(0.15, 0.15, 0.15, 1.0);
      }
      tmp_4[tmp_5] = tmp$ret$2;
      tmp_2 = tmp_2 + 1 | 0;
    }
    tmp_1.o4l_1 = tmp_4;
    this.p4l_1 = true;
    this.q4l_1 = new DrawQueue(this);
    var tmp_6 = this;
    var tmp$ret$3;
    {
      tmp$ret$3 = ArrayList_init_$Create$_0();
    }
    tmp_6.r4l_1 = tmp$ret$3;
    var tmp_7 = this;
    var tmp$ret$4;
    {
      tmp$ret$4 = ArrayList_init_$Create$_0();
    }
    tmp_7.s4l_1 = tmp$ret$4;
    var tmp_8 = this;
    var tmp$ret$5;
    {
      tmp$ret$5 = ArrayList_init_$Create$_0();
    }
    tmp_8.t4l_1 = tmp$ret$5;
    var tmp_9 = this;
    var tmp$ret$6;
    {
      tmp$ret$6 = ArrayList_init_$Create$_0();
    }
    tmp_9.u4l_1 = tmp$ret$6;
    var tmp_10 = this;
    var tmp$ret$7;
    {
      tmp$ret$7 = ArrayList_init_$Create$_0();
    }
    tmp_10.v4l_1 = tmp$ret$7;
    this.w4l_1 = false;
  }
  RenderPass.prototype.t52 = function () {
    return this.g4l_1;
  };
  RenderPass.prototype.u4y = function (_set____db54di) {
    this.h4l_1 = _set____db54di;
  };
  RenderPass.prototype.il = function () {
    return this.h4l_1;
  };
  RenderPass.prototype.e2p = function () {
    return this.i4l_1;
  };
  RenderPass.prototype.g4z = function () {
    return this.j4l_1;
  };
  RenderPass.prototype.u52 = function (_set____db54di) {
    this.k4l_1 = _set____db54di;
  };
  RenderPass.prototype.v4y = function (_set____db54di) {
    this.o4l_1 = _set____db54di;
  };
  RenderPass.prototype.i4z = function () {
    return this.o4l_1;
  };
  RenderPass.prototype.x4l = function (value) {
    this.o4l_1[0] = value;
  };
  RenderPass.prototype.j4z = function () {
    return this.o4l_1[0];
  };
  RenderPass.prototype.k4z = function () {
    return this.p4l_1;
  };
  RenderPass.prototype.i50 = function () {
    return this.q4l_1;
  };
  RenderPass.prototype.v52 = function () {
    return this.v4l_1;
  };
  RenderPass.prototype.n4z = function (subTag) {
    var tmp;
    if (this.w4l_1) {
      tmp = 'RP:' + this.h4l_1 + '-' + subTag;
    } else {
      tmp = 'RP:' + this.h4l_1;
    }
    return tmp;
  };
  RenderPass.prototype.o4z = function (ctx) {
    if (ctx.r2b_1) {
      Profiling_getInstance().o2f(this.n4z('update'));
    }
    if (this.l4l_1) {
      this.g4l_1.w4k(setupUpdateEvent(this, ctx));
    }
    if (ctx.r2b_1) {
      Profiling_getInstance().g2g(this.n4z('update'));
    }
  };
  RenderPass.prototype.p4z = function (ctx) {
    if (ctx.r2b_1) {
      Profiling_getInstance().o2f(this.n4z('collect'));
    }
    this.r4z(ctx);
    this.g4l_1.m4k(setupUpdateEvent(this, ctx));
    this.s4z(ctx);
    if (ctx.r2b_1) {
      Profiling_getInstance().g2g(this.n4z('collect'));
    }
  };
  RenderPass.prototype.l4z = function (ctx) {
    var tmp$ret$0;
    {
      var tmp0_isNotEmpty = this.t4l_1;
      tmp$ret$0 = !tmp0_isNotEmpty.q();
    }
    if (tmp$ret$0) {
      var inductionVariable = 0;
      var last = this.t4l_1.m() - 1 | 0;
      if (inductionVariable <= last)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          this.t4l_1.r(i)(ctx);
        }
         while (inductionVariable <= last);
    }
  };
  RenderPass.prototype.m4z = function (ctx) {
    var tmp$ret$0;
    {
      var tmp0_isNotEmpty = this.u4l_1;
      tmp$ret$0 = !tmp0_isNotEmpty.q();
    }
    if (tmp$ret$0) {
      var inductionVariable = 0;
      var last = this.u4l_1.m() - 1 | 0;
      if (inductionVariable <= last)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          this.u4l_1.r(i)(ctx);
        }
         while (inductionVariable <= last);
    }
  };
  RenderPass.prototype.q4z = function (mesh, ctx) {
    return this.q4l_1.q4z(mesh, ctx);
  };
  RenderPass.prototype.r4z = function (ctx) {
    this.q4l_1.t7();
    var inductionVariable = 0;
    var last = this.r4l_1.m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.r4l_1.r(i)(ctx);
      }
       while (inductionVariable <= last);
    this.a4z().z52(this, ctx);
  };
  RenderPass.prototype.s4z = function (ctx) {
    var inductionVariable = 0;
    var last = this.s4l_1.m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.s4l_1.r(i)(ctx);
      }
       while (inductionVariable <= last);
  };
  RenderPass.prototype.t4z = function (ctx) {
    var inductionVariable = 0;
    var last = this.v4l_1.m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.v4l_1.r(i)(ctx);
      }
       while (inductionVariable <= last);
  };
  RenderPass.prototype.l4k = function (ctx) {
  };
  RenderPass.$metadata$ = classMeta('RenderPass');
  function ScreenRenderPass(scene) {
    RenderPass.call(this, scene);
    this.r53_1 = scene;
    this.s53_1 = true;
    this.u4y('onscreen/' + this.r53_1.il());
    this.u52(this.r53_1.s2e_1);
  }
  ScreenRenderPass.prototype.a4z = function () {
    return this.r53_1.t2e_1;
  };
  ScreenRenderPass.prototype.o4z = function (ctx) {
    if (this.s53_1) {
      ctx.f2f(this.g4z());
    }
    RenderPass.prototype.o4z.call(this, ctx);
  };
  ScreenRenderPass.$metadata$ = classMeta('ScreenRenderPass', undefined, undefined, undefined, undefined, RenderPass.prototype);
  function Shader() {
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.f2x_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = ArrayList_init_$Create$_0();
    }
    tmp_0.g2x_1 = tmp$ret$1;
  }
  Shader.prototype.a2z = function (mesh, ctx) {
    var pipelineBuilder = new Builder_6();
    pipelineBuilder.i2n_1.k2t_1 = mesh.e2r_1.m2s_1;
    this.a2x(pipelineBuilder, mesh, ctx);
    var pipeline = pipelineBuilder.s51();
    this.h2x(pipeline, mesh, ctx);
    return pipeline;
  };
  Shader.prototype.a2x = function (builder, mesh, ctx) {
    {
      var tmp0_forEach = this.f2x_1;
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          element(builder, mesh, ctx);
        }
      }
    }
  };
  Shader.prototype.h2x = function (pipeline, mesh, ctx) {
    {
      var tmp0_forEach = this.g2x_1;
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          element(pipeline, mesh, ctx);
        }
      }
    }
  };
  Shader.$metadata$ = classMeta('Shader');
  var ShaderStage_VERTEX_SHADER_instance;
  var ShaderStage_TESSELEATION_CTRL_instance;
  var ShaderStage_TESSELATION_EVAL_instance;
  var ShaderStage_GEOMETRY_SHADER_instance;
  var ShaderStage_FRAGMENT_SHADER_instance;
  var ShaderStage_ALL_instance;
  var ShaderStage_entriesInitialized;
  function ShaderStage_initEntries() {
    if (ShaderStage_entriesInitialized)
      return Unit_getInstance();
    ShaderStage_entriesInitialized = true;
    ShaderStage_VERTEX_SHADER_instance = new ShaderStage('VERTEX_SHADER', 0, 1);
    ShaderStage_TESSELEATION_CTRL_instance = new ShaderStage('TESSELEATION_CTRL', 1, 2);
    ShaderStage_TESSELATION_EVAL_instance = new ShaderStage('TESSELATION_EVAL', 2, 4);
    ShaderStage_GEOMETRY_SHADER_instance = new ShaderStage('GEOMETRY_SHADER', 3, 8);
    ShaderStage_FRAGMENT_SHADER_instance = new ShaderStage('FRAGMENT_SHADER', 4, 16);
    ShaderStage_ALL_instance = new ShaderStage('ALL', 5, -1);
  }
  function ShaderStage(name, ordinal, mask) {
    Enum.call(this, name, ordinal);
    this.v53_1 = mask;
  }
  ShaderStage.$metadata$ = classMeta('ShaderStage', undefined, undefined, undefined, undefined, Enum.prototype);
  function ShaderStage_VERTEX_SHADER_getInstance() {
    ShaderStage_initEntries();
    return ShaderStage_VERTEX_SHADER_instance;
  }
  function ShaderStage_FRAGMENT_SHADER_getInstance() {
    ShaderStage_initEntries();
    return ShaderStage_FRAGMENT_SHADER_instance;
  }
  var TexFormat_R_instance;
  var TexFormat_RG_instance;
  var TexFormat_RGB_instance;
  var TexFormat_RGBA_instance;
  var TexFormat_R_F16_instance;
  var TexFormat_RG_F16_instance;
  var TexFormat_RGB_F16_instance;
  var TexFormat_RGBA_F16_instance;
  var TexFormat_entriesInitialized;
  function TexFormat_initEntries() {
    if (TexFormat_entriesInitialized)
      return Unit_getInstance();
    TexFormat_entriesInitialized = true;
    TexFormat_R_instance = new TexFormat('R', 0, 1, false, false);
    TexFormat_RG_instance = new TexFormat('RG', 1, 2, false, false);
    TexFormat_RGB_instance = new TexFormat('RGB', 2, 3, false, false);
    TexFormat_RGBA_instance = new TexFormat('RGBA', 3, 4, true, false);
    TexFormat_R_F16_instance = new TexFormat('R_F16', 4, 1, false, true);
    TexFormat_RG_F16_instance = new TexFormat('RG_F16', 5, 2, false, true);
    TexFormat_RGB_F16_instance = new TexFormat('RGB_F16', 6, 3, false, true);
    TexFormat_RGBA_F16_instance = new TexFormat('RGBA_F16', 7, 4, true, true);
  }
  function TexFormat(name, ordinal, channels, hasAlpha, isFloat) {
    Enum.call(this, name, ordinal);
    this.y53_1 = channels;
    this.z53_1 = hasAlpha;
    this.a54_1 = isFloat;
  }
  TexFormat.$metadata$ = classMeta('TexFormat', undefined, undefined, undefined, undefined, Enum.prototype);
  function TexFormat_R_getInstance() {
    TexFormat_initEntries();
    return TexFormat_R_instance;
  }
  function TexFormat_RGBA_getInstance() {
    TexFormat_initEntries();
    return TexFormat_RGBA_instance;
  }
  function TexFormat_RG_F16_getInstance() {
    TexFormat_initEntries();
    return TexFormat_RG_F16_instance;
  }
  function TextureProps_init_$Init$(format, addressModeU, addressModeV, addressModeW, minFilter, magFilter, mipMapping, maxAnisotropy, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      format = TexFormat_RGBA_getInstance();
    if (!(($mask0 & 2) === 0))
      addressModeU = AddressMode_REPEAT_getInstance();
    if (!(($mask0 & 4) === 0))
      addressModeV = AddressMode_REPEAT_getInstance();
    if (!(($mask0 & 8) === 0))
      addressModeW = AddressMode_REPEAT_getInstance();
    if (!(($mask0 & 16) === 0))
      minFilter = FilterMethod_LINEAR_getInstance();
    if (!(($mask0 & 32) === 0))
      magFilter = FilterMethod_LINEAR_getInstance();
    if (!(($mask0 & 64) === 0))
      mipMapping = true;
    if (!(($mask0 & 128) === 0))
      maxAnisotropy = 4;
    TextureProps.call($this, format, addressModeU, addressModeV, addressModeW, minFilter, magFilter, mipMapping, maxAnisotropy);
    return $this;
  }
  function TextureProps_init_$Create$(format, addressModeU, addressModeV, addressModeW, minFilter, magFilter, mipMapping, maxAnisotropy, $mask0, $marker) {
    return TextureProps_init_$Init$(format, addressModeU, addressModeV, addressModeW, minFilter, magFilter, mipMapping, maxAnisotropy, $mask0, $marker, Object.create(TextureProps.prototype));
  }
  function TextureProps(format, addressModeU, addressModeV, addressModeW, minFilter, magFilter, mipMapping, maxAnisotropy) {
    this.b54_1 = format;
    this.c54_1 = addressModeU;
    this.d54_1 = addressModeV;
    this.e54_1 = addressModeW;
    this.f54_1 = minFilter;
    this.g54_1 = magFilter;
    this.h54_1 = mipMapping;
    this.i54_1 = maxAnisotropy;
  }
  TextureProps.prototype.toString = function () {
    return 'TextureProps(format=' + this.b54_1 + ', addressModeU=' + this.c54_1 + ', addressModeV=' + this.d54_1 + ', addressModeW=' + this.e54_1 + ', minFilter=' + this.f54_1 + ', magFilter=' + this.g54_1 + ', mipMapping=' + this.h54_1 + ', maxAnisotropy=' + this.i54_1 + ')';
  };
  TextureProps.prototype.hashCode = function () {
    var result = this.b54_1.hashCode();
    result = imul(result, 31) + this.c54_1.hashCode() | 0;
    result = imul(result, 31) + this.d54_1.hashCode() | 0;
    result = imul(result, 31) + this.e54_1.hashCode() | 0;
    result = imul(result, 31) + this.f54_1.hashCode() | 0;
    result = imul(result, 31) + this.g54_1.hashCode() | 0;
    result = imul(result, 31) + (this.h54_1 | 0) | 0;
    result = imul(result, 31) + this.i54_1 | 0;
    return result;
  };
  TextureProps.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof TextureProps))
      return false;
    var tmp0_other_with_cast = other instanceof TextureProps ? other : THROW_CCE();
    if (!this.b54_1.equals(tmp0_other_with_cast.b54_1))
      return false;
    if (!this.c54_1.equals(tmp0_other_with_cast.c54_1))
      return false;
    if (!this.d54_1.equals(tmp0_other_with_cast.d54_1))
      return false;
    if (!this.e54_1.equals(tmp0_other_with_cast.e54_1))
      return false;
    if (!this.f54_1.equals(tmp0_other_with_cast.f54_1))
      return false;
    if (!this.g54_1.equals(tmp0_other_with_cast.g54_1))
      return false;
    if (!(this.h54_1 === tmp0_other_with_cast.h54_1))
      return false;
    if (!(this.i54_1 === tmp0_other_with_cast.i54_1))
      return false;
    return true;
  };
  TextureProps.$metadata$ = classMeta('TextureProps');
  var AddressMode_CLAMP_TO_EDGE_instance;
  var AddressMode_MIRRORED_REPEAT_instance;
  var AddressMode_REPEAT_instance;
  var AddressMode_entriesInitialized;
  function AddressMode_initEntries() {
    if (AddressMode_entriesInitialized)
      return Unit_getInstance();
    AddressMode_entriesInitialized = true;
    AddressMode_CLAMP_TO_EDGE_instance = new AddressMode('CLAMP_TO_EDGE', 0);
    AddressMode_MIRRORED_REPEAT_instance = new AddressMode('MIRRORED_REPEAT', 1);
    AddressMode_REPEAT_instance = new AddressMode('REPEAT', 2);
  }
  function AddressMode(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  AddressMode.$metadata$ = classMeta('AddressMode', undefined, undefined, undefined, undefined, Enum.prototype);
  var FilterMethod_NEAREST_instance;
  var FilterMethod_LINEAR_instance;
  var FilterMethod_entriesInitialized;
  function FilterMethod_initEntries() {
    if (FilterMethod_entriesInitialized)
      return Unit_getInstance();
    FilterMethod_entriesInitialized = true;
    FilterMethod_NEAREST_instance = new FilterMethod('NEAREST', 0);
    FilterMethod_LINEAR_instance = new FilterMethod('LINEAR', 1);
  }
  function FilterMethod(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  FilterMethod.$metadata$ = classMeta('FilterMethod', undefined, undefined, undefined, undefined, Enum.prototype);
  function Texture2d_init_$Init$(props, name, loader, $this) {
    var tmp0_safe_receiver = loader;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          tmp$ret$0 = new AsyncTextureLoader(tmp0_safe_receiver);
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    Texture2d.call($this, props, name, tmp);
    return $this;
  }
  function Texture2d_init_$Create$(props, name, loader) {
    return Texture2d_init_$Init$(props, name, loader, Object.create(Texture2d.prototype));
  }
  function Texture2d_init_$Init$_0(props, name, loader, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0)) {
      props = TextureProps_init_$Create$(null, null, null, null, null, null, false, 0, 255, null);
    }
    if (!(($mask0 & 2) === 0))
      name = null;
    if (!(($mask0 & 4) === 0))
      loader = null;
    Texture2d_init_$Init$(props, name, loader, $this);
    return $this;
  }
  function Texture2d_init_$Create$_0(props, name, loader, $mask0, $marker) {
    return Texture2d_init_$Init$_0(props, name, loader, $mask0, $marker, Object.create(Texture2d.prototype));
  }
  function Texture2d_init_$Init$_1(props, data, name, $this) {
    Texture2d.call($this, props, name, new BufferedTextureLoader(data));
    return $this;
  }
  function Texture2d_init_$Init$_2(props, data, name, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0)) {
      props = TextureProps_init_$Create$(null, null, null, null, null, null, false, 0, 255, null);
    }
    if (!(($mask0 & 4) === 0))
      name = null;
    Texture2d_init_$Init$_1(props, data, name, $this);
    return $this;
  }
  function Texture2d_init_$Create$_1(props, data, name, $mask0, $marker) {
    return Texture2d_init_$Init$_2(props, data, name, $mask0, $marker, Object.create(Texture2d.prototype));
  }
  function Texture2d_init_$Init$_3(assetPath, name, props, $this) {
    Texture2d.call($this, props, name, new AsyncTextureLoader(Texture2d$_init_$slambda_64v0yn_0(assetPath, props, null)));
    return $this;
  }
  function Texture2d_init_$Init$_4(assetPath, name, props, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      name = null;
    if (!(($mask0 & 4) === 0)) {
      props = TextureProps_init_$Create$(null, null, null, null, null, null, false, 0, 255, null);
    }
    Texture2d_init_$Init$_3(assetPath, name, props, $this);
    return $this;
  }
  function Texture2d_init_$Create$_2(assetPath, name, props, $mask0, $marker) {
    return Texture2d_init_$Init$_4(assetPath, name, props, $mask0, $marker, Object.create(Texture2d.prototype));
  }
  function Texture2d$_init_$slambda_64v0yn($assetPath, $props, resultContinuation) {
    this.r54_1 = $assetPath;
    this.s54_1 = $props;
    CoroutineImpl.call(this, resultContinuation);
  }
  Texture2d$_init_$slambda_64v0yn.prototype.v54 = function ($this$$receiver, it, $cont) {
    var tmp = this.w54($this$$receiver, it, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  Texture2d$_init_$slambda_64v0yn.prototype.kc = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE();
    return this.v54(tmp, p2 instanceof AssetManager ? p2 : THROW_CCE(), $cont);
  };
  Texture2d$_init_$slambda_64v0yn.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 2;
            this.k7_1 = 1;
            suspendResult = this.u54_1.q1y(this.r54_1, this.s54_1.b54_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return suspendResult;
          case 2:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 2) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  Texture2d$_init_$slambda_64v0yn.prototype.w54 = function ($this$$receiver, it, completion) {
    var i = new Texture2d$_init_$slambda_64v0yn(this.r54_1, this.s54_1, completion);
    i.t54_1 = $this$$receiver;
    i.u54_1 = it;
    return i;
  };
  Texture2d$_init_$slambda_64v0yn.$metadata$ = classMeta('Texture2d$<init>$slambda', undefined, undefined, undefined, [2], CoroutineImpl.prototype);
  function Texture2d$_init_$slambda_64v0yn_0($assetPath, $props, resultContinuation) {
    var i = new Texture2d$_init_$slambda_64v0yn($assetPath, $props, resultContinuation);
    var l = function ($this$$receiver, it, $cont) {
      return i.v54($this$$receiver, it, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function Texture2d(props, name, loader) {
    Texture.call(this, props, name, loader);
    this.c55_1 = '2D';
  }
  Texture2d.prototype.k4s = function () {
    return this.c55_1;
  };
  Texture2d.$metadata$ = classMeta('Texture2d', undefined, undefined, undefined, undefined, Texture.prototype);
  function TextureData() {
    this.x1w_1 = 0;
    this.y1w_1 = 0;
    this.z1w_1 = 0;
    this.a1x_1 = TexFormat_RGBA_getInstance();
  }
  TextureData.prototype.h55 = function (_set____db54di) {
    this.x1w_1 = _set____db54di;
  };
  TextureData.prototype.u3z = function () {
    return this.x1w_1;
  };
  TextureData.prototype.i55 = function (_set____db54di) {
    this.y1w_1 = _set____db54di;
  };
  TextureData.prototype.v3z = function () {
    return this.y1w_1;
  };
  TextureData.prototype.j55 = function (_set____db54di) {
    this.z1w_1 = _set____db54di;
  };
  TextureData.prototype.k55 = function () {
    return this.z1w_1;
  };
  TextureData.prototype.l55 = function (_set____db54di) {
    this.a1x_1 = _set____db54di;
  };
  TextureData.$metadata$ = classMeta('TextureData');
  function Texture3d(props, name, loader) {
    Texture.call(this, props, name, loader);
    this.s55_1 = '3D';
  }
  Texture3d.prototype.k4s = function () {
    return this.s55_1;
  };
  Texture3d.$metadata$ = classMeta('Texture3d', undefined, undefined, undefined, undefined, Texture.prototype);
  function Companion_34() {
    Companion_instance_34 = this;
  }
  Companion_34.prototype.t55 = function (color) {
    var buf = createUint8Buffer(4);
    var tmp$ret$0;
    {
      var tmp0_roundToInt = color.u55() * 255.0;
      tmp$ret$0 = roundToInt(tmp0_roundToInt);
    }
    buf.v55(0, toByte(tmp$ret$0));
    var tmp$ret$1;
    {
      var tmp1_roundToInt = color.w55() * 255.0;
      tmp$ret$1 = roundToInt(tmp1_roundToInt);
    }
    buf.v55(1, toByte(tmp$ret$1));
    var tmp$ret$2;
    {
      var tmp2_roundToInt = color.x55() * 255.0;
      tmp$ret$2 = roundToInt(tmp2_roundToInt);
    }
    buf.v55(2, toByte(tmp$ret$2));
    var tmp$ret$3;
    {
      var tmp3_roundToInt = color.y55() * 255.0;
      tmp$ret$3 = roundToInt(tmp3_roundToInt);
    }
    buf.v55(3, toByte(tmp$ret$3));
    return new TextureData2d(buf, 1, 1, TexFormat_RGBA_getInstance());
  };
  Companion_34.$metadata$ = objectMeta('Companion');
  var Companion_instance_34;
  function Companion_getInstance_34() {
    if (Companion_instance_34 == null)
      new Companion_34();
    return Companion_instance_34;
  }
  function TextureData2d(data, width, height, format) {
    Companion_getInstance_34();
    TextureData.call(this);
    this.d56_1 = data;
    this.h55(width);
    this.i55(height);
    this.j55(1);
    this.l55(format);
  }
  TextureData2d.prototype.m55 = function () {
    return this.d56_1;
  };
  TextureData2d.$metadata$ = classMeta('TextureData2d', undefined, undefined, undefined, undefined, TextureData.prototype);
  var LoadingState_NOT_LOADED_instance;
  var LoadingState_LOADING_instance;
  var LoadingState_LOADED_instance;
  var LoadingState_LOADING_FAILED_instance;
  var LoadingState_entriesInitialized;
  function LoadingState_initEntries() {
    if (LoadingState_entriesInitialized)
      return Unit_getInstance();
    LoadingState_entriesInitialized = true;
    LoadingState_NOT_LOADED_instance = new LoadingState('NOT_LOADED', 0);
    LoadingState_LOADING_instance = new LoadingState('LOADING', 1);
    LoadingState_LOADED_instance = new LoadingState('LOADED', 2);
    LoadingState_LOADING_FAILED_instance = new LoadingState('LOADING_FAILED', 3);
  }
  function LoadingState(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  LoadingState.$metadata$ = classMeta('LoadingState', undefined, undefined, undefined, undefined, Enum.prototype);
  function Companion_35() {
    Companion_instance_35 = this;
  }
  Companion_35.prototype.e56 = function (width, height, layers, mipLevels, bytesPerPx) {
    var mipFac = 1.0;
    var mipAdd = 0.25;
    var inductionVariable = 2;
    if (inductionVariable <= mipLevels)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        mipFac = mipFac + mipAdd;
        mipAdd = mipAdd * 0.25;
      }
       while (!(i === mipLevels));
    return roundToInt(imul(imul(imul(width, height), layers), bytesPerPx) * mipFac);
  };
  Companion_35.$metadata$ = objectMeta('Companion');
  var Companion_instance_35;
  function Companion_getInstance_35() {
    if (Companion_instance_35 == null)
      new Companion_35();
    return Companion_instance_35;
  }
  function LoadingState_NOT_LOADED_getInstance() {
    LoadingState_initEntries();
    return LoadingState_NOT_LOADED_instance;
  }
  function LoadingState_LOADED_getInstance() {
    LoadingState_initEntries();
    return LoadingState_LOADED_instance;
  }
  function LoadingState_LOADING_FAILED_getInstance() {
    LoadingState_initEntries();
    return LoadingState_LOADING_FAILED_instance;
  }
  function Texture(props, name, loader) {
    Companion_getInstance_35();
    this.u4z_1 = props;
    this.v4z_1 = name;
    this.w4z_1 = loader;
    this.x4z_1 = null;
    this.y4z_1 = LoadingState_NOT_LOADED_getInstance();
  }
  Texture.prototype.l4s = function () {
    return this.u4z_1;
  };
  Texture.prototype.f56 = function () {
    return this.w4z_1;
  };
  Texture.prototype.d55 = function (_set____db54di) {
    this.x4z_1 = _set____db54di;
  };
  Texture.prototype.e55 = function () {
    return this.x4z_1;
  };
  Texture.prototype.f55 = function (_set____db54di) {
    this.y4z_1 = _set____db54di;
  };
  Texture.prototype.g55 = function () {
    return this.y4z_1;
  };
  Texture.prototype.n1a = function () {
    var tmp0_safe_receiver = this.x4z_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.n1a();
    }
    this.x4z_1 = null;
    this.y4z_1 = LoadingState_NOT_LOADED_getInstance();
  };
  Texture.prototype.toString = function () {
    return 'Texture' + this.k4s() + '(name: ' + this.v4z_1 + ')';
  };
  Texture.$metadata$ = classMeta('Texture');
  function BufferedTexture2d(data, props, name) {
    Texture2d.call(this, props, name, new BufferedTextureLoader(data));
  }
  BufferedTexture2d.prototype.n1y = function (data) {
    var tmp = this.f56();
    (tmp instanceof BufferedTextureLoader ? tmp : THROW_CCE()).g56_1 = data;
    if (this.g55().equals(LoadingState_LOADED_getInstance())) {
      this.n1a();
    }
  };
  BufferedTexture2d.$metadata$ = classMeta('BufferedTexture2d', undefined, undefined, undefined, undefined, Texture2d.prototype);
  function TextureDataCube() {
  }
  TextureDataCube.$metadata$ = classMeta('TextureDataCube', undefined, undefined, undefined, undefined, TextureData.prototype);
  function TextureCube() {
  }
  TextureCube.$metadata$ = classMeta('TextureCube', undefined, undefined, undefined, undefined, Texture.prototype);
  function Texture1d() {
  }
  Texture1d.$metadata$ = classMeta('Texture1d', undefined, undefined, undefined, undefined, Texture.prototype);
  function TextureData1d() {
  }
  TextureData1d.$metadata$ = classMeta('TextureData1d', undefined, undefined, undefined, undefined, TextureData.prototype);
  function getColorTextureData($this, color) {
    var tmp$ret$1;
    {
      var tmp0_getOrPut = $this.h56_1;
      var value = tmp0_getOrPut.b3(color);
      var tmp;
      if (value == null) {
        var tmp$ret$0;
        {
          tmp$ret$0 = Companion_getInstance_34().t55(color);
        }
        var answer = tmp$ret$0;
        tmp0_getOrPut.a(color, answer);
        tmp = answer;
      } else {
        tmp = value;
      }
      tmp$ret$1 = tmp;
    }
    return tmp$ret$1;
  }
  function Companion_36() {
    Companion_instance_36 = this;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$();
    }
    tmp.h56_1 = tmp$ret$0;
  }
  Companion_36.$metadata$ = objectMeta('Companion');
  var Companion_instance_36;
  function Companion_getInstance_36() {
    if (Companion_instance_36 == null)
      new Companion_36();
    return Companion_instance_36;
  }
  function SingleColorTexture(color) {
    Companion_getInstance_36();
    Texture2d.call(this, TextureProps_init_$Create$(null, null, null, null, FilterMethod_NEAREST_getInstance(), FilterMethod_NEAREST_getInstance(), false, 1, 15, null), color.toString(), new BufferedTextureLoader(getColorTextureData(Companion_getInstance_36(), color)));
    this.o56_1 = 'SingleColor';
  }
  SingleColorTexture.prototype.k4s = function () {
    return this.o56_1;
  };
  SingleColorTexture.$metadata$ = classMeta('SingleColorTexture', undefined, undefined, undefined, undefined, Texture2d.prototype);
  function TextureData3d() {
  }
  TextureData3d.$metadata$ = classMeta('TextureData3d', undefined, undefined, undefined, undefined, TextureData.prototype);
  function AddressMode_CLAMP_TO_EDGE_getInstance() {
    AddressMode_initEntries();
    return AddressMode_CLAMP_TO_EDGE_instance;
  }
  function AddressMode_REPEAT_getInstance() {
    AddressMode_initEntries();
    return AddressMode_REPEAT_instance;
  }
  function FilterMethod_NEAREST_getInstance() {
    FilterMethod_initEntries();
    return FilterMethod_NEAREST_instance;
  }
  function FilterMethod_LINEAR_getInstance() {
    FilterMethod_initEntries();
    return FilterMethod_LINEAR_instance;
  }
  function BufferedTextureLoader(data) {
    TextureLoader.call(this);
    this.g56_1 = data;
  }
  BufferedTextureLoader.$metadata$ = classMeta('BufferedTextureLoader', undefined, undefined, undefined, undefined, TextureLoader.prototype);
  function TextureLoader() {
  }
  TextureLoader.$metadata$ = classMeta('TextureLoader');
  function AsyncTextureLoader$loadTextureDataAsync$slambda(this$0, $ctx, resultContinuation) {
    this.x56_1 = this$0;
    this.y56_1 = $ctx;
    CoroutineImpl.call(this, resultContinuation);
  }
  AsyncTextureLoader$loadTextureDataAsync$slambda.prototype.a57 = function ($this$async, $cont) {
    var tmp = this.e1v($this$async, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  AsyncTextureLoader$loadTextureDataAsync$slambda.prototype.s7 = function (p1, $cont) {
    return this.a57((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  AsyncTextureLoader$loadTextureDataAsync$slambda.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 2;
            this.k7_1 = 1;
            suspendResult = this.x56_1.b57_1(this.z56_1, this.y56_1.q2d(), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return suspendResult;
          case 2:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 2) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  AsyncTextureLoader$loadTextureDataAsync$slambda.prototype.e1v = function ($this$async, completion) {
    var i = new AsyncTextureLoader$loadTextureDataAsync$slambda(this.x56_1, this.y56_1, completion);
    i.z56_1 = $this$async;
    return i;
  };
  AsyncTextureLoader$loadTextureDataAsync$slambda.$metadata$ = classMeta('AsyncTextureLoader$loadTextureDataAsync$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function AsyncTextureLoader$loadTextureDataAsync$slambda_0(this$0, $ctx, resultContinuation) {
    var i = new AsyncTextureLoader$loadTextureDataAsync$slambda(this$0, $ctx, resultContinuation);
    var l = function ($this$async, $cont) {
      return i.a57($this$async, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function AsyncTextureLoader(loader) {
    TextureLoader.call(this);
    this.b57_1 = loader;
    this.c57_1 = null;
  }
  AsyncTextureLoader.prototype.d57 = function (ctx) {
    var tmp0_elvis_lhs = this.c57_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp_0 = ctx.q2d();
      tmp = async$default(tmp_0, null, null, AsyncTextureLoader$loadTextureDataAsync$slambda_0(this, ctx, null), 3, null);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var def = tmp;
    if (this.c57_1 == null) {
      this.c57_1 = def;
    }
    return def;
  };
  AsyncTextureLoader.$metadata$ = classMeta('AsyncTextureLoader', undefined, undefined, undefined, undefined, TextureLoader.prototype);
  function SyncTextureLoader() {
  }
  SyncTextureLoader.prototype.f57 = function (ctx) {
    return this.e57_1(ctx);
  };
  SyncTextureLoader.$metadata$ = classMeta('SyncTextureLoader', undefined, undefined, undefined, undefined, TextureLoader.prototype);
  function Uniform_init_$Init$(value, name, length, $mask0, $marker, $this) {
    if (!(($mask0 & 4) === 0))
      length = 1;
    Uniform.call($this, value, name, length);
    return $this;
  }
  function Uniform(value, name, length) {
    this.k2u_1 = value;
    this.l2u_1 = name;
    this.m2u_1 = length;
  }
  Uniform.prototype.n2u = function (_set____db54di) {
    this.k2u_1 = _set____db54di;
  };
  Uniform.prototype.n2 = function () {
    return this.k2u_1;
  };
  Uniform.prototype.il = function () {
    return this.l2u_1;
  };
  Uniform.prototype.kd = function () {
    return this.m2u_1;
  };
  Uniform.prototype.g57 = function (minRequired, available) {
    if (available < minRequired) {
      {
        var tmp0_error = 'Insufficient buffer space: ' + minRequired + ' > ' + available;
        throw IllegalStateException_init_$Create$(toString(tmp0_error));
      }
    }
  };
  Uniform.prototype.h57 = function (buffer, padLen) {
    if (padLen > 0) {
      buffer.i57(padLen);
    }
  };
  Uniform.prototype.toString = function () {
    return this.l2u_1;
  };
  Uniform.$metadata$ = classMeta('Uniform');
  function Uniform1f(name) {
    Uniform_init_$Init$(0.0, name, 0, 4, null, this);
  }
  Uniform1f.prototype.x4s = function (buffer, len) {
    this.g57(4, len);
    buffer.m57(this.n2());
    this.h57(buffer, len - 4 | 0);
  };
  Uniform1f.$metadata$ = classMeta('Uniform1f', undefined, undefined, undefined, undefined, Uniform.prototype);
  function Uniform2f(name) {
    var tmp = MutableVec2f_init_$Create$();
    Uniform_init_$Init$(tmp, name, 0, 4, null, this);
  }
  Uniform2f.prototype.x4s = function (buffer, len) {
    this.g57(8, len);
    buffer.q57(this.n2().t2i());
    this.h57(buffer, len - 8 | 0);
  };
  Uniform2f.$metadata$ = classMeta('Uniform2f', undefined, undefined, undefined, undefined, Uniform.prototype);
  function Uniform3f(name) {
    var tmp = MutableVec3f_init_$Create$();
    Uniform_init_$Init$(tmp, name, 0, 4, null, this);
  }
  Uniform3f.prototype.x4s = function (buffer, len) {
    this.g57(12, len);
    buffer.q57(this.n2().t2i());
    this.h57(buffer, len - 12 | 0);
  };
  Uniform3f.$metadata$ = classMeta('Uniform3f', undefined, undefined, undefined, undefined, Uniform.prototype);
  function Uniform4f(name) {
    var tmp = MutableVec4f_init_$Create$();
    Uniform_init_$Init$(tmp, name, 0, 4, null, this);
  }
  Uniform4f.prototype.x4s = function (buffer, len) {
    this.g57(16, len);
    buffer.q57(this.n2().t2i());
    this.h57(buffer, len - 16 | 0);
  };
  Uniform4f.$metadata$ = classMeta('Uniform4f', undefined, undefined, undefined, undefined, Uniform.prototype);
  function Uniform1i(name) {
    Uniform_init_$Init$(0, name, 0, 4, null, this);
  }
  Uniform1i.prototype.x4s = function (buffer, len) {
    this.g57(4, len);
    buffer.a58(this.n2());
    this.h57(buffer, len - 4 | 0);
  };
  Uniform1i.$metadata$ = classMeta('Uniform1i', undefined, undefined, undefined, undefined, Uniform.prototype);
  function Uniform2i(name) {
    var tmp = MutableVec2i_init_$Create$();
    Uniform_init_$Init$(tmp, name, 0, 4, null, this);
  }
  Uniform2i.prototype.x4s = function (buffer, len) {
    this.g57(8, len);
    buffer.e58(this.n2().t2i());
    this.h57(buffer, len - 8 | 0);
  };
  Uniform2i.$metadata$ = classMeta('Uniform2i', undefined, undefined, undefined, undefined, Uniform.prototype);
  function Uniform3i(name) {
    var tmp = MutableVec3i_init_$Create$();
    Uniform_init_$Init$(tmp, name, 0, 4, null, this);
  }
  Uniform3i.prototype.x4s = function (buffer, len) {
    this.g57(12, len);
    buffer.e58(this.n2().t2i());
    this.h57(buffer, len - 12 | 0);
  };
  Uniform3i.$metadata$ = classMeta('Uniform3i', undefined, undefined, undefined, undefined, Uniform.prototype);
  function Uniform4i(name) {
    var tmp = MutableVec4i_init_$Create$();
    Uniform_init_$Init$(tmp, name, 0, 4, null, this);
  }
  Uniform4i.prototype.x4s = function (buffer, len) {
    this.g57(16, len);
    buffer.e58(this.n2().t2i());
    this.h57(buffer, len - 16 | 0);
  };
  Uniform4i.$metadata$ = classMeta('Uniform4i', undefined, undefined, undefined, undefined, Uniform.prototype);
  function UniformMat3f(name) {
    var tmp = new Mat3f();
    Uniform_init_$Init$(tmp, name, 0, 4, null, this);
  }
  UniformMat3f.prototype.x4s = function (buffer, len) {
    this.g57(36, len);
    var padLen = (len - 36 | 0) / 3 | 0;
    var inductionVariable = 0;
    if (inductionVariable <= 2)
      do {
        var m = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        buffer.o58(this.n2().k2g_1, imul(m, 3), 3);
        this.h57(buffer, padLen);
      }
       while (inductionVariable <= 2);
  };
  UniformMat3f.$metadata$ = classMeta('UniformMat3f', undefined, undefined, undefined, undefined, Uniform.prototype);
  function UniformMat4f(name) {
    var tmp = new Mat4f();
    Uniform_init_$Init$(tmp, name, 0, 4, null, this);
  }
  UniformMat4f.prototype.x4s = function (buffer, len) {
    this.g57(64, len);
    buffer.q57(this.n2().l2h_1);
  };
  UniformMat4f.$metadata$ = classMeta('UniformMat4f', undefined, undefined, undefined, undefined, Uniform.prototype);
  function Uniform1fv(name, length) {
    Uniform.call(this, new Float32Array(length), name, length);
  }
  Uniform1fv.prototype.x4s = function (buffer, len) {
    this.g57(imul(4, this.kd()), len);
    var padLen = (len - imul(4, this.kd()) | 0) / this.kd() | 0;
    var inductionVariable = 0;
    var last = this.kd();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        buffer.m57(this.n2()[i]);
        this.h57(buffer, padLen);
      }
       while (inductionVariable < last);
  };
  Uniform1fv.$metadata$ = classMeta('Uniform1fv', undefined, undefined, undefined, undefined, Uniform.prototype);
  function Uniform2fv(name, length) {
    var tmp = 0;
    var tmp_0 = length;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(tmp_0), null);
    }
    var tmp_1 = tmp$ret$0;
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$1;
      {
        tmp$ret$1 = MutableVec2f_init_$Create$();
      }
      tmp_1[tmp_2] = tmp$ret$1;
      tmp = tmp + 1 | 0;
    }
    Uniform.call(this, tmp_1, name, length);
  }
  Uniform2fv.prototype.x4s = function (buffer, len) {
    this.g57(imul(8, this.kd()), len);
    var padLen = (len - imul(8, this.kd()) | 0) / this.kd() | 0;
    var inductionVariable = 0;
    var last = this.kd();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        buffer.q57(this.n2()[i].t2i());
        this.h57(buffer, padLen);
      }
       while (inductionVariable < last);
  };
  Uniform2fv.$metadata$ = classMeta('Uniform2fv', undefined, undefined, undefined, undefined, Uniform.prototype);
  function Uniform3fv(name, length) {
    var tmp = 0;
    var tmp_0 = length;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(tmp_0), null);
    }
    var tmp_1 = tmp$ret$0;
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$1;
      {
        tmp$ret$1 = MutableVec3f_init_$Create$();
      }
      tmp_1[tmp_2] = tmp$ret$1;
      tmp = tmp + 1 | 0;
    }
    Uniform.call(this, tmp_1, name, length);
  }
  Uniform3fv.prototype.x4s = function (buffer, len) {
    this.g57(imul(12, this.kd()), len);
    var padLen = (len - imul(12, this.kd()) | 0) / this.kd() | 0;
    var inductionVariable = 0;
    var last = this.kd();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        buffer.q57(this.n2()[i].t2i());
        this.h57(buffer, padLen);
      }
       while (inductionVariable < last);
  };
  Uniform3fv.$metadata$ = classMeta('Uniform3fv', undefined, undefined, undefined, undefined, Uniform.prototype);
  function Uniform4fv(name, length) {
    var tmp = 0;
    var tmp_0 = length;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(tmp_0), null);
    }
    var tmp_1 = tmp$ret$0;
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$1;
      {
        tmp$ret$1 = MutableVec4f_init_$Create$();
      }
      tmp_1[tmp_2] = tmp$ret$1;
      tmp = tmp + 1 | 0;
    }
    Uniform.call(this, tmp_1, name, length);
  }
  Uniform4fv.prototype.x4s = function (buffer, len) {
    this.g57(imul(16, this.kd()), len);
    var inductionVariable = 0;
    var last = this.kd();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        buffer.q57(this.n2()[i].t2i());
      }
       while (inductionVariable < last);
  };
  Uniform4fv.$metadata$ = classMeta('Uniform4fv', undefined, undefined, undefined, undefined, Uniform.prototype);
  function Uniform1iv(name, length) {
    Uniform.call(this, new Int32Array(length), name, length);
  }
  Uniform1iv.prototype.x4s = function (buffer, len) {
    this.g57(imul(4, this.kd()), len);
    var padLen = (len - imul(4, this.kd()) | 0) / this.kd() | 0;
    var inductionVariable = 0;
    var last = this.kd();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        buffer.a58(this.n2()[i]);
        this.h57(buffer, padLen);
      }
       while (inductionVariable < last);
  };
  Uniform1iv.$metadata$ = classMeta('Uniform1iv', undefined, undefined, undefined, undefined, Uniform.prototype);
  function Uniform2iv(name, length) {
    var tmp = 0;
    var tmp_0 = length;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(tmp_0), null);
    }
    var tmp_1 = tmp$ret$0;
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$1;
      {
        tmp$ret$1 = MutableVec2i_init_$Create$();
      }
      tmp_1[tmp_2] = tmp$ret$1;
      tmp = tmp + 1 | 0;
    }
    Uniform.call(this, tmp_1, name, length);
  }
  Uniform2iv.prototype.x4s = function (buffer, len) {
    this.g57(imul(8, this.kd()), len);
    var padLen = (len - imul(8, this.kd()) | 0) / this.kd() | 0;
    var inductionVariable = 0;
    var last = this.kd();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        buffer.e58(this.n2()[i].t2i());
        this.h57(buffer, padLen);
      }
       while (inductionVariable < last);
  };
  Uniform2iv.$metadata$ = classMeta('Uniform2iv', undefined, undefined, undefined, undefined, Uniform.prototype);
  function Uniform3iv(name, length) {
    var tmp = 0;
    var tmp_0 = length;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(tmp_0), null);
    }
    var tmp_1 = tmp$ret$0;
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$1;
      {
        tmp$ret$1 = MutableVec3i_init_$Create$();
      }
      tmp_1[tmp_2] = tmp$ret$1;
      tmp = tmp + 1 | 0;
    }
    Uniform.call(this, tmp_1, name, length);
  }
  Uniform3iv.prototype.x4s = function (buffer, len) {
    this.g57(imul(12, this.kd()), len);
    var padLen = (len - imul(12, this.kd()) | 0) / this.kd() | 0;
    var inductionVariable = 0;
    var last = this.kd();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        buffer.e58(this.n2()[i].t2i());
        this.h57(buffer, padLen);
      }
       while (inductionVariable < last);
  };
  Uniform3iv.$metadata$ = classMeta('Uniform3iv', undefined, undefined, undefined, undefined, Uniform.prototype);
  function Uniform4iv(name, length) {
    var tmp = 0;
    var tmp_0 = length;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(tmp_0), null);
    }
    var tmp_1 = tmp$ret$0;
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$1;
      {
        tmp$ret$1 = MutableVec4i_init_$Create$();
      }
      tmp_1[tmp_2] = tmp$ret$1;
      tmp = tmp + 1 | 0;
    }
    Uniform.call(this, tmp_1, name, length);
  }
  Uniform4iv.prototype.x4s = function (buffer, len) {
    this.g57(imul(16, this.kd()), len);
    var inductionVariable = 0;
    var last = this.kd();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        buffer.e58(this.n2()[i].t2i());
      }
       while (inductionVariable < last);
  };
  Uniform4iv.$metadata$ = classMeta('Uniform4iv', undefined, undefined, undefined, undefined, Uniform.prototype);
  function UniformMat3fv(name, length) {
    var tmp = 0;
    var tmp_0 = length;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(tmp_0), null);
    }
    var tmp_1 = tmp$ret$0;
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$1;
      {
        tmp$ret$1 = new Mat3f();
      }
      tmp_1[tmp_2] = tmp$ret$1;
      tmp = tmp + 1 | 0;
    }
    Uniform.call(this, tmp_1, name, length);
  }
  UniformMat3fv.prototype.x4s = function (buffer, len) {
    this.g57(imul(36, this.kd()), len);
    var padLen = (len - imul(36, this.kd()) | 0) / imul(3, this.kd()) | 0;
    var inductionVariable = 0;
    var last = this.kd();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var inductionVariable_0 = 0;
        if (inductionVariable_0 <= 2)
          do {
            var m = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            buffer.o58(this.n2()[i].k2g_1, imul(m, 3), 3);
            this.h57(buffer, padLen);
          }
           while (inductionVariable_0 <= 2);
      }
       while (inductionVariable < last);
  };
  UniformMat3fv.$metadata$ = classMeta('UniformMat3fv', undefined, undefined, undefined, undefined, Uniform.prototype);
  function UniformMat4fv(name, length) {
    var tmp = 0;
    var tmp_0 = length;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(tmp_0), null);
    }
    var tmp_1 = tmp$ret$0;
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$1;
      {
        tmp$ret$1 = new Mat4f();
      }
      tmp_1[tmp_2] = tmp$ret$1;
      tmp = tmp + 1 | 0;
    }
    Uniform.call(this, tmp_1, name, length);
  }
  UniformMat4fv.prototype.x4s = function (buffer, len) {
    this.g57(imul(64, this.kd()), len);
    var inductionVariable = 0;
    var last = this.kd();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        buffer.q57(this.n2()[i].l2h_1);
      }
       while (inductionVariable < last);
  };
  UniformMat4fv.$metadata$ = classMeta('UniformMat4fv', undefined, undefined, undefined, undefined, Uniform.prototype);
  function UniformColor_0() {
  }
  UniformColor_0.$metadata$ = classMeta('UniformColor', undefined, undefined, undefined, undefined, Uniform.prototype);
  function Binding(binding, inputRate, vertexAttributes, strideBytes) {
    this.w59_1 = binding;
    this.x59_1 = inputRate;
    this.y59_1 = vertexAttributes;
    this.z59_1 = strideBytes;
    var tmp$ret$2;
    {
      var tmp0_toULong = this.w59_1;
      tmp$ret$2 = _ULong___init__impl__c78o9k(toLong(tmp0_toULong));
    }
    var hash = tmp$ret$2;
    var tmp$ret$5;
    {
      var tmp$ret$3;
      {
        var tmp1_times = hash;
        tmp$ret$3 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_times).ja(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(71023, 0)))));
      }
      var tmp3_plus = tmp$ret$3;
      var tmp$ret$4;
      {
        var tmp2_toULong = this.x59_1.hashCode();
        tmp$ret$4 = _ULong___init__impl__c78o9k(toLong(tmp2_toULong));
      }
      var tmp4_plus = tmp$ret$4;
      tmp$ret$5 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp3_plus).ka(_ULong___get_data__impl__fggpzb(tmp4_plus)));
    }
    hash = tmp$ret$5;
    var tmp$ret$8;
    {
      var tmp$ret$6;
      {
        var tmp5_times = hash;
        tmp$ret$6 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp5_times).ja(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(71023, 0)))));
      }
      var tmp7_plus = tmp$ret$6;
      var tmp$ret$7;
      {
        var tmp6_toULong = this.z59_1;
        tmp$ret$7 = _ULong___init__impl__c78o9k(toLong(tmp6_toULong));
      }
      var tmp8_plus = tmp$ret$7;
      tmp$ret$8 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp7_plus).ka(_ULong___get_data__impl__fggpzb(tmp8_plus)));
    }
    hash = tmp$ret$8;
    {
      var tmp9_forEach = this.y59_1;
      var tmp0_iterator = tmp9_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          var tmp$ret$11;
          {
            var tmp$ret$9;
            {
              var tmp0_times = hash;
              tmp$ret$9 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_times).ja(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(71023, 0)))));
            }
            var tmp2_plus = tmp$ret$9;
            var tmp$ret$10;
            {
              var tmp1_toULong = element.hashCode();
              tmp$ret$10 = _ULong___init__impl__c78o9k(toLong(tmp1_toULong));
            }
            var tmp3_plus_0 = tmp$ret$10;
            tmp$ret$11 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp2_plus).ka(_ULong___get_data__impl__fggpzb(tmp3_plus_0)));
          }
          hash = tmp$ret$11;
        }
      }
    }
    this.a5a_1 = hash;
  }
  Binding.prototype.x4t = function () {
    return this.w59_1;
  };
  Binding.prototype.v3q = function () {
    return this.x59_1;
  };
  Binding.prototype.b5a = function () {
    return this.y59_1;
  };
  Binding.prototype.l4t = function () {
    return this.a5a_1;
  };
  Binding.prototype.toString = function () {
    return 'Binding(binding=' + this.w59_1 + ', inputRate=' + this.x59_1 + ', vertexAttributes=' + this.y59_1 + ', strideBytes=' + this.z59_1 + ')';
  };
  Binding.prototype.hashCode = function () {
    var result = this.w59_1;
    result = imul(result, 31) + this.x59_1.hashCode() | 0;
    result = imul(result, 31) + hashCode(this.y59_1) | 0;
    result = imul(result, 31) + this.z59_1 | 0;
    return result;
  };
  Binding.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Binding))
      return false;
    var tmp0_other_with_cast = other instanceof Binding ? other : THROW_CCE();
    if (!(this.w59_1 === tmp0_other_with_cast.w59_1))
      return false;
    if (!this.x59_1.equals(tmp0_other_with_cast.x59_1))
      return false;
    if (!equals(this.y59_1, tmp0_other_with_cast.y59_1))
      return false;
    if (!(this.z59_1 === tmp0_other_with_cast.z59_1))
      return false;
    return true;
  };
  Binding.$metadata$ = classMeta('Binding');
  function VertexAttribute(location, offset, attribute) {
    this.c5a_1 = location;
    this.d5a_1 = offset;
    this.e5a_1 = attribute;
  }
  VertexAttribute.prototype.s3p = function () {
    return this.c5a_1;
  };
  VertexAttribute.prototype.f5a = function () {
    return this.e5a_1;
  };
  VertexAttribute.prototype.toString = function () {
    return 'VertexAttribute(location=' + this.c5a_1 + ', offset=' + this.d5a_1 + ', attribute=' + this.e5a_1 + ')';
  };
  VertexAttribute.prototype.hashCode = function () {
    var result = this.c5a_1;
    result = imul(result, 31) + this.d5a_1 | 0;
    result = imul(result, 31) + this.e5a_1.hashCode() | 0;
    return result;
  };
  VertexAttribute.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof VertexAttribute))
      return false;
    var tmp0_other_with_cast = other instanceof VertexAttribute ? other : THROW_CCE();
    if (!(this.c5a_1 === tmp0_other_with_cast.c5a_1))
      return false;
    if (!(this.d5a_1 === tmp0_other_with_cast.d5a_1))
      return false;
    if (!this.e5a_1.equals(tmp0_other_with_cast.e5a_1))
      return false;
    return true;
  };
  VertexAttribute.$metadata$ = classMeta('VertexAttribute');
  function Builder_7() {
    this.k2t_1 = PrimitiveType_TRIANGLES_getInstance();
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.l2t_1 = tmp$ret$0;
  }
  Builder_7.prototype.s51 = function () {
    return new VertexLayout(copy(this.l2t_1), this.k2t_1);
  };
  Builder_7.$metadata$ = classMeta('Builder');
  function VertexLayout(bindings, primitiveType) {
    this.z51_1 = bindings;
    this.a52_1 = primitiveType;
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_toULong = this.a52_1.hashCode();
        tmp$ret$0 = _ULong___init__impl__c78o9k(toLong(tmp0_toULong));
      }
      var tmp1_times = tmp$ret$0;
      tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(71023, 0))).ja(_ULong___get_data__impl__fggpzb(tmp1_times)));
    }
    var hash = tmp$ret$1;
    {
      var tmp2_forEach = this.z51_1;
      var tmp0_iterator = tmp2_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          var tmp$ret$3;
          {
            var tmp$ret$2;
            {
              var tmp0_times = hash;
              tmp$ret$2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_times).ja(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(71023, 0)))));
            }
            var tmp1_plus = tmp$ret$2;
            var tmp2_plus = element.a5a_1;
            tmp$ret$3 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_plus).ka(_ULong___get_data__impl__fggpzb(tmp2_plus)));
          }
          hash = tmp$ret$3;
        }
      }
    }
    this.b52_1 = hash;
  }
  VertexLayout.prototype.g5a = function () {
    return this.a52_1;
  };
  VertexLayout.$metadata$ = classMeta('VertexLayout');
  var InputRate_VERTEX_instance;
  var InputRate_INSTANCE_instance;
  var InputRate_entriesInitialized;
  function InputRate_initEntries() {
    if (InputRate_entriesInitialized)
      return Unit_getInstance();
    InputRate_entriesInitialized = true;
    InputRate_VERTEX_instance = new InputRate('VERTEX', 0);
    InputRate_INSTANCE_instance = new InputRate('INSTANCE', 1);
  }
  function InputRate(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  InputRate.$metadata$ = classMeta('InputRate', undefined, undefined, undefined, undefined, Enum.prototype);
  function InputRate_VERTEX_getInstance() {
    InputRate_initEntries();
    return InputRate_VERTEX_instance;
  }
  function InputRate_INSTANCE_getInstance() {
    InputRate_initEntries();
    return InputRate_INSTANCE_instance;
  }
  function DrawCommand(renderPass, mesh) {
    this.z38_1 = renderPass;
    this.a39_1 = mesh;
    this.b39_1 = this.a39_1.e2r_1;
    this.c39_1 = null;
    this.d39_1 = new Mat4f();
    this.e39_1 = new Mat4f();
    this.f39_1 = new Mat4f();
    this.g39_1 = new Mat4f();
    this.h39_1 = new Mat4d();
  }
  DrawCommand.prototype.h4r = function () {
    return this.a39_1;
  };
  DrawCommand.prototype.h5a = function () {
    return this.b39_1;
  };
  DrawCommand.prototype.i5a = function (mesh, ctx) {
    this.a39_1 = mesh;
    this.b39_1 = mesh.e2r_1;
    this.c39_1 = mesh.k4k(ctx);
    this.j5a();
  };
  DrawCommand.prototype.j5a = function () {
    this.d39_1.b2h(this.a39_1.r4k());
    this.e39_1.b2h(this.z38_1.a4z().j4y_1);
    this.f39_1.b2h(this.z38_1.a4z().i4y_1);
    this.z38_1.a4z().k5a().a2h(this.a39_1.r4k(), this.h39_1);
    this.g39_1.b2h(this.h39_1);
  };
  DrawCommand.$metadata$ = classMeta('DrawCommand');
  function DrawQueue(renderPass) {
    this.w52_1 = renderPass;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.x52_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = ArrayList_init_$Create$_0();
    }
    tmp_0.y52_1 = tmp$ret$1;
  }
  DrawQueue.prototype.l5a = function () {
    return this.x52_1;
  };
  DrawQueue.prototype.t7 = function () {
    this.y52_1.o1(this.x52_1);
    this.x52_1.t7();
  };
  DrawQueue.prototype.q4z = function (mesh, ctx) {
    var tmp;
    var tmp$ret$0;
    {
      var tmp0_isNotEmpty = this.y52_1;
      tmp$ret$0 = !tmp0_isNotEmpty.q();
    }
    if (tmp$ret$0) {
      tmp = this.y52_1.d4(get_lastIndex(this.y52_1));
    } else {
      tmp = new DrawCommand(this.w52_1, mesh);
    }
    var cmd = tmp;
    cmd.i5a(mesh, ctx);
    this.x52_1.b(cmd);
    return cmd;
  };
  DrawQueue.$metadata$ = classMeta('DrawQueue');
  function brdfLutShader($this) {
    var tmp$ret$0;
    {
      var tmp0_apply = new KslProgram('BRDF LUT');
      {
      }
      {
        var uv = tmp0_apply.t31('uv', null, 2, null);
        FullscreenShaderUtil_getInstance().l4u(tmp0_apply, uv);
        tmp0_apply.k31(BrdfLutPass$brdfLutShader$lambda(uv));
      }
      tmp$ret$0 = tmp0_apply;
    }
    var prog = tmp$ret$0;
    return new KslShader(prog, FullscreenShaderUtil_getInstance().i4u_1);
  }
  function BrdfLutPass$lambda$lambda(this$0, $ctx) {
    return function (it) {
      this$0.l4k($ctx);
      return Unit_getInstance();
    };
  }
  function BrdfLutPass$lambda(this$0, $parentScene) {
    return function (ctx) {
      var tmp$ret$3;
      {
        var tmp$ret$2;
        {
          var tmp2_dExt = Log_getInstance();
          var tmp$ret$1;
          {
            var tmp1_logExt = Level_DEBUG_getInstance();
            var tmp0_log = getKClassFromExpression(this$0).ei();
            var tmp;
            if (tmp1_logExt.e1w_1 >= tmp2_dExt.y1v_1.e1w_1) {
              var tmp_0 = tmp2_dExt.z1v_1;
              var tmp$ret$0;
              {
                tmp$ret$0 = 'Generated BRDF look-up table';
              }
              tmp = tmp_0(tmp1_logExt, tmp0_log, tmp$ret$0);
            }
            tmp$ret$1 = tmp;
          }
          tmp$ret$2 = tmp$ret$1;
        }
        tmp$ret$3 = tmp$ret$2;
      }
      var tmp_1;
      if (this$0.n5b_1) {
        $parentScene.o5b(this$0);
        tmp_1 = ctx.g2f(1, BrdfLutPass$lambda$lambda(this$0, ctx));
      } else {
        tmp_1 = this$0.y4y(false);
      }
      return Unit_getInstance();
    };
  }
  function BrdfLutPass$brdfLutShader$lambda$lambda$lambda($roughness, $nDotV) {
    return function ($this$body) {
      var tmp = div(times_2($roughness, $roughness), $this$body.d38(2.0));
      var k = $this$body.g3n(tmp, null, 2, null);
      var denom = plus_2(times_2($nDotV, minus_1($this$body.d38(1.0), k)), k);
      return div($nDotV, denom);
    };
  }
  function BrdfLutPass$brdfLutShader$lambda$lambda() {
    return function ($this$functionFloat1) {
      var nDotV = $this$functionFloat1.e3l('nDotV');
      var roughness = $this$functionFloat1.e3l('roughness');
      $this$functionFloat1.o38(BrdfLutPass$brdfLutShader$lambda$lambda$lambda(roughness, nDotV));
      return Unit_getInstance();
    };
  }
  function BrdfLutPass$brdfLutShader$lambda$lambda$lambda_0($n, $v, $l, $geometrySchlickGgx, $roughness) {
    return function ($this$body) {
      var tmp = $this$body.e3o($this$body.b3o($n, $v), $this$body.d38(0.0));
      var nDotV = $this$body.g3n(tmp, null, 2, null);
      var tmp_0 = $this$body.e3o($this$body.b3o($n, $l), $this$body.d38(0.0));
      var nDotL = $this$body.g3n(tmp_0, null, 2, null);
      var tmp_1 = $this$body.x3n($geometrySchlickGgx, [nDotL, $roughness]);
      var ggx1 = $this$body.g3n(tmp_1, null, 2, null);
      var tmp_2 = $this$body.x3n($geometrySchlickGgx, [nDotV, $roughness]);
      var ggx2 = $this$body.g3n(tmp_2, null, 2, null);
      return times_2(ggx1, ggx2);
    };
  }
  function BrdfLutPass$brdfLutShader$lambda$lambda_0($geometrySchlickGgx) {
    return function ($this$functionFloat1) {
      var n = $this$functionFloat1.n38('n');
      var v = $this$functionFloat1.n38('v');
      var l = $this$functionFloat1.n38('l');
      var roughness = $this$functionFloat1.e3l('roughness');
      $this$functionFloat1.o38(BrdfLutPass$brdfLutShader$lambda$lambda$lambda_0(n, v, l, $geometrySchlickGgx, roughness));
      return Unit_getInstance();
    };
  }
  function BrdfLutPass$brdfLutShader$lambda$lambda$lambda$lambda$lambda($geometrySmith, $n, $v, $l, $roughness, $vDotH, $nDotH, $nDotV, $a, $b) {
    return function ($this$if) {
      var tmp = $this$if.x3n($geometrySmith, [$n, $v, $l, $roughness]);
      var g = $this$if.g3n(tmp, null, 2, null);
      var tmp_0 = div(times_2(g, $vDotH), times_2($nDotH, $nDotV));
      var gVis = $this$if.g3n(tmp_0, null, 2, null);
      var tmp_1 = $this$if.h3o(minus_1($this$if.d38(1.0), $vDotH), $this$if.d38(5.0));
      var fc = $this$if.g3n(tmp_1, null, 2, null);
      $this$if.o33($a, times_2(minus_1($this$if.d38(1.0), fc), gVis));
      $this$if.o33($b, times_2(fc, gVis));
      return Unit_getInstance();
    };
  }
  function BrdfLutPass$brdfLutShader$lambda$lambda$lambda$lambda($sampleCount, $n, $roughness, $v, $geometrySmith, $nDotV, $a, $b) {
    return function ($this$fori, i) {
      var tmp = hammersley($this$fori, i, $sampleCount);
      var xi = $this$fori.i3n(tmp, null, 2, null);
      var tmp_0 = importanceSampleGgx($this$fori, xi, $n, $roughness);
      var h = $this$fori.u30(tmp_0, null, 2, null);
      var tmp_1 = minus(times_3(times_2($this$fori.d38(2.0), $this$fori.b3o($v, h)), h), $v);
      var l = $this$fori.u30(tmp_1, null, 2, null);
      var tmp_2 = $this$fori.e3o(get_z(l), $this$fori.d38(0.0));
      var nDotL = $this$fori.g3n(tmp_2, null, 2, null);
      var tmp_3 = $this$fori.e3o(get_z(h), $this$fori.d38(0.0));
      var nDotH = $this$fori.g3n(tmp_3, null, 2, null);
      var tmp_4 = $this$fori.e3o($this$fori.b3o($v, h), $this$fori.d38(0.0));
      var vDotH = $this$fori.g3n(tmp_4, null, 2, null);
      var tmp_5 = gt(nDotL, $this$fori.d38(0.0));
      $this$fori.s3n(tmp_5, BrdfLutPass$brdfLutShader$lambda$lambda$lambda$lambda$lambda($geometrySmith, $n, $v, l, $roughness, vDotH, nDotH, $nDotV, $a, $b));
      return Unit_getInstance();
    };
  }
  function BrdfLutPass$brdfLutShader$lambda$lambda$lambda_1($nDotV, $roughness, $geometrySmith) {
    return function ($this$body) {
      var v = $this$body.j3n($this$body.b3n($this$body.j3o(minus_1($this$body.d38(1.0), times_2($nDotV, $nDotV))), $this$body.d38(0.0), $nDotV), 'v');
      var a = $this$body.f3n($this$body.d38(0.0), 'a');
      var b = $this$body.f3n($this$body.d38(0.0), 'b');
      var n = $this$body.j3n($this$body.z35(Companion_getInstance_9().g2k_1), 'n');
      var sampleCount = $this$body.w3m(1024);
      var tmp = $this$body.w3m(0);
      $this$body.t3n(tmp, sampleCount, BrdfLutPass$brdfLutShader$lambda$lambda$lambda$lambda(sampleCount, n, $roughness, v, $geometrySmith, $nDotV, a, b));
      return $this$body.a3n(div(a, toFloat1(sampleCount)), div(b, toFloat1(sampleCount)));
    };
  }
  function BrdfLutPass$brdfLutShader$lambda$lambda_1($geometrySmith) {
    return function ($this$functionFloat2) {
      var nDotV = $this$functionFloat2.e3l('nDotV');
      var roughness = $this$functionFloat2.e3l('roughness');
      $this$functionFloat2.o38(BrdfLutPass$brdfLutShader$lambda$lambda$lambda_1(nDotV, roughness, $geometrySmith));
      return Unit_getInstance();
    };
  }
  function BrdfLutPass$brdfLutShader$lambda$lambda_2($integrateBrdf, $uv, $this_fragmentStage) {
    return function ($this$main) {
      var tmp = $this$main.s37($integrateBrdf, [get_x($uv.q36()), get_y($uv.q36())]);
      var integratedBrdf = $this$main.i3n(tmp, null, 2, null);
      var tmp_0 = $this$main.c3n(get_x(integratedBrdf), get_y(integratedBrdf), $this$main.d38(0.0), $this$main.d38(1.0));
      $this_fragmentStage.r3p($this$main, tmp_0, 0, 2, null);
      return Unit_getInstance();
    };
  }
  function BrdfLutPass$brdfLutShader$lambda($uv) {
    return function ($this$fragmentStage) {
      var geometrySchlickGgx = functionFloat1($this$fragmentStage, 'geometrySchlickGgx', BrdfLutPass$brdfLutShader$lambda$lambda());
      var geometrySmith = functionFloat1($this$fragmentStage, 'geometrySmith', BrdfLutPass$brdfLutShader$lambda$lambda_0(geometrySchlickGgx));
      var integrateBrdf = functionFloat2($this$fragmentStage, 'integrateBrdf', BrdfLutPass$brdfLutShader$lambda$lambda_1(geometrySmith));
      $this$fragmentStage.i30(BrdfLutPass$brdfLutShader$lambda$lambda_2(integrateBrdf, $uv, $this$fragmentStage));
      return Unit_getInstance();
    };
  }
  function BrdfLutPass(parentScene) {
    var tmp = Group_init_$Create$(null, 1, null);
    var tmp$ret$0;
    {
      var builder = new ConfigBuilder();
      {
        builder.w4u_1 = 'BrdfLutPass';
        builder.i4v(512, 512);
        builder.s4v(TexFormat_RG_F16_getInstance());
        builder.j4v();
      }
      tmp$ret$0 = new Config(builder);
    }
    OffscreenRenderPass2d.call(this, tmp, tmp$ret$0);
    this.n5b_1 = true;
    this.x4l(null);
    var tmp$ret$2;
    {
      var tmp_0 = this.t52();
      var tmp0_apply = tmp_0 instanceof Group ? tmp_0 : THROW_CCE();
      {
      }
      {
        var tmp$ret$1;
        {
          var tmp0_mesh = listOf([Companion_getInstance_31().n2z_1, Companion_getInstance_31().q2z_1]);
          var mesh = new Mesh(new IndexedVertexList(tmp0_mesh), null);
          {
            var tmp_1 = FullscreenShaderUtil_getInstance();
            tmp_1.k4u(mesh, false, 1, null);
            mesh.e4k(brdfLutShader(this));
          }
          tmp$ret$1 = mesh;
        }
        tmp0_apply.p4q(tmp$ret$1);
      }
      tmp$ret$2 = tmp0_apply;
    }
    var tmp0_this = this;
    {
      var tmp1_plusAssign = tmp0_this.v52();
      tmp1_plusAssign.b(BrdfLutPass$lambda(this, parentScene));
    }
  }
  BrdfLutPass.prototype.l4k = function (ctx) {
    this.t52().l4k(ctx);
    OffscreenRenderPass2d.prototype.l4k.call(this, ctx);
  };
  BrdfLutPass.$metadata$ = classMeta('BrdfLutPass', undefined, undefined, undefined, undefined, OffscreenRenderPass2d.prototype);
  function hammersley(_this__u8e3s4, i, n) {
    var tmp$ret$2;
    {
      var tmp0_getOrCreateFunction = _this__u8e3s4.l2z_1;
      var tmp$ret$1;
      {
        var tmp0_getOrPut = tmp0_getOrCreateFunction.w2o_1;
        var value = tmp0_getOrPut.b3('Hammersley');
        var tmp;
        if (value == null) {
          var tmp$ret$0;
          {
            tmp$ret$0 = new Hammersley(_this__u8e3s4);
          }
          var answer = tmp$ret$0;
          tmp0_getOrPut.a('Hammersley', answer);
          tmp = answer;
        } else {
          tmp = value;
        }
        tmp$ret$1 = tmp;
      }
      var tmp_0 = tmp$ret$1;
      tmp$ret$2 = tmp_0 instanceof Hammersley ? tmp_0 : THROW_CCE();
    }
    var func = tmp$ret$2;
    return _this__u8e3s4.s37(func, [i, n]);
  }
  function importanceSampleGgx(_this__u8e3s4, xi, n, roughness) {
    var tmp$ret$2;
    {
      var tmp0_getOrCreateFunction = _this__u8e3s4.l2z_1;
      var tmp$ret$1;
      {
        var tmp0_getOrPut = tmp0_getOrCreateFunction.w2o_1;
        var value = tmp0_getOrPut.b3('ImportanceSampleGgx');
        var tmp;
        if (value == null) {
          var tmp$ret$0;
          {
            tmp$ret$0 = new ImportanceSampleGgx(_this__u8e3s4);
          }
          var answer = tmp$ret$0;
          tmp0_getOrPut.a('ImportanceSampleGgx', answer);
          tmp = answer;
        } else {
          tmp = value;
        }
        tmp$ret$1 = tmp;
      }
      var tmp_0 = tmp$ret$1;
      tmp$ret$2 = tmp_0 instanceof ImportanceSampleGgx ? tmp_0 : THROW_CCE();
    }
    var func = tmp$ret$2;
    return _this__u8e3s4.s37(func, [xi, n, roughness]);
  }
  function Hammersley$lambda($i, $n) {
    return function ($this$body) {
      var tmp = toUint1($i);
      var bits = $this$body.q3n(tmp, null, 2, null);
      $this$body.h30(bits, or(shl(bits, $this$body.x3m(_UInt___init__impl__l7qpdl(16))), shr(bits, $this$body.x3m(_UInt___init__impl__l7qpdl(16)))));
      $this$body.h30(bits, or(shl(and(bits, $this$body.x3m(_UInt___init__impl__l7qpdl(1431655765))), $this$body.x3m(_UInt___init__impl__l7qpdl(1))), shr(and(bits, $this$body.x3m(_UInt___init__impl__l7qpdl(-1431655766))), $this$body.x3m(_UInt___init__impl__l7qpdl(1)))));
      $this$body.h30(bits, or(shl(and(bits, $this$body.x3m(_UInt___init__impl__l7qpdl(858993459))), $this$body.x3m(_UInt___init__impl__l7qpdl(2))), shr(and(bits, $this$body.x3m(_UInt___init__impl__l7qpdl(-858993460))), $this$body.x3m(_UInt___init__impl__l7qpdl(2)))));
      $this$body.h30(bits, or(shl(and(bits, $this$body.x3m(_UInt___init__impl__l7qpdl(252645135))), $this$body.x3m(_UInt___init__impl__l7qpdl(4))), shr(and(bits, $this$body.x3m(_UInt___init__impl__l7qpdl(-252645136))), $this$body.x3m(_UInt___init__impl__l7qpdl(4)))));
      $this$body.h30(bits, or(shl(and(bits, $this$body.x3m(_UInt___init__impl__l7qpdl(16711935))), $this$body.x3m(_UInt___init__impl__l7qpdl(8))), shr(and(bits, $this$body.x3m(_UInt___init__impl__l7qpdl(-16711936))), $this$body.x3m(_UInt___init__impl__l7qpdl(8)))));
      var tmp_0 = times_2(toFloat1_0(bits), $this$body.d38(2.3283064365386963E-10));
      var radicalInverse = $this$body.g3n(tmp_0, null, 2, null);
      return $this$body.a3n(div(toFloat1($i), toFloat1($n)), radicalInverse);
    };
  }
  function Hammersley(parentScope) {
    KslFunction.call(this, 'Hammersley', KslTypeFloat2_getInstance(), parentScope.l2z_1);
    var i = this.h3l('i');
    var n = this.h3l('n');
    this.o38(Hammersley$lambda(i, n));
  }
  Hammersley.$metadata$ = classMeta('Hammersley', undefined, undefined, undefined, undefined, KslFunction.prototype);
  function ImportanceSampleGgx$lambda$lambda($up) {
    return function ($this$if) {
      $this$if.h30($up, $this$if.z35(Companion_getInstance_9().g2k_1));
      return Unit_getInstance();
    };
  }
  function ImportanceSampleGgx$lambda($roughness, $xi, $n) {
    return function ($this$body) {
      var tmp = times_2($roughness, $roughness);
      var a = $this$body.g3n(tmp, null, 2, null);
      var tmp_0 = times_2(times_2($this$body.d38(2.0), $this$body.t3m(get_PI())), get_x($xi));
      var phi = $this$body.g3n(tmp_0, null, 2, null);
      var tmp_1 = $this$body.j3o(div(minus_1($this$body.d38(1.0), get_y($xi)), plus_2($this$body.d38(1.0), times_2(minus_1(times_2(a, a), $this$body.d38(1.0)), get_y($xi)))));
      var cosTheta = $this$body.g3n(tmp_1, null, 2, null);
      var tmp_2 = $this$body.j3o(minus_1($this$body.d38(1.0), times_2(cosTheta, cosTheta)));
      var sinTheta = $this$body.g3n(tmp_2, null, 2, null);
      var tmp_3 = $this$body.b3n(times_2($this$body.m3o(phi), sinTheta), times_2($this$body.n3o(phi), sinTheta), cosTheta);
      var h = $this$body.u30(tmp_3, null, 2, null);
      var tmp_4 = $this$body.z35(Companion_getInstance_9().e2k_1);
      var up = $this$body.u30(tmp_4, null, 2, null);
      var tmp_5 = lt($this$body.y3n(get_z($n)), $this$body.d38(0.9999));
      $this$body.s3n(tmp_5, ImportanceSampleGgx$lambda$lambda(up));
      var tmp_6 = $this$body.g3o($this$body.a3o(up, $n));
      var tangent = $this$body.u30(tmp_6, null, 2, null);
      var bitangent = $this$body.a3o($n, tangent);
      return $this$body.g3o(plus_0(plus_0(times_0(tangent, get_x(h)), times_0(bitangent, get_y(h))), times_0($n, get_z(h))));
    };
  }
  function ImportanceSampleGgx(parentScope) {
    KslFunction.call(this, 'ImportanceSampleGgx', KslTypeFloat3_getInstance(), parentScope.l2z_1);
    var xi = this.f3l('xi');
    var n = this.n38('n');
    var roughness = this.e3l('roughness');
    this.o38(ImportanceSampleGgx$lambda(roughness, xi, n));
  }
  ImportanceSampleGgx.$metadata$ = classMeta('ImportanceSampleGgx', undefined, undefined, undefined, undefined, KslFunction.prototype);
  function ShaderGenerator() {
  }
  ShaderGenerator.$metadata$ = classMeta('ShaderGenerator');
  function OrthographicCamera_init_$Init$(name, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      name = 'orthographicCam';
    OrthographicCamera.call($this, name);
    return $this;
  }
  function OrthographicCamera_init_$Create$(name, $mask0, $marker) {
    return OrthographicCamera_init_$Init$(name, $mask0, $marker, Object.create(OrthographicCamera.prototype));
  }
  function OrthographicCamera(name) {
    Camera.call(this, name);
    this.l4n_1 = -10.0;
    this.m4n_1 = 10.0;
    this.n4n_1 = -10.0;
    this.o4n_1 = 10.0;
    this.p4n_1 = false;
    this.q4n_1 = true;
    this.r4n_1 = MutableVec3f_init_$Create$();
  }
  OrthographicCamera.prototype.p5b = function (_set____db54di) {
    this.l4n_1 = _set____db54di;
  };
  OrthographicCamera.prototype.q5b = function (_set____db54di) {
    this.m4n_1 = _set____db54di;
  };
  OrthographicCamera.prototype.r5b = function (_set____db54di) {
    this.n4n_1 = _set____db54di;
  };
  OrthographicCamera.prototype.s5b = function (_set____db54di) {
    this.o4n_1 = _set____db54di;
  };
  OrthographicCamera.prototype.t5b = function (_set____db54di) {
    this.p4n_1 = _set____db54di;
  };
  OrthographicCamera.prototype.u5b = function (_set____db54di) {
    this.q4n_1 = _set____db54di;
  };
  OrthographicCamera.prototype.z52 = function (renderPass, ctx) {
    if (this.p4n_1) {
      this.l4n_1 = 0.0;
      this.m4n_1 = renderPass.j4l_1.u4n_1;
      this.n4n_1 = 0.0;
      this.o4n_1 = renderPass.j4l_1.v3z();
    } else if (this.q4n_1) {
      var h = this.o4n_1 - this.n4n_1;
      var w = renderPass.j4l_1.v5b() * h;
      var xCenter = this.l4n_1 + (this.m4n_1 - this.l4n_1) * 0.5;
      this.l4n_1 = xCenter - w * 0.5;
      this.m4n_1 = xCenter + w * 0.5;
    }
    Camera.prototype.z52.call(this, renderPass, ctx);
  };
  OrthographicCamera.prototype.w5b = function (renderPass, ctx) {
    if ((!(this.l4n_1 === this.m4n_1) ? !(this.n4n_1 === this.o4n_1) : false) ? !(this.y5b() === this.z5b()) : false) {
      this.x5b().e2h(this.l4n_1, this.m4n_1, this.n4n_1, this.o4n_1, this.y5b(), this.z5b());
    }
  };
  OrthographicCamera.prototype.a5c = function (globalCenter, globalRadius) {
    this.r4n_1.s2k(globalCenter);
    this.r4n_1.u2k(this.b5c());
    var x = this.r4n_1.q2k(this.c5c());
    if (x > this.m4n_1 + globalRadius ? true : x < this.l4n_1 - globalRadius) {
      return false;
    }
    var y = this.r4n_1.q2k(this.d5c());
    if (y > this.o4n_1 + globalRadius ? true : y < this.n4n_1 - globalRadius) {
      return false;
    }
    var z = this.r4n_1.q2k(this.e5c());
    if (z > this.z5b() + globalRadius ? true : z < this.y5b() - globalRadius) {
      return false;
    }
    return true;
  };
  OrthographicCamera.$metadata$ = classMeta('OrthographicCamera', undefined, undefined, undefined, undefined, Camera.prototype);
  var ProjCorrectionMode_NONE_instance;
  var ProjCorrectionMode_ONSCREEN_instance;
  var ProjCorrectionMode_OFFSCREEN_instance;
  var ProjCorrectionMode_entriesInitialized;
  function ProjCorrectionMode_initEntries() {
    if (ProjCorrectionMode_entriesInitialized)
      return Unit_getInstance();
    ProjCorrectionMode_entriesInitialized = true;
    ProjCorrectionMode_NONE_instance = new ProjCorrectionMode('NONE', 0);
    ProjCorrectionMode_ONSCREEN_instance = new ProjCorrectionMode('ONSCREEN', 1);
    ProjCorrectionMode_OFFSCREEN_instance = new ProjCorrectionMode('OFFSCREEN', 2);
  }
  function ProjCorrectionMode(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  ProjCorrectionMode.$metadata$ = classMeta('ProjCorrectionMode', undefined, undefined, undefined, undefined, Enum.prototype);
  function Camera$lazyInvProj$lambda(this$0) {
    return function (it) {
      this$0.i4y_1.t2g(it, 0.0, 2, null);
      return Unit_getInstance();
    };
  }
  function Camera$lazyInvView$lambda(this$0) {
    return function (it) {
      this$0.j4y_1.t2g(it, 0.0, 2, null);
      return Unit_getInstance();
    };
  }
  function Camera$lazyViewProj$lambda(this$0) {
    return function (it) {
      this$0.i4y_1.a2h(this$0.j4y_1, it);
      return Unit_getInstance();
    };
  }
  function Camera$lazyInvViewProj$lambda(this$0) {
    return function (it) {
      var tmp = this$0.k5a();
      tmp.t2g(it, 0.0, 2, null);
      return Unit_getInstance();
    };
  }
  function ProjCorrectionMode_ONSCREEN_getInstance() {
    ProjCorrectionMode_initEntries();
    return ProjCorrectionMode_ONSCREEN_instance;
  }
  function ProjCorrectionMode_OFFSCREEN_getInstance() {
    ProjCorrectionMode_initEntries();
    return ProjCorrectionMode_OFFSCREEN_instance;
  }
  function Camera(name) {
    Node.call(this, name);
    this.v4x_1 = new MutableVec3f(0.0, 0.0, 1.0);
    this.w4x_1 = MutableVec3f_init_$Create$_0(Companion_getInstance_9().c2k_1);
    this.x4x_1 = MutableVec3f_init_$Create$_0(Companion_getInstance_9().f2k_1);
    this.y4x_1 = 1.0;
    this.z4x_1 = true;
    this.a4y_1 = 0.0;
    this.b4y_1 = 0.1;
    this.c4y_1 = 100.0;
    this.d4y_1 = MutableVec3f_init_$Create$();
    this.e4y_1 = MutableVec3f_init_$Create$();
    this.f4y_1 = MutableVec3f_init_$Create$();
    this.g4y_1 = MutableVec3f_init_$Create$();
    this.h4y_1 = MutableVec3f_init_$Create$();
    this.i4y_1 = new Mat4d();
    this.j4y_1 = new Mat4d();
    var tmp = this;
    tmp.k4y_1 = new LazyMat4d(Camera$lazyInvProj$lambda(this));
    var tmp_0 = this;
    tmp_0.l4y_1 = new LazyMat4d(Camera$lazyInvView$lambda(this));
    var tmp_1 = this;
    tmp_1.m4y_1 = new LazyMat4d(Camera$lazyViewProj$lambda(this));
    var tmp_2 = this;
    tmp_2.n4y_1 = new LazyMat4d(Camera$lazyInvViewProj$lambda(this));
    this.o4y_1 = ProjCorrectionMode_ONSCREEN_getInstance();
    this.p4y_1 = new Mat4d();
    this.q4y_1 = MutableVec3f_init_$Create$();
    this.r4y_1 = MutableVec4f_init_$Create$();
    var tmp_3 = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp_3.s4y_1 = tmp$ret$0;
  }
  Camera.prototype.qr = function () {
    return this.v4x_1;
  };
  Camera.prototype.f5c = function () {
    return this.w4x_1;
  };
  Camera.prototype.v5b = function () {
    return this.y4x_1;
  };
  Camera.prototype.b5c = function () {
    return this.d4y_1;
  };
  Camera.prototype.g5c = function () {
    return this.e4y_1;
  };
  Camera.prototype.d5c = function () {
    return this.f4y_1;
  };
  Camera.prototype.c5c = function () {
    return this.g4y_1;
  };
  Camera.prototype.e5c = function () {
    return this.h4y_1;
  };
  Camera.prototype.j5c = function (_set____db54di) {
    this.b4y_1 = _set____db54di;
  };
  Camera.prototype.y5b = function () {
    return this.b4y_1;
  };
  Camera.prototype.k5c = function (_set____db54di) {
    this.c4y_1 = _set____db54di;
  };
  Camera.prototype.z5b = function () {
    return this.c4y_1;
  };
  Camera.prototype.x5b = function () {
    return this.i4y_1;
  };
  Camera.prototype.k5a = function () {
    return this.m4y_1.l1e();
  };
  Camera.prototype.t4y = function (_set____db54di) {
    this.o4y_1 = _set____db54di;
  };
  Camera.prototype.z52 = function (renderPass, ctx) {
    if (this.z4x_1) {
      this.y4x_1 = renderPass.j4l_1.v5b();
    }
    this.h5c(renderPass, ctx);
    this.w5b(renderPass, ctx);
    if (this.o4y_1.equals(ProjCorrectionMode_ONSCREEN_getInstance())) {
      ctx.t2b_1.a2h(this.i4y_1, this.p4y_1);
      this.i4y_1.b2h(this.p4y_1);
    } else if (this.o4y_1.equals(ProjCorrectionMode_OFFSCREEN_getInstance())) {
      ctx.u2b_1.a2h(this.i4y_1, this.p4y_1);
      this.i4y_1.b2h(this.p4y_1);
    }
    this.k4y_1.m5c_1 = true;
    this.m4y_1.m5c_1 = true;
    this.n4y_1.m5c_1 = true;
    var tmp$ret$0;
    {
      var tmp0_isNotEmpty = this.s4y_1;
      tmp$ret$0 = !tmp0_isNotEmpty.q();
    }
    if (tmp$ret$0) {
      var inductionVariable = 0;
      var last = this.s4y_1.m() - 1 | 0;
      if (inductionVariable <= last)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          this.s4y_1.r(i)(ctx);
        }
         while (inductionVariable <= last);
    }
  };
  Camera.prototype.h5c = function (renderPass, ctx) {
    var tmp = this.d4y_1.s2k(this.v4x_1);
    this.z4k(tmp, 0.0, 2, null);
    var tmp_0 = this.e4y_1.s2k(this.w4x_1);
    this.z4k(tmp_0, 0.0, 2, null);
    this.y4k(this.f4y_1.s2k(this.x4x_1), 0.0).w2k();
    this.h4y_1.s2k(this.e4y_1).u2k(this.d4y_1);
    this.a4y_1 = this.h4y_1.t2j();
    this.h4y_1.b2j(1.0 / this.a4y_1);
    this.h4y_1.m2k(this.f4y_1, this.g4y_1).w2k();
    this.g4y_1.m2k(this.h4y_1, this.f4y_1).w2k();
    this.j4y_1.c2h(this.d4y_1, this.e4y_1, this.f4y_1);
    this.l4y_1.m5c_1 = true;
  };
  Camera.prototype.i5c = function (node) {
    return this.a5c(node.o4k(), node.q4k());
  };
  Camera.$metadata$ = classMeta('Camera', undefined, undefined, undefined, undefined, Node.prototype);
  function PerspectiveCamera_init_$Init$(name, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      name = 'perspectiveCam';
    PerspectiveCamera.call($this, name);
    return $this;
  }
  function PerspectiveCamera_init_$Create$(name, $mask0, $marker) {
    return PerspectiveCamera_init_$Init$(name, $mask0, $marker, Object.create(PerspectiveCamera.prototype));
  }
  function PerspectiveCamera(name) {
    Camera.call(this, name);
    this.b5e_1 = 60.0;
    this.c5e_1 = 0.0;
    this.d5e_1 = 1.0;
    this.e5e_1 = 1.0;
    this.f5e_1 = 1.0;
    this.g5e_1 = 1.0;
    this.h5e_1 = MutableVec3f_init_$Create$();
  }
  PerspectiveCamera.prototype.w5b = function (renderPass, ctx) {
    this.x5b().g2h(this.b5e_1, this.v5b(), this.y5b(), this.z5b());
    var tmp$ret$0;
    {
      var tmp0_toRad = this.b5e_1;
      tmp$ret$0 = tmp0_toRad * get_DEG_2_RAD();
    }
    var angY = tmp$ret$0 / 2.0;
    var tmp = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = Math.cos(angY);
    }
    tmp.e5e_1 = 1.0 / tmp$ret$1;
    var tmp_0 = this;
    var tmp$ret$2;
    {
      tmp$ret$2 = Math.tan(angY);
    }
    tmp_0.g5e_1 = tmp$ret$2;
    var tmp$ret$3;
    {
      var tmp1_atan = this.g5e_1 * this.v5b();
      tmp$ret$3 = Math.atan(tmp1_atan);
    }
    var angX = tmp$ret$3;
    var tmp_1 = this;
    var tmp$ret$4;
    {
      tmp$ret$4 = Math.cos(angX);
    }
    tmp_1.d5e_1 = 1.0 / tmp$ret$4;
    var tmp_2 = this;
    var tmp$ret$5;
    {
      tmp$ret$5 = Math.tan(angX);
    }
    tmp_2.f5e_1 = tmp$ret$5;
    var tmp_3 = this;
    var tmp$ret$6;
    {
      var tmp2_toDeg = angX * 2;
      tmp$ret$6 = tmp2_toDeg * get_RAD_2_DEG();
    }
    tmp_3.c5e_1 = tmp$ret$6;
  };
  PerspectiveCamera.prototype.a5c = function (globalCenter, globalRadius) {
    this.h5e_1.s2k(globalCenter);
    this.h5e_1.u2k(this.b5c());
    var z = this.h5e_1.q2k(this.e5c());
    if (z > this.z5b() + globalRadius ? true : z < this.y5b() - globalRadius) {
      return false;
    }
    var y = this.h5e_1.q2k(this.d5c());
    var d = globalRadius * this.e5e_1;
    z = z * this.g5e_1;
    if (y > z + d ? true : y < -z - d) {
      return false;
    }
    var x = this.h5e_1.q2k(this.c5c());
    d = globalRadius * this.d5e_1;
    z = z * this.v5b();
    if (x > z + d ? true : x < -z - d) {
      return false;
    }
    return true;
  };
  PerspectiveCamera.$metadata$ = classMeta('PerspectiveCamera', undefined, undefined, undefined, undefined, Camera.prototype);
  function Group_init_$Init$(name, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      name = null;
    Group.call($this, name);
    return $this;
  }
  function Group_init_$Create$(name, $mask0, $marker) {
    return Group_init_$Init$(name, $mask0, $marker, Object.create(Group.prototype));
  }
  function Group$invTransform$lambda(this$0) {
    return function (it) {
      this$0.z4p_1.t2g(it, 0.0, 2, null);
      return Unit_getInstance();
    };
  }
  function Group(name) {
    Node.call(this, name);
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.x4p_1 = tmp$ret$0;
    this.y4p_1 = new BoundingBox();
    this.z4p_1 = new Mat4d();
    var tmp_0 = this;
    tmp_0.a4q_1 = new LazyMat4d(Group$invTransform$lambda(this));
    this.b4q_1 = false;
    this.c4q_1 = MutableVec3f_init_$Create$();
    this.d4q_1 = new BoundingBox();
    this.l2g();
    this.c4k(false);
  }
  Group.prototype.j4r = function () {
    return this.x4p_1;
  };
  Group.prototype.k3u = function () {
    return this.x4p_1;
  };
  Group.prototype.o4r = function () {
    return this.z4p_1;
  };
  Group.prototype.p4r = function () {
    this.a4q_1.m5c_1 = true;
    this.b4q_1 = false;
  };
  Group.prototype.w4k = function (updateEvent) {
    Node.prototype.w4k.call(this, updateEvent);
    this.y4p_1.x2m();
    var inductionVariable = 0;
    var last = this.x4p_1.m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.x4p_1.r(i).w4k(updateEvent);
        this.y4p_1.y2m(this.x4p_1.r(i).j4k());
      }
       while (inductionVariable <= last);
    this.q4r();
    this.t4r().s2k(this.j4k().t2m_1);
    this.u4r().s2k(this.j4k().r2m_1);
    var tmp = this.r4k();
    var tmp_0 = this.t4r();
    tmp.y2g(tmp_0, 0.0, 2, null);
    var tmp_1 = this.r4k();
    var tmp_2 = this.u4r();
    tmp_1.y2g(tmp_2, 0.0, 2, null);
    this.p4k(this.o4k().o2k(this.u4r()));
    if (!this.j4k().p2m_1 ? !this.b4q_1 : false) {
      this.d4q_1.x2m();
      this.d4q_1.v2k(this.z4p_1.u2g(this.c4q_1.x2g(this.j4k().q2m_1.e23(), this.j4k().q2m_1.g23(), this.j4k().q2m_1.w2g()), 1.0));
      this.d4q_1.v2k(this.z4p_1.u2g(this.c4q_1.x2g(this.j4k().q2m_1.e23(), this.j4k().q2m_1.g23(), this.j4k().r2m_1.w2g()), 1.0));
      this.d4q_1.v2k(this.z4p_1.u2g(this.c4q_1.x2g(this.j4k().q2m_1.e23(), this.j4k().r2m_1.g23(), this.j4k().q2m_1.w2g()), 1.0));
      this.d4q_1.v2k(this.z4p_1.u2g(this.c4q_1.x2g(this.j4k().q2m_1.e23(), this.j4k().r2m_1.g23(), this.j4k().r2m_1.w2g()), 1.0));
      this.d4q_1.v2k(this.z4p_1.u2g(this.c4q_1.x2g(this.j4k().r2m_1.e23(), this.j4k().q2m_1.g23(), this.j4k().q2m_1.w2g()), 1.0));
      this.d4q_1.v2k(this.z4p_1.u2g(this.c4q_1.x2g(this.j4k().r2m_1.e23(), this.j4k().q2m_1.g23(), this.j4k().r2m_1.w2g()), 1.0));
      this.d4q_1.v2k(this.z4p_1.u2g(this.c4q_1.x2g(this.j4k().r2m_1.e23(), this.j4k().r2m_1.g23(), this.j4k().q2m_1.w2g()), 1.0));
      this.d4q_1.v2k(this.z4p_1.u2g(this.c4q_1.x2g(this.j4k().r2m_1.e23(), this.j4k().r2m_1.g23(), this.j4k().r2m_1.w2g()), 1.0));
      this.j4k().z2m(this.d4q_1);
    }
  };
  Group.prototype.q4r = function () {
    this.j4k().z2m(this.y4p_1);
  };
  Group.prototype.x4k = function () {
    Node.prototype.x4k.call(this);
    if (!this.b4q_1) {
      this.r4k().z2g(this.z4p_1);
    }
  };
  Group.prototype.m4k = function (updateEvent) {
    Node.prototype.m4k.call(this, updateEvent);
    if (this.v4k()) {
      var inductionVariable = 0;
      var last = this.x4p_1.m() - 1 | 0;
      if (inductionVariable <= last)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          this.x4p_1.r(i).m4k(updateEvent);
        }
         while (inductionVariable <= last);
    }
  };
  Group.prototype.l4k = function (ctx) {
    Node.prototype.l4k.call(this, ctx);
    var inductionVariable = 0;
    var last = this.x4p_1.m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.x4p_1.r(i).l4k(ctx);
      }
       while (inductionVariable <= last);
  };
  Group.prototype.r4r = function (node, index) {
    if (index >= 0) {
      this.x4p_1.cf(index, node);
    } else {
      this.x4p_1.b(node);
    }
    node.s4k(this);
    this.j4k().y2m(node.j4k());
  };
  Group.prototype.s4r = function (node, index, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      index = -1;
    return $handler == null ? this.r4r(node, index) : $handler(node, index);
  };
  Group.prototype.i4q = function (node) {
    if (this.x4p_1.c4(node)) {
      node.s4k(null);
      return true;
    }
    return false;
  };
  Group.prototype.i5e = function () {
    var inductionVariable = 0;
    var last = this.x4p_1.m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.x4p_1.r(i).s4k(null);
      }
       while (inductionVariable <= last);
    this.x4p_1.t7();
  };
  Group.prototype.b4l = function (name) {
    if (name === this.il()) {
      return this;
    }
    var inductionVariable = 0;
    var last = this.k3u().m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var found = this.k3u().r(i).b4l(name);
        if (!(found == null)) {
          return found;
        }
      }
       while (inductionVariable <= last);
    return null;
  };
  Group.prototype.e4q = function (node) {
    this.s4r(node, 0, 2, null);
  };
  Group.prototype.j5e = function (node) {
    this.i4q(node);
  };
  Group.prototype.p4q = function (_this__u8e3s4) {
    this.s4r(_this__u8e3s4, 0, 2, null);
  };
  Group.prototype.k5e = function (_this__u8e3s4) {
    return this.i4q(_this__u8e3s4);
  };
  Group.prototype.n2h = function (tx, ty, tz) {
    return this.l2d(tx, ty, tz);
  };
  Group.prototype.l2d = function (tx, ty, tz) {
    this.z4p_1.l2d(tx, ty, tz);
    this.p4r();
    return this;
  };
  Group.prototype.t2h = function (sx, sy, sz) {
    return this.m2d(sx, sy, sz);
  };
  Group.prototype.y2j = function (s) {
    return this.m2d(s, s, s);
  };
  Group.prototype.m2d = function (sx, sy, sz) {
    this.z4p_1.m2d(sx, sy, sz);
    this.p4r();
    return this;
  };
  Group.prototype.l2g = function () {
    this.z4p_1.l2g();
    this.a4q_1.t7();
    this.b4q_1 = true;
    return this;
  };
  Group.$metadata$ = classMeta('Group', undefined, undefined, undefined, undefined, Node.prototype);
  function group(name, block) {
    var tg = new Group(name);
    block(tg);
    return tg;
  }
  function group$default(name, block, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      name = null;
    return group(name, block);
  }
  function Lighting() {
    this.l5e_1 = mutableListOf([(new Light()).w5e(new Vec3f(-0.8, -1.2, -1.0)).x5e(Companion_getInstance_43().o34_1, 1.0)]);
  }
  Lighting.$metadata$ = classMeta('Lighting');
  var Type_DIRECTIONAL_instance;
  var Type_POINT_instance;
  var Type_SPOT_instance;
  var Type_entriesInitialized;
  function Type_initEntries() {
    if (Type_entriesInitialized)
      return Unit_getInstance();
    Type_entriesInitialized = true;
    Type_DIRECTIONAL_instance = new Type('DIRECTIONAL', 0, 0.0);
    Type_POINT_instance = new Type('POINT', 1, 1.0);
    Type_SPOT_instance = new Type('SPOT', 2, 2.0);
  }
  function Type(name, ordinal, encoded) {
    Enum.call(this, name, ordinal);
    this.a5f_1 = encoded;
  }
  Type.$metadata$ = classMeta('Type', undefined, undefined, undefined, undefined, Enum.prototype);
  function Type_DIRECTIONAL_getInstance() {
    Type_initEntries();
    return Type_DIRECTIONAL_instance;
  }
  function Light() {
    this.m5e_1 = MutableColor_init_$Create$_0(Companion_getInstance_43().o34_1);
    this.n5e_1 = Type_DIRECTIONAL_getInstance();
    this.o5e_1 = new MutableVec3f(0.0, 1.0, 0.0);
    this.p5e_1 = MutableVec3f_init_$Create$();
    this.q5e_1 = 60.0;
    this.r5e_1 = 0.5;
    this.s5e_1 = true;
    this.t5e_1 = MutableVec4f_init_$Create$();
    this.u5e_1 = MutableVec4f_init_$Create$();
    this.v5e_1 = MutableVec4f_init_$Create$();
  }
  Light.prototype.x5e = function (color, intensity) {
    this.m5e_1.x2l(color);
    this.m5e_1.b5f(intensity);
    this.s5e_1 = true;
    return this;
  };
  Light.prototype.w5e = function (dir) {
    this.n5e_1 = Type_DIRECTIONAL_getInstance();
    this.o5e_1.s2k(dir).w2k();
    this.p5e_1.s2k(Companion_getInstance_9().c2k_1);
    this.q5e_1 = 0.0;
    this.s5e_1 = true;
    return this;
  };
  Light.$metadata$ = classMeta('Light');
  function Mesh_init_$Init$(geometry, name, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      name = null;
    Mesh.call($this, geometry, name);
    return $this;
  }
  function Companion_37() {
    Companion_instance_37 = this;
    this.c5f_1 = new Long(1, 0);
  }
  Companion_37.$metadata$ = objectMeta('Companion');
  var Companion_instance_37;
  function Companion_getInstance_37() {
    if (Companion_instance_37 == null)
      new Companion_37();
    return Companion_instance_37;
  }
  function Mesh(geometry, name) {
    Companion_getInstance_37();
    Node.call(this, name);
    this.e2r_1 = geometry;
    var tmp = this;
    var tmp0_this = Companion_getInstance_37();
    var tmp1 = tmp0_this.c5f_1;
    tmp0_this.c5f_1 = tmp1.yl();
    tmp.f2r_1 = tmp1;
    this.g2r_1 = null;
    this.h2r_1 = null;
    this.i2r_1 = null;
    this.j2r_1 = true;
    this.k2r_1 = null;
    this.l2r_1 = null;
    this.m2r_1 = null;
    var tmp_0 = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp_0.n2r_1 = tmp$ret$0;
    this.o2r_1 = -1;
    this.p2r_1 = null;
    var tmp_1 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = ArrayList_init_$Create$_0();
    }
    tmp_1.q2r_1 = tmp$ret$1;
    this.r2r_1 = Companion_getInstance_38().d5f();
  }
  Mesh.prototype.b4k = function (value) {
    this.g2r_1 = value;
    if (!(value == null)) {
      this.c4k(false);
    }
  };
  Mesh.prototype.i4k = function () {
    return this.g2r_1;
  };
  Mesh.prototype.e4k = function (value) {
    if (!(this.k2r_1 === value)) {
      this.k2r_1 = value;
      var tmp0_safe_receiver = this.p2r_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$0;
        {
          {
          }
          var tmp0_this = this;
          var tmp0_plusAssign = tmp0_this.q2r_1;
          tmp0_plusAssign.b(tmp0_safe_receiver);
          tmp$ret$0 = Unit_getInstance();
        }
      }
      this.p2r_1 = null;
    }
  };
  Mesh.prototype.j4k = function () {
    return this.e2r_1.s2s_1;
  };
  Mesh.prototype.d4k = function (generator) {
    {
      var tmp0_batchUpdate = this.e2r_1;
      var wasBatchUpdate = tmp0_batchUpdate.w2s_1;
      tmp0_batchUpdate.w2s_1 = true;
      {
        tmp0_batchUpdate.t7();
        generator(new MeshBuilder(tmp0_batchUpdate));
      }
      tmp0_batchUpdate.v2s_1 = true;
      tmp0_batchUpdate.w2s_1 = wasBatchUpdate;
      if (false) {}
    }
  };
  Mesh.prototype.k4k = function (ctx) {
    var tmp$ret$0;
    {
      var tmp0_isNotEmpty = this.q2r_1;
      tmp$ret$0 = !tmp0_isNotEmpty.q();
    }
    if (tmp$ret$0) {
      {
        var tmp1_forEach = this.q2r_1;
        var tmp0_iterator = tmp1_forEach.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          {
            ctx.h2f(element);
          }
        }
      }
      this.q2r_1.t7();
    }
    var tmp1_elvis_lhs = this.p2r_1;
    var tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp0_safe_receiver = this.k2r_1;
      var tmp_0;
      if (tmp0_safe_receiver == null) {
        tmp_0 = null;
      } else {
        var tmp$ret$3;
        {
          {
          }
          var tmp$ret$2;
          {
            var tmp$ret$1;
            {
              var tmp0_also = tmp0_safe_receiver.a2z(this, ctx);
              {
              }
              {
                this.p2r_1 = tmp0_also;
              }
              tmp$ret$1 = tmp0_also;
            }
            tmp$ret$2 = tmp$ret$1;
          }
          tmp$ret$3 = tmp$ret$2;
        }
        tmp_0 = tmp$ret$3;
      }
      tmp = tmp_0;
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  };
  Mesh.prototype.l4k = function (ctx) {
    Node.prototype.l4k.call(this, ctx);
    var tmp0_safe_receiver = this.p2r_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        tmp$ret$0 = ctx.h2f(tmp0_safe_receiver);
      }
    }
    this.p2r_1 = null;
  };
  Mesh.prototype.m4k = function (updateEvent) {
    if (!updateEvent.y4n_1(this)) {
      return Unit_getInstance();
    }
    Node.prototype.m4k.call(this, updateEvent);
    if (!this.v4k()) {
      return Unit_getInstance();
    }
    var insts = this.g2r_1;
    if (!(insts == null) ? insts.r2t_1 === 0 : false) {
      return Unit_getInstance();
    }
    if (this.e2r_1.v2s_1 ? !this.e2r_1.w2s_1 : false) {
      if (this.e2r_1.u2s_1) {
        this.e2r_1.e5f();
      }
      this.r2r_1.f5f(this);
    }
    updateEvent.w4n_1.q4z(this, updateEvent.x4n_1);
  };
  Mesh.$metadata$ = classMeta('Mesh', undefined, undefined, undefined, undefined, Node.prototype);
  function textureMesh(name, isNormalMapped, generate) {
    var attributes = mutableListOf([Companion_getInstance_31().n2z_1, Companion_getInstance_31().o2z_1, Companion_getInstance_31().q2z_1]);
    if (isNormalMapped) {
      {
        var tmp0_plusAssign = Companion_getInstance_31().p2z_1;
        attributes.b(tmp0_plusAssign);
      }
    }
    var tmp$ret$0;
    {
      var mesh = new Mesh(new IndexedVertexList(attributes), name);
      generate(mesh);
      tmp$ret$0 = mesh;
    }
    var mesh_0 = tmp$ret$0;
    if (isNormalMapped) {
      var tmp = mesh_0.e2r_1;
      tmp.g5f(0.0, 1, null);
    }
    return mesh_0;
  }
  function textureMesh$default(name, isNormalMapped, generate, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      name = null;
    if (!(($mask0 & 2) === 0))
      isNormalMapped = false;
    return textureMesh(name, isNormalMapped, generate);
  }
  function mesh(attributes, name, block) {
    var mesh = new Mesh(new IndexedVertexList(attributes), name);
    block(mesh);
    return mesh;
  }
  function colorMesh(name, generate) {
    var tmp$ret$0;
    {
      var tmp0_mesh = listOf([Companion_getInstance_31().n2z_1, Companion_getInstance_31().o2z_1, Companion_getInstance_31().r2z_1]);
      var mesh = new Mesh(new IndexedVertexList(tmp0_mesh), name);
      generate(mesh);
      tmp$ret$0 = mesh;
    }
    return tmp$ret$0;
  }
  function colorMesh$default(name, generate, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      name = null;
    return colorMesh(name, generate);
  }
  function MeshInstanceList_init_$Init$(instanceAttributes, initialSize, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      initialSize = 100;
    MeshInstanceList.call($this, instanceAttributes, initialSize);
    return $this;
  }
  function MeshInstanceList_init_$Create$(instanceAttributes, initialSize, $mask0, $marker) {
    return MeshInstanceList_init_$Init$(instanceAttributes, initialSize, $mask0, $marker, Object.create(MeshInstanceList.prototype));
  }
  function MeshInstanceList(instanceAttributes, initialSize) {
    this.m2t_1 = instanceAttributes;
    this.q2t_1 = Usage_DYNAMIC_getInstance();
    this.r2t_1 = 0;
    this.u2t_1 = initialSize;
    this.v2t_1 = true;
    var strideF = 0;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$();
    }
    var offsets = tmp$ret$0;
    var tmp0_iterator = this.m2t_1.h();
    while (tmp0_iterator.n()) {
      var attrib = tmp0_iterator.o();
      if (attrib.y2s_1.g2t_1) {
        throw IllegalArgumentException_init_$Create$('For now only float attributes are supported');
      } else {
        {
          var tmp0_set = strideF;
          offsets.a(attrib, tmp0_set);
        }
        strideF = strideF + attrib.y2s_1.f2t_1 | 0;
      }
    }
    this.t2t_1 = strideF;
    this.n2t_1 = offsets;
    this.o2t_1 = this.t2t_1 / 4 | 0;
    this.p2t_1 = this.t2t_1;
    this.s2t_1 = createFloat32Buffer(imul(this.t2t_1, this.u2t_1));
  }
  MeshInstanceList.prototype.h5f = function () {
    return this.n2t_1;
  };
  MeshInstanceList.prototype.r4j = function (reqSpace) {
    if ((this.r2t_1 + reqSpace | 0) > this.u2t_1) {
      var tmp = this;
      var tmp$ret$0;
      {
        var tmp0_max = imul(this.u2t_1, 2);
        var tmp1_max = this.r2t_1 + reqSpace | 0;
        tmp$ret$0 = Math.max(tmp0_max, tmp1_max);
      }
      tmp.u2t_1 = tmp$ret$0;
      var newBuf = createFloat32Buffer(imul(this.t2t_1, this.u2t_1));
      this.s2t_1.h3y();
      newBuf.z3w(this.s2t_1);
      this.s2t_1 = newBuf;
    }
  };
  MeshInstanceList.prototype.i5f = function (block) {
    this.r4j(1);
    var szBefore = this.s2t_1.qr();
    {
      var tmp0__anonymous__q1qw7t = this.s2t_1;
      block(tmp0__anonymous__q1qw7t);
    }
    var growSz = this.s2t_1.qr() - szBefore | 0;
    if (!(growSz === imul(this.o2t_1, 1))) {
      throw IllegalStateException_init_$Create$('Expected data to grow by ' + imul(this.o2t_1, 1) + ' elements, instead it grew by ' + growSz);
    }
    var tmp0_this = this;
    tmp0_this.r2t_1 = tmp0_this.r2t_1 + 1 | 0;
    this.v2t_1 = true;
    return Unit_getInstance();
  };
  MeshInstanceList.prototype.t7 = function () {
    this.r2t_1 = 0;
    this.s2t_1.w4s(0);
    this.s2t_1.j5f(this.s2t_1.b1w());
    this.v2t_1 = true;
  };
  MeshInstanceList.$metadata$ = classMeta('MeshInstanceList');
  function MeshRayTest$Companion$boundsTest$1() {
    this.k5f_1 = null;
  }
  MeshRayTest$Companion$boundsTest$1.prototype.f5f = function (mesh) {
    this.k5f_1 = mesh;
  };
  MeshRayTest$Companion$boundsTest$1.$metadata$ = classMeta(undefined, [MeshRayTest]);
  function Companion_38() {
    Companion_instance_38 = this;
  }
  Companion_38.prototype.d5f = function () {
    return new MeshRayTest$Companion$boundsTest$1();
  };
  Companion_38.$metadata$ = objectMeta('Companion');
  var Companion_instance_38;
  function Companion_getInstance_38() {
    if (Companion_instance_38 == null)
      new Companion_38();
    return Companion_instance_38;
  }
  function MeshRayTest() {
  }
  MeshRayTest.$metadata$ = interfaceMeta('MeshRayTest');
  function Node_init_$Init$(name, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      name = null;
    Node.call($this, name);
    return $this;
  }
  function Companion_39() {
    Companion_instance_39 = this;
    this.l5f_1 = new Mat4d();
  }
  Companion_39.$metadata$ = objectMeta('Companion');
  var Companion_instance_39;
  function Companion_getInstance_39() {
    if (Companion_instance_39 == null)
      new Companion_39();
    return Companion_instance_39;
  }
  function Node$modelMatInvLazy$lambda(this$0) {
    return function (it) {
      this$0.y2f_1.t2g(it, 0.0, 2, null);
      return Unit_getInstance();
    };
  }
  function Node(name) {
    Companion_getInstance_39();
    this.q2f_1 = name;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.r2f_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = ArrayList_init_$Create$_0();
    }
    tmp_0.s2f_1 = tmp$ret$1;
    var tmp_1 = this;
    tmp_1.t2f_1 = Tags_init_$Create$(null, 1, null);
    this.u2f_1 = new BoundingBox();
    this.v2f_1 = 0.0;
    this.w2f_1 = MutableVec3f_init_$Create$();
    this.x2f_1 = MutableVec3f_init_$Create$();
    this.y2f_1 = new Mat4d();
    var tmp_2 = this;
    tmp_2.z2f_1 = new LazyMat4d(Node$modelMatInvLazy$lambda(this));
    this.a2g_1 = null;
    this.b2g_1 = true;
    this.c2g_1 = true;
    this.d2g_1 = true;
    this.e2g_1 = true;
  }
  Node.prototype.il = function () {
    return this.q2f_1;
  };
  Node.prototype.n4k = function () {
    return this.r2f_1;
  };
  Node.prototype.w4r = function () {
    return this.s2f_1;
  };
  Node.prototype.j4k = function () {
    return this.u2f_1;
  };
  Node.prototype.o4k = function () {
    return this.w2f_1;
  };
  Node.prototype.p4k = function (_set____db54di) {
    this.v2f_1 = _set____db54di;
  };
  Node.prototype.q4k = function () {
    return this.v2f_1;
  };
  Node.prototype.t4r = function () {
    return this.w2f_1;
  };
  Node.prototype.u4r = function () {
    return this.x2f_1;
  };
  Node.prototype.r4k = function () {
    return this.y2f_1;
  };
  Node.prototype.s4k = function (_set____db54di) {
    this.a2g_1 = _set____db54di;
  };
  Node.prototype.t4k = function () {
    return this.a2g_1;
  };
  Node.prototype.f2g = function () {
    return this.b2g_1;
  };
  Node.prototype.c4k = function (_set____db54di) {
    this.d2g_1 = _set____db54di;
  };
  Node.prototype.u4k = function () {
    return this.d2g_1;
  };
  Node.prototype.v4k = function () {
    return this.e2g_1;
  };
  Node.prototype.w4k = function (updateEvent) {
    var inductionVariable = 0;
    var last = this.r2f_1.m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.r2f_1.r(i)(updateEvent);
      }
       while (inductionVariable <= last);
    this.x4k();
    var tmp = this.w2f_1.s2k(this.j4k().t2m_1);
    this.z4k(tmp, 0.0, 2, null);
    var tmp_0 = this.x2f_1.s2k(this.j4k().r2m_1);
    this.z4k(tmp_0, 0.0, 2, null);
    this.p4k(this.o4k().o2k(this.x2f_1));
  };
  Node.prototype.x4k = function () {
    var tmp0_safe_receiver = this.t4k();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.y2f_1;
    this.y2f_1.b2h(tmp1_elvis_lhs == null ? Companion_getInstance_39().l5f_1 : tmp1_elvis_lhs);
    this.z2f_1.m5c_1 = true;
  };
  Node.prototype.m4k = function (updateEvent) {
    this.e2g_1 = this.a4l(updateEvent.a4z(), updateEvent.x4n_1);
  };
  Node.prototype.l4k = function (ctx) {
    var inductionVariable = 0;
    var last = this.s2f_1.m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.s2f_1.r(i)(ctx);
      }
       while (inductionVariable <= last);
  };
  Node.prototype.y4k = function (vec, w) {
    this.y2f_1.u2g(vec, w);
    return vec;
  };
  Node.prototype.z4k = function (vec, w, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      w = 1.0;
    return $handler == null ? this.y4k(vec, w) : $handler(vec, w);
  };
  Node.prototype.a4l = function (cam, ctx) {
    if (!this.f2g()) {
      return false;
    } else if (this.u4k() ? !this.j4k().p2m_1 : false) {
      return cam.i5c(this);
    }
    return true;
  };
  Node.prototype.b4l = function (name) {
    var tmp;
    if (name === this.q2f_1) {
      tmp = this;
    } else {
      tmp = null;
    }
    return tmp;
  };
  Node.$metadata$ = classMeta('Node', [Disposable]);
  function addOffscreenPasses($this) {
    var tmp$ret$0;
    {
      var tmp0_isNotEmpty = $this.y2e_1;
      tmp$ret$0 = !tmp0_isNotEmpty.q();
    }
    if (tmp$ret$0) {
      {
        var tmp1_forEach = $this.y2e_1;
        var tmp0_iterator = tmp1_forEach.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          {
            if (!$this.x2e_1.p(element)) {
              var tmp0_this = $this;
              {
                var tmp0_plusAssign = tmp0_this.x2e_1;
                tmp0_plusAssign.b(element);
              }
            }
          }
        }
      }
      $this.y2e_1.t7();
    }
  }
  function removeOffscreenPasses($this) {
    var tmp$ret$0;
    {
      var tmp0_isNotEmpty = $this.z2e_1;
      tmp$ret$0 = !tmp0_isNotEmpty.q();
    }
    if (tmp$ret$0) {
      $this.x2e_1.f4($this.z2e_1);
      $this.z2e_1.t7();
    }
  }
  function Scene(name) {
    Group.call(this, name);
    this.s2e_1 = new Lighting();
    var tmp = this;
    tmp.t2e_1 = PerspectiveCamera_init_$Create$(null, 1, null);
    var tmp_0 = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp_0.u2e_1 = tmp$ret$0;
    var tmp_1 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = ArrayList_init_$Create$_0();
    }
    tmp_1.v2e_1 = tmp$ret$1;
    this.w2e_1 = new ScreenRenderPass(this);
    var tmp_2 = this;
    var tmp$ret$2;
    {
      tmp$ret$2 = ArrayList_init_$Create$_0();
    }
    tmp_2.x2e_1 = tmp$ret$2;
    var tmp_3 = this;
    var tmp$ret$3;
    {
      tmp$ret$3 = ArrayList_init_$Create$_0();
    }
    tmp_3.y2e_1 = tmp$ret$3;
    var tmp_4 = this;
    var tmp$ret$4;
    {
      tmp$ret$4 = ArrayList_init_$Create$_0();
    }
    tmp_4.z2e_1 = tmp$ret$4;
    var tmp_5 = this;
    var tmp$ret$5;
    {
      tmp$ret$5 = ArrayList_init_$Create$_0();
    }
    tmp_5.a2f_1 = tmp$ret$5;
  }
  Scene.prototype.z4y = function (_set____db54di) {
    this.t2e_1 = _set____db54di;
  };
  Scene.prototype.a4z = function () {
    return this.t2e_1;
  };
  Scene.prototype.m5f = function () {
    return this.u2e_1;
  };
  Scene.prototype.n5f = function () {
    return this.w2e_1;
  };
  Scene.prototype.b2f = function () {
    return this.x2e_1;
  };
  Scene.prototype.c4k = function (_anonymous_parameter_0__qggqh8) {
  };
  Scene.prototype.u4k = function () {
    return false;
  };
  Scene.prototype.i2f = function (pass) {
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.y2e_1;
      tmp0_plusAssign.b(pass);
    }
  };
  Scene.prototype.o5b = function (pass) {
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.z2e_1;
      tmp0_plusAssign.b(pass);
    }
  };
  Scene.prototype.p2f = function (ctx) {
    var inductionVariable = 0;
    var last = this.u2e_1.m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.u2e_1.r(i)(ctx);
      }
       while (inductionVariable <= last);
    removeOffscreenPasses(this);
    addOffscreenPasses(this);
    this.w2e_1.o4z(ctx);
    var inductionVariable_0 = 0;
    var last_0 = this.b2f().m() - 1 | 0;
    if (inductionVariable_0 <= last_0)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var pass = this.b2f().r(i_0);
        if (pass.b4x_1) {
          pass.o4z(ctx);
          pass.p4z(ctx);
        }
      }
       while (inductionVariable_0 <= last_0);
    this.w2e_1.p4z(ctx);
  };
  Scene.prototype.w4k = function (updateEvent) {
    var inductionVariable = 0;
    var last = this.a2f_1.m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.a2f_1.r(i).l4k(updateEvent.x4n_1);
      }
       while (inductionVariable <= last);
    this.a2f_1.t7();
    Group.prototype.w4k.call(this, updateEvent);
  };
  Scene.prototype.l4k = function (ctx) {
    {
      var tmp0_forEach = this.a2f_1;
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          element.l4k(ctx);
        }
      }
    }
    this.a2f_1.t7();
    this.w2e_1.l4k(ctx);
    var inductionVariable = 0;
    var last = this.b2f().m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.b2f().r(i).l4k(ctx);
      }
       while (inductionVariable <= last);
    this.z2e_1.t7();
    this.x2e_1.t7();
    Group.prototype.l4k.call(this, ctx);
  };
  Scene.$metadata$ = classMeta('Scene', undefined, undefined, undefined, undefined, Group.prototype);
  function Tags_init_$Init$(tags, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0)) {
      var tmp$ret$0;
      var tmp$ret$0_0;
      {
        tmp$ret$0 = LinkedHashMap_init_$Create$();
        tmp$ret$0_0 = Unit_getInstance();
      }
      tags = tmp$ret$0;
    }
    Tags.call($this, tags);
    return $this;
  }
  function Tags_init_$Create$(tags, $mask0, $marker) {
    return Tags_init_$Init$(tags, $mask0, $marker, Object.create(Tags.prototype));
  }
  function Tags(tags) {
    this.o5f_1 = tags;
  }
  Tags.prototype.a1 = function () {
    return this.o5f_1.a1();
  };
  Tags.prototype.c3 = function () {
    return this.o5f_1.c3();
  };
  Tags.prototype.m = function () {
    return this.o5f_1.m();
  };
  Tags.prototype.d3 = function () {
    return this.o5f_1.d3();
  };
  Tags.prototype.t7 = function () {
    this.o5f_1.t7();
  };
  Tags.prototype.o10 = function (key) {
    return this.o5f_1.v2(key);
  };
  Tags.prototype.v2 = function (key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return false;
    return this.o10((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
  };
  Tags.prototype.p10 = function (key) {
    return this.o5f_1.b3(key);
  };
  Tags.prototype.b3 = function (key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return null;
    return this.p10((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
  };
  Tags.prototype.q = function () {
    return this.o5f_1.q();
  };
  Tags.prototype.p5f = function (key, value) {
    return this.o5f_1.a(key, value);
  };
  Tags.prototype.a = function (key, value) {
    var tmp = (!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE();
    return this.p5f(tmp, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  Tags.prototype.q5f = function (from) {
    this.o5f_1.b4(from);
  };
  Tags.prototype.b4 = function (from) {
    return this.q5f(from);
  };
  Tags.prototype.r5f = function (key) {
    return this.o5f_1.tf(key);
  };
  Tags.prototype.tf = function (key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return null;
    return this.r5f((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
  };
  Tags.prototype.toString = function () {
    var str = StringBuilder_init_$Create$();
    var tmp$ret$5;
    {
      var tmp$ret$4;
      {
        var tmp0_mapTo = ArrayList_init_$Create$(this.m());
        var tmp$ret$0;
        {
          tmp$ret$0 = this.a1().h();
        }
        var tmp0_iterator = tmp$ret$0;
        while (tmp0_iterator.n()) {
          var item = tmp0_iterator.o();
          var tmp$ret$3;
          {
            var tmp$ret$1;
            {
              tmp$ret$1 = item.l2();
            }
            var k = tmp$ret$1;
            var tmp$ret$2;
            {
              tmp$ret$2 = item.n2();
            }
            var v = tmp$ret$2;
            tmp$ret$3 = !(v == null) ? k + '=' + toString_0(v) : k;
          }
          tmp0_mapTo.b(tmp$ret$3);
        }
        tmp$ret$4 = tmp0_mapTo;
      }
      tmp$ret$5 = tmp$ret$4;
    }
    var tmp = tmp$ret$5;
    joinTo$default(tmp, str, null, '[', ']', 0, null, null, 114, null);
    return str.toString();
  };
  Tags.$metadata$ = classMeta('Tags', [MutableMap]);
  function InterpolatedValue(initial) {
    this.s5f_1 = initial;
    this.t5f_1 = null;
  }
  InterpolatedValue.prototype.n2u = function (_set____db54di) {
    this.s5f_1 = _set____db54di;
  };
  InterpolatedValue.prototype.n2 = function () {
    return this.s5f_1;
  };
  InterpolatedValue.prototype.u5f = function (progress) {
    this.v5f(progress);
    var tmp0_safe_receiver = this.t5f_1;
    if (tmp0_safe_receiver == null)
      null;
    else
      tmp0_safe_receiver(this.s5f_1);
  };
  InterpolatedValue.$metadata$ = classMeta('InterpolatedValue');
  function Companion_40() {
    Companion_instance_40 = this;
    this.w5f_1 = 1;
    this.x5f_1 = 2;
    this.y5f_1 = 3;
  }
  Companion_40.prototype.z5f = function () {
    return this.w5f_1;
  };
  Companion_40.prototype.a5g = function () {
    return this.y5f_1;
  };
  Companion_40.$metadata$ = objectMeta('Companion');
  var Companion_instance_40;
  function Companion_getInstance_40() {
    if (Companion_instance_40 == null)
      new Companion_40();
    return Companion_instance_40;
  }
  function Animator(value) {
    Companion_getInstance_40();
    this.b5g_1 = value;
    this.c5g_1 = 1.0;
    this.d5g_1 = 1.0;
    this.e5g_1 = Companion_getInstance_40().w5f_1;
    this.f5g_1 = 0.0;
  }
  Animator.prototype.n2 = function () {
    return this.b5g_1;
  };
  Animator.prototype.g5g = function (_set____db54di) {
    this.c5g_1 = _set____db54di;
  };
  Animator.prototype.h5g = function (_set____db54di) {
    this.d5g_1 = _set____db54di;
  };
  Animator.prototype.i5g = function () {
    return this.d5g_1;
  };
  Animator.prototype.j5g = function (_set____db54di) {
    this.e5g_1 = _set____db54di;
  };
  Animator.prototype.k5g = function () {
    return this.e5g_1;
  };
  Animator.prototype.l5g = function (_set____db54di) {
    this.f5g_1 = _set____db54di;
  };
  Animator.prototype.m5g = function () {
    return this.f5g_1;
  };
  Animator.prototype.n5g = function (ctx) {
    var tmp$ret$1;
    {
      var tmp0_isFuzzyZero = this.d5g_1;
      var tmp1_isFuzzyZero = get_FUZZY_EQ_F();
      var tmp$ret$0;
      {
        tmp$ret$0 = Math.abs(tmp0_isFuzzyZero);
      }
      tmp$ret$1 = tmp$ret$0 <= tmp1_isFuzzyZero;
    }
    if (!tmp$ret$1) {
      var tmp0_this = this;
      tmp0_this.f5g_1 = tmp0_this.f5g_1 + Time_getInstance().y20_1 * this.d5g_1 / this.c5g_1;
      if (this.f5g_1 >= 1.0 ? this.d5g_1 > 0 : false) {
        var tmp1_subject = this.e5g_1;
        if (tmp1_subject === Companion_getInstance_40().w5f_1) {
          this.f5g_1 = 1.0;
          this.d5g_1 = 0.0;
        } else if (tmp1_subject === Companion_getInstance_40().x5f_1) {
          this.f5g_1 = 0.0;
        } else if (tmp1_subject === Companion_getInstance_40().y5f_1) {
          this.f5g_1 = 1.0;
          this.d5g_1 = -this.d5g_1;
        }
      } else if (this.f5g_1 <= 0.0 ? this.d5g_1 < 0 : false) {
        var tmp2_subject = this.e5g_1;
        if (tmp2_subject === Companion_getInstance_40().w5f_1) {
          this.f5g_1 = 0.0;
          this.d5g_1 = 0.0;
        } else if (tmp2_subject === Companion_getInstance_40().x5f_1) {
          this.f5g_1 = 1.0;
        } else if (tmp2_subject === Companion_getInstance_40().y5f_1) {
          this.f5g_1 = 0.0;
          this.d5g_1 = -this.d5g_1;
        }
      }
      var tmp = this;
      var tmp$ret$2;
      {
        var tmp2_clamp = this.f5g_1;
        tmp$ret$2 = tmp2_clamp < 0.0 ? 0.0 : tmp2_clamp > 1.0 ? 1.0 : tmp2_clamp;
      }
      tmp.f5g_1 = tmp$ret$2;
      this.b5g_1.u5f(this.o5g(this.f5g_1));
    }
    return this.b5g_1.s5f_1;
  };
  Animator.$metadata$ = classMeta('Animator');
  function InverseSquareAnimator(value) {
    Animator.call(this, value);
  }
  InverseSquareAnimator.prototype.o5g = function (progress) {
    return 1.0 - (1.0 - progress) * (1.0 - progress);
  };
  InverseSquareAnimator.$metadata$ = classMeta('InverseSquareAnimator', undefined, undefined, undefined, undefined, Animator.prototype);
  function InterpolatedFloat(from, to) {
    InterpolatedValue.call(this, from);
    this.w5g_1 = from;
    this.x5g_1 = to;
  }
  InterpolatedFloat.prototype.y5g = function (_set____db54di) {
    this.w5g_1 = _set____db54di;
  };
  InterpolatedFloat.prototype.z5g = function (_set____db54di) {
    this.x5g_1 = _set____db54di;
  };
  InterpolatedFloat.prototype.v5f = function (interpolationPos) {
    this.n2u(this.w5g_1 + (this.x5g_1 - this.w5g_1) * interpolationPos);
  };
  InterpolatedFloat.$metadata$ = classMeta('InterpolatedFloat', undefined, undefined, undefined, undefined, InterpolatedValue.prototype);
  function CosAnimator(value) {
    Animator.call(this, value);
  }
  CosAnimator.prototype.o5g = function (progress) {
    var tmp$ret$0;
    {
      var tmp0_cos = progress * get_PI();
      tmp$ret$0 = Math.cos(tmp0_cos);
    }
    return 0.5 - tmp$ret$0 * 0.5;
  };
  CosAnimator.$metadata$ = classMeta('CosAnimator', undefined, undefined, undefined, undefined, Animator.prototype);
  function LinearAnimator(value) {
    Animator.call(this, value);
  }
  LinearAnimator.prototype.o5g = function (progress) {
    return progress;
  };
  LinearAnimator.$metadata$ = classMeta('LinearAnimator', undefined, undefined, undefined, undefined, Animator.prototype);
  function IndexedVertexList_init_$Init$(vertexAttributes, $this) {
    IndexedVertexList.call($this, toList(vertexAttributes));
    return $this;
  }
  function IndexedVertexList_init_$Create$(vertexAttributes) {
    return IndexedVertexList_init_$Init$(vertexAttributes, Object.create(IndexedVertexList.prototype));
  }
  function increaseDataSizeF($this, newSize) {
    var newData = createFloat32Buffer(newSize);
    $this.p2s_1.h3y();
    newData.z3w($this.p2s_1);
    $this.p2s_1 = newData;
  }
  function increaseDataSizeI($this, newSize) {
    var newData = createUint32Buffer(newSize);
    $this.q2s_1.h3y();
    newData.k5h($this.q2s_1);
    $this.q2s_1 = newData;
  }
  function increaseIndicesSize($this, newSize) {
    var newIdxs = createUint32Buffer(newSize);
    $this.r2s_1.h3y();
    newIdxs.k5h($this.r2s_1);
    $this.r2s_1 = newIdxs;
  }
  function Companion_41() {
    Companion_instance_41 = this;
    this.l5h_1 = 1000;
    this.m5h_1 = 2.0;
  }
  Companion_41.$metadata$ = objectMeta('Companion');
  var Companion_instance_41;
  function Companion_getInstance_41() {
    if (Companion_instance_41 == null)
      new Companion_41();
    return Companion_instance_41;
  }
  function IndexedVertexList(vertexAttributes) {
    Companion_getInstance_41();
    this.f2s_1 = vertexAttributes;
    var tmp = this;
    var tmp$ret$3;
    {
      var tmp0_fold = this.f2s_1;
      var accumulator = new Long(0, 0);
      var tmp0_iterator = tmp0_fold.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        var tmp$ret$2;
        {
          var tmp1__anonymous__uwfjfc = accumulator;
          var tmp$ret$1;
          {
            var tmp$ret$0;
            {
              tmp$ret$0 = tmp1__anonymous__uwfjfc.ja(new Long(31, 0));
            }
            var tmp0_plus = tmp$ret$0;
            var tmp1_plus = element.hashCode();
            tmp$ret$1 = tmp0_plus.ka(toLong(tmp1_plus));
          }
          tmp$ret$2 = tmp$ret$1;
        }
        accumulator = tmp$ret$2;
      }
      tmp$ret$3 = accumulator;
    }
    tmp.g2s_1 = tmp$ret$3;
    this.m2s_1 = PrimitiveType_TRIANGLES_getInstance();
    this.n2s_1 = Usage_STATIC_getInstance();
    this.o2s_1 = 0;
    var tmp_0 = this;
    Companion_getInstance_41();
    tmp_0.r2s_1 = createUint32Buffer(1000);
    this.s2s_1 = new BoundingBox();
    this.u2s_1 = false;
    this.v2s_1 = true;
    this.w2s_1 = false;
    var strideF = 0;
    var strideI = 0;
    var tmp$ret$4;
    {
      tmp$ret$4 = LinkedHashMap_init_$Create$();
    }
    var byteOffsets = tmp$ret$4;
    var tmp0_iterator_0 = this.f2s_1.h();
    while (tmp0_iterator_0.n()) {
      var attrib = tmp0_iterator_0.o();
      if ((attrib.y2s_1.equals(GlslType_MAT_2F_getInstance()) ? true : attrib.y2s_1.equals(GlslType_MAT_3F_getInstance())) ? true : attrib.y2s_1.equals(GlslType_MAT_4F_getInstance())) {
        throw IllegalArgumentException_init_$Create$('Matrix types are not supported as vertex attributes');
      }
      if (attrib.y2s_1.g2t_1) {
        {
          var tmp0_set = strideI;
          byteOffsets.a(attrib, tmp0_set);
        }
        strideI = strideI + attrib.y2s_1.f2t_1 | 0;
      } else {
        {
          var tmp1_set = strideF;
          byteOffsets.a(attrib, tmp1_set);
        }
        strideF = strideF + attrib.y2s_1.f2t_1 | 0;
      }
    }
    this.l2s_1 = byteOffsets;
    this.h2s_1 = strideF / 4 | 0;
    this.i2s_1 = strideF;
    this.j2s_1 = strideI / 4 | 0;
    this.k2s_1 = strideI;
    var tmp_1 = this;
    var tmp_2 = strideF;
    Companion_getInstance_41();
    tmp_1.p2s_1 = createFloat32Buffer(imul(tmp_2, 1000));
    var tmp_3 = this;
    var tmp_4 = strideI;
    Companion_getInstance_41();
    tmp_3.q2s_1 = createUint32Buffer(imul(tmp_4, 1000));
    this.t2s_1 = new VertexView(this, 0);
  }
  IndexedVertexList.prototype.n5h = function () {
    return this.h2s_1;
  };
  IndexedVertexList.prototype.o5h = function () {
    return this.j2s_1;
  };
  IndexedVertexList.prototype.p5h = function () {
    return this.l2s_1;
  };
  IndexedVertexList.prototype.q5h = function (_set____db54di) {
    this.o2s_1 = _set____db54di;
  };
  IndexedVertexList.prototype.r5h = function () {
    return this.o2s_1;
  };
  IndexedVertexList.prototype.v3w = function () {
    return this.r2s_1.qr();
  };
  IndexedVertexList.prototype.s5h = function () {
    return this.v3w() / this.m2s_1.v5h_1 | 0;
  };
  IndexedVertexList.prototype.w5h = function () {
    return this.p2s_1;
  };
  IndexedVertexList.prototype.x5h = function () {
    return this.q2s_1;
  };
  IndexedVertexList.prototype.j4k = function () {
    return this.s2s_1;
  };
  IndexedVertexList.prototype.y5h = function () {
    return this.t2s_1;
  };
  IndexedVertexList.prototype.z5h = function (_set____db54di) {
    this.v2s_1 = _set____db54di;
  };
  IndexedVertexList.prototype.y3w = function (reqSpace) {
    if (this.p2s_1.a5i() < imul(this.h2s_1, reqSpace)) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp = this.p2s_1.b1w();
          Companion_getInstance_41();
          var tmp0_round = tmp * 2.0;
          tmp$ret$0 = round(tmp0_round);
        }
        var tmp1_max = numberToInt(tmp$ret$0);
        var tmp2_max = imul(this.o2s_1 + reqSpace | 0, this.h2s_1);
        tmp$ret$1 = Math.max(tmp1_max, tmp2_max);
      }
      increaseDataSizeF(this, tmp$ret$1);
    }
    if (this.q2s_1.a5i() < imul(this.j2s_1, reqSpace)) {
      var tmp$ret$3;
      {
        var tmp$ret$2;
        {
          var tmp_0 = this.q2s_1.b1w();
          Companion_getInstance_41();
          var tmp3_round = tmp_0 * 2.0;
          tmp$ret$2 = round(tmp3_round);
        }
        var tmp4_max = numberToInt(tmp$ret$2);
        var tmp5_max = imul(this.o2s_1 + reqSpace | 0, this.j2s_1);
        tmp$ret$3 = Math.max(tmp4_max, tmp5_max);
      }
      increaseDataSizeI(this, tmp$ret$3);
    }
  };
  IndexedVertexList.prototype.u4j = function (reqSpace, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      reqSpace = 1;
    return this.y3w(reqSpace);
  };
  IndexedVertexList.prototype.w3w = function (reqSpace) {
    if (this.r2s_1.a5i() < reqSpace) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp = this.r2s_1.b1w();
          Companion_getInstance_41();
          var tmp0_round = tmp * 2.0;
          tmp$ret$0 = round(tmp0_round);
        }
        var tmp1_max = numberToInt(tmp$ret$0);
        var tmp2_max = this.v3w() + reqSpace | 0;
        tmp$ret$1 = Math.max(tmp1_max, tmp2_max);
      }
      increaseIndicesSize(this, tmp$ret$1);
    }
  };
  IndexedVertexList.prototype.b5i = function (reqSpace, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      reqSpace = 1;
    return this.w3w(reqSpace);
  };
  IndexedVertexList.prototype.c5i = function (attribute) {
    return this.f2s_1.p(attribute);
  };
  IndexedVertexList.prototype.d5i = function (rebuildBounds, block) {
    var wasBatchUpdate = this.w2s_1;
    this.w2s_1 = true;
    block(this);
    this.v2s_1 = true;
    this.w2s_1 = wasBatchUpdate;
    if (rebuildBounds) {
      this.e5f();
    }
  };
  IndexedVertexList.prototype.e5i = function (block) {
    this.u4j(0, 1, null);
    var inductionVariable = 1;
    var last = this.h2s_1;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp1_this = this;
        tmp1_this.p2s_1.v4j(0.0);
      }
       while (!(i === last));
    var inductionVariable_0 = 1;
    var last_0 = this.j2s_1;
    if (inductionVariable_0 <= last_0)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var tmp3_this = this;
        tmp3_this.q2s_1.w4j(0);
      }
       while (!(i_0 === last_0));
    var tmp4_this = this;
    var tmp5 = tmp4_this.o2s_1;
    tmp4_this.o2s_1 = tmp5 + 1 | 0;
    this.t2s_1.ue(tmp5);
    block(this.t2s_1);
    this.s2s_1.v2k(this.t2s_1.g4g_1);
    this.v2s_1 = true;
    return this.o2s_1 - 1 | 0;
  };
  IndexedVertexList.prototype.f5i = function (idx) {
    if (this.r2s_1.a5i() === 0) {
      this.b5i(0, 1, null);
    }
    var tmp0_this = this;
    tmp0_this.r2s_1.w4j(idx);
  };
  IndexedVertexList.prototype.a4k = function (i0, i1, i2) {
    this.f5i(i0);
    this.f5i(i1);
    this.f5i(i2);
  };
  IndexedVertexList.prototype.e5f = function () {
    this.s2s_1.x2m();
    var inductionVariable = 0;
    var last = this.o2s_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.t2s_1.ue(i);
        this.s2s_1.v2k(this.t2s_1.g4g_1);
      }
       while (inductionVariable < last);
  };
  IndexedVertexList.prototype.t7 = function () {
    this.o2s_1 = 0;
    this.p2s_1.w4s(0);
    this.p2s_1.j5f(this.p2s_1.b1w());
    this.q2s_1.w4s(0);
    this.q2s_1.j5f(this.q2s_1.b1w());
    this.r2s_1.w4s(0);
    this.r2s_1.j5f(this.r2s_1.b1w());
    this.v2s_1 = true;
  };
  IndexedVertexList.prototype.r = function (i) {
    if (i < 0 ? true : i >= (this.p2s_1.b1w() / this.h2s_1 | 0)) {
      throw KoolException_init_$Create$('Vertex index out of bounds: ' + i);
    }
    return new VertexView(this, i);
  };
  IndexedVertexList.prototype.g5i = function (tangentSign) {
    if (!this.f2s_1.p(Companion_getInstance_31().p2z_1)) {
      return Unit_getInstance();
    }
    if (!this.m2s_1.equals(PrimitiveType_TRIANGLES_getInstance())) {
      throw KoolException_init_$Create$('Normal generation is only supported for triangle meshes');
    }
    var v0 = this.r(0);
    var v1 = this.r(1);
    var v2 = this.r(2);
    var e1 = MutableVec3f_init_$Create$();
    var e2 = MutableVec3f_init_$Create$();
    var tan = MutableVec3f_init_$Create$();
    var inductionVariable = 0;
    var last = this.o2s_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        v0.ue(i);
        var tmp = Companion_getInstance_9().c2k_1;
        v0.i4g_1.z2l(tmp, 0.0, 2, null);
      }
       while (inductionVariable < last);
    var progression = step(until(0, this.v3w()), 3);
    var inductionVariable_0 = progression.g1_1;
    var last_0 = progression.h1_1;
    var step_0 = progression.i1_1;
    if ((step_0 > 0 ? inductionVariable_0 <= last_0 : false) ? true : step_0 < 0 ? last_0 <= inductionVariable_0 : false)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + step_0 | 0;
        v0.ue(this.r2s_1.r(i_0));
        v1.ue(this.r2s_1.r(i_0 + 1 | 0));
        v2.ue(this.r2s_1.r(i_0 + 2 | 0));
        v1.g4g_1.t2k(v0.g4g_1, e1);
        v2.g4g_1.t2k(v0.g4g_1, e2);
        var du1 = v1.k4g_1.e23() - v0.k4g_1.e23();
        var dv1 = v1.k4g_1.g23() - v0.k4g_1.g23();
        var du2 = v2.k4g_1.e23() - v0.k4g_1.e23();
        var dv2 = v2.k4g_1.g23() - v0.k4g_1.g23();
        var f = 1.0 / (du1 * dv2 - du2 * dv1);
        if (isNaN_0(f)) {
        } else {
          tan.x2i(f * (dv2 * e1.e23() - dv1 * e2.e23()));
          tan.y2i(f * (dv2 * e1.g23() - dv1 * e2.g23()));
          tan.n2k(f * (dv2 * e1.w2g() - dv1 * e2.w2g()));
          var tmp2_this = v0;
          tmp2_this.i4g_1.a2m(Vec4f_init_$Create$_0(tan, 0.0));
          var tmp3_this = v1;
          tmp3_this.i4g_1.a2m(Vec4f_init_$Create$_0(tan, 0.0));
          var tmp4_this = v2;
          tmp4_this.i4g_1.a2m(Vec4f_init_$Create$_0(tan, 0.0));
        }
      }
       while (!(i_0 === last_0));
    var inductionVariable_1 = 0;
    var last_1 = this.o2s_1;
    if (inductionVariable_1 < last_1)
      do {
        var i_1 = inductionVariable_1;
        inductionVariable_1 = inductionVariable_1 + 1 | 0;
        v0.ue(i_1);
        if (v0.h4g_1.u2j() === 0.0) {
          v0.h4g_1.s2k(Companion_getInstance_9().f2k_1);
        }
        if (!(v0.i4g_1.u2j() === 0.0)) {
          v0.i4g_1.w2k();
          v0.i4g_1.u2l(tangentSign);
        } else {
          var tmp_0 = Companion_getInstance_9().e2k_1;
          v0.i4g_1.z2l(tmp_0, 0.0, 2, null);
        }
      }
       while (inductionVariable_1 < last_1);
  };
  IndexedVertexList.prototype.g5f = function (tangentSign, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      tangentSign = 1.0;
    return this.g5i(tangentSign);
  };
  IndexedVertexList.$metadata$ = classMeta('IndexedVertexList');
  var PrimitiveType_LINES_instance;
  var PrimitiveType_POINTS_instance;
  var PrimitiveType_TRIANGLES_instance;
  var PrimitiveType_entriesInitialized;
  function PrimitiveType_initEntries() {
    if (PrimitiveType_entriesInitialized)
      return Unit_getInstance();
    PrimitiveType_entriesInitialized = true;
    PrimitiveType_LINES_instance = new PrimitiveType('LINES', 0, 2);
    PrimitiveType_POINTS_instance = new PrimitiveType('POINTS', 1, 1);
    PrimitiveType_TRIANGLES_instance = new PrimitiveType('TRIANGLES', 2, 3);
  }
  function PrimitiveType(name, ordinal, nVertices) {
    Enum.call(this, name, ordinal);
    this.v5h_1 = nVertices;
  }
  PrimitiveType.$metadata$ = classMeta('PrimitiveType', undefined, undefined, undefined, undefined, Enum.prototype);
  var Usage_DYNAMIC_instance;
  var Usage_STATIC_instance;
  var Usage_entriesInitialized;
  function Usage_initEntries() {
    if (Usage_entriesInitialized)
      return Unit_getInstance();
    Usage_entriesInitialized = true;
    Usage_DYNAMIC_instance = new Usage('DYNAMIC', 0);
    Usage_STATIC_instance = new Usage('STATIC', 1);
  }
  function Usage(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  Usage.$metadata$ = classMeta('Usage', undefined, undefined, undefined, undefined, Enum.prototype);
  function PrimitiveType_TRIANGLES_getInstance() {
    PrimitiveType_initEntries();
    return PrimitiveType_TRIANGLES_instance;
  }
  function Usage_DYNAMIC_getInstance() {
    Usage_initEntries();
    return Usage_DYNAMIC_instance;
  }
  function Usage_STATIC_getInstance() {
    Usage_initEntries();
    return Usage_STATIC_instance;
  }
  function renderMsdfFont($this, font, props) {
    {
      $this.f3w_1.z2h();
      {
        if (props.b3y_1) {
          var tmp$ret$0;
          {
            var tmp0_round = props.z3x_1.e23();
            tmp$ret$0 = round(tmp0_round);
          }
          var tmp = tmp$ret$0;
          var tmp$ret$1;
          {
            var tmp1_round = props.z3x_1.g23();
            tmp$ret$1 = round(tmp1_round);
          }
          $this.n2h(tmp, tmp$ret$1, props.z3x_1.w2g());
        } else {
          $this.f3y(props.z3x_1);
        }
        var meta = font.y4o_1.u4o_1;
        var s = props.a3y_1 * font.d4p_1 * font.h5i();
        var us = 1.0 / meta.o5i_1.l5i_1;
        var vs = 1.0 / meta.o5i_1.m5i_1;
        var pxRange = s / meta.o5i_1.k5i_1 * meta.o5i_1.j5i_1;
        var advanced = 0.0;
        var prevC = 0;
        var indexedObject = props.y3x_1;
        var inductionVariable = 0;
        var last = indexedObject.length;
        $l$loop: while (inductionVariable < last) {
          var c = charSequenceGet(indexedObject, inductionVariable);
          inductionVariable = inductionVariable + 1 | 0;
          if (equals(new Char(c), new Char(_Char___init__impl__6a9atx(10)))) {
            if (props.c3y_1) {
              var tmp$ret$2;
              {
                var tmp2_round = font.t5i();
                tmp$ret$2 = round(tmp2_round);
              }
              $this.n2h(0.0, -tmp$ret$2, 0.0);
            } else {
              var tmp$ret$3;
              {
                var tmp3_round = font.t5i();
                tmp$ret$3 = round(tmp3_round);
              }
              $this.n2h(0.0, tmp$ret$3, 0.0);
            }
            advanced = 0.0;
          }
          var tmp1_elvis_lhs = font.y4o_1.v4o_1.b3(new Char(c));
          var tmp_0;
          if (tmp1_elvis_lhs == null) {
            continue $l$loop;
          } else {
            tmp_0 = tmp1_elvis_lhs;
          }
          var g = tmp_0;
          var tmp_1 = prevC << 16;
          var tmp$ret$4;
          {
            tmp$ret$4 = Char__toInt_impl_vasixd(c);
          }
          var kerningKey = tmp_1 | tmp$ret$4;
          var tmp2_safe_receiver = font.y4o_1.w4o_1.b3(kerningKey);
          if (tmp2_safe_receiver == null)
            null;
          else {
            var tmp$ret$5;
            {
              {
              }
              advanced = advanced + tmp2_safe_receiver;
              tmp$ret$5 = Unit_getInstance();
            }
          }
          var tmp$ret$6;
          {
            tmp$ret$6 = Char__toInt_impl_vasixd(c);
          }
          prevC = tmp$ret$6;
          var yTop = props.c3y_1 ? g.a5j_1.x5i_1 * s : -g.a5j_1.x5i_1 * s;
          var yBot = props.c3y_1 ? g.a5j_1.v5i_1 * s : -g.a5j_1.v5i_1 * s;
          var h = yTop - yBot;
          var lt = (advanced + g.a5j_1.u5i_1) * s;
          var w = (g.a5j_1.w5i_1 - g.a5j_1.u5i_1) * s;
          var msdfProps = $this.e3w_1.t2s_1.q4g(Companion_getInstance_22().i3y_1);
          var glowColor = $this.e3w_1.t2s_1.q4g(Companion_getInstance_22().j3y_1);
          var tmp$ret$9;
          {
            var tmp$ret$8;
            {
              var tmp0_addVertex = $this.e3w_1;
              tmp0_addVertex.u4j(0, 1, null);
              var inductionVariable_0 = 1;
              var last_0 = tmp0_addVertex.h2s_1;
              if (inductionVariable_0 <= last_0)
                do {
                  var i = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  var tmp1_this = tmp0_addVertex;
                  tmp1_this.p2s_1.v4j(0.0);
                }
                 while (!(i === last_0));
              var inductionVariable_1 = 1;
              var last_1 = tmp0_addVertex.j2s_1;
              if (inductionVariable_1 <= last_1)
                do {
                  var i_0 = inductionVariable_1;
                  inductionVariable_1 = inductionVariable_1 + 1 | 0;
                  var tmp3_this = tmp0_addVertex;
                  tmp3_this.q2s_1.w4j(0);
                }
                 while (!(i_0 === last_1));
              var tmp4_this = tmp0_addVertex;
              var tmp5 = tmp4_this.o2s_1;
              tmp4_this.o2s_1 = tmp5 + 1 | 0;
              tmp0_addVertex.t2s_1.ue(tmp5);
              {
                var tmp1__anonymous__uwfjfc = tmp0_addVertex.t2s_1;
                tmp1__anonymous__uwfjfc.j4g_1.x2l($this.h3w_1);
                tmp1__anonymous__uwfjfc.x4j($this.i3w_1);
                tmp1__anonymous__uwfjfc.y4j($this.j3w_1);
                tmp1__anonymous__uwfjfc.z4j($this.k3w_1);
                {
                  tmp1__anonymous__uwfjfc.x2g(lt, yBot, 0.0);
                  tmp1__anonymous__uwfjfc.k4g_1.c2j(g.b5j_1.u5i_1 * us, 1.0 - g.b5j_1.v5i_1 * vs);
                  var tmp0_safe_receiver = msdfProps;
                  if (tmp0_safe_receiver == null)
                    null;
                  else
                    tmp0_safe_receiver.w2l(pxRange, font.a4p_1, font.b4p_1, 0.0);
                  var tmp1_safe_receiver = font.c4p_1;
                  if (tmp1_safe_receiver == null)
                    null;
                  else {
                    var tmp$ret$7;
                    {
                      {
                      }
                      var tmp0_safe_receiver_0 = glowColor;
                      if (tmp0_safe_receiver_0 == null)
                        null;
                      else
                        tmp0_safe_receiver_0.x2l(tmp1_safe_receiver);
                      tmp$ret$7 = Unit_getInstance();
                    }
                  }
                }
                $this.f3w_1.y2g(tmp1__anonymous__uwfjfc.g4g_1, 0.0, 2, null);
                if ($this.m3w_1 ? !(tmp1__anonymous__uwfjfc.h4g_1.u2j() === 0.0) : false) {
                  $this.f3w_1.u2g(tmp1__anonymous__uwfjfc.h4g_1, 0.0);
                  tmp1__anonymous__uwfjfc.h4g_1.w2k();
                }
                var tmp0_safe_receiver_1 = $this.l3w_1;
                if (tmp0_safe_receiver_1 == null)
                  null;
                else
                  tmp0_safe_receiver_1(tmp1__anonymous__uwfjfc);
              }
              tmp0_addVertex.s2s_1.v2k(tmp0_addVertex.t2s_1.g4g_1);
              tmp0_addVertex.v2s_1 = true;
              tmp$ret$8 = tmp0_addVertex.o2s_1 - 1 | 0;
            }
            tmp$ret$9 = tmp$ret$8;
          }
          var iBtLt = tmp$ret$9;
          var tmp$ret$12;
          {
            var tmp$ret$11;
            {
              var tmp0_addVertex_0 = $this.e3w_1;
              tmp0_addVertex_0.u4j(0, 1, null);
              var inductionVariable_2 = 1;
              var last_2 = tmp0_addVertex_0.h2s_1;
              if (inductionVariable_2 <= last_2)
                do {
                  var i_1 = inductionVariable_2;
                  inductionVariable_2 = inductionVariable_2 + 1 | 0;
                  var tmp1_this_0 = tmp0_addVertex_0;
                  tmp1_this_0.p2s_1.v4j(0.0);
                }
                 while (!(i_1 === last_2));
              var inductionVariable_3 = 1;
              var last_3 = tmp0_addVertex_0.j2s_1;
              if (inductionVariable_3 <= last_3)
                do {
                  var i_2 = inductionVariable_3;
                  inductionVariable_3 = inductionVariable_3 + 1 | 0;
                  var tmp3_this_0 = tmp0_addVertex_0;
                  tmp3_this_0.q2s_1.w4j(0);
                }
                 while (!(i_2 === last_3));
              var tmp4_this_0 = tmp0_addVertex_0;
              var tmp5_0 = tmp4_this_0.o2s_1;
              tmp4_this_0.o2s_1 = tmp5_0 + 1 | 0;
              tmp0_addVertex_0.t2s_1.ue(tmp5_0);
              {
                var tmp1__anonymous__uwfjfc_0 = tmp0_addVertex_0.t2s_1;
                tmp1__anonymous__uwfjfc_0.j4g_1.x2l($this.h3w_1);
                tmp1__anonymous__uwfjfc_0.x4j($this.i3w_1);
                tmp1__anonymous__uwfjfc_0.y4j($this.j3w_1);
                tmp1__anonymous__uwfjfc_0.z4j($this.k3w_1);
                {
                  tmp1__anonymous__uwfjfc_0.x2g(lt + w, yBot, 0.0);
                  tmp1__anonymous__uwfjfc_0.k4g_1.c2j(g.b5j_1.w5i_1 * us, 1.0 - g.b5j_1.v5i_1 * vs);
                  var tmp0_safe_receiver_2 = msdfProps;
                  if (tmp0_safe_receiver_2 == null)
                    null;
                  else
                    tmp0_safe_receiver_2.w2l(pxRange, font.a4p_1, font.b4p_1, 0.0);
                  var tmp1_safe_receiver_0 = font.c4p_1;
                  if (tmp1_safe_receiver_0 == null)
                    null;
                  else {
                    var tmp$ret$10;
                    {
                      {
                      }
                      var tmp0_safe_receiver_3 = glowColor;
                      if (tmp0_safe_receiver_3 == null)
                        null;
                      else
                        tmp0_safe_receiver_3.x2l(tmp1_safe_receiver_0);
                      tmp$ret$10 = Unit_getInstance();
                    }
                  }
                }
                $this.f3w_1.y2g(tmp1__anonymous__uwfjfc_0.g4g_1, 0.0, 2, null);
                if ($this.m3w_1 ? !(tmp1__anonymous__uwfjfc_0.h4g_1.u2j() === 0.0) : false) {
                  $this.f3w_1.u2g(tmp1__anonymous__uwfjfc_0.h4g_1, 0.0);
                  tmp1__anonymous__uwfjfc_0.h4g_1.w2k();
                }
                var tmp0_safe_receiver_4 = $this.l3w_1;
                if (tmp0_safe_receiver_4 == null)
                  null;
                else
                  tmp0_safe_receiver_4(tmp1__anonymous__uwfjfc_0);
              }
              tmp0_addVertex_0.s2s_1.v2k(tmp0_addVertex_0.t2s_1.g4g_1);
              tmp0_addVertex_0.v2s_1 = true;
              tmp$ret$11 = tmp0_addVertex_0.o2s_1 - 1 | 0;
            }
            tmp$ret$12 = tmp$ret$11;
          }
          var iBtRt = tmp$ret$12;
          var tmp$ret$15;
          {
            var tmp$ret$14;
            {
              var tmp0_addVertex_1 = $this.e3w_1;
              tmp0_addVertex_1.u4j(0, 1, null);
              var inductionVariable_4 = 1;
              var last_4 = tmp0_addVertex_1.h2s_1;
              if (inductionVariable_4 <= last_4)
                do {
                  var i_3 = inductionVariable_4;
                  inductionVariable_4 = inductionVariable_4 + 1 | 0;
                  var tmp1_this_1 = tmp0_addVertex_1;
                  tmp1_this_1.p2s_1.v4j(0.0);
                }
                 while (!(i_3 === last_4));
              var inductionVariable_5 = 1;
              var last_5 = tmp0_addVertex_1.j2s_1;
              if (inductionVariable_5 <= last_5)
                do {
                  var i_4 = inductionVariable_5;
                  inductionVariable_5 = inductionVariable_5 + 1 | 0;
                  var tmp3_this_1 = tmp0_addVertex_1;
                  tmp3_this_1.q2s_1.w4j(0);
                }
                 while (!(i_4 === last_5));
              var tmp4_this_1 = tmp0_addVertex_1;
              var tmp5_1 = tmp4_this_1.o2s_1;
              tmp4_this_1.o2s_1 = tmp5_1 + 1 | 0;
              tmp0_addVertex_1.t2s_1.ue(tmp5_1);
              {
                var tmp1__anonymous__uwfjfc_1 = tmp0_addVertex_1.t2s_1;
                tmp1__anonymous__uwfjfc_1.j4g_1.x2l($this.h3w_1);
                tmp1__anonymous__uwfjfc_1.x4j($this.i3w_1);
                tmp1__anonymous__uwfjfc_1.y4j($this.j3w_1);
                tmp1__anonymous__uwfjfc_1.z4j($this.k3w_1);
                {
                  tmp1__anonymous__uwfjfc_1.x2g(lt - h * font.z4o_1, yBot + h, 0.0);
                  tmp1__anonymous__uwfjfc_1.k4g_1.c2j(g.b5j_1.u5i_1 * us, 1.0 - g.b5j_1.x5i_1 * vs);
                  var tmp0_safe_receiver_5 = msdfProps;
                  if (tmp0_safe_receiver_5 == null)
                    null;
                  else
                    tmp0_safe_receiver_5.w2l(pxRange, font.a4p_1, font.b4p_1, 0.0);
                  var tmp1_safe_receiver_1 = font.c4p_1;
                  if (tmp1_safe_receiver_1 == null)
                    null;
                  else {
                    var tmp$ret$13;
                    {
                      {
                      }
                      var tmp0_safe_receiver_6 = glowColor;
                      if (tmp0_safe_receiver_6 == null)
                        null;
                      else
                        tmp0_safe_receiver_6.x2l(tmp1_safe_receiver_1);
                      tmp$ret$13 = Unit_getInstance();
                    }
                  }
                }
                $this.f3w_1.y2g(tmp1__anonymous__uwfjfc_1.g4g_1, 0.0, 2, null);
                if ($this.m3w_1 ? !(tmp1__anonymous__uwfjfc_1.h4g_1.u2j() === 0.0) : false) {
                  $this.f3w_1.u2g(tmp1__anonymous__uwfjfc_1.h4g_1, 0.0);
                  tmp1__anonymous__uwfjfc_1.h4g_1.w2k();
                }
                var tmp0_safe_receiver_7 = $this.l3w_1;
                if (tmp0_safe_receiver_7 == null)
                  null;
                else
                  tmp0_safe_receiver_7(tmp1__anonymous__uwfjfc_1);
              }
              tmp0_addVertex_1.s2s_1.v2k(tmp0_addVertex_1.t2s_1.g4g_1);
              tmp0_addVertex_1.v2s_1 = true;
              tmp$ret$14 = tmp0_addVertex_1.o2s_1 - 1 | 0;
            }
            tmp$ret$15 = tmp$ret$14;
          }
          var iTpLt = tmp$ret$15;
          var tmp$ret$18;
          {
            var tmp$ret$17;
            {
              var tmp0_addVertex_2 = $this.e3w_1;
              tmp0_addVertex_2.u4j(0, 1, null);
              var inductionVariable_6 = 1;
              var last_6 = tmp0_addVertex_2.h2s_1;
              if (inductionVariable_6 <= last_6)
                do {
                  var i_5 = inductionVariable_6;
                  inductionVariable_6 = inductionVariable_6 + 1 | 0;
                  var tmp1_this_2 = tmp0_addVertex_2;
                  tmp1_this_2.p2s_1.v4j(0.0);
                }
                 while (!(i_5 === last_6));
              var inductionVariable_7 = 1;
              var last_7 = tmp0_addVertex_2.j2s_1;
              if (inductionVariable_7 <= last_7)
                do {
                  var i_6 = inductionVariable_7;
                  inductionVariable_7 = inductionVariable_7 + 1 | 0;
                  var tmp3_this_2 = tmp0_addVertex_2;
                  tmp3_this_2.q2s_1.w4j(0);
                }
                 while (!(i_6 === last_7));
              var tmp4_this_2 = tmp0_addVertex_2;
              var tmp5_2 = tmp4_this_2.o2s_1;
              tmp4_this_2.o2s_1 = tmp5_2 + 1 | 0;
              tmp0_addVertex_2.t2s_1.ue(tmp5_2);
              {
                var tmp1__anonymous__uwfjfc_2 = tmp0_addVertex_2.t2s_1;
                tmp1__anonymous__uwfjfc_2.j4g_1.x2l($this.h3w_1);
                tmp1__anonymous__uwfjfc_2.x4j($this.i3w_1);
                tmp1__anonymous__uwfjfc_2.y4j($this.j3w_1);
                tmp1__anonymous__uwfjfc_2.z4j($this.k3w_1);
                {
                  tmp1__anonymous__uwfjfc_2.x2g(lt + w - h * font.z4o_1, yBot + h, 0.0);
                  tmp1__anonymous__uwfjfc_2.k4g_1.c2j(g.b5j_1.w5i_1 * us, 1.0 - g.b5j_1.x5i_1 * vs);
                  var tmp0_safe_receiver_8 = msdfProps;
                  if (tmp0_safe_receiver_8 == null)
                    null;
                  else
                    tmp0_safe_receiver_8.w2l(pxRange, font.a4p_1, font.b4p_1, 0.0);
                  var tmp1_safe_receiver_2 = font.c4p_1;
                  if (tmp1_safe_receiver_2 == null)
                    null;
                  else {
                    var tmp$ret$16;
                    {
                      {
                      }
                      var tmp0_safe_receiver_9 = glowColor;
                      if (tmp0_safe_receiver_9 == null)
                        null;
                      else
                        tmp0_safe_receiver_9.x2l(tmp1_safe_receiver_2);
                      tmp$ret$16 = Unit_getInstance();
                    }
                  }
                }
                $this.f3w_1.y2g(tmp1__anonymous__uwfjfc_2.g4g_1, 0.0, 2, null);
                if ($this.m3w_1 ? !(tmp1__anonymous__uwfjfc_2.h4g_1.u2j() === 0.0) : false) {
                  $this.f3w_1.u2g(tmp1__anonymous__uwfjfc_2.h4g_1, 0.0);
                  tmp1__anonymous__uwfjfc_2.h4g_1.w2k();
                }
                var tmp0_safe_receiver_10 = $this.l3w_1;
                if (tmp0_safe_receiver_10 == null)
                  null;
                else
                  tmp0_safe_receiver_10(tmp1__anonymous__uwfjfc_2);
              }
              tmp0_addVertex_2.s2s_1.v2k(tmp0_addVertex_2.t2s_1.g4g_1);
              tmp0_addVertex_2.v2s_1 = true;
              tmp$ret$17 = tmp0_addVertex_2.o2s_1 - 1 | 0;
            }
            tmp$ret$18 = tmp$ret$17;
          }
          var iTpRt = tmp$ret$18;
          $this.a4k(iBtLt, iBtRt, iTpRt);
          $this.a4k(iBtLt, iTpRt, iTpLt);
          advanced = advanced + g.z5i_1;
        }
      }
      $this.f3w_1.a2i();
    }
  }
  function renderAtlasFont($this, font, props) {
    var charMap = font.b1y_1;
    if (charMap == null) {
      var tmp$ret$3;
      {
        var tmp$ret$2;
        {
          var tmp2_eExt = Log_getInstance();
          var tmp$ret$1;
          {
            var tmp1_logExt = Level_ERROR_getInstance();
            var tmp0_log = getKClassFromExpression($this).ei();
            var tmp;
            if (tmp1_logExt.e1w_1 >= tmp2_eExt.y1v_1.e1w_1) {
              var tmp_0 = tmp2_eExt.z1v_1;
              var tmp$ret$0;
              {
                tmp$ret$0 = 'Font char map has not yet been initialized';
              }
              tmp = tmp_0(tmp1_logExt, tmp0_log, tmp$ret$0);
            }
            tmp$ret$1 = tmp;
          }
          tmp$ret$2 = tmp$ret$1;
        }
        tmp$ret$3 = tmp$ret$2;
      }
      return Unit_getInstance();
    }
    {
      $this.f3w_1.z2h();
      {
        if (props.b3y_1) {
          var tmp$ret$4;
          {
            var tmp0_round = props.z3x_1.e23();
            tmp$ret$4 = round(tmp0_round);
          }
          var tmp_1 = tmp$ret$4;
          var tmp$ret$5;
          {
            var tmp1_round = props.z3x_1.g23();
            tmp$ret$5 = round(tmp1_round);
          }
          $this.n2h(tmp_1, tmp$ret$5, props.z3x_1.w2g());
        } else {
          $this.f3y(props.z3x_1);
        }
        if (!(props.a3y_1 === 1.0)) {
          $this.t2h(props.a3y_1, props.a3y_1, props.a3y_1);
        }
        var ct = props.d3y_1;
        var advanced = 0.0;
        var rectProps = new RectProps();
        var indexedObject = props.y3x_1;
        var inductionVariable = 0;
        var last = indexedObject.length;
        while (inductionVariable < last) {
          var c = charSequenceGet(indexedObject, inductionVariable);
          inductionVariable = inductionVariable + 1 | 0;
          if (equals(new Char(c), new Char(_Char___init__impl__6a9atx(10)))) {
            var lineHeight = font.t5i();
            if (props.c3y_1) {
              var tmp$ret$6;
              {
                tmp$ret$6 = round(lineHeight);
              }
              $this.n2h(0.0, -tmp$ret$6, 0.0);
            } else {
              var tmp$ret$7;
              {
                tmp$ret$7 = round(lineHeight);
              }
              $this.n2h(0.0, tmp$ret$7, 0.0);
            }
            advanced = 0.0;
          }
          var metrics = charMap.c5j(c);
          if (!(metrics == null)) {
            var advOffset = 0.0;
            if (ct == null) {
              advOffset = advanced;
            } else {
              ct($this, advanced);
            }
            var tmp$ret$10;
            {
              {
              }
              {
                var x = advOffset - metrics.f5j_1;
                var y = props.c3y_1 ? metrics.g5j_1 - metrics.e5j_1 : -metrics.g5j_1;
                if (props.b3y_1) {
                  var tmp$ret$8;
                  {
                    tmp$ret$8 = round(x);
                  }
                  var tmp_2 = tmp$ret$8;
                  var tmp$ret$9;
                  {
                    tmp$ret$9 = round(y);
                  }
                  rectProps.a4u_1.x2g(tmp_2, tmp$ret$9, 0.0);
                } else {
                  rectProps.a4u_1.x2g(x, y, 0.0);
                }
                rectProps.b4u_1.c2j(metrics.d5j_1, metrics.e5j_1);
                if (props.c3y_1) {
                  rectProps.c4u_1.d2j(metrics.i5j_1);
                  rectProps.d4u_1.c2j(metrics.j5j_1.e23(), metrics.i5j_1.g23());
                  rectProps.e4u_1.c2j(metrics.i5j_1.e23(), metrics.j5j_1.g23());
                  rectProps.f4u_1.d2j(metrics.j5j_1);
                } else {
                  rectProps.e4u_1.d2j(metrics.i5j_1);
                  rectProps.f4u_1.c2j(metrics.j5j_1.e23(), metrics.i5j_1.g23());
                  rectProps.c4u_1.c2j(metrics.i5j_1.e23(), metrics.j5j_1.g23());
                  rectProps.d4u_1.d2j(metrics.j5j_1);
                }
              }
              tmp$ret$10 = rectProps;
            }
            $this.h4u(tmp$ret$10);
            advanced = advanced + metrics.h5j_1;
          }
        }
      }
      $this.f3w_1.a2i();
    }
  }
  function MeshBuilder(geometry) {
    this.e3w_1 = geometry;
    var tmp = this;
    tmp.f3w_1 = Mat4fStack_init_$Create$(0, 1, null);
    this.g3w_1 = false;
    this.h3w_1 = Companion_getInstance_43().m34_1;
    this.i3w_1 = Companion_getInstance_43().k34_1;
    this.j3w_1 = 0.0;
    this.k3w_1 = 0.5;
    this.l3w_1 = null;
    this.m3w_1 = this.e3w_1.c5i(Companion_getInstance_31().o2z_1);
  }
  MeshBuilder.prototype.h5a = function () {
    return this.e3w_1;
  };
  MeshBuilder.prototype.o4r = function () {
    return this.f3w_1;
  };
  MeshBuilder.prototype.k5j = function (_set____db54di) {
    this.g3w_1 = _set____db54di;
  };
  MeshBuilder.prototype.l5j = function (_set____db54di) {
    this.h3w_1 = _set____db54di;
  };
  MeshBuilder.prototype.m5j = function () {
    return this.h3w_1;
  };
  MeshBuilder.prototype.n5j = function () {
    return this.i3w_1;
  };
  MeshBuilder.prototype.o5j = function () {
    return this.j3w_1;
  };
  MeshBuilder.prototype.p5j = function () {
    return this.k3w_1;
  };
  MeshBuilder.prototype.q5j = function (_set____db54di) {
    this.l3w_1 = _set____db54di;
  };
  MeshBuilder.prototype.r5j = function () {
    return this.l3w_1;
  };
  MeshBuilder.prototype.s5j = function () {
    return this.m3w_1;
  };
  MeshBuilder.prototype.t5j = function (block) {
    var tmp$ret$0;
    {
      var tmp0_addVertex = this.e3w_1;
      tmp0_addVertex.u4j(0, 1, null);
      var inductionVariable = 1;
      var last = tmp0_addVertex.h2s_1;
      if (inductionVariable <= last)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp1_this = tmp0_addVertex;
          tmp1_this.p2s_1.v4j(0.0);
        }
         while (!(i === last));
      var inductionVariable_0 = 1;
      var last_0 = tmp0_addVertex.j2s_1;
      if (inductionVariable_0 <= last_0)
        do {
          var i_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          var tmp3_this = tmp0_addVertex;
          tmp3_this.q2s_1.w4j(0);
        }
         while (!(i_0 === last_0));
      var tmp4_this = tmp0_addVertex;
      var tmp5 = tmp4_this.o2s_1;
      tmp4_this.o2s_1 = tmp5 + 1 | 0;
      tmp0_addVertex.t2s_1.ue(tmp5);
      {
        var tmp1__anonymous__uwfjfc = tmp0_addVertex.t2s_1;
        tmp1__anonymous__uwfjfc.j4g_1.x2l(this.h3w_1);
        tmp1__anonymous__uwfjfc.x4j(this.i3w_1);
        tmp1__anonymous__uwfjfc.y4j(this.j3w_1);
        tmp1__anonymous__uwfjfc.z4j(this.k3w_1);
        block(tmp1__anonymous__uwfjfc);
        this.f3w_1.y2g(tmp1__anonymous__uwfjfc.g4g_1, 0.0, 2, null);
        if (this.m3w_1 ? !(tmp1__anonymous__uwfjfc.h4g_1.u2j() === 0.0) : false) {
          this.f3w_1.u2g(tmp1__anonymous__uwfjfc.h4g_1, 0.0);
          tmp1__anonymous__uwfjfc.h4g_1.w2k();
        }
        var tmp0_safe_receiver = this.l3w_1;
        if (tmp0_safe_receiver == null)
          null;
        else
          tmp0_safe_receiver(tmp1__anonymous__uwfjfc);
      }
      tmp0_addVertex.s2s_1.v2k(tmp0_addVertex.t2s_1.g4g_1);
      tmp0_addVertex.v2s_1 = true;
      tmp$ret$0 = tmp0_addVertex.o2s_1 - 1 | 0;
    }
    return tmp$ret$0;
  };
  MeshBuilder.prototype.u5j = function (pos, nrm, uv) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_addVertex = this.e3w_1;
        tmp0_addVertex.u4j(0, 1, null);
        var inductionVariable = 1;
        var last = tmp0_addVertex.h2s_1;
        if (inductionVariable <= last)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var tmp1_this = tmp0_addVertex;
            tmp1_this.p2s_1.v4j(0.0);
          }
           while (!(i === last));
        var inductionVariable_0 = 1;
        var last_0 = tmp0_addVertex.j2s_1;
        if (inductionVariable_0 <= last_0)
          do {
            var i_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var tmp3_this = tmp0_addVertex;
            tmp3_this.q2s_1.w4j(0);
          }
           while (!(i_0 === last_0));
        var tmp4_this = tmp0_addVertex;
        var tmp5 = tmp4_this.o2s_1;
        tmp4_this.o2s_1 = tmp5 + 1 | 0;
        tmp0_addVertex.t2s_1.ue(tmp5);
        {
          var tmp1__anonymous__uwfjfc = tmp0_addVertex.t2s_1;
          tmp1__anonymous__uwfjfc.j4g_1.x2l(this.h3w_1);
          tmp1__anonymous__uwfjfc.x4j(this.i3w_1);
          tmp1__anonymous__uwfjfc.y4j(this.j3w_1);
          tmp1__anonymous__uwfjfc.z4j(this.k3w_1);
          {
            tmp1__anonymous__uwfjfc.g4g_1.s2k(pos);
            tmp1__anonymous__uwfjfc.h4g_1.s2k(nrm);
            tmp1__anonymous__uwfjfc.k4g_1.d2j(uv);
          }
          this.f3w_1.y2g(tmp1__anonymous__uwfjfc.g4g_1, 0.0, 2, null);
          if (this.m3w_1 ? !(tmp1__anonymous__uwfjfc.h4g_1.u2j() === 0.0) : false) {
            this.f3w_1.u2g(tmp1__anonymous__uwfjfc.h4g_1, 0.0);
            tmp1__anonymous__uwfjfc.h4g_1.w2k();
          }
          var tmp0_safe_receiver = this.l3w_1;
          if (tmp0_safe_receiver == null)
            null;
          else
            tmp0_safe_receiver(tmp1__anonymous__uwfjfc);
        }
        tmp0_addVertex.s2s_1.v2k(tmp0_addVertex.t2s_1.g4g_1);
        tmp0_addVertex.v2s_1 = true;
        tmp$ret$0 = tmp0_addVertex.o2s_1 - 1 | 0;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  MeshBuilder.prototype.a4k = function (i0, i1, i2) {
    if (this.g3w_1) {
      this.e3w_1.a4k(i2, i1, i0);
    } else {
      this.e3w_1.a4k(i0, i1, i2);
    }
  };
  MeshBuilder.prototype.v5j = function (block) {
    this.f3w_1.z2h();
    block(this);
    this.f3w_1.a2i();
  };
  MeshBuilder.prototype.t7 = function () {
    this.e3w_1.t7();
    this.w5j();
  };
  MeshBuilder.prototype.w5j = function () {
    return this.f3w_1.l2g();
  };
  MeshBuilder.prototype.f3y = function (t) {
    return this.f3w_1.n2h(t.e23(), t.g23(), t.w2g());
  };
  MeshBuilder.prototype.n2h = function (x, y, z) {
    return this.f3w_1.n2h(x, y, z);
  };
  MeshBuilder.prototype.s2h = function (angleDeg, axis) {
    return this.f3w_1.s2h(angleDeg, axis);
  };
  MeshBuilder.prototype.t2h = function (x, y, z) {
    return this.f3w_1.t2h(x, y, z);
  };
  MeshBuilder.prototype.x5j = function (block) {
    var props = new CircleProps();
    block(props);
    this.y5j(props);
  };
  MeshBuilder.prototype.y5j = function (props) {
    var i1 = 0;
    var iCenter = this.u5j(props.b5k_1, Companion_getInstance_9().g2k_1, props.e5k_1);
    var inductionVariable = 0;
    var last = props.a5k_1;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        {
          var tmp0_toRad = props.c5k_1 + props.d5k_1 * i / props.a5k_1;
          tmp$ret$0 = tmp0_toRad * get_DEG_2_RAD();
        }
        var ang = tmp$ret$0;
        var tmp$ret$1;
        {
          tmp$ret$1 = Math.cos(ang);
        }
        var cos = tmp$ret$1;
        var tmp$ret$2;
        {
          tmp$ret$2 = Math.sin(ang);
        }
        var sin = tmp$ret$2;
        var px = props.b5k_1.e23() + props.z5j_1 * cos;
        var py = props.b5k_1.g23() + props.z5j_1 * sin;
        var tmp$ret$4;
        {
          var tmp$ret$3;
          {
            var tmp0_addVertex = this.e3w_1;
            tmp0_addVertex.u4j(0, 1, null);
            var inductionVariable_0 = 1;
            var last_0 = tmp0_addVertex.h2s_1;
            if (inductionVariable_0 <= last_0)
              do {
                var i_0 = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                var tmp1_this = tmp0_addVertex;
                tmp1_this.p2s_1.v4j(0.0);
              }
               while (!(i_0 === last_0));
            var inductionVariable_1 = 1;
            var last_1 = tmp0_addVertex.j2s_1;
            if (inductionVariable_1 <= last_1)
              do {
                var i_1 = inductionVariable_1;
                inductionVariable_1 = inductionVariable_1 + 1 | 0;
                var tmp3_this = tmp0_addVertex;
                tmp3_this.q2s_1.w4j(0);
              }
               while (!(i_1 === last_1));
            var tmp4_this = tmp0_addVertex;
            var tmp5 = tmp4_this.o2s_1;
            tmp4_this.o2s_1 = tmp5 + 1 | 0;
            tmp0_addVertex.t2s_1.ue(tmp5);
            {
              var tmp1__anonymous__uwfjfc = tmp0_addVertex.t2s_1;
              tmp1__anonymous__uwfjfc.j4g_1.x2l(this.h3w_1);
              tmp1__anonymous__uwfjfc.x4j(this.i3w_1);
              tmp1__anonymous__uwfjfc.y4j(this.j3w_1);
              tmp1__anonymous__uwfjfc.z4j(this.k3w_1);
              {
                tmp1__anonymous__uwfjfc.g4g_1.x2g(px, py, props.b5k_1.w2g());
                tmp1__anonymous__uwfjfc.h4g_1.s2k(Companion_getInstance_9().g2k_1);
                tmp1__anonymous__uwfjfc.k4g_1.c2j(cos, -sin).b2j(props.f5k_1).z2i(props.e5k_1);
              }
              this.f3w_1.y2g(tmp1__anonymous__uwfjfc.g4g_1, 0.0, 2, null);
              if (this.m3w_1 ? !(tmp1__anonymous__uwfjfc.h4g_1.u2j() === 0.0) : false) {
                this.f3w_1.u2g(tmp1__anonymous__uwfjfc.h4g_1, 0.0);
                tmp1__anonymous__uwfjfc.h4g_1.w2k();
              }
              var tmp0_safe_receiver = this.l3w_1;
              if (tmp0_safe_receiver == null)
                null;
              else
                tmp0_safe_receiver(tmp1__anonymous__uwfjfc);
            }
            tmp0_addVertex.s2s_1.v2k(tmp0_addVertex.t2s_1.g4g_1);
            tmp0_addVertex.v2s_1 = true;
            tmp$ret$3 = tmp0_addVertex.o2s_1 - 1 | 0;
          }
          tmp$ret$4 = tmp$ret$3;
        }
        var idx = tmp$ret$4;
        if (i > 0) {
          this.a4k(iCenter, i1, idx);
        }
        i1 = idx;
      }
       while (!(i === last));
  };
  MeshBuilder.prototype.g5k = function (block) {
    var props = new RectProps();
    block(props);
    this.h4u(props);
  };
  MeshBuilder.prototype.h4u = function (props) {
    props.h5k();
    if (props.y4t_1 === 0.0) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_addVertex = this.e3w_1;
          tmp0_addVertex.u4j(0, 1, null);
          var inductionVariable = 1;
          var last = tmp0_addVertex.h2s_1;
          if (inductionVariable <= last)
            do {
              var i = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              var tmp1_this = tmp0_addVertex;
              tmp1_this.p2s_1.v4j(0.0);
            }
             while (!(i === last));
          var inductionVariable_0 = 1;
          var last_0 = tmp0_addVertex.j2s_1;
          if (inductionVariable_0 <= last_0)
            do {
              var i_0 = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              var tmp3_this = tmp0_addVertex;
              tmp3_this.q2s_1.w4j(0);
            }
             while (!(i_0 === last_0));
          var tmp4_this = tmp0_addVertex;
          var tmp5 = tmp4_this.o2s_1;
          tmp4_this.o2s_1 = tmp5 + 1 | 0;
          tmp0_addVertex.t2s_1.ue(tmp5);
          {
            var tmp1__anonymous__uwfjfc = tmp0_addVertex.t2s_1;
            tmp1__anonymous__uwfjfc.j4g_1.x2l(this.h3w_1);
            tmp1__anonymous__uwfjfc.x4j(this.i3w_1);
            tmp1__anonymous__uwfjfc.y4j(this.j3w_1);
            tmp1__anonymous__uwfjfc.z4j(this.k3w_1);
            {
              tmp1__anonymous__uwfjfc.g4g_1.x2g(props.a4u_1.e23(), props.a4u_1.g23(), props.a4u_1.w2g());
              tmp1__anonymous__uwfjfc.h4g_1.s2k(Companion_getInstance_9().g2k_1);
              tmp1__anonymous__uwfjfc.k4g_1.d2j(props.e4u_1);
            }
            this.f3w_1.y2g(tmp1__anonymous__uwfjfc.g4g_1, 0.0, 2, null);
            if (this.m3w_1 ? !(tmp1__anonymous__uwfjfc.h4g_1.u2j() === 0.0) : false) {
              this.f3w_1.u2g(tmp1__anonymous__uwfjfc.h4g_1, 0.0);
              tmp1__anonymous__uwfjfc.h4g_1.w2k();
            }
            var tmp0_safe_receiver = this.l3w_1;
            if (tmp0_safe_receiver == null)
              null;
            else
              tmp0_safe_receiver(tmp1__anonymous__uwfjfc);
          }
          tmp0_addVertex.s2s_1.v2k(tmp0_addVertex.t2s_1.g4g_1);
          tmp0_addVertex.v2s_1 = true;
          tmp$ret$0 = tmp0_addVertex.o2s_1 - 1 | 0;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      var i0 = tmp$ret$1;
      var tmp$ret$3;
      {
        var tmp$ret$2;
        {
          var tmp0_addVertex_0 = this.e3w_1;
          tmp0_addVertex_0.u4j(0, 1, null);
          var inductionVariable_1 = 1;
          var last_1 = tmp0_addVertex_0.h2s_1;
          if (inductionVariable_1 <= last_1)
            do {
              var i_1 = inductionVariable_1;
              inductionVariable_1 = inductionVariable_1 + 1 | 0;
              var tmp1_this_0 = tmp0_addVertex_0;
              tmp1_this_0.p2s_1.v4j(0.0);
            }
             while (!(i_1 === last_1));
          var inductionVariable_2 = 1;
          var last_2 = tmp0_addVertex_0.j2s_1;
          if (inductionVariable_2 <= last_2)
            do {
              var i_2 = inductionVariable_2;
              inductionVariable_2 = inductionVariable_2 + 1 | 0;
              var tmp3_this_0 = tmp0_addVertex_0;
              tmp3_this_0.q2s_1.w4j(0);
            }
             while (!(i_2 === last_2));
          var tmp4_this_0 = tmp0_addVertex_0;
          var tmp5_0 = tmp4_this_0.o2s_1;
          tmp4_this_0.o2s_1 = tmp5_0 + 1 | 0;
          tmp0_addVertex_0.t2s_1.ue(tmp5_0);
          {
            var tmp1__anonymous__uwfjfc_0 = tmp0_addVertex_0.t2s_1;
            tmp1__anonymous__uwfjfc_0.j4g_1.x2l(this.h3w_1);
            tmp1__anonymous__uwfjfc_0.x4j(this.i3w_1);
            tmp1__anonymous__uwfjfc_0.y4j(this.j3w_1);
            tmp1__anonymous__uwfjfc_0.z4j(this.k3w_1);
            {
              tmp1__anonymous__uwfjfc_0.g4g_1.x2g(props.a4u_1.e23() + props.b4u_1.e23(), props.a4u_1.g23(), props.a4u_1.w2g());
              tmp1__anonymous__uwfjfc_0.h4g_1.s2k(Companion_getInstance_9().g2k_1);
              tmp1__anonymous__uwfjfc_0.k4g_1.d2j(props.f4u_1);
            }
            this.f3w_1.y2g(tmp1__anonymous__uwfjfc_0.g4g_1, 0.0, 2, null);
            if (this.m3w_1 ? !(tmp1__anonymous__uwfjfc_0.h4g_1.u2j() === 0.0) : false) {
              this.f3w_1.u2g(tmp1__anonymous__uwfjfc_0.h4g_1, 0.0);
              tmp1__anonymous__uwfjfc_0.h4g_1.w2k();
            }
            var tmp0_safe_receiver_0 = this.l3w_1;
            if (tmp0_safe_receiver_0 == null)
              null;
            else
              tmp0_safe_receiver_0(tmp1__anonymous__uwfjfc_0);
          }
          tmp0_addVertex_0.s2s_1.v2k(tmp0_addVertex_0.t2s_1.g4g_1);
          tmp0_addVertex_0.v2s_1 = true;
          tmp$ret$2 = tmp0_addVertex_0.o2s_1 - 1 | 0;
        }
        tmp$ret$3 = tmp$ret$2;
      }
      var i1 = tmp$ret$3;
      var tmp$ret$5;
      {
        var tmp$ret$4;
        {
          var tmp0_addVertex_1 = this.e3w_1;
          tmp0_addVertex_1.u4j(0, 1, null);
          var inductionVariable_3 = 1;
          var last_3 = tmp0_addVertex_1.h2s_1;
          if (inductionVariable_3 <= last_3)
            do {
              var i_3 = inductionVariable_3;
              inductionVariable_3 = inductionVariable_3 + 1 | 0;
              var tmp1_this_1 = tmp0_addVertex_1;
              tmp1_this_1.p2s_1.v4j(0.0);
            }
             while (!(i_3 === last_3));
          var inductionVariable_4 = 1;
          var last_4 = tmp0_addVertex_1.j2s_1;
          if (inductionVariable_4 <= last_4)
            do {
              var i_4 = inductionVariable_4;
              inductionVariable_4 = inductionVariable_4 + 1 | 0;
              var tmp3_this_1 = tmp0_addVertex_1;
              tmp3_this_1.q2s_1.w4j(0);
            }
             while (!(i_4 === last_4));
          var tmp4_this_1 = tmp0_addVertex_1;
          var tmp5_1 = tmp4_this_1.o2s_1;
          tmp4_this_1.o2s_1 = tmp5_1 + 1 | 0;
          tmp0_addVertex_1.t2s_1.ue(tmp5_1);
          {
            var tmp1__anonymous__uwfjfc_1 = tmp0_addVertex_1.t2s_1;
            tmp1__anonymous__uwfjfc_1.j4g_1.x2l(this.h3w_1);
            tmp1__anonymous__uwfjfc_1.x4j(this.i3w_1);
            tmp1__anonymous__uwfjfc_1.y4j(this.j3w_1);
            tmp1__anonymous__uwfjfc_1.z4j(this.k3w_1);
            {
              tmp1__anonymous__uwfjfc_1.g4g_1.x2g(props.a4u_1.e23() + props.b4u_1.e23(), props.a4u_1.g23() + props.b4u_1.g23(), props.a4u_1.w2g());
              tmp1__anonymous__uwfjfc_1.h4g_1.s2k(Companion_getInstance_9().g2k_1);
              tmp1__anonymous__uwfjfc_1.k4g_1.d2j(props.d4u_1);
            }
            this.f3w_1.y2g(tmp1__anonymous__uwfjfc_1.g4g_1, 0.0, 2, null);
            if (this.m3w_1 ? !(tmp1__anonymous__uwfjfc_1.h4g_1.u2j() === 0.0) : false) {
              this.f3w_1.u2g(tmp1__anonymous__uwfjfc_1.h4g_1, 0.0);
              tmp1__anonymous__uwfjfc_1.h4g_1.w2k();
            }
            var tmp0_safe_receiver_1 = this.l3w_1;
            if (tmp0_safe_receiver_1 == null)
              null;
            else
              tmp0_safe_receiver_1(tmp1__anonymous__uwfjfc_1);
          }
          tmp0_addVertex_1.s2s_1.v2k(tmp0_addVertex_1.t2s_1.g4g_1);
          tmp0_addVertex_1.v2s_1 = true;
          tmp$ret$4 = tmp0_addVertex_1.o2s_1 - 1 | 0;
        }
        tmp$ret$5 = tmp$ret$4;
      }
      var i2 = tmp$ret$5;
      var tmp$ret$7;
      {
        var tmp$ret$6;
        {
          var tmp0_addVertex_2 = this.e3w_1;
          tmp0_addVertex_2.u4j(0, 1, null);
          var inductionVariable_5 = 1;
          var last_5 = tmp0_addVertex_2.h2s_1;
          if (inductionVariable_5 <= last_5)
            do {
              var i_5 = inductionVariable_5;
              inductionVariable_5 = inductionVariable_5 + 1 | 0;
              var tmp1_this_2 = tmp0_addVertex_2;
              tmp1_this_2.p2s_1.v4j(0.0);
            }
             while (!(i_5 === last_5));
          var inductionVariable_6 = 1;
          var last_6 = tmp0_addVertex_2.j2s_1;
          if (inductionVariable_6 <= last_6)
            do {
              var i_6 = inductionVariable_6;
              inductionVariable_6 = inductionVariable_6 + 1 | 0;
              var tmp3_this_2 = tmp0_addVertex_2;
              tmp3_this_2.q2s_1.w4j(0);
            }
             while (!(i_6 === last_6));
          var tmp4_this_2 = tmp0_addVertex_2;
          var tmp5_2 = tmp4_this_2.o2s_1;
          tmp4_this_2.o2s_1 = tmp5_2 + 1 | 0;
          tmp0_addVertex_2.t2s_1.ue(tmp5_2);
          {
            var tmp1__anonymous__uwfjfc_2 = tmp0_addVertex_2.t2s_1;
            tmp1__anonymous__uwfjfc_2.j4g_1.x2l(this.h3w_1);
            tmp1__anonymous__uwfjfc_2.x4j(this.i3w_1);
            tmp1__anonymous__uwfjfc_2.y4j(this.j3w_1);
            tmp1__anonymous__uwfjfc_2.z4j(this.k3w_1);
            {
              tmp1__anonymous__uwfjfc_2.g4g_1.x2g(props.a4u_1.e23(), props.a4u_1.g23() + props.b4u_1.g23(), props.a4u_1.w2g());
              tmp1__anonymous__uwfjfc_2.h4g_1.s2k(Companion_getInstance_9().g2k_1);
              tmp1__anonymous__uwfjfc_2.k4g_1.d2j(props.c4u_1);
            }
            this.f3w_1.y2g(tmp1__anonymous__uwfjfc_2.g4g_1, 0.0, 2, null);
            if (this.m3w_1 ? !(tmp1__anonymous__uwfjfc_2.h4g_1.u2j() === 0.0) : false) {
              this.f3w_1.u2g(tmp1__anonymous__uwfjfc_2.h4g_1, 0.0);
              tmp1__anonymous__uwfjfc_2.h4g_1.w2k();
            }
            var tmp0_safe_receiver_2 = this.l3w_1;
            if (tmp0_safe_receiver_2 == null)
              null;
            else
              tmp0_safe_receiver_2(tmp1__anonymous__uwfjfc_2);
          }
          tmp0_addVertex_2.s2s_1.v2k(tmp0_addVertex_2.t2s_1.g4g_1);
          tmp0_addVertex_2.v2s_1 = true;
          tmp$ret$6 = tmp0_addVertex_2.o2s_1 - 1 | 0;
        }
        tmp$ret$7 = tmp$ret$6;
      }
      var i3 = tmp$ret$7;
      this.a4k(i0, i1, i2);
      this.a4k(i0, i2, i3);
    } else {
      var x = props.a4u_1.e23();
      var y = props.a4u_1.g23();
      var z = props.a4u_1.w2g();
      var w = props.b4u_1.e23();
      var h = props.b4u_1.g23();
      var xI = x + props.y4t_1;
      var yI = y + props.y4t_1;
      var wI = w - props.y4t_1 * 2;
      var hI = h - props.y4t_1 * 2;
      var nrm = Companion_getInstance_9().g2k_1;
      var uI = (props.d4u_1.e23() - props.c4u_1.e23()) * props.y4t_1 / w;
      var vI = (props.d4u_1.g23() - props.f4u_1.g23()) * props.y4t_1 / h;
      var tmpPos = MutableVec3f_init_$Create$();
      var tmpUv = MutableVec2f_init_$Create$();
      if (hI > 0) {
        var i0_0 = this.u5j(tmpPos.x2g(x, yI, z), nrm, tmpUv.c2j(0.0, vI).z2i(props.e4u_1));
        var i1_0 = this.u5j(tmpPos.x2g(x + w, yI, z), nrm, tmpUv.c2j(0.0, vI).z2i(props.f4u_1));
        var i2_0 = this.u5j(tmpPos.x2g(x + w, yI + hI, z), nrm, tmpUv.c2j(0.0, -vI).z2i(props.d4u_1));
        var i3_0 = this.u5j(tmpPos.x2g(x, yI + hI, z), nrm, tmpUv.c2j(0.0, -vI).z2i(props.c4u_1));
        this.a4k(i0_0, i1_0, i2_0);
        this.a4k(i0_0, i2_0, i3_0);
      }
      if (wI > 0) {
        var i0_1 = this.u5j(tmpPos.x2g(xI, y, z), nrm, tmpUv.c2j(uI, 0.0).z2i(props.e4u_1));
        var i1_1 = this.u5j(tmpPos.x2g(xI + wI, y, z), nrm, tmpUv.c2j(-uI, 0.0).z2i(props.f4u_1));
        var i2_1 = this.u5j(tmpPos.x2g(xI + wI, yI, z), nrm, tmpUv.c2j(-uI, vI).z2i(props.f4u_1));
        var i3_1 = this.u5j(tmpPos.x2g(xI, yI, z), nrm, tmpUv.c2j(uI, vI).z2i(props.e4u_1));
        this.a4k(i0_1, i1_1, i2_1);
        this.a4k(i0_1, i2_1, i3_1);
        i0_1 = this.u5j(tmpPos.x2g(xI, yI + hI, z), nrm, tmpUv.c2j(uI, -vI).z2i(props.c4u_1));
        i1_1 = this.u5j(tmpPos.x2g(xI + wI, yI + hI, z), nrm, tmpUv.c2j(-uI, -vI).z2i(props.d4u_1));
        i2_1 = this.u5j(tmpPos.x2g(xI + wI, y + h, z), nrm, tmpUv.c2j(-uI, 0.0).z2i(props.d4u_1));
        i3_1 = this.u5j(tmpPos.x2g(xI, y + h, z), nrm, tmpUv.c2j(uI, 0.0).z2i(props.c4u_1));
        this.a4k(i0_1, i1_1, i2_1);
        this.a4k(i0_1, i2_1, i3_1);
      }
      {
        var props_0 = new CircleProps();
        {
          props_0.b5k_1.x2g(xI + wI, yI + hI, z);
          props_0.c5k_1 = 0.0;
          props_0.d5k_1 = 90.0;
          props_0.z5j_1 = props.y4t_1;
          props_0.a5k_1 = props.z4t_1;
          props_0.e5k_1.c2j(-uI, -vI).z2i(props.d4u_1);
          props_0.f5k_1 = uI;
        }
        this.y5j(props_0);
      }
      {
        var props_1 = new CircleProps();
        {
          props_1.b5k_1.x2g(xI, yI + hI, z);
          props_1.c5k_1 = 90.0;
          props_1.d5k_1 = 90.0;
          props_1.z5j_1 = props.y4t_1;
          props_1.a5k_1 = props.z4t_1;
          props_1.e5k_1.c2j(uI, -vI).z2i(props.c4u_1);
          props_1.f5k_1 = uI;
        }
        this.y5j(props_1);
      }
      {
        var props_2 = new CircleProps();
        {
          props_2.b5k_1.x2g(xI, yI, z);
          props_2.c5k_1 = 180.0;
          props_2.d5k_1 = 90.0;
          props_2.z5j_1 = props.y4t_1;
          props_2.a5k_1 = props.z4t_1;
          props_2.e5k_1.c2j(uI, vI).z2i(props.e4u_1);
          props_2.f5k_1 = uI;
        }
        this.y5j(props_2);
      }
      {
        var props_3 = new CircleProps();
        {
          props_3.b5k_1.x2g(xI + wI, yI, z);
          props_3.c5k_1 = 270.0;
          props_3.d5k_1 = 90.0;
          props_3.z5j_1 = props.y4t_1;
          props_3.a5k_1 = props.z4t_1;
          props_3.e5k_1.c2j(-uI, vI).z2i(props.f4u_1);
          props_3.f5k_1 = uI;
        }
        this.y5j(props_3);
      }
    }
  };
  MeshBuilder.prototype.g3y = function (props) {
    var font = props.x3x_1;
    if (font instanceof AtlasFont)
      renderAtlasFont(this, font, props);
    else {
      if (font instanceof MsdfFont)
        renderMsdfFont(this, font, props);
    }
  };
  MeshBuilder.$metadata$ = classMeta('MeshBuilder');
  function RectProps() {
    this.y4t_1 = 0.0;
    this.z4t_1 = 8;
    this.a4u_1 = MutableVec3f_init_$Create$();
    this.b4u_1 = new MutableVec2f(1.0, 1.0);
    this.c4u_1 = MutableVec2f_init_$Create$();
    this.d4u_1 = MutableVec2f_init_$Create$();
    this.e4u_1 = MutableVec2f_init_$Create$();
    this.f4u_1 = MutableVec2f_init_$Create$();
    this.i5k(1.0);
  }
  RectProps.prototype.j5k = function () {
    return this.y4t_1;
  };
  RectProps.prototype.k5k = function () {
    return this.z4t_1;
  };
  RectProps.prototype.l5k = function () {
    return this.a4u_1;
  };
  RectProps.prototype.m = function () {
    return this.b4u_1;
  };
  RectProps.prototype.m5k = function (value) {
    this.b4u_1.x2i(value);
  };
  RectProps.prototype.u3z = function () {
    return this.b4u_1.e23();
  };
  RectProps.prototype.n5k = function (value) {
    this.b4u_1.y2i(value);
  };
  RectProps.prototype.v3z = function () {
    return this.b4u_1.g23();
  };
  RectProps.prototype.o5k = function () {
    return this.c4u_1;
  };
  RectProps.prototype.p5k = function () {
    return this.d4u_1;
  };
  RectProps.prototype.q5k = function () {
    return this.e4u_1;
  };
  RectProps.prototype.r5k = function () {
    return this.f4u_1;
  };
  RectProps.prototype.h5k = function () {
    if (this.b4u_1.e23() < 0) {
      var tmp0_this = this.a4u_1;
      tmp0_this.x2i(tmp0_this.e23() + this.b4u_1.e23());
      this.b4u_1.x2i(-this.b4u_1.e23());
    }
    if (this.b4u_1.g23() < 0) {
      var tmp1_this = this.a4u_1;
      tmp1_this.y2i(tmp1_this.g23() + this.b4u_1.g23());
      this.b4u_1.y2i(-this.b4u_1.g23());
    }
  };
  RectProps.prototype.i5k = function (scale) {
    this.c4u_1.c2j(0.0, 0.0);
    this.d4u_1.c2j(scale, 0.0);
    this.e4u_1.c2j(0.0, scale);
    this.f4u_1.c2j(scale, scale);
  };
  RectProps.prototype.g4u = function () {
    var tmp$ret$0;
    {
      var tmp0_also = this.c4u_1.g23();
      {
      }
      {
        this.c4u_1.y2i(this.e4u_1.g23());
      }
      tmp$ret$0 = tmp0_also;
    }
    this.e4u_1.y2i(tmp$ret$0);
    var tmp$ret$1;
    {
      var tmp1_also = this.d4u_1.g23();
      {
      }
      {
        this.d4u_1.y2i(this.f4u_1.g23());
      }
      tmp$ret$1 = tmp1_also;
    }
    this.f4u_1.y2i(tmp$ret$1);
  };
  RectProps.$metadata$ = classMeta('RectProps');
  function TextProps(font) {
    this.x3x_1 = font;
    this.y3x_1 = '';
    this.z3x_1 = MutableVec3f_init_$Create$();
    this.a3y_1 = 1.0;
    this.b3y_1 = true;
    this.c3y_1 = true;
    this.d3y_1 = null;
  }
  TextProps.prototype.b47 = function (_set____db54di) {
    this.x3x_1 = _set____db54di;
  };
  TextProps.prototype.v46 = function (_set____db54di) {
    this.y3x_1 = _set____db54di;
  };
  TextProps.prototype.a47 = function () {
    return this.y3x_1;
  };
  TextProps.prototype.l5k = function () {
    return this.z3x_1;
  };
  TextProps.prototype.g3x = function () {
    return this.a3y_1;
  };
  TextProps.prototype.s5k = function () {
    return this.b3y_1;
  };
  TextProps.prototype.t5k = function (_set____db54di) {
    this.c3y_1 = _set____db54di;
  };
  TextProps.prototype.u5k = function () {
    return this.c3y_1;
  };
  TextProps.prototype.v5k = function () {
    return this.d3y_1;
  };
  TextProps.$metadata$ = classMeta('TextProps');
  function CircleProps() {
    this.z5j_1 = 1.0;
    this.a5k_1 = 20;
    this.b5k_1 = MutableVec3f_init_$Create$();
    this.c5k_1 = 0.0;
    this.d5k_1 = 360.0;
    this.e5k_1 = MutableVec2f_init_$Create$();
    this.f5k_1 = 0.0;
    this.w5k();
  }
  CircleProps.prototype.x5k = function (_set____db54di) {
    this.z5j_1 = _set____db54di;
  };
  CircleProps.prototype.y5k = function (_set____db54di) {
    this.a5k_1 = _set____db54di;
  };
  CircleProps.prototype.z5k = function () {
    return this.b5k_1;
  };
  CircleProps.prototype.a5l = function (_set____db54di) {
    this.c5k_1 = _set____db54di;
  };
  CircleProps.prototype.b5l = function (_set____db54di) {
    this.d5k_1 = _set____db54di;
  };
  CircleProps.prototype.c5l = function () {
    return this.e5k_1;
  };
  CircleProps.prototype.d5l = function (_set____db54di) {
    this.f5k_1 = _set____db54di;
  };
  CircleProps.prototype.e5l = function () {
    return this.f5k_1;
  };
  CircleProps.prototype.w5k = function () {
    this.e5k_1.c2j(0.5, 0.5);
    this.f5k_1 = 0.5;
  };
  CircleProps.$metadata$ = classMeta('CircleProps');
  function FloatView($outer, attribOffset) {
    this.g5l_1 = $outer;
    this.f5l_1 = attribOffset;
  }
  FloatView.$metadata$ = classMeta('FloatView');
  function Vec2fView($outer, attribOffset) {
    this.j5l_1 = $outer;
    MutableVec2f_init_$Init$(this);
    this.i5l_1 = attribOffset;
  }
  Vec2fView.prototype.r = function (i) {
    var tmp;
    if (this.i5l_1 >= 0 ? 0 <= i ? i <= 1 : false : false) {
      tmp = this.j5l_1.c4g_1.p2s_1.r((this.j5l_1.d4g_1 + this.i5l_1 | 0) + i | 0);
    } else {
      tmp = 0.0;
    }
    return tmp;
  };
  Vec2fView.prototype.m2g = function (i, v) {
    if (this.i5l_1 >= 0 ? 0 <= i ? i <= 1 : false : false) {
      this.j5l_1.c4g_1.p2s_1.m2g((this.j5l_1.d4g_1 + this.i5l_1 | 0) + i | 0, v);
    }
  };
  Vec2fView.$metadata$ = classMeta('Vec2fView', undefined, undefined, undefined, undefined, MutableVec2f.prototype);
  function Vec3fView($outer, attribOffset) {
    this.m5l_1 = $outer;
    MutableVec3f_init_$Init$(this);
    this.l5l_1 = attribOffset;
  }
  Vec3fView.prototype.r = function (i) {
    var tmp;
    if (this.l5l_1 >= 0 ? 0 <= i ? i <= 2 : false : false) {
      tmp = this.m5l_1.c4g_1.p2s_1.r((this.m5l_1.d4g_1 + this.l5l_1 | 0) + i | 0);
    } else {
      tmp = 0.0;
    }
    return tmp;
  };
  Vec3fView.prototype.m2g = function (i, v) {
    if (this.l5l_1 >= 0 ? 0 <= i ? i <= 2 : false : false) {
      this.m5l_1.c4g_1.p2s_1.m2g((this.m5l_1.d4g_1 + this.l5l_1 | 0) + i | 0, v);
    }
  };
  Vec3fView.$metadata$ = classMeta('Vec3fView', undefined, undefined, undefined, undefined, MutableVec3f.prototype);
  function Vec4fView($outer, attribOffset) {
    this.p5l_1 = $outer;
    MutableVec4f_init_$Init$(this);
    this.o5l_1 = attribOffset;
  }
  Vec4fView.prototype.r = function (i) {
    var tmp;
    if (this.o5l_1 >= 0 ? 0 <= i ? i <= 3 : false : false) {
      tmp = this.p5l_1.c4g_1.p2s_1.r((this.p5l_1.d4g_1 + this.o5l_1 | 0) + i | 0);
    } else {
      tmp = 0.0;
    }
    return tmp;
  };
  Vec4fView.prototype.m2g = function (i, v) {
    if (this.o5l_1 >= 0 ? 0 <= i ? i <= 3 : false : false) {
      this.p5l_1.c4g_1.p2s_1.m2g((this.p5l_1.d4g_1 + this.o5l_1 | 0) + i | 0, v);
    }
  };
  Vec4fView.$metadata$ = classMeta('Vec4fView', undefined, undefined, undefined, undefined, MutableVec4f.prototype);
  function ColorWrapView($outer, vecView) {
    this.s5l_1 = $outer;
    MutableColor_init_$Init$(this);
    this.r5l_1 = vecView;
  }
  ColorWrapView.prototype.r = function (i) {
    return this.r5l_1.r(i);
  };
  ColorWrapView.prototype.m2g = function (i, v) {
    this.r5l_1.m2g(i, v);
  };
  ColorWrapView.$metadata$ = classMeta('ColorWrapView', undefined, undefined, undefined, undefined, MutableColor.prototype);
  function IntView($outer, attribOffset) {
    this.y5l_1 = $outer;
    this.x5l_1 = attribOffset;
  }
  IntView.$metadata$ = classMeta('IntView');
  function Vec2iView($outer, attribOffset) {
    this.b5m_1 = $outer;
    MutableVec2i_init_$Init$(this);
    this.a5m_1 = attribOffset;
  }
  Vec2iView.prototype.r = function (i) {
    var tmp;
    if (this.a5m_1 >= 0 ? 0 <= i ? i <= 1 : false : false) {
      tmp = this.b5m_1.c4g_1.q2s_1.r((this.b5m_1.e4g_1 + this.a5m_1 | 0) + i | 0);
    } else {
      tmp = 0;
    }
    return tmp;
  };
  Vec2iView.$metadata$ = classMeta('Vec2iView', undefined, undefined, undefined, undefined, MutableVec2i.prototype);
  function Vec3iView($outer, attribOffset) {
    this.e5m_1 = $outer;
    MutableVec3i_init_$Init$(this);
    this.d5m_1 = attribOffset;
  }
  Vec3iView.prototype.r = function (i) {
    var tmp;
    if (this.d5m_1 >= 0 ? 0 <= i ? i <= 2 : false : false) {
      tmp = this.e5m_1.c4g_1.q2s_1.r((this.e5m_1.e4g_1 + this.d5m_1 | 0) + i | 0);
    } else {
      tmp = 0;
    }
    return tmp;
  };
  Vec3iView.$metadata$ = classMeta('Vec3iView', undefined, undefined, undefined, undefined, MutableVec3i.prototype);
  function Vec4iView($outer, attribOffset) {
    this.h5m_1 = $outer;
    MutableVec4i_init_$Init$(this);
    this.g5m_1 = attribOffset;
  }
  Vec4iView.prototype.r = function (i) {
    var tmp;
    if (this.g5m_1 >= 0 ? 0 <= i ? i <= 3 : false : false) {
      tmp = this.h5m_1.c4g_1.q2s_1.r((this.h5m_1.e4g_1 + this.g5m_1 | 0) + i | 0);
    } else {
      tmp = 0;
    }
    return tmp;
  };
  Vec4iView.$metadata$ = classMeta('Vec4iView', undefined, undefined, undefined, undefined, MutableVec4i.prototype);
  function VertexView(data, index) {
    MutableVec3f_init_$Init$(this);
    this.c4g_1 = data;
    this.d4g_1 = imul(index, this.c4g_1.h2s_1);
    this.e4g_1 = imul(index, this.c4g_1.j2s_1);
    this.f4g_1 = index;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$();
    }
    var attribViews = tmp$ret$0;
    this.p4g_1 = attribViews;
    var tmp$ret$1;
    {
      var tmp0_iterator = this.c4g_1.l2s_1;
      tmp$ret$1 = tmp0_iterator.a1().h();
    }
    var tmp0_iterator_0 = tmp$ret$1;
    while (tmp0_iterator_0.n()) {
      var offset = tmp0_iterator_0.o();
      var tmp1_subject = offset.l2().y2s_1;
      var tmp0 = tmp1_subject.y1();
      switch (tmp0) {
        case 0:
          var tmp1_set = offset.l2();
          var tmp2_set = new FloatView(this, offset.n2() / 4 | 0);
          attribViews.a(tmp1_set, tmp2_set);
          ;
          break;
        case 1:
          var tmp3_set = offset.l2();
          var tmp4_set = new Vec2fView(this, offset.n2() / 4 | 0);
          attribViews.a(tmp3_set, tmp4_set);
          ;
          break;
        case 2:
          var tmp5_set = offset.l2();
          var tmp6_set = new Vec3fView(this, offset.n2() / 4 | 0);
          attribViews.a(tmp5_set, tmp6_set);
          ;
          break;
        case 3:
          var tmp7_set = offset.l2();
          var tmp8_set = new Vec4fView(this, offset.n2() / 4 | 0);
          attribViews.a(tmp7_set, tmp8_set);
          ;
          break;
        case 4:
          var tmp9_set = offset.l2();
          var tmp10_set = new IntView(this, offset.n2() / 4 | 0);
          attribViews.a(tmp9_set, tmp10_set);
          ;
          break;
        case 5:
          var tmp11_set = offset.l2();
          var tmp12_set = new Vec2iView(this, offset.n2() / 4 | 0);
          attribViews.a(tmp11_set, tmp12_set);
          ;
          break;
        case 6:
          var tmp13_set = offset.l2();
          var tmp14_set = new Vec3iView(this, offset.n2() / 4 | 0);
          attribViews.a(tmp13_set, tmp14_set);
          ;
          break;
        case 7:
          var tmp15_set = offset.l2();
          var tmp16_set = new Vec4iView(this, offset.n2() / 4 | 0);
          attribViews.a(tmp15_set, tmp16_set);
          ;
          break;
        default:
          throw IllegalArgumentException_init_$Create$('' + offset.l2().y2s_1 + ' is not a valid vertex attribute');
      }
    }
    var tmp = this;
    var tmp2_elvis_lhs = this.i5m(Companion_getInstance_31().n2z_1);
    tmp.g4g_1 = tmp2_elvis_lhs == null ? new Vec3fView(this, -1) : tmp2_elvis_lhs;
    var tmp_0 = this;
    var tmp3_elvis_lhs = this.i5m(Companion_getInstance_31().o2z_1);
    tmp_0.h4g_1 = tmp3_elvis_lhs == null ? new Vec3fView(this, -1) : tmp3_elvis_lhs;
    var tmp_1 = this;
    var tmp4_elvis_lhs = this.q4g(Companion_getInstance_31().p2z_1);
    tmp_1.i4g_1 = tmp4_elvis_lhs == null ? new Vec4fView(this, -1) : tmp4_elvis_lhs;
    var tmp_2 = this;
    var tmp5_elvis_lhs = this.j5m(Companion_getInstance_31().q2z_1);
    tmp_2.k4g_1 = tmp5_elvis_lhs == null ? new Vec2fView(this, -1) : tmp5_elvis_lhs;
    var tmp_3 = this;
    var tmp6_elvis_lhs = this.k5m(Companion_getInstance_31().r2z_1);
    tmp_3.j4g_1 = tmp6_elvis_lhs == null ? new ColorWrapView(this, new Vec4fView(this, -1)) : tmp6_elvis_lhs;
    var tmp_4 = this;
    var tmp7_elvis_lhs = this.l5m(Companion_getInstance_31().s2z_1);
    tmp_4.l4g_1 = tmp7_elvis_lhs == null ? new Vec4iView(this, -1) : tmp7_elvis_lhs;
    var tmp_5 = this;
    var tmp8_elvis_lhs = this.q4g(Companion_getInstance_31().t2z_1);
    tmp_5.m4g_1 = tmp8_elvis_lhs == null ? new Vec4fView(this, -1) : tmp8_elvis_lhs;
    var tmp_6 = this;
    var tmp9_elvis_lhs = this.i5m(Companion_getInstance_31().u2z_1);
    tmp_6.n4g_1 = tmp9_elvis_lhs == null ? new Vec3fView(this, -1) : tmp9_elvis_lhs;
    var tmp_7 = this;
    var tmp10_elvis_lhs = this.j5m(Companion_getInstance_31().v2z_1);
    tmp_7.o4g_1 = tmp10_elvis_lhs == null ? new Vec2fView(this, -1) : tmp10_elvis_lhs;
  }
  VertexView.prototype.ue = function (value) {
    this.f4g_1 = value;
    this.d4g_1 = imul(value, this.c4g_1.h2s_1);
    this.e4g_1 = imul(value, this.c4g_1.j2s_1);
  };
  VertexView.prototype.qr = function () {
    return this.g4g_1;
  };
  VertexView.prototype.m5m = function () {
    return this.h4g_1;
  };
  VertexView.prototype.m5j = function () {
    return this.j4g_1;
  };
  VertexView.prototype.n5m = function () {
    return this.k4g_1;
  };
  VertexView.prototype.x4j = function (emissiveColor) {
    this.n4g_1.x2g(emissiveColor.u55(), emissiveColor.w55(), emissiveColor.x55());
  };
  VertexView.prototype.y4j = function (metallicFactor) {
    this.o4g_1.x2i(metallicFactor);
  };
  VertexView.prototype.z4j = function (roughnessFactor) {
    this.o4g_1.y2i(roughnessFactor);
  };
  VertexView.prototype.r = function (i) {
    return this.g4g_1.r(i);
  };
  VertexView.prototype.m2g = function (i, v) {
    this.g4g_1.m2g(i, v);
  };
  VertexView.prototype.j5m = function (attribute) {
    var tmp = this.p4g_1.b3(attribute);
    return (tmp == null ? true : tmp instanceof MutableVec2f) ? tmp : THROW_CCE();
  };
  VertexView.prototype.i5m = function (attribute) {
    var tmp = this.p4g_1.b3(attribute);
    return (tmp == null ? true : tmp instanceof MutableVec3f) ? tmp : THROW_CCE();
  };
  VertexView.prototype.q4g = function (attribute) {
    var tmp = this.p4g_1.b3(attribute);
    return (tmp == null ? true : tmp instanceof MutableVec4f) ? tmp : THROW_CCE();
  };
  VertexView.prototype.k5m = function (attribute) {
    var tmp0_safe_receiver = this.p4g_1.b3(attribute);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          tmp$ret$0 = new ColorWrapView(this, tmp0_safe_receiver instanceof Vec4fView ? tmp0_safe_receiver : THROW_CCE());
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    return tmp;
  };
  VertexView.prototype.l5m = function (attribute) {
    var tmp = this.p4g_1.b3(attribute);
    return (tmp == null ? true : tmp instanceof Vec4iView) ? tmp : THROW_CCE();
  };
  VertexView.$metadata$ = classMeta('VertexView', undefined, undefined, undefined, undefined, MutableVec3f.prototype);
  function AtlasFont_init_$Init$(family, sizePts, style, ascentEm, descentEm, heightEm, chars, fontMapProps, isExternalMap, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0)) {
      Companion_getInstance_42();
      family = '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", sans-serif';
    }
    if (!(($mask0 & 2) === 0))
      sizePts = 12.0;
    if (!(($mask0 & 4) === 0)) {
      Companion_getInstance_42();
      style = 0;
    }
    if (!(($mask0 & 8) === 0))
      ascentEm = 1.05;
    if (!(($mask0 & 16) === 0))
      descentEm = 0.35;
    if (!(($mask0 & 32) === 0))
      heightEm = 1.4;
    if (!(($mask0 & 64) === 0))
      chars = Companion_getInstance_42().s5m_1;
    if (!(($mask0 & 128) === 0))
      fontMapProps = Companion_getInstance_42().u5m_1;
    if (!(($mask0 & 256) === 0))
      isExternalMap = false;
    AtlasFont.call($this, family, sizePts, style, ascentEm, descentEm, heightEm, chars, fontMapProps, isExternalMap);
    return $this;
  }
  function AtlasFont_init_$Create$(family, sizePts, style, ascentEm, descentEm, heightEm, chars, fontMapProps, isExternalMap, $mask0, $marker) {
    return AtlasFont_init_$Init$(family, sizePts, style, ascentEm, descentEm, heightEm, chars, fontMapProps, isExternalMap, $mask0, $marker, Object.create(AtlasFont.prototype));
  }
  function Companion_42() {
    Companion_instance_42 = this;
    this.o5m_1 = 0;
    this.p5m_1 = 1;
    this.q5m_1 = 2;
    this.r5m_1 = '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", sans-serif';
    var tmp = this;
    var tmp_0 = TexFormat_R_getInstance();
    tmp.u5m_1 = TextureProps_init_$Create$(tmp_0, null, null, null, null, null, false, 0, 62, null);
    var str = '';
    var inductionVariable = 32;
    if (inductionVariable <= 126)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        str = str + new Char(numberToChar(i));
      }
       while (inductionVariable <= 126);
    var inductionVariable_0 = 160;
    if (inductionVariable_0 <= 255)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        str = str + new Char(numberToChar(i_0));
      }
       while (inductionVariable_0 <= 255);
    this.s5m_1 = str;
    var tmp_1 = this;
    tmp_1.t5m_1 = AtlasFont_init_$Create$(null, 0.0, 0, 0.0, 0.0, 0.0, null, null, false, 511, null);
  }
  Companion_42.$metadata$ = objectMeta('Companion');
  var Companion_instance_42;
  function Companion_getInstance_42() {
    if (Companion_instance_42 == null)
      new Companion_42();
    return Companion_instance_42;
  }
  function AtlasFont(family, sizePts, style, ascentEm, descentEm, heightEm, chars, fontMapProps, isExternalMap) {
    Companion_getInstance_42();
    Font.call(this, sizePts);
    this.t1x_1 = family;
    this.u1x_1 = style;
    this.v1x_1 = ascentEm;
    this.w1x_1 = descentEm;
    this.x1x_1 = heightEm;
    this.y1x_1 = chars;
    this.z1x_1 = fontMapProps;
    this.a1y_1 = isExternalMap;
    this.b1y_1 = null;
    this.c1y_1 = 1.0;
  }
  AtlasFont.prototype.v5m = function (_set____db54di) {
    this.b1y_1 = _set____db54di;
  };
  AtlasFont.prototype.g3x = function () {
    return this.c1y_1;
  };
  AtlasFont.prototype.t5i = function () {
    var tmp$ret$0;
    {
      var tmp0_round = this.h5i() * this.x1x_1 * this.c1y_1;
      tmp$ret$0 = round(tmp0_round);
    }
    return tmp$ret$0;
  };
  AtlasFont.prototype.e4s = function (scale, ctx) {
    this.t4f(ctx, scale);
  };
  AtlasFont.prototype.m3y = function (text, result) {
    var tmp0_safe_receiver = this.b1y_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.m3y(text, result);
    var tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp$ret$5;
      {
        {
        }
        var tmp$ret$4;
        {
          var tmp$ret$3;
          {
            var tmp$ret$2;
            {
              var tmp2_eExt = Log_getInstance();
              var tmp$ret$1;
              {
                var tmp1_logExt = Level_ERROR_getInstance();
                var tmp0_log = getKClassFromExpression(this).ei();
                var tmp_0;
                if (tmp1_logExt.e1w_1 >= tmp2_eExt.y1v_1.e1w_1) {
                  var tmp_1 = tmp2_eExt.z1v_1;
                  var tmp$ret$0;
                  {
                    tmp$ret$0 = 'Unable to measure text ' + text + ' with font ' + this + ': Font is not loaded';
                  }
                  tmp_0 = tmp_1(tmp1_logExt, tmp0_log, tmp$ret$0);
                }
                tmp$ret$1 = tmp_0;
              }
              tmp$ret$2 = tmp$ret$1;
            }
            tmp$ret$3 = tmp$ret$2;
          }
          tmp$ret$4 = result;
        }
        tmp$ret$5 = tmp$ret$4;
      }
      tmp = tmp$ret$5;
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  };
  AtlasFont.prototype.toString = function () {
    return 'AtlasFont { family: ' + this.t1x_1 + ', size: ' + this.h5i() + ', style: ' + this.u1x_1 + ', isExternalMap: ' + this.a1y_1 + ' }';
  };
  AtlasFont.prototype.t4f = function (ctx, scale) {
    if (this.a1y_1) {
      var tmp0_elvis_lhs = this.b1y_1;
      var tmp;
      if (tmp0_elvis_lhs == null) {
        throw IllegalStateException_init_$Create$('External font map has not yet been set for font ' + this);
      } else {
        tmp = tmp0_elvis_lhs;
      }
      return tmp;
    }
    var tmp1_elvis_lhs = this.b1y_1;
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      var tmp$ret$0;
      {
        var tmp0_also = ctx.q2d().q1x(this, scale);
        {
        }
        {
          this.b1y_1 = tmp0_also;
        }
        tmp$ret$0 = tmp0_also;
      }
      tmp_0 = tmp$ret$0;
    } else {
      tmp_0 = tmp1_elvis_lhs;
    }
    var map = tmp_0;
    if (!(this.c1y_1 === scale)) {
      println('this.scale: ' + this.c1y_1 + ' -> ' + scale);
      ctx.q2d().r1x(this, scale);
      println('after update this.scale: ' + this.c1y_1);
    }
    return map;
  };
  AtlasFont.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof AtlasFont)
      other;
    else
      THROW_CCE();
    if (!(this.t1x_1 === other.t1x_1))
      return false;
    if (!(this.h5i() === other.h5i()))
      return false;
    if (!(this.u1x_1 === other.u1x_1))
      return false;
    if (!(this.y1x_1 === other.y1x_1))
      return false;
    if (!(this.a1y_1 === other.a1y_1))
      return false;
    return true;
  };
  AtlasFont.prototype.hashCode = function () {
    var result = getStringHashCode(this.t1x_1);
    result = imul(31, result) + this.u1x_1 | 0;
    result = imul(31, result) + getNumberHashCode(this.h5i()) | 0;
    result = imul(31, result) + getStringHashCode(this.y1x_1) | 0;
    result = imul(31, result) + (this.a1y_1 | 0) | 0;
    return result;
  };
  AtlasFont.$metadata$ = classMeta('AtlasFont', undefined, undefined, undefined, undefined, Font.prototype);
  function FontMap(font, texture, map) {
    this.e1y_1 = font;
    this.f1y_1 = texture;
    this.g1y_1 = map;
  }
  FontMap.prototype.a1 = function () {
    return this.g1y_1.a1();
  };
  FontMap.prototype.c3 = function () {
    return this.g1y_1.c3();
  };
  FontMap.prototype.m = function () {
    return this.g1y_1.m();
  };
  FontMap.prototype.d3 = function () {
    return this.g1y_1.d3();
  };
  FontMap.prototype.t7 = function () {
    this.g1y_1.t7();
  };
  FontMap.prototype.w5m = function (key) {
    return this.g1y_1.v2(new Char(key));
  };
  FontMap.prototype.v2 = function (key) {
    if (!(key instanceof Char))
      return false;
    return this.w5m(key instanceof Char ? key.p1_1 : THROW_CCE());
  };
  FontMap.prototype.c5j = function (key) {
    return this.g1y_1.b3(new Char(key));
  };
  FontMap.prototype.b3 = function (key) {
    if (!(key instanceof Char))
      return null;
    return this.c5j(key instanceof Char ? key.p1_1 : THROW_CCE());
  };
  FontMap.prototype.q = function () {
    return this.g1y_1.q();
  };
  FontMap.prototype.x5m = function (key, value) {
    return this.g1y_1.a(new Char(key), value);
  };
  FontMap.prototype.a = function (key, value) {
    var tmp = key instanceof Char ? key.p1_1 : THROW_CCE();
    return this.x5m(tmp, value instanceof CharMetrics ? value : THROW_CCE());
  };
  FontMap.prototype.o1y = function (from) {
    this.g1y_1.b4(from);
  };
  FontMap.prototype.b4 = function (from) {
    return this.o1y(from);
  };
  FontMap.prototype.y5m = function (key) {
    return this.g1y_1.tf(new Char(key));
  };
  FontMap.prototype.tf = function (key) {
    if (!(key instanceof Char))
      return null;
    return this.y5m(key instanceof Char ? key.p1_1 : THROW_CCE());
  };
  FontMap.prototype.m3y = function (text, result) {
    var lineWidth = 0.0;
    result.l49_1 = 0.0;
    result.m49_1 = 0.0;
    result.n49_1 = 0.0;
    result.o49_1 = 1;
    result.r49_1 = this.e1y_1.v1x_1 * this.e1y_1.h5i() * this.e1y_1.c1y_1;
    result.s49_1 = this.e1y_1.w1x_1 * this.e1y_1.h5i() * this.e1y_1.c1y_1;
    var inductionVariable = 0;
    var last = charSequenceLength(text) - 1 | 0;
    if (inductionVariable <= last)
      $l$loop: do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var c = charSequenceGet(text, i);
        if (equals(new Char(c), new Char(_Char___init__impl__6a9atx(10)))) {
          var tmp = result;
          var tmp$ret$0;
          {
            var tmp0_max = result.u3z();
            var tmp1_max = lineWidth;
            tmp$ret$0 = Math.max(tmp0_max, tmp1_max);
          }
          tmp.l49_1 = tmp$ret$0;
          var tmp1_this = result;
          tmp1_this.m49_1 = tmp1_this.m49_1 + this.e1y_1.t5i();
          var tmp2_this = result;
          var tmp3 = tmp2_this.o49_1;
          tmp2_this.o49_1 = tmp3 + 1 | 0;
          lineWidth = 0.0;
        } else {
          var tmp4_elvis_lhs = this.g1y_1.b3(new Char(c));
          var tmp_0;
          if (tmp4_elvis_lhs == null) {
            continue $l$loop;
          } else {
            tmp_0 = tmp4_elvis_lhs;
          }
          var metrics = tmp_0;
          lineWidth = lineWidth + metrics.h5j_1;
          if (i === 0) {
            result.m49_1 = metrics.e5j_1;
            result.n49_1 = metrics.g5j_1;
          }
        }
      }
       while (inductionVariable <= last);
    var tmp_1 = result;
    var tmp$ret$1;
    {
      var tmp2_max = result.u3z();
      var tmp3_max = lineWidth;
      tmp$ret$1 = Math.max(tmp2_max, tmp3_max);
    }
    tmp_1.l49_1 = tmp$ret$1;
    Companion_getInstance_42();
    if (!((this.e1y_1.u1x_1 & 2) === 0)) {
      result.q49_1 = 0.1 * this.e1y_1.h5i() * this.e1y_1.c1y_1;
    }
    return result;
  };
  FontMap.$metadata$ = classMeta('FontMap', [MutableMap]);
  function CharMetrics() {
    this.d5j_1 = 0.0;
    this.e5j_1 = 0.0;
    this.f5j_1 = 0.0;
    this.g5j_1 = 0.0;
    this.h5j_1 = 0.0;
    this.i5j_1 = MutableVec2f_init_$Create$();
    this.j5j_1 = MutableVec2f_init_$Create$();
  }
  CharMetrics.prototype.u3z = function () {
    return this.d5j_1;
  };
  CharMetrics.prototype.v3z = function () {
    return this.e5j_1;
  };
  CharMetrics.prototype.z5m = function () {
    return this.f5j_1;
  };
  CharMetrics.prototype.a5n = function () {
    return this.g5j_1;
  };
  CharMetrics.prototype.b5n = function () {
    return this.h5j_1;
  };
  CharMetrics.prototype.c5n = function () {
    return this.i5j_1;
  };
  CharMetrics.prototype.d5n = function () {
    return this.j5j_1;
  };
  CharMetrics.$metadata$ = classMeta('CharMetrics');
  function Uint8Buffer() {
  }
  Uint8Buffer.$metadata$ = interfaceMeta('Uint8Buffer', [Buffer]);
  function Buffer() {
  }
  Buffer.$metadata$ = interfaceMeta('Buffer');
  function Float32Buffer() {
  }
  Float32Buffer.$metadata$ = interfaceMeta('Float32Buffer', [Buffer]);
  function Uint32Buffer() {
  }
  Uint32Buffer.$metadata$ = interfaceMeta('Uint32Buffer', [Buffer]);
  function MixedBuffer() {
  }
  MixedBuffer.$metadata$ = interfaceMeta('MixedBuffer', [Buffer]);
  function Uint16Buffer() {
  }
  Uint16Buffer.$metadata$ = interfaceMeta('Uint16Buffer', [Buffer]);
  function copy(_this__u8e3s4) {
    var tmp$ret$2;
    {
      var tmp0_List = _this__u8e3s4.m();
      var tmp$ret$1;
      {
        var list = ArrayList_init_$Create$(tmp0_List);
        {
          {
          }
          var inductionVariable = 0;
          if (inductionVariable < tmp0_List)
            do {
              var index = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              {
                var tmp$ret$0;
                {
                  tmp$ret$0 = _this__u8e3s4.r(index);
                }
                list.b(tmp$ret$0);
              }
            }
             while (inductionVariable < tmp0_List);
        }
        tmp$ret$1 = list;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  }
  function copy_0(_this__u8e3s4) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = LinkedHashSet_init_$Create$();
      }
      var tmp0_also = tmp$ret$0;
      {
      }
      {
        tmp0_also.o1(_this__u8e3s4);
      }
      tmp$ret$1 = tmp0_also;
    }
    return tmp$ret$1;
  }
  function Companion_43() {
    Companion_instance_43 = this;
    this.i34_1 = 2.2;
    this.j34_1 = 0.45454544;
    this.k34_1 = new Color(0.0, 0.0, 0.0, 1.0);
    this.l34_1 = new Color(0.25, 0.25, 0.25, 1.0);
    this.m34_1 = new Color(0.5, 0.5, 0.5, 1.0);
    this.n34_1 = new Color(0.75, 0.75, 0.75, 1.0);
    this.o34_1 = new Color(1.0, 1.0, 1.0, 1.0);
    this.p34_1 = new Color(1.0, 0.0, 0.0, 1.0);
    this.q34_1 = new Color(0.0, 1.0, 0.0, 1.0);
    this.r34_1 = new Color(0.0, 0.0, 1.0, 1.0);
    this.s34_1 = new Color(1.0, 1.0, 0.0, 1.0);
    this.t34_1 = new Color(0.0, 1.0, 1.0, 1.0);
    this.u34_1 = new Color(1.0, 0.0, 1.0, 1.0);
    this.v34_1 = new Color(1.0, 0.5, 0.0, 1.0);
    this.w34_1 = new Color(0.7, 1.0, 0.0, 1.0);
    this.x34_1 = new Color(1.0, 0.5, 0.5, 1.0);
    this.y34_1 = new Color(0.5, 1.0, 0.5, 1.0);
    this.z34_1 = new Color(0.5, 0.5, 1.0, 1.0);
    this.a35_1 = new Color(1.0, 1.0, 0.5, 1.0);
    this.b35_1 = new Color(0.5, 1.0, 1.0, 1.0);
    this.c35_1 = new Color(1.0, 0.5, 1.0, 1.0);
    this.d35_1 = new Color(1.0, 0.75, 0.5, 1.0);
    this.e35_1 = new Color(0.5, 0.0, 0.0, 1.0);
    this.f35_1 = new Color(0.0, 0.5, 0.0, 1.0);
    this.g35_1 = new Color(0.0, 0.0, 0.5, 1.0);
    this.h35_1 = new Color(0.5, 0.5, 0.0, 1.0);
    this.i35_1 = new Color(0.0, 0.5, 0.5, 1.0);
    this.j35_1 = new Color(0.5, 0.0, 0.5, 1.0);
    this.k35_1 = new Color(0.5, 0.25, 0.0, 1.0);
  }
  Companion_43.prototype.k5n = function () {
    return this.k34_1;
  };
  Companion_43.prototype.l5n = function (hex) {
    var tmp$ret$0;
    {
      tmp$ret$0 = charSequenceLength(hex) === 0;
    }
    if (tmp$ret$0) {
      return this.k34_1;
    }
    var str = hex;
    if (equals(new Char(charSequenceGet(str, 0)), new Char(_Char___init__impl__6a9atx(35)))) {
      var tmp$ret$2;
      {
        var tmp0_substring = str;
        var tmp$ret$1;
        {
          tmp$ret$1 = tmp0_substring;
        }
        tmp$ret$2 = tmp$ret$1.substring(1);
      }
      str = tmp$ret$2;
    }
    if (str.length > 8) {
      var tmp$ret$4;
      {
        var tmp1_substring = str;
        var tmp$ret$3;
        {
          tmp$ret$3 = tmp1_substring;
        }
        tmp$ret$4 = tmp$ret$3.substring(0, 8);
      }
      str = tmp$ret$4;
    }
    var r;
    var g = 0.0;
    var b = 0.0;
    var a = 1.0;
    try {
      var tmp0_subject = str.length;
      switch (tmp0_subject) {
        case 1:
          var r4 = toInt(str, 16);
          r = (r4 | r4 << 4) / 255.0;
          break;
        case 2:
          var tmp$ret$6;
          {
            var tmp2_substring = str;
            var tmp$ret$5;
            {
              tmp$ret$5 = tmp2_substring;
            }
            tmp$ret$6 = tmp$ret$5.substring(0, 1);
          }

          var r4_0 = toInt(tmp$ret$6, 16);
          var tmp$ret$8;
          {
            var tmp3_substring = str;
            var tmp$ret$7;
            {
              tmp$ret$7 = tmp3_substring;
            }
            tmp$ret$8 = tmp$ret$7.substring(1, 2);
          }

          var g4 = toInt(tmp$ret$8, 16);
          r = (r4_0 | r4_0 << 4) / 255.0;
          g = (g4 | g4 << 4) / 255.0;
          break;
        case 3:
          var tmp$ret$10;
          {
            var tmp4_substring = str;
            var tmp$ret$9;
            {
              tmp$ret$9 = tmp4_substring;
            }
            tmp$ret$10 = tmp$ret$9.substring(0, 1);
          }

          var r4_1 = toInt(tmp$ret$10, 16);
          var tmp$ret$12;
          {
            var tmp5_substring = str;
            var tmp$ret$11;
            {
              tmp$ret$11 = tmp5_substring;
            }
            tmp$ret$12 = tmp$ret$11.substring(1, 2);
          }

          var g4_0 = toInt(tmp$ret$12, 16);
          var tmp$ret$14;
          {
            var tmp6_substring = str;
            var tmp$ret$13;
            {
              tmp$ret$13 = tmp6_substring;
            }
            tmp$ret$14 = tmp$ret$13.substring(2, 3);
          }

          var b4 = toInt(tmp$ret$14, 16);
          r = (r4_1 | r4_1 << 4) / 255.0;
          g = (g4_0 | g4_0 << 4) / 255.0;
          b = (b4 | b4 << 4) / 255.0;
          break;
        case 4:
          var tmp$ret$16;
          {
            var tmp7_substring = str;
            var tmp$ret$15;
            {
              tmp$ret$15 = tmp7_substring;
            }
            tmp$ret$16 = tmp$ret$15.substring(0, 1);
          }

          var r4_2 = toInt(tmp$ret$16, 16);
          var tmp$ret$18;
          {
            var tmp8_substring = str;
            var tmp$ret$17;
            {
              tmp$ret$17 = tmp8_substring;
            }
            tmp$ret$18 = tmp$ret$17.substring(1, 2);
          }

          var g4_1 = toInt(tmp$ret$18, 16);
          var tmp$ret$20;
          {
            var tmp9_substring = str;
            var tmp$ret$19;
            {
              tmp$ret$19 = tmp9_substring;
            }
            tmp$ret$20 = tmp$ret$19.substring(2, 3);
          }

          var b4_0 = toInt(tmp$ret$20, 16);
          var tmp$ret$22;
          {
            var tmp10_substring = str;
            var tmp$ret$21;
            {
              tmp$ret$21 = tmp10_substring;
            }
            tmp$ret$22 = tmp$ret$21.substring(2, 3);
          }

          var a4 = toInt(tmp$ret$22, 16);
          r = (r4_2 | r4_2 << 4) / 255.0;
          g = (g4_1 | g4_1 << 4) / 255.0;
          b = (b4_0 | b4_0 << 4) / 255.0;
          a = (a4 | a4 << 4) / 255.0;
          break;
        case 5:
          var tmp$ret$24;
          {
            var tmp11_substring = str;
            var tmp$ret$23;
            {
              tmp$ret$23 = tmp11_substring;
            }
            tmp$ret$24 = tmp$ret$23.substring(0, 2);
          }

          r = toInt(tmp$ret$24, 16) / 255.0;
          var tmp$ret$26;
          {
            var tmp12_substring = str;
            var tmp$ret$25;
            {
              tmp$ret$25 = tmp12_substring;
            }
            tmp$ret$26 = tmp$ret$25.substring(2, 4);
          }

          g = toInt(tmp$ret$26, 16) / 255.0;
          var tmp$ret$28;
          {
            var tmp13_substring = str;
            var tmp$ret$27;
            {
              tmp$ret$27 = tmp13_substring;
            }
            tmp$ret$28 = tmp$ret$27.substring(4, 5);
          }

          b = toInt(tmp$ret$28, 16) / 255.0;
          break;
        case 6:
          var tmp$ret$30;
          {
            var tmp14_substring = str;
            var tmp$ret$29;
            {
              tmp$ret$29 = tmp14_substring;
            }
            tmp$ret$30 = tmp$ret$29.substring(0, 2);
          }

          r = toInt(tmp$ret$30, 16) / 255.0;
          var tmp$ret$32;
          {
            var tmp15_substring = str;
            var tmp$ret$31;
            {
              tmp$ret$31 = tmp15_substring;
            }
            tmp$ret$32 = tmp$ret$31.substring(2, 4);
          }

          g = toInt(tmp$ret$32, 16) / 255.0;
          var tmp$ret$34;
          {
            var tmp16_substring = str;
            var tmp$ret$33;
            {
              tmp$ret$33 = tmp16_substring;
            }
            tmp$ret$34 = tmp$ret$33.substring(4, 6);
          }

          b = toInt(tmp$ret$34, 16) / 255.0;
          break;
        default:
          var tmp$ret$36;
          {
            var tmp17_substring = str;
            var tmp$ret$35;
            {
              tmp$ret$35 = tmp17_substring;
            }
            tmp$ret$36 = tmp$ret$35.substring(0, 2);
          }

          r = toInt(tmp$ret$36, 16) / 255.0;
          var tmp$ret$38;
          {
            var tmp18_substring = str;
            var tmp$ret$37;
            {
              tmp$ret$37 = tmp18_substring;
            }
            tmp$ret$38 = tmp$ret$37.substring(2, 4);
          }

          g = toInt(tmp$ret$38, 16) / 255.0;
          var tmp$ret$40;
          {
            var tmp19_substring = str;
            var tmp$ret$39;
            {
              tmp$ret$39 = tmp19_substring;
            }
            tmp$ret$40 = tmp$ret$39.substring(4, 6);
          }

          b = toInt(tmp$ret$40, 16) / 255.0;
          var tmp$ret$42;
          {
            var tmp20_substring = str;
            var tmp$ret$41;
            {
              tmp$ret$41 = tmp20_substring;
            }
            tmp$ret$42 = tmp$ret$41.substring(6);
          }

          a = toInt(tmp$ret$42, 16) / 255.0;
          break;
      }
    } catch ($p) {
      if ($p instanceof NumberFormatException) {
        throw IllegalArgumentException_init_$Create$_0('Invalid color code: ' + hex, $p);
      } else {
        throw $p;
      }
    }
    return new Color(r, g, b, a);
  };
  Companion_43.$metadata$ = objectMeta('Companion');
  var Companion_instance_43;
  function Companion_getInstance_43() {
    if (Companion_instance_43 == null)
      new Companion_43();
    return Companion_instance_43;
  }
  function Color(r, g, b, a) {
    Companion_getInstance_43();
    Vec4f.call(this, r, g, b, a);
  }
  Color.prototype.u55 = function () {
    return this.r(0);
  };
  Color.prototype.w55 = function () {
    return this.r(1);
  };
  Color.prototype.x55 = function () {
    return this.r(2);
  };
  Color.prototype.y55 = function () {
    return this.r(3);
  };
  Color.prototype.w5l = function (other, weight, result) {
    result.t5l(other.u55() * weight + this.u55() * (1.0 - weight));
    result.u5l(other.w55() * weight + this.w55() * (1.0 - weight));
    result.v5l(other.x55() * weight + this.x55() * (1.0 - weight));
    result.b5f(other.y55() * weight + this.y55() * (1.0 - weight));
    return result;
  };
  Color.prototype.s4e = function (other, weight, result, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      result = MutableColor_init_$Create$();
    return this.w5l(other, weight, result);
  };
  Color.prototype.d40 = function (alpha) {
    return new MutableColor(this.u55(), this.w55(), this.x55(), alpha);
  };
  Color.$metadata$ = classMeta('Color', undefined, undefined, undefined, undefined, Vec4f.prototype);
  function MutableColor_init_$Init$($this) {
    MutableColor.call($this, 0.0, 0.0, 0.0, 1.0);
    return $this;
  }
  function MutableColor_init_$Create$() {
    return MutableColor_init_$Init$(Object.create(MutableColor.prototype));
  }
  function MutableColor_init_$Init$_0(color, $this) {
    MutableColor.call($this, color.u55(), color.w55(), color.x55(), color.y55());
    return $this;
  }
  function MutableColor_init_$Create$_0(color) {
    return MutableColor_init_$Init$_0(color, Object.create(MutableColor.prototype));
  }
  function MutableColor(r, g, b, a) {
    Color.call(this, r, g, b, a);
  }
  MutableColor.prototype.t5l = function (value) {
    this.m2g(0, value);
  };
  MutableColor.prototype.u55 = function () {
    return this.r(0);
  };
  MutableColor.prototype.u5l = function (value) {
    this.m2g(1, value);
  };
  MutableColor.prototype.w55 = function () {
    return this.r(1);
  };
  MutableColor.prototype.v5l = function (value) {
    this.m2g(2, value);
  };
  MutableColor.prototype.x55 = function () {
    return this.r(2);
  };
  MutableColor.prototype.b5f = function (value) {
    this.m2g(3, value);
  };
  MutableColor.prototype.y55 = function () {
    return this.r(3);
  };
  MutableColor.prototype.x2l = function (other) {
    this.t5l(other.e23());
    this.u5l(other.g23());
    this.v5l(other.w2g());
    this.b5f(other.r2l());
    return this;
  };
  MutableColor.prototype.m2g = function (i, v) {
    this.p2i()[i] = v;
  };
  MutableColor.$metadata$ = classMeta('MutableColor', undefined, undefined, undefined, undefined, Color.prototype);
  function Color_0(hex) {
    return Companion_getInstance_43().l5n(hex);
  }
  function Disposable() {
  }
  Disposable.$metadata$ = interfaceMeta('Disposable');
  function Companion_44() {
    Companion_instance_44 = this;
  }
  Companion_44.prototype.u49 = function () {
    return Companion_getInstance_45().y5n_1;
  };
  Companion_44.$metadata$ = objectMeta('Companion');
  var Companion_instance_44;
  function Companion_getInstance_44() {
    if (Companion_instance_44 == null)
      new Companion_44();
    return Companion_instance_44;
  }
  function Font(sizePts) {
    Companion_getInstance_44();
    this.f3x_1 = sizePts;
  }
  Font.prototype.h5i = function () {
    return this.f3x_1;
  };
  Font.$metadata$ = classMeta('Font');
  function TextMetrics() {
    this.l49_1 = 0.0;
    this.m49_1 = 0.0;
    this.n49_1 = 0.0;
    this.o49_1 = 0;
    this.p49_1 = 0.0;
    this.q49_1 = 0.0;
    this.r49_1 = 0.0;
    this.s49_1 = 0.0;
  }
  TextMetrics.prototype.v3z = function () {
    return this.m49_1;
  };
  TextMetrics.prototype.a5n = function () {
    return this.n49_1;
  };
  TextMetrics.prototype.u3z = function () {
    return this.l49_1 + this.p49_1 + this.q49_1;
  };
  TextMetrics.$metadata$ = classMeta('TextMetrics');
  function InputHandler(name) {
    this.t4q_1 = name;
    this.u4q_1 = false;
    this.v4q_1 = false;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.w4q_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = ArrayList_init_$Create$_0();
    }
    tmp_0.x4q_1 = tmp$ret$1;
  }
  InputHandler.prototype.a4r = function (_set____db54di) {
    this.u4q_1 = _set____db54di;
  };
  InputHandler.prototype.z4q = function () {
    return this.u4q_1;
  };
  InputHandler.prototype.y4q = function (_set____db54di) {
    this.v4q_1 = _set____db54di;
  };
  InputHandler.prototype.c4r = function () {
    return this.v4q_1;
  };
  InputHandler.prototype.d4r = function (pointerState, ctx) {
    {
      var tmp0_forEach = this.w4q_1;
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          element.d4r(pointerState, ctx);
        }
      }
    }
  };
  InputHandler.prototype.f4r = function (keyEvents, ctx) {
    {
      var tmp0_forEach = this.x4q_1;
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          element.z5n(keyEvents, ctx);
        }
      }
    }
  };
  InputHandler.$metadata$ = classMeta('InputHandler');
  function InputStack() {
    InputStack_instance = this;
    this.e2b_1 = new InputHandler('InputStack.defaultInputHandler');
    this.f2b_1 = mutableListOf([this.e2b_1]);
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.g2b_1 = tmp$ret$0;
  }
  InputStack.prototype.b4r = function (inputHandler) {
    this.s4q(inputHandler);
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.f2b_1;
      tmp0_plusAssign.b(inputHandler);
    }
  };
  InputStack.prototype.s4q = function (inputHandler) {
    var tmp0_this = this;
    {
      var tmp0_minusAssign = tmp0_this.f2b_1;
      tmp0_minusAssign.c4(inputHandler);
    }
  };
  InputStack.prototype.h2b = function (inputManager, ctx) {
    this.g2b_1.t7();
    this.g2b_1.o1(inputManager.s2a_1);
    var pointerBlocked = false;
    var inductionVariable = get_lastIndex(this.f2b_1);
    if (0 <= inductionVariable)
      $l$loop: do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var handler = this.f2b_1.r(i);
        if (!pointerBlocked) {
          handler.d4r(inputManager.w2a_1, ctx);
          if (handler.u4q_1) {
            pointerBlocked = true;
          }
        }
        var tmp$ret$0;
        {
          var tmp0_isNotEmpty = this.g2b_1;
          tmp$ret$0 = !tmp0_isNotEmpty.q();
        }
        if (tmp$ret$0) {
          handler.f4r(this.g2b_1, ctx);
          if (handler.v4q_1) {
            this.g2b_1.t7();
          }
        }
        if (pointerBlocked ? this.g2b_1.q() : false) {
          break $l$loop;
        }
      }
       while (0 <= inductionVariable);
  };
  InputStack.$metadata$ = objectMeta('InputStack');
  var InputStack_instance;
  function InputStack_getInstance() {
    if (InputStack_instance == null)
      new InputStack();
    return InputStack_instance;
  }
  function LazyMat4d(update) {
    this.l5c_1 = update;
    this.m5c_1 = true;
    this.n5c_1 = new Mat4d();
  }
  LazyMat4d.prototype.t7 = function () {
    this.m5c_1 = false;
    this.n5c_1.l2g();
  };
  LazyMat4d.prototype.l1e = function () {
    if (this.m5c_1) {
      this.l5c_1(this.n5c_1);
      this.m5c_1 = false;
    }
    return this.n5c_1;
  };
  LazyMat4d.$metadata$ = classMeta('LazyMat4d');
  function logE(_this__u8e3s4, message) {
    var tmp$ret$1;
    {
      var tmp2_eExt = Log_getInstance();
      var tmp$ret$0;
      {
        var tmp1_logExt = Level_ERROR_getInstance();
        var tmp0_log = getKClassFromExpression(_this__u8e3s4).ei();
        var tmp;
        if (tmp1_logExt.e1w_1 >= tmp2_eExt.y1v_1.e1w_1) {
          tmp = tmp2_eExt.z1v_1(tmp1_logExt, tmp0_log, message());
        }
        tmp$ret$0 = tmp;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  }
  function logD(_this__u8e3s4, message) {
    var tmp$ret$1;
    {
      var tmp2_dExt = Log_getInstance();
      var tmp$ret$0;
      {
        var tmp1_logExt = Level_DEBUG_getInstance();
        var tmp0_log = getKClassFromExpression(_this__u8e3s4).ei();
        var tmp;
        if (tmp1_logExt.e1w_1 >= tmp2_dExt.y1v_1.e1w_1) {
          tmp = tmp2_dExt.z1v_1(tmp1_logExt, tmp0_log, message());
        }
        tmp$ret$0 = tmp;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  }
  function logW(_this__u8e3s4, message) {
    var tmp$ret$1;
    {
      var tmp2_wExt = Log_getInstance();
      var tmp$ret$0;
      {
        var tmp1_logExt = Level_WARN_getInstance();
        var tmp0_log = getKClassFromExpression(_this__u8e3s4).ei();
        var tmp;
        if (tmp1_logExt.e1w_1 >= tmp2_wExt.y1v_1.e1w_1) {
          tmp = tmp2_wExt.z1v_1(tmp1_logExt, tmp0_log, message());
        }
        tmp$ret$0 = tmp;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  }
  var Level_TRACE_instance;
  var Level_DEBUG_instance;
  var Level_INFO_instance;
  var Level_WARN_instance;
  var Level_ERROR_instance;
  var Level_OFF_instance;
  var Level_entriesInitialized;
  function Level_initEntries() {
    if (Level_entriesInitialized)
      return Unit_getInstance();
    Level_entriesInitialized = true;
    Level_TRACE_instance = new Level('TRACE', 0, 0, _Char___init__impl__6a9atx(84));
    Level_DEBUG_instance = new Level('DEBUG', 1, 1, _Char___init__impl__6a9atx(68));
    Level_INFO_instance = new Level('INFO', 2, 2, _Char___init__impl__6a9atx(73));
    Level_WARN_instance = new Level('WARN', 3, 3, _Char___init__impl__6a9atx(87));
    Level_ERROR_instance = new Level('ERROR', 4, 4, _Char___init__impl__6a9atx(69));
    Level_OFF_instance = new Level('OFF', 5, 5, _Char___init__impl__6a9atx(120));
  }
  function Level(name, ordinal, level, indicator) {
    Enum.call(this, name, ordinal);
    this.e1w_1 = level;
    this.f1w_1 = indicator;
  }
  Level.prototype.a5o = function () {
    return this.e1w_1;
  };
  Level.$metadata$ = classMeta('Level', undefined, undefined, undefined, undefined, Enum.prototype);
  function Log$DEFAULT_PRINTER$lambda() {
    return function (lvl, tag, message) {
      println('' + new Char(lvl.f1w_1) + '/' + tag + ': ' + message);
      return Unit_getInstance();
    };
  }
  function Level_DEBUG_getInstance() {
    Level_initEntries();
    return Level_DEBUG_instance;
  }
  function Level_INFO_getInstance() {
    Level_initEntries();
    return Level_INFO_instance;
  }
  function Level_WARN_getInstance() {
    Level_initEntries();
    return Level_WARN_instance;
  }
  function Level_ERROR_getInstance() {
    Level_initEntries();
    return Level_ERROR_instance;
  }
  function Log() {
    Log_instance = this;
    var tmp = this;
    tmp.x1v_1 = Log$DEFAULT_PRINTER$lambda();
    this.y1v_1 = Level_DEBUG_getInstance();
    this.z1v_1 = this.x1v_1;
  }
  Log.prototype.a5o = function () {
    return this.y1v_1;
  };
  Log.prototype.b5o = function () {
    return this.z1v_1;
  };
  Log.prototype.c5o = function (src, message) {
    var tmp$ret$0;
    {
      var tmp1_logExt = Level_DEBUG_getInstance();
      var tmp0_log = getKClassFromExpression(src).ei();
      var tmp;
      if (tmp1_logExt.e1w_1 >= this.y1v_1.e1w_1) {
        tmp = this.z1v_1(tmp1_logExt, tmp0_log, message());
      }
      tmp$ret$0 = tmp;
    }
    return tmp$ret$0;
  };
  Log.prototype.d5o = function (src, message) {
    var tmp$ret$0;
    {
      var tmp1_logExt = Level_INFO_getInstance();
      var tmp0_log = getKClassFromExpression(src).ei();
      var tmp;
      if (tmp1_logExt.e1w_1 >= this.y1v_1.e1w_1) {
        tmp = this.z1v_1(tmp1_logExt, tmp0_log, message());
      }
      tmp$ret$0 = tmp;
    }
    return tmp$ret$0;
  };
  Log.prototype.e5o = function (src, message) {
    var tmp$ret$0;
    {
      var tmp1_logExt = Level_WARN_getInstance();
      var tmp0_log = getKClassFromExpression(src).ei();
      var tmp;
      if (tmp1_logExt.e1w_1 >= this.y1v_1.e1w_1) {
        tmp = this.z1v_1(tmp1_logExt, tmp0_log, message());
      }
      tmp$ret$0 = tmp;
    }
    return tmp$ret$0;
  };
  Log.prototype.f5o = function (src, message) {
    var tmp$ret$0;
    {
      var tmp1_logExt = Level_ERROR_getInstance();
      var tmp0_log = getKClassFromExpression(src).ei();
      var tmp;
      if (tmp1_logExt.e1w_1 >= this.y1v_1.e1w_1) {
        tmp = this.z1v_1(tmp1_logExt, tmp0_log, message());
      }
      tmp$ret$0 = tmp;
    }
    return tmp$ret$0;
  };
  Log.prototype.g5o = function (level, src, message) {
    var tmp0_log = getKClassFromExpression(src).ei();
    var tmp;
    if (level.e1w_1 >= this.y1v_1.e1w_1) {
      tmp = this.z1v_1(level, tmp0_log, message());
    }
    return tmp;
  };
  Log.prototype.h5o = function (level, tag, message) {
    if (level.e1w_1 >= this.y1v_1.e1w_1) {
      this.z1v_1(level, tag, message());
    }
  };
  Log.$metadata$ = objectMeta('Log');
  var Log_instance;
  function Log_getInstance() {
    if (Log_instance == null)
      new Log();
    return Log_instance;
  }
  function logI(_this__u8e3s4, message) {
    var tmp$ret$1;
    {
      var tmp0_iExt = Log_getInstance();
      var tmp$ret$0;
      {
        var tmp1_logExt = Level_INFO_getInstance();
        var tmp0_log = getKClassFromExpression(_this__u8e3s4).ei();
        var tmp;
        if (tmp1_logExt.e1w_1 >= tmp0_iExt.y1v_1.e1w_1) {
          tmp = tmp0_iExt.z1v_1(tmp1_logExt, tmp0_log, message());
        }
        tmp$ret$0 = tmp;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  }
  function MsdfFont_init_$Init$(data, sizePts, italic, weight, cutoff, glowColor, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      data = Companion_getInstance_45().x5n_1;
    if (!(($mask0 & 2) === 0))
      sizePts = 12.0;
    if (!(($mask0 & 4) === 0)) {
      Companion_getInstance_45();
      italic = 0.0;
    }
    if (!(($mask0 & 8) === 0)) {
      Companion_getInstance_45();
      weight = 0.0;
    }
    if (!(($mask0 & 16) === 0)) {
      Companion_getInstance_45();
      cutoff = 1.0;
    }
    if (!(($mask0 & 32) === 0))
      glowColor = null;
    MsdfFont.call($this, data, sizePts, italic, weight, cutoff, glowColor);
    return $this;
  }
  function MsdfFont_init_$Create$(data, sizePts, italic, weight, cutoff, glowColor, $mask0, $marker) {
    return MsdfFont_init_$Init$(data, sizePts, italic, weight, cutoff, glowColor, $mask0, $marker, Object.create(MsdfFont.prototype));
  }
  function _get_emScale__u0agj5($this) {
    return $this.d4p_1 * $this.h5i();
  }
  function Companion_45() {
    Companion_instance_45 = this;
    this.m5n_1 = -0.09;
    this.n5n_1 = -0.06;
    this.o5n_1 = 0.0;
    this.p5n_1 = 0.1;
    this.q5n_1 = 0.15;
    this.r5n_1 = 0.0;
    this.s5n_1 = 0.25;
    this.t5n_1 = 1.0;
    this.u5n_1 = 0.15;
    this.v5n_1 = 0.1;
    var tmp = this;
    tmp.w5n_1 = TextureProps_init_$Create$(null, null, null, null, null, null, false, 0, 63, null);
    var tmp$ret$2;
    {
      var tmp0_decodeFromString = Default_getInstance();
      var tmp1_decodeFromString = decodeToString(BufferUtil_getInstance().k5o(BufferUtil_getInstance().j5o(RobotoRegularMeta_getInstance().i5o_1)).e6());
      var tmp$ret$1;
      {
        var tmp1_serializer = tmp0_decodeFromString.yn();
        var tmp$ret$0;
        {
          var tmp0_cast = serializer(tmp1_serializer, createKType(getKClass(MsdfMeta), arrayOf([]), false));
          tmp$ret$0 = isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE();
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp0_decodeFromString.xn(tmp$ret$1, tmp1_decodeFromString);
    }
    var robotoMeta = tmp$ret$2;
    var tmp_0 = this;
    tmp_0.x5n_1 = new MsdfFontData(Texture2d_init_$Create$_2('fonts/font-roboto-regular.png', null, this.w5n_1, 2, null), robotoMeta);
    var tmp_1 = this;
    tmp_1.y5n_1 = MsdfFont_init_$Create$(this.x5n_1, 0.0, 0.0, 0.0, 0.0, null, 62, null);
  }
  Companion_45.$metadata$ = objectMeta('Companion');
  var Companion_instance_45;
  function Companion_getInstance_45() {
    if (Companion_instance_45 == null)
      new Companion_45();
    return Companion_instance_45;
  }
  function MsdfFont(data, sizePts, italic, weight, cutoff, glowColor) {
    Companion_getInstance_45();
    Font.call(this, sizePts);
    this.y4o_1 = data;
    this.z4o_1 = italic;
    this.a4p_1 = weight;
    this.b4p_1 = cutoff;
    this.c4p_1 = glowColor;
    this.d4p_1 = 1.0;
  }
  MsdfFont.prototype.m55 = function () {
    return this.y4o_1;
  };
  MsdfFont.prototype.l5o = function () {
    return this.z4o_1;
  };
  MsdfFont.prototype.m5o = function () {
    return this.a4p_1;
  };
  MsdfFont.prototype.n5o = function () {
    return this.b4p_1;
  };
  MsdfFont.prototype.o5o = function () {
    return this.c4p_1;
  };
  MsdfFont.prototype.g3x = function () {
    return this.d4p_1;
  };
  MsdfFont.prototype.t5i = function () {
    return this.d4p_1 * this.h5i() * this.y4o_1.u4o_1.q5i_1.q5o_1;
  };
  MsdfFont.prototype.e4s = function (scale, ctx) {
    this.d4p_1 = scale;
  };
  MsdfFont.prototype.m3y = function (text, result) {
    var lineWidth = 0.0;
    result.l49_1 = 0.0;
    result.m49_1 = this.t5i();
    result.n49_1 = this.y4o_1.u4o_1.q5i_1.r5o_1 * _get_emScale__u0agj5(this);
    result.o49_1 = 1;
    result.r49_1 = this.y4o_1.u4o_1.q5i_1.r5o_1 * _get_emScale__u0agj5(this);
    result.s49_1 = this.y4o_1.u4o_1.q5i_1.s5o_1 * _get_emScale__u0agj5(this);
    var inductionVariable = 0;
    var last = charSequenceLength(text) - 1 | 0;
    if (inductionVariable <= last)
      $l$loop: do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var c = charSequenceGet(text, i);
        if (equals(new Char(c), new Char(_Char___init__impl__6a9atx(10)))) {
          var tmp = result;
          var tmp$ret$0;
          {
            var tmp0_max = result.u3z();
            var tmp1_max = lineWidth;
            tmp$ret$0 = Math.max(tmp0_max, tmp1_max);
          }
          tmp.l49_1 = tmp$ret$0;
          var tmp1_this = result;
          tmp1_this.m49_1 = tmp1_this.m49_1 + this.t5i();
          var tmp2_this = result;
          var tmp3 = tmp2_this.o49_1;
          tmp2_this.o49_1 = tmp3 + 1 | 0;
          lineWidth = 0.0;
        } else {
          var tmp4_elvis_lhs = this.y4o_1.v4o_1.b3(new Char(c));
          var tmp_0;
          if (tmp4_elvis_lhs == null) {
            continue $l$loop;
          } else {
            tmp_0 = tmp4_elvis_lhs;
          }
          var metrics = tmp_0;
          lineWidth = lineWidth + metrics.z5i_1 * _get_emScale__u0agj5(this);
        }
      }
       while (inductionVariable <= last);
    var tmp_1 = result;
    var tmp$ret$1;
    {
      var tmp2_max = result.u3z();
      var tmp3_max = lineWidth;
      tmp$ret$1 = Math.max(tmp2_max, tmp3_max);
    }
    tmp_1.l49_1 = tmp$ret$1;
    var tmp_2 = result;
    var tmp$ret$2;
    {
      var tmp4_min = this.z4o_1;
      tmp$ret$2 = Math.min(0.0, tmp4_min);
    }
    tmp_2.p49_1 = tmp$ret$2 * _get_emScale__u0agj5(this);
    var tmp_3 = result;
    var tmp$ret$3;
    {
      var tmp5_max = this.z4o_1;
      tmp$ret$3 = Math.max(0.0, tmp5_max);
    }
    tmp_3.q49_1 = tmp$ret$3 * _get_emScale__u0agj5(this);
    return result;
  };
  MsdfFont.prototype.toString = function () {
    return 'MsdfFont { name: ' + this.y4o_1.u4o_1.p5i_1 + ', info: ' + this.y4o_1.u4o_1.o5i_1 + ' }';
  };
  MsdfFont.$metadata$ = classMeta('MsdfFont', undefined, undefined, undefined, undefined, Font.prototype);
  function MsdfFontData(map, meta) {
    this.t4o_1 = map;
    this.u4o_1 = meta;
    var tmp = this;
    var tmp$ret$2;
    {
      var tmp0_associateBy = this.u4o_1.r5i_1;
      var capacity = coerceAtLeast(mapCapacity(collectionSizeOrDefault(tmp0_associateBy, 10)), 16);
      var tmp$ret$1;
      {
        var tmp0_associateByTo = LinkedHashMap_init_$Create$_0(capacity);
        var tmp0_iterator = tmp0_associateBy.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          var tmp$ret$0;
          {
            tmp$ret$0 = numberToChar(element.y5i_1);
          }
          tmp0_associateByTo.a(new Char(tmp$ret$0), element);
        }
        tmp$ret$1 = tmp0_associateByTo;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    tmp.v4o_1 = tmp$ret$2;
    var tmp_0 = this;
    var tmp$ret$5;
    {
      var tmp0_associate = this.u4o_1.s5i_1;
      var capacity_0 = coerceAtLeast(mapCapacity(collectionSizeOrDefault(tmp0_associate, 10)), 16);
      var tmp$ret$4;
      {
        var tmp1_associateTo = LinkedHashMap_init_$Create$_0(capacity_0);
        var tmp0_iterator_0 = tmp0_associate.h();
        while (tmp0_iterator_0.n()) {
          var element_0 = tmp0_iterator_0.o();
          {
            var tmp$ret$3;
            {
              tmp$ret$3 = to(element_0.v5o_1 << 16 | element_0.w5o_1, element_0.x5o_1);
            }
            var tmp0_plusAssign = tmp$ret$3;
            tmp1_associateTo.a(tmp0_plusAssign.v_1, tmp0_plusAssign.w_1);
          }
        }
        tmp$ret$4 = tmp1_associateTo;
      }
      tmp$ret$5 = tmp$ret$4;
    }
    tmp_0.w4o_1 = tmp$ret$5;
  }
  MsdfFontData.prototype.lg = function () {
    return this.t4o_1;
  };
  MsdfFontData.prototype.y5o = function () {
    return this.u4o_1;
  };
  MsdfFontData.prototype.z5o = function () {
    return this.v4o_1;
  };
  MsdfFontData.prototype.a5p = function () {
    return this.w4o_1;
  };
  MsdfFontData.$metadata$ = classMeta('MsdfFontData');
  function Companion_46() {
    Companion_instance_46 = this;
  }
  Companion_46.$metadata$ = objectMeta('Companion');
  var Companion_instance_46;
  function Companion_getInstance_46() {
    if (Companion_instance_46 == null)
      new Companion_46();
    return Companion_instance_46;
  }
  function $serializer() {
    $serializer_instance = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('de.fabmax.kool.util.MsdfMeta', this, 5);
    tmp0_serialDesc.wu('atlas', false);
    tmp0_serialDesc.wu('name', false);
    tmp0_serialDesc.wu('metrics', false);
    tmp0_serialDesc.wu('glyphs', false);
    tmp0_serialDesc.wu('kerning', false);
    this.b5p_1 = tmp0_serialDesc;
  }
  $serializer.prototype.hn = function () {
    return this.b5p_1;
  };
  $serializer.prototype.tu = function () {
    var tmp$ret$2;
    {
      var tmp0_arrayOf = [$serializer_getInstance_0(), StringSerializer_getInstance(), $serializer_getInstance_3(), new ArrayListSerializer($serializer_getInstance_1()), new ArrayListSerializer($serializer_getInstance_4())];
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_arrayOf;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  $serializer.prototype.in = function (decoder) {
    var tmp0_desc = this.b5p_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = null;
    var tmp7_local3 = null;
    var tmp8_local4 = null;
    var tmp9_input = decoder.aq(tmp0_desc);
    if (tmp9_input.nq()) {
      tmp4_local0 = tmp9_input.lq(tmp0_desc, 0, $serializer_getInstance_0(), tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp9_input.kq(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp9_input.lq(tmp0_desc, 2, $serializer_getInstance_3(), tmp6_local2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp9_input.lq(tmp0_desc, 3, new ArrayListSerializer($serializer_getInstance_1()), tmp7_local3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp8_local4 = tmp9_input.lq(tmp0_desc, 4, new ArrayListSerializer($serializer_getInstance_4()), tmp8_local4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp9_input.oq(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp9_input.lq(tmp0_desc, 0, $serializer_getInstance_0(), tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp9_input.kq(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp9_input.lq(tmp0_desc, 2, $serializer_getInstance_3(), tmp6_local2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp9_input.lq(tmp0_desc, 3, new ArrayListSerializer($serializer_getInstance_1()), tmp7_local3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp8_local4 = tmp9_input.lq(tmp0_desc, 4, new ArrayListSerializer($serializer_getInstance_4()), tmp8_local4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp9_input.bq(tmp0_desc);
    return MsdfMeta_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
  };
  $serializer.$metadata$ = objectMeta('$serializer', [GeneratedSerializer]);
  var $serializer_instance;
  function $serializer_getInstance() {
    if ($serializer_instance == null)
      new $serializer();
    return $serializer_instance;
  }
  function MsdfMeta_init_$Init$(seen1, atlas, name, metrics, glyphs, kerning, serializationConstructorMarker, $this) {
    if (!(31 === (31 & seen1)))
      throwMissingFieldException(seen1, 31, $serializer_getInstance().b5p_1);
    $this.o5i_1 = atlas;
    $this.p5i_1 = name;
    $this.q5i_1 = metrics;
    $this.r5i_1 = glyphs;
    $this.s5i_1 = kerning;
    return $this;
  }
  function MsdfMeta_init_$Create$(seen1, atlas, name, metrics, glyphs, kerning, serializationConstructorMarker) {
    return MsdfMeta_init_$Init$(seen1, atlas, name, metrics, glyphs, kerning, serializationConstructorMarker, Object.create(MsdfMeta.prototype));
  }
  function MsdfMeta(atlas, name, metrics, glyphs, kerning) {
    Companion_getInstance_46();
    this.o5i_1 = atlas;
    this.p5i_1 = name;
    this.q5i_1 = metrics;
    this.r5i_1 = glyphs;
    this.s5i_1 = kerning;
  }
  MsdfMeta.prototype.c5p = function () {
    return this.o5i_1;
  };
  MsdfMeta.prototype.toString = function () {
    return 'MsdfMeta(atlas=' + this.o5i_1 + ', name=' + this.p5i_1 + ', metrics=' + this.q5i_1 + ', glyphs=' + this.r5i_1 + ', kerning=' + this.s5i_1 + ')';
  };
  MsdfMeta.prototype.hashCode = function () {
    var result = this.o5i_1.hashCode();
    result = imul(result, 31) + getStringHashCode(this.p5i_1) | 0;
    result = imul(result, 31) + this.q5i_1.hashCode() | 0;
    result = imul(result, 31) + hashCode(this.r5i_1) | 0;
    result = imul(result, 31) + hashCode(this.s5i_1) | 0;
    return result;
  };
  MsdfMeta.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MsdfMeta))
      return false;
    var tmp0_other_with_cast = other instanceof MsdfMeta ? other : THROW_CCE();
    if (!this.o5i_1.equals(tmp0_other_with_cast.o5i_1))
      return false;
    if (!(this.p5i_1 === tmp0_other_with_cast.p5i_1))
      return false;
    if (!this.q5i_1.equals(tmp0_other_with_cast.q5i_1))
      return false;
    if (!equals(this.r5i_1, tmp0_other_with_cast.r5i_1))
      return false;
    if (!equals(this.s5i_1, tmp0_other_with_cast.s5i_1))
      return false;
    return true;
  };
  MsdfMeta.$metadata$ = classMeta('MsdfMeta', undefined, undefined, {0: $serializer_getInstance});
  function $serializer_0() {
    $serializer_instance_0 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('de.fabmax.kool.util.MsdfAtlasInfo', this, 6);
    tmp0_serialDesc.wu('type', false);
    tmp0_serialDesc.wu('distanceRange', false);
    tmp0_serialDesc.wu('size', false);
    tmp0_serialDesc.wu('width', false);
    tmp0_serialDesc.wu('height', false);
    tmp0_serialDesc.wu('yOrigin', false);
    this.d5p_1 = tmp0_serialDesc;
  }
  $serializer_0.prototype.hn = function () {
    return this.d5p_1;
  };
  $serializer_0.prototype.tu = function () {
    var tmp$ret$2;
    {
      var tmp0_arrayOf = [StringSerializer_getInstance(), FloatSerializer_getInstance(), IntSerializer_getInstance(), IntSerializer_getInstance(), IntSerializer_getInstance(), StringSerializer_getInstance()];
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_arrayOf;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  $serializer_0.prototype.in = function (decoder) {
    var tmp0_desc = this.d5p_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = 0.0;
    var tmp6_local2 = 0;
    var tmp7_local3 = 0;
    var tmp8_local4 = 0;
    var tmp9_local5 = null;
    var tmp10_input = decoder.aq(tmp0_desc);
    if (tmp10_input.nq()) {
      tmp4_local0 = tmp10_input.kq(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp10_input.hq(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp10_input.fq(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp10_input.fq(tmp0_desc, 3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp8_local4 = tmp10_input.fq(tmp0_desc, 4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
      tmp9_local5 = tmp10_input.kq(tmp0_desc, 5);
      tmp3_bitMask0 = tmp3_bitMask0 | 32;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp10_input.oq(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp10_input.kq(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp10_input.hq(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp10_input.fq(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp10_input.fq(tmp0_desc, 3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp8_local4 = tmp10_input.fq(tmp0_desc, 4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          case 5:
            tmp9_local5 = tmp10_input.kq(tmp0_desc, 5);
            tmp3_bitMask0 = tmp3_bitMask0 | 32;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp10_input.bq(tmp0_desc);
    return MsdfAtlasInfo_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, null);
  };
  $serializer_0.$metadata$ = objectMeta('$serializer', [GeneratedSerializer]);
  var $serializer_instance_0;
  function $serializer_getInstance_0() {
    if ($serializer_instance_0 == null)
      new $serializer_0();
    return $serializer_instance_0;
  }
  function MsdfAtlasInfo_init_$Init$(seen1, type, distanceRange, size, width, height, yOrigin, serializationConstructorMarker, $this) {
    if (!(63 === (63 & seen1)))
      throwMissingFieldException(seen1, 63, $serializer_getInstance_0().d5p_1);
    $this.i5i_1 = type;
    $this.j5i_1 = distanceRange;
    $this.k5i_1 = size;
    $this.l5i_1 = width;
    $this.m5i_1 = height;
    $this.n5i_1 = yOrigin;
    return $this;
  }
  function MsdfAtlasInfo_init_$Create$(seen1, type, distanceRange, size, width, height, yOrigin, serializationConstructorMarker) {
    return MsdfAtlasInfo_init_$Init$(seen1, type, distanceRange, size, width, height, yOrigin, serializationConstructorMarker, Object.create(MsdfAtlasInfo.prototype));
  }
  function MsdfAtlasInfo() {
  }
  MsdfAtlasInfo.prototype.e5p = function () {
    return this.j5i_1;
  };
  MsdfAtlasInfo.prototype.m = function () {
    return this.k5i_1;
  };
  MsdfAtlasInfo.prototype.u3z = function () {
    return this.l5i_1;
  };
  MsdfAtlasInfo.prototype.v3z = function () {
    return this.m5i_1;
  };
  MsdfAtlasInfo.prototype.toString = function () {
    return 'MsdfAtlasInfo(type=' + this.i5i_1 + ', distanceRange=' + this.j5i_1 + ', size=' + this.k5i_1 + ', width=' + this.l5i_1 + ', height=' + this.m5i_1 + ', yOrigin=' + this.n5i_1 + ')';
  };
  MsdfAtlasInfo.prototype.hashCode = function () {
    var result = getStringHashCode(this.i5i_1);
    result = imul(result, 31) + getNumberHashCode(this.j5i_1) | 0;
    result = imul(result, 31) + this.k5i_1 | 0;
    result = imul(result, 31) + this.l5i_1 | 0;
    result = imul(result, 31) + this.m5i_1 | 0;
    result = imul(result, 31) + getStringHashCode(this.n5i_1) | 0;
    return result;
  };
  MsdfAtlasInfo.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MsdfAtlasInfo))
      return false;
    var tmp0_other_with_cast = other instanceof MsdfAtlasInfo ? other : THROW_CCE();
    if (!(this.i5i_1 === tmp0_other_with_cast.i5i_1))
      return false;
    if (!equals(this.j5i_1, tmp0_other_with_cast.j5i_1))
      return false;
    if (!(this.k5i_1 === tmp0_other_with_cast.k5i_1))
      return false;
    if (!(this.l5i_1 === tmp0_other_with_cast.l5i_1))
      return false;
    if (!(this.m5i_1 === tmp0_other_with_cast.m5i_1))
      return false;
    if (!(this.n5i_1 === tmp0_other_with_cast.n5i_1))
      return false;
    return true;
  };
  MsdfAtlasInfo.$metadata$ = classMeta('MsdfAtlasInfo', undefined, undefined, {0: $serializer_getInstance_0});
  function $serializer_1() {
    $serializer_instance_1 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('de.fabmax.kool.util.MsdfGlyph', this, 4);
    tmp0_serialDesc.wu('unicode', false);
    tmp0_serialDesc.wu('advance', false);
    tmp0_serialDesc.wu('planeBounds', true);
    tmp0_serialDesc.wu('atlasBounds', true);
    this.f5p_1 = tmp0_serialDesc;
  }
  $serializer_1.prototype.hn = function () {
    return this.f5p_1;
  };
  $serializer_1.prototype.tu = function () {
    var tmp$ret$2;
    {
      var tmp0_arrayOf = [IntSerializer_getInstance(), FloatSerializer_getInstance(), $serializer_getInstance_2(), $serializer_getInstance_2()];
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_arrayOf;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  $serializer_1.prototype.in = function (decoder) {
    var tmp0_desc = this.f5p_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = 0;
    var tmp5_local1 = 0.0;
    var tmp6_local2 = null;
    var tmp7_local3 = null;
    var tmp8_input = decoder.aq(tmp0_desc);
    if (tmp8_input.nq()) {
      tmp4_local0 = tmp8_input.fq(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp8_input.hq(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp8_input.lq(tmp0_desc, 2, $serializer_getInstance_2(), tmp6_local2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp8_input.lq(tmp0_desc, 3, $serializer_getInstance_2(), tmp7_local3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp8_input.oq(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp8_input.fq(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp8_input.hq(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp8_input.lq(tmp0_desc, 2, $serializer_getInstance_2(), tmp6_local2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp8_input.lq(tmp0_desc, 3, $serializer_getInstance_2(), tmp7_local3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp8_input.bq(tmp0_desc);
    return MsdfGlyph_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, null);
  };
  $serializer_1.$metadata$ = objectMeta('$serializer', [GeneratedSerializer]);
  var $serializer_instance_1;
  function $serializer_getInstance_1() {
    if ($serializer_instance_1 == null)
      new $serializer_1();
    return $serializer_instance_1;
  }
  function MsdfGlyph_init_$Init$(seen1, unicode, advance, planeBounds, atlasBounds, serializationConstructorMarker, $this) {
    if (!(3 === (3 & seen1)))
      throwMissingFieldException(seen1, 3, $serializer_getInstance_1().f5p_1);
    $this.y5i_1 = unicode;
    $this.z5i_1 = advance;
    if (0 === (seen1 & 4))
      $this.a5j_1 = new MsdfRect(0.0, 0.0, 0.0, 0.0);
    else
      $this.a5j_1 = planeBounds;
    if (0 === (seen1 & 8))
      $this.b5j_1 = new MsdfRect(0.0, 0.0, 0.0, 0.0);
    else
      $this.b5j_1 = atlasBounds;
    return $this;
  }
  function MsdfGlyph_init_$Create$(seen1, unicode, advance, planeBounds, atlasBounds, serializationConstructorMarker) {
    return MsdfGlyph_init_$Init$(seen1, unicode, advance, planeBounds, atlasBounds, serializationConstructorMarker, Object.create(MsdfGlyph.prototype));
  }
  function MsdfGlyph() {
  }
  MsdfGlyph.prototype.g5p = function () {
    return this.y5i_1;
  };
  MsdfGlyph.prototype.b5n = function () {
    return this.z5i_1;
  };
  MsdfGlyph.prototype.h5p = function () {
    return this.a5j_1;
  };
  MsdfGlyph.prototype.i5p = function () {
    return this.b5j_1;
  };
  MsdfGlyph.prototype.toString = function () {
    return 'MsdfGlyph(unicode=' + this.y5i_1 + ', advance=' + this.z5i_1 + ', planeBounds=' + this.a5j_1 + ', atlasBounds=' + this.b5j_1 + ')';
  };
  MsdfGlyph.prototype.hashCode = function () {
    var result = this.y5i_1;
    result = imul(result, 31) + getNumberHashCode(this.z5i_1) | 0;
    result = imul(result, 31) + this.a5j_1.hashCode() | 0;
    result = imul(result, 31) + this.b5j_1.hashCode() | 0;
    return result;
  };
  MsdfGlyph.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MsdfGlyph))
      return false;
    var tmp0_other_with_cast = other instanceof MsdfGlyph ? other : THROW_CCE();
    if (!(this.y5i_1 === tmp0_other_with_cast.y5i_1))
      return false;
    if (!equals(this.z5i_1, tmp0_other_with_cast.z5i_1))
      return false;
    if (!this.a5j_1.equals(tmp0_other_with_cast.a5j_1))
      return false;
    if (!this.b5j_1.equals(tmp0_other_with_cast.b5j_1))
      return false;
    return true;
  };
  MsdfGlyph.$metadata$ = classMeta('MsdfGlyph', undefined, undefined, {0: $serializer_getInstance_1});
  function Companion_47() {
    Companion_instance_47 = this;
  }
  Companion_47.$metadata$ = objectMeta('Companion');
  var Companion_instance_47;
  function Companion_getInstance_47() {
    if (Companion_instance_47 == null)
      new Companion_47();
    return Companion_instance_47;
  }
  function $serializer_2() {
    $serializer_instance_2 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('de.fabmax.kool.util.MsdfRect', this, 4);
    tmp0_serialDesc.wu('left', false);
    tmp0_serialDesc.wu('bottom', false);
    tmp0_serialDesc.wu('right', false);
    tmp0_serialDesc.wu('top', false);
    this.j5p_1 = tmp0_serialDesc;
  }
  $serializer_2.prototype.hn = function () {
    return this.j5p_1;
  };
  $serializer_2.prototype.tu = function () {
    var tmp$ret$2;
    {
      var tmp0_arrayOf = [FloatSerializer_getInstance(), FloatSerializer_getInstance(), FloatSerializer_getInstance(), FloatSerializer_getInstance()];
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_arrayOf;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  $serializer_2.prototype.in = function (decoder) {
    var tmp0_desc = this.j5p_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = 0.0;
    var tmp5_local1 = 0.0;
    var tmp6_local2 = 0.0;
    var tmp7_local3 = 0.0;
    var tmp8_input = decoder.aq(tmp0_desc);
    if (tmp8_input.nq()) {
      tmp4_local0 = tmp8_input.hq(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp8_input.hq(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp8_input.hq(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp8_input.hq(tmp0_desc, 3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp8_input.oq(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp8_input.hq(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp8_input.hq(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp8_input.hq(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp8_input.hq(tmp0_desc, 3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp8_input.bq(tmp0_desc);
    return MsdfRect_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, null);
  };
  $serializer_2.$metadata$ = objectMeta('$serializer', [GeneratedSerializer]);
  var $serializer_instance_2;
  function $serializer_getInstance_2() {
    if ($serializer_instance_2 == null)
      new $serializer_2();
    return $serializer_instance_2;
  }
  function MsdfRect_init_$Init$(seen1, left, bottom, right, top, serializationConstructorMarker, $this) {
    if (!(15 === (15 & seen1)))
      throwMissingFieldException(seen1, 15, $serializer_getInstance_2().j5p_1);
    $this.u5i_1 = left;
    $this.v5i_1 = bottom;
    $this.w5i_1 = right;
    $this.x5i_1 = top;
    return $this;
  }
  function MsdfRect_init_$Create$(seen1, left, bottom, right, top, serializationConstructorMarker) {
    return MsdfRect_init_$Init$(seen1, left, bottom, right, top, serializationConstructorMarker, Object.create(MsdfRect.prototype));
  }
  function MsdfRect(left, bottom, right, top) {
    Companion_getInstance_47();
    this.u5i_1 = left;
    this.v5i_1 = bottom;
    this.w5i_1 = right;
    this.x5i_1 = top;
  }
  MsdfRect.prototype.k5p = function () {
    return this.u5i_1;
  };
  MsdfRect.prototype.l5p = function () {
    return this.v5i_1;
  };
  MsdfRect.prototype.m5p = function () {
    return this.w5i_1;
  };
  MsdfRect.prototype.n5p = function () {
    return this.x5i_1;
  };
  MsdfRect.prototype.toString = function () {
    return 'MsdfRect(left=' + this.u5i_1 + ', bottom=' + this.v5i_1 + ', right=' + this.w5i_1 + ', top=' + this.x5i_1 + ')';
  };
  MsdfRect.prototype.hashCode = function () {
    var result = getNumberHashCode(this.u5i_1);
    result = imul(result, 31) + getNumberHashCode(this.v5i_1) | 0;
    result = imul(result, 31) + getNumberHashCode(this.w5i_1) | 0;
    result = imul(result, 31) + getNumberHashCode(this.x5i_1) | 0;
    return result;
  };
  MsdfRect.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MsdfRect))
      return false;
    var tmp0_other_with_cast = other instanceof MsdfRect ? other : THROW_CCE();
    if (!equals(this.u5i_1, tmp0_other_with_cast.u5i_1))
      return false;
    if (!equals(this.v5i_1, tmp0_other_with_cast.v5i_1))
      return false;
    if (!equals(this.w5i_1, tmp0_other_with_cast.w5i_1))
      return false;
    if (!equals(this.x5i_1, tmp0_other_with_cast.x5i_1))
      return false;
    return true;
  };
  MsdfRect.$metadata$ = classMeta('MsdfRect', undefined, undefined, {0: $serializer_getInstance_2});
  function $serializer_3() {
    $serializer_instance_3 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('de.fabmax.kool.util.MsdfMetrics', this, 6);
    tmp0_serialDesc.wu('emSize', false);
    tmp0_serialDesc.wu('lineHeight', false);
    tmp0_serialDesc.wu('ascender', false);
    tmp0_serialDesc.wu('descender', false);
    tmp0_serialDesc.wu('underlineY', false);
    tmp0_serialDesc.wu('underlineThickness', false);
    this.o5p_1 = tmp0_serialDesc;
  }
  $serializer_3.prototype.hn = function () {
    return this.o5p_1;
  };
  $serializer_3.prototype.tu = function () {
    var tmp$ret$2;
    {
      var tmp0_arrayOf = [FloatSerializer_getInstance(), FloatSerializer_getInstance(), FloatSerializer_getInstance(), FloatSerializer_getInstance(), FloatSerializer_getInstance(), FloatSerializer_getInstance()];
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_arrayOf;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  $serializer_3.prototype.in = function (decoder) {
    var tmp0_desc = this.o5p_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = 0.0;
    var tmp5_local1 = 0.0;
    var tmp6_local2 = 0.0;
    var tmp7_local3 = 0.0;
    var tmp8_local4 = 0.0;
    var tmp9_local5 = 0.0;
    var tmp10_input = decoder.aq(tmp0_desc);
    if (tmp10_input.nq()) {
      tmp4_local0 = tmp10_input.hq(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp10_input.hq(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp10_input.hq(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp10_input.hq(tmp0_desc, 3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp8_local4 = tmp10_input.hq(tmp0_desc, 4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
      tmp9_local5 = tmp10_input.hq(tmp0_desc, 5);
      tmp3_bitMask0 = tmp3_bitMask0 | 32;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp10_input.oq(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp10_input.hq(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp10_input.hq(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp10_input.hq(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp10_input.hq(tmp0_desc, 3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp8_local4 = tmp10_input.hq(tmp0_desc, 4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          case 5:
            tmp9_local5 = tmp10_input.hq(tmp0_desc, 5);
            tmp3_bitMask0 = tmp3_bitMask0 | 32;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp10_input.bq(tmp0_desc);
    return MsdfMetrics_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, null);
  };
  $serializer_3.$metadata$ = objectMeta('$serializer', [GeneratedSerializer]);
  var $serializer_instance_3;
  function $serializer_getInstance_3() {
    if ($serializer_instance_3 == null)
      new $serializer_3();
    return $serializer_instance_3;
  }
  function MsdfMetrics_init_$Init$(seen1, emSize, lineHeight, ascender, descender, underlineY, underlineThickness, serializationConstructorMarker, $this) {
    if (!(63 === (63 & seen1)))
      throwMissingFieldException(seen1, 63, $serializer_getInstance_3().o5p_1);
    $this.p5o_1 = emSize;
    $this.q5o_1 = lineHeight;
    $this.r5o_1 = ascender;
    $this.s5o_1 = descender;
    $this.t5o_1 = underlineY;
    $this.u5o_1 = underlineThickness;
    return $this;
  }
  function MsdfMetrics_init_$Create$(seen1, emSize, lineHeight, ascender, descender, underlineY, underlineThickness, serializationConstructorMarker) {
    return MsdfMetrics_init_$Init$(seen1, emSize, lineHeight, ascender, descender, underlineY, underlineThickness, serializationConstructorMarker, Object.create(MsdfMetrics.prototype));
  }
  function MsdfMetrics() {
  }
  MsdfMetrics.prototype.toString = function () {
    return 'MsdfMetrics(emSize=' + this.p5o_1 + ', lineHeight=' + this.q5o_1 + ', ascender=' + this.r5o_1 + ', descender=' + this.s5o_1 + ', underlineY=' + this.t5o_1 + ', underlineThickness=' + this.u5o_1 + ')';
  };
  MsdfMetrics.prototype.hashCode = function () {
    var result = getNumberHashCode(this.p5o_1);
    result = imul(result, 31) + getNumberHashCode(this.q5o_1) | 0;
    result = imul(result, 31) + getNumberHashCode(this.r5o_1) | 0;
    result = imul(result, 31) + getNumberHashCode(this.s5o_1) | 0;
    result = imul(result, 31) + getNumberHashCode(this.t5o_1) | 0;
    result = imul(result, 31) + getNumberHashCode(this.u5o_1) | 0;
    return result;
  };
  MsdfMetrics.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MsdfMetrics))
      return false;
    var tmp0_other_with_cast = other instanceof MsdfMetrics ? other : THROW_CCE();
    if (!equals(this.p5o_1, tmp0_other_with_cast.p5o_1))
      return false;
    if (!equals(this.q5o_1, tmp0_other_with_cast.q5o_1))
      return false;
    if (!equals(this.r5o_1, tmp0_other_with_cast.r5o_1))
      return false;
    if (!equals(this.s5o_1, tmp0_other_with_cast.s5o_1))
      return false;
    if (!equals(this.t5o_1, tmp0_other_with_cast.t5o_1))
      return false;
    if (!equals(this.u5o_1, tmp0_other_with_cast.u5o_1))
      return false;
    return true;
  };
  MsdfMetrics.$metadata$ = classMeta('MsdfMetrics', undefined, undefined, {0: $serializer_getInstance_3});
  function RobotoRegularMeta() {
    RobotoRegularMeta_instance = this;
    var tmp = this;
    var tmp_0 = lineSequence('\nH4sIAAAAAAAAAMVdy45bSXLdG/BPcF0WMh750tIr7wzMeGMMZiFLNVJhpFJDqrHRbvS/O3nFLkbEvXl4rwso7USKRR4GI+N5IvK307unz+++n97+dnr69Zf7\n09vTl6fvH/52ujt9ePj+9O7x/f2f3j1+HM+3u9P3h/8d/5Byd/qfhw9Pn05vldPd6dP9w8dPT5cHv/77t4ePD4/jbf7r69PT1y+n3+9Oj+++nN/3T1/HU1/H\nG3+5f/r28H75yPsvf17ek+5Onx8e7//t8lb0hiqND3z3/f3944f7b6e36U3nWgeo++en/iW9YdXxl/84Pz7/+X8uT6Zei3nyPz49vP/74/337+c3SdraQPTx\n86+/fBpP/OW38bqH918/nL8Wj8/78N/nb3x+JWvNv9/Z/xf//7mOJ375/O7x/l+/jg9bvs7n+789/cAgeQjjIoLzE0Rd707ffny98de9jY97+vrL+UHjnAao\n5XeI75Xe5Ov7kOr54eVdiM8Plveg2t7k3z1cdXCFegNwc9brx4xX97M0ntFKa/2KtuQ8Q6tJLF7J2eBV6s+ApfIKcHaAC+WKADcJ8i3VIK6LuJ/lW8sUsc4F\nXLGAi8ObB2CAtxR2eJkpGbyFjT50zVO8zOwkXKsBPHT2GfEi7YC4OsRVWBHipF7CkopB3NL54R8SVprqRHYqwVQM4KbPeDnTCm/zGsFYwq0ivFXOCrIDb8tz\nvEQYcHeAqSoyESU3f+ZKtxZiPDZnrtP8zFULOBd35Noz3ioRriZvIpTgiSvk5CuZs8Grev65/tBgzrzLokkVK96G1Pds6h3cs5mfwaXEjOBKr3UX3B9Gaxuv\nwOOm3qHooo9zvCpWG6iptWdZNBt7JlPtJa++PyT6h3lIVr4ruBLsWUEOo3Zvf5Oq1d6ifNWGmub+7YzD2l8Dt1SE1rs36mf7OkW7eFtrfbM4b1wMWqZWZ2hF\nnDawhTsUDOH13o1rRtLtZ39rlEG7c8f1HItc4GrWKVxNPnyo3dmGq3yppxVg7964CCHjoDHcOfvnK+JUkxHwXB3YqUOy4r1aXlrFDuo9mxIDsDQCRA+2ZuuL\ncyIxZ037VBtacdrQrTqoOWwia/G2Y9ED9G2F6z7fRkF/vXMr0LlpP4JYUg4K4WSsxcVnXeYq7DSCs5OxiSi5rSK0nI4grrkHxOcMxFi0YiJ24bmMC3uT5mL2\ndtWKjZgy04sQB60YPmSfVhQU8vSEtCLzEcSdo1a4qL3kui9qZwIyZulQxtHPQcTaikc8pOO0IjeDmNsUsYJMjn/8AFPEegRxbhQRW1NcxOoxy9wUlwIQd4KI\n8xHETRhqhdjsE2lFB1ohhE/ewWwO5kbDHvd9J6/T/ORdHk1PXj1kKzR4kMVFGlthsw3hqT0WHw8HGatCGXufx4q89NDjgJhdhCmJr1665PnJ8+fOpRsCArbs\n3R2P1A+FFOQP3YgobbbBzTjoknWazI1vZeHW7DT4qg+UVtItwdulhpLPpt4SJ6pWg3NWI13tUytBP47VNcS08lUCAi7B12lDEbFSsXFhqmTlm3u9GrXc5+EE\nd5cs/yim/CFfTghucHQMiye5axSvO27J4B3i1RneLnPpEsqPivdyWuFZa9rCWWvqtSEZeybThIMV2TMcXxbv5Vo/21BQnfLWYZgeqxC9mIRj+OXpgePqCoC+\nniZkFXiV4JdQscwMTtxI8Al5uZrLPi8nmoEFrgVZ4OK9XGGGMXwp0C+3nHchzr7GmmwW2q5njnRVoSo1SDjBInYl5JUr76xYMvLKYnOODS0ONcsMq9iSFeoE\n6T4JX2S6LWKSAmUc8zroN6Q1qBN5p06QVIC4MEJcg6fLDGW8ykRDdFnSPsRFAOJWIWLv60ojGPlkwXpsIh+kxxeHNtFjbUiPq3d3lRidPBFs21TLPhm3Npex\njYe3ZBz6c5WQ/5DY3fCIRxzWdiFmAnrM3CHikNdlWH9f2gPzTHSEQDZ3BploLgBxI4g4eDwuUMYSKypBK2SnjBvPEQtBD1JDXictQXt8IxOlffWJS+AwQSwZ\nIvY+r1XBiKGMe2r77LEU4EEubd0p4vYzbAX7OKi68kQ1gNepUu3BHFdYUOkMzbErDCJzrKD4KhWa4+ZdXhEYCEmBTrrS+SfYI2IfHDsRSyIk4hY9HhRxCc26\nkUeItxTO400r8tRDRZ6cNb6eu42KfPMe7wb/QBTbtqXcfdx/eC225ZQNEYdC5sLZmBeAakFaXOreoKICLdYES1YtOLxeQEc09RR7SiH9sE0PGLilqYhdPX5D\nxMHfaUNJv4aeaPDQ1TEmgIcm4Tng3CHgkODJjbYolHBd3OGu9IPmgAXbieDtWoWAcUTR207WTwF4U4J4IycFRkCtwdyj0t6cf463YLjB06UEzDBRvUGqyvvg\nzs+bQLQ9JHa9IftQFQdrNe+0D63PTTCuuXbv5bhklNdp4ARycUVBqXS1D32EMNOiYKDQuHZdujq5jZJVD5yUcXLRcdPgM0KjnIo9bvNGOTWfiGZbduV0TfY3\nmrhdDoiYiAoUcTJuGYmYUgEyZlgW7BpkDAuZTVxhmxcS1rVP3m1fZrjUeajme7iWOsG9GLwruN7HaUa1iR8uzapE6y4LrSZvpmEvpn19n24YtBURPbr3b5I6\nSo5cu3l8tSYux89k8s/Kc45oYLWqFa5jtZ4rnQFw6NKpwKo2B4fMjgVWkqkHljzv3YZaldo2ki1VrTmBfcVLQQLOMV/m7jgT0k0AUdNce7kCA5GxgQj1SxYU\no9Ue+/lewqRtn4QJSFgQ65JSpKVAlag1ln28iKnkfSKubS5iMQn+hogXL+Fk3FFutEo1oowNExfK2FcDnYzZNG+3ZOz9nGiF7a9VUdvJWIulDre5jCUpkDEr\nlvGKl4JOXq2B3hr45GQbjMOkzzPm0L/19UujFrSybZRiATMhtViSeE+wsr45d9s6KHPIzAogGwr8JmTv7VgZhZiqK8hWMdjNRSBOGGgdMKwGUgo8TGlAxpSl\nBbVw7pl7MjKWMqc2EhgzEIY8bUrB5yXIJNY17861yl3XDqlFFaAW/YZarKgpUC1ig8ZDHmqRdkEO1P1QS8GNxqFEoU5cYG2iQhPX2fI9cp0rRqWpTbbVnw2b\nTLFtB9sda2vhADtrAQFrnQKWmiDg4PVqQp3RWiLvzns9NX1G5PVC184DVizhFRkTB2+BQkHNVQQXS3MFDNrlwIXIDRdC0evB7nMN3MYImQrvgizIhVzq9HPI\nYbJOIOS8Kln52MKrBdDjND94lpOwpRbe52XKsKyy6jP6SZRmMlKkx4vNmkVvNUPAIctjVCem5ev4squdllDiq4RrQUU2X4p37RmBdSCiGm0bKmPGQhB5L527\naYwWbfPgzdP5fRJiOBRbIvYOTxsaVRtBSMzzgk402qUTbW6LiTBe7+1qRnTMtAx3zfE23ZmBZJ7ibdASs/d12tGRGxlhbBx48Xbd5zq4TOFmgnC9p9OKhn1o\nMdouyHRWODcxcBVY4QzGk8SYiC0rzHxAwqklmJLmttM5c52LWBKMJliOuI0WSq+89MqM2zAybkPdpyYizgu7QqbCQiaxhqhYkIwleccx0l8XFVfb2B8Jxjy/\nQ01cM3O50cQlzgekPOyaQimznQRDUlYk5XJDyqFn12BNXm1LaSFCuxYNm4pbHp88P3t+LNspckO8bQpE89WiBArM7htqE5Op8Xvb3r9LpsbRnH4jb0s8Ow/S\nCSlSuxVPvoZpFV4oRSZfJTLhxpyrELh5Ljwypm8j8wvc7txuVIpgDaNUdpMf8zAf0MYy5AdRoHbfIAjVFIMNN0tae7oWXcaPMW2jS/HsFVfC6KbqshHPBWp3\nXmZP5g7xxlib7Bxra4A1RmaedFPGsU4ES7Qa5hOirW6WmodstTRgq3OCtjqyuwkTWMRDllx9u9cWwqXMbXVBtrp1aKsDvftGb69aBsu5EOY3Jjj+vOR9E0yu\nsWe66atWGQVid20wQip1NdLWXMjcHcsNdE49WdMFdSQ4qAvMbl3i9HlqbWdAzitV3FB/Tmp1WOcUrDCf4OqGphu54QoDr1tLRxocN5SkxS5cAauhYOUqc8Ce\nDuIBG1O8BTi4uixQwOoUb0RLPs43NcOc5jNi4ll53XZFbJVzyxCvWN2vsTfB99KtSeuMTlwgdNdWUCRXYmcvnjhTf0MnDiVRuPgW6NyaITla/YaSTNUVZIks\nqVT2jrS5EoBA6YaqUD1vjAIeztleUZfwjaNm0OpcFcRvpGC3/kUaPGuhJiSKtKGuSiyuilXILIiq0vc5C/V9dJSeBhK3FMjNXEJOY3qTG8dUdbuW0lQXwuYB\nt62GGja9/RBeW5w/r4tpvghLNgae53lxoYoLd1zDZuO0BQ63ECQqlOROW+SuNDuRCbgrwfa6IFhNXtTXEg4U7lxgg0lKbEiLVYmSTJpRdL5iJxCiwwipwmUU\nFDjc2lCzNC1Fn3nYnnknhzsQCMOmBDNDujGRSS3y22APPbNji41P9lNLZuNH5nmuLO7YOTpTQya4xYLQDVZ/6Nb4qWJhYyWG7Ofxg5//8bUKyG2jQOC+YSVy\nddIdFtjzxdweCpmaYPU0kAtdcCvg2cjjAoNblxhsLmI7uL2EwOx8st0AIzofiw/zoy6iNJzdLQmH1UsFHrkS+Akjhnchpdo5/tbmW9l8wc07jgIdR2Bw39iC\nWEOTlMjF7I1sHZYBoUJA+UQKzu0Di7viIDhSgyJkcST5OWTiNjdrtqi5ZdYClbvWiiCXFNkJamtqLVsqt6Q5Mxps8ySuGPGRHsjKdwi5qmXOhgdbSgJ8Cq8X\nPnzvOKIIbO7DCwjaZAEBvUkMWG7Z6cVlcu25dowLKIHO/UqQPWFerD024ykbS2kpkLlfS8Q8B1wEA84vAsxSpoBpviXTl1o9YFNq3QRcXiZhl+K7LRq909RH\nZz/F1m0M1HHZMlC6D0tYZSphwN8lNPXBeCKBAqu7Cwoqht0HcTGdd0Dsm9C9sAa3zbGLg7bMcZhcOrb6Y2igk7IjEcpcj4XDulfXNMhw3yuviN0HN2lk15e5\nbtI424p5S9oneP7o2UmVjbPHkdf9OohjT9pDNgTeTciR4/Y6kLUByBWaZF4xu49uWJFtyGcLN69cEQETR2a0eMPGcWB242UaJKtE2knZpKU3pFyBG7GLKDel\nnA9ATqJx/4eDrKn3fZD9riAPmdMNXS5HpMyxQxMhJ9kF+bIGegKZb0CuRyBrJDZ5XVYyA8ZQl/2uh6DLBc71c+B2l5rgJr+47SHMwLLuLAoJ8H2CXB8HZvfR\nfRohhLvu08AhHDNSi1ygWgRu99GNGks13kB+pvEukOfF+RgT2UzEBhhb3jqwu18JMucKpNxuSJl/CuQGINullJuQ5WWQHbcmQE5z6gchyHoDsr5QytPtML1V\n0AopwMR1bOIiw1swkyJ5i5HY1TlzN0yKUmm+RcHXh2xCYvqk6xIcU2S8YQnHIaylEWEyKNt4LPM+Kft0hLvr5ZnZlU0Jh6Tv6CYQrxTXTSDYJofhlaDHhpuw\nqcftp0D2zXMPWc2s/ybk/jMgeyZe8/wPqBWB5n0Yr9I23rOpmBdmw3pKbynMmutNxMHrHV0I4utZ14UguJ7lQwsv4nwDcMj3Ot58hRfElOVSox3R26XpsV2u\n5wxHNjkwvXNX2NKj6ECyNW8jXDVdp6pzNr0vGvrbKOSWlMMk79E1BX4m3a4pgDPpkYTs6ArVjGyu56U5ML1fCXLYfuUQE56i50D0fiXEocPgIauZWdiE/ML1\nFWkOOQMOIRrlJTzKy9xeBFmSTCHrvJ7MCoYg2dwktwm5v0zKjnzjIPfx6vlEIYqHbF9kw2CI93xNFUacqxE9x8YK08egdEGuQORnCg3beM1vWnKf//+akOFX\nnFq4NSElgQ2K87OH15pwuI/y8M6NuCak7rIWyCLbFZVbgOVnACa0c4PMAt5NyPpTIPvgIkA2wcUm5PwiyMG8OcjIvKErghhfEcThpsxx9gHNlDTe++E769wt\nF6DMawDhIjzvQ8zy0i2DHG7KxIiTxr3zHrHYyykQYhLABaCMfUi4LPOWkBOG3GrZBzkjT33D7YXrMm9AzhKbDOTL32w8NZhjqqAw23FhNlyYmVtGfjrH5f4i\nblDMXWsEit9hkN77aa64bhEuzTy8dCPbO3f8ip4MQguwXiHj8C3cmnl46YY3yXa7AgySOc9Nspjh6S2THG/OfB3IaKViwXj1p4g4Ui5cftpwgTNcn3kYcppD\nBnlIGER2Ts+a4w2fF67PPAo4uGkHGLjpDJIQe9fy1rmrETCqszRejTK5HMRyDOuI9ueNPW+MXWqKSsir+zMhOX0l38Y8k29NZc5oEbAixBCzNiaZON6feXhF\niF9/ZAc04aljYNgqjjXjBZqvA5kTqgrdsG3xBs3XgUwZ1Fgux3AOOc7kHYPsTYWHDEwFEbr000w2bVm3cIfm8X0hLqqw+0JaydPILZAM3enDtFOOV2hWOJmX\nV4Dd8E1ROzxW59m/tDngIhhwfpmEu04lLHXOAQg0J0d/s5dqXCD/9e709/tvjw+PH09v//LX3//5n/4P3TEI7k6EAAA=\n');
    tmp.i5o_1 = joinToString$default_1(tmp_0, '', null, null, 0, null, null, 62, null);
  }
  RobotoRegularMeta.$metadata$ = objectMeta('RobotoRegularMeta');
  var RobotoRegularMeta_instance;
  function RobotoRegularMeta_getInstance() {
    if (RobotoRegularMeta_instance == null)
      new RobotoRegularMeta();
    return RobotoRegularMeta_instance;
  }
  function $serializer_4() {
    $serializer_instance_4 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('de.fabmax.kool.util.MsdfKerning', this, 3);
    tmp0_serialDesc.wu('unicode1', false);
    tmp0_serialDesc.wu('unicode2', false);
    tmp0_serialDesc.wu('advance', false);
    this.p5p_1 = tmp0_serialDesc;
  }
  $serializer_4.prototype.hn = function () {
    return this.p5p_1;
  };
  $serializer_4.prototype.tu = function () {
    var tmp$ret$2;
    {
      var tmp0_arrayOf = [IntSerializer_getInstance(), IntSerializer_getInstance(), FloatSerializer_getInstance()];
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_arrayOf;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  $serializer_4.prototype.in = function (decoder) {
    var tmp0_desc = this.p5p_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = 0;
    var tmp5_local1 = 0;
    var tmp6_local2 = 0.0;
    var tmp7_input = decoder.aq(tmp0_desc);
    if (tmp7_input.nq()) {
      tmp4_local0 = tmp7_input.fq(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp7_input.fq(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp7_input.hq(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp7_input.oq(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp7_input.fq(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp7_input.fq(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp7_input.hq(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp7_input.bq(tmp0_desc);
    return MsdfKerning_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
  };
  $serializer_4.$metadata$ = objectMeta('$serializer', [GeneratedSerializer]);
  var $serializer_instance_4;
  function $serializer_getInstance_4() {
    if ($serializer_instance_4 == null)
      new $serializer_4();
    return $serializer_instance_4;
  }
  function MsdfKerning_init_$Init$(seen1, unicode1, unicode2, advance, serializationConstructorMarker, $this) {
    if (!(7 === (7 & seen1)))
      throwMissingFieldException(seen1, 7, $serializer_getInstance_4().p5p_1);
    $this.v5o_1 = unicode1;
    $this.w5o_1 = unicode2;
    $this.x5o_1 = advance;
    return $this;
  }
  function MsdfKerning_init_$Create$(seen1, unicode1, unicode2, advance, serializationConstructorMarker) {
    return MsdfKerning_init_$Init$(seen1, unicode1, unicode2, advance, serializationConstructorMarker, Object.create(MsdfKerning.prototype));
  }
  function MsdfKerning() {
  }
  MsdfKerning.prototype.q5p = function () {
    return this.v5o_1;
  };
  MsdfKerning.prototype.r5p = function () {
    return this.w5o_1;
  };
  MsdfKerning.prototype.b5n = function () {
    return this.x5o_1;
  };
  MsdfKerning.prototype.toString = function () {
    return 'MsdfKerning(unicode1=' + this.v5o_1 + ', unicode2=' + this.w5o_1 + ', advance=' + this.x5o_1 + ')';
  };
  MsdfKerning.prototype.hashCode = function () {
    var result = this.v5o_1;
    result = imul(result, 31) + this.w5o_1 | 0;
    result = imul(result, 31) + getNumberHashCode(this.x5o_1) | 0;
    return result;
  };
  MsdfKerning.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MsdfKerning))
      return false;
    var tmp0_other_with_cast = other instanceof MsdfKerning ? other : THROW_CCE();
    if (!(this.v5o_1 === tmp0_other_with_cast.v5o_1))
      return false;
    if (!(this.w5o_1 === tmp0_other_with_cast.w5o_1))
      return false;
    if (!equals(this.x5o_1, tmp0_other_with_cast.x5o_1))
      return false;
    return true;
  };
  MsdfKerning.$metadata$ = classMeta('MsdfKerning', undefined, undefined, {0: $serializer_getInstance_4});
  function PerfTimer() {
    this.j4q_1 = 0.0;
    this.l4q();
  }
  PerfTimer.prototype.l4q = function () {
    this.j4q_1 = Time_getInstance().b21();
  };
  PerfTimer.prototype.s5p = function () {
    return Time_getInstance().b21() - this.j4q_1;
  };
  PerfTimer.prototype.k4q = function () {
    return this.s5p() * 1000.0;
  };
  PerfTimer.$metadata$ = classMeta('PerfTimer');
  function SectionTimer(tag) {
    this.t5p_1 = tag;
    this.u5p_1 = 0.0;
    this.v5p_1 = 0.0;
  }
  SectionTimer.prototype.w5p = function () {
    this.u5p_1 = Time_getInstance().b21();
  };
  SectionTimer.prototype.x5p = function () {
    var tmp0_this = this;
    tmp0_this.v5p_1 = tmp0_this.v5p_1 + (Time_getInstance().b21() - this.u5p_1);
  };
  SectionTimer.$metadata$ = classMeta('SectionTimer');
  function Profiling() {
    Profiling_instance = this;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$();
    }
    tmp.k2f_1 = tmp$ret$0;
    this.l2f_1 = Time_getInstance().b21();
    this.m2f_1 = 0;
    this.n2f_1 = null;
  }
  Profiling.prototype.o2f = function (tag) {
    var tmp$ret$3;
    {
      var tmp0_lock = this.k2f_1;
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          var tmp0_getOrPut = Profiling_getInstance().k2f_1;
          var value = tmp0_getOrPut.b3(tag);
          var tmp;
          if (value == null) {
            var tmp$ret$0;
            {
              tmp$ret$0 = new SectionTimer(tag);
            }
            var answer = tmp$ret$0;
            tmp0_getOrPut.a(tag, answer);
            tmp = answer;
          } else {
            tmp = value;
          }
          tmp$ret$1 = tmp;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      tmp$ret$3 = tmp$ret$2;
    }
    tmp$ret$3.w5p();
  };
  Profiling.prototype.g2g = function (tag) {
    var tmp$ret$1;
    {
      var tmp0_lock = this.k2f_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = Profiling_getInstance().k2f_1.b3(tag);
      }
      tmp$ret$1 = tmp$ret$0;
    }
    var tmp0_safe_receiver = tmp$ret$1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.x5p();
    }
  };
  Profiling.$metadata$ = objectMeta('Profiling');
  var Profiling_instance;
  function Profiling_getInstance() {
    if (Profiling_instance == null)
      new Profiling();
    return Profiling_instance;
  }
  function Time() {
    Time_instance = this;
    this.y20_1 = 0.0;
    this.z20_1 = 0.0;
    this.a21_1 = 0;
  }
  Time.prototype.y5p = function () {
    return this.z20_1;
  };
  Time.prototype.b21 = function () {
    return SystemClock_getInstance().z5p();
  };
  Time.$metadata$ = objectMeta('Time');
  var Time_instance;
  function Time_getInstance() {
    if (Time_instance == null)
      new Time();
    return Time_instance;
  }
  function Companion_48() {
    Companion_instance_48 = this;
    this.a5q_1 = 0;
    this.b5q_1 = -1;
    this.c5q_1 = 1;
    this.d5q_1 = 2;
  }
  Companion_48.$metadata$ = objectMeta('Companion');
  var Companion_instance_48;
  function Companion_getInstance_48() {
    if (Companion_instance_48 == null)
      new Companion_48();
    return Companion_instance_48;
  }
  function Gesture() {
    this.b27_1 = MutableVec2d_init_$Create$();
    this.c27_1 = MutableVec2d_init_$Create$();
    this.d27_1 = MutableVec2d_init_$Create$();
    this.e27_1 = MutableVec2d_init_$Create$();
    this.f27_1 = 0.0;
    this.g27_1 = 0.0;
    this.h27_1 = 0.0;
    var tmp = this;
    Companion_getInstance_48();
    tmp.i27_1 = 0;
    this.j27_1 = 0;
  }
  Gesture.prototype.e5q = function (type, ptr1, ptr2, dpi) {
    this.i27_1 = type;
    this.b27_1.a2k(ptr1).x2j(ptr2).y2j(0.5);
    this.c27_1.a2k(this.b27_1);
    this.d27_1.a2k(Companion_getInstance_8().k2j_1);
    this.e27_1.a2k(Companion_getInstance_8().k2j_1);
    this.f27_1 = ptr1.q2j(ptr2) * 96.0 / dpi;
    this.g27_1 = this.f27_1;
    this.h27_1 = 0.0;
    this.j27_1 = 0;
  };
  Gesture.prototype.f5q = function (ptr1, ptr2, dpi) {
    this.e27_1.a2k(ptr1).x2j(ptr2).y2j(0.5).b2k(this.c27_1);
    this.c27_1.a2k(ptr1).x2j(ptr2).y2j(0.5);
    this.d27_1.a2k(this.c27_1).b2k(this.b27_1);
    var pinch = ptr1.q2j(ptr2) * 96.0 / dpi;
    this.h27_1 = pinch - this.g27_1;
    this.g27_1 = pinch;
    var tmp0_this = this;
    var tmp1 = tmp0_this.j27_1;
    tmp0_this.j27_1 = tmp1 + 1 | 0;
  };
  Gesture.$metadata$ = classMeta('Gesture');
  function TouchGestureEvaluator$onDetermineGesture$lambda($pointers) {
    return function (ptrId) {
      var tmp$ret$2;
      {
        var tmp$ret$1;
        $l$block: {
          var tmp0_iterator = $pointers.h();
          while (tmp0_iterator.n()) {
            var element = tmp0_iterator.o();
            var tmp$ret$0;
            {
              tmp$ret$0 = element.w1z_1 === ptrId;
            }
            if (tmp$ret$0) {
              tmp$ret$1 = element;
              break $l$block;
            }
          }
          tmp$ret$1 = null;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      return tmp$ret$2 == null;
    };
  }
  function TouchGestureEvaluator() {
    Companion_getInstance_48();
    this.u26_1 = new Gesture();
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.v26_1 = tmp$ret$0;
    this.w26_1 = MutableVec2d_init_$Create$();
    this.x26_1 = MutableVec2d_init_$Create$();
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = LinkedHashMap_init_$Create$();
    }
    tmp_0.y26_1 = tmp$ret$1;
    this.z26_1 = 96.0;
  }
  TouchGestureEvaluator.prototype.g5q = function () {
    return this.y26_1;
  };
  TouchGestureEvaluator.prototype.a27 = function (pointerState, ctx) {
    this.z26_1 = ctx.p2b_1 * 96.0;
    pointerState.s26(this.v26_1, 0, 2, null);
    if (this.v26_1.m() > 1) {
      var tmp0_subject = this.u26_1.i27_1;
      Companion_getInstance_48();
      if (tmp0_subject === 0)
        this.j5q(this.v26_1);
      else {
        Companion_getInstance_48();
        if (tmp0_subject === -1)
          this.i5q(this.v26_1);
        else {
          Companion_getInstance_48();
          if (tmp0_subject === 1)
            this.h5q(this.v26_1);
          else {
            Companion_getInstance_48();
            if (tmp0_subject === 2)
              this.h5q(this.v26_1);
          }
        }
      }
    } else {
      var tmp = this.u26_1;
      Companion_getInstance_48();
      tmp.i27_1 = 0;
      this.y26_1.t7();
    }
  };
  TouchGestureEvaluator.prototype.j5q = function (pointers) {
    {
      var tmp0_iterator = pointers.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          {
            var tmp0_set = this.y26_1;
            var tmp1_set = element.w1z_1;
            var tmp2_set = new Vec2d(element.x1z_1, element.y1z_1);
            tmp0_set.a(tmp1_set, tmp2_set);
          }
        }
      }
    }
    var tmp = this.u26_1;
    Companion_getInstance_48();
    tmp.i27_1 = -1;
  };
  TouchGestureEvaluator.prototype.i5q = function (pointers) {
    var tmp = this.y26_1.c3();
    removeAll_1(tmp, TouchGestureEvaluator$onDetermineGesture$lambda(pointers));
    {
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          var tmp0_filterTo = ArrayList_init_$Create$_0();
          var tmp0_iterator = pointers.h();
          while (tmp0_iterator.n()) {
            var element = tmp0_iterator.o();
            var tmp$ret$0;
            {
              tmp$ret$0 = !this.y26_1.v2(element.w1z_1);
            }
            if (tmp$ret$0) {
              tmp0_filterTo.b(element);
            }
          }
          tmp$ret$1 = tmp0_filterTo;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      var tmp0_forEach = tmp$ret$2;
      var tmp0_iterator_0 = tmp0_forEach.h();
      while (tmp0_iterator_0.n()) {
        var element_0 = tmp0_iterator_0.o();
        {
          {
            var tmp0_set = this.y26_1;
            var tmp1_set = element_0.w1z_1;
            var tmp2_set = new Vec2d(element_0.x1z_1, element_0.y1z_1);
            tmp0_set.a(tmp1_set, tmp2_set);
          }
        }
      }
    }
    if (this.l5q(pointers)) {
      var tmp_0 = this.u26_1;
      Companion_getInstance_48();
      tmp_0.i27_1 = 1;
    } else if (this.k5q(pointers)) {
      var tmp_1 = this.u26_1;
      Companion_getInstance_48();
      tmp_1.i27_1 = 2;
    }
  };
  TouchGestureEvaluator.prototype.l5q = function (pointers) {
    if (pointers.m() === 2) {
      this.w26_1.z2j(pointers.r(0).x1z_1, pointers.r(0).y1z_1).b2k(ensureNotNull(this.y26_1.b3(pointers.r(0).w1z_1)));
      this.x26_1.z2j(pointers.r(1).x1z_1, pointers.r(1).y1z_1).b2k(ensureNotNull(this.y26_1.b3(pointers.r(1).w1z_1)));
      this.w26_1.y2j(96.0 / this.z26_1);
      this.x26_1.y2j(96.0 / this.z26_1);
      if ((this.w26_1.t2j() > 5.0 ? this.x26_1.t2j() > 5.0 : false) ? this.w26_1.v2j(this.x26_1) < 0.0 : false) {
        this.w26_1.a2k(ensureNotNull(this.y26_1.b3(pointers.r(0).w1z_1)));
        this.x26_1.a2k(ensureNotNull(this.y26_1.b3(pointers.r(1).w1z_1)));
        var tmp = this.u26_1;
        Companion_getInstance_48();
        tmp.e5q(1, this.w26_1, this.x26_1, this.z26_1);
        this.h5q(pointers);
        return true;
      }
    }
    return false;
  };
  TouchGestureEvaluator.prototype.k5q = function (pointers) {
    if (pointers.m() === 2) {
      this.w26_1.z2j(pointers.r(0).x1z_1, pointers.r(0).y1z_1).b2k(ensureNotNull(this.y26_1.b3(pointers.r(0).w1z_1)));
      this.x26_1.z2j(pointers.r(1).x1z_1, pointers.r(1).y1z_1).b2k(ensureNotNull(this.y26_1.b3(pointers.r(1).w1z_1)));
      this.w26_1.y2j(96.0 / this.z26_1);
      this.x26_1.y2j(96.0 / this.z26_1);
      if ((this.w26_1.t2j() > 5.0 ? this.x26_1.t2j() > 5.0 : false) ? this.w26_1.v2j(this.x26_1) > 0.0 : false) {
        this.w26_1.a2k(ensureNotNull(this.y26_1.b3(pointers.r(0).w1z_1)));
        this.x26_1.a2k(ensureNotNull(this.y26_1.b3(pointers.r(1).w1z_1)));
        var tmp = this.u26_1;
        Companion_getInstance_48();
        tmp.e5q(2, this.w26_1, this.x26_1, this.z26_1);
        this.h5q(pointers);
        return true;
      }
    }
    return false;
  };
  TouchGestureEvaluator.prototype.h5q = function (pointers) {
    if (pointers.m() === 2) {
      this.w26_1.z2j(pointers.r(0).x1z_1, pointers.r(0).y1z_1);
      this.x26_1.z2j(pointers.r(1).x1z_1, pointers.r(1).y1z_1);
      this.u26_1.f5q(this.w26_1, this.x26_1, this.z26_1);
      var tmp = pointers.r(0);
      tmp.o24(0, 1, null);
      var tmp_0 = pointers.r(1);
      tmp_0.o24(0, 1, null);
    } else {
      var tmp_1 = this.u26_1;
      Companion_getInstance_48();
      tmp_1.i27_1 = 0;
    }
  };
  TouchGestureEvaluator.$metadata$ = classMeta('TouchGestureEvaluator');
  function getEntry($this, key) {
    var p = $this.g4q_1;
    while (!(p == null)) {
      var tmp;
      if ($this.f4q_1(key, p.n5q_1) < 0) {
        tmp = p.p5q_1;
      } else if ($this.f4q_1(key, p.n5q_1) > 0) {
        tmp = p.q5q_1;
      } else {
        return p;
      }
      p = tmp;
    }
    return null;
  }
  function deleteEntry($this, entry) {
    var p = entry;
    var tmp0_this = $this;
    var tmp1 = tmp0_this.m();
    tmp0_this.t5q(tmp1 - 1 | 0);
    if (!(p.p5q_1 == null) ? !(p.q5q_1 == null) : false) {
      var s = ensureNotNull(successor(p, $this));
      p.n5q_1 = s.n5q_1;
      p.o5q_1 = s.o5q_1;
      p = s;
    }
    var replacement = !(p.p5q_1 == null) ? p.p5q_1 : p.q5q_1;
    if (!(replacement == null)) {
      replacement.m5q_1 = p.m5q_1;
      if (p.m5q_1 == null)
        $this.g4q_1 = replacement;
      else if (p === ensureNotNull(p.m5q_1).p5q_1)
        ensureNotNull(p.m5q_1).p5q_1 = replacement;
      else
        ensureNotNull(p.m5q_1).q5q_1 = replacement;
      p.p5q_1 = null;
      p.q5q_1 = null;
      p.m5q_1 = null;
      var tmp = p.r5q_1;
      Companion_getInstance_49();
      if (tmp === false) {
        fixAfterDeletion($this, replacement);
      }
    } else if (p.m5q_1 == null) {
      $this.g4q_1 = null;
    } else {
      var tmp_0 = p.r5q_1;
      Companion_getInstance_49();
      if (tmp_0 === false) {
        fixAfterDeletion($this, p);
      }
      if (!(p.m5q_1 == null)) {
        if (p === ensureNotNull(p.m5q_1).p5q_1) {
          ensureNotNull(p.m5q_1).p5q_1 = null;
        } else if (p === ensureNotNull(p.m5q_1).q5q_1) {
          ensureNotNull(p.m5q_1).q5q_1 = null;
        }
        p.m5q_1 = null;
      }
    }
  }
  function fixAfterInsertion($this, entry) {
    var x = entry;
    var tmp0_safe_receiver = x;
    if (tmp0_safe_receiver == null) {
    } else {
      var tmp = tmp0_safe_receiver;
      Companion_getInstance_49();
      tmp.r5q_1 = true;
    }
    $l$loop: while (true) {
      var tmp_0;
      if (!(x == null) ? !equals(x, $this.g4q_1) : false) {
        var tmp_1 = color(x.m5q_1, $this);
        Companion_getInstance_49();
        tmp_0 = tmp_1 === true;
      } else {
        tmp_0 = false;
      }
      if (!tmp_0) {
        break $l$loop;
      }
      var tmp_2 = x.m5q_1;
      var tmp1_safe_receiver = x.m5q_1;
      var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.m5q_1;
      if (tmp_2 === (tmp2_safe_receiver == null ? null : tmp2_safe_receiver.p5q_1)) {
        var tmp3_safe_receiver = x.m5q_1;
        var tmp4_safe_receiver = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.m5q_1;
        var y = tmp4_safe_receiver == null ? null : tmp4_safe_receiver.q5q_1;
        var tmp_3 = color(y, $this);
        Companion_getInstance_49();
        if (tmp_3 === true) {
          var tmp5_safe_receiver = x.m5q_1;
          if (tmp5_safe_receiver == null) {
          } else {
            var tmp_4 = tmp5_safe_receiver;
            Companion_getInstance_49();
            tmp_4.r5q_1 = false;
          }
          var tmp6_safe_receiver = y;
          if (tmp6_safe_receiver == null) {
          } else {
            var tmp_5 = tmp6_safe_receiver;
            Companion_getInstance_49();
            tmp_5.r5q_1 = false;
          }
          var tmp7_safe_receiver = x.m5q_1;
          var tmp8_safe_receiver = tmp7_safe_receiver == null ? null : tmp7_safe_receiver.m5q_1;
          if (tmp8_safe_receiver == null) {
          } else {
            var tmp_6 = tmp8_safe_receiver;
            Companion_getInstance_49();
            tmp_6.r5q_1 = true;
          }
          var tmp9_safe_receiver = x.m5q_1;
          x = tmp9_safe_receiver == null ? null : tmp9_safe_receiver.m5q_1;
        } else {
          var tmp_7 = x;
          var tmp10_safe_receiver = x.m5q_1;
          if (tmp_7 === (tmp10_safe_receiver == null ? null : tmp10_safe_receiver.q5q_1)) {
            x = x.m5q_1;
            rotateLeft($this, x);
          }
          var tmp11_safe_receiver = x;
          var tmp12_safe_receiver = tmp11_safe_receiver == null ? null : tmp11_safe_receiver.m5q_1;
          if (tmp12_safe_receiver == null) {
          } else {
            var tmp_8 = tmp12_safe_receiver;
            Companion_getInstance_49();
            tmp_8.r5q_1 = false;
          }
          var tmp13_safe_receiver = x;
          var tmp14_safe_receiver = tmp13_safe_receiver == null ? null : tmp13_safe_receiver.m5q_1;
          var tmp15_safe_receiver = tmp14_safe_receiver == null ? null : tmp14_safe_receiver.m5q_1;
          if (tmp15_safe_receiver == null) {
          } else {
            var tmp_9 = tmp15_safe_receiver;
            Companion_getInstance_49();
            tmp_9.r5q_1 = true;
          }
          var tmp16_safe_receiver = x;
          var tmp17_safe_receiver = tmp16_safe_receiver == null ? null : tmp16_safe_receiver.m5q_1;
          rotateRight($this, tmp17_safe_receiver == null ? null : tmp17_safe_receiver.m5q_1);
        }
      } else {
        var tmp18_safe_receiver = x.m5q_1;
        var tmp19_safe_receiver = tmp18_safe_receiver == null ? null : tmp18_safe_receiver.m5q_1;
        var y_0 = tmp19_safe_receiver == null ? null : tmp19_safe_receiver.p5q_1;
        var tmp_10 = color(y_0, $this);
        Companion_getInstance_49();
        if (tmp_10 === true) {
          var tmp20_safe_receiver = x.m5q_1;
          if (tmp20_safe_receiver == null) {
          } else {
            var tmp_11 = tmp20_safe_receiver;
            Companion_getInstance_49();
            tmp_11.r5q_1 = false;
          }
          var tmp21_safe_receiver = y_0;
          if (tmp21_safe_receiver == null) {
          } else {
            var tmp_12 = tmp21_safe_receiver;
            Companion_getInstance_49();
            tmp_12.r5q_1 = false;
          }
          var tmp22_safe_receiver = x.m5q_1;
          var tmp23_safe_receiver = tmp22_safe_receiver == null ? null : tmp22_safe_receiver.m5q_1;
          if (tmp23_safe_receiver == null) {
          } else {
            var tmp_13 = tmp23_safe_receiver;
            Companion_getInstance_49();
            tmp_13.r5q_1 = true;
          }
          var tmp24_safe_receiver = x.m5q_1;
          x = tmp24_safe_receiver == null ? null : tmp24_safe_receiver.m5q_1;
        } else {
          var tmp_14 = x;
          var tmp25_safe_receiver = x.m5q_1;
          if (tmp_14 === (tmp25_safe_receiver == null ? null : tmp25_safe_receiver.p5q_1)) {
            x = x.m5q_1;
            rotateRight($this, x);
          }
          var tmp26_safe_receiver = x;
          var tmp27_safe_receiver = tmp26_safe_receiver == null ? null : tmp26_safe_receiver.m5q_1;
          if (tmp27_safe_receiver == null) {
          } else {
            var tmp_15 = tmp27_safe_receiver;
            Companion_getInstance_49();
            tmp_15.r5q_1 = false;
          }
          var tmp28_safe_receiver = x;
          var tmp29_safe_receiver = tmp28_safe_receiver == null ? null : tmp28_safe_receiver.m5q_1;
          var tmp30_safe_receiver = tmp29_safe_receiver == null ? null : tmp29_safe_receiver.m5q_1;
          if (tmp30_safe_receiver == null) {
          } else {
            var tmp_16 = tmp30_safe_receiver;
            Companion_getInstance_49();
            tmp_16.r5q_1 = true;
          }
          var tmp31_safe_receiver = x;
          var tmp32_safe_receiver = tmp31_safe_receiver == null ? null : tmp31_safe_receiver.m5q_1;
          rotateLeft($this, tmp32_safe_receiver == null ? null : tmp32_safe_receiver.m5q_1);
        }
      }
    }
    var tmp33_safe_receiver = $this.g4q_1;
    if (tmp33_safe_receiver == null) {
    } else {
      var tmp_17 = tmp33_safe_receiver;
      Companion_getInstance_49();
      tmp_17.r5q_1 = false;
    }
  }
  function fixAfterDeletion($this, entry) {
    var x = entry;
    $l$loop: while (true) {
      var tmp;
      if (!equals(x, $this.g4q_1)) {
        var tmp_0 = x.r5q_1;
        Companion_getInstance_49();
        tmp = tmp_0 === false;
      } else {
        tmp = false;
      }
      if (!tmp) {
        break $l$loop;
      }
      var tmp_1 = x;
      var tmp0_safe_receiver = x.m5q_1;
      if (equals(tmp_1, tmp0_safe_receiver == null ? null : tmp0_safe_receiver.p5q_1)) {
        var tmp1_safe_receiver = x.m5q_1;
        var sib = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.q5q_1;
        var tmp_2 = color(sib, $this);
        Companion_getInstance_49();
        if (tmp_2 === true) {
          var tmp2_safe_receiver = sib;
          if (tmp2_safe_receiver == null) {
          } else {
            var tmp_3 = tmp2_safe_receiver;
            Companion_getInstance_49();
            tmp_3.r5q_1 = false;
          }
          var tmp3_safe_receiver = x.m5q_1;
          if (tmp3_safe_receiver == null) {
          } else {
            var tmp_4 = tmp3_safe_receiver;
            Companion_getInstance_49();
            tmp_4.r5q_1 = true;
          }
          rotateLeft($this, x.m5q_1);
          var tmp4_safe_receiver = x.m5q_1;
          sib = tmp4_safe_receiver == null ? null : tmp4_safe_receiver.q5q_1;
        }
        var tmp_5;
        var tmp5_safe_receiver = sib;
        var tmp_6 = color(tmp5_safe_receiver == null ? null : tmp5_safe_receiver.p5q_1, $this);
        Companion_getInstance_49();
        if (tmp_6 === false) {
          var tmp6_safe_receiver = sib;
          var tmp_7 = color(tmp6_safe_receiver == null ? null : tmp6_safe_receiver.q5q_1, $this);
          Companion_getInstance_49();
          tmp_5 = tmp_7 === false;
        } else {
          tmp_5 = false;
        }
        if (tmp_5) {
          var tmp7_safe_receiver = sib;
          if (tmp7_safe_receiver == null) {
          } else {
            var tmp_8 = tmp7_safe_receiver;
            Companion_getInstance_49();
            tmp_8.r5q_1 = true;
          }
          x = ensureNotNull(x.m5q_1);
        } else {
          var tmp8_safe_receiver = sib;
          var tmp_9 = color(tmp8_safe_receiver == null ? null : tmp8_safe_receiver.q5q_1, $this);
          Companion_getInstance_49();
          if (tmp_9 === false) {
            var tmp9_safe_receiver = sib;
            var tmp10_safe_receiver = tmp9_safe_receiver == null ? null : tmp9_safe_receiver.p5q_1;
            if (tmp10_safe_receiver == null) {
            } else {
              var tmp_10 = tmp10_safe_receiver;
              Companion_getInstance_49();
              tmp_10.r5q_1 = false;
            }
            var tmp11_safe_receiver = sib;
            if (tmp11_safe_receiver == null) {
            } else {
              var tmp_11 = tmp11_safe_receiver;
              Companion_getInstance_49();
              tmp_11.r5q_1 = true;
            }
            rotateRight($this, sib);
            var tmp12_safe_receiver = x.m5q_1;
            sib = tmp12_safe_receiver == null ? null : tmp12_safe_receiver.q5q_1;
          }
          var tmp13_safe_receiver = sib;
          if (tmp13_safe_receiver == null) {
          } else
            tmp13_safe_receiver.r5q_1 = color(x.m5q_1, $this);
          var tmp14_safe_receiver = x.m5q_1;
          if (tmp14_safe_receiver == null) {
          } else {
            var tmp_12 = tmp14_safe_receiver;
            Companion_getInstance_49();
            tmp_12.r5q_1 = false;
          }
          var tmp15_safe_receiver = sib;
          var tmp16_safe_receiver = tmp15_safe_receiver == null ? null : tmp15_safe_receiver.q5q_1;
          if (tmp16_safe_receiver == null) {
          } else {
            var tmp_13 = tmp16_safe_receiver;
            Companion_getInstance_49();
            tmp_13.r5q_1 = false;
          }
          rotateLeft($this, x.m5q_1);
          x = ensureNotNull($this.g4q_1);
        }
      } else {
        var tmp17_safe_receiver = x.m5q_1;
        var sib_0 = tmp17_safe_receiver == null ? null : tmp17_safe_receiver.p5q_1;
        var tmp_14 = color(sib_0, $this);
        Companion_getInstance_49();
        if (tmp_14 === true) {
          var tmp18_safe_receiver = sib_0;
          if (tmp18_safe_receiver == null) {
          } else {
            var tmp_15 = tmp18_safe_receiver;
            Companion_getInstance_49();
            tmp_15.r5q_1 = false;
          }
          var tmp19_safe_receiver = sib_0;
          var tmp20_safe_receiver = tmp19_safe_receiver == null ? null : tmp19_safe_receiver.m5q_1;
          if (tmp20_safe_receiver == null) {
          } else {
            var tmp_16 = tmp20_safe_receiver;
            Companion_getInstance_49();
            tmp_16.r5q_1 = true;
          }
          rotateRight($this, x.m5q_1);
          var tmp21_safe_receiver = x.m5q_1;
          sib_0 = tmp21_safe_receiver == null ? null : tmp21_safe_receiver.p5q_1;
        }
        var tmp_17;
        var tmp22_safe_receiver = sib_0;
        var tmp_18 = color(tmp22_safe_receiver == null ? null : tmp22_safe_receiver.q5q_1, $this);
        Companion_getInstance_49();
        if (tmp_18 === false) {
          var tmp23_safe_receiver = sib_0;
          var tmp_19 = color(tmp23_safe_receiver == null ? null : tmp23_safe_receiver.p5q_1, $this);
          Companion_getInstance_49();
          tmp_17 = tmp_19 === false;
        } else {
          tmp_17 = false;
        }
        if (tmp_17) {
          var tmp24_safe_receiver = sib_0;
          if (tmp24_safe_receiver == null) {
          } else {
            var tmp_20 = tmp24_safe_receiver;
            Companion_getInstance_49();
            tmp_20.r5q_1 = true;
          }
          x = ensureNotNull(x.m5q_1);
        } else {
          var tmp25_safe_receiver = sib_0;
          var tmp_21 = color(tmp25_safe_receiver == null ? null : tmp25_safe_receiver.p5q_1, $this);
          Companion_getInstance_49();
          if (tmp_21 === false) {
            var tmp26_safe_receiver = sib_0;
            var tmp27_safe_receiver = tmp26_safe_receiver == null ? null : tmp26_safe_receiver.q5q_1;
            if (tmp27_safe_receiver == null) {
            } else {
              var tmp_22 = tmp27_safe_receiver;
              Companion_getInstance_49();
              tmp_22.r5q_1 = false;
            }
            var tmp28_safe_receiver = sib_0;
            if (tmp28_safe_receiver == null) {
            } else {
              var tmp_23 = tmp28_safe_receiver;
              Companion_getInstance_49();
              tmp_23.r5q_1 = true;
            }
            rotateLeft($this, sib_0);
            var tmp29_safe_receiver = x.m5q_1;
            sib_0 = tmp29_safe_receiver == null ? null : tmp29_safe_receiver.p5q_1;
          }
          var tmp30_safe_receiver = sib_0;
          if (tmp30_safe_receiver == null) {
          } else
            tmp30_safe_receiver.r5q_1 = color(x.m5q_1, $this);
          var tmp31_safe_receiver = x.m5q_1;
          if (tmp31_safe_receiver == null) {
          } else {
            var tmp_24 = tmp31_safe_receiver;
            Companion_getInstance_49();
            tmp_24.r5q_1 = false;
          }
          var tmp32_safe_receiver = sib_0;
          var tmp33_safe_receiver = tmp32_safe_receiver == null ? null : tmp32_safe_receiver.p5q_1;
          if (tmp33_safe_receiver == null) {
          } else {
            var tmp_25 = tmp33_safe_receiver;
            Companion_getInstance_49();
            tmp_25.r5q_1 = false;
          }
          rotateRight($this, x.m5q_1);
          x = ensureNotNull($this.g4q_1);
        }
      }
    }
    var tmp_26 = x;
    Companion_getInstance_49();
    tmp_26.r5q_1 = false;
  }
  function rotateLeft($this, p) {
    if (!(p == null)) {
      var r = p.q5q_1;
      var tmp = p;
      var tmp0_safe_receiver = r;
      tmp.q5q_1 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.p5q_1;
      var tmp1_safe_receiver = r;
      if (!((tmp1_safe_receiver == null ? null : tmp1_safe_receiver.p5q_1) == null)) {
        var tmp2_safe_receiver = r.p5q_1;
        if (tmp2_safe_receiver == null) {
        } else
          tmp2_safe_receiver.m5q_1 = p;
      }
      var tmp3_safe_receiver = r;
      if (tmp3_safe_receiver == null) {
      } else
        tmp3_safe_receiver.m5q_1 = p.m5q_1;
      if (p.m5q_1 == null)
        $this.g4q_1 = r;
      else {
        var tmp4_safe_receiver = p.m5q_1;
        if ((tmp4_safe_receiver == null ? null : tmp4_safe_receiver.p5q_1) === p) {
          var tmp5_safe_receiver = p.m5q_1;
          if (tmp5_safe_receiver == null) {
          } else
            tmp5_safe_receiver.p5q_1 = r;
        } else {
          var tmp6_safe_receiver = p.m5q_1;
          if (tmp6_safe_receiver == null) {
          } else
            tmp6_safe_receiver.q5q_1 = r;
        }
      }
      var tmp7_safe_receiver = r;
      if (tmp7_safe_receiver == null) {
      } else
        tmp7_safe_receiver.p5q_1 = p;
      p.m5q_1 = r;
    }
  }
  function rotateRight($this, p) {
    if (!(p == null)) {
      var l = p.p5q_1;
      var tmp = p;
      var tmp0_safe_receiver = l;
      tmp.p5q_1 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.q5q_1;
      var tmp1_safe_receiver = l;
      if (!((tmp1_safe_receiver == null ? null : tmp1_safe_receiver.q5q_1) == null)) {
        var tmp2_safe_receiver = l.q5q_1;
        if (tmp2_safe_receiver == null) {
        } else
          tmp2_safe_receiver.m5q_1 = p;
      }
      var tmp3_safe_receiver = l;
      if (tmp3_safe_receiver == null) {
      } else
        tmp3_safe_receiver.m5q_1 = p.m5q_1;
      if (p.m5q_1 == null)
        $this.g4q_1 = l;
      else {
        var tmp4_safe_receiver = p.m5q_1;
        if ((tmp4_safe_receiver == null ? null : tmp4_safe_receiver.q5q_1) === p) {
          var tmp5_safe_receiver = p.m5q_1;
          if (tmp5_safe_receiver == null) {
          } else
            tmp5_safe_receiver.q5q_1 = l;
        } else {
          var tmp6_safe_receiver = p.m5q_1;
          if (tmp6_safe_receiver == null) {
          } else
            tmp6_safe_receiver.p5q_1 = l;
        }
      }
      var tmp7_safe_receiver = l;
      if (tmp7_safe_receiver == null) {
      } else
        tmp7_safe_receiver.q5q_1 = p;
      p.m5q_1 = l;
    }
  }
  function color(_this__u8e3s4, $this) {
    var tmp0_safe_receiver = _this__u8e3s4;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.r5q_1;
    var tmp;
    if (tmp1_elvis_lhs == null) {
      Companion_getInstance_49();
      tmp = false;
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  }
  function successor(_this__u8e3s4, $this) {
    var tmp;
    if (_this__u8e3s4 == null) {
      tmp = null;
    } else if (!(_this__u8e3s4.q5q_1 == null)) {
      var p = ensureNotNull(_this__u8e3s4.q5q_1);
      while (!(p.p5q_1 == null)) {
        p = ensureNotNull(p.p5q_1);
      }
      tmp = p;
    } else {
      var p_0 = _this__u8e3s4.m5q_1;
      var ch = _this__u8e3s4;
      while (!(p_0 == null) ? equals(ch, p_0.q5q_1) : false) {
        ch = p_0;
        p_0 = p_0.m5q_1;
      }
      tmp = p_0;
    }
    return tmp;
  }
  function MapEntry($outer, key, value, parent) {
    this.s5q_1 = $outer;
    this.m5q_1 = parent;
    this.n5q_1 = key;
    this.o5q_1 = value;
    this.p5q_1 = null;
    this.q5q_1 = null;
    var tmp = this;
    Companion_getInstance_49();
    tmp.r5q_1 = false;
  }
  MapEntry.prototype.l2 = function () {
    return this.n5q_1;
  };
  MapEntry.prototype.n2 = function () {
    return this.o5q_1;
  };
  MapEntry.prototype.kf = function (newValue) {
    var old = this.o5q_1;
    this.o5q_1 = newValue;
    return old;
  };
  MapEntry.$metadata$ = classMeta('MapEntry', [MutableEntry]);
  function Companion_49() {
    Companion_instance_49 = this;
    this.u5q_1 = false;
    this.v5q_1 = true;
  }
  Companion_49.$metadata$ = objectMeta('Companion');
  var Companion_instance_49;
  function Companion_getInstance_49() {
    if (Companion_instance_49 == null)
      new Companion_49();
    return Companion_instance_49;
  }
  function TreeMap$cmp$lambda() {
    return function (a, b) {
      return compareTo(isComparable(a) ? a : THROW_CCE(), b);
    };
  }
  function TreeMap() {
    Companion_getInstance_49();
    var tmp = this;
    tmp.f4q_1 = TreeMap$cmp$lambda();
    this.g4q_1 = null;
    this.h4q_1 = 0;
  }
  TreeMap.prototype.t5q = function (_set____db54di) {
    this.h4q_1 = _set____db54di;
  };
  TreeMap.prototype.m = function () {
    return this.h4q_1;
  };
  TreeMap.prototype.t7 = function () {
    this.g4q_1 = null;
    this.t5q(0);
  };
  TreeMap.prototype.q = function () {
    return this.m() === 0;
  };
  TreeMap.prototype.w5q = function () {
    var p = this.g4q_1;
    if (!(p == null)) {
      $l$loop: while (true) {
        var tmp0_safe_receiver = p;
        if (!!((tmp0_safe_receiver == null ? null : tmp0_safe_receiver.p5q_1) == null)) {
          break $l$loop;
        }
        p = ensureNotNull(p.p5q_1);
      }
    }
    var tmp1_elvis_lhs = p;
    var tmp;
    if (tmp1_elvis_lhs == null) {
      throw NoSuchElementException_init_$Create$_0();
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  };
  TreeMap.prototype.a = function (key, value) {
    if (this.g4q_1 == null) {
      this.g4q_1 = new MapEntry(this, key, value, null);
    } else {
      var t = this.g4q_1;
      var parent;
      do {
        parent = ensureNotNull(t);
        var tmp;
        if (this.f4q_1(key, t.n5q_1) < 0) {
          tmp = t.p5q_1;
        } else if (this.f4q_1(key, t.n5q_1) > 0) {
          tmp = t.q5q_1;
        } else {
          return t.kf(value);
        }
        t = tmp;
      }
       while (!(t == null));
      var e = new MapEntry(this, key, value, parent);
      if (this.f4q_1(key, parent.n5q_1) < 0) {
        parent.p5q_1 = e;
      } else {
        parent.q5q_1 = e;
      }
      fixAfterInsertion(this, e);
    }
    var tmp0_this = this;
    var tmp1 = tmp0_this.m();
    tmp0_this.t5q(tmp1 + 1 | 0);
    return null;
  };
  TreeMap.prototype.tf = function (key) {
    var tmp0_safe_receiver = getEntry(this, key);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          var value = tmp0_safe_receiver.o5q_1;
          deleteEntry(this, tmp0_safe_receiver);
          tmp$ret$0 = value;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    return tmp;
  };
  TreeMap.prototype.b3 = function (key) {
    var tmp0_safe_receiver = getEntry(this, key);
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.o5q_1;
  };
  TreeMap.prototype.a1 = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashSet_init_$Create$();
    }
    var entries = tmp$ret$0;
    if (!this.q()) {
      var tmp = this.w5q();
      var e = tmp instanceof MapEntry ? tmp : THROW_CCE();
      while (!(e == null)) {
        {
          var tmp0_plusAssign = e;
          entries.b(tmp0_plusAssign);
        }
        e = successor(e, this);
      }
    }
    return entries;
  };
  TreeMap.prototype.c3 = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashSet_init_$Create$();
    }
    var keys = tmp$ret$0;
    if (!this.q()) {
      var tmp = this.w5q();
      var e = tmp instanceof MapEntry ? tmp : THROW_CCE();
      while (!(e == null)) {
        {
          var tmp0_plusAssign = e.n5q_1;
          keys.b(tmp0_plusAssign);
        }
        e = successor(e, this);
      }
    }
    return keys;
  };
  TreeMap.prototype.d3 = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashSet_init_$Create$();
    }
    var values = tmp$ret$0;
    if (!this.q()) {
      var tmp = this.w5q();
      var e = tmp instanceof MapEntry ? tmp : THROW_CCE();
      while (!(e == null)) {
        {
          var tmp0_plusAssign = e.o5q_1;
          values.b(tmp0_plusAssign);
        }
        e = successor(e, this);
      }
    }
    return values;
  };
  TreeMap.prototype.v2 = function (key) {
    return !(getEntry(this, key) == null);
  };
  TreeMap.prototype.b4 = function (from) {
    var tmp$ret$0;
    {
      tmp$ret$0 = from.a1().h();
    }
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      {
        this.a(element.l2(), element.n2());
      }
    }
    return Unit_getInstance();
  };
  TreeMap.$metadata$ = classMeta('TreeMap', [MutableMap]);
  function Viewport(x, ySigned, width, heightSigned) {
    this.s4n_1 = x;
    this.t4n_1 = ySigned;
    this.u4n_1 = width;
    this.v4n_1 = heightSigned;
  }
  Viewport.prototype.e23 = function () {
    return this.s4n_1;
  };
  Viewport.prototype.u3z = function () {
    return this.u4n_1;
  };
  Viewport.prototype.g23 = function () {
    return this.v4n_1 < 0 ? this.t4n_1 + this.v4n_1 | 0 : this.t4n_1;
  };
  Viewport.prototype.v3z = function () {
    return abs(this.v4n_1);
  };
  Viewport.prototype.v5b = function () {
    return this.u4n_1 / this.v3z();
  };
  Viewport.prototype.h4z = function (x, ySigned, width, heightSigned) {
    this.s4n_1 = x;
    this.u4n_1 = width;
    this.t4n_1 = ySigned;
    this.v4n_1 = heightSigned;
  };
  Viewport.$metadata$ = classMeta('Viewport');
  function createDefaultContext(localAssetPath) {
    var props = new InitProps();
    props.z5q_1 = localAssetPath;
    return createContext(props);
  }
  function toString_1(_this__u8e3s4, precision) {
    if (isNaN_1(_this__u8e3s4)) {
      return 'NaN';
    } else if (isInfinite(_this__u8e3s4)) {
      return 'Infinity';
    }
    var d = _this__u8e3s4;
    return toString(d.toFixed(precision));
  }
  function lock(lock, block) {
    return block();
  }
  function createContext(props) {
    return JsImpl_getInstance().c5r(props);
  }
  function JsImpl() {
    JsImpl_instance = this;
    this.b5r_1 = null;
  }
  JsImpl.prototype.d5r = function () {
    var tmp0_safe_receiver = this.b5r_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.g5s_1;
    var tmp;
    if (tmp1_elvis_lhs == null) {
      throw KoolException_init_$Create$('Platform.createContext() not called');
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  };
  JsImpl.prototype.c5r = function (props) {
    if (!(this.b5r_1 == null)) {
      throw KoolException_init_$Create$('Context was already created (multi-context is currently not supported in js');
    }
    this.b5r_1 = new JsContext(props);
    return ensureNotNull(this.b5r_1);
  };
  JsImpl.$metadata$ = objectMeta('JsImpl');
  var JsImpl_instance;
  function JsImpl_getInstance() {
    if (JsImpl_instance == null)
      new JsImpl();
    return JsImpl_instance;
  }
  var ClipState_STOPPED_instance;
  var ClipState_PLAYING_instance;
  var ClipState_entriesInitialized;
  function ClipState_initEntries() {
    if (ClipState_entriesInitialized)
      return Unit_getInstance();
    ClipState_entriesInitialized = true;
    ClipState_STOPPED_instance = new ClipState('STOPPED', 0);
    ClipState_PLAYING_instance = new ClipState('PLAYING', 1);
  }
  function AudioClip$ClipWrapper$lambda(this$0) {
    return function (it) {
      this$0.p5s_1 = ClipState_STOPPED_getInstance();
      var tmp$ret$0;
      {
        tmp$ret$0 = true;
      }
      return tmp$ret$0;
    };
  }
  function nextClip($this) {
    var inductionVariable = 0;
    var last = $this.w5s_1.m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if ($this.w5s_1.r(i).p5s_1.equals(ClipState_STOPPED_getInstance())) {
          return $this.w5s_1.r(i);
        }
      }
       while (inductionVariable <= last);
    var tmp = $this.w5s_1.m();
    Companion_getInstance_50();
    if (tmp < 5) {
      var clip = new ClipWrapper($this);
      var tmp1_this = $this;
      {
        var tmp0_plusAssign = tmp1_this.w5s_1;
        tmp0_plusAssign.b(clip);
      }
      return clip;
    }
    var tmp$ret$0;
    $l$block_0: {
      var tmp1_minByOrNull = $this.w5s_1;
      var iterator = tmp1_minByOrNull.h();
      if (!iterator.n()) {
        tmp$ret$0 = null;
        break $l$block_0;
      }
      var minElem = iterator.o();
      if (!iterator.n()) {
        tmp$ret$0 = minElem;
        break $l$block_0;
      }
      var tmp$ret$1;
      {
        var tmp2__anonymous__z9zvc9 = minElem;
        tmp$ret$1 = tmp2__anonymous__z9zvc9.q5s_1;
      }
      var minValue = tmp$ret$1;
      do {
        var e = iterator.o();
        var tmp$ret$2;
        {
          tmp$ret$2 = e.q5s_1;
        }
        var v = tmp$ret$2;
        if (compareTo(minValue, v) > 0) {
          minElem = e;
          minValue = v;
        }
      }
       while (iterator.n());
      tmp$ret$0 = minElem;
    }
    return ensureNotNull(tmp$ret$0);
  }
  function Companion_50() {
    Companion_instance_50 = this;
    this.z5s_1 = 150.0;
    this.a5t_1 = 5;
  }
  Companion_50.$metadata$ = objectMeta('Companion');
  var Companion_instance_50;
  function Companion_getInstance_50() {
    if (Companion_instance_50 == null)
      new Companion_50();
    return Companion_instance_50;
  }
  function ClipState(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  ClipState.$metadata$ = classMeta('ClipState', undefined, undefined, undefined, undefined, Enum.prototype);
  function ClipWrapper($outer) {
    this.r5s_1 = $outer;
    this.m5s_1 = new Audio(this.r5s_1.s5s_1);
    this.n5s_1 = false;
    this.o5s_1 = false;
    this.p5s_1 = ClipState_STOPPED_getInstance();
    this.q5s_1 = 0.0;
    this.b5t(this.r5s_1.u5s_1 * this.r5s_1.t5s_1);
    this.m5s_1.onended = AudioClip$ClipWrapper$lambda(this);
  }
  ClipWrapper.prototype.b5t = function (value) {
    var tmp$ret$0;
    {
      var tmp0_clamp = value;
      tmp$ret$0 = tmp0_clamp < 0.0 ? 0.0 : tmp0_clamp > 1.0 ? 1.0 : tmp0_clamp;
    }
    this.m5s_1.volume = tmp$ret$0;
  };
  ClipWrapper.prototype.c5t = function (value) {
    var tmp$ret$0;
    {
      var tmp0_clamp = value;
      var tmp1_clamp = this.d5t();
      tmp$ret$0 = tmp0_clamp < 0.0 ? 0.0 : tmp0_clamp > tmp1_clamp ? tmp1_clamp : tmp0_clamp;
    }
    this.m5s_1.currentTime = tmp$ret$0;
  };
  ClipWrapper.prototype.d5t = function () {
    return this.m5s_1.duration;
  };
  ClipWrapper.prototype.e5t = function () {
    return this.q5s_1;
  };
  ClipWrapper.prototype.f5t = function () {
    this.m5s_1.pause();
    this.c5t(0.0);
    this.p5s_1 = ClipState_PLAYING_getInstance();
    this.o5s_1 = true;
    this.m5s_1.play();
  };
  ClipWrapper.prototype.g5t = function () {
    this.n5s_1 = true;
    this.m5s_1.pause();
    this.p5s_1 = ClipState_STOPPED_getInstance();
  };
  ClipWrapper.$metadata$ = classMeta('ClipWrapper');
  function ClipState_STOPPED_getInstance() {
    ClipState_initEntries();
    return ClipState_STOPPED_instance;
  }
  function ClipState_PLAYING_getInstance() {
    ClipState_initEntries();
    return ClipState_PLAYING_instance;
  }
  function AudioClip(assetPath) {
    Companion_getInstance_50();
    this.s5s_1 = assetPath;
    this.t5s_1 = 1.0;
    this.u5s_1 = 1.0;
    var tmp = this;
    Companion_getInstance_50();
    tmp.v5s_1 = 150.0;
    this.w5s_1 = mutableListOf([new ClipWrapper(this)]);
    this.x5s_1 = first(this.w5s_1);
    var tmp_0 = this;
    DoubleCompanionObject_getInstance();
    tmp_0.y5s_1 = -Infinity;
  }
  AudioClip.prototype.h5t = function (value) {
    this.t5s_1 = value;
    this.x5s_1.b5t(this.u5s_1 * value);
  };
  AudioClip.prototype.i5t = function () {
    return this.x5s_1.p5s_1.equals(ClipState_STOPPED_getInstance());
  };
  AudioClip.prototype.f5t = function () {
    var t = Time_getInstance().b21() * 1000.0;
    if (t - this.y5s_1 > this.v5s_1) {
      this.y5s_1 = t;
      var tmp = this;
      var tmp$ret$0;
      {
        var tmp0_apply = nextClip(this);
        {
        }
        {
          tmp0_apply.f5t();
        }
        tmp$ret$0 = tmp0_apply;
      }
      tmp.x5s_1 = tmp$ret$0;
    }
  };
  AudioClip.prototype.g5t = function () {
    this.x5s_1.g5t();
  };
  AudioClip.$metadata$ = classMeta('AudioClip');
  function copyToTextures($this, ctx) {
    var inductionVariable = 0;
    var last = $this.e50_1;
    if (inductionVariable < last)
      do {
        var mipLevel = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        ctx.g5s_1.bindFramebuffer(WebGLRenderingContext.FRAMEBUFFER, $this.b50_1.r(mipLevel));
        ctx.g5s_1.readBuffer(WebGLRenderingContext.COLOR_ATTACHMENT0);
        var inductionVariable_0 = 0;
        var last_0 = $this.a50_1.i2d_1.m() - 1 | 0;
        if (inductionVariable_0 <= last_0)
          do {
            var i = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var copyTarget = $this.a50_1.i2d_1.r(i);
            var tmp2_safe_receiver = copyTarget.e55();
            var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.u3z();
            var width = tmp3_elvis_lhs == null ? 0 : tmp3_elvis_lhs;
            var tmp4_safe_receiver = copyTarget.e55();
            var tmp5_elvis_lhs = tmp4_safe_receiver == null ? null : tmp4_safe_receiver.v3z();
            var height = tmp5_elvis_lhs == null ? 0 : tmp5_elvis_lhs;
            if (!(width === $this.a50_1.u3z()) ? true : !(height === $this.a50_1.v3z())) {
              var tmp6_safe_receiver = copyTarget.e55();
              if (tmp6_safe_receiver == null)
                null;
              else {
                tmp6_safe_receiver.n1a();
              }
              createCopyTexColor(copyTarget, $this, ctx);
              width = ensureNotNull(copyTarget.e55()).u3z();
              height = ensureNotNull(copyTarget.e55()).v3z();
            }
            width = width >> mipLevel;
            height = height >> mipLevel;
            var tmp = copyTarget.e55();
            var target = tmp instanceof LoadedTextureWebGl ? tmp : THROW_CCE();
            ctx.g5s_1.bindTexture(WebGLRenderingContext.TEXTURE_2D, target.l5t_1);
            ctx.g5s_1.copyTexSubImage2D(WebGLRenderingContext.TEXTURE_2D, mipLevel, 0, 0, 0, 0, width, height);
          }
           while (inductionVariable_0 <= last_0);
      }
       while (inductionVariable < last);
    if (!$this.d50_1) {
      var inductionVariable_1 = 0;
      var last_1 = $this.a50_1.i2d_1.m() - 1 | 0;
      if (inductionVariable_1 <= last_1)
        do {
          var i_0 = inductionVariable_1;
          inductionVariable_1 = inductionVariable_1 + 1 | 0;
          var copyTarget_0 = $this.a50_1.i2d_1.r(i_0);
          var tmp_0 = copyTarget_0.e55();
          var target_0 = tmp_0 instanceof LoadedTextureWebGl ? tmp_0 : THROW_CCE();
          ctx.g5s_1.bindTexture(WebGLRenderingContext.TEXTURE_2D, target_0.l5t_1);
          ctx.g5s_1.generateMipmap(WebGLRenderingContext.TEXTURE_2D);
        }
         while (inductionVariable_1 <= last_1);
    }
  }
  function create($this, ctx) {
    var gl = ctx.g5s_1;
    if ($this.a50_1.x4y().s4u_1.equals(RenderTarget_TEXTURE_getInstance())) {
      createColorTexs($this, ctx);
    }
    if ($this.a50_1.x4y().r4u_1.equals(RenderTarget_TEXTURE_getInstance())) {
      createDepthTex($this, ctx);
    }
    var inductionVariable = 0;
    var last = $this.a50_1.x4y().p4u_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var mipWidth = $this.a50_1.e4z(i);
        var mipHeight = $this.a50_1.f4z(i);
        var fbo = gl.createFramebuffer();
        gl.bindFramebuffer(WebGLRenderingContext.FRAMEBUFFER, fbo);
        if ($this.a50_1.x4y().s4u_1.equals(RenderTarget_TEXTURE_getInstance())) {
          {
            var tmp0_forEachIndexed = $this.g50_1;
            var index = 0;
            var indexedObject = tmp0_forEachIndexed;
            var inductionVariable_0 = 0;
            var last_0 = indexedObject.length;
            while (inductionVariable_0 < last_0) {
              var item = indexedObject[inductionVariable_0];
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              {
                var tmp1 = index;
                index = tmp1 + 1 | 0;
                var tmp1__anonymous__uwfjfc = tmp1;
                gl.framebufferTexture2D(WebGLRenderingContext.FRAMEBUFFER, WebGLRenderingContext.COLOR_ATTACHMENT0 + tmp1__anonymous__uwfjfc | 0, WebGLRenderingContext.TEXTURE_2D, item, i);
              }
            }
          }
          var tmp = 0;
          var tmp_0 = $this.g50_1.length;
          var tmp_1 = new Int32Array(tmp_0);
          while (tmp < tmp_0) {
            var tmp_2 = tmp;
            var tmp$ret$0;
            {
              tmp$ret$0 = WebGLRenderingContext.COLOR_ATTACHMENT0 + tmp_2 | 0;
            }
            tmp_1[tmp_2] = tmp$ret$0;
            tmp = tmp + 1 | 0;
          }
          var attachments = tmp_1;
          gl.drawBuffers(attachments);
        } else {
          var rbo = gl.createRenderbuffer();
          gl.bindRenderbuffer(WebGLRenderingContext.RENDERBUFFER, rbo);
          gl.renderbufferStorage(WebGLRenderingContext.RENDERBUFFER, get_glInternalFormat(TexFormat_R_getInstance()), mipWidth, mipHeight);
          gl.framebufferRenderbuffer(WebGLRenderingContext.FRAMEBUFFER, WebGLRenderingContext.COLOR_ATTACHMENT0, WebGLRenderingContext.RENDERBUFFER, rbo);
          var tmp1_this = $this;
          {
            var tmp2_plusAssign = tmp1_this.c50_1;
            tmp2_plusAssign.b(rbo);
          }
        }
        if ($this.a50_1.x4y().r4u_1.equals(RenderTarget_TEXTURE_getInstance())) {
          gl.framebufferTexture2D(WebGLRenderingContext.FRAMEBUFFER, WebGLRenderingContext.DEPTH_ATTACHMENT, WebGLRenderingContext.TEXTURE_2D, $this.h50_1, i);
        } else {
          var rbo_0 = gl.createRenderbuffer();
          gl.bindRenderbuffer(WebGLRenderingContext.RENDERBUFFER, rbo_0);
          gl.renderbufferStorage(WebGLRenderingContext.RENDERBUFFER, WebGL2RenderingContext.DEPTH_COMPONENT24, mipWidth, mipHeight);
          gl.framebufferRenderbuffer(WebGLRenderingContext.FRAMEBUFFER, WebGLRenderingContext.DEPTH_ATTACHMENT, WebGLRenderingContext.RENDERBUFFER, rbo_0);
          var tmp2_this = $this;
          {
            var tmp3_plusAssign = tmp2_this.c50_1;
            tmp3_plusAssign.b(rbo_0);
          }
        }
        var tmp3_this = $this;
        {
          var tmp4_plusAssign = tmp3_this.b50_1;
          tmp4_plusAssign.b(fbo);
        }
      }
       while (inductionVariable < last);
    $this.f50_1 = true;
  }
  function createColorTexs($this, ctx) {
    var inductionVariable = 0;
    var last = $this.a50_1.h2d_1.m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var cfg = $this.a50_1.x4y().u4u_1.r(i);
        if (!(cfg.b4w_1 == null)) {
          var tmp = $this.g50_1;
          var tmp_0 = cfg.b4w_1.x4z_1;
          tmp[i] = (tmp_0 instanceof LoadedTextureWebGl ? tmp_0 : THROW_CCE()).l5t_1;
        } else {
          var format = cfg.u4v_1;
          var intFormat = get_glInternalFormat(format);
          var width = $this.a50_1.u3z();
          var height = $this.a50_1.v3z();
          var mipLevels = $this.a50_1.x4y().p4u_1;
          var estSize = Companion_getInstance_35().e56(width, height, 1, mipLevels, get_pxSize(format));
          var tex = new LoadedTextureWebGl(ctx, WebGLRenderingContext.TEXTURE_2D, ctx.g5s_1.createTexture(), estSize);
          tex.r5t(width, height, 1);
          tex.s5t($this.a50_1.h2d_1.r(i).l4s());
          ctx.g5s_1.texStorage2D(WebGLRenderingContext.TEXTURE_2D, mipLevels, intFormat, width, height);
          $this.g50_1[i] = tex.l5t_1;
          $this.a50_1.h2d_1.r(i).d55(tex);
          $this.a50_1.h2d_1.r(i).f55(LoadingState_LOADED_getInstance());
        }
      }
       while (inductionVariable <= last);
  }
  function createDepthTex($this, ctx) {
    var cfg = ensureNotNull($this.a50_1.x4y().t4u_1);
    if (!(cfg.b4w_1 == null)) {
      var tmp = $this;
      var tmp_0 = cfg.b4w_1.x4z_1;
      tmp.h50_1 = (tmp_0 instanceof LoadedTextureWebGl ? tmp_0 : THROW_CCE()).l5t_1;
    } else {
      var intFormat = WebGL2RenderingContext.DEPTH_COMPONENT32F;
      var width = $this.a50_1.u3z();
      var height = $this.a50_1.v3z();
      var mipLevels = $this.a50_1.x4y().p4u_1;
      var depthCfg = $this.a50_1.x4y().t4u_1;
      var estSize = Companion_getInstance_35().e56(width, height, 1, mipLevels, 4);
      var tex = new LoadedTextureWebGl(ctx, WebGLRenderingContext.TEXTURE_2D, ctx.g5s_1.createTexture(), estSize);
      tex.r5t(width, height, 1);
      tex.s5t(ensureNotNull($this.a50_1.g2d_1).l4s());
      if (!depthCfg.z4v_1.equals(DepthCompareOp_DISABLED_getInstance())) {
        ctx.g5s_1.texParameteri(WebGLRenderingContext.TEXTURE_2D, WebGL2RenderingContext.TEXTURE_COMPARE_MODE, WebGL2RenderingContext.COMPARE_REF_TO_TEXTURE);
        ctx.g5s_1.texParameteri(WebGLRenderingContext.TEXTURE_2D, WebGL2RenderingContext.TEXTURE_COMPARE_FUNC, get_glOp(depthCfg.z4v_1));
      }
      ctx.g5s_1.texStorage2D(WebGLRenderingContext.TEXTURE_2D, mipLevels, intFormat, width, height);
      $this.h50_1 = tex.l5t_1;
      $this.a50_1.g2d_1.d55(tex);
      $this.a50_1.g2d_1.f55(LoadingState_LOADED_getInstance());
    }
  }
  function createCopyTexColor(_this__u8e3s4, $this, ctx) {
    var intFormat = get_glInternalFormat(_this__u8e3s4.l4s().b54_1);
    var width = $this.a50_1.u3z();
    var height = $this.a50_1.v3z();
    var mipLevels = $this.a50_1.x4y().p4u_1;
    var estSize = Companion_getInstance_35().e56(width, height, 1, mipLevels, get_pxSize(_this__u8e3s4.l4s().b54_1));
    var tex = new LoadedTextureWebGl(ctx, WebGLRenderingContext.TEXTURE_2D, ctx.g5s_1.createTexture(), estSize);
    tex.r5t(width, height, 1);
    tex.s5t(_this__u8e3s4.l4s());
    ctx.g5s_1.texStorage2D(WebGLRenderingContext.TEXTURE_2D, mipLevels, intFormat, width, height);
    _this__u8e3s4.d55(tex);
    _this__u8e3s4.f55(LoadingState_LOADED_getInstance());
  }
  function OffscreenPass2dImpl(offscreenPass) {
    this.a50_1 = offscreenPass;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.b50_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = ArrayList_init_$Create$_0();
    }
    tmp_0.c50_1 = tmp$ret$1;
    this.d50_1 = this.a50_1.x4y().q4u_1;
    var tmp_1 = this;
    var tmp_2;
    if (this.d50_1) {
      tmp_2 = this.a50_1.x4y().p4u_1;
    } else {
      tmp_2 = 1;
    }
    tmp_1.e50_1 = tmp_2;
    this.f50_1 = false;
    var tmp_3 = this;
    var tmp_4 = 0;
    var tmp_5 = this.a50_1.x4y().v4u_1;
    var tmp$ret$2;
    {
      tmp$ret$2 = fillArrayVal(Array(tmp_5), null);
    }
    var tmp_6 = tmp$ret$2;
    while (tmp_4 < tmp_5) {
      var tmp_7 = tmp_4;
      var tmp$ret$3;
      {
        tmp$ret$3 = null;
      }
      tmp_6[tmp_7] = tmp$ret$3;
      tmp_4 = tmp_4 + 1 | 0;
    }
    tmp_3.g50_1 = tmp_6;
    this.h50_1 = null;
  }
  OffscreenPass2dImpl.prototype.t5t = function (ctx) {
    if (!this.f50_1) {
      create(this, ctx);
    }
    if (this.f50_1) {
      var inductionVariable = 0;
      var last = this.e50_1;
      if (inductionVariable < last)
        do {
          var mipLevel = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp1_safe_receiver = this.a50_1.b4z();
          if (tmp1_safe_receiver == null)
            null;
          else
            tmp1_safe_receiver(mipLevel, ctx);
          this.a50_1.w4y(mipLevel);
          ctx.g5s_1.bindFramebuffer(WebGLRenderingContext.FRAMEBUFFER, this.b50_1.r(mipLevel));
          ctx.a5s_1.y5t(this.a50_1.i50());
        }
         while (inductionVariable < last);
      if (!this.d50_1) {
        var inductionVariable_0 = 0;
        var last_0 = this.g50_1.length - 1 | 0;
        if (inductionVariable_0 <= last_0)
          do {
            var i = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            ctx.g5s_1.bindTexture(WebGLRenderingContext.TEXTURE_2D, this.g50_1[i]);
            ctx.g5s_1.generateMipmap(WebGLRenderingContext.TEXTURE_2D);
          }
           while (inductionVariable_0 <= last_0);
      }
      copyToTextures(this, ctx);
      ctx.g5s_1.bindFramebuffer(WebGLRenderingContext.FRAMEBUFFER, null);
    }
  };
  OffscreenPass2dImpl.prototype.l4k = function (ctx) {
    if (ctx instanceof JsContext)
      ctx;
    else
      THROW_CCE();
    {
      var tmp0_forEach = this.b50_1;
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          ctx.g5s_1.deleteFramebuffer(element);
        }
      }
    }
    {
      var tmp1_forEach = this.c50_1;
      var tmp0_iterator_0 = tmp1_forEach.h();
      while (tmp0_iterator_0.n()) {
        var element_0 = tmp0_iterator_0.o();
        {
          ctx.g5s_1.deleteRenderbuffer(element_0);
        }
      }
    }
    this.b50_1.t7();
    this.c50_1.t7();
    {
      var tmp2_forEach = this.a50_1.h2d_1;
      var tmp0_iterator_1 = tmp2_forEach.h();
      while (tmp0_iterator_1.n()) {
        var element_1 = tmp0_iterator_1.o();
        {
          if (element_1.g55().equals(LoadingState_LOADED_getInstance())) {
            element_1.n1a();
          }
        }
      }
    }
    var tmp0_safe_receiver = this.a50_1.g2d_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        var tmp;
        if (tmp0_safe_receiver.g55().equals(LoadingState_LOADED_getInstance())) {
          tmp = tmp0_safe_receiver.n1a();
        }
        tmp$ret$0 = tmp;
      }
    }
    var inductionVariable = 0;
    var last = this.g50_1.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.g50_1[i] = null;
      }
       while (inductionVariable <= last);
    this.h50_1 = null;
    this.f50_1 = false;
  };
  OffscreenPass2dImpl.$metadata$ = classMeta('OffscreenPass2dImpl');
  function copyToTextures_0($this, face, mipLevel, ctx) {
    ctx.g5s_1.readBuffer(WebGLRenderingContext.COLOR_ATTACHMENT0);
    var inductionVariable = 0;
    var last = $this.z5t_1.l51_1.m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var copyTarget = $this.z5t_1.l51_1.r(i);
        var tmp1_safe_receiver = copyTarget.e55();
        var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.u3z();
        var width = tmp2_elvis_lhs == null ? 0 : tmp2_elvis_lhs;
        var tmp3_safe_receiver = copyTarget.e55();
        var tmp4_elvis_lhs = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.v3z();
        var height = tmp4_elvis_lhs == null ? 0 : tmp4_elvis_lhs;
        if (!(width === $this.z5t_1.u3z()) ? true : !(height === $this.z5t_1.v3z())) {
          var tmp5_safe_receiver = copyTarget.e55();
          if (tmp5_safe_receiver == null)
            null;
          else {
            tmp5_safe_receiver.n1a();
          }
          createCopyTexColor_0(copyTarget, $this, ctx);
          width = ensureNotNull(copyTarget.e55()).u3z();
          height = ensureNotNull(copyTarget.e55()).v3z();
        }
        width = width >> mipLevel;
        height = height >> mipLevel;
        var tmp = copyTarget.e55();
        var target = tmp instanceof LoadedTextureWebGl ? tmp : THROW_CCE();
        ctx.g5s_1.bindTexture(WebGLRenderingContext.TEXTURE_CUBE_MAP, target.l5t_1);
        ctx.g5s_1.copyTexSubImage2D(WebGLRenderingContext.TEXTURE_CUBE_MAP_POSITIVE_X + face | 0, mipLevel, 0, 0, 0, 0, width, height);
      }
       while (inductionVariable <= last);
  }
  function create_0($this, ctx) {
    var gl = ctx.g5s_1;
    createColorTex($this, ctx);
    var inductionVariable = 0;
    var last = $this.z5t_1.x4y().p4u_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var fbo = gl.createFramebuffer();
        var rbo = gl.createRenderbuffer();
        var mipWidth = $this.z5t_1.e4z(i);
        var mipHeight = $this.z5t_1.f4z(i);
        gl.bindFramebuffer(WebGLRenderingContext.FRAMEBUFFER, fbo);
        gl.bindRenderbuffer(WebGLRenderingContext.RENDERBUFFER, rbo);
        gl.renderbufferStorage(WebGLRenderingContext.RENDERBUFFER, WebGL2RenderingContext.DEPTH_COMPONENT24, mipWidth, mipHeight);
        gl.framebufferRenderbuffer(WebGLRenderingContext.FRAMEBUFFER, WebGLRenderingContext.DEPTH_ATTACHMENT, WebGLRenderingContext.RENDERBUFFER, rbo);
        var tmp1_this = $this;
        {
          var tmp0_plusAssign = tmp1_this.a5u_1;
          tmp0_plusAssign.b(fbo);
        }
        var tmp2_this = $this;
        {
          var tmp1_plusAssign = tmp2_this.b5u_1;
          tmp1_plusAssign.b(rbo);
        }
      }
       while (inductionVariable < last);
    $this.c5u_1 = true;
  }
  function createColorTex($this, ctx) {
    var format = $this.z5t_1.x4y().u4u_1.r(0).u4v_1;
    var intFormat = get_glInternalFormat(format);
    var width = $this.z5t_1.u3z();
    var height = $this.z5t_1.v3z();
    var mipLevels = $this.z5t_1.x4y().p4u_1;
    var estSize = Companion_getInstance_35().e56(width, height, 6, mipLevels, get_pxSize(format));
    var tex = new LoadedTextureWebGl(ctx, WebGLRenderingContext.TEXTURE_CUBE_MAP, ctx.g5s_1.createTexture(), estSize);
    tex.r5t(width, height, 1);
    tex.s5t(ensureNotNull($this.z5t_1.z4z()).l4s());
    ctx.g5s_1.texStorage2D(WebGLRenderingContext.TEXTURE_CUBE_MAP, mipLevels, intFormat, width, height);
    $this.d5u_1 = tex.l5t_1;
    ensureNotNull($this.z5t_1.z4z()).d55(tex);
    ensureNotNull($this.z5t_1.z4z()).f55(LoadingState_LOADED_getInstance());
  }
  function createCopyTexColor_0(_this__u8e3s4, $this, ctx) {
    var intFormat = get_glInternalFormat(_this__u8e3s4.l4s().b54_1);
    var width = $this.z5t_1.u3z();
    var height = $this.z5t_1.v3z();
    var mipLevels = $this.z5t_1.x4y().p4u_1;
    var estSize = Companion_getInstance_35().e56(width, height, 6, mipLevels, get_pxSize(_this__u8e3s4.l4s().b54_1));
    var tex = new LoadedTextureWebGl(ctx, WebGLRenderingContext.TEXTURE_CUBE_MAP, ctx.g5s_1.createTexture(), estSize);
    tex.r5t(width, height, 1);
    tex.s5t(_this__u8e3s4.l4s());
    ctx.g5s_1.texStorage2D(WebGLRenderingContext.TEXTURE_CUBE_MAP, mipLevels, intFormat, width, height);
    _this__u8e3s4.d55(tex);
    _this__u8e3s4.f55(LoadingState_LOADED_getInstance());
  }
  function Companion_51() {
    Companion_instance_51 = this;
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = 6;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(tmp_1), null);
    }
    var tmp_2 = tmp$ret$0;
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$1;
      {
        var tmp0_subject = tmp_3;
        var tmp_4;
        switch (tmp0_subject) {
          case 0:
            tmp_4 = ViewDirection_RIGHT_getInstance();
            break;
          case 1:
            tmp_4 = ViewDirection_LEFT_getInstance();
            break;
          case 2:
            tmp_4 = ViewDirection_UP_getInstance();
            break;
          case 3:
            tmp_4 = ViewDirection_DOWN_getInstance();
            break;
          case 4:
            tmp_4 = ViewDirection_FRONT_getInstance();
            break;
          case 5:
            tmp_4 = ViewDirection_BACK_getInstance();
            break;
          default:
            throw IllegalStateException_init_$Create$_0();
        }
        tmp$ret$1 = tmp_4;
      }
      tmp_2[tmp_3] = tmp$ret$1;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp.e5u_1 = tmp_2;
  }
  Companion_51.$metadata$ = objectMeta('Companion');
  var Companion_instance_51;
  function Companion_getInstance_51() {
    if (Companion_instance_51 == null)
      new Companion_51();
    return Companion_instance_51;
  }
  function PlatformAttributeProps(attribute) {
    var tmp0_subject = attribute.y2s_1;
    var tmp0 = tmp0_subject.y1();
    switch (tmp0) {
      case 0:
        this.i2t_1 = 1;
        this.j2t_1 = 1;
        break;
      case 1:
        this.i2t_1 = 1;
        this.j2t_1 = 2;
        break;
      case 2:
        this.i2t_1 = 1;
        this.j2t_1 = 3;
        break;
      case 3:
        this.i2t_1 = 1;
        this.j2t_1 = 4;
        break;
      case 8:
        this.i2t_1 = 2;
        this.j2t_1 = 2;
        break;
      case 9:
        this.i2t_1 = 3;
        this.j2t_1 = 3;
        break;
      case 10:
        this.i2t_1 = 4;
        this.j2t_1 = 4;
        break;
      case 4:
        this.i2t_1 = 1;
        this.j2t_1 = 1;
        break;
      case 5:
        this.i2t_1 = 1;
        this.j2t_1 = 2;
        break;
      case 6:
        this.i2t_1 = 1;
        this.j2t_1 = 3;
        break;
      case 7:
        this.i2t_1 = 1;
        this.j2t_1 = 4;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
  }
  PlatformAttributeProps.prototype.f5u = function () {
    return this.i2t_1;
  };
  PlatformAttributeProps.$metadata$ = classMeta('PlatformAttributeProps');
  function ShaderCode(vertexSrc, fragmentSrc) {
    this.c52_1 = vertexSrc;
    this.d52_1 = fragmentSrc;
    var tmp = this;
    var tmp$ret$3;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_toULong = getStringHashCode(this.c52_1);
          tmp$ret$0 = _ULong___init__impl__c78o9k(toLong(tmp0_toULong));
        }
        var tmp1_shl = tmp$ret$0;
        tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_shl).tb(32));
      }
      var tmp3_plus = tmp$ret$1;
      var tmp$ret$2;
      {
        var tmp2_toULong = getStringHashCode(this.d52_1);
        tmp$ret$2 = _ULong___init__impl__c78o9k(toLong(tmp2_toULong));
      }
      var tmp4_plus = tmp$ret$2;
      tmp$ret$3 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp3_plus).ka(_ULong___get_data__impl__fggpzb(tmp4_plus)));
    }
    tmp.e52_1 = tmp$ret$3;
  }
  ShaderCode.prototype.g5u = function () {
    return this.c52_1;
  };
  ShaderCode.prototype.h5u = function () {
    return this.d52_1;
  };
  ShaderCode.$metadata$ = classMeta('ShaderCode');
  function loadFont($this, family, url) {
    var font = new FontFace(family, 'url(' + url + ')');
    var promise = font.load();
    var tmp0_this = $this;
    {
      var tmp0_plusAssign = tmp0_this.n5u_1;
      tmp0_plusAssign.b(promise);
    }
    promise.then(FontMapGenerator$loadFont$lambda($this));
  }
  function makeMap($this, font, size, outMetrics) {
    var style = '';
    Companion_getInstance_42();
    if (!((font.u1x_1 & 1) === 0)) {
      style = 'bold ';
    }
    Companion_getInstance_42();
    if (!((font.u1x_1 & 2) === 0)) {
      style = style + 'italic ';
    }
    var fontStr = style + ' ' + size + 'px ' + font.t1x_1;
    $this.m5u_1.font = fontStr;
    $this.m5u_1.fillStyle = '#ffffff';
    $this.m5u_1.strokeStyle = '#ffffff';
    var tmp$ret$3;
    {
      var tmp$ret$2;
      {
        var tmp2_dExt = Log_getInstance();
        var tmp$ret$1;
        {
          var tmp1_logExt = Level_DEBUG_getInstance();
          var tmp0_log = getKClassFromExpression($this).ei();
          var tmp;
          if (tmp1_logExt.e1w_1 >= tmp2_dExt.y1v_1.e1w_1) {
            var tmp_0 = tmp2_dExt.z1v_1;
            var tmp$ret$0;
            {
              tmp$ret$0 = 'generate font: ' + fontStr;
            }
            tmp = tmp_0(tmp1_logExt, tmp0_log, tmp$ret$0);
          }
          tmp$ret$1 = tmp;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      tmp$ret$3 = tmp$ret$2;
    }
    var fm = $this.m5u_1.measureText('A');
    var tmp$ret$4;
    {
      var tmp0_ceil = size / 10.0;
      tmp$ret$4 = Math.ceil(tmp0_ceil);
    }
    var padLeft = numberToInt(tmp$ret$4);
    var tmp$ret$5;
    {
      var tmp1_ceil = size / 10.0;
      tmp$ret$5 = Math.ceil(tmp1_ceil);
    }
    var padRight = numberToInt(tmp$ret$5);
    var padTop = 0;
    var tmp$ret$6;
    {
      var tmp2_ceil = size / 10.0;
      tmp$ret$6 = Math.ceil(tmp2_ceil);
    }
    var padBottom = numberToInt(tmp$ret$6);
    var hasFontMetrics = !(fm.fontBoundingBoxAscent === undefined) ? !(fm.fontBoundingBoxDescent === undefined) : false;
    var tmp$ret$7;
    {
      var tmp3_ceil = hasFontMetrics ? size * 1.05 : fm.fontBoundingBoxAscent;
      tmp$ret$7 = Math.ceil(tmp3_ceil);
    }
    var fontAscent = numberToInt(tmp$ret$7);
    var tmp$ret$8;
    {
      var tmp4_ceil = hasFontMetrics ? size * 0.35 : fm.fontBoundingBoxAscent;
      tmp$ret$8 = Math.ceil(tmp4_ceil);
    }
    var fontDescent = numberToInt(tmp$ret$8);
    var tmp_1;
    if (font.v1x_1 === 0.0) {
      tmp_1 = fontAscent;
    } else {
      var tmp$ret$9;
      {
        var tmp5_ceil = font.v1x_1 * size;
        tmp$ret$9 = Math.ceil(tmp5_ceil);
      }
      tmp_1 = numberToInt(tmp$ret$9);
    }
    var ascent = tmp_1;
    var tmp_2;
    if (font.w1x_1 === 0.0) {
      tmp_2 = fontDescent;
    } else {
      var tmp$ret$10;
      {
        var tmp6_ceil = font.w1x_1 * size;
        tmp$ret$10 = Math.ceil(tmp6_ceil);
      }
      tmp_2 = numberToInt(tmp$ret$10);
    }
    var descent = tmp_2;
    var tmp_3;
    if (font.x1x_1 === 0.0) {
      tmp_3 = ascent + descent | 0;
    } else {
      var tmp$ret$11;
      {
        var tmp7_ceil = font.x1x_1 * size;
        tmp$ret$11 = Math.ceil(tmp7_ceil);
      }
      tmp_3 = numberToInt(tmp$ret$11);
    }
    var height = tmp_3;
    $this.m5u_1.beginPath();
    $this.m5u_1.moveTo(0.5, 0.0);
    $this.m5u_1.lineTo(0.5, 1.0);
    $this.m5u_1.stroke();
    var x = 1;
    var y = ascent;
    var indexedObject = font.y1x_1;
    var inductionVariable = 0;
    var last = indexedObject.length;
    $l$loop: while (inductionVariable < last) {
      var c = charSequenceGet(indexedObject, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      var txt = '' + new Char(c);
      var txtMetrics = $this.m5u_1.measureText(txt);
      var tmp$ret$12;
      {
        var tmp8_ceil = txtMetrics.actualBoundingBoxRight + txtMetrics.actualBoundingBoxLeft;
        tmp$ret$12 = Math.ceil(tmp8_ceil);
      }
      var charW = numberToInt(tmp$ret$12);
      var paddedWidth = (charW + padLeft | 0) + padRight | 0;
      if ((x + paddedWidth | 0) > $this.i5u_1) {
        x = 0;
        y = y + ((height + padBottom | 0) + padTop | 0) | 0;
        if ((y + descent | 0) > $this.j5u_1) {
          var tmp$ret$16;
          {
            var tmp$ret$15;
            {
              var tmp2_eExt = Log_getInstance();
              var tmp$ret$14;
              {
                var tmp1_logExt_0 = Level_ERROR_getInstance();
                var tmp0_log_0 = getKClassFromExpression($this).ei();
                var tmp_4;
                if (tmp1_logExt_0.e1w_1 >= tmp2_eExt.y1v_1.e1w_1) {
                  var tmp_5 = tmp2_eExt.z1v_1;
                  var tmp$ret$13;
                  {
                    tmp$ret$13 = 'Unable to render full font map: Maximum texture size exceeded';
                  }
                  tmp_4 = tmp_5(tmp1_logExt_0, tmp0_log_0, tmp$ret$13);
                }
                tmp$ret$14 = tmp_4;
              }
              tmp$ret$15 = tmp$ret$14;
            }
            tmp$ret$16 = tmp$ret$15;
          }
          break $l$loop;
        }
      }
      var xOff = txtMetrics.actualBoundingBoxLeft + padLeft;
      var metrics = new CharMetrics();
      metrics.d5j_1 = paddedWidth;
      metrics.e5j_1 = (height + padBottom | 0) + padTop | 0;
      metrics.f5j_1 = xOff;
      metrics.g5j_1 = ascent;
      metrics.h5j_1 = txtMetrics.width;
      metrics.i5j_1.c2j(x, (y - ascent | 0) - padTop | 0);
      metrics.j5j_1.c2j(x + paddedWidth | 0, ((y - ascent | 0) + padBottom | 0) + height | 0);
      {
        outMetrics.a(new Char(c), metrics);
      }
      $this.m5u_1.fillText(txt, x + xOff, y);
      x = x + paddedWidth | 0;
    }
    var texW = $this.i5u_1;
    var texH = nextPow2($this, y + descent | 0);
    var tmp1_iterator = outMetrics.d3().h();
    while (tmp1_iterator.n()) {
      var cm = tmp1_iterator.o();
      var tmp2_this = cm.i5j_1;
      tmp2_this.x2i(tmp2_this.e23() / texW);
      var tmp3_this = cm.i5j_1;
      tmp3_this.y2i(tmp3_this.g23() / texH);
      var tmp4_this = cm.j5j_1;
      tmp4_this.x2i(tmp4_this.e23() / texW);
      var tmp5_this = cm.j5j_1;
      tmp5_this.y2i(tmp5_this.g23() / texH);
    }
    return texH;
  }
  function nextPow2($this, value) {
    var pow2 = 16;
    while (pow2 < value ? pow2 < $this.j5u_1 : false) {
      pow2 = pow2 << 1;
    }
    return pow2;
  }
  function FontMapGenerator$loadFont$lambda(this$0) {
    return function (f) {
      document.fonts.add(f);
      var tmp$ret$3;
      {
        var tmp$ret$2;
        {
          var tmp2_dExt = Log_getInstance();
          var tmp$ret$1;
          {
            var tmp1_logExt = Level_DEBUG_getInstance();
            var tmp0_log = getKClassFromExpression(this$0).ei();
            var tmp;
            if (tmp1_logExt.e1w_1 >= tmp2_dExt.y1v_1.e1w_1) {
              var tmp_0 = tmp2_dExt.z1v_1;
              var tmp$ret$0;
              {
                tmp$ret$0 = 'Loaded custom font: ' + f.family;
              }
              tmp = tmp_0(tmp1_logExt, tmp0_log, tmp$ret$0);
            }
            tmp$ret$1 = tmp;
          }
          tmp$ret$2 = tmp$ret$1;
        }
        tmp$ret$3 = tmp$ret$2;
      }
      return Unit_getInstance();
    };
  }
  function FontMapGenerator(maxWidth, maxHeight, props, assetManager, ctx) {
    this.i5u_1 = maxWidth;
    this.j5u_1 = maxHeight;
    this.k5u_1 = ctx;
    var tmp = this;
    var tmp_0 = document.createElement('canvas');
    tmp.l5u_1 = tmp_0 instanceof HTMLCanvasElement ? tmp_0 : THROW_CCE();
    var tmp_1 = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp_1.n5u_1 = tmp$ret$0;
    this.l5u_1.style.width = '' + roundToInt(this.i5u_1 / window.devicePixelRatio);
    this.l5u_1.style.height = '' + roundToInt(this.j5u_1 / window.devicePixelRatio);
    this.l5u_1.width = this.i5u_1;
    this.l5u_1.height = this.j5u_1;
    var tmp_2 = this;
    var tmp_3 = this.l5u_1.getContext('2d');
    tmp_2.m5u_1 = tmp_3 instanceof CanvasRenderingContext2D ? tmp_3 : THROW_CCE();
    {
      var tmp0_forEach = props.a5r_1;
      var tmp$ret$1;
      {
        tmp$ret$1 = tmp0_forEach.a1().h();
      }
      var tmp0_iterator = tmp$ret$1;
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          var tmp$ret$2;
          {
            tmp$ret$2 = element.l2();
          }
          var family = tmp$ret$2;
          var tmp$ret$3;
          {
            tmp$ret$3 = element.n2();
          }
          var url = tmp$ret$3;
          loadFont(this, family, assetManager.t1v(url).v1y_1);
        }
      }
    }
  }
  FontMapGenerator.prototype.d1y = function (font, fontScale, outMetrics) {
    var tmp$ret$0;
    {
      var tmp0_roundToInt = font.h5i() * fontScale;
      tmp$ret$0 = roundToInt(tmp0_roundToInt);
    }
    var fontSize = tmp$ret$0;
    this.m5u_1.fillStyle = '#000000';
    this.m5u_1.fillRect(0.0, 0.0, this.i5u_1, this.j5u_1);
    var texHeight = makeMap(this, font, fontSize, outMetrics);
    var data = this.m5u_1.getImageData(0.0, 0.0, this.i5u_1, texHeight);
    var tmp = 0;
    var tmp_0 = 256;
    var tmp_1 = new Int8Array(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$3;
      {
        var a = tmp_2 / 255.0;
        var tmp$ret$1;
        {
          tmp$ret$1 = Math.pow(a, 1.5);
        }
        var ac = tmp$ret$1 * 1.3 - 0.15;
        var cw = smoothStep(12.0, 40.0, fontSize);
        var c = a * cw + ac * (1.0 - cw);
        var tmp$ret$2;
        {
          tmp$ret$2 = c < 0.0 ? 0.0 : c > 1.0 ? 1.0 : c;
        }
        tmp$ret$3 = toByte(numberToInt(tmp$ret$2 * 255.0));
      }
      tmp_1[tmp_2] = tmp$ret$3;
      tmp = tmp + 1 | 0;
    }
    var alphaLut = tmp_1;
    var buffer = createUint8Buffer(imul(this.i5u_1, texHeight));
    var inductionVariable = 0;
    var last = buffer.b1w();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$5;
        {
          var tmp1_get = data.data;
          var tmp2_get = imul(i, 4);
          var tmp$ret$4;
          {
            tmp$ret$4 = tmp1_get;
          }
          tmp$ret$5 = tmp$ret$4[tmp2_get];
        }
        var a_0 = tmp$ret$5 & 255;
        buffer.e5n(alphaLut[a_0]);
      }
       while (inductionVariable < last);
    var tmp$ret$9;
    {
      var tmp$ret$8;
      {
        var tmp2_dExt = Log_getInstance();
        var tmp$ret$7;
        {
          var tmp1_logExt = Level_DEBUG_getInstance();
          var tmp0_log = getKClassFromExpression(this).ei();
          var tmp_3;
          if (tmp1_logExt.e1w_1 >= tmp2_dExt.y1v_1.e1w_1) {
            var tmp_4 = tmp2_dExt.z1v_1;
            var tmp$ret$6;
            {
              tmp$ret$6 = 'Generated font map for (' + font + ', scale=' + fontScale + ')';
            }
            tmp_3 = tmp_4(tmp1_logExt, tmp0_log, tmp$ret$6);
          }
          tmp$ret$7 = tmp_3;
        }
        tmp$ret$8 = tmp$ret$7;
      }
      tmp$ret$9 = tmp$ret$8;
    }
    return new TextureData2d(buffer, this.i5u_1, texHeight, TexFormat_R_getInstance());
  };
  FontMapGenerator.$metadata$ = classMeta('FontMapGenerator');
  function ImageAtlasTextureData(image, tilesX, tilesY, fmt) {
    TextureData.call(this);
    if (!image.complete) {
      throw IllegalStateException_init_$Create$('Image must be complete');
    }
    this.h55(image.width / tilesX | 0);
    this.i55(image.height / tilesY | 0);
    var w = this.u3z();
    var h = this.v3z();
    this.j55(imul(tilesX, tilesY));
    var tmp0_safe_receiver = fmt;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        tmp$ret$0 = this.l55(tmp0_safe_receiver);
      }
    }
    var tmp = document.createElement('canvas');
    var canvas = tmp instanceof HTMLCanvasElement ? tmp : THROW_CCE();
    canvas.width = this.u3z();
    canvas.height = this.v3z();
    var tmp_0 = canvas.getContext('2d');
    var canvasCtx = tmp_0 instanceof CanvasRenderingContext2D ? tmp_0 : THROW_CCE();
    var tmp_1 = this;
    var tmp_2 = 0;
    var tmp_3 = this.k55();
    var tmp$ret$1;
    {
      tmp$ret$1 = fillArrayVal(Array(tmp_3), null);
    }
    var tmp_4 = tmp$ret$1;
    while (tmp_2 < tmp_3) {
      var tmp_5 = tmp_2;
      var tmp$ret$2;
      {
        var x = tmp_5 % tilesX | 0;
        var y = tmp_5 / tilesX | 0;
        canvasCtx.clearRect(0.0, 0.0, w, h);
        canvasCtx.drawImage(image, x * w, y * h, w, h, 0.0, 0.0, w, h);
        tmp$ret$2 = canvasCtx.getImageData(0.0, 0.0, w, h);
      }
      tmp_4[tmp_5] = tmp$ret$2;
      tmp_2 = tmp_2 + 1 | 0;
    }
    tmp_1.s5u_1 = tmp_4;
  }
  ImageAtlasTextureData.prototype.m55 = function () {
    return this.s5u_1;
  };
  ImageAtlasTextureData.$metadata$ = classMeta('ImageAtlasTextureData', undefined, undefined, undefined, undefined, TextureData.prototype);
  function ImageTextureData(image, fmt) {
    TextureData.call(this);
    this.x5u_1 = image;
    this.y5u_1 = this.x5u_1;
    if (!this.x5u_1.complete) {
      throw IllegalStateException_init_$Create$('Image must be complete');
    }
    this.h55(this.x5u_1.width);
    this.i55(this.x5u_1.height);
    this.j55(1);
    var tmp0_safe_receiver = fmt;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        tmp$ret$0 = this.l55(tmp0_safe_receiver);
      }
    }
  }
  ImageTextureData.prototype.m55 = function () {
    return this.y5u_1;
  };
  ImageTextureData.$metadata$ = classMeta('ImageTextureData', undefined, undefined, undefined, undefined, TextureData.prototype);
  function loadRaw($this, url, $cont) {
    var prefixedUrl = $this.t1w(url) ? url : $this.i5v_1 + '/' + url;
    var data = CompletableDeferred($this.j1f());
    var req = new XMLHttpRequest();
    var tmp$ret$2;
    {
      var tmp0__get_ARRAYBUFFER__ua4cvm = null;
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'arraybuffer';
        }
        var tmp0_unsafeCast = tmp$ret$0;
        tmp$ret$1 = tmp0_unsafeCast;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    req.responseType = tmp$ret$2;
    req.onload = JsAssetManager$loadRaw$lambda(req, data);
    req.onerror = JsAssetManager$loadRaw$lambda_0(data, $this, prefixedUrl);
    req.open('GET', prefixedUrl);
    req.send();
    return data.v1c($cont);
  }
  function loadImage($this, ref, $cont) {
    var tmp = new $loadImageCOROUTINE$9($this, ref, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  }
  function loadSelectedFile($this) {
    var tmp$ret$0;
    {
      var tmp0_asDynamic = $this.l5v_1;
      tmp$ret$0 = tmp0_asDynamic;
    }
    var tmp = tmp$ret$0.files;
    var fileList = tmp instanceof FileList ? tmp : THROW_CCE();
    if (fileList.length > 0) {
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          tmp$ret$1 = fileList;
        }
        tmp$ret$2 = tmp$ret$1[0];
      }
      var file = ensureNotNull(tmp$ret$2);
      var tmp$ret$6;
      {
        var tmp$ret$5;
        {
          var tmp2_dExt = Log_getInstance();
          var tmp$ret$4;
          {
            var tmp1_logExt = Level_DEBUG_getInstance();
            var tmp0_log = getKClassFromExpression($this).ei();
            var tmp_0;
            if (tmp1_logExt.e1w_1 >= tmp2_dExt.y1v_1.e1w_1) {
              var tmp_1 = tmp2_dExt.z1v_1;
              var tmp$ret$3;
              {
                tmp$ret$3 = 'User selected file: ' + file.name;
              }
              tmp_0 = tmp_1(tmp1_logExt, tmp0_log, tmp$ret$3);
            }
            tmp$ret$4 = tmp_0;
          }
          tmp$ret$5 = tmp$ret$4;
        }
        tmp$ret$6 = tmp$ret$5;
      }
      var tmp$ret$7;
      {
        tmp$ret$7 = file;
      }
      var tmp_2 = tmp$ret$7.arrayBuffer();
      var bufferPromise = tmp_2 instanceof Promise ? tmp_2 : THROW_CCE();
      var tmp_3 = JsAssetManager$loadSelectedFile$lambda($this);
      bufferPromise.then(tmp_3, JsAssetManager$loadSelectedFile$lambda_0($this));
    }
  }
  function Companion_52() {
    Companion_instance_52 = this;
    this.b5w_1 = 2048;
    this.c5w_1 = 2048;
  }
  Companion_52.$metadata$ = objectMeta('Companion');
  var Companion_instance_52;
  function Companion_getInstance_52() {
    if (Companion_instance_52 == null)
      new Companion_52();
    return Companion_instance_52;
  }
  function JsAssetManager$onFileSelectionChanged$lambda(this$0) {
    return function (it) {
      loadSelectedFile(this$0);
      return Unit_getInstance();
    };
  }
  function JsAssetManager$loadRaw$lambda($req, $data) {
    return function (it) {
      var tmp = $req.response;
      var array = new Uint8Array(tmp instanceof ArrayBuffer ? tmp : THROW_CCE());
      return $data.t1c(new Uint8BufferImpl(array));
    };
  }
  function JsAssetManager$loadRaw$lambda_0($data, this$0, $prefixedUrl) {
    return function (it) {
      $data.t1c(null);
      var tmp$ret$3;
      {
        var tmp$ret$2;
        {
          var tmp2_eExt = Log_getInstance();
          var tmp$ret$1;
          {
            var tmp1_logExt = Level_ERROR_getInstance();
            var tmp0_log = getKClassFromExpression(this$0).ei();
            var tmp;
            if (tmp1_logExt.e1w_1 >= tmp2_eExt.y1v_1.e1w_1) {
              var tmp_0 = tmp2_eExt.z1v_1;
              var tmp$ret$0;
              {
                tmp$ret$0 = 'Failed loading resource ' + $prefixedUrl + ': ' + it;
              }
              tmp = tmp_0(tmp1_logExt, tmp0_log, tmp$ret$0);
            }
            tmp$ret$1 = tmp;
          }
          tmp$ret$2 = tmp$ret$1;
        }
        tmp$ret$3 = tmp$ret$2;
      }
      return Unit_getInstance();
    };
  }
  function JsAssetManager$loadImage$lambda($deferred, $img) {
    return function (it) {
      return $deferred.t1c($img);
    };
  }
  function JsAssetManager$loadImage$lambda_0($prefixedUrl, $deferred) {
    return function (_anonymous_parameter_0__qggqh8, _anonymous_parameter_1__qggqgd, _anonymous_parameter_2__qggqfi, _anonymous_parameter_3__qggqen, _anonymous_parameter_4__qggqds) {
      var tmp;
      if (startsWith$default($prefixedUrl, 'data:', false, 2, null)) {
        tmp = $deferred.u1c(KoolException_init_$Create$('Failed loading tex from data URL'));
      } else {
        tmp = $deferred.u1c(KoolException_init_$Create$('Failed loading tex from ' + $prefixedUrl));
      }
      return tmp;
    };
  }
  function JsAssetManager$loadSelectedFile$lambda(this$0) {
    return function (data) {
      var tmp0_safe_receiver = this$0.j5v_1;
      return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.t1c(new Uint8BufferImpl(new Uint8Array(data)));
    };
  }
  function JsAssetManager$loadSelectedFile$lambda_0(this$0) {
    return function (e) {
      var tmp0_safe_receiver = this$0.j5v_1;
      return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.u1c(e);
    };
  }
  function JsAssetManager$loadAndPrepareTexture$slambda($assetPath, resultContinuation) {
    this.l5w_1 = $assetPath;
    CoroutineImpl.call(this, resultContinuation);
  }
  JsAssetManager$loadAndPrepareTexture$slambda.prototype.v54 = function ($this$$receiver, it, $cont) {
    var tmp = this.w54($this$$receiver, it, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  JsAssetManager$loadAndPrepareTexture$slambda.prototype.kc = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE();
    return this.v54(tmp, p2 instanceof AssetManager ? p2 : THROW_CCE(), $cont);
  };
  JsAssetManager$loadAndPrepareTexture$slambda.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 2;
            this.k7_1 = 1;
            suspendResult = this.n5w_1.r1y(this.l5w_1, null, this, 2, null);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return suspendResult;
          case 2:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 2) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  JsAssetManager$loadAndPrepareTexture$slambda.prototype.w54 = function ($this$$receiver, it, completion) {
    var i = new JsAssetManager$loadAndPrepareTexture$slambda(this.l5w_1, completion);
    i.m5w_1 = $this$$receiver;
    i.n5w_1 = it;
    return i;
  };
  JsAssetManager$loadAndPrepareTexture$slambda.$metadata$ = classMeta('JsAssetManager$loadAndPrepareTexture$slambda', undefined, undefined, undefined, [2], CoroutineImpl.prototype);
  function JsAssetManager$loadAndPrepareTexture$slambda_0($assetPath, resultContinuation) {
    var i = new JsAssetManager$loadAndPrepareTexture$slambda($assetPath, resultContinuation);
    var l = function ($this$$receiver, it, $cont) {
      return i.v54($this$$receiver, it, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function $loadRawCOROUTINE$7(_this__u8e3s4, rawRef, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.w5w_1 = _this__u8e3s4;
    this.x5w_1 = rawRef;
  }
  $loadRawCOROUTINE$7.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 2;
            this.k7_1 = 1;
            suspendResult = loadRaw(this.w5w_1, this.x5w_1.v1y_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var ARGUMENT = suspendResult;
            return new LoadedRawAsset(this.x5w_1, ARGUMENT);
          case 2:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 2) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  $loadRawCOROUTINE$7.$metadata$ = classMeta('$loadRawCOROUTINE$7', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $loadTextureCOROUTINE$8(_this__u8e3s4, textureRef, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.g5x_1 = _this__u8e3s4;
    this.h5x_1 = textureRef;
  }
  $loadTextureCOROUTINE$8.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 2;
            this.k7_1 = 1;
            suspendResult = loadImage(this.g5x_1, this.h5x_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var ARGUMENT = suspendResult;
            return new LoadedTextureAsset(this.h5x_1, ARGUMENT);
          case 2:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 2) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  $loadTextureCOROUTINE$8.$metadata$ = classMeta('$loadTextureCOROUTINE$8', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $loadImageCOROUTINE$9(_this__u8e3s4, ref, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.v5v_1 = _this__u8e3s4;
    this.w5v_1 = ref;
  }
  $loadImageCOROUTINE$9.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 4;
            var tmp_0 = this;
            tmp_0.x5v_1 = CompletableDeferred$default(null, 1, null);
            this.y5v_1 = this.v5v_1.t1w(this.w5v_1.y1y_1) ? this.w5v_1.y1y_1 : this.v5v_1.i5v_1 + '/' + this.w5v_1.y1y_1;
            this.z5v_1 = new Image();
            this.z5v_1.onload = JsAssetManager$loadImage$lambda(this.x5v_1, this.z5v_1);
            this.z5v_1.onerror = JsAssetManager$loadImage$lambda_0(this.y5v_1, this.x5v_1);
            this.z5v_1.crossOrigin = '';
            this.z5v_1.src = this.y5v_1;
            if (this.w5v_1.b1z_1) {
              this.k7_1 = 2;
              suspendResult = this.x5v_1.v1c(this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.k7_1 = 1;
              suspendResult = this.x5v_1.v1c(this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            }

            break;
          case 1:
            var ARGUMENT = suspendResult;
            this.a5w_1 = new ImageTextureData(ARGUMENT, this.w5v_1.a1z_1);
            this.k7_1 = 3;
            continue $sm;
          case 2:
            var ARGUMENT_0 = suspendResult;
            this.a5w_1 = new ImageAtlasTextureData(ARGUMENT_0, this.w5v_1.c1z_1, this.w5v_1.d1z_1, this.w5v_1.a1z_1);
            this.k7_1 = 3;
            continue $sm;
          case 3:
            return this.a5w_1;
          case 4:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 4) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  $loadImageCOROUTINE$9.$metadata$ = classMeta('$loadImageCOROUTINE$9', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $loadAndPrepareTextureCOROUTINE$13(_this__u8e3s4, assetPath, props, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.q5x_1 = _this__u8e3s4;
    this.r5x_1 = assetPath;
    this.s5x_1 = props;
  }
  $loadAndPrepareTextureCOROUTINE$13.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 2;
            var tmp_0 = this;
            var tmp_1 = this.q5x_1.a1w(this.r5x_1);
            tmp_0.t5x_1 = Texture2d_init_$Create$(this.s5x_1, tmp_1, JsAssetManager$loadAndPrepareTexture$slambda_0(this.r5x_1, null));
            this.k7_1 = 1;
            suspendResult = this.q5x_1.q1y(this.r5x_1, this.s5x_1.b54_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var data = suspendResult;
            this.t5x_1.d55(TextureLoader_getInstance().u5x(this.q5x_1.g5v_1, this.s5x_1, data));
            this.t5x_1.f55(LoadingState_LOADED_getInstance());
            return this.t5x_1;
          case 2:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 2) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  $loadAndPrepareTextureCOROUTINE$13.$metadata$ = classMeta('$loadAndPrepareTextureCOROUTINE$13', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function JsAssetManager(props, ctx) {
    Companion_getInstance_52();
    AssetManager.call(this);
    this.g5v_1 = ctx;
    var tmp = this;
    Companion_getInstance_52();
    Companion_getInstance_52();
    tmp.h5v_1 = new FontMapGenerator(2048, 2048, props, this, this.g5v_1);
    this.i5v_1 = props.z5q_1;
    this.j5v_1 = null;
    var tmp_0 = this;
    tmp_0.k5v_1 = JsAssetManager$onFileSelectionChanged$lambda(this);
    var tmp_1 = this;
    var tmp$ret$1;
    {
      var tmp0_apply = document.createElement('input');
      {
      }
      {
        tmp0_apply.setAttribute('type', 'file');
        tmp0_apply.addEventListener('change', this.k5v_1);
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_apply;
        }
        tmp$ret$0.style.display = 'none';
        var tmp0_safe_receiver = document.body;
        if (tmp0_safe_receiver == null)
          null;
        else
          tmp0_safe_receiver.appendChild(tmp0_apply);
      }
      tmp$ret$1 = tmp0_apply;
    }
    tmp_1.l5v_1 = tmp$ret$1;
    this.m5v_1 = new KeyValueStorageJs();
  }
  JsAssetManager.prototype.g1v = function (rawRef, $cont) {
    var tmp = new $loadRawCOROUTINE$7(this, rawRef, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  JsAssetManager.prototype.f1v = function (textureRef, $cont) {
    var tmp = new $loadTextureCOROUTINE$8(this, textureRef, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  JsAssetManager.prototype.d1y = function (font, fontScale, outMetrics) {
    return this.h5v_1.d1y(font, fontScale, outMetrics);
  };
  JsAssetManager.prototype.t1y = function (assetPath, props, $cont) {
    var tmp = new $loadAndPrepareTextureCOROUTINE$13(this, assetPath, props, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  JsAssetManager.prototype.u1y = function (assetPath, $cont) {
    var tmp;
    if (this.t1w(assetPath)) {
      tmp = new AudioClip(assetPath);
    } else {
      tmp = new AudioClip(this.i5v_1 + '/' + assetPath);
    }
    return tmp;
  };
  JsAssetManager.$metadata$ = classMeta('JsAssetManager', undefined, undefined, undefined, undefined, AssetManager.prototype);
  function renderFrame($this, time) {
    var dt = (time - $this.i5s_1) / 1000.0;
    $this.i5s_1 = time;
    $this.n2d(window.devicePixelRatio);
    $this.c5s_1 = numberToInt(window.innerWidth * window.devicePixelRatio);
    $this.d5s_1 = numberToInt(window.innerHeight * window.devicePixelRatio);
    if (!($this.c5s_1 === $this.f5s_1.width) ? true : !($this.d5s_1 === $this.f5s_1.height)) {
      $this.f5s_1.width = $this.c5s_1;
      $this.f5s_1.height = $this.d5s_1;
    }
    $this.j2f(dt);
    draw($this);
    $this.g5s_1.finish();
    var tmp = window;
    tmp.requestAnimationFrame(JsContext$renderFrame$lambda($this));
  }
  function draw($this) {
    var tmp$ret$0;
    {
      var tmp0_isNotEmpty = $this.c2f();
      tmp$ret$0 = !tmp0_isNotEmpty.q();
    }
    if (tmp$ret$0) {
      $this.a5s_1.v5x($this.c2f());
      $this.c2f().t7();
    }
    $this.s2d().t1z();
    var inductionVariable = 0;
    var last = $this.v2d().m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var j = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if ($this.v2d().r(j).b4x_1) {
          drawOffscreen($this, $this.v2d().r(j));
          $this.v2d().r(j).t4z($this);
        }
      }
       while (inductionVariable <= last);
    var inductionVariable_0 = 0;
    var last_0 = $this.u2d().m() - 1 | 0;
    if (inductionVariable_0 <= last_0)
      do {
        var i = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var scene = $this.u2d().r(i);
        if (scene.f2g()) {
          doOffscreenPasses($this, scene, $this);
          $this.a5s_1.y5t(scene.w2e_1.i50());
          scene.w2e_1.t4z($this);
        }
      }
       while (inductionVariable_0 <= last_0);
    var tmp$ret$1;
    {
      var tmp1_isNotEmpty = $this.b5s_1;
      tmp$ret$1 = !tmp1_isNotEmpty.q();
    }
    if (tmp$ret$1) {
      {
        var tmp2_forEach = $this.b5s_1;
        var tmp0_iterator = tmp2_forEach.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          {
            element();
          }
        }
      }
      $this.b5s_1.t7();
    }
  }
  function doOffscreenPasses($this, scene, ctx) {
    $this.l5s_1.t7();
    var inductionVariable = 0;
    var last = scene.b2f().m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var rp = scene.b2f().r(i);
        if (rp.b4x_1) {
          var tmp1_this = $this;
          {
            var tmp0_plusAssign = tmp1_this.k5s_1;
            tmp0_plusAssign.b(rp);
          }
        } else {
          var tmp2_this = $this;
          {
            var tmp1_plusAssign = tmp2_this.l5s_1;
            tmp1_plusAssign.b(rp);
          }
        }
      }
       while (inductionVariable <= last);
    $l$loop_2: while (true) {
      var tmp$ret$0;
      {
        var tmp2_isNotEmpty = $this.k5s_1;
        tmp$ret$0 = !tmp2_isNotEmpty.q();
      }
      if (!tmp$ret$0) {
        break $l$loop_2;
      }
      var anyDrawn = false;
      var inductionVariable_0 = 0;
      var last_0 = $this.k5s_1.m() - 1 | 0;
      if (inductionVariable_0 <= last_0)
        $l$loop_1: do {
          var i_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          var pass = $this.k5s_1.r(i_0);
          var skip = false;
          var inductionVariable_1 = 0;
          var last_1 = pass.e2p().m() - 1 | 0;
          if (inductionVariable_1 <= last_1)
            $l$loop_0: do {
              var j = inductionVariable_1;
              inductionVariable_1 = inductionVariable_1 + 1 | 0;
              var dep = pass.e2p().r(j);
              if (!contains($this.l5s_1, dep)) {
                skip = true;
                break $l$loop_0;
              }
            }
             while (inductionVariable_1 <= last_1);
          if (!skip) {
            anyDrawn = true;
            var tmp5_this = $this;
            {
              var tmp3_minusAssign = tmp5_this.k5s_1;
              tmp3_minusAssign.c4(pass);
            }
            var tmp6_this = $this;
            {
              var tmp4_plusAssign = tmp6_this.l5s_1;
              tmp4_plusAssign.b(pass);
            }
            drawOffscreen($this, pass);
            pass.t4z(ctx);
            break $l$loop_1;
          }
        }
         while (inductionVariable_0 <= last_0);
      if (!anyDrawn) {
        var tmp$ret$4;
        {
          var tmp$ret$3;
          {
            var tmp2_eExt = Log_getInstance();
            var tmp$ret$2;
            {
              var tmp1_logExt = Level_ERROR_getInstance();
              var tmp0_log = getKClassFromExpression($this).ei();
              var tmp;
              if (tmp1_logExt.e1w_1 >= tmp2_eExt.y1v_1.e1w_1) {
                var tmp_0 = tmp2_eExt.z1v_1;
                var tmp$ret$1;
                {
                  tmp$ret$1 = 'Failed to render all offscreen passes, remaining:';
                }
                tmp = tmp_0(tmp1_logExt, tmp0_log, tmp$ret$1);
              }
              tmp$ret$2 = tmp;
            }
            tmp$ret$3 = tmp$ret$2;
          }
          tmp$ret$4 = tmp$ret$3;
        }
        {
          var tmp5_forEach = $this.k5s_1;
          var tmp0_iterator = tmp5_forEach.h();
          while (tmp0_iterator.n()) {
            var element = tmp0_iterator.o();
            {
              var tmp$ret$8;
              {
                var tmp$ret$7;
                {
                  var tmp2_eExt_0 = Log_getInstance();
                  var tmp$ret$6;
                  {
                    var tmp1_logExt_0 = Level_ERROR_getInstance();
                    var tmp0_log_0 = getKClassFromExpression($this).ei();
                    var tmp_1;
                    if (tmp1_logExt_0.e1w_1 >= tmp2_eExt_0.y1v_1.e1w_1) {
                      var tmp_2 = tmp2_eExt_0.z1v_1;
                      var tmp$ret$5;
                      {
                        tmp$ret$5 = '  ' + element.il();
                      }
                      tmp_1 = tmp_2(tmp1_logExt_0, tmp0_log_0, tmp$ret$5);
                    }
                    tmp$ret$6 = tmp_1;
                  }
                  tmp$ret$7 = tmp$ret$6;
                }
                tmp$ret$8 = tmp$ret$7;
              }
            }
          }
        }
        $this.k5s_1.t7();
        break $l$loop_2;
      }
    }
  }
  function drawOffscreen($this, offscreenPass) {
    var tmp0_subject = offscreenPass;
    if (tmp0_subject instanceof OffscreenRenderPass2d)
      offscreenPass.f2d_1.t5t($this);
    else {
      if (tmp0_subject instanceof OffscreenRenderPassCube)
        offscreenPass.j51_1.t5t($this);
      else {
        if (tmp0_subject instanceof OffscreenRenderPass2dPingPong)
          drawOffscreenPingPong($this, offscreenPass);
        else {
          throw IllegalArgumentException_init_$Create$('Offscreen pass type not implemented: ' + offscreenPass);
        }
      }
    }
  }
  function drawOffscreenPingPong($this, offscreenPass) {
    var inductionVariable = 0;
    var last = offscreenPass.t5y_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp1_safe_receiver = offscreenPass.w5y_1;
        if (tmp1_safe_receiver == null)
          null;
        else
          tmp1_safe_receiver(i);
        offscreenPass.u5y_1.f2d_1.t5t($this);
        var tmp2_safe_receiver = offscreenPass.x5y_1;
        if (tmp2_safe_receiver == null)
          null;
        else
          tmp2_safe_receiver(i);
        offscreenPass.v5y_1.f2d_1.t5t($this);
      }
       while (inductionVariable < last);
  }
  function InitProps() {
    this.x5q_1 = 'glCanvas';
    this.y5q_1 = mutableSetOf(['F5', 'F11']);
    this.z5q_1 = './assets';
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$();
    }
    tmp.a5r_1 = tmp$ret$0;
  }
  InitProps.$metadata$ = classMeta('InitProps');
  function JsContext$lambda(this$0) {
    return function (it) {
      this$0.e5s_1 = !(document.fullscreenElement == null);
      return null;
    };
  }
  function JsContext$lambda_0(this$0) {
    return function (e) {
      var tmp;
      if (this$0.t2d().m1r(this$0)) {
        tmp = delete e['returnValue'];
      } else {
        e.preventDefault();
        tmp = e.returnValue = 'Are you sure you want to exit?';
      }
      return null;
    };
  }
  function JsContext$lambda_1(this$0) {
    return function (it) {
      this$0.o2d(true);
      return null;
    };
  }
  function JsContext$lambda_2(this$0) {
    return function (it) {
      this$0.o2d(false);
      return null;
    };
  }
  function Event$preventDefault$ref() {
    var l = function (p0) {
      p0.preventDefault();
      return Unit_getInstance();
    };
    l.callableName = 'preventDefault';
    return l;
  }
  function JsContext$renderFrame$lambda(this$0) {
    return function (t) {
      renderFrame(this$0, t);
      return Unit_getInstance();
    };
  }
  function JsContext$run$lambda(this$0) {
    return function (t) {
      renderFrame(this$0, t);
      return Unit_getInstance();
    };
  }
  function JsContext(props) {
    KoolContext.call(this);
    this.w5r_1 = props;
    this.x5r_1 = new JsAssetManager(this.w5r_1, this);
    this.z5r_1 = new ShaderGeneratorImplWebGl();
    this.a5s_1 = new QueueRendererWebGl(this);
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.b5s_1 = tmp$ret$0;
    this.c5s_1 = 0;
    this.d5s_1 = 0;
    this.e5s_1 = false;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = ArrayList_init_$Create$_0();
    }
    tmp_0.h5s_1 = tmp$ret$1;
    this.i5s_1 = 0.0;
    this.j5s_1 = new GlCapabilities();
    var tmp_1 = this;
    var tmp$ret$2;
    {
      tmp$ret$2 = ArrayList_init_$Create$_0();
    }
    tmp_1.k5s_1 = tmp$ret$2;
    var tmp_2 = this;
    var tmp$ret$3;
    {
      tmp$ret$3 = LinkedHashSet_init_$Create$();
    }
    tmp_2.l5s_1 = tmp$ret$3;
    var tmp_3 = this;
    var tmp_4 = document.getElementById(this.w5r_1.x5q_1);
    var tmp0_elvis_lhs = tmp_4 instanceof HTMLCanvasElement ? tmp_4 : null;
    var tmp_5;
    if (tmp0_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$('canvas element not found! Add a canvas with id "' + this.w5r_1.x5q_1 + '" to your html.');
    } else {
      tmp_5 = tmp0_elvis_lhs;
    }
    tmp_3.f5s_1 = tmp_5;
    this.f5s_1.style.width = '100%';
    this.f5s_1.style.height = '100%';
    this.f5s_1.width = numberToInt(window.innerWidth * window.devicePixelRatio);
    this.f5s_1.height = numberToInt(window.innerHeight * window.devicePixelRatio);
    var webGlCtx = this.f5s_1.getContext('webgl2');
    if (webGlCtx == null) {
      webGlCtx = this.f5s_1.getContext('experimental-webgl2');
    }
    if (!(webGlCtx == null)) {
      var tmp_6 = this;
      tmp_6.g5s_1 = webGlCtx instanceof WebGL2RenderingContext ? webGlCtx : THROW_CCE();
      var tmp1_this = this;
      {
        var tmp0_plusAssign = tmp1_this.h5s_1;
        tmp0_plusAssign.b('WebGL 2.0');
      }
      var tmp_7 = this.j5s_1;
      var tmp$ret$4;
      {
        var tmp1_asDynamic = this.g5s_1.getParameter(WebGLRenderingContext.MAX_TEXTURE_IMAGE_UNITS);
        tmp$ret$4 = tmp1_asDynamic;
      }
      tmp_7.y5y_1 = tmp$ret$4;
      this.j5s_1.z5y_1 = this.g5s_1.getExtension('EXT_color_buffer_float') != null;
    } else {
      alert('Unable to initialize WebGL2 context. Your browser may not support it.');
      throw KoolException_init_$Create$('WebGL2 context required');
    }
    var tmp2_elvis_lhs = this.g5s_1.getExtension('EXT_texture_filter_anisotropic');
    var tmp3_elvis_lhs = tmp2_elvis_lhs == null ? this.g5s_1.getExtension('MOZ_EXT_texture_filter_anisotropic') : tmp2_elvis_lhs;
    var extAnisotropic = tmp3_elvis_lhs == null ? this.g5s_1.getExtension('WEBKIT_EXT_texture_filter_anisotropic') : tmp3_elvis_lhs;
    if (extAnisotropic != null) {
      var tmp_8 = this.j5s_1;
      var tmp_9 = this.g5s_1.getParameter(extAnisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
      tmp_8.a5z_1 = (!(tmp_9 == null) ? typeof tmp_9 === 'number' : false) ? tmp_9 : THROW_CCE();
      this.j5s_1.b5z_1 = extAnisotropic.TEXTURE_MAX_ANISOTROPY_EXT;
    }
    var tmp_10 = document;
    tmp_10.onfullscreenchange = JsContext$lambda(this);
    var tmp_11 = window;
    tmp_11.onbeforeunload = JsContext$lambda_0(this);
    var tmp_12 = window;
    tmp_12.onfocus = JsContext$lambda_1(this);
    var tmp_13 = window;
    tmp_13.onblur = JsContext$lambda_2(this);
    this.n2d(window.devicePixelRatio);
    this.c5s_1 = this.f5s_1.width;
    this.d5s_1 = this.f5s_1.height;
    this.f5s_1.oncontextmenu = Event$preventDefault$ref();
    this.y5r_1 = new JsInputManager(this.f5s_1, this.w5r_1);
  }
  JsContext.prototype.q2d = function () {
    return this.x5r_1;
  };
  JsContext.prototype.r2d = function () {
    return this.y5r_1;
  };
  JsContext.prototype.d5r = function () {
    return this.g5s_1;
  };
  JsContext.prototype.m1c = function () {
    var tmp = window;
    tmp.requestAnimationFrame(JsContext$run$lambda(this));
  };
  JsContext.prototype.d2f = function () {
  };
  JsContext.prototype.e2f = function (shader, pipelineLayout) {
    var src = (new GlslGenerator()).h3a(shader.z2n_1);
    if (shader.z2n_1.m2n_1) {
      src.w39();
    }
    return new ShaderCode(src.u39_1, src.v39_1);
  };
  JsContext.prototype.f2f = function (result) {
    result.h4z(0, 0, this.c5s_1, this.d5s_1);
  };
  JsContext.$metadata$ = classMeta('JsContext', undefined, undefined, undefined, undefined, KoolContext.prototype);
  function GlCapabilities() {
    this.y5y_1 = 16;
    this.z5y_1 = false;
    this.a5z_1 = 1;
    this.b5z_1 = 0;
  }
  GlCapabilities.$metadata$ = classMeta('GlCapabilities');
  function get_elementX(_this__u8e3s4) {
    var tmp = _this__u8e3s4.clientX;
    var tmp_0 = _this__u8e3s4.target;
    var tmp0_safe_receiver = tmp_0 instanceof HTMLCanvasElement ? tmp_0 : null;
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.clientLeft;
    var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : tmp1_safe_receiver;
    return tmp - (tmp2_elvis_lhs == null ? 0.0 : tmp2_elvis_lhs);
  }
  function get_elementY(_this__u8e3s4) {
    var tmp = _this__u8e3s4.clientY;
    var tmp_0 = _this__u8e3s4.target;
    var tmp0_safe_receiver = tmp_0 instanceof HTMLCanvasElement ? tmp_0 : null;
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.clientTop;
    var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : tmp1_safe_receiver;
    return tmp - (tmp2_elvis_lhs == null ? 0.0 : tmp2_elvis_lhs);
  }
  function pointerMovementX($this, ev) {
    var tmp = ev.movementX;
    return ((!(tmp == null) ? typeof tmp === 'number' : false) ? tmp : THROW_CCE()) * window.devicePixelRatio;
  }
  function pointerMovementY($this, ev) {
    var tmp = ev.movementY;
    return ((!(tmp == null) ? typeof tmp === 'number' : false) ? tmp : THROW_CCE()) * window.devicePixelRatio;
  }
  function installInputHandlers($this) {
    $this.i5z_1.onmousemove = JsInputManager$installInputHandlers$lambda($this);
    $this.i5z_1.onmousedown = JsInputManager$installInputHandlers$lambda_0($this);
    $this.i5z_1.onmouseup = JsInputManager$installInputHandlers$lambda_1($this);
    $this.i5z_1.onmouseleave = JsInputManager$installInputHandlers$lambda_2($this);
    $this.i5z_1.onwheel = JsInputManager$installInputHandlers$lambda_3($this);
    var tmp = document;
    tmp.addEventListener('pointerlockchange', JsInputManager$installInputHandlers$lambda_4($this), false);
    $this.i5z_1.addEventListener('touchstart', JsInputManager$installInputHandlers$lambda_5($this), false);
    $this.i5z_1.addEventListener('touchend', JsInputManager$installInputHandlers$lambda_6($this), false);
    $this.i5z_1.addEventListener('touchcancel', JsInputManager$installInputHandlers$lambda_7($this), false);
    $this.i5z_1.addEventListener('touchmove', JsInputManager$installInputHandlers$lambda_8($this), false);
    var tmp_0 = document;
    tmp_0.onkeydown = JsInputManager$installInputHandlers$lambda_9($this);
    var tmp_1 = document;
    tmp_1.onkeyup = JsInputManager$installInputHandlers$lambda_10($this);
  }
  function handleKeyDown($this, ev) {
    var keyCode = toKeyCode(ev, $this);
    var localKeyCode = toLocalKeyCode(ev, $this);
    var mods = 0;
    if (!(keyCode.l2b() === 0) ? true : !(localKeyCode.l2b() === 0)) {
      if (ev.altKey) {
        var tmp = mods;
        Companion_getInstance_0();
        mods = tmp | 4;
      }
      if (ev.ctrlKey) {
        var tmp_0 = mods;
        Companion_getInstance_0();
        mods = tmp_0 | 2;
      }
      if (ev.shiftKey) {
        var tmp_1 = mods;
        Companion_getInstance_0();
        mods = tmp_1 | 1;
      }
      if (ev.metaKey) {
        var tmp_2 = mods;
        Companion_getInstance_0();
        mods = tmp_2 | 8;
      }
      Companion_getInstance_0();
      var event = 2;
      if (ev.repeat) {
        var tmp_3 = event;
        Companion_getInstance_0();
        event = tmp_3 | 4;
      }
      $this.i2b(new KeyEvent(keyCode, localKeyCode, event, mods));
    }
    var tmp_4;
    if (ev.key.length === 1) {
      var tmp_5 = mods;
      Companion_getInstance_0();
      tmp_4 = (tmp_5 & ~1) === 0;
    } else {
      tmp_4 = false;
    }
    if (tmp_4) {
      $this.j2b(charSequenceGet(ev.key, 0));
    }
    if (!$this.j5z_1.y5q_1.p(ev.code)) {
      ev.preventDefault();
    }
  }
  function handleKeyUp($this, ev) {
    var keyCode = toKeyCode(ev, $this);
    var localKeyCode = toLocalKeyCode(ev, $this);
    if (!(keyCode.l2b() === 0) ? true : !(localKeyCode.l2b() === 0)) {
      var mods = 0;
      if (ev.altKey) {
        var tmp = mods;
        Companion_getInstance_0();
        mods = tmp | 4;
      }
      if (ev.ctrlKey) {
        var tmp_0 = mods;
        Companion_getInstance_0();
        mods = tmp_0 | 2;
      }
      if (ev.shiftKey) {
        var tmp_1 = mods;
        Companion_getInstance_0();
        mods = tmp_1 | 1;
      }
      if (ev.metaKey) {
        var tmp_2 = mods;
        Companion_getInstance_0();
        mods = tmp_2 | 8;
      }
      Companion_getInstance_0();
      $this.i2b(new KeyEvent(keyCode, localKeyCode, 1, mods));
    }
    if (!$this.j5z_1.y5q_1.p(ev.code)) {
      ev.preventDefault();
    }
  }
  function toLocalKeyCode(_this__u8e3s4, $this) {
    var specialKey = Companion_getInstance_53().o5z_1.b3(_this__u8e3s4.code);
    var tmp;
    if (!(specialKey == null)) {
      tmp = new LocalKeyCode(specialKey.l2b(), specialKey.il());
    } else {
      var tmp0_subject = _this__u8e3s4.key.length;
      var tmp_0;
      if (tmp0_subject === 1) {
        var tmp$ret$0;
        {
          var tmp0__get_code__88qj9g = uppercaseChar(charSequenceGet(_this__u8e3s4.key, 0));
          tmp$ret$0 = Char__toInt_impl_vasixd(tmp0__get_code__88qj9g);
        }
        var tmp_1 = tmp$ret$0;
        tmp_0 = LocalKeyCode_init_$Create$(tmp_1, null, 2, null);
      } else {
        tmp_0 = LocalKeyCode_init_$Create$(0, null, 2, null);
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function toKeyCode(_this__u8e3s4, $this) {
    var tmp1_elvis_lhs = Companion_getInstance_53().o5z_1.b3(_this__u8e3s4.code);
    var tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp0_subject = _this__u8e3s4.key.length;
      var tmp_0;
      if (tmp0_subject === 1) {
        var tmp$ret$0;
        {
          var tmp0__get_code__88qj9g = uppercaseChar(charSequenceGet(_this__u8e3s4.key, 0));
          tmp$ret$0 = Char__toInt_impl_vasixd(tmp0__get_code__88qj9g);
        }
        var tmp_1 = tmp$ret$0;
        tmp_0 = UniversalKeyCode_init_$Create$(tmp_1, null, 2, null);
      } else {
        tmp_0 = UniversalKeyCode_init_$Create$(0, null, 2, null);
      }
      tmp = tmp_0;
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  }
  function Companion_53() {
    Companion_instance_53 = this;
    this.o5z_1 = mutableMapOf([to('ControlLeft', Companion_getInstance_0().b29_1), to('ControlRight', Companion_getInstance_0().c29_1), to('ShiftLeft', Companion_getInstance_0().d29_1), to('ShiftRight', Companion_getInstance_0().e29_1), to('AltLeft', Companion_getInstance_0().f29_1), to('AltRight', Companion_getInstance_0().g29_1), to('MetaLeft', Companion_getInstance_0().h29_1), to('MetaRight', Companion_getInstance_0().i29_1), to('Escape', Companion_getInstance_0().j29_1), to('ContextMenu', Companion_getInstance_0().k29_1), to('Enter', Companion_getInstance_0().l29_1), to('NumpadEnter', Companion_getInstance_0().m29_1), to('NumpadDivide', Companion_getInstance_0().n29_1), to('NumpadMultiply', Companion_getInstance_0().o29_1), to('NumpadAdd', Companion_getInstance_0().p29_1), to('NumpadSubtract', Companion_getInstance_0().q29_1), to('Backspace', Companion_getInstance_0().r29_1), to('Tab', Companion_getInstance_0().s29_1), to('Delete', Companion_getInstance_0().t29_1), to('Insert', Companion_getInstance_0().u29_1), to('Home', Companion_getInstance_0().v29_1), to('End', Companion_getInstance_0().w29_1), to('PageUp', Companion_getInstance_0().x29_1), to('PageDown', Companion_getInstance_0().y29_1), to('ArrowLeft', Companion_getInstance_0().z29_1), to('ArrowRight', Companion_getInstance_0().a2a_1), to('ArrowUp', Companion_getInstance_0().b2a_1), to('ArrowDown', Companion_getInstance_0().c2a_1), to('F1', Companion_getInstance_0().d2a_1), to('F2', Companion_getInstance_0().e2a_1), to('F3', Companion_getInstance_0().f2a_1), to('F4', Companion_getInstance_0().g2a_1), to('F5', Companion_getInstance_0().h2a_1), to('F6', Companion_getInstance_0().i2a_1), to('F7', Companion_getInstance_0().j2a_1), to('F8', Companion_getInstance_0().k2a_1), to('F9', Companion_getInstance_0().l2a_1), to('F10', Companion_getInstance_0().m2a_1), to('F11', Companion_getInstance_0().n2a_1), to('F12', Companion_getInstance_0().o2a_1), to('Space', UniversalKeyCode_init_$Create$_0(_Char___init__impl__6a9atx(32)))]);
  }
  Companion_53.$metadata$ = objectMeta('Companion');
  var Companion_instance_53;
  function Companion_getInstance_53() {
    if (Companion_instance_53 == null)
      new Companion_53();
    return Companion_instance_53;
  }
  function PointerLockState($outer, canvas) {
    this.t5z_1 = $outer;
    this.p5z_1 = canvas;
    this.q5z_1 = false;
    this.r5z_1 = false;
    this.s5z_1 = CursorMode_NORMAL_getInstance();
  }
  PointerLockState.prototype.u5z = function (canvas) {
    if (!this.q5z_1) {
      canvas.requestPointerLock();
    }
  };
  PointerLockState.prototype.v5z = function (canvas) {
    var tmp = this;
    var tmp_0 = document.pointerLockElement === canvas;
    tmp.q5z_1 = (!(tmp_0 == null) ? typeof tmp_0 === 'boolean' : false) ? tmp_0 : THROW_CCE();
    if (!this.q5z_1 ? !this.r5z_1 : false) {
      var tmp$ret$3;
      {
        var tmp$ret$2;
        {
          var tmp0_iExt = Log_getInstance();
          var tmp$ret$1;
          {
            var tmp1_logExt = Level_INFO_getInstance();
            var tmp0_log = getKClassFromExpression(this).ei();
            var tmp_1;
            if (tmp1_logExt.e1w_1 >= tmp0_iExt.y1v_1.e1w_1) {
              var tmp_2 = tmp0_iExt.z1v_1;
              var tmp$ret$0;
              {
                tmp$ret$0 = 'pointer lock exited by user';
              }
              tmp_1 = tmp_2(tmp1_logExt, tmp0_log, tmp$ret$0);
            }
            tmp$ret$1 = tmp_1;
          }
          tmp$ret$2 = tmp$ret$1;
        }
        tmp$ret$3 = tmp$ret$2;
      }
      var tmp_3 = Companion_getInstance_0().j29_1;
      Companion_getInstance_0();
      this.t5z_1.i2b(KeyEvent_init_$Create$(tmp_3, 2, 0));
      var tmp_4 = Companion_getInstance_0().j29_1;
      Companion_getInstance_0();
      this.t5z_1.i2b(KeyEvent_init_$Create$(tmp_4, 1, 0));
    }
    this.r5z_1 = false;
  };
  PointerLockState.prototype.w5z = function () {
    if (this.s5z_1.equals(CursorMode_LOCKED_getInstance()) ? !this.q5z_1 : false) {
      this.u5z(this.p5z_1);
    }
  };
  PointerLockState.$metadata$ = classMeta('PointerLockState');
  function JsInputManager$installInputHandlers$lambda(this$0) {
    return function (ev) {
      var bounds = this$0.i5z_1.getBoundingClientRect();
      var tmp;
      if (this$0.k5z_1.q5z_1) {
        var tmp0_this = this$0.l5z_1;
        tmp0_this.d23(tmp0_this.e23() + pointerMovementX(this$0, ev));
        var tmp1_this = this$0.l5z_1;
        tmp = tmp1_this.f23(tmp1_this.g23() + pointerMovementY(this$0, ev));
      } else {
        this$0.l5z_1.d23(ev.clientX * window.devicePixelRatio - bounds.left);
        tmp = this$0.l5z_1.f23(ev.clientY * window.devicePixelRatio - bounds.top);
      }
      this$0.p27(this$0.l5z_1.e23(), this$0.l5z_1.g23());
      return Unit_getInstance();
    };
  }
  function JsInputManager$installInputHandlers$lambda_0(this$0) {
    return function (ev) {
      this$0.k5z_1.w5z();
      var changeMask = ev.buttons & ~this$0.m5z_1;
      this$0.m5z_1 = ev.buttons;
      var inductionVariable = 0;
      var tmp;
      if (inductionVariable <= 7) {
        do {
          var btn = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (!((changeMask & 1 << btn) === 0)) {
            this$0.k2b(btn, true);
          }
        }
         while (inductionVariable <= 7);
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function JsInputManager$installInputHandlers$lambda_1(this$0) {
    return function (ev) {
      var changeMask = ~ev.buttons & this$0.m5z_1;
      this$0.m5z_1 = ev.buttons;
      var inductionVariable = 0;
      var tmp;
      if (inductionVariable <= 7) {
        do {
          var btn = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (!((changeMask & 1 << btn) === 0)) {
            this$0.k2b(btn, false);
          }
        }
         while (inductionVariable <= 7);
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function JsInputManager$installInputHandlers$lambda_2(this$0) {
    return function (it) {
      this$0.s27();
      return Unit_getInstance();
    };
  }
  function JsInputManager$installInputHandlers$lambda_3(this$0) {
    return function (ev) {
      var yTicks = -ev.deltaY / 3.0;
      var xTicks = -ev.deltaX / 3.0;
      var tmp;
      if (ev.deltaMode === 0) {
        yTicks = yTicks / 30.0;
        xTicks = xTicks / 30.0;
        tmp = Unit_getInstance();
      }
      this$0.r27(xTicks, yTicks);
      ev.preventDefault();
      return Unit_getInstance();
    };
  }
  function JsInputManager$installInputHandlers$lambda_4(this$0) {
    return function (it) {
      this$0.k5z_1.v5z(this$0.i5z_1);
      return Unit_getInstance();
    };
  }
  function JsInputManager$installInputHandlers$lambda_5(this$0) {
    return function (ev) {
      ev.preventDefault();
      var changedTouches = (ev instanceof TouchEvent ? ev : THROW_CCE()).changedTouches;
      var inductionVariable = 0;
      var last = changedTouches.length;
      var tmp;
      if (inductionVariable < last) {
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var touch = changedTouches.item(i);
          this$0.l27(touch.identifier, get_elementX(touch), get_elementY(touch));
        }
         while (inductionVariable < last);
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function JsInputManager$installInputHandlers$lambda_6(this$0) {
    return function (ev) {
      ev.preventDefault();
      var changedTouches = (ev instanceof TouchEvent ? ev : THROW_CCE()).changedTouches;
      var inductionVariable = 0;
      var last = changedTouches.length;
      var tmp;
      if (inductionVariable < last) {
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var touch = changedTouches.item(i);
          this$0.m27(touch.identifier);
        }
         while (inductionVariable < last);
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function JsInputManager$installInputHandlers$lambda_7(this$0) {
    return function (ev) {
      ev.preventDefault();
      var changedTouches = (ev instanceof TouchEvent ? ev : THROW_CCE()).changedTouches;
      var inductionVariable = 0;
      var last = changedTouches.length;
      var tmp;
      if (inductionVariable < last) {
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var touch = changedTouches.item(i);
          this$0.n27(touch.identifier);
        }
         while (inductionVariable < last);
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function JsInputManager$installInputHandlers$lambda_8(this$0) {
    return function (ev) {
      ev.preventDefault();
      var changedTouches = (ev instanceof TouchEvent ? ev : THROW_CCE()).changedTouches;
      var inductionVariable = 0;
      var last = changedTouches.length;
      var tmp;
      if (inductionVariable < last) {
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var touch = changedTouches.item(i);
          this$0.o27(touch.identifier, get_elementX(touch), get_elementY(touch));
        }
         while (inductionVariable < last);
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function JsInputManager$installInputHandlers$lambda_9(this$0) {
    return function (ev) {
      handleKeyDown(this$0, ev);
      return Unit_getInstance();
    };
  }
  function JsInputManager$installInputHandlers$lambda_10(this$0) {
    return function (ev) {
      handleKeyUp(this$0, ev);
      return Unit_getInstance();
    };
  }
  function JsInputManager(canvas, props) {
    Companion_getInstance_53();
    InputManager.call(this);
    this.i5z_1 = canvas;
    this.j5z_1 = props;
    this.k5z_1 = new PointerLockState(this, this.i5z_1);
    this.l5z_1 = MutableVec2d_init_$Create$();
    this.m5z_1 = 0;
    this.n5z_1 = CursorShape_DEFAULT_getInstance();
    installInputHandlers(this);
  }
  JsInputManager.prototype.x2a = function () {
    return this.k5z_1.s5z_1;
  };
  JsInputManager.$metadata$ = classMeta('JsInputManager', undefined, undefined, undefined, undefined, InputManager.prototype);
  function KeyValueStorageJs() {
  }
  KeyValueStorageJs.$metadata$ = classMeta('KeyValueStorageJs', [KeyValueStorage]);
  function get_glInternalFormat(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4;
    var tmp0 = tmp0_subject.y1();
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = WebGL2RenderingContext.R8;
        break;
      case 1:
        tmp = WebGL2RenderingContext.RG8;
        break;
      case 2:
        tmp = WebGL2RenderingContext.RGB8;
        break;
      case 3:
        tmp = WebGL2RenderingContext.RGBA8;
        break;
      case 4:
        tmp = WebGL2RenderingContext.R16F;
        break;
      case 5:
        tmp = WebGL2RenderingContext.RG16F;
        break;
      case 6:
        tmp = WebGL2RenderingContext.RGB16F;
        break;
      case 7:
        tmp = WebGL2RenderingContext.RGBA16F;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function get_pxSize(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4;
    var tmp0 = tmp0_subject.y1();
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = 1;
        break;
      case 1:
        tmp = 2;
        break;
      case 2:
        tmp = 3;
        break;
      case 3:
        tmp = 4;
        break;
      case 4:
        tmp = 2;
        break;
      case 5:
        tmp = 4;
        break;
      case 6:
        tmp = 6;
        break;
      case 7:
        tmp = 8;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function get_glOp(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4;
    var tmp0 = tmp0_subject.y1();
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = 0;
        break;
      case 1:
        tmp = WebGLRenderingContext.ALWAYS;
        break;
      case 2:
        tmp = WebGLRenderingContext.NEVER;
        break;
      case 3:
        tmp = WebGLRenderingContext.LESS;
        break;
      case 4:
        tmp = WebGLRenderingContext.LEQUAL;
        break;
      case 5:
        tmp = WebGLRenderingContext.GREATER;
        break;
      case 6:
        tmp = WebGLRenderingContext.GEQUAL;
        break;
      case 7:
        tmp = WebGLRenderingContext.EQUAL;
        break;
      case 8:
        tmp = WebGLRenderingContext.NOTEQUAL;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function get_glFormat(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4;
    var tmp0 = tmp0_subject.y1();
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = WebGL2RenderingContext.RED;
        break;
      case 1:
        tmp = WebGL2RenderingContext.RG;
        break;
      case 2:
        tmp = WebGLRenderingContext.RGB;
        break;
      case 3:
        tmp = WebGLRenderingContext.RGBA;
        break;
      case 4:
        tmp = WebGL2RenderingContext.RED;
        break;
      case 5:
        tmp = WebGL2RenderingContext.RG;
        break;
      case 6:
        tmp = WebGLRenderingContext.RGB;
        break;
      case 7:
        tmp = WebGLRenderingContext.RGBA;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function get_glType(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4;
    var tmp0 = tmp0_subject.y1();
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = WebGLRenderingContext.UNSIGNED_BYTE;
        break;
      case 1:
        tmp = WebGLRenderingContext.UNSIGNED_BYTE;
        break;
      case 2:
        tmp = WebGLRenderingContext.UNSIGNED_BYTE;
        break;
      case 3:
        tmp = WebGLRenderingContext.UNSIGNED_BYTE;
        break;
      case 4:
        tmp = WebGLRenderingContext.FLOAT;
        break;
      case 5:
        tmp = WebGLRenderingContext.FLOAT;
        break;
      case 6:
        tmp = WebGLRenderingContext.FLOAT;
        break;
      case 7:
        tmp = WebGLRenderingContext.FLOAT;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function Companion_54() {
    Companion_instance_54 = this;
    this.x5z_1 = new Long(1, 0);
  }
  Companion_54.$metadata$ = objectMeta('Companion');
  var Companion_instance_54;
  function Companion_getInstance_54() {
    if (Companion_instance_54 == null)
      new Companion_54();
    return Companion_instance_54;
  }
  function BufferResource(target, ctx) {
    Companion_getInstance_54();
    this.y5z_1 = target;
    var tmp = this;
    var tmp0_this = Companion_getInstance_54();
    var tmp1 = tmp0_this.x5z_1;
    tmp0_this.x5z_1 = tmp1.yl();
    tmp.z5z_1 = tmp1;
    this.a60_1 = ctx.g5s_1.createBuffer();
  }
  BufferResource.prototype.b60 = function (ctx) {
    ctx.s2d().n1z(this.z5z_1);
    ctx.g5s_1.deleteBuffer(this.a60_1);
  };
  BufferResource.prototype.c60 = function (ctx) {
    ctx.g5s_1.bindBuffer(this.y5z_1, this.a60_1);
  };
  BufferResource.prototype.d60 = function (data, usage, length, ctx) {
    var limit = data.f5n();
    var pos = data.qr();
    data.h3y();
    this.c60(ctx);
    ctx.s2d().n1z(this.z5z_1);
    ctx.g5s_1.bufferData(this.y5z_1, (data instanceof Float32BufferImpl ? data : THROW_CCE()).yh(), usage, 0, length);
    ctx.s2d().m1z(this.z5z_1, imul(data.b1w(), 4));
    data.j5f(limit);
    data.w4s(pos);
  };
  BufferResource.prototype.i60 = function (data, usage, length, ctx) {
    var limit = data.f5n();
    var pos = data.qr();
    data.h3y();
    this.c60(ctx);
    ctx.s2d().n1z(this.z5z_1);
    ctx.g5s_1.bufferData(this.y5z_1, (data instanceof MixedBufferImpl ? data : THROW_CCE()).yh(), usage, 0, length);
    ctx.s2d().m1z(this.z5z_1, data.b1w());
    data.j5f(limit);
    data.w4s(pos);
  };
  BufferResource.prototype.j60 = function (data, usage, length, ctx) {
    var limit = data.f5n();
    var pos = data.qr();
    data.h3y();
    this.c60(ctx);
    ctx.s2d().n1z(this.z5z_1);
    ctx.g5s_1.bufferData(this.y5z_1, (data instanceof Uint32BufferImpl ? data : THROW_CCE()).yh(), usage, 0, length);
    ctx.s2d().m1z(this.z5z_1, imul(data.b1w(), 4));
    data.j5f(limit);
    data.w4s(pos);
  };
  BufferResource.$metadata$ = classMeta('BufferResource');
  function mapPushConstants($this, pc) {
    $this.n60_1.b(pc);
    {
      var tmp0_forEach = pc.g52_1;
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          var tmp0_this = $this;
          {
            var tmp0_plusAssign = tmp0_this.t60_1;
            var tmp = Companion_getInstance_56();
            var tmp1_safe_receiver = $this.g61_1.m61_1.b3(element.l2u_1);
            var tmp1_plusAssign = tmp.p61(element, tmp1_safe_receiver == null ? null : tmp1_safe_receiver.r(0));
            tmp0_plusAssign.b(tmp1_plusAssign);
          }
        }
      }
    }
  }
  function mapUbo($this, ubo) {
    $this.o60_1.b(ubo);
    var uboLayout = $this.g61_1.n61_1.b3(ubo.il());
    if (!(uboLayout == null)) {
      var tmp0_this = $this;
      {
        var tmp0_plusAssign = tmp0_this.t60_1;
        var tmp1_plusAssign = new MappedUbo(ubo, uboLayout);
        tmp0_plusAssign.b(tmp1_plusAssign);
      }
    } else {
      {
        var tmp2_forEach = ubo.j2y_1;
        var tmp0_iterator = tmp2_forEach.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          {
            var location = $this.g61_1.m61_1.b3(element.l2u_1);
            if (!(location == null)) {
              var tmp0_this_0 = $this;
              {
                var tmp0_plusAssign_0 = tmp0_this_0.t60_1;
                var tmp1_plusAssign_0 = Companion_getInstance_56().p61(element, location.r(0));
                tmp0_plusAssign_0.b(tmp1_plusAssign_0);
              }
            } else {
              var tmp$ret$3;
              {
                var tmp$ret$2;
                {
                  var tmp2_eExt = Log_getInstance();
                  var tmp$ret$1;
                  {
                    var tmp1_logExt = Level_ERROR_getInstance();
                    var tmp0_log = getKClassFromExpression($this).ei();
                    var tmp;
                    if (tmp1_logExt.e1w_1 >= tmp2_eExt.y1v_1.e1w_1) {
                      var tmp_0 = tmp2_eExt.z1v_1;
                      var tmp$ret$0;
                      {
                        tmp$ret$0 = 'Uniform location not present for uniform ' + ubo.il() + '.' + element.l2u_1;
                      }
                      tmp = tmp_0(tmp1_logExt, tmp0_log, tmp$ret$0);
                    }
                    tmp$ret$1 = tmp;
                  }
                  tmp$ret$2 = tmp$ret$1;
                }
                tmp$ret$3 = tmp$ret$2;
              }
            }
          }
        }
      }
    }
  }
  function mapTexture1d($this, tex) {
    $this.p60_1.b(tex);
    var tmp0_safe_receiver = $this.g61_1.m61_1.b3(tex.il());
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        var tmp0_this = $this;
        {
          var tmp0_plusAssign = tmp0_this.t60_1;
          var tmp1_plusAssign = new MappedUniformTex1d(tex, $this.c61_1, tmp0_safe_receiver);
          tmp0_plusAssign.b(tmp1_plusAssign);
        }
        var tmp1_this = $this;
        tmp1_this.c61_1 = tmp1_this.c61_1 + tmp0_safe_receiver.m() | 0;
        tmp$ret$0 = Unit_getInstance();
      }
    }
  }
  function mapTexture2d($this, tex) {
    $this.q60_1.b(tex);
    var tmp0_safe_receiver = $this.g61_1.m61_1.b3(tex.il());
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        var tmp0_this = $this;
        {
          var tmp0_plusAssign = tmp0_this.t60_1;
          var tmp1_plusAssign = new MappedUniformTex2d(tex, $this.c61_1, tmp0_safe_receiver);
          tmp0_plusAssign.b(tmp1_plusAssign);
        }
        var tmp1_this = $this;
        tmp1_this.c61_1 = tmp1_this.c61_1 + tmp0_safe_receiver.m() | 0;
        tmp$ret$0 = Unit_getInstance();
      }
    }
  }
  function mapTexture3d($this, tex) {
    $this.r60_1.b(tex);
    var tmp0_safe_receiver = $this.g61_1.m61_1.b3(tex.il());
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        var tmp0_this = $this;
        {
          var tmp0_plusAssign = tmp0_this.t60_1;
          var tmp1_plusAssign = new MappedUniformTex3d(tex, $this.c61_1, tmp0_safe_receiver);
          tmp0_plusAssign.b(tmp1_plusAssign);
        }
        var tmp1_this = $this;
        tmp1_this.c61_1 = tmp1_this.c61_1 + tmp0_safe_receiver.m() | 0;
        tmp$ret$0 = Unit_getInstance();
      }
    }
  }
  function mapTextureCube($this, cubeMap) {
    $this.s60_1.b(cubeMap);
    var tmp0_safe_receiver = $this.g61_1.m61_1.b3(cubeMap.il());
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        var tmp0_this = $this;
        {
          var tmp0_plusAssign = tmp0_this.t60_1;
          var tmp1_plusAssign = new MappedUniformTexCube(cubeMap, $this.c61_1, tmp0_safe_receiver);
          tmp0_plusAssign.b(tmp1_plusAssign);
        }
        var tmp1_this = $this;
        tmp1_this.c61_1 = tmp1_this.c61_1 + tmp0_safe_receiver.m() | 0;
        tmp$ret$0 = Unit_getInstance();
      }
    }
  }
  function destroyBuffers($this) {
    $this.u60_1.t7();
    $this.v60_1.t7();
    var tmp0_safe_receiver = $this.w60_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.b60($this.g61_1.i61_1);
    }
    var tmp1_safe_receiver = $this.x60_1;
    if (tmp1_safe_receiver == null)
      null;
    else {
      tmp1_safe_receiver.b60($this.g61_1.i61_1);
    }
    var tmp2_safe_receiver = $this.y60_1;
    if (tmp2_safe_receiver == null)
      null;
    else {
      tmp2_safe_receiver.b60($this.g61_1.i61_1);
    }
    var tmp3_safe_receiver = $this.z60_1;
    if (tmp3_safe_receiver == null)
      null;
    else {
      tmp3_safe_receiver.b60($this.g61_1.i61_1);
    }
    {
      var tmp0_forEach = $this.a61_1;
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          element.b60($this.g61_1.i61_1);
        }
      }
    }
    $this.w60_1 = null;
    $this.x60_1 = null;
    $this.y60_1 = null;
    $this.z60_1 = null;
    $this.b61_1 = false;
    $this.a61_1.t7();
  }
  function checkBuffers($this) {
    var md = $this.k60_1;
    if ($this.y60_1 == null) {
      $this.y60_1 = new BufferResource(WebGLRenderingContext.ELEMENT_ARRAY_BUFFER, $this.g61_1.i61_1);
      {
        var tmp$ret$1;
        {
          var tmp0_filterIsInstance = $this.t60_1;
          var tmp$ret$0;
          {
            var tmp0_filterIsInstanceTo = ArrayList_init_$Create$_0();
            var tmp0_iterator = tmp0_filterIsInstance.h();
            while (tmp0_iterator.n()) {
              var element = tmp0_iterator.o();
              if (element instanceof MappedUbo) {
                tmp0_filterIsInstanceTo.b(element);
              }
            }
            tmp$ret$0 = tmp0_filterIsInstanceTo;
          }
          tmp$ret$1 = tmp$ret$0;
        }
        var tmp1_forEach = tmp$ret$1;
        var tmp0_iterator_0 = tmp1_forEach.h();
        while (tmp0_iterator_0.n()) {
          var element_0 = tmp0_iterator_0.o();
          {
            var uboBuffer = new BufferResource(WebGL2RenderingContext.UNIFORM_BUFFER, $this.g61_1.i61_1);
            var tmp0_this = $this;
            {
              var tmp0_plusAssign = tmp0_this.a61_1;
              tmp0_plusAssign.b(uboBuffer);
            }
            element_0.s61_1 = uboBuffer;
          }
        }
      }
    }
    var hasIntData = false;
    if ($this.w60_1 == null) {
      $this.w60_1 = new BufferResource(WebGLRenderingContext.ARRAY_BUFFER, $this.g61_1.i61_1);
      var tmp0_iterator_1 = md.f2s_1.h();
      while (tmp0_iterator_1.n()) {
        var vertexAttrib = tmp0_iterator_1.o();
        if (vertexAttrib.y2s_1.g2t_1) {
          hasIntData = true;
        } else {
          var stride = md.i2s_1;
          var offset = ensureNotNull(md.l2s_1.b3(vertexAttrib)) / 4 | 0;
          var tmp1_this = $this;
          {
            var tmp2_plusAssign = tmp1_this.u60_1;
            var tmp3_plusAssign = makeAttribBinders($this.g61_1.k61_1, $this.g61_1, vertexAttrib, ensureNotNull($this.w60_1), stride, offset);
            addAll(tmp2_plusAssign, tmp3_plusAssign);
          }
        }
      }
    }
    if (hasIntData ? $this.x60_1 == null : false) {
      $this.x60_1 = new BufferResource(WebGLRenderingContext.ARRAY_BUFFER, $this.g61_1.i61_1);
      var tmp2_iterator = md.f2s_1.h();
      while (tmp2_iterator.n()) {
        var vertexAttrib_0 = tmp2_iterator.o();
        if (vertexAttrib_0.y2s_1.g2t_1) {
          var tmp3_safe_receiver = $this.g61_1.k61_1.b3(vertexAttrib_0.x2s_1);
          if (tmp3_safe_receiver == null)
            null;
          else {
            var tmp$ret$2;
            {
              {
              }
              var vbo = new VboBinder(ensureNotNull($this.x60_1), vertexAttrib_0.y2s_1.f2t_1 / 4 | 0, md.k2s_1, ensureNotNull(md.l2s_1.b3(vertexAttrib_0)) / 4 | 0, WebGLRenderingContext.INT);
              var tmp0_this_0 = $this;
              var tmp0_plusAssign_0 = tmp0_this_0.u60_1;
              var tmp1_plusAssign = new AttributeOnLocation(vbo, tmp3_safe_receiver.c5a_1);
              tmp0_plusAssign_0.b(tmp1_plusAssign);
              tmp$ret$2 = Unit_getInstance();
            }
          }
        }
      }
    }
    var instanceList = $this.l60_1;
    if (!(instanceList == null)) {
      var instBuf = $this.z60_1;
      var isNewlyCreated = false;
      if (instBuf == null) {
        instBuf = new BufferResource(WebGLRenderingContext.ARRAY_BUFFER, $this.g61_1.i61_1);
        $this.z60_1 = instBuf;
        isNewlyCreated = true;
        var tmp4_iterator = instanceList.m2t_1.h();
        while (tmp4_iterator.n()) {
          var instanceAttrib = tmp4_iterator.o();
          var stride_0 = instanceList.p2t_1;
          var offset_0 = ensureNotNull(instanceList.n2t_1.b3(instanceAttrib)) / 4 | 0;
          var tmp5_this = $this;
          {
            var tmp4_plusAssign = tmp5_this.v60_1;
            var tmp5_plusAssign = makeAttribBinders($this.g61_1.l61_1, $this.g61_1, instanceAttrib, ensureNotNull($this.z60_1), stride_0, offset_0);
            addAll(tmp4_plusAssign, tmp5_plusAssign);
          }
        }
      }
      if (instanceList.v2t_1 ? true : isNewlyCreated) {
        var len = imul(instanceList.r2t_1, instanceList.o2t_1);
        instBuf.d60(instanceList.s2t_1, glUsage(instanceList.q2t_1, $this.g61_1), len, $this.g61_1.i61_1);
        var tmp6_this = $this.g61_1.i61_1;
        {
          var tmp6_plusAssign = tmp6_this.b5s_1;
          tmp6_plusAssign.b(CompiledShader$ShaderInstance$checkBuffers$lambda(instanceList));
        }
      }
    }
    if (!md.w2s_1 ? md.v2s_1 ? true : !$this.b61_1 : false) {
      var usage = glUsage(md.n2s_1, $this.g61_1);
      var fLen = imul(md.h2s_1, md.o2s_1);
      var iLen = imul(md.j2s_1, md.o2s_1);
      $this.e61_1 = WebGLRenderingContext.UNSIGNED_INT;
      var tmp7_safe_receiver = $this.y60_1;
      if (tmp7_safe_receiver == null)
        null;
      else {
        tmp7_safe_receiver.j60(md.r2s_1, usage, md.v3w(), $this.g61_1.i61_1);
      }
      $this.f61_1 = glElemType($this.m60_1.t2x_1.i2x_1.a52_1, $this.g61_1);
      $this.d61_1 = md.v3w();
      var tmp8_safe_receiver = $this.w60_1;
      if (tmp8_safe_receiver == null)
        null;
      else {
        tmp8_safe_receiver.d60(md.p2s_1, usage, fLen, $this.g61_1.i61_1);
      }
      var tmp9_safe_receiver = $this.x60_1;
      if (tmp9_safe_receiver == null)
        null;
      else {
        tmp9_safe_receiver.j60(md.q2s_1, usage, iLen, $this.g61_1.i61_1);
      }
      var tmp10_this = $this.g61_1.i61_1;
      {
        var tmp7_plusAssign = tmp10_this.b5s_1;
        tmp7_plusAssign.b(CompiledShader$ShaderInstance$checkBuffers$lambda_0(md));
      }
      $this.b61_1 = true;
    }
  }
  function CompiledShader$ShaderInstance$checkBuffers$lambda($instanceList) {
    return function () {
      $instanceList.v2t_1 = false;
      return Unit_getInstance();
    };
  }
  function CompiledShader$ShaderInstance$checkBuffers$lambda_0($md) {
    return function () {
      $md.v2s_1 = false;
      return Unit_getInstance();
    };
  }
  function setupUboLayout($this, desc, blockIndex) {
    var bufferSize = $this.i61_1.g5s_1.getActiveUniformBlockParameter($this.h61_1, blockIndex, WebGL2RenderingContext.UNIFORM_BLOCK_DATA_SIZE);
    var tmp$ret$3;
    {
      var tmp$ret$2;
      {
        var tmp0_map = desc.j2y_1;
        var tmp$ret$1;
        {
          var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
          var tmp0_iterator = tmp0_map.h();
          while (tmp0_iterator.n()) {
            var item = tmp0_iterator.o();
            var tmp$ret$0;
            {
              var tmp;
              if (item.m2u_1 > 1) {
                tmp = item.l2u_1 + '[0]';
              } else {
                tmp = item.l2u_1;
              }
              tmp$ret$0 = tmp;
            }
            tmp0_mapTo.b(tmp$ret$0);
          }
          tmp$ret$1 = tmp0_mapTo;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      var tmp1_toTypedArray = tmp$ret$2;
      tmp$ret$3 = copyToArray(tmp1_toTypedArray);
    }
    var uniformNames = tmp$ret$3;
    var indices = $this.i61_1.g5s_1.getUniformIndices($this.h61_1, uniformNames);
    var offsets = $this.i61_1.g5s_1.getActiveUniforms($this.h61_1, indices, WebGL2RenderingContext.UNIFORM_OFFSET);
    var sortedOffsets = sorted(offsets);
    var tmp_0 = 0;
    var tmp_1 = desc.j2y_1.m();
    var tmp$ret$4;
    {
      tmp$ret$4 = fillArrayVal(Array(tmp_1), null);
    }
    var tmp_2 = tmp$ret$4;
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$5;
      {
        var off = offsets[tmp_3];
        var nextOffI = sortedOffsets.u(off) + 1 | 0;
        var nextOff = nextOffI < sortedOffsets.m() ? sortedOffsets.r(nextOffI) : bufferSize;
        tmp$ret$5 = new BufferPosition(off, nextOff - off | 0);
      }
      tmp_2[tmp_3] = tmp$ret$5;
      tmp_0 = tmp_0 + 1 | 0;
    }
    var bufferPositions = tmp_2;
    $this.i61_1.g5s_1.uniformBlockBinding($this.h61_1, blockIndex, desc.x4t());
    {
      var tmp2_set = $this.n61_1;
      var tmp3_set = desc.il();
      var tmp4_set = new ExternalBufferLayout(desc.j2y_1, bufferPositions, bufferSize);
      tmp2_set.a(tmp3_set, tmp4_set);
    }
  }
  function getUniformLocations($this, name, arraySize) {
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    var locations = tmp$ret$0;
    if (arraySize > 1) {
      var inductionVariable = 0;
      if (inductionVariable < arraySize)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          {
            var tmp0_plusAssign = $this.i61_1.g5s_1.getUniformLocation($this.h61_1, name + '[' + i + ']');
            locations.b(tmp0_plusAssign);
          }
        }
         while (inductionVariable < arraySize);
    } else {
      {
        var tmp1_plusAssign = $this.i61_1.g5s_1.getUniformLocation($this.h61_1, name);
        locations.b(tmp1_plusAssign);
      }
    }
    return locations;
  }
  function ShaderInstance($outer, geometry, instances, pipeline) {
    this.g61_1 = $outer;
    this.k60_1 = geometry;
    this.l60_1 = instances;
    this.m60_1 = pipeline;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.n60_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = ArrayList_init_$Create$_0();
    }
    tmp_0.o60_1 = tmp$ret$1;
    var tmp_1 = this;
    var tmp$ret$2;
    {
      tmp$ret$2 = ArrayList_init_$Create$_0();
    }
    tmp_1.p60_1 = tmp$ret$2;
    var tmp_2 = this;
    var tmp$ret$3;
    {
      tmp$ret$3 = ArrayList_init_$Create$_0();
    }
    tmp_2.q60_1 = tmp$ret$3;
    var tmp_3 = this;
    var tmp$ret$4;
    {
      tmp$ret$4 = ArrayList_init_$Create$_0();
    }
    tmp_3.r60_1 = tmp$ret$4;
    var tmp_4 = this;
    var tmp$ret$5;
    {
      tmp$ret$5 = ArrayList_init_$Create$_0();
    }
    tmp_4.s60_1 = tmp$ret$5;
    var tmp_5 = this;
    var tmp$ret$6;
    {
      tmp$ret$6 = ArrayList_init_$Create$_0();
    }
    tmp_5.t60_1 = tmp$ret$6;
    var tmp_6 = this;
    var tmp$ret$7;
    {
      tmp$ret$7 = ArrayList_init_$Create$_0();
    }
    tmp_6.u60_1 = tmp$ret$7;
    var tmp_7 = this;
    var tmp$ret$8;
    {
      tmp$ret$8 = ArrayList_init_$Create$_0();
    }
    tmp_7.v60_1 = tmp$ret$8;
    this.w60_1 = null;
    this.x60_1 = null;
    this.y60_1 = null;
    this.z60_1 = null;
    var tmp_8 = this;
    var tmp$ret$9;
    {
      tmp$ret$9 = ArrayList_init_$Create$_0();
    }
    tmp_8.a61_1 = tmp$ret$9;
    this.b61_1 = false;
    this.c61_1 = WebGLRenderingContext.TEXTURE0;
    this.d61_1 = 0;
    this.e61_1 = 0;
    this.f61_1 = 0;
    {
      var tmp0_forEach = this.m60_1.t2x_1.j2x_1;
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          {
            var tmp0_forEach_0 = element.x2x_1;
            var tmp0_iterator_0 = tmp0_forEach_0.h();
            while (tmp0_iterator_0.n()) {
              var element_0 = tmp0_iterator_0.o();
              {
                var tmp0_subject = element_0;
                if (tmp0_subject instanceof UniformBuffer)
                  mapUbo(this, element_0);
                else {
                  if (tmp0_subject instanceof TextureSampler1d)
                    mapTexture1d(this, element_0);
                  else {
                    if (tmp0_subject instanceof TextureSampler2d)
                      mapTexture2d(this, element_0);
                    else {
                      if (tmp0_subject instanceof TextureSampler3d)
                        mapTexture3d(this, element_0);
                      else {
                        if (tmp0_subject instanceof TextureSamplerCube)
                          mapTextureCube(this, element_0);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    {
      var tmp1_forEach = this.m60_1.t2x_1.k2x_1;
      var tmp0_iterator_1 = tmp1_forEach.h();
      while (tmp0_iterator_1.n()) {
        var element_1 = tmp0_iterator_1.o();
        {
          mapPushConstants(this, element_1);
        }
      }
    }
    this.g61_1.i61_1.s2d().q1z(this.g61_1.j61_1);
  }
  ShaderInstance.prototype.u61 = function (drawCmd) {
    if (!(this.k60_1 === drawCmd.b39_1)) {
      this.k60_1 = drawCmd.b39_1;
      destroyBuffers(this);
    }
    var inductionVariable = 0;
    var last = this.m60_1.v2x_1.m() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.m60_1.v2x_1.r(i)(drawCmd);
      }
       while (inductionVariable <= last);
    var inductionVariable_0 = 0;
    var last_0 = this.n60_1.m() - 1 | 0;
    if (inductionVariable_0 <= last_0)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var tmp2_safe_receiver = this.n60_1.r(i_0).n52_1;
        if (tmp2_safe_receiver == null)
          null;
        else
          tmp2_safe_receiver(this.n60_1.r(i_0), drawCmd);
      }
       while (inductionVariable_0 <= last_0);
    var inductionVariable_1 = 0;
    var last_1 = this.o60_1.m() - 1 | 0;
    if (inductionVariable_1 <= last_1)
      do {
        var i_1 = inductionVariable_1;
        inductionVariable_1 = inductionVariable_1 + 1 | 0;
        var tmp4_safe_receiver = this.o60_1.r(i_1).l2y_1;
        if (tmp4_safe_receiver == null)
          null;
        else
          tmp4_safe_receiver(this.o60_1.r(i_1), drawCmd);
      }
       while (inductionVariable_1 <= last_1);
    var inductionVariable_2 = 0;
    var last_2 = this.p60_1.m() - 1 | 0;
    if (inductionVariable_2 <= last_2)
      do {
        var i_2 = inductionVariable_2;
        inductionVariable_2 = inductionVariable_2 + 1 | 0;
        var tmp6_safe_receiver = this.p60_1.r(i_2).j4t_1;
        if (tmp6_safe_receiver == null)
          null;
        else
          tmp6_safe_receiver(this.p60_1.r(i_2), drawCmd);
      }
       while (inductionVariable_2 <= last_2);
    var inductionVariable_3 = 0;
    var last_3 = this.q60_1.m() - 1 | 0;
    if (inductionVariable_3 <= last_3)
      do {
        var i_3 = inductionVariable_3;
        inductionVariable_3 = inductionVariable_3 + 1 | 0;
        var tmp8_safe_receiver = this.q60_1.r(i_3).z2v_1;
        if (tmp8_safe_receiver == null)
          null;
        else
          tmp8_safe_receiver(this.q60_1.r(i_3), drawCmd);
      }
       while (inductionVariable_3 <= last_3);
    var inductionVariable_4 = 0;
    var last_4 = this.r60_1.m() - 1 | 0;
    if (inductionVariable_4 <= last_4)
      do {
        var i_4 = inductionVariable_4;
        inductionVariable_4 = inductionVariable_4 + 1 | 0;
        var tmp10_safe_receiver = this.r60_1.r(i_4).p2w_1;
        if (tmp10_safe_receiver == null)
          null;
        else
          tmp10_safe_receiver(this.r60_1.r(i_4), drawCmd);
      }
       while (inductionVariable_4 <= last_4);
    var inductionVariable_5 = 0;
    var last_5 = this.s60_1.m() - 1 | 0;
    if (inductionVariable_5 <= last_5)
      do {
        var i_5 = inductionVariable_5;
        inductionVariable_5 = inductionVariable_5 + 1 | 0;
        var tmp12_safe_receiver = this.s60_1.r(i_5).u4t_1;
        if (tmp12_safe_receiver == null)
          null;
        else
          tmp12_safe_receiver(this.s60_1.r(i_5), drawCmd);
      }
       while (inductionVariable_5 <= last_5);
    checkBuffers(this);
    var uniformsValid = true;
    var inductionVariable_6 = 0;
    var last_6 = this.t60_1.m() - 1 | 0;
    if (inductionVariable_6 <= last_6)
      do {
        var i_6 = inductionVariable_6;
        inductionVariable_6 = inductionVariable_6 + 1 | 0;
        uniformsValid = uniformsValid ? this.t60_1.r(i_6).v61(this.g61_1.i61_1) : false;
      }
       while (inductionVariable_6 <= last_6);
    if (uniformsValid) {
      var tmp14_safe_receiver = this.y60_1;
      if (tmp14_safe_receiver == null)
        null;
      else {
        tmp14_safe_receiver.c60(this.g61_1.i61_1);
      }
      {
        var tmp0_forEach = this.u60_1;
        var tmp0_iterator = tmp0_forEach.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          {
            element.w61_1.d62(element.x61_1, this.g61_1.i61_1);
          }
        }
      }
      {
        var tmp1_forEach = this.v60_1;
        var tmp0_iterator_0 = tmp1_forEach.h();
        while (tmp0_iterator_0.n()) {
          var element_0 = tmp0_iterator_0.o();
          {
            element_0.w61_1.d62(element_0.x61_1, this.g61_1.i61_1);
          }
        }
      }
    }
    return uniformsValid;
  };
  ShaderInstance.prototype.e62 = function () {
    destroyBuffers(this);
    this.n60_1.t7();
    this.o60_1.t7();
    this.p60_1.t7();
    this.q60_1.t7();
    this.r60_1.t7();
    this.s60_1.t7();
    this.t60_1.t7();
  };
  ShaderInstance.$metadata$ = classMeta('ShaderInstance');
  function makeAttribBinders(_this__u8e3s4, $this, attr, buffer, stride, offset) {
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    var binders = tmp$ret$0;
    var tmp0_safe_receiver = _this__u8e3s4.b3(attr.x2s_1);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      {
        {
        }
        var inductionVariable = 0;
        var last = attr.z2s_1.i2t_1;
        var tmp;
        if (inductionVariable < last) {
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var off = offset + imul(attr.z2s_1.j2t_1, i) | 0;
            var vbo = new VboBinder(buffer, attr.z2s_1.j2t_1, stride, off, WebGLRenderingContext.FLOAT);
            {
              var tmp0_plusAssign = new AttributeOnLocation(vbo, tmp0_safe_receiver.c5a_1 + i | 0);
              binders.b(tmp0_plusAssign);
            }
          }
           while (inductionVariable < last);
          tmp = Unit_getInstance();
        }
        tmp$ret$1 = tmp;
      }
    }
    return binders;
  }
  function glElemType(_this__u8e3s4, $this) {
    var tmp0_subject = _this__u8e3s4;
    var tmp0 = tmp0_subject.y1();
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = WebGLRenderingContext.LINES;
        break;
      case 1:
        tmp = WebGLRenderingContext.POINTS;
        break;
      case 2:
        tmp = WebGLRenderingContext.TRIANGLES;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function glUsage(_this__u8e3s4, $this) {
    var tmp0_subject = _this__u8e3s4;
    var tmp0 = tmp0_subject.y1();
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = WebGLRenderingContext.DYNAMIC_DRAW;
        break;
      case 1:
        tmp = WebGLRenderingContext.STATIC_DRAW;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function AttributeOnLocation(vbo, loc) {
    this.w61_1 = vbo;
    this.x61_1 = loc;
  }
  AttributeOnLocation.prototype.f62 = function () {
    return this.w61_1;
  };
  AttributeOnLocation.prototype.g62 = function () {
    return this.x61_1;
  };
  AttributeOnLocation.prototype.toString = function () {
    return 'AttributeOnLocation(vbo=' + this.w61_1 + ', loc=' + this.x61_1 + ')';
  };
  AttributeOnLocation.prototype.hashCode = function () {
    var result = hashCode(this.w61_1);
    result = imul(result, 31) + this.x61_1 | 0;
    return result;
  };
  AttributeOnLocation.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof AttributeOnLocation))
      return false;
    var tmp0_other_with_cast = other instanceof AttributeOnLocation ? other : THROW_CCE();
    if (!equals(this.w61_1, tmp0_other_with_cast.w61_1))
      return false;
    if (!(this.x61_1 === tmp0_other_with_cast.x61_1))
      return false;
    return true;
  };
  AttributeOnLocation.$metadata$ = classMeta('AttributeOnLocation');
  function CompiledShader(prog, pipeline, ctx) {
    this.h61_1 = prog;
    this.i61_1 = ctx;
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_toLong = pipeline.m2x_1;
      tmp$ret$0 = _ULong___get_data__impl__fggpzb(tmp0_toLong);
    }
    tmp.j61_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = LinkedHashMap_init_$Create$();
    }
    tmp_0.k61_1 = tmp$ret$1;
    var tmp_1 = this;
    var tmp$ret$2;
    {
      tmp$ret$2 = LinkedHashMap_init_$Create$();
    }
    tmp_1.l61_1 = tmp$ret$2;
    var tmp_2 = this;
    var tmp$ret$3;
    {
      tmp$ret$3 = LinkedHashMap_init_$Create$();
    }
    tmp_2.m61_1 = tmp$ret$3;
    var tmp_3 = this;
    var tmp$ret$4;
    {
      tmp$ret$4 = LinkedHashMap_init_$Create$();
    }
    tmp_3.n61_1 = tmp$ret$4;
    var tmp_4 = this;
    var tmp$ret$5;
    {
      tmp$ret$5 = LinkedHashMap_init_$Create$();
    }
    tmp_4.o61_1 = tmp$ret$5;
    {
      var tmp0_forEach = pipeline.t2x_1.i2x_1.z51_1;
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          {
            var tmp0_forEach_0 = element.y59_1;
            var tmp0_iterator_0 = tmp0_forEach_0.h();
            while (tmp0_iterator_0.n()) {
              var element_0 = tmp0_iterator_0.o();
              {
                var tmp0_subject = element.x59_1;
                var tmp0 = tmp0_subject.y1();
                if (tmp0 === 0) {
                  var tmp0_set = this.k61_1;
                  var tmp1_set = element_0.e5a_1.x2s_1;
                  tmp0_set.a(tmp1_set, element_0);
                } else if (tmp0 === 1) {
                  var tmp2_set = this.l61_1;
                  var tmp3_set = element_0.e5a_1.x2s_1;
                  tmp2_set.a(tmp3_set, element_0);
                }
              }
            }
          }
        }
      }
    }
    {
      var tmp1_forEach = pipeline.t2x_1.j2x_1;
      var tmp0_iterator_1 = tmp1_forEach.h();
      while (tmp0_iterator_1.n()) {
        var element_1 = tmp0_iterator_1.o();
        {
          {
            var tmp0_forEach_1 = element_1.x2x_1;
            var tmp0_iterator_2 = tmp0_forEach_1.h();
            while (tmp0_iterator_2.n()) {
              var element_2 = tmp0_iterator_2.o();
              {
                var tmp0_subject_0 = element_2;
                if (tmp0_subject_0 instanceof UniformBuffer) {
                  var blockIndex = this.i61_1.g5s_1.getUniformBlockIndex(this.h61_1, element_2.b2y_1);
                  if (blockIndex === WebGL2RenderingContext.INVALID_INDEX) {
                    {
                      var tmp0_forEach_2 = element_2.j2y_1;
                      var tmp0_iterator_3 = tmp0_forEach_2.h();
                      while (tmp0_iterator_3.n()) {
                        var element_3 = tmp0_iterator_3.o();
                        {
                          {
                            var tmp0_set_0 = this.m61_1;
                            var tmp1_set_0 = element_3.l2u_1;
                            var tmp2_set_0 = listOf_0(this.i61_1.g5s_1.getUniformLocation(this.h61_1, element_3.l2u_1));
                            tmp0_set_0.a(tmp1_set_0, tmp2_set_0);
                          }
                        }
                      }
                    }
                  } else {
                    setupUboLayout(this, element_2, blockIndex);
                  }
                } else {
                  if (tmp0_subject_0 instanceof TextureSampler1d) {
                    {
                      var tmp1_set_1 = this.m61_1;
                      var tmp2_set_1 = element_2.b2y_1;
                      var tmp3_set_0 = getUniformLocations(this, element_2.b2y_1, element_2.i4t_1);
                      tmp1_set_1.a(tmp2_set_1, tmp3_set_0);
                    }
                  } else {
                    if (tmp0_subject_0 instanceof TextureSampler2d) {
                      {
                        var tmp4_set = this.m61_1;
                        var tmp5_set = element_2.b2y_1;
                        var tmp6_set = getUniformLocations(this, element_2.b2y_1, element_2.x2v_1);
                        tmp4_set.a(tmp5_set, tmp6_set);
                      }
                    } else {
                      if (tmp0_subject_0 instanceof TextureSampler3d) {
                        {
                          var tmp7_set = this.m61_1;
                          var tmp8_set = element_2.b2y_1;
                          var tmp9_set = getUniformLocations(this, element_2.b2y_1, element_2.o2w_1);
                          tmp7_set.a(tmp8_set, tmp9_set);
                        }
                      } else {
                        if (tmp0_subject_0 instanceof TextureSamplerCube) {
                          {
                            var tmp10_set = this.m61_1;
                            var tmp11_set = element_2.b2y_1;
                            var tmp12_set = getUniformLocations(this, element_2.b2y_1, element_2.s4t_1);
                            tmp10_set.a(tmp11_set, tmp12_set);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    {
      var tmp2_forEach = pipeline.t2x_1.k2x_1;
      var tmp0_iterator_4 = tmp2_forEach.h();
      while (tmp0_iterator_4.n()) {
        var element_4 = tmp0_iterator_4.o();
        {
          {
            var tmp0_forEach_3 = element_4.g52_1;
            var tmp0_iterator_5 = tmp0_forEach_3.h();
            while (tmp0_iterator_5.n()) {
              var element_5 = tmp0_iterator_5.o();
              {
                {
                  var tmp0_set_1 = this.m61_1;
                  var tmp1_set_2 = element_5.l2u_1;
                  var tmp2_set_2 = listOf_0(this.i61_1.g5s_1.getUniformLocation(this.h61_1, element_5.l2u_1));
                  tmp0_set_1.a(tmp1_set_2, tmp2_set_2);
                }
              }
            }
          }
        }
      }
    }
  }
  CompiledShader.prototype.h62 = function () {
    return this.h61_1;
  };
  CompiledShader.prototype.r52 = function () {
    return this.i61_1;
  };
  CompiledShader.prototype.i62 = function () {
    this.i61_1.g5s_1.useProgram(this.h61_1);
    {
      var tmp0_forEach = this.k61_1.d3();
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          var inductionVariable = 0;
          var last = element.e5a_1.z2s_1.i2t_1;
          if (inductionVariable < last)
            do {
              var i = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              var location = element.c5a_1 + i | 0;
              this.i61_1.g5s_1.enableVertexAttribArray(location);
              this.i61_1.g5s_1.vertexAttribDivisor(location, 0);
            }
             while (inductionVariable < last);
        }
      }
    }
    {
      var tmp1_forEach = this.l61_1.d3();
      var tmp0_iterator_0 = tmp1_forEach.h();
      while (tmp0_iterator_0.n()) {
        var element_0 = tmp0_iterator_0.o();
        {
          var inductionVariable_0 = 0;
          var last_0 = element_0.e5a_1.z2s_1.i2t_1;
          if (inductionVariable_0 < last_0)
            do {
              var i_0 = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              var location_0 = element_0.c5a_1 + i_0 | 0;
              this.i61_1.g5s_1.enableVertexAttribArray(location_0);
              this.i61_1.g5s_1.vertexAttribDivisor(location_0, 1);
            }
             while (inductionVariable_0 < last_0);
        }
      }
    }
  };
  CompiledShader.prototype.j62 = function () {
    {
      var tmp0_forEach = this.k61_1.d3();
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          var inductionVariable = 0;
          var last = element.e5a_1.z2s_1.i2t_1;
          if (inductionVariable < last)
            do {
              var i = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              this.i61_1.g5s_1.disableVertexAttribArray(element.c5a_1 + i | 0);
            }
             while (inductionVariable < last);
        }
      }
    }
    {
      var tmp1_forEach = this.l61_1.d3();
      var tmp0_iterator_0 = tmp1_forEach.h();
      while (tmp0_iterator_0.n()) {
        var element_0 = tmp0_iterator_0.o();
        {
          var inductionVariable_0 = 0;
          var last_0 = element_0.e5a_1.z2s_1.i2t_1;
          if (inductionVariable_0 < last_0)
            do {
              var i_0 = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              this.i61_1.g5s_1.disableVertexAttribArray(element_0.c5a_1 + i_0 | 0);
            }
             while (inductionVariable_0 < last_0);
        }
      }
    }
  };
  CompiledShader.prototype.u61 = function (cmd) {
    var pipelineInst = ensureNotNull(cmd.c39_1);
    var tmp$ret$1;
    {
      var tmp0_getOrPut = this.o61_1;
      var tmp1_getOrPut = pipelineInst.n2x_1;
      var value = tmp0_getOrPut.b3(tmp1_getOrPut);
      var tmp;
      if (value == null) {
        var tmp$ret$0;
        {
          tmp$ret$0 = new ShaderInstance(this, cmd.b39_1, cmd.a39_1.g2r_1, pipelineInst);
        }
        var answer = tmp$ret$0;
        tmp0_getOrPut.a(tmp1_getOrPut, answer);
        tmp = answer;
      } else {
        tmp = value;
      }
      tmp$ret$1 = tmp;
    }
    var inst = tmp$ret$1;
    var tmp_0;
    if (inst.u61(cmd)) {
      tmp_0 = inst;
    } else {
      tmp_0 = null;
    }
    return tmp_0;
  };
  CompiledShader.prototype.k62 = function (pipeline) {
    var tmp0_safe_receiver = this.o61_1.tf(pipeline.n2x_1);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        tmp0_safe_receiver.e62();
        tmp$ret$0 = this.i61_1.s2d().r1z(this.j61_1);
      }
    }
  };
  CompiledShader.prototype.q = function () {
    return this.o61_1.q();
  };
  CompiledShader.prototype.l62 = function () {
    this.i61_1.s2d().s1z(this.j61_1);
    this.i61_1.g5s_1.deleteProgram(this.h61_1);
  };
  CompiledShader.$metadata$ = classMeta('CompiledShader');
  function glMinFilterMethod(_this__u8e3s4, $this, mipMapping) {
    var tmp0_subject = _this__u8e3s4;
    var tmp0 = tmp0_subject.y1();
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = mipMapping ? WebGLRenderingContext.NEAREST_MIPMAP_NEAREST : WebGLRenderingContext.NEAREST;
        break;
      case 1:
        tmp = mipMapping ? WebGLRenderingContext.LINEAR_MIPMAP_LINEAR : WebGLRenderingContext.LINEAR;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function glMagFilterMethod(_this__u8e3s4, $this) {
    var tmp0_subject = _this__u8e3s4;
    var tmp0 = tmp0_subject.y1();
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = WebGLRenderingContext.NEAREST;
        break;
      case 1:
        tmp = WebGLRenderingContext.LINEAR;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function glAddressMode(_this__u8e3s4, $this) {
    var tmp0_subject = _this__u8e3s4;
    var tmp0 = tmp0_subject.y1();
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = WebGLRenderingContext.CLAMP_TO_EDGE;
        break;
      case 1:
        tmp = WebGLRenderingContext.MIRRORED_REPEAT;
        break;
      case 2:
        tmp = WebGLRenderingContext.REPEAT;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function Companion_55() {
    Companion_instance_55 = this;
    this.m62_1 = new Long(1, 0);
  }
  Companion_55.$metadata$ = objectMeta('Companion');
  var Companion_instance_55;
  function Companion_getInstance_55() {
    if (Companion_instance_55 == null)
      new Companion_55();
    return Companion_instance_55;
  }
  function LoadedTextureWebGl(ctx, target, texture, estimatedSize) {
    Companion_getInstance_55();
    this.j5t_1 = ctx;
    this.k5t_1 = target;
    this.l5t_1 = texture;
    var tmp = this;
    var tmp0_this = Companion_getInstance_55();
    var tmp1 = tmp0_this.m62_1;
    tmp0_this.m62_1 = tmp1.yl();
    tmp.m5t_1 = tmp1;
    this.n5t_1 = false;
    this.o5t_1 = 0;
    this.p5t_1 = 0;
    this.q5t_1 = 0;
    this.j5t_1.s2d().o1z(this.m5t_1, estimatedSize);
  }
  LoadedTextureWebGl.prototype.u3z = function () {
    return this.o5t_1;
  };
  LoadedTextureWebGl.prototype.v3z = function () {
    return this.p5t_1;
  };
  LoadedTextureWebGl.prototype.r5t = function (width, height, depth) {
    this.o5t_1 = width;
    this.p5t_1 = height;
    this.q5t_1 = depth;
  };
  LoadedTextureWebGl.prototype.s5t = function (props) {
    var gl = this.j5t_1.g5s_1;
    gl.bindTexture(this.k5t_1, this.l5t_1);
    gl.texParameteri(this.k5t_1, WebGLRenderingContext.TEXTURE_MIN_FILTER, glMinFilterMethod(props.f54_1, this, props.h54_1));
    gl.texParameteri(this.k5t_1, WebGLRenderingContext.TEXTURE_MAG_FILTER, glMagFilterMethod(props.g54_1, this));
    gl.texParameteri(this.k5t_1, WebGLRenderingContext.TEXTURE_WRAP_S, glAddressMode(props.c54_1, this));
    gl.texParameteri(this.k5t_1, WebGLRenderingContext.TEXTURE_WRAP_T, glAddressMode(props.d54_1, this));
    if (this.k5t_1 === WebGL2RenderingContext.TEXTURE_3D) {
      gl.texParameteri(this.k5t_1, WebGL2RenderingContext.TEXTURE_WRAP_R, glAddressMode(props.e54_1, this));
    }
    var tmp$ret$0;
    {
      var tmp0_min = props.i54_1;
      var tmp1_min = this.j5t_1.j5s_1.a5z_1;
      tmp$ret$0 = Math.min(tmp0_min, tmp1_min);
    }
    var anisotropy = tmp$ret$0;
    if (anisotropy > 1) {
      gl.texParameteri(this.k5t_1, this.j5t_1.j5s_1.b5z_1, anisotropy);
    }
    if (anisotropy > 1 ? props.f54_1.equals(FilterMethod_NEAREST_getInstance()) ? true : props.g54_1.equals(FilterMethod_NEAREST_getInstance()) : false) {
      var tmp$ret$4;
      {
        var tmp$ret$3;
        {
          var tmp2_wExt = Log_getInstance();
          var tmp$ret$2;
          {
            var tmp1_logExt = Level_WARN_getInstance();
            var tmp0_log = getKClassFromExpression(this).ei();
            var tmp;
            if (tmp1_logExt.e1w_1 >= tmp2_wExt.y1v_1.e1w_1) {
              var tmp_0 = tmp2_wExt.z1v_1;
              var tmp$ret$1;
              {
                tmp$ret$1 = 'Texture filtering is NEAREST but anisotropy is ' + anisotropy + ' (> 1)';
              }
              tmp = tmp_0(tmp1_logExt, tmp0_log, tmp$ret$1);
            }
            tmp$ret$2 = tmp;
          }
          tmp$ret$3 = tmp$ret$2;
        }
        tmp$ret$4 = tmp$ret$3;
      }
    }
  };
  LoadedTextureWebGl.prototype.n1a = function () {
    if (!this.n5t_1) {
      this.n5t_1 = true;
      this.j5t_1.g5s_1.deleteTexture(this.l5t_1);
      this.j5t_1.s2d().p1z(this.m5t_1);
    }
  };
  LoadedTextureWebGl.$metadata$ = classMeta('LoadedTextureWebGl', [LoadedTexture]);
  function Companion_56() {
    Companion_instance_56 = this;
  }
  Companion_56.prototype.p61 = function (uniform, location) {
    var tmp0_subject = uniform;
    var tmp;
    if (tmp0_subject instanceof Uniform1f) {
      tmp = new MappedUniform1f(uniform, location);
    } else {
      if (tmp0_subject instanceof Uniform2f) {
        tmp = new MappedUniform2f(uniform, location);
      } else {
        if (tmp0_subject instanceof Uniform3f) {
          tmp = new MappedUniform3f(uniform, location);
        } else {
          if (tmp0_subject instanceof Uniform4f) {
            tmp = new MappedUniform4f(uniform, location);
          } else {
            if (tmp0_subject instanceof Uniform1fv) {
              tmp = new MappedUniform1fv(uniform, location);
            } else {
              if (tmp0_subject instanceof Uniform2fv) {
                tmp = new MappedUniform2fv(uniform, location);
              } else {
                if (tmp0_subject instanceof Uniform3fv) {
                  tmp = new MappedUniform3fv(uniform, location);
                } else {
                  if (tmp0_subject instanceof Uniform4fv) {
                    tmp = new MappedUniform4fv(uniform, location);
                  } else {
                    if (tmp0_subject instanceof UniformColor_0) {
                      tmp = new MappedUniformColor(uniform, location);
                    } else {
                      if (tmp0_subject instanceof UniformMat3f) {
                        tmp = new MappedUniformMat3f(uniform, location);
                      } else {
                        if (tmp0_subject instanceof UniformMat3fv) {
                          tmp = new MappedUniformMat3fv(uniform, location);
                        } else {
                          if (tmp0_subject instanceof UniformMat4f) {
                            tmp = new MappedUniformMat4f(uniform, location);
                          } else {
                            if (tmp0_subject instanceof UniformMat4fv) {
                              tmp = new MappedUniformMat4fv(uniform, location);
                            } else {
                              if (tmp0_subject instanceof Uniform1i) {
                                tmp = new MappedUniform1i(uniform, location);
                              } else {
                                if (tmp0_subject instanceof Uniform2i) {
                                  tmp = new MappedUniform2i(uniform, location);
                                } else {
                                  if (tmp0_subject instanceof Uniform3i) {
                                    tmp = new MappedUniform3i(uniform, location);
                                  } else {
                                    if (tmp0_subject instanceof Uniform4i) {
                                      tmp = new MappedUniform4i(uniform, location);
                                    } else {
                                      if (tmp0_subject instanceof Uniform1iv) {
                                        tmp = new MappedUniform1iv(uniform, location);
                                      } else {
                                        if (tmp0_subject instanceof Uniform2iv) {
                                          tmp = new MappedUniform2iv(uniform, location);
                                        } else {
                                          if (tmp0_subject instanceof Uniform3iv) {
                                            tmp = new MappedUniform3iv(uniform, location);
                                          } else {
                                            if (tmp0_subject instanceof Uniform4iv) {
                                              tmp = new MappedUniform4iv(uniform, location);
                                            } else {
                                              noWhenBranchMatchedException();
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return tmp;
  };
  Companion_56.$metadata$ = objectMeta('Companion');
  var Companion_instance_56;
  function Companion_getInstance_56() {
    if (Companion_instance_56 == null)
      new Companion_56();
    return Companion_instance_56;
  }
  function MappedUniform() {
  }
  MappedUniform.$metadata$ = interfaceMeta('MappedUniform');
  function MappedUbo(uboDesc, layout) {
    this.q61_1 = uboDesc;
    this.r61_1 = layout;
    this.s61_1 = null;
    this.t61_1 = createMixedBuffer(this.r61_1.m());
  }
  MappedUbo.prototype.n62 = function (_set____db54di) {
    this.s61_1 = _set____db54di;
  };
  MappedUbo.prototype.v61 = function (ctx) {
    var gpuBuf = this.s61_1;
    var tmp;
    if (!(gpuBuf == null)) {
      this.r61_1.t4s(this.q61_1.j2y_1, this.t61_1);
      gpuBuf.i60(this.t61_1, WebGLRenderingContext.DYNAMIC_DRAW, this.t61_1.b1w(), ctx);
      ctx.g5s_1.bindBufferBase(WebGL2RenderingContext.UNIFORM_BUFFER, this.q61_1.x4t(), gpuBuf.a60_1);
      tmp = true;
    } else {
      tmp = false;
    }
    return tmp;
  };
  MappedUbo.$metadata$ = classMeta('MappedUbo', [MappedUniform]);
  function MappedUniformTex1d(sampler1d, texUnit, locations) {
    MappedUniformTex.call(this, texUnit, WebGLRenderingContext.TEXTURE_2D);
    this.q62_1 = sampler1d;
    this.r62_1 = locations;
  }
  MappedUniformTex1d.prototype.v61 = function (ctx) {
    var texUnit = this.u62();
    var isValid = true;
    var inductionVariable = 0;
    var last = this.q62_1.i4t_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tex = this.q62_1.k4t_1[i];
        if (!(tex == null) ? this.v62(ctx, tex, i) : false) {
          JsImpl_getInstance().d5r().uniform1i(this.r62_1.r(i), (this.u62() - WebGLRenderingContext.TEXTURE0 | 0) + i | 0);
        } else {
          isValid = false;
        }
        var tmp1 = texUnit;
        texUnit = tmp1 + 1 | 0;
      }
       while (inductionVariable < last);
    return isValid;
  };
  MappedUniformTex1d.$metadata$ = classMeta('MappedUniformTex1d', undefined, undefined, undefined, undefined, MappedUniformTex.prototype);
  function MappedUniformTex2d(sampler2d, texUnit, locations) {
    MappedUniformTex.call(this, texUnit, WebGLRenderingContext.TEXTURE_2D);
    this.y62_1 = sampler2d;
    this.z62_1 = locations;
  }
  MappedUniformTex2d.prototype.v61 = function (ctx) {
    var texUnit = this.u62();
    var isValid = true;
    var inductionVariable = 0;
    var last = this.y62_1.x2v_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tex = this.y62_1.a2w_1[i];
        if (!(tex == null) ? this.v62(ctx, tex, i) : false) {
          ctx.g5s_1.uniform1i(this.z62_1.r(i), (this.u62() - WebGLRenderingContext.TEXTURE0 | 0) + i | 0);
        } else {
          isValid = false;
        }
        var tmp1 = texUnit;
        texUnit = tmp1 + 1 | 0;
      }
       while (inductionVariable < last);
    return isValid;
  };
  MappedUniformTex2d.$metadata$ = classMeta('MappedUniformTex2d', undefined, undefined, undefined, undefined, MappedUniformTex.prototype);
  function MappedUniformTex3d(sampler3d, texUnit, locations) {
    MappedUniformTex.call(this, texUnit, WebGL2RenderingContext.TEXTURE_3D);
    this.c63_1 = sampler3d;
    this.d63_1 = locations;
  }
  MappedUniformTex3d.prototype.v61 = function (ctx) {
    var texUnit = this.u62();
    var isValid = true;
    var inductionVariable = 0;
    var last = this.c63_1.o2w_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tex = this.c63_1.q2w_1[i];
        if (!(tex == null) ? this.v62(ctx, tex, i) : false) {
          ctx.g5s_1.uniform1i(this.d63_1.r(i), (this.u62() - WebGLRenderingContext.TEXTURE0 | 0) + i | 0);
        } else {
          isValid = false;
        }
        var tmp1 = texUnit;
        texUnit = tmp1 + 1 | 0;
      }
       while (inductionVariable < last);
    return isValid;
  };
  MappedUniformTex3d.$metadata$ = classMeta('MappedUniformTex3d', undefined, undefined, undefined, undefined, MappedUniformTex.prototype);
  function MappedUniformTexCube(samplerCube, texUnit, locations) {
    MappedUniformTex.call(this, texUnit, WebGLRenderingContext.TEXTURE_CUBE_MAP);
    this.g63_1 = samplerCube;
    this.h63_1 = locations;
  }
  MappedUniformTexCube.prototype.v61 = function (ctx) {
    var texUnit = this.u62();
    var isValid = true;
    var inductionVariable = 0;
    var last = this.g63_1.s4t_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tex = this.g63_1.v4t_1[i];
        if (!(tex == null) ? this.v62(ctx, tex, i) : false) {
          ctx.g5s_1.uniform1i(this.h63_1.r(i), (this.u62() - WebGLRenderingContext.TEXTURE0 | 0) + i | 0);
        } else {
          isValid = false;
        }
        var tmp1 = texUnit;
        texUnit = tmp1 + 1 | 0;
      }
       while (inductionVariable < last);
    return isValid;
  };
  MappedUniformTexCube.$metadata$ = classMeta('MappedUniformTexCube', undefined, undefined, undefined, undefined, MappedUniformTex.prototype);
  function MappedUniform1f(uniform, location) {
    this.i63_1 = uniform;
    this.j63_1 = location;
  }
  MappedUniform1f.prototype.v61 = function (ctx) {
    ctx.g5s_1.uniform1f(this.j63_1, this.i63_1.n2());
    return true;
  };
  MappedUniform1f.$metadata$ = classMeta('MappedUniform1f', [MappedUniform]);
  function MappedUniform2f(uniform, location) {
    this.k63_1 = uniform;
    this.l63_1 = location;
  }
  MappedUniform2f.prototype.v61 = function (ctx) {
    ctx.g5s_1.uniform2f(this.l63_1, this.k63_1.n2().e23(), this.k63_1.n2().g23());
    return true;
  };
  MappedUniform2f.$metadata$ = classMeta('MappedUniform2f', [MappedUniform]);
  function MappedUniform3f(uniform, location) {
    this.m63_1 = uniform;
    this.n63_1 = location;
  }
  MappedUniform3f.prototype.v61 = function (ctx) {
    ctx.g5s_1.uniform3f(this.n63_1, this.m63_1.n2().e23(), this.m63_1.n2().g23(), this.m63_1.n2().w2g());
    return true;
  };
  MappedUniform3f.$metadata$ = classMeta('MappedUniform3f', [MappedUniform]);
  function MappedUniform4f(uniform, location) {
    this.o63_1 = uniform;
    this.p63_1 = location;
  }
  MappedUniform4f.prototype.v61 = function (ctx) {
    ctx.g5s_1.uniform4f(this.p63_1, this.o63_1.n2().e23(), this.o63_1.n2().g23(), this.o63_1.n2().w2g(), this.o63_1.n2().r2l());
    return true;
  };
  MappedUniform4f.$metadata$ = classMeta('MappedUniform4f', [MappedUniform]);
  function MappedUniform1fv(uniform, location) {
    this.q63_1 = uniform;
    this.r63_1 = location;
    this.s63_1 = new Float32Array(this.q63_1.kd());
  }
  MappedUniform1fv.prototype.v61 = function (ctx) {
    var inductionVariable = 0;
    var last = this.q63_1.kd();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        {
          var tmp0_set = this.s63_1;
          var tmp1_set = this.q63_1.n2()[i];
          var tmp$ret$0;
          {
            tmp$ret$0 = tmp0_set;
          }
          tmp$ret$0[i] = tmp1_set;
        }
      }
       while (inductionVariable < last);
    ctx.g5s_1.uniform1fv(this.r63_1, this.s63_1);
    return true;
  };
  MappedUniform1fv.$metadata$ = classMeta('MappedUniform1fv', [MappedUniform]);
  function MappedUniform2fv(uniform, location) {
    this.t63_1 = uniform;
    this.u63_1 = location;
    this.v63_1 = new Float32Array(imul(2, this.t63_1.kd()));
  }
  MappedUniform2fv.prototype.v61 = function (ctx) {
    var j = 0;
    var inductionVariable = 0;
    var last = this.t63_1.kd();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        {
          var tmp0_set = this.v63_1;
          var tmp1 = j;
          j = tmp1 + 1 | 0;
          var tmp1_set = tmp1;
          var tmp2_set = this.t63_1.n2()[i].e23();
          var tmp$ret$0;
          {
            tmp$ret$0 = tmp0_set;
          }
          tmp$ret$0[tmp1_set] = tmp2_set;
        }
        {
          var tmp3_set = this.v63_1;
          var tmp2 = j;
          j = tmp2 + 1 | 0;
          var tmp4_set = tmp2;
          var tmp5_set = this.t63_1.n2()[i].g23();
          var tmp$ret$1;
          {
            tmp$ret$1 = tmp3_set;
          }
          tmp$ret$1[tmp4_set] = tmp5_set;
        }
      }
       while (inductionVariable < last);
    ctx.g5s_1.uniform2fv(this.u63_1, this.v63_1);
    return true;
  };
  MappedUniform2fv.$metadata$ = classMeta('MappedUniform2fv', [MappedUniform]);
  function MappedUniform3fv(uniform, location) {
    this.w63_1 = uniform;
    this.x63_1 = location;
    this.y63_1 = new Float32Array(imul(3, this.w63_1.kd()));
  }
  MappedUniform3fv.prototype.v61 = function (ctx) {
    var j = 0;
    var inductionVariable = 0;
    var last = this.w63_1.kd();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        {
          var tmp0_set = this.y63_1;
          var tmp1 = j;
          j = tmp1 + 1 | 0;
          var tmp1_set = tmp1;
          var tmp2_set = this.w63_1.n2()[i].e23();
          var tmp$ret$0;
          {
            tmp$ret$0 = tmp0_set;
          }
          tmp$ret$0[tmp1_set] = tmp2_set;
        }
        {
          var tmp3_set = this.y63_1;
          var tmp2 = j;
          j = tmp2 + 1 | 0;
          var tmp4_set = tmp2;
          var tmp5_set = this.w63_1.n2()[i].g23();
          var tmp$ret$1;
          {
            tmp$ret$1 = tmp3_set;
          }
          tmp$ret$1[tmp4_set] = tmp5_set;
        }
        {
          var tmp6_set = this.y63_1;
          var tmp3 = j;
          j = tmp3 + 1 | 0;
          var tmp7_set = tmp3;
          var tmp8_set = this.w63_1.n2()[i].w2g();
          var tmp$ret$2;
          {
            tmp$ret$2 = tmp6_set;
          }
          tmp$ret$2[tmp7_set] = tmp8_set;
        }
      }
       while (inductionVariable < last);
    ctx.g5s_1.uniform3fv(this.x63_1, this.y63_1);
    return true;
  };
  MappedUniform3fv.$metadata$ = classMeta('MappedUniform3fv', [MappedUniform]);
  function MappedUniform4fv(uniform, location) {
    this.z63_1 = uniform;
    this.a64_1 = location;
    this.b64_1 = new Float32Array(imul(4, this.z63_1.kd()));
  }
  MappedUniform4fv.prototype.v61 = function (ctx) {
    var j = 0;
    var inductionVariable = 0;
    var last = this.z63_1.kd();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        {
          var tmp0_set = this.b64_1;
          var tmp1 = j;
          j = tmp1 + 1 | 0;
          var tmp1_set = tmp1;
          var tmp2_set = this.z63_1.n2()[i].e23();
          var tmp$ret$0;
          {
            tmp$ret$0 = tmp0_set;
          }
          tmp$ret$0[tmp1_set] = tmp2_set;
        }
        {
          var tmp3_set = this.b64_1;
          var tmp2 = j;
          j = tmp2 + 1 | 0;
          var tmp4_set = tmp2;
          var tmp5_set = this.z63_1.n2()[i].g23();
          var tmp$ret$1;
          {
            tmp$ret$1 = tmp3_set;
          }
          tmp$ret$1[tmp4_set] = tmp5_set;
        }
        {
          var tmp6_set = this.b64_1;
          var tmp3 = j;
          j = tmp3 + 1 | 0;
          var tmp7_set = tmp3;
          var tmp8_set = this.z63_1.n2()[i].w2g();
          var tmp$ret$2;
          {
            tmp$ret$2 = tmp6_set;
          }
          tmp$ret$2[tmp7_set] = tmp8_set;
        }
        {
          var tmp9_set = this.b64_1;
          var tmp4 = j;
          j = tmp4 + 1 | 0;
          var tmp10_set = tmp4;
          var tmp11_set = this.z63_1.n2()[i].r2l();
          var tmp$ret$3;
          {
            tmp$ret$3 = tmp9_set;
          }
          tmp$ret$3[tmp10_set] = tmp11_set;
        }
      }
       while (inductionVariable < last);
    ctx.g5s_1.uniform4fv(this.a64_1, this.b64_1);
    return true;
  };
  MappedUniform4fv.$metadata$ = classMeta('MappedUniform4fv', [MappedUniform]);
  function MappedUniformColor(uniform, location) {
    this.c64_1 = uniform;
    this.d64_1 = location;
  }
  MappedUniformColor.prototype.v61 = function (ctx) {
    ctx.g5s_1.uniform4f(this.d64_1, this.c64_1.n2().e23(), this.c64_1.n2().g23(), this.c64_1.n2().w2g(), this.c64_1.n2().r2l());
    return true;
  };
  MappedUniformColor.$metadata$ = classMeta('MappedUniformColor', [MappedUniform]);
  function MappedUniformMat3f(uniform, location) {
    this.e64_1 = uniform;
    this.f64_1 = location;
    this.g64_1 = new Float32Array(9);
  }
  MappedUniformMat3f.prototype.v61 = function (ctx) {
    var inductionVariable = 0;
    if (inductionVariable <= 8)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        {
          var tmp0_set = this.g64_1;
          var tmp1_set = this.e64_1.n2().k2g_1[i];
          var tmp$ret$0;
          {
            tmp$ret$0 = tmp0_set;
          }
          tmp$ret$0[i] = tmp1_set;
        }
      }
       while (inductionVariable <= 8);
    ctx.g5s_1.uniformMatrix3fv(this.f64_1, false, this.g64_1);
    return true;
  };
  MappedUniformMat3f.$metadata$ = classMeta('MappedUniformMat3f', [MappedUniform]);
  function MappedUniformMat3fv(uniform, location) {
    this.h64_1 = uniform;
    this.i64_1 = location;
    this.j64_1 = new Float32Array(imul(9, this.h64_1.kd()));
  }
  MappedUniformMat3fv.prototype.v61 = function (ctx) {
    var bufI = 0;
    var inductionVariable = 0;
    var last = this.h64_1.kd();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var inductionVariable_0 = 0;
        if (inductionVariable_0 < 8)
          do {
            var j = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            {
              var tmp0_set = this.j64_1;
              var tmp2 = bufI;
              bufI = tmp2 + 1 | 0;
              var tmp1_set = tmp2;
              var tmp2_set = this.h64_1.n2()[i].k2g_1[j];
              var tmp$ret$0;
              {
                tmp$ret$0 = tmp0_set;
              }
              tmp$ret$0[tmp1_set] = tmp2_set;
            }
          }
           while (inductionVariable_0 < 8);
      }
       while (inductionVariable < last);
    ctx.g5s_1.uniformMatrix3fv(this.i64_1, false, this.j64_1);
    return true;
  };
  MappedUniformMat3fv.$metadata$ = classMeta('MappedUniformMat3fv', [MappedUniform]);
  function MappedUniformMat4f(uniform, location) {
    this.k64_1 = uniform;
    this.l64_1 = location;
    this.m64_1 = new Float32Array(16);
  }
  MappedUniformMat4f.prototype.v61 = function (ctx) {
    var inductionVariable = 0;
    if (inductionVariable <= 15)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        {
          var tmp0_set = this.m64_1;
          var tmp1_set = this.k64_1.n2().l2h_1[i];
          var tmp$ret$0;
          {
            tmp$ret$0 = tmp0_set;
          }
          tmp$ret$0[i] = tmp1_set;
        }
      }
       while (inductionVariable <= 15);
    ctx.g5s_1.uniformMatrix4fv(this.l64_1, false, this.m64_1);
    return true;
  };
  MappedUniformMat4f.$metadata$ = classMeta('MappedUniformMat4f', [MappedUniform]);
  function MappedUniformMat4fv(uniform, location) {
    this.n64_1 = uniform;
    this.o64_1 = location;
    this.p64_1 = new Float32Array(imul(16, this.n64_1.kd()));
  }
  MappedUniformMat4fv.prototype.v61 = function (ctx) {
    var bufI = 0;
    var inductionVariable = 0;
    var last = this.n64_1.kd();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var inductionVariable_0 = 0;
        if (inductionVariable_0 < 16)
          do {
            var j = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            {
              var tmp0_set = this.p64_1;
              var tmp2 = bufI;
              bufI = tmp2 + 1 | 0;
              var tmp1_set = tmp2;
              var tmp2_set = this.n64_1.n2()[i].l2h_1[j];
              var tmp$ret$0;
              {
                tmp$ret$0 = tmp0_set;
              }
              tmp$ret$0[tmp1_set] = tmp2_set;
            }
          }
           while (inductionVariable_0 < 16);
      }
       while (inductionVariable < last);
    ctx.g5s_1.uniformMatrix4fv(this.o64_1, false, this.p64_1);
    return true;
  };
  MappedUniformMat4fv.$metadata$ = classMeta('MappedUniformMat4fv', [MappedUniform]);
  function MappedUniform1i(uniform, location) {
    this.q64_1 = uniform;
    this.r64_1 = location;
  }
  MappedUniform1i.prototype.v61 = function (ctx) {
    ctx.g5s_1.uniform1i(this.r64_1, this.q64_1.n2());
    return true;
  };
  MappedUniform1i.$metadata$ = classMeta('MappedUniform1i', [MappedUniform]);
  function MappedUniform2i(uniform, location) {
    this.s64_1 = uniform;
    this.t64_1 = location;
  }
  MappedUniform2i.prototype.v61 = function (ctx) {
    ctx.g5s_1.uniform2i(this.t64_1, this.s64_1.n2().e23(), this.s64_1.n2().g23());
    return true;
  };
  MappedUniform2i.$metadata$ = classMeta('MappedUniform2i', [MappedUniform]);
  function MappedUniform3i(uniform, location) {
    this.u64_1 = uniform;
    this.v64_1 = location;
  }
  MappedUniform3i.prototype.v61 = function (ctx) {
    ctx.g5s_1.uniform3i(this.v64_1, this.u64_1.n2().e23(), this.u64_1.n2().g23(), this.u64_1.n2().w2g());
    return true;
  };
  MappedUniform3i.$metadata$ = classMeta('MappedUniform3i', [MappedUniform]);
  function MappedUniform4i(uniform, location) {
    this.w64_1 = uniform;
    this.x64_1 = location;
  }
  MappedUniform4i.prototype.v61 = function (ctx) {
    ctx.g5s_1.uniform4i(this.x64_1, this.w64_1.n2().e23(), this.w64_1.n2().g23(), this.w64_1.n2().w2g(), this.w64_1.n2().r2l());
    return true;
  };
  MappedUniform4i.$metadata$ = classMeta('MappedUniform4i', [MappedUniform]);
  function MappedUniform1iv(uniform, location) {
    this.y64_1 = uniform;
    this.z64_1 = location;
    this.a65_1 = new Int32Array(this.y64_1.kd());
  }
  MappedUniform1iv.prototype.v61 = function (ctx) {
    var inductionVariable = 0;
    var last = this.y64_1.kd();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        {
          var tmp0_set = this.a65_1;
          var tmp1_set = this.y64_1.n2()[i];
          var tmp$ret$0;
          {
            tmp$ret$0 = tmp0_set;
          }
          tmp$ret$0[i] = tmp1_set;
        }
      }
       while (inductionVariable < last);
    ctx.g5s_1.uniform1iv(this.z64_1, this.a65_1);
    return true;
  };
  MappedUniform1iv.$metadata$ = classMeta('MappedUniform1iv', [MappedUniform]);
  function MappedUniform2iv(uniform, location) {
    this.b65_1 = uniform;
    this.c65_1 = location;
    this.d65_1 = new Int32Array(imul(2, this.b65_1.kd()));
  }
  MappedUniform2iv.prototype.v61 = function (ctx) {
    var j = 0;
    var inductionVariable = 0;
    var last = this.b65_1.kd();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        {
          var tmp0_set = this.d65_1;
          var tmp1 = j;
          j = tmp1 + 1 | 0;
          var tmp1_set = tmp1;
          var tmp2_set = this.b65_1.n2()[i].e23();
          var tmp$ret$0;
          {
            tmp$ret$0 = tmp0_set;
          }
          tmp$ret$0[tmp1_set] = tmp2_set;
        }
        {
          var tmp3_set = this.d65_1;
          var tmp2 = j;
          j = tmp2 + 1 | 0;
          var tmp4_set = tmp2;
          var tmp5_set = this.b65_1.n2()[i].g23();
          var tmp$ret$1;
          {
            tmp$ret$1 = tmp3_set;
          }
          tmp$ret$1[tmp4_set] = tmp5_set;
        }
      }
       while (inductionVariable < last);
    ctx.g5s_1.uniform2iv(this.c65_1, this.d65_1);
    return true;
  };
  MappedUniform2iv.$metadata$ = classMeta('MappedUniform2iv', [MappedUniform]);
  function MappedUniform3iv(uniform, location) {
    this.e65_1 = uniform;
    this.f65_1 = location;
    this.g65_1 = new Int32Array(imul(3, this.e65_1.kd()));
  }
  MappedUniform3iv.prototype.v61 = function (ctx) {
    var j = 0;
    var inductionVariable = 0;
    var last = this.e65_1.kd();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        {
          var tmp0_set = this.g65_1;
          var tmp1 = j;
          j = tmp1 + 1 | 0;
          var tmp1_set = tmp1;
          var tmp2_set = this.e65_1.n2()[i].e23();
          var tmp$ret$0;
          {
            tmp$ret$0 = tmp0_set;
          }
          tmp$ret$0[tmp1_set] = tmp2_set;
        }
        {
          var tmp3_set = this.g65_1;
          var tmp2 = j;
          j = tmp2 + 1 | 0;
          var tmp4_set = tmp2;
          var tmp5_set = this.e65_1.n2()[i].g23();
          var tmp$ret$1;
          {
            tmp$ret$1 = tmp3_set;
          }
          tmp$ret$1[tmp4_set] = tmp5_set;
        }
        {
          var tmp6_set = this.g65_1;
          var tmp3 = j;
          j = tmp3 + 1 | 0;
          var tmp7_set = tmp3;
          var tmp8_set = this.e65_1.n2()[i].w2g();
          var tmp$ret$2;
          {
            tmp$ret$2 = tmp6_set;
          }
          tmp$ret$2[tmp7_set] = tmp8_set;
        }
      }
       while (inductionVariable < last);
    ctx.g5s_1.uniform3iv(this.f65_1, this.g65_1);
    return true;
  };
  MappedUniform3iv.$metadata$ = classMeta('MappedUniform3iv', [MappedUniform]);
  function MappedUniform4iv(uniform, location) {
    this.h65_1 = uniform;
    this.i65_1 = location;
    this.j65_1 = new Int32Array(imul(4, this.h65_1.kd()));
  }
  MappedUniform4iv.prototype.v61 = function (ctx) {
    var j = 0;
    var inductionVariable = 0;
    var last = this.h65_1.kd();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        {
          var tmp0_set = this.j65_1;
          var tmp1 = j;
          j = tmp1 + 1 | 0;
          var tmp1_set = tmp1;
          var tmp2_set = this.h65_1.n2()[i].e23();
          var tmp$ret$0;
          {
            tmp$ret$0 = tmp0_set;
          }
          tmp$ret$0[tmp1_set] = tmp2_set;
        }
        {
          var tmp3_set = this.j65_1;
          var tmp2 = j;
          j = tmp2 + 1 | 0;
          var tmp4_set = tmp2;
          var tmp5_set = this.h65_1.n2()[i].g23();
          var tmp$ret$1;
          {
            tmp$ret$1 = tmp3_set;
          }
          tmp$ret$1[tmp4_set] = tmp5_set;
        }
        {
          var tmp6_set = this.j65_1;
          var tmp3 = j;
          j = tmp3 + 1 | 0;
          var tmp7_set = tmp3;
          var tmp8_set = this.h65_1.n2()[i].w2g();
          var tmp$ret$2;
          {
            tmp$ret$2 = tmp6_set;
          }
          tmp$ret$2[tmp7_set] = tmp8_set;
        }
        {
          var tmp9_set = this.j65_1;
          var tmp4 = j;
          j = tmp4 + 1 | 0;
          var tmp10_set = tmp4;
          var tmp11_set = this.h65_1.n2()[i].r2l();
          var tmp$ret$3;
          {
            tmp$ret$3 = tmp9_set;
          }
          tmp$ret$3[tmp10_set] = tmp11_set;
        }
      }
       while (inductionVariable < last);
    ctx.g5s_1.uniform4iv(this.i65_1, this.j65_1);
    return true;
  };
  MappedUniform4iv.$metadata$ = classMeta('MappedUniform4iv', [MappedUniform]);
  function MappedUniformTex$Companion$getLoadedTex$lambda() {
    return function (it) {
      return it.n5t_1;
    };
  }
  function Companion_57() {
    Companion_instance_57 = this;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$();
    }
    tmp.k65_1 = tmp$ret$0;
  }
  Companion_57.prototype.l65 = function (texData, texture, ctx) {
    var tmp = this.k65_1.d3();
    removeAll_1(tmp, MappedUniformTex$Companion$getLoadedTex$lambda());
    var tmp$ret$1;
    {
      var tmp0_getOrPut = this.k65_1;
      var value = tmp0_getOrPut.b3(texData);
      var tmp_0;
      if (value == null) {
        var tmp$ret$0;
        {
          var tmp0_subject = texture;
          var tmp_1;
          if (tmp0_subject instanceof Texture1d) {
            tmp_1 = TextureLoader_getInstance().o65(ctx, texture.u4z_1, texData);
          } else {
            if (tmp0_subject instanceof Texture2d) {
              tmp_1 = TextureLoader_getInstance().u5x(ctx, texture.u4z_1, texData);
            } else {
              if (tmp0_subject instanceof Texture3d) {
                tmp_1 = TextureLoader_getInstance().n65(ctx, texture.u4z_1, texData);
              } else {
                if (tmp0_subject instanceof TextureCube) {
                  var tmp_2 = TextureLoader_getInstance();
                  tmp_1 = tmp_2.m65(ctx, texture.u4z_1, texData instanceof TextureDataCube ? texData : THROW_CCE());
                } else {
                  throw IllegalArgumentException_init_$Create$('Unsupported texture type');
                }
              }
            }
          }
          var loaded = tmp_1;
          tmp$ret$0 = loaded;
        }
        var answer = tmp$ret$0;
        tmp0_getOrPut.a(texData, answer);
        tmp_0 = answer;
      } else {
        tmp_0 = value;
      }
      tmp$ret$1 = tmp_0;
    }
    return tmp$ret$1;
  };
  Companion_57.$metadata$ = objectMeta('Companion');
  var Companion_instance_57;
  function Companion_getInstance_57() {
    if (Companion_instance_57 == null)
      new Companion_57();
    return Companion_instance_57;
  }
  function MappedUniformTex$checkLoadingState$lambda(this$0, $texture, $deferredData, $ctx) {
    return function (ex) {
      var tmp;
      if (!(ex == null)) {
        var tmp$ret$3;
        {
          var tmp$ret$2;
          {
            var tmp2_eExt = Log_getInstance();
            var tmp$ret$1;
            {
              var tmp1_logExt = Level_ERROR_getInstance();
              var tmp0_log = getKClassFromExpression(this$0).ei();
              var tmp_0;
              if (tmp1_logExt.e1w_1 >= tmp2_eExt.y1v_1.e1w_1) {
                var tmp_1 = tmp2_eExt.z1v_1;
                var tmp$ret$0;
                {
                  tmp$ret$0 = 'Texture loading failed: ' + ex;
                }
                tmp_0 = tmp_1(tmp1_logExt, tmp0_log, tmp$ret$0);
              }
              tmp$ret$1 = tmp_0;
            }
            tmp$ret$2 = tmp$ret$1;
          }
          tmp$ret$3 = tmp$ret$2;
        }
        $texture.y4z_1 = LoadingState_LOADING_FAILED_getInstance();
        tmp = Unit_getInstance();
      } else {
        $texture.x4z_1 = Companion_getInstance_57().l65($deferredData.u19(), $texture, $ctx);
        $texture.y4z_1 = LoadingState_LOADED_getInstance();
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function MappedUniformTex(texUnit, target) {
    Companion_getInstance_57();
    this.s62_1 = texUnit;
    this.t62_1 = target;
  }
  MappedUniformTex.prototype.u62 = function () {
    return this.s62_1;
  };
  MappedUniformTex.prototype.v62 = function (ctx, texture, arrayIdx) {
    var gl = ctx.g5s_1;
    if (texture.y4z_1.equals(LoadingState_NOT_LOADED_getInstance())) {
      var tmp0_subject = texture.w4z_1;
      if (tmp0_subject instanceof AsyncTextureLoader) {
        var deferredData = texture.w4z_1.d57(ctx);
        deferredData.p18(MappedUniformTex$checkLoadingState$lambda(this, texture, deferredData, ctx));
      } else {
        if (tmp0_subject instanceof SyncTextureLoader) {
          var data = texture.w4z_1.f57(ctx);
          texture.x4z_1 = Companion_getInstance_57().l65(data, texture, ctx);
          texture.y4z_1 = LoadingState_LOADED_getInstance();
        } else {
          if (tmp0_subject instanceof BufferedTextureLoader) {
            texture.x4z_1 = Companion_getInstance_57().l65(texture.w4z_1.g56_1, texture, ctx);
            texture.y4z_1 = LoadingState_LOADED_getInstance();
          } else {
          }
        }
      }
    }
    if (texture.y4z_1.equals(LoadingState_LOADED_getInstance())) {
      var tmp = texture.x4z_1;
      var tex = tmp instanceof LoadedTextureWebGl ? tmp : THROW_CCE();
      gl.activeTexture(this.s62_1 + arrayIdx | 0);
      gl.bindTexture(this.t62_1, tex.l5t_1);
      return true;
    }
    return false;
  };
  MappedUniformTex.$metadata$ = classMeta('MappedUniformTex', [MappedUniform]);
  function setCullMethod($this, cullMethod) {
    if (!equals($this.r65_1, cullMethod)) {
      $this.r65_1 = cullMethod;
      var tmp0_subject = cullMethod;
      var tmp0 = tmp0_subject.y1();
      switch (tmp0) {
        case 0:
          _get_gl__ndc1ty($this.t65_1).enable(WebGLRenderingContext.CULL_FACE);
          _get_gl__ndc1ty($this.t65_1).cullFace(WebGLRenderingContext.BACK);
          break;
        case 1:
          _get_gl__ndc1ty($this.t65_1).enable(WebGLRenderingContext.CULL_FACE);
          _get_gl__ndc1ty($this.t65_1).cullFace(WebGLRenderingContext.FRONT);
          break;
        case 2:
          _get_gl__ndc1ty($this.t65_1).disable(WebGLRenderingContext.CULL_FACE);
          break;
      }
    }
  }
  function setWriteDepth($this, enabled) {
    if (!($this.p65_1 === enabled)) {
      $this.p65_1 = enabled;
      _get_gl__ndc1ty($this.t65_1).depthMask(enabled);
    }
  }
  function setDepthTest($this, depthCompareOp) {
    if (!equals($this.q65_1, depthCompareOp)) {
      $this.q65_1 = depthCompareOp;
      if (depthCompareOp.equals(DepthCompareOp_DISABLED_getInstance())) {
        _get_gl__ndc1ty($this.t65_1).disable(WebGLRenderingContext.DEPTH_TEST);
      } else {
        _get_gl__ndc1ty($this.t65_1).enable(WebGLRenderingContext.DEPTH_TEST);
        _get_gl__ndc1ty($this.t65_1).depthFunc(get_glOp(depthCompareOp));
      }
    }
  }
  function setBlendMode($this, blendMode) {
    var tmp0_subject = blendMode;
    var tmp0 = tmp0_subject.y1();
    switch (tmp0) {
      case 0:
        _get_gl__ndc1ty($this.t65_1).disable(WebGLRenderingContext.BLEND);
        break;
      case 1:
        _get_gl__ndc1ty($this.t65_1).blendFunc(WebGLRenderingContext.ONE, WebGLRenderingContext.ONE);
        _get_gl__ndc1ty($this.t65_1).enable(WebGLRenderingContext.BLEND);
        break;
      case 2:
        _get_gl__ndc1ty($this.t65_1).blendFunc(WebGLRenderingContext.SRC_ALPHA, WebGLRenderingContext.ONE_MINUS_SRC_ALPHA);
        _get_gl__ndc1ty($this.t65_1).enable(WebGLRenderingContext.BLEND);
        break;
      case 3:
        _get_gl__ndc1ty($this.t65_1).blendFunc(WebGLRenderingContext.ONE, WebGLRenderingContext.ONE_MINUS_SRC_ALPHA);
        _get_gl__ndc1ty($this.t65_1).enable(WebGLRenderingContext.BLEND);
        break;
    }
  }
  function _get_gl__ndc1ty($this) {
    return $this.u5t_1.g5s_1;
  }
  function GlAttribs($outer) {
    this.t65_1 = $outer;
    this.p65_1 = true;
    this.q65_1 = null;
    this.r65_1 = null;
    this.s65_1 = 0.0;
  }
  GlAttribs.prototype.u65 = function (pipeline) {
    setBlendMode(this, pipeline.p2x_1);
    setDepthTest(this, pipeline.q2x_1);
    setWriteDepth(this, pipeline.r2x_1);
    setCullMethod(this, pipeline.o2x_1);
    if (!(this.s65_1 === pipeline.s2x_1)) {
      this.s65_1 = pipeline.s2x_1;
      _get_gl__ndc1ty(this.t65_1).lineWidth(pipeline.s2x_1);
    }
  };
  GlAttribs.$metadata$ = classMeta('GlAttribs');
  function clearMask(_this__u8e3s4, $this) {
    var mask = 0;
    if (_this__u8e3s4.p4l_1) {
      mask = WebGLRenderingContext.DEPTH_BUFFER_BIT;
    }
    if (!(_this__u8e3s4.j4z() == null)) {
      mask = mask | WebGLRenderingContext.COLOR_BUFFER_BIT;
    }
    return mask;
  }
  function QueueRendererWebGl(ctx) {
    this.u5t_1 = ctx;
    this.v5t_1 = new GlAttribs(this);
    this.w5t_1 = new ShaderManager(this.u5t_1);
    this.x5t_1 = new Float32Array(4);
  }
  QueueRendererWebGl.prototype.r52 = function () {
    return this.u5t_1;
  };
  QueueRendererWebGl.prototype.v5x = function (pipelines) {
    {
      var tmp0_iterator = pipelines.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          this.w5t_1.y65(element);
        }
      }
    }
  };
  QueueRendererWebGl.prototype.y5t = function (queue) {
    if (this.u5t_1.p2d()) {
      Profiling_getInstance().o2f(queue.w52_1.n4z('render'));
    }
    var tmp$ret$6;
    {
      var tmp0_apply = queue.w52_1;
      {
      }
      {
        this.u5t_1.g5s_1.viewport(tmp0_apply.j4l_1.s4n_1, tmp0_apply.j4l_1.g23(), tmp0_apply.j4l_1.u4n_1, tmp0_apply.j4l_1.v3z());
        if (tmp0_apply instanceof OffscreenRenderPass2d) {
          var inductionVariable = 0;
          var last = tmp0_apply.x4y().v4u_1;
          if (inductionVariable < last)
            do {
              var i = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              var tmp1_elvis_lhs = tmp0_apply.o4l_1[i];
              var tmp2_safe_receiver = tmp1_elvis_lhs == null ? tmp0_apply.j4z() : tmp1_elvis_lhs;
              if (tmp2_safe_receiver == null)
                null;
              else {
                var tmp$ret$4;
                {
                  {
                  }
                  {
                    var tmp0_set = this.x5t_1;
                    var tmp1_set = tmp2_safe_receiver.u55();
                    var tmp$ret$0;
                    {
                      tmp$ret$0 = tmp0_set;
                    }
                    tmp$ret$0[0] = tmp1_set;
                  }
                  {
                    var tmp2_set = this.x5t_1;
                    var tmp3_set = tmp2_safe_receiver.w55();
                    var tmp$ret$1;
                    {
                      tmp$ret$1 = tmp2_set;
                    }
                    tmp$ret$1[1] = tmp3_set;
                  }
                  {
                    var tmp4_set = this.x5t_1;
                    var tmp5_set = tmp2_safe_receiver.x55();
                    var tmp$ret$2;
                    {
                      tmp$ret$2 = tmp4_set;
                    }
                    tmp$ret$2[2] = tmp5_set;
                  }
                  {
                    var tmp6_set = this.x5t_1;
                    var tmp7_set = tmp2_safe_receiver.y55();
                    var tmp$ret$3;
                    {
                      tmp$ret$3 = tmp6_set;
                    }
                    tmp$ret$3[3] = tmp7_set;
                  }
                  tmp$ret$4 = this.u5t_1.g5s_1.clearBufferfv(WebGL2RenderingContext.COLOR, i, this.x5t_1);
                }
              }
            }
             while (inductionVariable < last);
          if (tmp0_apply.p4l_1) {
            this.u5t_1.g5s_1.clear(WebGLRenderingContext.DEPTH_BUFFER_BIT);
          }
        } else {
          var tmp3_safe_receiver = tmp0_apply.j4z();
          if (tmp3_safe_receiver == null)
            null;
          else {
            var tmp$ret$5;
            {
              {
              }
              tmp$ret$5 = this.u5t_1.g5s_1.clearColor(tmp3_safe_receiver.u55(), tmp3_safe_receiver.w55(), tmp3_safe_receiver.x55(), tmp3_safe_receiver.y55());
            }
          }
          var clearMask_0 = clearMask(tmp0_apply, this);
          if (!(clearMask_0 === 0)) {
            this.u5t_1.g5s_1.clear(clearMask_0);
          }
        }
        tmp0_apply.l4z(this.u5t_1);
      }
      tmp$ret$6 = tmp0_apply;
    }
    var numPrimitives = 0;
    var tmp0_iterator = queue.l5a().h();
    while (tmp0_iterator.n()) {
      var cmd = tmp0_iterator.o();
      var tmp1_safe_receiver = cmd.c39_1;
      if (tmp1_safe_receiver == null)
        null;
      else {
        var tmp$ret$8;
        {
          {
          }
          this.v5t_1.u65(tmp1_safe_receiver);
          var tmp;
          if (cmd.b39_1.v3w() > 0) {
            var tmp0_safe_receiver = this.w5t_1.z65(cmd);
            if (tmp0_safe_receiver == null)
              null;
            else {
              var tmp$ret$7;
              {
                {
                }
                var tmp_0;
                if (!(tmp0_safe_receiver.e61_1 === 0)) {
                  var insts = cmd.a39_1.g2r_1;
                  if (insts == null) {
                    _get_gl__ndc1ty(this).drawElements(tmp0_safe_receiver.f61_1, tmp0_safe_receiver.d61_1, tmp0_safe_receiver.e61_1, 0);
                    numPrimitives = numPrimitives + cmd.b39_1.s5h() | 0;
                  } else if (insts.r2t_1 > 0) {
                    _get_gl__ndc1ty(this).drawElementsInstanced(tmp0_safe_receiver.f61_1, tmp0_safe_receiver.d61_1, tmp0_safe_receiver.e61_1, 0, insts.r2t_1);
                    numPrimitives = numPrimitives + imul(cmd.b39_1.s5h(), insts.r2t_1) | 0;
                  }
                  tmp_0 = this.u5t_1.s2d().u1z(1);
                }
                tmp$ret$7 = tmp_0;
              }
            }
            tmp = Unit_getInstance();
          }
          tmp$ret$8 = tmp;
        }
      }
    }
    this.u5t_1.s2d().v1z(numPrimitives);
    queue.w52_1.m4z(this.u5t_1);
    if (this.u5t_1.p2d()) {
      Profiling_getInstance().g2g(queue.w52_1.n4z('render'));
    }
  };
  QueueRendererWebGl.$metadata$ = classMeta('QueueRendererWebGl');
  function ShaderGeneratorImplWebGl() {
    ShaderGenerator.call(this);
  }
  ShaderGeneratorImplWebGl.$metadata$ = classMeta('ShaderGeneratorImplWebGl', undefined, undefined, undefined, undefined, ShaderGenerator.prototype);
  function _get_gl__ndc1ty_0($this) {
    return $this.v65_1.g5s_1;
  }
  function compileShader($this, code) {
    var vert = _get_gl__ndc1ty_0($this).createShader(WebGLRenderingContext.VERTEX_SHADER);
    _get_gl__ndc1ty_0($this).shaderSource(vert, code.c52_1);
    _get_gl__ndc1ty_0($this).compileShader(vert);
    var vsStatus = _get_gl__ndc1ty_0($this).getShaderParameter(vert, WebGLRenderingContext.COMPILE_STATUS);
    if (!equals(vsStatus, true)) {
      var log = _get_gl__ndc1ty_0($this).getShaderInfoLog(vert);
      var tmp$ret$3;
      {
        var tmp$ret$2;
        {
          var tmp2_eExt = Log_getInstance();
          var tmp$ret$1;
          {
            var tmp1_logExt = Level_ERROR_getInstance();
            var tmp0_log = getKClassFromExpression($this).ei();
            var tmp;
            if (tmp1_logExt.e1w_1 >= tmp2_eExt.y1v_1.e1w_1) {
              var tmp_0 = tmp2_eExt.z1v_1;
              var tmp$ret$0;
              {
                tmp$ret$0 = 'Vertex shader compilation failed:\n' + log;
              }
              tmp = tmp_0(tmp1_logExt, tmp0_log, tmp$ret$0);
            }
            tmp$ret$1 = tmp;
          }
          tmp$ret$2 = tmp$ret$1;
        }
        tmp$ret$3 = tmp$ret$2;
      }
      var tmp$ret$7;
      {
        var tmp$ret$6;
        {
          var tmp2_eExt_0 = Log_getInstance();
          var tmp$ret$5;
          {
            var tmp1_logExt_0 = Level_ERROR_getInstance();
            var tmp0_log_0 = getKClassFromExpression($this).ei();
            var tmp_1;
            if (tmp1_logExt_0.e1w_1 >= tmp2_eExt_0.y1v_1.e1w_1) {
              var tmp_2 = tmp2_eExt_0.z1v_1;
              var tmp$ret$4;
              {
                tmp$ret$4 = 'Shader source: \n' + formatShaderSrc($this, code.c52_1);
              }
              tmp_1 = tmp_2(tmp1_logExt_0, tmp0_log_0, tmp$ret$4);
            }
            tmp$ret$5 = tmp_1;
          }
          tmp$ret$6 = tmp$ret$5;
        }
        tmp$ret$7 = tmp$ret$6;
      }
      throw KoolException_init_$Create$('Vertex shader compilation failed: ' + log);
    }
    var frag = _get_gl__ndc1ty_0($this).createShader(WebGLRenderingContext.FRAGMENT_SHADER);
    _get_gl__ndc1ty_0($this).shaderSource(frag, code.d52_1);
    _get_gl__ndc1ty_0($this).compileShader(frag);
    var fsStatus = _get_gl__ndc1ty_0($this).getShaderParameter(frag, WebGLRenderingContext.COMPILE_STATUS);
    if (!equals(fsStatus, true)) {
      var log_0 = _get_gl__ndc1ty_0($this).getShaderInfoLog(frag);
      var tmp$ret$11;
      {
        var tmp$ret$10;
        {
          var tmp2_eExt_1 = Log_getInstance();
          var tmp$ret$9;
          {
            var tmp1_logExt_1 = Level_ERROR_getInstance();
            var tmp0_log_1 = getKClassFromExpression($this).ei();
            var tmp_3;
            if (tmp1_logExt_1.e1w_1 >= tmp2_eExt_1.y1v_1.e1w_1) {
              var tmp_4 = tmp2_eExt_1.z1v_1;
              var tmp$ret$8;
              {
                tmp$ret$8 = 'Fragment shader compilation failed:\n' + log_0;
              }
              tmp_3 = tmp_4(tmp1_logExt_1, tmp0_log_1, tmp$ret$8);
            }
            tmp$ret$9 = tmp_3;
          }
          tmp$ret$10 = tmp$ret$9;
        }
        tmp$ret$11 = tmp$ret$10;
      }
      var tmp$ret$15;
      {
        var tmp$ret$14;
        {
          var tmp2_eExt_2 = Log_getInstance();
          var tmp$ret$13;
          {
            var tmp1_logExt_2 = Level_ERROR_getInstance();
            var tmp0_log_2 = getKClassFromExpression($this).ei();
            var tmp_5;
            if (tmp1_logExt_2.e1w_1 >= tmp2_eExt_2.y1v_1.e1w_1) {
              var tmp_6 = tmp2_eExt_2.z1v_1;
              var tmp$ret$12;
              {
                tmp$ret$12 = 'Shader source: \n' + formatShaderSrc($this, code.d52_1);
              }
              tmp_5 = tmp_6(tmp1_logExt_2, tmp0_log_2, tmp$ret$12);
            }
            tmp$ret$13 = tmp_5;
          }
          tmp$ret$14 = tmp$ret$13;
        }
        tmp$ret$15 = tmp$ret$14;
      }
      throw KoolException_init_$Create$('Fragment shader compilation failed: ' + log_0);
    }
    var prog = _get_gl__ndc1ty_0($this).createProgram();
    _get_gl__ndc1ty_0($this).attachShader(prog, vert);
    _get_gl__ndc1ty_0($this).attachShader(prog, frag);
    _get_gl__ndc1ty_0($this).linkProgram(prog);
    _get_gl__ndc1ty_0($this).deleteShader(vert);
    _get_gl__ndc1ty_0($this).deleteShader(frag);
    if (!equals(_get_gl__ndc1ty_0($this).getProgramParameter(prog, WebGLRenderingContext.LINK_STATUS), true)) {
      var log_1 = _get_gl__ndc1ty_0($this).getProgramInfoLog(prog);
      var tmp$ret$19;
      {
        var tmp$ret$18;
        {
          var tmp2_eExt_3 = Log_getInstance();
          var tmp$ret$17;
          {
            var tmp1_logExt_3 = Level_ERROR_getInstance();
            var tmp0_log_3 = getKClassFromExpression($this).ei();
            var tmp_7;
            if (tmp1_logExt_3.e1w_1 >= tmp2_eExt_3.y1v_1.e1w_1) {
              var tmp_8 = tmp2_eExt_3.z1v_1;
              var tmp$ret$16;
              {
                tmp$ret$16 = 'Shader linkage failed:\n' + log_1;
              }
              tmp_7 = tmp_8(tmp1_logExt_3, tmp0_log_3, tmp$ret$16);
            }
            tmp$ret$17 = tmp_7;
          }
          tmp$ret$18 = tmp$ret$17;
        }
        tmp$ret$19 = tmp$ret$18;
      }
      var tmp$ret$23;
      {
        var tmp$ret$22;
        {
          var tmp2_eExt_4 = Log_getInstance();
          var tmp$ret$21;
          {
            var tmp1_logExt_4 = Level_ERROR_getInstance();
            var tmp0_log_4 = getKClassFromExpression($this).ei();
            var tmp_9;
            if (tmp1_logExt_4.e1w_1 >= tmp2_eExt_4.y1v_1.e1w_1) {
              var tmp_10 = tmp2_eExt_4.z1v_1;
              var tmp$ret$20;
              {
                tmp$ret$20 = 'Vertex shader source: \n' + formatShaderSrc($this, code.c52_1);
              }
              tmp_9 = tmp_10(tmp1_logExt_4, tmp0_log_4, tmp$ret$20);
            }
            tmp$ret$21 = tmp_9;
          }
          tmp$ret$22 = tmp$ret$21;
        }
        tmp$ret$23 = tmp$ret$22;
      }
      var tmp$ret$27;
      {
        var tmp$ret$26;
        {
          var tmp2_eExt_5 = Log_getInstance();
          var tmp$ret$25;
          {
            var tmp1_logExt_5 = Level_ERROR_getInstance();
            var tmp0_log_5 = getKClassFromExpression($this).ei();
            var tmp_11;
            if (tmp1_logExt_5.e1w_1 >= tmp2_eExt_5.y1v_1.e1w_1) {
              var tmp_12 = tmp2_eExt_5.z1v_1;
              var tmp$ret$24;
              {
                tmp$ret$24 = 'Fragment shader source: \n' + formatShaderSrc($this, code.d52_1);
              }
              tmp_11 = tmp_12(tmp1_logExt_5, tmp0_log_5, tmp$ret$24);
            }
            tmp$ret$25 = tmp_11;
          }
          tmp$ret$26 = tmp$ret$25;
        }
        tmp$ret$27 = tmp$ret$26;
      }
      throw KoolException_init_$Create$('Shader linkage failed: ' + log_1);
    }
    return prog;
  }
  function formatShaderSrc($this, src) {
    var srcBuilder = StringBuilder_init_$Create$();
    {
      var tmp0_forEachIndexed = lines(src);
      var index = 0;
      var tmp0_iterator = tmp0_forEachIndexed.h();
      while (tmp0_iterator.n()) {
        var item = tmp0_iterator.o();
        {
          var tmp1 = index;
          index = tmp1 + 1 | 0;
          var tmp1__anonymous__uwfjfc = checkIndexOverflow(tmp1);
          srcBuilder.ga('' + (tmp1__anonymous__uwfjfc + 1 | 0) + ' ' + item + '\n');
        }
      }
    }
    return srcBuilder.toString();
  }
  function ShaderManager(ctx) {
    this.v65_1 = ctx;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$();
    }
    tmp.w65_1 = tmp$ret$0;
    this.x65_1 = null;
  }
  ShaderManager.prototype.r52 = function () {
    return this.v65_1;
  };
  ShaderManager.prototype.z65 = function (cmd) {
    var pipeline = ensureNotNull(cmd.c39_1);
    var tmp$ret$1;
    {
      var tmp0_getOrPut = this.w65_1;
      var value = tmp0_getOrPut.b3(pipeline);
      var tmp;
      if (value == null) {
        var tmp$ret$0;
        {
          tmp$ret$0 = new CompiledShader(compileShader(this, pipeline.u2x_1), pipeline, this.v65_1);
        }
        var answer = tmp$ret$0;
        tmp0_getOrPut.a(pipeline, answer);
        tmp = answer;
      } else {
        tmp = value;
      }
      tmp$ret$1 = tmp;
    }
    var shader = tmp$ret$1;
    if (!(shader === this.x65_1)) {
      var tmp0_safe_receiver = this.x65_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        tmp0_safe_receiver.j62();
      }
      this.x65_1 = shader;
      shader.i62();
    }
    return shader.u61(cmd);
  };
  ShaderManager.prototype.y65 = function (pipeline) {
    var shader = this.w65_1.b3(pipeline);
    if (!(shader == null)) {
      shader.k62(pipeline);
      if (shader.q()) {
        if (equals(shader, this.x65_1)) {
          shader.j62();
          this.x65_1 = null;
        }
        shader.l62();
        this.w65_1.tf(pipeline);
      }
    }
  };
  ShaderManager.$metadata$ = classMeta('ShaderManager');
  function texImage2d($this, gl, target, data) {
    gl.pixelStorei(WebGLRenderingContext.UNPACK_COLORSPACE_CONVERSION_WEBGL, WebGLRenderingContext.NONE);
    var tmp0_subject = data;
    if (tmp0_subject instanceof TextureData1d) {
      gl.texImage2D(target, 0, get_glInternalFormat(data.a1x_1), data.x1w_1, 1, 0, get_glFormat(data.a1x_1), get_glType(data.a1x_1), _get_arrayBufferView__gu8wvh(data, $this));
    } else {
      if (tmp0_subject instanceof TextureData2d) {
        gl.texImage2D(target, 0, get_glInternalFormat(data.a1x_1), data.x1w_1, data.y1w_1, 0, get_glFormat(data.a1x_1), get_glType(data.a1x_1), _get_arrayBufferView__gu8wvh(data, $this));
      } else {
        if (tmp0_subject instanceof ImageTextureData) {
          gl.texImage2D(target, 0, WebGLRenderingContext.RGBA, WebGLRenderingContext.RGBA, WebGLRenderingContext.UNSIGNED_BYTE, data.y5u_1);
        } else {
          throw IllegalArgumentException_init_$Create$('Invalid TextureData type for texImage2d: ' + data);
        }
      }
    }
  }
  function estimateTexSize(_this__u8e3s4, $this) {
    var tmp;
    if (_this__u8e3s4 instanceof TextureDataCube) {
      tmp = 6;
    } else {
      tmp = 1;
    }
    var layers = tmp;
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_max = _this__u8e3s4.x1w_1;
          var tmp1_max = _this__u8e3s4.y1w_1;
          tmp$ret$0 = Math.max(tmp0_max, tmp1_max);
        }
        var tmp2_log2 = tmp$ret$0;
        tmp$ret$1 = log2(tmp2_log2);
      }
      var tmp3_floor = tmp$ret$1;
      tmp$ret$2 = Math.floor(tmp3_floor);
    }
    var mipLevels = numberToInt(tmp$ret$2) + 1 | 0;
    return Companion_getInstance_35().e56(_this__u8e3s4.x1w_1, _this__u8e3s4.y1w_1, layers, mipLevels, get_pxSize(_this__u8e3s4.a1x_1));
  }
  function _get_arrayBufferView__gu8wvh(_this__u8e3s4, $this) {
    var bufData = _this__u8e3s4.m55();
    var tmp;
    if (bufData instanceof Uint8BufferImpl) {
      tmp = bufData.yh();
    } else {
      if (bufData instanceof Uint16BufferImpl) {
        tmp = bufData.yh();
      } else {
        if (bufData instanceof Float32BufferImpl) {
          tmp = bufData.yh();
        } else {
          throw IllegalArgumentException_init_$Create$('Unsupported buffer type');
        }
      }
    }
    return tmp;
  }
  function TextureLoader_0() {
    TextureLoader_instance = this;
  }
  TextureLoader_0.prototype.o65 = function (ctx, props, img) {
    var tex = new LoadedTextureWebGl(ctx, WebGLRenderingContext.TEXTURE_2D, JsImpl_getInstance().d5r().createTexture(), estimateTexSize(img, this));
    tex.r5t(img.x1w_1, 1, 1);
    tex.s5t(props);
    texImage2d(this, JsImpl_getInstance().d5r(), WebGLRenderingContext.TEXTURE_2D, img);
    if (props.h54_1) {
      JsImpl_getInstance().d5r().generateMipmap(WebGLRenderingContext.TEXTURE_2D);
    }
    return tex;
  };
  TextureLoader_0.prototype.u5x = function (ctx, props, img) {
    var gl = ctx.g5s_1;
    var tex = new LoadedTextureWebGl(ctx, WebGLRenderingContext.TEXTURE_2D, gl.createTexture(), estimateTexSize(img, this));
    tex.r5t(img.x1w_1, img.y1w_1, 1);
    tex.s5t(props);
    texImage2d(this, gl, WebGLRenderingContext.TEXTURE_2D, img);
    if (props.h54_1) {
      gl.generateMipmap(WebGLRenderingContext.TEXTURE_2D);
    }
    return tex;
  };
  TextureLoader_0.prototype.n65 = function (ctx, props, img) {
    var tex = new LoadedTextureWebGl(ctx, WebGL2RenderingContext.TEXTURE_3D, JsImpl_getInstance().d5r().createTexture(), estimateTexSize(img, this));
    tex.r5t(img.x1w_1, img.y1w_1, img.z1w_1);
    tex.s5t(props);
    var tmp0_subject = img;
    if (tmp0_subject instanceof TextureData3d) {
      JsImpl_getInstance().d5r().texImage3D(WebGL2RenderingContext.TEXTURE_3D, 0, get_glInternalFormat(img.a1x_1), img.x1w_1, img.y1w_1, img.z1w_1, 0, get_glFormat(img.a1x_1), get_glType(img.a1x_1), _get_arrayBufferView__gu8wvh(img, this));
    } else {
      if (tmp0_subject instanceof ImageAtlasTextureData) {
        JsImpl_getInstance().d5r().texStorage3D(WebGL2RenderingContext.TEXTURE_3D, 1, get_glInternalFormat(img.a1x_1), img.x1w_1, img.y1w_1, img.z1w_1);
        var inductionVariable = 0;
        var last = img.z1w_1;
        if (inductionVariable < last)
          do {
            var z = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            JsImpl_getInstance().d5r().texSubImage3D(WebGL2RenderingContext.TEXTURE_3D, 0, 0, 0, z, img.x1w_1, img.y1w_1, 1, get_glFormat(img.a1x_1), get_glType(img.a1x_1), img.s5u_1[z]);
          }
           while (inductionVariable < last);
      }
    }
    if (props.h54_1) {
      JsImpl_getInstance().d5r().generateMipmap(WebGL2RenderingContext.TEXTURE_3D);
    }
    return tex;
  };
  TextureLoader_0.prototype.m65 = function (ctx, props, img) {
    var gl = ctx.g5s_1;
    var tex = new LoadedTextureWebGl(ctx, WebGLRenderingContext.TEXTURE_CUBE_MAP, gl.createTexture(), estimateTexSize(img, this));
    tex.r5t(img.u3z(), img.v3z(), 1);
    tex.s5t(props);
    texImage2d(this, gl, WebGLRenderingContext.TEXTURE_CUBE_MAP_POSITIVE_X, img.h66_1);
    texImage2d(this, gl, WebGLRenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_X, img.g66_1);
    texImage2d(this, gl, WebGLRenderingContext.TEXTURE_CUBE_MAP_POSITIVE_Y, img.i66_1);
    texImage2d(this, gl, WebGLRenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_Y, img.j66_1);
    texImage2d(this, gl, WebGLRenderingContext.TEXTURE_CUBE_MAP_POSITIVE_Z, img.f66_1);
    texImage2d(this, gl, WebGLRenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_Z, img.e66_1);
    if (props.h54_1) {
      gl.generateMipmap(WebGLRenderingContext.TEXTURE_CUBE_MAP);
    }
    return tex;
  };
  TextureLoader_0.$metadata$ = objectMeta('TextureLoader');
  var TextureLoader_instance;
  function TextureLoader_getInstance() {
    if (TextureLoader_instance == null)
      new TextureLoader_0();
    return TextureLoader_instance;
  }
  function VboBinder(vbo, elemSize, strideBytes, offset, type) {
    this.y61_1 = vbo;
    this.z61_1 = elemSize;
    this.a62_1 = strideBytes;
    this.b62_1 = offset;
    this.c62_1 = type;
  }
  VboBinder.prototype.d62 = function (target, ctx) {
    this.y61_1.c60(ctx);
    if (this.c62_1 === WebGLRenderingContext.INT ? true : this.c62_1 === WebGLRenderingContext.UNSIGNED_INT) {
      ctx.g5s_1.vertexAttribIPointer(target, this.z61_1, this.c62_1, this.a62_1, imul(this.b62_1, 4));
    } else {
      ctx.g5s_1.vertexAttribPointer(target, this.z61_1, this.c62_1, false, this.a62_1, imul(this.b62_1, 4));
    }
  };
  VboBinder.$metadata$ = classMeta('VboBinder');
  function createUint8Buffer(capacity) {
    return Uint8BufferImpl_init_$Create$(capacity);
  }
  function Uint8BufferImpl_init_$Init$(capacity, $this) {
    Uint8BufferImpl.call($this, new Uint8Array(capacity));
    return $this;
  }
  function Uint8BufferImpl_init_$Create$(capacity) {
    return Uint8BufferImpl_init_$Init$(capacity, Object.create(Uint8BufferImpl.prototype));
  }
  function Uint8BufferImpl$_init_$lambda_apvkjx($array) {
    return function () {
      return $array;
    };
  }
  function Uint8BufferImpl(array) {
    var tmp = array.length;
    GenericBuffer.call(this, tmp, Uint8BufferImpl$_init_$lambda_apvkjx(array));
  }
  Uint8BufferImpl.prototype.r = function (i) {
    var tmp$ret$1;
    {
      var tmp0_get = this.yh();
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_get;
      }
      tmp$ret$1 = tmp$ret$0[i];
    }
    return tmp$ret$1;
  };
  Uint8BufferImpl.prototype.v55 = function (i, value) {
    {
      var tmp0_set = this.yh();
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_set;
      }
      tmp$ret$0[i] = value;
    }
  };
  Uint8BufferImpl.prototype.e5n = function (value) {
    {
      var tmp0_set = this.yh();
      var tmp0_this = this;
      var tmp1 = tmp0_this.qr();
      tmp0_this.w4s(tmp1 + 1 | 0);
      var tmp1_set = tmp1;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_set;
      }
      tmp$ret$0[tmp1_set] = value;
    }
    return this;
  };
  Uint8BufferImpl.$metadata$ = classMeta('Uint8BufferImpl', [Uint8Buffer], undefined, undefined, undefined, GenericBuffer.prototype);
  function GenericBuffer(capacity, create) {
    this.e60_1 = capacity;
    this.f60_1 = create();
    this.g60_1 = this.b1w();
    this.h60_1 = 0;
  }
  GenericBuffer.prototype.b1w = function () {
    return this.e60_1;
  };
  GenericBuffer.prototype.yh = function () {
    return this.f60_1;
  };
  GenericBuffer.prototype.j5f = function (value) {
    if (value < 0 ? true : value > this.b1w()) {
      throw KoolException_init_$Create$('Limit is out of bounds: ' + value + ' (capacity: ' + this.b1w() + ')');
    }
    this.g60_1 = value;
    if (this.qr() > value) {
      this.w4s(value);
    }
  };
  GenericBuffer.prototype.f5n = function () {
    return this.g60_1;
  };
  GenericBuffer.prototype.w4s = function (_set____db54di) {
    this.h60_1 = _set____db54di;
  };
  GenericBuffer.prototype.qr = function () {
    return this.h60_1;
  };
  GenericBuffer.prototype.a5i = function () {
    return this.f5n() - this.qr() | 0;
  };
  GenericBuffer.prototype.h3y = function () {
    this.j5f(this.qr());
    this.w4s(0);
  };
  GenericBuffer.prototype.t7 = function () {
    this.j5f(this.b1w());
    this.w4s(0);
  };
  GenericBuffer.$metadata$ = classMeta('GenericBuffer', [Buffer]);
  function createFloat32Buffer(capacity) {
    return new Float32BufferImpl(capacity);
  }
  function createUint32Buffer(capacity) {
    return new Uint32BufferImpl(capacity);
  }
  function BufferUtil() {
    BufferUtil_instance = this;
  }
  BufferUtil.prototype.k5o = function (zipData) {
    var uint8Data = (zipData instanceof Uint8BufferImpl ? zipData : THROW_CCE()).yh();
    return new Uint8BufferImpl(Pako.inflate(uint8Data));
  };
  BufferUtil.prototype.j5o = function (base64) {
    return new Uint8BufferImpl(this.o66(base64));
  };
  BufferUtil.prototype.o66 = function (base64) {
    var tmp = function () {
      var binary_string = window.atob(base64);
      var len = binary_string.length;
      var bytes = new Uint8Array(len);
      for (var i = 0; i < len; i++) {
        bytes[i] = binary_string.charCodeAt(i);
      }
      return bytes;
    }();
    return tmp instanceof Uint8Array ? tmp : THROW_CCE();
  };
  BufferUtil.$metadata$ = objectMeta('BufferUtil');
  var BufferUtil_instance;
  function BufferUtil_getInstance() {
    if (BufferUtil_instance == null)
      new BufferUtil();
    return BufferUtil_instance;
  }
  function createMixedBuffer(capacity) {
    return new MixedBufferImpl(capacity);
  }
  function Float32BufferImpl$_init_$lambda_l3hsy8($capacity) {
    return function () {
      return new Float32Array($capacity);
    };
  }
  function Float32BufferImpl(capacity) {
    GenericBuffer.call(this, capacity, Float32BufferImpl$_init_$lambda_l3hsy8(capacity));
  }
  Float32BufferImpl.prototype.r = function (i) {
    var tmp$ret$1;
    {
      var tmp0_get = this.yh();
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_get;
      }
      tmp$ret$1 = tmp$ret$0[i];
    }
    return tmp$ret$1;
  };
  Float32BufferImpl.prototype.m2g = function (i, value) {
    {
      var tmp0_set = this.yh();
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_set;
      }
      tmp$ret$0[i] = value;
    }
  };
  Float32BufferImpl.prototype.g5n = function (data, offset, len) {
    var inductionVariable = offset;
    var last = offset + len | 0;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        {
          var tmp0_set = this.yh();
          var tmp1_this = this;
          var tmp2 = tmp1_this.qr();
          tmp1_this.w4s(tmp2 + 1 | 0);
          var tmp1_set = tmp2;
          var tmp2_set = data[i];
          var tmp$ret$0;
          {
            tmp$ret$0 = tmp0_set;
          }
          tmp$ret$0[tmp1_set] = tmp2_set;
        }
      }
       while (inductionVariable < last);
    return this;
  };
  Float32BufferImpl.prototype.t4j = function (value) {
    {
      var tmp0_set = this.yh();
      var tmp0_this = this;
      var tmp1 = tmp0_this.qr();
      tmp0_this.w4s(tmp1 + 1 | 0);
      var tmp1_set = tmp1;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_set;
      }
      tmp$ret$0[tmp1_set] = value;
    }
    return this;
  };
  Float32BufferImpl.prototype.z3w = function (data) {
    var inductionVariable = data.qr();
    var last = data.f5n();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.t4j(data.r(i));
      }
       while (inductionVariable < last);
    return this;
  };
  Float32BufferImpl.$metadata$ = classMeta('Float32BufferImpl', [Float32Buffer], undefined, undefined, undefined, GenericBuffer.prototype);
  function Uint32BufferImpl$_init_$lambda_fn8iuq($capacity) {
    return function () {
      return new Uint32Array($capacity);
    };
  }
  function Uint32BufferImpl(capacity) {
    GenericBuffer.call(this, capacity, Uint32BufferImpl$_init_$lambda_fn8iuq(capacity));
  }
  Uint32BufferImpl.prototype.r = function (i) {
    var tmp$ret$1;
    {
      var tmp0_get = this.yh();
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_get;
      }
      tmp$ret$1 = tmp$ret$0[i];
    }
    return tmp$ret$1;
  };
  Uint32BufferImpl.prototype.x3w = function (value) {
    {
      var tmp0_set = this.yh();
      var tmp0_this = this;
      var tmp1 = tmp0_this.qr();
      tmp0_this.w4s(tmp1 + 1 | 0);
      var tmp1_set = tmp1;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_set;
      }
      tmp$ret$0[tmp1_set] = value;
    }
    return this;
  };
  Uint32BufferImpl.prototype.k5h = function (data) {
    var inductionVariable = data.qr();
    var last = data.f5n();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.x3w(data.r(i));
      }
       while (inductionVariable < last);
    return this;
  };
  Uint32BufferImpl.$metadata$ = classMeta('Uint32BufferImpl', [Uint32Buffer], undefined, undefined, undefined, GenericBuffer.prototype);
  function MixedBufferImpl$_init_$lambda_t0vvo0($capacity) {
    return function () {
      return new DataView(new ArrayBuffer($capacity));
    };
  }
  function MixedBufferImpl(capacity) {
    GenericBuffer.call(this, capacity, MixedBufferImpl$_init_$lambda_t0vvo0(capacity));
  }
  MixedBufferImpl.prototype.h5n = function (value) {
    this.yh().setUint32(this.qr(), value, true);
    var tmp0_this = this;
    tmp0_this.w4s(tmp0_this.qr() + 4 | 0);
    return this;
  };
  MixedBufferImpl.prototype.j5n = function (data, offset, len) {
    var inductionVariable = offset;
    var last = offset + len | 0;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.yh().setUint32(this.qr(), data[i], true);
        var tmp1_this = this;
        tmp1_this.w4s(tmp1_this.qr() + 4 | 0);
      }
       while (inductionVariable < last);
    return this;
  };
  MixedBufferImpl.prototype.m57 = function (value) {
    this.yh().setFloat32(this.qr(), value, true);
    var tmp0_this = this;
    tmp0_this.w4s(tmp0_this.qr() + 4 | 0);
    return this;
  };
  MixedBufferImpl.prototype.o58 = function (data, offset, len) {
    var inductionVariable = offset;
    var last = offset + len | 0;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.yh().setFloat32(this.qr(), data[i], true);
        var tmp1_this = this;
        tmp1_this.w4s(tmp1_this.qr() + 4 | 0);
      }
       while (inductionVariable < last);
    return this;
  };
  MixedBufferImpl.prototype.i57 = function (nBytes) {
    var tmp0_this = this;
    tmp0_this.w4s(tmp0_this.qr() + nBytes | 0);
    return this;
  };
  MixedBufferImpl.$metadata$ = classMeta('MixedBufferImpl', [MixedBuffer], undefined, undefined, undefined, GenericBuffer.prototype);
  function Uint16BufferImpl() {
  }
  Uint16BufferImpl.$metadata$ = classMeta('Uint16BufferImpl', [Uint16Buffer], undefined, undefined, undefined, GenericBuffer.prototype);
  function SystemClock() {
    SystemClock_instance = this;
  }
  SystemClock.prototype.z5p = function () {
    var tmp = performance.now();
    return ((!(tmp == null) ? typeof tmp === 'number' : false) ? tmp : THROW_CCE()) / 1000.0;
  };
  SystemClock.$metadata$ = objectMeta('SystemClock');
  var SystemClock_instance;
  function SystemClock_getInstance() {
    if (SystemClock_instance == null)
      new SystemClock();
    return SystemClock_instance;
  }
  //region block: post-declaration
  KoolContext$applicationCallbacks$1.prototype.m1r = onWindowCloseRequest;
  KoolContext$applicationCallbacks$1.prototype.n1r = onWindowScaleChange;
  MatrixData.prototype.t2w = onUpdate;
  KslTypeFloat2.prototype.u3p = get_dimens;
  KslTypeFloat4.prototype.u3p = get_dimens_0;
  KslTypeFloat3.prototype.u3p = get_dimens_1;
  KslTypeInt2.prototype.u3p = get_dimens;
  KslTypeInt3.prototype.u3p = get_dimens_1;
  KslTypeInt4.prototype.u3p = get_dimens_0;
  KslTypeUint2.prototype.u3p = get_dimens;
  KslTypeUint3.prototype.u3p = get_dimens_1;
  KslTypeUint4.prototype.u3p = get_dimens_0;
  KslTypeBool2.prototype.u3p = get_dimens;
  KslTypeBool3.prototype.u3p = get_dimens_1;
  KslTypeBool4.prototype.u3p = get_dimens_0;
  KslVar.prototype.g3i = checkIsAssignable;
  KslVarMatrix.prototype.g3i = checkIsAssignable;
  KslVarVector.prototype.g3i = checkIsAssignable;
  KslVarScalar.prototype.g3i = checkIsAssignable;
  KslVectorAccessor.prototype.g3i = checkIsAssignable;
  KslVectorAccessorVector.prototype.g3i = checkIsAssignable;
  KslVectorAccessorScalar.prototype.g3i = checkIsAssignable;
  UiNode.prototype.v3v = get_dp;
  UiNode.prototype.k3s = use;
  BoxNode.prototype.v3v = get_dp;
  BoxNode.prototype.k3s = use;
  RowNode.prototype.v3v = get_dp;
  RowNode.prototype.k3s = use;
  TextNode.prototype.v3v = get_dp;
  TextNode.prototype.k3s = use;
  ToggleNode.prototype.v3v = get_dp;
  ToggleNode.prototype.k3s = use;
  ToggleNode.prototype.y4e = progressAndUse;
  SwitchNode.prototype.v3v = get_dp;
  SwitchNode.prototype.k3s = use;
  SwitchNode.prototype.y4e = progressAndUse;
  $serializer.prototype.uu = typeParametersSerializers;
  $serializer_0.prototype.uu = typeParametersSerializers;
  $serializer_1.prototype.uu = typeParametersSerializers;
  $serializer_2.prototype.uu = typeParametersSerializers;
  $serializer_3.prototype.uu = typeParametersSerializers;
  $serializer_4.prototype.uu = typeParametersSerializers;
  Uint8BufferImpl.prototype.e6 = toArray;
  Float32BufferImpl.prototype.v4j = plusAssign;
  Float32BufferImpl.prototype.s4j = put;
  Uint32BufferImpl.prototype.w4j = plusAssign_0;
  MixedBufferImpl.prototype.a58 = putInt32;
  MixedBufferImpl.prototype.e58 = putInt32_0;
  MixedBufferImpl.prototype.i5n = putUint32;
  MixedBufferImpl.prototype.q57 = putFloat32;
  //endregion
  //region block: init
  FUZZY_EQ_F = 1.0E-5;
  DEG_2_RAD = 0.017453292519943295;
  RAD_2_DEG = 57.29577951308232;
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = BoundingBox;
  _.$_$.b = MutableVec2i;
  _.$_$.c = Vec2f;
  _.$_$.d = Vec2i;
  _.$_$.e = Vec3f;
  _.$_$.f = min;
  _.$_$.g = randomI;
  _.$_$.h = convertColorSpace;
  _.$_$.i = mvpMatrix;
  _.$_$.j = KslProgram;
  _.$_$.k = get_a;
  _.$_$.l = div_0;
  _.$_$.m = div;
  _.$_$.n = div_1;
  _.$_$.o = float3;
  _.$_$.p = float4Port;
  _.$_$.q = ge;
  _.$_$.r = gt;
  _.$_$.s = minus;
  _.$_$.t = plus_0;
  _.$_$.u = get_r;
  _.$_$.v = get_rgb;
  _.$_$.w = times_1;
  _.$_$.x = times_0;
  _.$_$.y = times_2;
  _.$_$.z = times;
  _.$_$.a1 = toFloat2;
  _.$_$.b1 = toFloat3;
  _.$_$.c1 = toInt1;
  _.$_$.d1 = toInt2;
  _.$_$.e1 = get_x;
  _.$_$.f1 = get_xy;
  _.$_$.g1 = get_y;
  _.$_$.h1 = PipelineConfig;
  _.$_$.i1 = KslShader;
  _.$_$.j1 = UnlitShaderConfig;
  _.$_$.k1 = KslUnlitShader;
  _.$_$.l1 = MutableStateValue;
  _.$_$.m1 = RowNode;
  _.$_$.n1 = SwitchNode;
  _.$_$.o1 = TextNode;
  _.$_$.p1 = alignX;
  _.$_$.q1 = alignY;
  _.$_$.r1 = height;
  _.$_$.s1 = layout;
  _.$_$.t1 = mutableStateOf;
  _.$_$.u1 = onClick_0;
  _.$_$.v1 = onToggle;
  _.$_$.w1 = size;
  _.$_$.x1 = text;
  _.$_$.y1 = toggleState;
  _.$_$.z1 = toggle;
  _.$_$.a2 = width;
  _.$_$.b2 = BufferedTextureLoader;
  _.$_$.c2 = ConfigBuilder;
  _.$_$.d2 = Config;
  _.$_$.e2 = OffscreenRenderPass2d;
  _.$_$.f2 = Texture3d;
  _.$_$.g2 = TextureData2d;
  _.$_$.h2 = TextureProps;
  _.$_$.i2 = CosAnimator;
  _.$_$.j2 = InterpolatedFloat;
  _.$_$.k2 = InterpolatedValue;
  _.$_$.l2 = InverseSquareAnimator;
  _.$_$.m2 = LinearAnimator;
  _.$_$.n2 = IndexedVertexList;
  _.$_$.o2 = RectProps;
  _.$_$.p2 = Group;
  _.$_$.q2 = Mesh;
  _.$_$.r2 = Node;
  _.$_$.s2 = OrthographicCamera;
  _.$_$.t2 = Scene;
  _.$_$.u2 = group;
  _.$_$.v2 = Color;
  _.$_$.w2 = createUint8Buffer;
  _.$_$.x2 = AssetManager;
  _.$_$.y2 = createDefaultContext;
  _.$_$.z2 = AlignmentX_End_getInstance;
  _.$_$.a3 = AlignmentY_Bottom_getInstance;
  _.$_$.b3 = AlignmentY_Center_getInstance;
  _.$_$.c3 = AddressMode_CLAMP_TO_EDGE_getInstance;
  _.$_$.d3 = BlendMode_BLEND_PREMULTIPLIED_ALPHA_getInstance;
  _.$_$.e3 = CullMethod_NO_CULLING_getInstance;
  _.$_$.f3 = DepthCompareOp_DISABLED_getInstance;
  _.$_$.g3 = FilterMethod_NEAREST_getInstance;
  _.$_$.h3 = TexFormat_RGBA_getInstance;
  _.$_$.i3 = TexFormat_R_getInstance;
  _.$_$.j3 = LoadingState_LOADED_getInstance;
  _.$_$.k3 = ProjCorrectionMode_OFFSCREEN_getInstance;
  _.$_$.l3 = ProjCorrectionMode_ONSCREEN_getInstance;
  _.$_$.m3 = fragmentColorBlock$default;
  _.$_$.n3 = Panel$default;
  _.$_$.o3 = UiScene$default;
  _.$_$.p3 = align$default;
  _.$_$.q3 = margin$default;
  _.$_$.r3 = colorMesh$default;
  _.$_$.s3 = group$default;
  _.$_$.t3 = textureMesh$default;
  _.$_$.u3 = MutableVec2i_init_$Create$;
  _.$_$.v3 = MutableVec2i_init_$Create$_0;
  _.$_$.w3 = MutableVec3f_init_$Create$_0;
  _.$_$.x3 = KslUnlitShader_init_$Create$;
  _.$_$.y3 = LocalKeyCode_init_$Create$_0;
  _.$_$.z3 = UniversalKeyCode_init_$Create$_0;
  _.$_$.a4 = Grow_init_$Create$;
  _.$_$.b4 = Texture2d_init_$Create$_0;
  _.$_$.c4 = Texture2d_init_$Create$_1;
  _.$_$.d4 = Group_init_$Init$;
  _.$_$.e4 = Node_init_$Init$;
  _.$_$.f4 = Companion_getInstance_6;
  _.$_$.g4 = ColumnLayout_getInstance;
  _.$_$.h4 = FitContent_getInstance;
  _.$_$.i4 = Companion_getInstance_21;
  _.$_$.j4 = RowLayout_getInstance;
  _.$_$.k4 = Companion_getInstance_18;
  _.$_$.l4 = Companion_getInstance_25;
  _.$_$.m4 = Companion_getInstance_24;
  _.$_$.n4 = Companion_getInstance_31;
  _.$_$.o4 = Companion_getInstance_40;
  _.$_$.p4 = Companion_getInstance_43;
  _.$_$.q4 = Companion_getInstance_0;
  //endregion
  return _;
}));



/***/ }),

/***/ "./kotlin/kotlin-kotlin-stdlib-js-ir.js":
/*!**********************************************!*\
  !*** ./kotlin/kotlin-kotlin-stdlib-js-ir.js ***!
  \**********************************************/
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//region block: polyfills
if (typeof ArrayBuffer.isView === 'undefined') {
  ArrayBuffer.isView = function (a) {
    return a != null && a.__proto__ != null && a.__proto__.__proto__ === Int8Array.prototype.__proto__;
  };
}
if (typeof Array.prototype.fill === 'undefined') {
  Object.defineProperty(Array.prototype, 'fill', {value: function (value) {
    if (this == null) {
      throw new TypeError('this is null or not defined');
    }
    var O = Object(this);
    var len = O.length >>> 0;
    var start = arguments[1];
    var relativeStart = start >> 0;
    var k = relativeStart < 0 ? Math.max(len + relativeStart, 0) : Math.min(relativeStart, len);
    var end = arguments[2];
    var relativeEnd = end === undefined ? len : end >> 0;
    var finalValue = relativeEnd < 0 ? Math.max(len + relativeEnd, 0) : Math.min(relativeEnd, len);
    while (k < finalValue) {
      O[k] = value;
      k++;
    }
    return O;
  }});
}
[Int8Array, Int16Array, Uint16Array, Int32Array, Float32Array, Float64Array].forEach(function (TypedArray) {
  if (typeof TypedArray.prototype.fill === 'undefined') {
    Object.defineProperty(TypedArray.prototype, 'fill', {value: Array.prototype.fill});
  }
});
if (typeof Math.clz32 === 'undefined') {
  Math.clz32 = function (log, LN2) {
    return function (x) {
      var asUint = x >>> 0;
      if (asUint === 0) {
        return 32;
      }
      return 31 - (log(asUint) / LN2 | 0) | 0;
    };
  }(Math.log, Math.LN2);
}
if (typeof Math.log2 === 'undefined') {
  Math.log2 = function (x) {
    return Math.log(x) * Math.LOG2E;
  };
}
if (typeof Math.sign === 'undefined') {
  Math.sign = function (x) {
    x = +x;
    if (x === 0 || isNaN(x)) {
      return Number(x);
    }
    return x > 0 ? 1 : -1;
  };
}
if (typeof String.prototype.startsWith === 'undefined') {
  Object.defineProperty(String.prototype, 'startsWith', {value: function (searchString, position) {
    position = position || 0;
    return this.lastIndexOf(searchString, position) === position;
  }});
}
if (typeof Math.imul === 'undefined') {
  Math.imul = function imul(a, b) {
    return (a & 4.29490176E9) * (b & 65535) + (a & 65535) * (b | 0) | 0;
  };
}
//endregion
(function (root, factory) {
  if (true)
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
}(this, function (_) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var clz32 = Math.clz32;
  var isView = ArrayBuffer.isView;
  var sign = Math.sign;
  var log2 = Math.log2;
  //endregion
  //region block: pre-declaration
  Exception.prototype = Object.create(Error.prototype);
  Exception.prototype.constructor = Exception;
  RuntimeException.prototype = Object.create(Exception.prototype);
  RuntimeException.prototype.constructor = RuntimeException;
  KotlinNothingValueException.prototype = Object.create(RuntimeException.prototype);
  KotlinNothingValueException.prototype.constructor = KotlinNothingValueException;
  State.prototype = Object.create(Enum.prototype);
  State.prototype.constructor = State;
  AbstractList.prototype = Object.create(AbstractCollection.prototype);
  AbstractList.prototype.constructor = AbstractList;
  AbstractSet.prototype = Object.create(AbstractCollection.prototype);
  AbstractSet.prototype.constructor = AbstractSet;
  AbstractMap$keys$1.prototype = Object.create(AbstractSet.prototype);
  AbstractMap$keys$1.prototype.constructor = AbstractMap$keys$1;
  AbstractMap$values$1.prototype = Object.create(AbstractCollection.prototype);
  AbstractMap$values$1.prototype.constructor = AbstractMap$values$1;
  SequenceBuilderIterator.prototype = Object.create(SequenceScope.prototype);
  SequenceBuilderIterator.prototype.constructor = SequenceBuilderIterator;
  RingBuffer$iterator$1.prototype = Object.create(AbstractIterator.prototype);
  RingBuffer$iterator$1.prototype.constructor = RingBuffer$iterator$1;
  RingBuffer.prototype = Object.create(AbstractList.prototype);
  RingBuffer.prototype.constructor = RingBuffer;
  windowedIterator$slambda.prototype = Object.create(CoroutineImpl.prototype);
  windowedIterator$slambda.prototype.constructor = windowedIterator$slambda;
  function plus(context) {
    var tmp;
    if (context === EmptyCoroutineContext_getInstance()) {
      tmp = this;
    } else {
      tmp = context.l8(this, CoroutineContext$plus$lambda());
    }
    return tmp;
  }
  function get(key) {
    var tmp;
    if (equals_1(this.l2(), key)) {
      tmp = isInterface(this, Element) ? this : THROW_CCE();
    } else {
      tmp = null;
    }
    return tmp;
  }
  function fold(initial, operation) {
    return operation(initial, this);
  }
  function minusKey(key) {
    return equals_1(this.l2(), key) ? EmptyCoroutineContext_getInstance() : this;
  }
  function releaseInterceptedContinuation(continuation) {
  }
  function get_0(key) {
    if (key instanceof AbstractCoroutineContextKey) {
      var tmp;
      if (key.j8(this.l2())) {
        var tmp_0 = key.i8(this);
        tmp = (!(tmp_0 == null) ? isInterface(tmp_0, Element) : false) ? tmp_0 : null;
      } else {
        tmp = null;
      }
      return tmp;
    }
    var tmp_1;
    if (Key_getInstance() === key) {
      tmp_1 = isInterface(this, Element) ? this : THROW_CCE();
    } else {
      tmp_1 = null;
    }
    return tmp_1;
  }
  function minusKey_0(key) {
    if (key instanceof AbstractCoroutineContextKey) {
      return (key.j8(this.l2()) ? !(key.i8(this) == null) : false) ? EmptyCoroutineContext_getInstance() : this;
    }
    return Key_getInstance() === key ? EmptyCoroutineContext_getInstance() : this;
  }
  CoroutineSingletons.prototype = Object.create(Enum.prototype);
  CoroutineSingletons.prototype.constructor = CoroutineSingletons;
  Default.prototype = Object.create(Random.prototype);
  Default.prototype.constructor = Default;
  XorWowRandom.prototype = Object.create(Random.prototype);
  XorWowRandom.prototype.constructor = XorWowRandom;
  IntRange.prototype = Object.create(IntProgression.prototype);
  IntRange.prototype.constructor = IntRange;
  CharRange.prototype = Object.create(CharProgression.prototype);
  CharRange.prototype.constructor = CharRange;
  IntProgressionIterator.prototype = Object.create(IntIterator.prototype);
  IntProgressionIterator.prototype.constructor = IntProgressionIterator;
  CharProgressionIterator.prototype = Object.create(CharIterator.prototype);
  CharProgressionIterator.prototype.constructor = CharProgressionIterator;
  iterator$1.prototype = Object.create(CharIterator.prototype);
  iterator$1.prototype.constructor = iterator$1;
  DeepRecursiveScopeImpl.prototype = Object.create(DeepRecursiveScope.prototype);
  DeepRecursiveScopeImpl.prototype.constructor = DeepRecursiveScopeImpl;
  LazyThreadSafetyMode.prototype = Object.create(Enum.prototype);
  LazyThreadSafetyMode.prototype.constructor = LazyThreadSafetyMode;
  Error_0.prototype = Object.create(Error.prototype);
  Error_0.prototype.constructor = Error_0;
  NotImplementedError.prototype = Object.create(Error_0.prototype);
  NotImplementedError.prototype.constructor = NotImplementedError;
  AbstractMutableCollection.prototype = Object.create(AbstractCollection.prototype);
  AbstractMutableCollection.prototype.constructor = AbstractMutableCollection;
  ListIteratorImpl.prototype = Object.create(IteratorImpl_0.prototype);
  ListIteratorImpl.prototype.constructor = ListIteratorImpl;
  AbstractMutableList.prototype = Object.create(AbstractMutableCollection.prototype);
  AbstractMutableList.prototype.constructor = AbstractMutableList;
  AbstractMutableSet.prototype = Object.create(AbstractMutableCollection.prototype);
  AbstractMutableSet.prototype.constructor = AbstractMutableSet;
  AbstractEntrySet.prototype = Object.create(AbstractMutableSet.prototype);
  AbstractEntrySet.prototype.constructor = AbstractEntrySet;
  AbstractMutableMap$keys$1.prototype = Object.create(AbstractMutableSet.prototype);
  AbstractMutableMap$keys$1.prototype.constructor = AbstractMutableMap$keys$1;
  AbstractMutableMap$values$1.prototype = Object.create(AbstractMutableCollection.prototype);
  AbstractMutableMap$values$1.prototype.constructor = AbstractMutableMap$values$1;
  AbstractMutableMap.prototype = Object.create(AbstractMap.prototype);
  AbstractMutableMap.prototype.constructor = AbstractMutableMap;
  ArrayList.prototype = Object.create(AbstractMutableList.prototype);
  ArrayList.prototype.constructor = ArrayList;
  EntrySet.prototype = Object.create(AbstractEntrySet.prototype);
  EntrySet.prototype.constructor = EntrySet;
  HashMap.prototype = Object.create(AbstractMutableMap.prototype);
  HashMap.prototype.constructor = HashMap;
  HashSet.prototype = Object.create(AbstractMutableSet.prototype);
  HashSet.prototype.constructor = HashSet;
  function createJsMap() {
    var result = Object.create(null);
    result['foo'] = 1;
    jsDeleteProperty(result, 'foo');
    return result;
  }
  ChainEntry.prototype = Object.create(SimpleEntry.prototype);
  ChainEntry.prototype.constructor = ChainEntry;
  EntrySet_0.prototype = Object.create(AbstractEntrySet.prototype);
  EntrySet_0.prototype.constructor = EntrySet_0;
  LinkedHashMap.prototype = Object.create(HashMap.prototype);
  LinkedHashMap.prototype.constructor = LinkedHashMap;
  LinkedHashSet.prototype = Object.create(HashSet.prototype);
  LinkedHashSet.prototype.constructor = LinkedHashSet;
  NodeJsOutput.prototype = Object.create(BaseOutput.prototype);
  NodeJsOutput.prototype.constructor = NodeJsOutput;
  BufferedOutput.prototype = Object.create(BaseOutput.prototype);
  BufferedOutput.prototype.constructor = BufferedOutput;
  BufferedOutputToConsoleLog.prototype = Object.create(BufferedOutput.prototype);
  BufferedOutputToConsoleLog.prototype.constructor = BufferedOutputToConsoleLog;
  IllegalStateException.prototype = Object.create(RuntimeException.prototype);
  IllegalStateException.prototype.constructor = IllegalStateException;
  CancellationException.prototype = Object.create(IllegalStateException.prototype);
  CancellationException.prototype.constructor = CancellationException;
  PrimitiveKClassImpl.prototype = Object.create(KClassImpl.prototype);
  PrimitiveKClassImpl.prototype.constructor = PrimitiveKClassImpl;
  NothingKClassImpl.prototype = Object.create(KClassImpl.prototype);
  NothingKClassImpl.prototype.constructor = NothingKClassImpl;
  SimpleKClassImpl.prototype = Object.create(KClassImpl.prototype);
  SimpleKClassImpl.prototype.constructor = SimpleKClassImpl;
  CharacterCodingException.prototype = Object.create(Exception.prototype);
  CharacterCodingException.prototype.constructor = CharacterCodingException;
  DurationUnit.prototype = Object.create(Enum.prototype);
  DurationUnit.prototype.constructor = DurationUnit;
  booleanArrayIterator$1.prototype = Object.create(BooleanIterator.prototype);
  booleanArrayIterator$1.prototype.constructor = booleanArrayIterator$1;
  intArrayIterator$1.prototype = Object.create(IntIterator.prototype);
  intArrayIterator$1.prototype.constructor = intArrayIterator$1;
  Long.prototype = Object.create(Number_0.prototype);
  Long.prototype.constructor = Long;
  _no_name_provided__qut3iv_11.prototype = Object.create(CoroutineImpl.prototype);
  _no_name_provided__qut3iv_11.prototype.constructor = _no_name_provided__qut3iv_11;
  _no_name_provided__qut3iv_12.prototype = Object.create(CoroutineImpl.prototype);
  _no_name_provided__qut3iv_12.prototype.constructor = _no_name_provided__qut3iv_12;
  IllegalArgumentException.prototype = Object.create(RuntimeException.prototype);
  IllegalArgumentException.prototype.constructor = IllegalArgumentException;
  NoSuchElementException.prototype = Object.create(RuntimeException.prototype);
  NoSuchElementException.prototype.constructor = NoSuchElementException;
  IndexOutOfBoundsException.prototype = Object.create(RuntimeException.prototype);
  IndexOutOfBoundsException.prototype.constructor = IndexOutOfBoundsException;
  UnsupportedOperationException.prototype = Object.create(RuntimeException.prototype);
  UnsupportedOperationException.prototype.constructor = UnsupportedOperationException;
  AssertionError.prototype = Object.create(Error_0.prototype);
  AssertionError.prototype.constructor = AssertionError;
  ArithmeticException.prototype = Object.create(RuntimeException.prototype);
  ArithmeticException.prototype.constructor = ArithmeticException;
  NumberFormatException.prototype = Object.create(IllegalArgumentException.prototype);
  NumberFormatException.prototype.constructor = NumberFormatException;
  NullPointerException.prototype = Object.create(RuntimeException.prototype);
  NullPointerException.prototype.constructor = NullPointerException;
  NoWhenBranchMatchedException.prototype = Object.create(RuntimeException.prototype);
  NoWhenBranchMatchedException.prototype.constructor = NoWhenBranchMatchedException;
  ClassCastException.prototype = Object.create(RuntimeException.prototype);
  ClassCastException.prototype.constructor = ClassCastException;
  UninitializedPropertyAccessException.prototype = Object.create(RuntimeException.prototype);
  UninitializedPropertyAccessException.prototype.constructor = UninitializedPropertyAccessException;
  //endregion
  function toList(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.length;
    switch (tmp0_subject) {
      case 0:
        return emptyList();
      case 1:
        return listOf_0(_this__u8e3s4[0]);
      default:
        return toMutableList(_this__u8e3s4);
    }
  }
  function withIndex(_this__u8e3s4) {
    return new IndexingIterable(withIndex$lambda(_this__u8e3s4));
  }
  function get_indices(_this__u8e3s4) {
    return new IntRange(0, get_lastIndex(_this__u8e3s4));
  }
  function get_indices_0(_this__u8e3s4) {
    return new IntRange(0, get_lastIndex_0(_this__u8e3s4));
  }
  function asIterable(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4.length === 0;
    }
    if (tmp$ret$0)
      return emptyList();
    var tmp$ret$1;
    {
      tmp$ret$1 = new _no_name_provided__qut3iv(_this__u8e3s4);
    }
    return tmp$ret$1;
  }
  function associateBy(_this__u8e3s4, keySelector) {
    var capacity = coerceAtLeast(mapCapacity(_this__u8e3s4.length), 16);
    var tmp$ret$0;
    {
      var tmp0_associateByTo = LinkedHashMap_init_$Create$_1(capacity);
      var indexedObject = _this__u8e3s4;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var element = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        tmp0_associateByTo.a(keySelector(element), element);
      }
      tmp$ret$0 = tmp0_associateByTo;
    }
    return tmp$ret$0;
  }
  function joinToString(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform) {
    return joinTo(_this__u8e3s4, StringBuilder_init_$Create$_0(), separator, prefix, postfix, limit, truncated, transform).toString();
  }
  function joinToString$default(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      separator = ', ';
    if (!(($mask0 & 2) === 0))
      prefix = '';
    if (!(($mask0 & 4) === 0))
      postfix = '';
    if (!(($mask0 & 8) === 0))
      limit = -1;
    if (!(($mask0 & 16) === 0))
      truncated = '...';
    if (!(($mask0 & 32) === 0))
      transform = null;
    return joinToString(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform);
  }
  function map(_this__u8e3s4, transform) {
    var tmp$ret$0;
    {
      var tmp0_mapTo = ArrayList_init_$Create$_0(_this__u8e3s4.length);
      var indexedObject = _this__u8e3s4;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var item = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        tmp0_mapTo.b(transform(item));
      }
      tmp$ret$0 = tmp0_mapTo;
    }
    return tmp$ret$0;
  }
  function sum(_this__u8e3s4) {
    var sum = 0;
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      sum = sum + element | 0;
    }
    return sum;
  }
  function asIterable_0(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4.length === 0;
    }
    if (tmp$ret$0)
      return emptyList();
    var tmp$ret$1;
    {
      tmp$ret$1 = new _no_name_provided__qut3iv_0(_this__u8e3s4);
    }
    return tmp$ret$1;
  }
  function forEachIndexed(_this__u8e3s4, action) {
    var index = 0;
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var item = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      action(tmp1, item);
    }
  }
  function forEach(_this__u8e3s4, action) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      action(element);
    }
  }
  function asSequence(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4.length === 0;
    }
    if (tmp$ret$0)
      return emptySequence();
    var tmp$ret$1;
    {
      tmp$ret$1 = new _no_name_provided__qut3iv_1(_this__u8e3s4);
    }
    return tmp$ret$1;
  }
  function indexOf(_this__u8e3s4, element) {
    if (element == null) {
      var inductionVariable = 0;
      var last = _this__u8e3s4.length - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (_this__u8e3s4[index] == null) {
            return index;
          }
        }
         while (inductionVariable <= last);
    } else {
      var inductionVariable_0 = 0;
      var last_0 = _this__u8e3s4.length - 1 | 0;
      if (inductionVariable_0 <= last_0)
        do {
          var index_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          if (equals_1(element, _this__u8e3s4[index_0])) {
            return index_0;
          }
        }
         while (inductionVariable_0 <= last_0);
    }
    return -1;
  }
  function single(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.length;
    var tmp;
    switch (tmp0_subject) {
      case 0:
        throw NoSuchElementException_init_$Create$_0('Array is empty.');
      case 1:
        tmp = _this__u8e3s4[0];
        break;
      default:
        throw IllegalArgumentException_init_$Create$_0('Array has more than one element.');
    }
    return tmp;
  }
  function any(_this__u8e3s4, predicate) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      if (predicate(new Char_0(element)))
        return true;
    }
    return false;
  }
  function toMutableList(_this__u8e3s4) {
    return ArrayList_init_$Create$_1(asCollection(_this__u8e3s4));
  }
  function get_lastIndex(_this__u8e3s4) {
    return _this__u8e3s4.length - 1 | 0;
  }
  function get_lastIndex_0(_this__u8e3s4) {
    return _this__u8e3s4.length - 1 | 0;
  }
  function isEmpty(_this__u8e3s4) {
    return _this__u8e3s4.length === 0;
  }
  function associateByTo(_this__u8e3s4, destination, keySelector) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      destination.a(keySelector(element), element);
    }
    return destination;
  }
  function joinTo(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform) {
    buffer.c(prefix);
    var count = 0;
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    $l$loop: while (inductionVariable < last) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      count = count + 1 | 0;
      if (count > 1) {
        buffer.c(separator);
      }
      if (limit < 0 ? true : count <= limit) {
        appendElement(buffer, element, transform);
      } else
        break $l$loop;
    }
    if (limit >= 0 ? count > limit : false) {
      buffer.c(truncated);
    }
    buffer.c(postfix);
    return buffer;
  }
  function mapTo(_this__u8e3s4, destination, transform) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var item = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      destination.b(transform(item));
    }
    return destination;
  }
  function isEmpty_0(_this__u8e3s4) {
    return _this__u8e3s4.length === 0;
  }
  function toCollection(_this__u8e3s4, destination) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var item = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      destination.b(item);
    }
    return destination;
  }
  function contains(_this__u8e3s4, element) {
    return indexOf(_this__u8e3s4, element) >= 0;
  }
  function firstOrNull(_this__u8e3s4, predicate) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      if (predicate(element))
        return element;
    }
    return null;
  }
  function component1(_this__u8e3s4) {
    return _this__u8e3s4[0];
  }
  function component2(_this__u8e3s4) {
    return _this__u8e3s4[1];
  }
  function get_indices_1(_this__u8e3s4) {
    return new IntRange(0, get_lastIndex_1(_this__u8e3s4));
  }
  function sorted(_this__u8e3s4) {
    var tmp$ret$0;
    {
      var tmp0_apply = toTypedArray_0(_this__u8e3s4);
      {
      }
      {
        sort(tmp0_apply);
      }
      tmp$ret$0 = tmp0_apply;
    }
    return asList(tmp$ret$0);
  }
  function distinct(_this__u8e3s4) {
    return toList_0(toMutableSet(_this__u8e3s4));
  }
  function get_lastIndex_1(_this__u8e3s4) {
    return _this__u8e3s4.length - 1 | 0;
  }
  function contains_0(_this__u8e3s4, element) {
    return indexOf_0(_this__u8e3s4, element) >= 0;
  }
  function asSequence_0(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4.length === 0;
    }
    if (tmp$ret$0)
      return emptySequence();
    var tmp$ret$1;
    {
      tmp$ret$1 = new _no_name_provided__qut3iv_2(_this__u8e3s4);
    }
    return tmp$ret$1;
  }
  function sum_0(_this__u8e3s4) {
    var sum = 0.0;
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      sum = sum + element;
    }
    return sum;
  }
  function asSequence_1(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4.length === 0;
    }
    if (tmp$ret$0)
      return emptySequence();
    var tmp$ret$1;
    {
      tmp$ret$1 = new _no_name_provided__qut3iv_3(_this__u8e3s4);
    }
    return tmp$ret$1;
  }
  function reversed(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4.length === 0;
    }
    if (tmp$ret$0)
      return emptyList();
    var list = toMutableList_0(_this__u8e3s4);
    reverse(list);
    return list;
  }
  function toMutableSet(_this__u8e3s4) {
    return toCollection_0(_this__u8e3s4, LinkedHashSet_init_$Create$_1(mapCapacity(_this__u8e3s4.length)));
  }
  function indexOf_0(_this__u8e3s4, element) {
    var inductionVariable = 0;
    var last = _this__u8e3s4.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (element === _this__u8e3s4[index]) {
          return index;
        }
      }
       while (inductionVariable <= last);
    return -1;
  }
  function isEmpty_1(_this__u8e3s4) {
    return _this__u8e3s4.length === 0;
  }
  function toMutableList_0(_this__u8e3s4) {
    var list = ArrayList_init_$Create$_0(_this__u8e3s4.length);
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var item = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      list.b(item);
    }
    return list;
  }
  function toCollection_0(_this__u8e3s4, destination) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var item = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      destination.b(item);
    }
    return destination;
  }
  function get_lastIndex_2(_this__u8e3s4) {
    return _this__u8e3s4.length - 1 | 0;
  }
  function withIndex$lambda($this_withIndex) {
    return function () {
      return arrayIterator($this_withIndex);
    };
  }
  function _no_name_provided__qut3iv($this_asIterable) {
    this.g_1 = $this_asIterable;
  }
  _no_name_provided__qut3iv.prototype.h = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = arrayIterator(this.g_1);
    }
    return tmp$ret$0;
  };
  _no_name_provided__qut3iv.$metadata$ = classMeta(undefined, [Iterable_0]);
  function _no_name_provided__qut3iv_0($this_asIterable) {
    this.i_1 = $this_asIterable;
  }
  _no_name_provided__qut3iv_0.prototype.h = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = intArrayIterator(this.i_1);
    }
    return tmp$ret$0;
  };
  _no_name_provided__qut3iv_0.$metadata$ = classMeta(undefined, [Iterable_0]);
  function _no_name_provided__qut3iv_1($this_asSequence) {
    this.j_1 = $this_asSequence;
  }
  _no_name_provided__qut3iv_1.prototype.h = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = arrayIterator(this.j_1);
    }
    return tmp$ret$0;
  };
  _no_name_provided__qut3iv_1.$metadata$ = classMeta(undefined, [Sequence]);
  function _no_name_provided__qut3iv_2($this_asSequence) {
    this.k_1 = $this_asSequence;
  }
  _no_name_provided__qut3iv_2.prototype.h = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = intArrayIterator(this.k_1);
    }
    return tmp$ret$0;
  };
  _no_name_provided__qut3iv_2.$metadata$ = classMeta(undefined, [Sequence]);
  function _no_name_provided__qut3iv_3($this_asSequence) {
    this.l_1 = $this_asSequence;
  }
  _no_name_provided__qut3iv_3.prototype.h = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = booleanArrayIterator(this.l_1);
    }
    return tmp$ret$0;
  };
  _no_name_provided__qut3iv_3.$metadata$ = classMeta(undefined, [Sequence]);
  function toHashSet(_this__u8e3s4) {
    return toCollection_1(_this__u8e3s4, HashSet_init_$Create$_1(mapCapacity(collectionSizeOrDefault(_this__u8e3s4, 12))));
  }
  function toBooleanArray(_this__u8e3s4) {
    var result = booleanArray(_this__u8e3s4.m());
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      result[tmp1] = element;
    }
    return result;
  }
  function map_0(_this__u8e3s4, transform) {
    var tmp$ret$0;
    {
      var tmp0_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(_this__u8e3s4, 10));
      var tmp0_iterator = _this__u8e3s4.h();
      while (tmp0_iterator.n()) {
        var item = tmp0_iterator.o();
        tmp0_mapTo.b(transform(item));
      }
      tmp$ret$0 = tmp0_mapTo;
    }
    return tmp$ret$0;
  }
  function joinToString_0(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform) {
    return joinTo_0(_this__u8e3s4, StringBuilder_init_$Create$_0(), separator, prefix, postfix, limit, truncated, transform).toString();
  }
  function joinToString$default_0(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      separator = ', ';
    if (!(($mask0 & 2) === 0))
      prefix = '';
    if (!(($mask0 & 4) === 0))
      postfix = '';
    if (!(($mask0 & 8) === 0))
      limit = -1;
    if (!(($mask0 & 16) === 0))
      truncated = '...';
    if (!(($mask0 & 32) === 0))
      transform = null;
    return joinToString_0(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform);
  }
  function fold_0(_this__u8e3s4, initial, operation) {
    var accumulator = initial;
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      accumulator = operation(accumulator, element);
    }
    return accumulator;
  }
  function firstOrNull_0(_this__u8e3s4, predicate) {
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      if (predicate(element))
        return element;
    }
    return null;
  }
  function contains_1(_this__u8e3s4, element) {
    if (isInterface(_this__u8e3s4, Collection))
      return _this__u8e3s4.p(element);
    return indexOf_1(_this__u8e3s4, element) >= 0;
  }
  function forEach_0(_this__u8e3s4, action) {
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      action(element);
    }
  }
  function sum_1(_this__u8e3s4) {
    var sum = 0;
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      sum = sum + element | 0;
    }
    return sum;
  }
  function forEachIndexed_0(_this__u8e3s4, action) {
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var item = tmp0_iterator.o();
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      action(checkIndexOverflow(tmp1), item);
    }
  }
  function first(_this__u8e3s4) {
    if (_this__u8e3s4.q())
      throw NoSuchElementException_init_$Create$_0('List is empty.');
    return _this__u8e3s4.r(0);
  }
  function filterNot(_this__u8e3s4, predicate) {
    var tmp$ret$0;
    {
      var tmp0_filterNotTo = ArrayList_init_$Create$();
      var tmp0_iterator = _this__u8e3s4.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        if (!predicate(element)) {
          tmp0_filterNotTo.b(element);
        }
      }
      tmp$ret$0 = tmp0_filterNotTo;
    }
    return tmp$ret$0;
  }
  function toList_0(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, Collection)) {
      var tmp0_subject = _this__u8e3s4.m();
      var tmp;
      switch (tmp0_subject) {
        case 0:
          tmp = emptyList();
          break;
        case 1:
          var tmp_0;
          if (isInterface(_this__u8e3s4, List_0)) {
            tmp_0 = _this__u8e3s4.r(0);
          } else {
            tmp_0 = _this__u8e3s4.h().o();
          }

          tmp = listOf_0(tmp_0);
          break;
        default:
          tmp = toMutableList_2(_this__u8e3s4);
          break;
      }
      return tmp;
    }
    return optimizeReadOnlyList(toMutableList_1(_this__u8e3s4));
  }
  function component1_0(_this__u8e3s4) {
    return _this__u8e3s4.r(0);
  }
  function component2_0(_this__u8e3s4) {
    return _this__u8e3s4.r(1);
  }
  function asSequence_2(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = new _no_name_provided__qut3iv_4(_this__u8e3s4);
    }
    return tmp$ret$0;
  }
  function toSet(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, Collection)) {
      var tmp0_subject = _this__u8e3s4.m();
      var tmp;
      switch (tmp0_subject) {
        case 0:
          tmp = emptySet();
          break;
        case 1:
          var tmp_0;
          if (isInterface(_this__u8e3s4, List_0)) {
            tmp_0 = _this__u8e3s4.r(0);
          } else {
            tmp_0 = _this__u8e3s4.h().o();
          }

          tmp = setOf(tmp_0);
          break;
        default:
          tmp = toCollection_1(_this__u8e3s4, LinkedHashSet_init_$Create$_1(mapCapacity(_this__u8e3s4.m())));
          break;
      }
      return tmp;
    }
    return optimizeReadOnlySet(toCollection_1(_this__u8e3s4, LinkedHashSet_init_$Create$()));
  }
  function first_0(_this__u8e3s4, predicate) {
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      if (predicate(element))
        return element;
    }
    throw NoSuchElementException_init_$Create$_0('Collection contains no element matching the predicate.');
  }
  function last(_this__u8e3s4) {
    if (_this__u8e3s4.q())
      throw NoSuchElementException_init_$Create$_0('List is empty.');
    return _this__u8e3s4.r(get_lastIndex_3(_this__u8e3s4));
  }
  function lastOrNull(_this__u8e3s4) {
    return _this__u8e3s4.q() ? null : _this__u8e3s4.r(_this__u8e3s4.m() - 1 | 0);
  }
  function any_0(_this__u8e3s4, predicate) {
    var tmp;
    if (isInterface(_this__u8e3s4, Collection)) {
      tmp = _this__u8e3s4.q();
    } else {
      tmp = false;
    }
    if (tmp)
      return false;
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      if (predicate(element))
        return true;
    }
    return false;
  }
  function sortBy(_this__u8e3s4, selector) {
    if (_this__u8e3s4.m() > 1) {
      var tmp$ret$0;
      {
        var tmp = sortBy$lambda(selector);
        tmp$ret$0 = new sam$kotlin_Comparator$0(tmp);
      }
      sortWith(_this__u8e3s4, tmp$ret$0);
    }
  }
  function reversed_0(_this__u8e3s4) {
    var tmp;
    if (isInterface(_this__u8e3s4, Collection)) {
      tmp = _this__u8e3s4.m() <= 1;
    } else {
      tmp = false;
    }
    if (tmp)
      return toList_0(_this__u8e3s4);
    var list = toMutableList_1(_this__u8e3s4);
    reverse(list);
    return list;
  }
  function firstNotNullOfOrNull(_this__u8e3s4, transform) {
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      var result = transform(element);
      if (!(result == null)) {
        return result;
      }
    }
    return null;
  }
  function all(_this__u8e3s4, predicate) {
    var tmp;
    if (isInterface(_this__u8e3s4, Collection)) {
      tmp = _this__u8e3s4.q();
    } else {
      tmp = false;
    }
    if (tmp)
      return true;
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      if (!predicate(element))
        return false;
    }
    return true;
  }
  function shuffle(_this__u8e3s4, random) {
    var inductionVariable = get_lastIndex_3(_this__u8e3s4);
    if (1 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var j = random.s(i + 1 | 0);
        _this__u8e3s4.t(j, _this__u8e3s4.t(i, _this__u8e3s4.r(j)));
      }
       while (1 <= inductionVariable);
  }
  function toMutableList_1(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, Collection))
      return toMutableList_2(_this__u8e3s4);
    return toCollection_1(_this__u8e3s4, ArrayList_init_$Create$());
  }
  function toCollection_1(_this__u8e3s4, destination) {
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var item = tmp0_iterator.o();
      destination.b(item);
    }
    return destination;
  }
  function mapTo_0(_this__u8e3s4, destination, transform) {
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var item = tmp0_iterator.o();
      destination.b(transform(item));
    }
    return destination;
  }
  function joinTo_0(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform) {
    buffer.c(prefix);
    var count = 0;
    var tmp0_iterator = _this__u8e3s4.h();
    $l$loop: while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      count = count + 1 | 0;
      if (count > 1) {
        buffer.c(separator);
      }
      if (limit < 0 ? true : count <= limit) {
        appendElement(buffer, element, transform);
      } else
        break $l$loop;
    }
    if (limit >= 0 ? count > limit : false) {
      buffer.c(truncated);
    }
    buffer.c(postfix);
    return buffer;
  }
  function joinTo$default(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      separator = ', ';
    if (!(($mask0 & 4) === 0))
      prefix = '';
    if (!(($mask0 & 8) === 0))
      postfix = '';
    if (!(($mask0 & 16) === 0))
      limit = -1;
    if (!(($mask0 & 32) === 0))
      truncated = '...';
    if (!(($mask0 & 64) === 0))
      transform = null;
    return joinTo_0(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform);
  }
  function indexOf_1(_this__u8e3s4, element) {
    if (isInterface(_this__u8e3s4, List_0))
      return _this__u8e3s4.u(element);
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var item = tmp0_iterator.o();
      checkIndexOverflow(index);
      if (equals_1(element, item))
        return index;
      var tmp1 = index;
      index = tmp1 + 1 | 0;
    }
    return -1;
  }
  function filterNotTo(_this__u8e3s4, destination, predicate) {
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      if (!predicate(element)) {
        destination.b(element);
      }
    }
    return destination;
  }
  function toMutableList_2(_this__u8e3s4) {
    return ArrayList_init_$Create$_1(_this__u8e3s4);
  }
  function minOrNull(_this__u8e3s4) {
    var iterator = _this__u8e3s4.h();
    if (!iterator.n())
      return null;
    var min = iterator.o();
    while (iterator.n()) {
      var e = iterator.o();
      if (compareTo_0(min, e) > 0)
        min = e;
    }
    return min;
  }
  function filter(_this__u8e3s4, predicate) {
    var tmp$ret$0;
    {
      var tmp0_filterTo = ArrayList_init_$Create$();
      var tmp0_iterator = _this__u8e3s4.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        if (predicate(element)) {
          tmp0_filterTo.b(element);
        }
      }
      tmp$ret$0 = tmp0_filterTo;
    }
    return tmp$ret$0;
  }
  function mapIndexedNotNull(_this__u8e3s4, transform) {
    var tmp$ret$1;
    {
      var tmp1_mapIndexedNotNullTo = ArrayList_init_$Create$();
      {
        var index = 0;
        var tmp0_iterator = _this__u8e3s4.h();
        while (tmp0_iterator.n()) {
          var item = tmp0_iterator.o();
          {
            var tmp1 = index;
            index = tmp1 + 1 | 0;
            var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
            var tmp0_safe_receiver = transform(tmp0__anonymous__q1qw7t, item);
            if (tmp0_safe_receiver == null)
              null;
            else {
              var tmp$ret$0;
              {
                {
                }
                tmp1_mapIndexedNotNullTo.b(tmp0_safe_receiver);
                tmp$ret$0 = Unit_getInstance();
              }
            }
          }
        }
      }
      tmp$ret$1 = tmp1_mapIndexedNotNullTo;
    }
    return tmp$ret$1;
  }
  function indexOfFirst(_this__u8e3s4, predicate) {
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var item = tmp0_iterator.o();
      if (predicate(item))
        return index;
      var tmp1 = index;
      index = tmp1 + 1 | 0;
    }
    return -1;
  }
  function single_0(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4;
    if (isInterface(tmp0_subject, List_0))
      return single_1(_this__u8e3s4);
    else {
      var iterator = _this__u8e3s4.h();
      if (!iterator.n())
        throw NoSuchElementException_init_$Create$_0('Collection is empty.');
      var single = iterator.o();
      if (iterator.n())
        throw IllegalArgumentException_init_$Create$_0('Collection has more than one element.');
      return single;
    }
  }
  function filterTo(_this__u8e3s4, destination, predicate) {
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      if (predicate(element)) {
        destination.b(element);
      }
    }
    return destination;
  }
  function mapIndexedNotNullTo(_this__u8e3s4, destination, transform) {
    {
      var index = 0;
      var tmp0_iterator = _this__u8e3s4.h();
      while (tmp0_iterator.n()) {
        var item = tmp0_iterator.o();
        {
          var tmp1 = index;
          index = tmp1 + 1 | 0;
          var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
          var tmp0_safe_receiver = transform(tmp0__anonymous__q1qw7t, item);
          if (tmp0_safe_receiver == null)
            null;
          else {
            var tmp$ret$0;
            {
              {
              }
              destination.b(tmp0_safe_receiver);
              tmp$ret$0 = Unit_getInstance();
            }
          }
        }
      }
    }
    return destination;
  }
  function single_1(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.m();
    var tmp;
    switch (tmp0_subject) {
      case 0:
        throw NoSuchElementException_init_$Create$_0('List is empty.');
      case 1:
        tmp = _this__u8e3s4.r(0);
        break;
      default:
        throw IllegalArgumentException_init_$Create$_0('List has more than one element.');
    }
    return tmp;
  }
  function find(_this__u8e3s4, predicate) {
    var tmp$ret$0;
    $l$block: {
      var tmp0_iterator = _this__u8e3s4.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        if (predicate(element)) {
          tmp$ret$0 = element;
          break $l$block;
        }
      }
      tmp$ret$0 = null;
    }
    return tmp$ret$0;
  }
  function singleOrNull(_this__u8e3s4) {
    return _this__u8e3s4.m() === 1 ? _this__u8e3s4.r(0) : null;
  }
  function minByOrNull(_this__u8e3s4, selector) {
    var iterator = _this__u8e3s4.h();
    if (!iterator.n())
      return null;
    var minElem = iterator.o();
    if (!iterator.n())
      return minElem;
    var minValue = selector(minElem);
    do {
      var e = iterator.o();
      var v = selector(e);
      if (compareTo_0(minValue, v) > 0) {
        minElem = e;
        minValue = v;
      }
    }
     while (iterator.n());
    return minElem;
  }
  function mapIndexed(_this__u8e3s4, transform) {
    var tmp$ret$0;
    {
      var tmp0_mapIndexedTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(_this__u8e3s4, 10));
      var index = 0;
      var tmp0_iterator = _this__u8e3s4.h();
      while (tmp0_iterator.n()) {
        var item = tmp0_iterator.o();
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        tmp0_mapIndexedTo.b(transform(checkIndexOverflow(tmp1), item));
      }
      tmp$ret$0 = tmp0_mapIndexedTo;
    }
    return tmp$ret$0;
  }
  function flatMap(_this__u8e3s4, transform) {
    var tmp$ret$0;
    {
      var tmp0_flatMapTo = ArrayList_init_$Create$();
      var tmp0_iterator = _this__u8e3s4.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        var list = transform(element);
        addAll(tmp0_flatMapTo, list);
      }
      tmp$ret$0 = tmp0_flatMapTo;
    }
    return tmp$ret$0;
  }
  function associateBy_0(_this__u8e3s4, keySelector) {
    var capacity = coerceAtLeast(mapCapacity(collectionSizeOrDefault(_this__u8e3s4, 10)), 16);
    var tmp$ret$0;
    {
      var tmp0_associateByTo = LinkedHashMap_init_$Create$_1(capacity);
      var tmp0_iterator = _this__u8e3s4.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        tmp0_associateByTo.a(keySelector(element), element);
      }
      tmp$ret$0 = tmp0_associateByTo;
    }
    return tmp$ret$0;
  }
  function associate(_this__u8e3s4, transform) {
    var capacity = coerceAtLeast(mapCapacity(collectionSizeOrDefault(_this__u8e3s4, 10)), 16);
    var tmp$ret$0;
    {
      var tmp1_associateTo = LinkedHashMap_init_$Create$_1(capacity);
      var tmp0_iterator = _this__u8e3s4.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          var tmp0_plusAssign = transform(element);
          tmp1_associateTo.a(tmp0_plusAssign.v_1, tmp0_plusAssign.w_1);
        }
      }
      tmp$ret$0 = tmp1_associateTo;
    }
    return tmp$ret$0;
  }
  function toIntArray(_this__u8e3s4) {
    var result = new Int32Array(_this__u8e3s4.m());
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      result[tmp1] = element;
    }
    return result;
  }
  function minus(_this__u8e3s4, elements) {
    var other = convertToSetForSetOperationWith(elements, _this__u8e3s4);
    if (other.q())
      return toList_0(_this__u8e3s4);
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp0_filterNotTo = ArrayList_init_$Create$();
        var tmp0_iterator = _this__u8e3s4.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          var tmp$ret$0;
          {
            tmp$ret$0 = other.p(element);
          }
          if (!tmp$ret$0) {
            tmp0_filterNotTo.b(element);
          }
        }
        tmp$ret$1 = tmp0_filterNotTo;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  }
  function distinct_0(_this__u8e3s4) {
    return toList_0(toMutableSet_0(_this__u8e3s4));
  }
  function mapIndexedTo(_this__u8e3s4, destination, transform) {
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var item = tmp0_iterator.o();
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      destination.b(transform(checkIndexOverflow(tmp1), item));
    }
    return destination;
  }
  function flatMapTo(_this__u8e3s4, destination, transform) {
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      var list = transform(element);
      addAll(destination, list);
    }
    return destination;
  }
  function associateByTo_0(_this__u8e3s4, destination, keySelector) {
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      destination.a(keySelector(element), element);
    }
    return destination;
  }
  function associateTo(_this__u8e3s4, destination, transform) {
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      {
        var tmp0_plusAssign = transform(element);
        destination.a(tmp0_plusAssign.v_1, tmp0_plusAssign.w_1);
      }
    }
    return destination;
  }
  function toMutableSet_0(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4;
    var tmp;
    if (isInterface(tmp0_subject, Collection)) {
      tmp = LinkedHashSet_init_$Create$_0(_this__u8e3s4);
    } else {
      tmp = toCollection_1(_this__u8e3s4, LinkedHashSet_init_$Create$());
    }
    return tmp;
  }
  function sam$kotlin_Comparator$0(function_0) {
    this.x_1 = function_0;
  }
  sam$kotlin_Comparator$0.prototype.y = function (a, b) {
    return this.x_1(a, b);
  };
  sam$kotlin_Comparator$0.prototype.compare = function (a, b) {
    return this.y(a, b);
  };
  sam$kotlin_Comparator$0.$metadata$ = classMeta('sam$kotlin_Comparator$0', [Comparator]);
  function _no_name_provided__qut3iv_4($this_asSequence) {
    this.z_1 = $this_asSequence;
  }
  _no_name_provided__qut3iv_4.prototype.h = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = this.z_1.h();
    }
    return tmp$ret$0;
  };
  _no_name_provided__qut3iv_4.$metadata$ = classMeta(undefined, [Sequence]);
  function sortBy$lambda($selector) {
    return function (a, b) {
      var tmp$ret$0;
      {
        tmp$ret$0 = compareValues($selector(a), $selector(b));
      }
      return tmp$ret$0;
    };
  }
  function forEach_1(_this__u8e3s4, action) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4.a1().h();
    }
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      action(element);
    }
  }
  function map_1(_this__u8e3s4, transform) {
    var tmp$ret$1;
    {
      var tmp0_mapTo = ArrayList_init_$Create$_0(_this__u8e3s4.m());
      var tmp$ret$0;
      {
        tmp$ret$0 = _this__u8e3s4.a1().h();
      }
      var tmp0_iterator = tmp$ret$0;
      while (tmp0_iterator.n()) {
        var item = tmp0_iterator.o();
        tmp0_mapTo.b(transform(item));
      }
      tmp$ret$1 = tmp0_mapTo;
    }
    return tmp$ret$1;
  }
  function mapTo_1(_this__u8e3s4, destination, transform) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4.a1().h();
    }
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.n()) {
      var item = tmp0_iterator.o();
      destination.b(transform(item));
    }
    return destination;
  }
  function titlecaseImpl(_this__u8e3s4) {
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_asDynamic = toString_0(_this__u8e3s4);
          tmp$ret$0 = tmp0_asDynamic;
        }
        var tmp1_unsafeCast = tmp$ret$0.toUpperCase();
        tmp$ret$1 = tmp1_unsafeCast;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    var uppercase = tmp$ret$2;
    if (uppercase.length > 1) {
      var tmp;
      if (equals_1(new Char_0(_this__u8e3s4), new Char_0(_Char___init__impl__6a9atx(329)))) {
        tmp = uppercase;
      } else {
        var tmp$ret$7;
        {
          var tmp3_plus = charSequenceGet(uppercase, 0);
          var tmp$ret$6;
          {
            var tmp$ret$4;
            {
              var tmp$ret$3;
              {
                tmp$ret$3 = uppercase;
              }
              tmp$ret$4 = tmp$ret$3.substring(1);
            }
            var tmp2_lowercase = tmp$ret$4;
            var tmp$ret$5;
            {
              tmp$ret$5 = tmp2_lowercase;
            }
            tmp$ret$6 = tmp$ret$5.toLowerCase();
          }
          var tmp4_plus = tmp$ret$6;
          tmp$ret$7 = toString_0(tmp3_plus) + tmp4_plus;
        }
        tmp = tmp$ret$7;
      }
      return tmp;
    }
    return toString_0(titlecaseChar(_this__u8e3s4));
  }
  function until(_this__u8e3s4, to) {
    if (to <= IntCompanionObject_getInstance().c1_1)
      return Companion_getInstance_3().b1_1;
    return numberRangeToNumber(_this__u8e3s4, to - 1 | 0);
  }
  function coerceAtLeast(_this__u8e3s4, minimumValue) {
    return _this__u8e3s4 < minimumValue ? minimumValue : _this__u8e3s4;
  }
  function step(_this__u8e3s4, step) {
    checkStepIsPositive(step > 0, step);
    return Companion_getInstance_5().j1(_this__u8e3s4.g1_1, _this__u8e3s4.h1_1, _this__u8e3s4.i1_1 > 0 ? step : -step | 0);
  }
  function coerceIn(_this__u8e3s4, minimumValue, maximumValue) {
    if (minimumValue.m1(maximumValue) > 0)
      throw IllegalArgumentException_init_$Create$_0('Cannot coerce value to an empty range: maximum ' + toString_2(maximumValue) + ' is less than minimum ' + toString_2(minimumValue) + '.');
    if (_this__u8e3s4.m1(minimumValue) < 0)
      return minimumValue;
    if (_this__u8e3s4.m1(maximumValue) > 0)
      return maximumValue;
    return _this__u8e3s4;
  }
  function coerceAtMost(_this__u8e3s4, maximumValue) {
    return _this__u8e3s4 > maximumValue ? maximumValue : _this__u8e3s4;
  }
  function reversed_1(_this__u8e3s4) {
    return Companion_getInstance_5().j1(_this__u8e3s4.h1_1, _this__u8e3s4.g1_1, -_this__u8e3s4.i1_1 | 0);
  }
  function downTo(_this__u8e3s4, to) {
    return Companion_getInstance_5().j1(_this__u8e3s4, to, -1);
  }
  function coerceIn_0(_this__u8e3s4, minimumValue, maximumValue) {
    if (minimumValue > maximumValue)
      throw IllegalArgumentException_init_$Create$_0('Cannot coerce value to an empty range: maximum ' + maximumValue + ' is less than minimum ' + minimumValue + '.');
    if (_this__u8e3s4 < minimumValue)
      return minimumValue;
    if (_this__u8e3s4 > maximumValue)
      return maximumValue;
    return _this__u8e3s4;
  }
  function filter_0(_this__u8e3s4, predicate) {
    return new FilteringSequence(_this__u8e3s4, true, predicate);
  }
  function chunked(_this__u8e3s4, size) {
    return windowed(_this__u8e3s4, size, size, true);
  }
  function flatMap_0(_this__u8e3s4, transform) {
    return new FlatteningSequence(_this__u8e3s4, transform, Sequence$iterator$ref());
  }
  function map_2(_this__u8e3s4, transform) {
    return new TransformingSequence(_this__u8e3s4, transform);
  }
  function forEach_2(_this__u8e3s4, action) {
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      action(element);
    }
  }
  function firstOrNull_1(_this__u8e3s4, predicate) {
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      if (predicate(element))
        return element;
    }
    return null;
  }
  function windowed(_this__u8e3s4, size, step, partialWindows) {
    return windowedSequence(_this__u8e3s4, size, step, partialWindows, false);
  }
  function toList_1(_this__u8e3s4) {
    return optimizeReadOnlyList(toMutableList_3(_this__u8e3s4));
  }
  function toMutableList_3(_this__u8e3s4) {
    return toCollection_2(_this__u8e3s4, ArrayList_init_$Create$());
  }
  function toCollection_2(_this__u8e3s4, destination) {
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var item = tmp0_iterator.o();
      destination.b(item);
    }
    return destination;
  }
  function joinToString_1(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform) {
    return joinTo_1(_this__u8e3s4, StringBuilder_init_$Create$_0(), separator, prefix, postfix, limit, truncated, transform).toString();
  }
  function joinToString$default_1(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      separator = ', ';
    if (!(($mask0 & 2) === 0))
      prefix = '';
    if (!(($mask0 & 4) === 0))
      postfix = '';
    if (!(($mask0 & 8) === 0))
      limit = -1;
    if (!(($mask0 & 16) === 0))
      truncated = '...';
    if (!(($mask0 & 32) === 0))
      transform = null;
    return joinToString_1(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform);
  }
  function forEachIndexed_1(_this__u8e3s4, action) {
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var item = tmp0_iterator.o();
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      action(checkIndexOverflow(tmp1), item);
    }
  }
  function asIterable_1(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = new _no_name_provided__qut3iv_5(_this__u8e3s4);
    }
    return tmp$ret$0;
  }
  function sumOf(_this__u8e3s4, selector) {
    var sum = 0;
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      sum = sum + selector(element) | 0;
    }
    return sum;
  }
  function indexOf_2(_this__u8e3s4, element) {
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var item = tmp0_iterator.o();
      checkIndexOverflow(index);
      if (equals_1(element, item))
        return index;
      var tmp1 = index;
      index = tmp1 + 1 | 0;
    }
    return -1;
  }
  function fold_1(_this__u8e3s4, initial, operation) {
    var accumulator = initial;
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      accumulator = operation(accumulator, element);
    }
    return accumulator;
  }
  function joinTo_1(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform) {
    buffer.c(prefix);
    var count = 0;
    var tmp0_iterator = _this__u8e3s4.h();
    $l$loop: while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      count = count + 1 | 0;
      if (count > 1) {
        buffer.c(separator);
      }
      if (limit < 0 ? true : count <= limit) {
        appendElement(buffer, element, transform);
      } else
        break $l$loop;
    }
    if (limit >= 0 ? count > limit : false) {
      buffer.c(truncated);
    }
    buffer.c(postfix);
    return buffer;
  }
  function Sequence$iterator$ref() {
    var l = function (p0) {
      return p0.h();
    };
    l.callableName = 'iterator';
    return l;
  }
  function _no_name_provided__qut3iv_5($this_asIterable) {
    this.n1_1 = $this_asIterable;
  }
  _no_name_provided__qut3iv_5.prototype.h = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = this.n1_1.h();
    }
    return tmp$ret$0;
  };
  _no_name_provided__qut3iv_5.$metadata$ = classMeta(undefined, [Iterable_0]);
  function plus_0(_this__u8e3s4, elements) {
    var tmp0_safe_receiver = collectionSizeOrNull(elements);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          tmp$ret$0 = _this__u8e3s4.m() + tmp0_safe_receiver | 0;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    var tmp1_elvis_lhs = tmp;
    var result = LinkedHashSet_init_$Create$_1(mapCapacity(tmp1_elvis_lhs == null ? imul(_this__u8e3s4.m(), 2) : tmp1_elvis_lhs));
    result.o1(_this__u8e3s4);
    addAll(result, elements);
    return result;
  }
  function map_3(_this__u8e3s4, transform) {
    var tmp$ret$0;
    {
      var tmp0_mapTo = ArrayList_init_$Create$_0(charSequenceLength(_this__u8e3s4));
      var indexedObject = _this__u8e3s4;
      var inductionVariable = 0;
      while (inductionVariable < charSequenceLength(indexedObject)) {
        var item = charSequenceGet(indexedObject, inductionVariable);
        inductionVariable = inductionVariable + 1 | 0;
        tmp0_mapTo.b(transform(new Char_0(item)));
      }
      tmp$ret$0 = tmp0_mapTo;
    }
    return tmp$ret$0;
  }
  function forEachIndexed_2(_this__u8e3s4, action) {
    var index = 0;
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    while (inductionVariable < charSequenceLength(indexedObject)) {
      var item = charSequenceGet(indexedObject, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      action(tmp1, new Char_0(item));
    }
  }
  function indexOfLast(_this__u8e3s4, predicate) {
    var inductionVariable = charSequenceLength(_this__u8e3s4) - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        if (predicate(new Char_0(charSequenceGet(_this__u8e3s4, index)))) {
          return index;
        }
      }
       while (0 <= inductionVariable);
    return -1;
  }
  function getOrElse(_this__u8e3s4, index, defaultValue) {
    return (index >= 0 ? index <= get_lastIndex_4(_this__u8e3s4) : false) ? charSequenceGet(_this__u8e3s4, index) : defaultValue(index).p1_1;
  }
  function last_0(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = charSequenceLength(_this__u8e3s4) === 0;
    }
    if (tmp$ret$0)
      throw NoSuchElementException_init_$Create$_0('Char sequence is empty.');
    return charSequenceGet(_this__u8e3s4, get_lastIndex_4(_this__u8e3s4));
  }
  function drop(_this__u8e3s4, n) {
    {
      var tmp0_require = n >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Requested character count ' + n + ' is less than zero.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    var tmp$ret$2;
    {
      var tmp1_substring = coerceAtMost(n, _this__u8e3s4.length);
      var tmp$ret$1;
      {
        tmp$ret$1 = _this__u8e3s4;
      }
      tmp$ret$2 = tmp$ret$1.substring(tmp1_substring);
    }
    return tmp$ret$2;
  }
  function mapTo_2(_this__u8e3s4, destination, transform) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    while (inductionVariable < charSequenceLength(indexedObject)) {
      var item = charSequenceGet(indexedObject, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      destination.b(transform(new Char_0(item)));
    }
    return destination;
  }
  function indexOfFirst_0(_this__u8e3s4, predicate) {
    var inductionVariable = 0;
    var last = charSequenceLength(_this__u8e3s4) - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (predicate(new Char_0(charSequenceGet(_this__u8e3s4, index)))) {
          return index;
        }
      }
       while (inductionVariable <= last);
    return -1;
  }
  function single_2(_this__u8e3s4) {
    var tmp0_subject = charSequenceLength(_this__u8e3s4);
    var tmp;
    switch (tmp0_subject) {
      case 0:
        throw NoSuchElementException_init_$Create$_0('Char sequence is empty.');
      case 1:
        tmp = charSequenceGet(_this__u8e3s4, 0);
        break;
      default:
        throw IllegalArgumentException_init_$Create$_0('Char sequence has more than one element.');
    }
    return tmp;
  }
  function forEach_3(_this__u8e3s4, action) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    while (inductionVariable < charSequenceLength(indexedObject)) {
      var element = charSequenceGet(indexedObject, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      action(new Char_0(element));
    }
  }
  function KotlinNothingValueException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    KotlinNothingValueException.call($this);
    return $this;
  }
  function KotlinNothingValueException_init_$Create$() {
    var tmp = KotlinNothingValueException_init_$Init$(Object.create(KotlinNothingValueException.prototype));
    captureStack(tmp, KotlinNothingValueException_init_$Create$);
    return tmp;
  }
  function KotlinNothingValueException() {
    captureStack(this, KotlinNothingValueException);
  }
  KotlinNothingValueException.$metadata$ = classMeta('KotlinNothingValueException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function get_PI() {
    return PI;
  }
  var PI;
  function get_code(_this__u8e3s4) {
    return Char__toInt_impl_vasixd(_this__u8e3s4);
  }
  function Char(code) {
    var tmp;
    var tmp$ret$0;
    {
      Companion_getInstance_12();
      var tmp0__get_code__88qj9g = _Char___init__impl__6a9atx(0);
      tmp$ret$0 = Char__toInt_impl_vasixd(tmp0__get_code__88qj9g);
    }
    if (code < tmp$ret$0) {
      tmp = true;
    } else {
      var tmp$ret$1;
      {
        Companion_getInstance_12();
        var tmp1__get_code__adl84j = _Char___init__impl__6a9atx(65535);
        tmp$ret$1 = Char__toInt_impl_vasixd(tmp1__get_code__adl84j);
      }
      tmp = code > tmp$ret$1;
    }
    if (tmp) {
      throw IllegalArgumentException_init_$Create$_0('Invalid Char code: ' + code);
    }
    return numberToChar(code);
  }
  function AbstractCollection$toString$lambda(this$0) {
    return function (it) {
      return it === this$0 ? '(this Collection)' : toString_1(it);
    };
  }
  function AbstractCollection() {
  }
  AbstractCollection.prototype.p = function (element) {
    var tmp$ret$0;
    $l$block_0: {
      var tmp;
      if (isInterface(this, Collection)) {
        tmp = this.q();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = this.h();
      while (tmp0_iterator.n()) {
        var element_0 = tmp0_iterator.o();
        var tmp$ret$1;
        {
          tmp$ret$1 = equals_1(element_0, element);
        }
        if (tmp$ret$1) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    return tmp$ret$0;
  };
  AbstractCollection.prototype.s1 = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.q();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        var tmp$ret$1;
        {
          tmp$ret$1 = this.p(element);
        }
        if (!tmp$ret$1) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  AbstractCollection.prototype.q = function () {
    return this.m() === 0;
  };
  AbstractCollection.prototype.toString = function () {
    return joinToString$default_0(this, ', ', '[', ']', 0, null, AbstractCollection$toString$lambda(this), 24, null);
  };
  AbstractCollection.prototype.toArray = function () {
    return copyToArrayImpl(this);
  };
  AbstractCollection.$metadata$ = classMeta('AbstractCollection', [Collection]);
  function tryToComputeNext($this) {
    $this.t1_1 = State_Failed_getInstance();
    $this.v1();
    return $this.t1_1.equals(State_Ready_getInstance());
  }
  function AbstractIterator() {
    this.t1_1 = State_NotReady_getInstance();
    this.u1_1 = null;
  }
  AbstractIterator.prototype.n = function () {
    {
      var tmp0_require = !this.t1_1.equals(State_Failed_getInstance());
      {
      }
      {
        {
        }
        if (!tmp0_require) {
          var tmp$ret$0;
          {
            tmp$ret$0 = 'Failed requirement.';
          }
          var message = tmp$ret$0;
          throw IllegalArgumentException_init_$Create$_0(toString_2(message));
        }
      }
    }
    var tmp0_subject = this.t1_1;
    var tmp0 = tmp0_subject.y1();
    switch (tmp0) {
      case 2:
        return false;
      case 0:
        return true;
      default:
        return tryToComputeNext(this);
    }
  };
  AbstractIterator.prototype.o = function () {
    if (!this.n())
      throw NoSuchElementException_init_$Create$();
    this.t1_1 = State_NotReady_getInstance();
    var tmp = this.u1_1;
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  AbstractIterator.prototype.z1 = function (value) {
    this.u1_1 = value;
    this.t1_1 = State_Ready_getInstance();
  };
  AbstractIterator.prototype.a2 = function () {
    this.t1_1 = State_Done_getInstance();
  };
  AbstractIterator.$metadata$ = classMeta('AbstractIterator', [Iterator]);
  var State_Ready_instance;
  var State_NotReady_instance;
  var State_Done_instance;
  var State_Failed_instance;
  var State_entriesInitialized;
  function State_initEntries() {
    if (State_entriesInitialized)
      return Unit_getInstance();
    State_entriesInitialized = true;
    State_Ready_instance = new State('Ready', 0);
    State_NotReady_instance = new State('NotReady', 1);
    State_Done_instance = new State('Done', 2);
    State_Failed_instance = new State('Failed', 3);
  }
  function State(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  State.$metadata$ = classMeta('State', undefined, undefined, undefined, undefined, Enum.prototype);
  function State_Ready_getInstance() {
    State_initEntries();
    return State_Ready_instance;
  }
  function State_NotReady_getInstance() {
    State_initEntries();
    return State_NotReady_instance;
  }
  function State_Done_getInstance() {
    State_initEntries();
    return State_Done_instance;
  }
  function State_Failed_getInstance() {
    State_initEntries();
    return State_Failed_instance;
  }
  function IteratorImpl($outer) {
    this.d2_1 = $outer;
    this.c2_1 = 0;
  }
  IteratorImpl.prototype.n = function () {
    return this.c2_1 < this.d2_1.m();
  };
  IteratorImpl.prototype.o = function () {
    if (!this.n())
      throw NoSuchElementException_init_$Create$();
    var tmp0_this = this;
    var tmp1 = tmp0_this.c2_1;
    tmp0_this.c2_1 = tmp1 + 1 | 0;
    return this.d2_1.r(tmp1);
  };
  IteratorImpl.$metadata$ = classMeta('IteratorImpl', [Iterator]);
  function Companion() {
    Companion_instance = this;
  }
  Companion.prototype.e2 = function (index, size) {
    if (index < 0 ? true : index >= size) {
      throw IndexOutOfBoundsException_init_$Create$('index: ' + index + ', size: ' + size);
    }
  };
  Companion.prototype.f2 = function (index, size) {
    if (index < 0 ? true : index > size) {
      throw IndexOutOfBoundsException_init_$Create$('index: ' + index + ', size: ' + size);
    }
  };
  Companion.prototype.g2 = function (fromIndex, toIndex, size) {
    if (fromIndex < 0 ? true : toIndex > size) {
      throw IndexOutOfBoundsException_init_$Create$('fromIndex: ' + fromIndex + ', toIndex: ' + toIndex + ', size: ' + size);
    }
    if (fromIndex > toIndex) {
      throw IllegalArgumentException_init_$Create$_0('fromIndex: ' + fromIndex + ' > toIndex: ' + toIndex);
    }
  };
  Companion.prototype.h2 = function (startIndex, endIndex, size) {
    if (startIndex < 0 ? true : endIndex > size) {
      throw IndexOutOfBoundsException_init_$Create$('startIndex: ' + startIndex + ', endIndex: ' + endIndex + ', size: ' + size);
    }
    if (startIndex > endIndex) {
      throw IllegalArgumentException_init_$Create$_0('startIndex: ' + startIndex + ' > endIndex: ' + endIndex);
    }
  };
  Companion.prototype.i2 = function (c) {
    var hashCode = 1;
    var tmp0_iterator = c.h();
    while (tmp0_iterator.n()) {
      var e = tmp0_iterator.o();
      var tmp = imul(31, hashCode);
      var tmp1_safe_receiver = e;
      var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : hashCode_0(tmp1_safe_receiver);
      hashCode = tmp + (tmp2_elvis_lhs == null ? 0 : tmp2_elvis_lhs) | 0;
    }
    return hashCode;
  };
  Companion.prototype.j2 = function (c, other) {
    if (!(c.m() === other.m()))
      return false;
    var otherIterator = other.h();
    var tmp0_iterator = c.h();
    while (tmp0_iterator.n()) {
      var elem = tmp0_iterator.o();
      var elemOther = otherIterator.o();
      if (!equals_1(elem, elemOther)) {
        return false;
      }
    }
    return true;
  };
  Companion.$metadata$ = objectMeta('Companion');
  var Companion_instance;
  function Companion_getInstance() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function AbstractList() {
    Companion_getInstance();
    AbstractCollection.call(this);
  }
  AbstractList.prototype.h = function () {
    return new IteratorImpl(this);
  };
  AbstractList.prototype.u = function (element) {
    var tmp$ret$1;
    $l$block: {
      var index = 0;
      var tmp0_iterator = this.h();
      while (tmp0_iterator.n()) {
        var item = tmp0_iterator.o();
        var tmp$ret$0;
        {
          tmp$ret$0 = equals_1(item, element);
        }
        if (tmp$ret$0) {
          tmp$ret$1 = index;
          break $l$block;
        }
        var tmp1 = index;
        index = tmp1 + 1 | 0;
      }
      tmp$ret$1 = -1;
    }
    return tmp$ret$1;
  };
  AbstractList.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, List_0) : false))
      return false;
    return Companion_getInstance().j2(this, other);
  };
  AbstractList.prototype.hashCode = function () {
    return Companion_getInstance().i2(this);
  };
  AbstractList.$metadata$ = classMeta('AbstractList', [List_0], undefined, undefined, undefined, AbstractCollection.prototype);
  function AbstractMap$keys$1$iterator$1($entryIterator) {
    this.k2_1 = $entryIterator;
  }
  AbstractMap$keys$1$iterator$1.prototype.n = function () {
    return this.k2_1.n();
  };
  AbstractMap$keys$1$iterator$1.prototype.o = function () {
    return this.k2_1.o().l2();
  };
  AbstractMap$keys$1$iterator$1.$metadata$ = classMeta(undefined, [Iterator]);
  function AbstractMap$values$1$iterator$1($entryIterator) {
    this.m2_1 = $entryIterator;
  }
  AbstractMap$values$1$iterator$1.prototype.n = function () {
    return this.m2_1.n();
  };
  AbstractMap$values$1$iterator$1.prototype.o = function () {
    return this.m2_1.o().n2();
  };
  AbstractMap$values$1$iterator$1.$metadata$ = classMeta(undefined, [Iterator]);
  function toString($this, o) {
    return o === $this ? '(this Map)' : toString_1(o);
  }
  function implFindEntry($this, key) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_firstOrNull = $this.a1();
      var tmp0_iterator = tmp0_firstOrNull.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        var tmp$ret$0;
        {
          tmp$ret$0 = equals_1(element.l2(), key);
        }
        if (tmp$ret$0) {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      tmp$ret$1 = null;
    }
    return tmp$ret$1;
  }
  function Companion_0() {
    Companion_instance_0 = this;
  }
  Companion_0.prototype.o2 = function (e) {
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        var tmp2_safe_receiver = e.l2();
        var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : hashCode_0(tmp2_safe_receiver);
        var tmp = tmp3_elvis_lhs == null ? 0 : tmp3_elvis_lhs;
        var tmp0_safe_receiver = e.n2();
        var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode_0(tmp0_safe_receiver);
        tmp$ret$0 = tmp ^ (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs);
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  Companion_0.prototype.p2 = function (e) {
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        tmp$ret$0 = toString_1(e.l2()) + '=' + toString_1(e.n2());
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  Companion_0.prototype.q2 = function (e, other) {
    if (!(!(other == null) ? isInterface(other, Entry) : false))
      return false;
    return equals_1(e.l2(), other.l2()) ? equals_1(e.n2(), other.n2()) : false;
  };
  Companion_0.$metadata$ = objectMeta('Companion');
  var Companion_instance_0;
  function Companion_getInstance_0() {
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function AbstractMap$keys$1(this$0) {
    this.r2_1 = this$0;
    AbstractSet.call(this);
  }
  AbstractMap$keys$1.prototype.s2 = function (element) {
    return this.r2_1.v2(element);
  };
  AbstractMap$keys$1.prototype.p = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    return this.s2((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  AbstractMap$keys$1.prototype.h = function () {
    var entryIterator = this.r2_1.a1().h();
    return new AbstractMap$keys$1$iterator$1(entryIterator);
  };
  AbstractMap$keys$1.prototype.m = function () {
    return this.r2_1.m();
  };
  AbstractMap$keys$1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, AbstractSet.prototype);
  function AbstractMap$toString$lambda(this$0) {
    return function (it) {
      return this$0.w2(it);
    };
  }
  function AbstractMap$values$1(this$0) {
    this.x2_1 = this$0;
    AbstractCollection.call(this);
  }
  AbstractMap$values$1.prototype.y2 = function (element) {
    return this.x2_1.z2(element);
  };
  AbstractMap$values$1.prototype.p = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    return this.y2((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  AbstractMap$values$1.prototype.h = function () {
    var entryIterator = this.x2_1.a1().h();
    return new AbstractMap$values$1$iterator$1(entryIterator);
  };
  AbstractMap$values$1.prototype.m = function () {
    return this.x2_1.m();
  };
  AbstractMap$values$1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, AbstractCollection.prototype);
  function AbstractMap() {
    Companion_getInstance_0();
    this.t2_1 = null;
    this.u2_1 = null;
  }
  AbstractMap.prototype.v2 = function (key) {
    return !(implFindEntry(this, key) == null);
  };
  AbstractMap.prototype.z2 = function (value) {
    var tmp$ret$0;
    $l$block_0: {
      var tmp0_any = this.a1();
      var tmp;
      if (isInterface(tmp0_any, Collection)) {
        tmp = tmp0_any.q();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_any.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        var tmp$ret$1;
        {
          tmp$ret$1 = equals_1(element.n2(), value);
        }
        if (tmp$ret$1) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    return tmp$ret$0;
  };
  AbstractMap.prototype.a3 = function (entry) {
    if (!(!(entry == null) ? isInterface(entry, Entry) : false))
      return false;
    var key = entry.l2();
    var value = entry.n2();
    var tmp$ret$0;
    {
      tmp$ret$0 = (isInterface(this, Map) ? this : THROW_CCE()).b3(key);
    }
    var ourValue = tmp$ret$0;
    if (!equals_1(value, ourValue)) {
      return false;
    }
    var tmp;
    if (ourValue == null) {
      var tmp$ret$1;
      {
        tmp$ret$1 = (isInterface(this, Map) ? this : THROW_CCE()).v2(key);
      }
      tmp = !tmp$ret$1;
    } else {
      tmp = false;
    }
    if (tmp) {
      return false;
    }
    return true;
  };
  AbstractMap.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, Map) : false))
      return false;
    if (!(this.m() === other.m()))
      return false;
    var tmp$ret$0;
    $l$block_0: {
      var tmp0_all = other.a1();
      var tmp;
      if (isInterface(tmp0_all, Collection)) {
        tmp = tmp0_all.q();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_all.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        var tmp$ret$1;
        {
          tmp$ret$1 = this.a3(element);
        }
        if (!tmp$ret$1) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  AbstractMap.prototype.b3 = function (key) {
    var tmp0_safe_receiver = implFindEntry(this, key);
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.n2();
  };
  AbstractMap.prototype.hashCode = function () {
    return hashCode_0(this.a1());
  };
  AbstractMap.prototype.q = function () {
    return this.m() === 0;
  };
  AbstractMap.prototype.m = function () {
    return this.a1().m();
  };
  AbstractMap.prototype.c3 = function () {
    if (this.t2_1 == null) {
      var tmp = this;
      tmp.t2_1 = new AbstractMap$keys$1(this);
    }
    return ensureNotNull(this.t2_1);
  };
  AbstractMap.prototype.toString = function () {
    var tmp = this.a1();
    return joinToString$default_0(tmp, ', ', '{', '}', 0, null, AbstractMap$toString$lambda(this), 24, null);
  };
  AbstractMap.prototype.w2 = function (entry) {
    return toString(this, entry.l2()) + '=' + toString(this, entry.n2());
  };
  AbstractMap.prototype.d3 = function () {
    if (this.u2_1 == null) {
      var tmp = this;
      tmp.u2_1 = new AbstractMap$values$1(this);
    }
    return ensureNotNull(this.u2_1);
  };
  AbstractMap.$metadata$ = classMeta('AbstractMap', [Map]);
  function Companion_1() {
    Companion_instance_1 = this;
  }
  Companion_1.prototype.e3 = function (c) {
    var hashCode = 0;
    var tmp0_iterator = c.h();
    while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      var tmp = hashCode;
      var tmp1_safe_receiver = element;
      var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : hashCode_0(tmp1_safe_receiver);
      hashCode = tmp + (tmp2_elvis_lhs == null ? 0 : tmp2_elvis_lhs) | 0;
    }
    return hashCode;
  };
  Companion_1.prototype.f3 = function (c, other) {
    if (!(c.m() === other.m()))
      return false;
    var tmp$ret$0;
    {
      tmp$ret$0 = c.s1(other);
    }
    return tmp$ret$0;
  };
  Companion_1.$metadata$ = objectMeta('Companion');
  var Companion_instance_1;
  function Companion_getInstance_1() {
    if (Companion_instance_1 == null)
      new Companion_1();
    return Companion_instance_1;
  }
  function AbstractSet() {
    Companion_getInstance_1();
    AbstractCollection.call(this);
  }
  AbstractSet.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, Set) : false))
      return false;
    return Companion_getInstance_1().f3(this, other);
  };
  AbstractSet.prototype.hashCode = function () {
    return Companion_getInstance_1().e3(this);
  };
  AbstractSet.$metadata$ = classMeta('AbstractSet', [Set], undefined, undefined, undefined, AbstractCollection.prototype);
  function convertToSetForSetOperationWith(_this__u8e3s4, source) {
    var tmp0_subject = _this__u8e3s4;
    var tmp;
    if (isInterface(tmp0_subject, Set)) {
      tmp = _this__u8e3s4;
    } else {
      if (isInterface(tmp0_subject, Collection)) {
        var tmp_0;
        var tmp_1;
        if (isInterface(source, Collection)) {
          tmp_1 = source.m() < 2;
        } else {
          tmp_1 = false;
        }
        if (tmp_1) {
          tmp_0 = _this__u8e3s4;
        } else {
          tmp_0 = safeToConvertToSet(_this__u8e3s4) ? toHashSet(_this__u8e3s4) : _this__u8e3s4;
        }
        tmp = tmp_0;
      } else {
        tmp = brittleContainsOptimizationEnabled() ? toHashSet(_this__u8e3s4) : toList_0(_this__u8e3s4);
      }
    }
    return tmp;
  }
  function safeToConvertToSet(_this__u8e3s4) {
    var tmp;
    if (brittleContainsOptimizationEnabled() ? _this__u8e3s4.m() > 2 : false) {
      tmp = _this__u8e3s4 instanceof ArrayList;
    } else {
      tmp = false;
    }
    return tmp;
  }
  function emptyList() {
    return EmptyList_getInstance();
  }
  function arrayListOf() {
    return ArrayList_init_$Create$();
  }
  function isNullOrEmpty(_this__u8e3s4) {
    {
    }
    return _this__u8e3s4 == null ? true : _this__u8e3s4.q();
  }
  function mutableListOf() {
    return ArrayList_init_$Create$();
  }
  function listOf(elements) {
    return elements.length > 0 ? asList(elements) : emptyList();
  }
  function isNotEmpty(_this__u8e3s4) {
    return !_this__u8e3s4.q();
  }
  function shuffled(_this__u8e3s4, random) {
    var tmp$ret$0;
    {
      var tmp0_apply = toMutableList_1(_this__u8e3s4);
      {
      }
      {
        shuffle(tmp0_apply, random);
      }
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0;
  }
  function EmptyList() {
    EmptyList_instance = this;
    this.g3_1 = new Long(-1478467534, -1720727600);
  }
  EmptyList.prototype.equals = function (other) {
    var tmp;
    if (!(other == null) ? isInterface(other, List_0) : false) {
      tmp = other.q();
    } else {
      tmp = false;
    }
    return tmp;
  };
  EmptyList.prototype.hashCode = function () {
    return 1;
  };
  EmptyList.prototype.toString = function () {
    return '[]';
  };
  EmptyList.prototype.m = function () {
    return 0;
  };
  EmptyList.prototype.q = function () {
    return true;
  };
  EmptyList.prototype.h3 = function (element) {
    return false;
  };
  EmptyList.prototype.p = function (element) {
    if (true)
      return false;
    var tmp;
    if (false) {} else {
      tmp = THROW_CCE();
    }
    return this.h3(tmp);
  };
  EmptyList.prototype.i3 = function (elements) {
    return elements.q();
  };
  EmptyList.prototype.s1 = function (elements) {
    return this.i3(elements);
  };
  EmptyList.prototype.r = function (index) {
    throw IndexOutOfBoundsException_init_$Create$("Empty list doesn't contain element at index " + index + '.');
  };
  EmptyList.prototype.j3 = function (element) {
    return -1;
  };
  EmptyList.prototype.u = function (element) {
    if (true)
      return -1;
    var tmp;
    if (false) {} else {
      tmp = THROW_CCE();
    }
    return this.j3(tmp);
  };
  EmptyList.prototype.h = function () {
    return EmptyIterator_getInstance();
  };
  EmptyList.$metadata$ = objectMeta('EmptyList', [List_0, Serializable, RandomAccess]);
  var EmptyList_instance;
  function EmptyList_getInstance() {
    if (EmptyList_instance == null)
      new EmptyList();
    return EmptyList_instance;
  }
  function EmptyIterator() {
    EmptyIterator_instance = this;
  }
  EmptyIterator.prototype.n = function () {
    return false;
  };
  EmptyIterator.prototype.o = function () {
    throw NoSuchElementException_init_$Create$();
  };
  EmptyIterator.$metadata$ = objectMeta('EmptyIterator', [ListIterator]);
  var EmptyIterator_instance;
  function EmptyIterator_getInstance() {
    if (EmptyIterator_instance == null)
      new EmptyIterator();
    return EmptyIterator_instance;
  }
  function get_lastIndex_3(_this__u8e3s4) {
    return _this__u8e3s4.m() - 1 | 0;
  }
  function asCollection(_this__u8e3s4) {
    return new ArrayAsCollection(_this__u8e3s4, false);
  }
  function optimizeReadOnlyList(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.m();
    switch (tmp0_subject) {
      case 0:
        return emptyList();
      case 1:
        return listOf_0(_this__u8e3s4.r(0));
      default:
        return _this__u8e3s4;
    }
  }
  function List(size, init) {
    var tmp$ret$0;
    {
      var list = ArrayList_init_$Create$_0(size);
      {
        {
        }
        var inductionVariable = 0;
        if (inductionVariable < size)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            {
              list.b(init(index));
            }
          }
           while (inductionVariable < size);
      }
      tmp$ret$0 = list;
    }
    return tmp$ret$0;
  }
  function arrayListOf_0(elements) {
    return elements.length === 0 ? ArrayList_init_$Create$() : ArrayList_init_$Create$_1(new ArrayAsCollection(elements, true));
  }
  function throwIndexOverflow() {
    throw ArithmeticException_init_$Create$('Index overflow has happened.');
  }
  function ArrayAsCollection(values, isVarargs) {
    this.k3_1 = values;
    this.l3_1 = isVarargs;
  }
  ArrayAsCollection.prototype.m = function () {
    return this.k3_1.length;
  };
  ArrayAsCollection.prototype.q = function () {
    var tmp$ret$0;
    {
      var tmp0_isEmpty = this.k3_1;
      tmp$ret$0 = tmp0_isEmpty.length === 0;
    }
    return tmp$ret$0;
  };
  ArrayAsCollection.prototype.m3 = function (element) {
    return contains(this.k3_1, element);
  };
  ArrayAsCollection.prototype.p = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    return this.m3((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  ArrayAsCollection.prototype.n3 = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.q();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        var tmp$ret$1;
        {
          tmp$ret$1 = this.m3(element);
        }
        if (!tmp$ret$1) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  ArrayAsCollection.prototype.s1 = function (elements) {
    return this.n3(elements);
  };
  ArrayAsCollection.prototype.h = function () {
    return arrayIterator(this.k3_1);
  };
  ArrayAsCollection.$metadata$ = classMeta('ArrayAsCollection', [Collection]);
  function MutableList(size, init) {
    var list = ArrayList_init_$Create$_0(size);
    {
      {
      }
      var inductionVariable = 0;
      if (inductionVariable < size)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          {
            list.b(init(index));
          }
        }
         while (inductionVariable < size);
    }
    return list;
  }
  function get_indices_2(_this__u8e3s4) {
    return numberRangeToNumber(0, _this__u8e3s4.m() - 1 | 0);
  }
  function containsAll(_this__u8e3s4, elements) {
    return _this__u8e3s4.s1(elements);
  }
  function mutableListOf_0(elements) {
    return elements.length === 0 ? ArrayList_init_$Create$() : ArrayList_init_$Create$_1(new ArrayAsCollection(elements, true));
  }
  function IndexedValue(index, value) {
    this.o3_1 = index;
    this.p3_1 = value;
  }
  IndexedValue.prototype.q3 = function () {
    return this.o3_1;
  };
  IndexedValue.prototype.n2 = function () {
    return this.p3_1;
  };
  IndexedValue.prototype.toString = function () {
    return 'IndexedValue(index=' + this.o3_1 + ', value=' + this.p3_1 + ')';
  };
  IndexedValue.prototype.hashCode = function () {
    var result = this.o3_1;
    result = imul(result, 31) + (this.p3_1 == null ? 0 : hashCode_0(this.p3_1)) | 0;
    return result;
  };
  IndexedValue.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof IndexedValue))
      return false;
    var tmp0_other_with_cast = other instanceof IndexedValue ? other : THROW_CCE();
    if (!(this.o3_1 === tmp0_other_with_cast.o3_1))
      return false;
    if (!equals_1(this.p3_1, tmp0_other_with_cast.p3_1))
      return false;
    return true;
  };
  IndexedValue.$metadata$ = classMeta('IndexedValue');
  function Iterable(iterator) {
    return new _no_name_provided__qut3iv_6(iterator);
  }
  function IndexingIterable(iteratorFactory) {
    this.r3_1 = iteratorFactory;
  }
  IndexingIterable.prototype.h = function () {
    return new IndexingIterator(this.r3_1());
  };
  IndexingIterable.$metadata$ = classMeta('IndexingIterable', [Iterable_0]);
  function collectionSizeOrDefault(_this__u8e3s4, default_0) {
    var tmp;
    if (isInterface(_this__u8e3s4, Collection)) {
      tmp = _this__u8e3s4.m();
    } else {
      tmp = default_0;
    }
    return tmp;
  }
  function flatten(_this__u8e3s4) {
    var result = ArrayList_init_$Create$();
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      addAll(result, element);
    }
    return result;
  }
  function collectionSizeOrNull(_this__u8e3s4) {
    var tmp;
    if (isInterface(_this__u8e3s4, Collection)) {
      tmp = _this__u8e3s4.m();
    } else {
      tmp = null;
    }
    return tmp;
  }
  function _no_name_provided__qut3iv_6($iterator) {
    this.s3_1 = $iterator;
  }
  _no_name_provided__qut3iv_6.prototype.h = function () {
    return this.s3_1();
  };
  _no_name_provided__qut3iv_6.$metadata$ = classMeta(undefined, [Iterable_0]);
  function IndexingIterator(iterator) {
    this.t3_1 = iterator;
    this.u3_1 = 0;
  }
  IndexingIterator.prototype.n = function () {
    return this.t3_1.n();
  };
  IndexingIterator.prototype.o = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this.u3_1;
    tmp0_this.u3_1 = tmp1 + 1 | 0;
    return new IndexedValue(checkIndexOverflow(tmp1), this.t3_1.o());
  };
  IndexingIterator.$metadata$ = classMeta('IndexingIterator', [Iterator]);
  function getOrImplicitDefault(_this__u8e3s4, key) {
    if (isInterface(_this__u8e3s4, MapWithDefault))
      return _this__u8e3s4.v3(key);
    var tmp$ret$0;
    $l$block: {
      var value = _this__u8e3s4.b3(key);
      if (value == null ? !_this__u8e3s4.v2(key) : false) {
        throw NoSuchElementException_init_$Create$_0('Key ' + key + ' is missing in the map.');
      } else {
        tmp$ret$0 = (value == null ? true : isObject(value)) ? value : THROW_CCE();
        break $l$block;
      }
    }
    return tmp$ret$0;
  }
  function MapWithDefault() {
  }
  MapWithDefault.$metadata$ = interfaceMeta('MapWithDefault', [Map]);
  function mapOf(pairs) {
    return pairs.length > 0 ? toMap_0(pairs, LinkedHashMap_init_$Create$_1(mapCapacity(pairs.length))) : emptyMap();
  }
  function emptyMap() {
    var tmp = EmptyMap_getInstance();
    return isInterface(tmp, Map) ? tmp : THROW_CCE();
  }
  function get_1(_this__u8e3s4, key) {
    return (isInterface(_this__u8e3s4, Map) ? _this__u8e3s4 : THROW_CCE()).b3(key);
  }
  function component1_1(_this__u8e3s4) {
    return _this__u8e3s4.l2();
  }
  function component2_1(_this__u8e3s4) {
    return _this__u8e3s4.n2();
  }
  function getValue(_this__u8e3s4, key) {
    return getOrImplicitDefault(_this__u8e3s4, key);
  }
  function set(_this__u8e3s4, key, value) {
    _this__u8e3s4.a(key, value);
  }
  function iterator(_this__u8e3s4) {
    return _this__u8e3s4.a1().h();
  }
  function toMap(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, Collection)) {
      var tmp0_subject = _this__u8e3s4.m();
      var tmp;
      switch (tmp0_subject) {
        case 0:
          tmp = emptyMap();
          break;
        case 1:
          var tmp_0;
          if (isInterface(_this__u8e3s4, List_0)) {
            tmp_0 = _this__u8e3s4.r(0);
          } else {
            tmp_0 = _this__u8e3s4.h().o();
          }

          tmp = mapOf_0(tmp_0);
          break;
        default:
          tmp = toMap_1(_this__u8e3s4, LinkedHashMap_init_$Create$_1(mapCapacity(_this__u8e3s4.m())));
          break;
      }
      return tmp;
    }
    return optimizeReadOnlyMap(toMap_1(_this__u8e3s4, LinkedHashMap_init_$Create$()));
  }
  function getOrPut(_this__u8e3s4, key, defaultValue) {
    var value = _this__u8e3s4.b3(key);
    var tmp;
    if (value == null) {
      var answer = defaultValue();
      _this__u8e3s4.a(key, answer);
      tmp = answer;
    } else {
      tmp = value;
    }
    return tmp;
  }
  function mutableMapOf() {
    return LinkedHashMap_init_$Create$();
  }
  function contains_2(_this__u8e3s4, key) {
    var tmp$ret$0;
    {
      tmp$ret$0 = (isInterface(_this__u8e3s4, Map) ? _this__u8e3s4 : THROW_CCE()).v2(key);
    }
    return tmp$ret$0;
  }
  function toMap_0(_this__u8e3s4, destination) {
    var tmp$ret$0;
    {
      {
      }
      {
        putAll(destination, _this__u8e3s4);
      }
      tmp$ret$0 = destination;
    }
    return tmp$ret$0;
  }
  function EmptyMap() {
    EmptyMap_instance = this;
    this.w3_1 = new Long(-888910638, 1920087921);
  }
  EmptyMap.prototype.equals = function (other) {
    var tmp;
    if (!(other == null) ? isInterface(other, Map) : false) {
      tmp = other.q();
    } else {
      tmp = false;
    }
    return tmp;
  };
  EmptyMap.prototype.hashCode = function () {
    return 0;
  };
  EmptyMap.prototype.toString = function () {
    return '{}';
  };
  EmptyMap.prototype.m = function () {
    return 0;
  };
  EmptyMap.prototype.q = function () {
    return true;
  };
  EmptyMap.prototype.x3 = function (key) {
    return false;
  };
  EmptyMap.prototype.v2 = function (key) {
    if (!(key == null ? true : isObject(key)))
      return false;
    return this.x3((key == null ? true : isObject(key)) ? key : THROW_CCE());
  };
  EmptyMap.prototype.y3 = function (key) {
    return null;
  };
  EmptyMap.prototype.b3 = function (key) {
    if (!(key == null ? true : isObject(key)))
      return null;
    return this.y3((key == null ? true : isObject(key)) ? key : THROW_CCE());
  };
  EmptyMap.prototype.a1 = function () {
    return EmptySet_getInstance();
  };
  EmptyMap.prototype.c3 = function () {
    return EmptySet_getInstance();
  };
  EmptyMap.prototype.d3 = function () {
    return EmptyList_getInstance();
  };
  EmptyMap.$metadata$ = objectMeta('EmptyMap', [Map, Serializable]);
  var EmptyMap_instance;
  function EmptyMap_getInstance() {
    if (EmptyMap_instance == null)
      new EmptyMap();
    return EmptyMap_instance;
  }
  function toMap_1(_this__u8e3s4, destination) {
    var tmp$ret$0;
    {
      {
      }
      {
        putAll_0(destination, _this__u8e3s4);
      }
      tmp$ret$0 = destination;
    }
    return tmp$ret$0;
  }
  function optimizeReadOnlyMap(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.m();
    var tmp;
    switch (tmp0_subject) {
      case 0:
        tmp = emptyMap();
        break;
      case 1:
        var tmp$ret$0;
        {
          tmp$ret$0 = _this__u8e3s4;
        }

        tmp = tmp$ret$0;
        break;
      default:
        tmp = _this__u8e3s4;
        break;
    }
    return tmp;
  }
  function containsKey(_this__u8e3s4, key) {
    return (isInterface(_this__u8e3s4, Map) ? _this__u8e3s4 : THROW_CCE()).v2(key);
  }
  function putAll(_this__u8e3s4, pairs) {
    var indexedObject = pairs;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var tmp1_loop_parameter = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      var key = tmp1_loop_parameter.z3();
      var value = tmp1_loop_parameter.a4();
      _this__u8e3s4.a(key, value);
    }
  }
  function putAll_0(_this__u8e3s4, pairs) {
    var tmp0_iterator = pairs.h();
    while (tmp0_iterator.n()) {
      var tmp1_loop_parameter = tmp0_iterator.o();
      var key = tmp1_loop_parameter.z3();
      var value = tmp1_loop_parameter.a4();
      _this__u8e3s4.a(key, value);
    }
  }
  function hashMapOf(pairs) {
    var tmp$ret$0;
    {
      var tmp0_apply = HashMap_init_$Create$_1(mapCapacity(pairs.length));
      {
      }
      {
        putAll(tmp0_apply, pairs);
      }
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0;
  }
  function getOrElseNullable(_this__u8e3s4, key, defaultValue) {
    var value = _this__u8e3s4.b3(key);
    if (value == null ? !_this__u8e3s4.v2(key) : false) {
      return defaultValue();
    } else {
      return (value == null ? true : isObject(value)) ? value : THROW_CCE();
    }
  }
  function linkedMapOf() {
    return LinkedHashMap_init_$Create$();
  }
  function isNotEmpty_0(_this__u8e3s4) {
    return !_this__u8e3s4.q();
  }
  function getOrElse_0(_this__u8e3s4, key, defaultValue) {
    var tmp0_elvis_lhs = _this__u8e3s4.b3(key);
    return tmp0_elvis_lhs == null ? defaultValue() : tmp0_elvis_lhs;
  }
  function mutableMapOf_0(pairs) {
    var tmp$ret$0;
    {
      var tmp0_apply = LinkedHashMap_init_$Create$_1(mapCapacity(pairs.length));
      {
      }
      {
        putAll(tmp0_apply, pairs);
      }
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0;
  }
  function plusAssign(_this__u8e3s4, map) {
    _this__u8e3s4.b4(map);
  }
  function iterator_0(_this__u8e3s4) {
    return _this__u8e3s4.a1().h();
  }
  function plusAssign_0(_this__u8e3s4, pair) {
    _this__u8e3s4.a(pair.v_1, pair.w_1);
  }
  function plusAssign_1(_this__u8e3s4, element) {
    _this__u8e3s4.b(element);
  }
  function minusAssign(_this__u8e3s4, element) {
    _this__u8e3s4.c4(element);
  }
  function removeAll(_this__u8e3s4, predicate) {
    return filterInPlace(_this__u8e3s4, predicate, true);
  }
  function removeLastOrNull(_this__u8e3s4) {
    return _this__u8e3s4.q() ? null : _this__u8e3s4.d4(get_lastIndex_3(_this__u8e3s4));
  }
  function filterInPlace(_this__u8e3s4, predicate, predicateResultToRemove) {
    var result = false;
    var tmp$ret$0;
    {
      var tmp0_with = _this__u8e3s4.h();
      {
      }
      while (tmp0_with.n())
        if (predicate(tmp0_with.o()) === predicateResultToRemove) {
          tmp0_with.e4();
          result = true;
        }
      tmp$ret$0 = Unit_getInstance();
    }
    return result;
  }
  function removeAll_0(_this__u8e3s4, predicate) {
    return filterInPlace_0(_this__u8e3s4, predicate, true);
  }
  function filterInPlace_0(_this__u8e3s4, predicate, predicateResultToRemove) {
    if (!isInterface(_this__u8e3s4, RandomAccess)) {
      return filterInPlace(isInterface(_this__u8e3s4, MutableIterable) ? _this__u8e3s4 : THROW_CCE(), predicate, predicateResultToRemove);
    }
    var writeIndex = 0;
    var inductionVariable = 0;
    var last = get_lastIndex_3(_this__u8e3s4);
    if (inductionVariable <= last)
      $l$loop: do {
        var readIndex = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var element = _this__u8e3s4.r(readIndex);
        if (predicate(element) === predicateResultToRemove)
          continue $l$loop;
        if (!(writeIndex === readIndex)) {
          _this__u8e3s4.t(writeIndex, element);
        }
        var tmp1 = writeIndex;
        writeIndex = tmp1 + 1 | 0;
      }
       while (!(readIndex === last));
    if (writeIndex < _this__u8e3s4.m()) {
      var inductionVariable_0 = get_lastIndex_3(_this__u8e3s4);
      var last_0 = writeIndex;
      if (last_0 <= inductionVariable_0)
        do {
          var removeIndex = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + -1 | 0;
          _this__u8e3s4.d4(removeIndex);
        }
         while (!(removeIndex === last_0));
      return true;
    } else {
      return false;
    }
  }
  function removeLast(_this__u8e3s4) {
    var tmp;
    if (_this__u8e3s4.q()) {
      throw NoSuchElementException_init_$Create$_0('List is empty.');
    } else {
      tmp = _this__u8e3s4.d4(get_lastIndex_3(_this__u8e3s4));
    }
    return tmp;
  }
  function minusAssign_0(_this__u8e3s4, elements) {
    removeAll_1(_this__u8e3s4, elements);
  }
  function retainAll(_this__u8e3s4, predicate) {
    return filterInPlace(_this__u8e3s4, predicate, false);
  }
  function plusAssign_2(_this__u8e3s4, elements) {
    addAll(_this__u8e3s4, elements);
  }
  function addAll(_this__u8e3s4, elements) {
    var tmp0_subject = elements;
    if (isInterface(tmp0_subject, Collection))
      return _this__u8e3s4.o1(elements);
    else {
      var result = false;
      var tmp1_iterator = elements.h();
      while (tmp1_iterator.n()) {
        var item = tmp1_iterator.o();
        if (_this__u8e3s4.b(item))
          result = true;
      }
      return result;
    }
  }
  function addAll_0(_this__u8e3s4, elements) {
    var result = false;
    var tmp0_iterator = elements.h();
    while (tmp0_iterator.n()) {
      var item = tmp0_iterator.o();
      if (_this__u8e3s4.b(item))
        result = true;
    }
    return result;
  }
  function removeAll_1(_this__u8e3s4, elements) {
    var tmp$ret$0;
    {
      var tmp0_removeAll = convertToSetForSetOperationWith(elements, _this__u8e3s4);
      tmp$ret$0 = (isInterface(_this__u8e3s4, MutableCollection) ? _this__u8e3s4 : THROW_CCE()).f4(tmp0_removeAll);
    }
    return tmp$ret$0;
  }
  function removeAll_2(_this__u8e3s4, elements) {
    return (isInterface(_this__u8e3s4, MutableCollection) ? _this__u8e3s4 : THROW_CCE()).f4(elements);
  }
  function IntIterator() {
  }
  IntIterator.prototype.o = function () {
    return this.g4();
  };
  IntIterator.$metadata$ = classMeta('IntIterator', [Iterator]);
  function CharIterator() {
  }
  CharIterator.prototype.h4 = function () {
    return this.i4();
  };
  CharIterator.prototype.o = function () {
    return new Char_0(this.h4());
  };
  CharIterator.$metadata$ = classMeta('CharIterator', [Iterator]);
  function BooleanIterator() {
  }
  BooleanIterator.prototype.o = function () {
    return this.j4();
  };
  BooleanIterator.$metadata$ = classMeta('BooleanIterator', [Iterator]);
  function Sequence() {
  }
  Sequence.$metadata$ = interfaceMeta('Sequence');
  function sequence(block) {
    var tmp$ret$0;
    {
      tmp$ret$0 = new _no_name_provided__qut3iv_7(block);
    }
    return tmp$ret$0;
  }
  function SequenceScope() {
  }
  SequenceScope.$metadata$ = classMeta('SequenceScope');
  function iterator_1(block) {
    var iterator = new SequenceBuilderIterator();
    iterator.o4_1 = createCoroutineUnintercepted(block, iterator, iterator);
    return iterator;
  }
  function nextNotReady($this) {
    if (!$this.n())
      throw NoSuchElementException_init_$Create$();
    else
      return $this.o();
  }
  function exceptionalState($this) {
    var tmp0_subject = $this.l4_1;
    switch (tmp0_subject) {
      case 4:
        return NoSuchElementException_init_$Create$();
      case 5:
        return IllegalStateException_init_$Create$_0('Iterator has failed.');
      default:
        return IllegalStateException_init_$Create$_0('Unexpected state of the iterator: ' + $this.l4_1);
    }
  }
  function SequenceBuilderIterator() {
    SequenceScope.call(this);
    this.l4_1 = 0;
    this.m4_1 = null;
    this.n4_1 = null;
    this.o4_1 = null;
  }
  SequenceBuilderIterator.prototype.p4 = function (_set____db54di) {
    this.o4_1 = _set____db54di;
  };
  SequenceBuilderIterator.prototype.n = function () {
    while (true) {
      var tmp0_subject = this.l4_1;
      switch (tmp0_subject) {
        case 0:
          break;
        case 1:
          if (ensureNotNull(this.n4_1).n()) {
            this.l4_1 = 2;
            return true;
          } else {
            this.n4_1 = null;
          }

          break;
        case 4:
          return false;
        case 3:
        case 2:
          return true;
        default:
          throw exceptionalState(this);
      }
      this.l4_1 = 5;
      var step = ensureNotNull(this.o4_1);
      this.o4_1 = null;
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_success = Companion_getInstance_8();
          tmp$ret$0 = _Result___init__impl__xyqfz8(Unit_getInstance());
        }
        tmp$ret$1 = step.q4(tmp$ret$0);
      }
    }
  };
  SequenceBuilderIterator.prototype.o = function () {
    var tmp0_subject = this.l4_1;
    switch (tmp0_subject) {
      case 0:
      case 1:
        return nextNotReady(this);
      case 2:
        this.l4_1 = 1;
        return ensureNotNull(this.n4_1).o();
      case 3:
        this.l4_1 = 0;
        var tmp = this.m4_1;
        var result = (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
        this.m4_1 = null;
        return result;
      default:
        throw exceptionalState(this);
    }
  };
  SequenceBuilderIterator.prototype.k4 = function (value, $cont) {
    this.m4_1 = value;
    this.l4_1 = 3;
    var tmp$ret$0;
    {
      var tmp0__anonymous__q1qw7t = $cont;
      this.o4_1 = tmp0__anonymous__q1qw7t;
      tmp$ret$0 = get_COROUTINE_SUSPENDED();
    }
    return tmp$ret$0;
  };
  SequenceBuilderIterator.prototype.r4 = function (result) {
    var tmp$ret$0;
    {
      throwOnFailure(result);
      var tmp = _Result___get_value__impl__bjfvqg(result);
      tmp$ret$0 = (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
    }
    this.l4_1 = 4;
  };
  SequenceBuilderIterator.prototype.q4 = function (result) {
    return this.r4(result);
  };
  SequenceBuilderIterator.prototype.s4 = function () {
    return EmptyCoroutineContext_getInstance();
  };
  SequenceBuilderIterator.$metadata$ = classMeta('SequenceBuilderIterator', [Iterator, Continuation], undefined, undefined, undefined, SequenceScope.prototype);
  function _no_name_provided__qut3iv_7($block) {
    this.t4_1 = $block;
  }
  _no_name_provided__qut3iv_7.prototype.h = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = iterator_1(this.t4_1);
    }
    return tmp$ret$0;
  };
  _no_name_provided__qut3iv_7.$metadata$ = classMeta(undefined, [Sequence]);
  function generateSequence(nextFunction) {
    return constrainOnce(new GeneratorSequence(nextFunction, generateSequence$lambda(nextFunction)));
  }
  function sequenceOf(elements) {
    var tmp;
    var tmp$ret$0;
    {
      tmp$ret$0 = elements.length === 0;
    }
    if (tmp$ret$0) {
      tmp = emptySequence();
    } else {
      tmp = asSequence(elements);
    }
    return tmp;
  }
  function emptySequence() {
    return EmptySequence_getInstance();
  }
  function Sequence_0(iterator) {
    return new _no_name_provided__qut3iv_8(iterator);
  }
  function calcNext($this) {
    while ($this.u4_1.n()) {
      var item = $this.u4_1.o();
      if ($this.x4_1.a5_1(item) === $this.x4_1.z4_1) {
        $this.w4_1 = item;
        $this.v4_1 = 1;
        return Unit_getInstance();
      }
    }
    $this.v4_1 = 0;
  }
  function FilteringSequence$iterator$1(this$0) {
    this.x4_1 = this$0;
    this.u4_1 = this$0.y4_1.h();
    this.v4_1 = -1;
    this.w4_1 = null;
  }
  FilteringSequence$iterator$1.prototype.o = function () {
    if (this.v4_1 === -1)
      calcNext(this);
    if (this.v4_1 === 0)
      throw NoSuchElementException_init_$Create$();
    var result = this.w4_1;
    this.w4_1 = null;
    this.v4_1 = -1;
    return (result == null ? true : isObject(result)) ? result : THROW_CCE();
  };
  FilteringSequence$iterator$1.prototype.n = function () {
    if (this.v4_1 === -1)
      calcNext(this);
    return this.v4_1 === 1;
  };
  FilteringSequence$iterator$1.$metadata$ = classMeta(undefined, [Iterator]);
  function FilteringSequence(sequence, sendWhen, predicate) {
    this.y4_1 = sequence;
    this.z4_1 = sendWhen;
    this.a5_1 = predicate;
  }
  FilteringSequence.prototype.h = function () {
    return new FilteringSequence$iterator$1(this);
  };
  FilteringSequence.$metadata$ = classMeta('FilteringSequence', [Sequence]);
  function ensureItemIterator($this) {
    var tmp0_safe_receiver = $this.c5_1;
    if ((tmp0_safe_receiver == null ? null : tmp0_safe_receiver.n()) === false)
      $this.c5_1 = null;
    while ($this.c5_1 == null) {
      if (!$this.b5_1.n()) {
        return false;
      } else {
        var element = $this.b5_1.o();
        var nextItemIterator = $this.d5_1.g5_1($this.d5_1.f5_1(element));
        if (nextItemIterator.n()) {
          $this.c5_1 = nextItemIterator;
          return true;
        }
      }
    }
    return true;
  }
  function FlatteningSequence$iterator$1(this$0) {
    this.d5_1 = this$0;
    this.b5_1 = this$0.e5_1.h();
    this.c5_1 = null;
  }
  FlatteningSequence$iterator$1.prototype.o = function () {
    if (!ensureItemIterator(this))
      throw NoSuchElementException_init_$Create$();
    return ensureNotNull(this.c5_1).o();
  };
  FlatteningSequence$iterator$1.prototype.n = function () {
    return ensureItemIterator(this);
  };
  FlatteningSequence$iterator$1.$metadata$ = classMeta(undefined, [Iterator]);
  function FlatteningSequence(sequence, transformer, iterator) {
    this.e5_1 = sequence;
    this.f5_1 = transformer;
    this.g5_1 = iterator;
  }
  FlatteningSequence.prototype.h = function () {
    return new FlatteningSequence$iterator$1(this);
  };
  FlatteningSequence.$metadata$ = classMeta('FlatteningSequence', [Sequence]);
  function TransformingSequence$iterator$1(this$0) {
    this.i5_1 = this$0;
    this.h5_1 = this$0.j5_1.h();
  }
  TransformingSequence$iterator$1.prototype.o = function () {
    return this.i5_1.k5_1(this.h5_1.o());
  };
  TransformingSequence$iterator$1.prototype.n = function () {
    return this.h5_1.n();
  };
  TransformingSequence$iterator$1.$metadata$ = classMeta(undefined, [Iterator]);
  function TransformingSequence(sequence, transformer) {
    this.j5_1 = sequence;
    this.k5_1 = transformer;
  }
  TransformingSequence.prototype.h = function () {
    return new TransformingSequence$iterator$1(this);
  };
  TransformingSequence.$metadata$ = classMeta('TransformingSequence', [Sequence]);
  function constrainOnce(_this__u8e3s4) {
    var tmp;
    if (_this__u8e3s4 instanceof ConstrainedOnceSequence) {
      tmp = _this__u8e3s4;
    } else {
      tmp = new ConstrainedOnceSequence(_this__u8e3s4);
    }
    return tmp;
  }
  function calcNext_0($this) {
    $this.l5_1 = $this.m5_1 === -2 ? $this.n5_1.o5_1() : $this.n5_1.p5_1(ensureNotNull($this.l5_1));
    $this.m5_1 = $this.l5_1 == null ? 0 : 1;
  }
  function GeneratorSequence$iterator$1(this$0) {
    this.n5_1 = this$0;
    this.l5_1 = null;
    this.m5_1 = -2;
  }
  GeneratorSequence$iterator$1.prototype.o = function () {
    if (this.m5_1 < 0)
      calcNext_0(this);
    if (this.m5_1 === 0)
      throw NoSuchElementException_init_$Create$();
    var tmp = this.l5_1;
    var result = isObject(tmp) ? tmp : THROW_CCE();
    this.m5_1 = -1;
    return result;
  };
  GeneratorSequence$iterator$1.prototype.n = function () {
    if (this.m5_1 < 0)
      calcNext_0(this);
    return this.m5_1 === 1;
  };
  GeneratorSequence$iterator$1.$metadata$ = classMeta(undefined, [Iterator]);
  function GeneratorSequence(getInitialValue, getNextValue) {
    this.o5_1 = getInitialValue;
    this.p5_1 = getNextValue;
  }
  GeneratorSequence.prototype.h = function () {
    return new GeneratorSequence$iterator$1(this);
  };
  GeneratorSequence.$metadata$ = classMeta('GeneratorSequence', [Sequence]);
  function EmptySequence() {
    EmptySequence_instance = this;
  }
  EmptySequence.prototype.h = function () {
    return EmptyIterator_getInstance();
  };
  EmptySequence.$metadata$ = objectMeta('EmptySequence', [Sequence, DropTakeSequence]);
  var EmptySequence_instance;
  function EmptySequence_getInstance() {
    if (EmptySequence_instance == null)
      new EmptySequence();
    return EmptySequence_instance;
  }
  function DropTakeSequence() {
  }
  DropTakeSequence.$metadata$ = interfaceMeta('DropTakeSequence', [Sequence]);
  function asSequence_3(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = new _no_name_provided__qut3iv_9(_this__u8e3s4);
    }
    return constrainOnce(tmp$ret$0);
  }
  function generateSequence$lambda($nextFunction) {
    return function (it) {
      return $nextFunction();
    };
  }
  function _no_name_provided__qut3iv_8($iterator) {
    this.q5_1 = $iterator;
  }
  _no_name_provided__qut3iv_8.prototype.h = function () {
    return this.q5_1();
  };
  _no_name_provided__qut3iv_8.$metadata$ = classMeta(undefined, [Sequence]);
  function _no_name_provided__qut3iv_9($this_asSequence) {
    this.r5_1 = $this_asSequence;
  }
  _no_name_provided__qut3iv_9.prototype.h = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = this.r5_1;
    }
    return tmp$ret$0;
  };
  _no_name_provided__qut3iv_9.$metadata$ = classMeta(undefined, [Sequence]);
  function mutableSetOf() {
    return LinkedHashSet_init_$Create$();
  }
  function mutableSetOf_0(elements) {
    return toCollection(elements, LinkedHashSet_init_$Create$_1(mapCapacity(elements.length)));
  }
  function EmptySet() {
    EmptySet_instance = this;
    this.s5_1 = new Long(1993859828, 793161749);
  }
  EmptySet.prototype.equals = function (other) {
    var tmp;
    if (!(other == null) ? isInterface(other, Set) : false) {
      tmp = other.q();
    } else {
      tmp = false;
    }
    return tmp;
  };
  EmptySet.prototype.hashCode = function () {
    return 0;
  };
  EmptySet.prototype.toString = function () {
    return '[]';
  };
  EmptySet.prototype.m = function () {
    return 0;
  };
  EmptySet.prototype.q = function () {
    return true;
  };
  EmptySet.prototype.h3 = function (element) {
    return false;
  };
  EmptySet.prototype.p = function (element) {
    if (true)
      return false;
    var tmp;
    if (false) {} else {
      tmp = THROW_CCE();
    }
    return this.h3(tmp);
  };
  EmptySet.prototype.i3 = function (elements) {
    return elements.q();
  };
  EmptySet.prototype.s1 = function (elements) {
    return this.i3(elements);
  };
  EmptySet.prototype.h = function () {
    return EmptyIterator_getInstance();
  };
  EmptySet.$metadata$ = objectMeta('EmptySet', [Set, Serializable]);
  var EmptySet_instance;
  function EmptySet_getInstance() {
    if (EmptySet_instance == null)
      new EmptySet();
    return EmptySet_instance;
  }
  function emptySet() {
    return EmptySet_getInstance();
  }
  function optimizeReadOnlySet(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.m();
    switch (tmp0_subject) {
      case 0:
        return emptySet();
      case 1:
        return setOf(_this__u8e3s4.h().o());
      default:
        return _this__u8e3s4;
    }
  }
  function hashSetOf(elements) {
    return toCollection(elements, HashSet_init_$Create$_1(mapCapacity(elements.length)));
  }
  function linkedSetOf() {
    return LinkedHashSet_init_$Create$();
  }
  function orEmpty(_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4;
    return tmp0_elvis_lhs == null ? emptySet() : tmp0_elvis_lhs;
  }
  function checkWindowSizeStep(size, step) {
    {
      var tmp0_require = size > 0 ? step > 0 : false;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = !(size === step) ? 'Both size ' + size + ' and step ' + step + ' must be greater than zero.' : 'size ' + size + ' must be greater than zero.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
  }
  function windowedIterator(iterator, size, step, partialWindows, reuseBuffer) {
    if (!iterator.n())
      return EmptyIterator_getInstance();
    return iterator_1(windowedIterator$slambda_0(size, step, iterator, reuseBuffer, partialWindows, null));
  }
  function windowedSequence(_this__u8e3s4, size, step, partialWindows, reuseBuffer) {
    checkWindowSizeStep(size, step);
    var tmp$ret$0;
    {
      tmp$ret$0 = new _no_name_provided__qut3iv_10(_this__u8e3s4, size, step, partialWindows, reuseBuffer);
    }
    return tmp$ret$0;
  }
  function RingBuffer_init_$Init$(capacity, $this) {
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(capacity), null);
    }
    RingBuffer.call($this, tmp$ret$0, 0);
    return $this;
  }
  function RingBuffer_init_$Create$(capacity) {
    return RingBuffer_init_$Init$(capacity, Object.create(RingBuffer.prototype));
  }
  function RingBuffer$iterator$1(this$0) {
    this.x5_1 = this$0;
    AbstractIterator.call(this);
    this.v5_1 = this$0.b6_1;
    this.w5_1 = this$0.a6_1;
  }
  RingBuffer$iterator$1.prototype.v1 = function () {
    if (this.v5_1 === 0) {
      this.a2();
    } else {
      var tmp = this.x5_1.y5_1[this.w5_1];
      this.z1((tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE());
      var tmp_0 = this;
      var tmp$ret$0;
      {
        var tmp0_forward = this.w5_1;
        tmp$ret$0 = (tmp0_forward + 1 | 0) % this.x5_1.z5_1 | 0;
      }
      tmp_0.w5_1 = tmp$ret$0;
      var tmp0_this = this;
      var tmp1 = tmp0_this.v5_1;
      tmp0_this.v5_1 = tmp1 - 1 | 0;
    }
  };
  RingBuffer$iterator$1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, AbstractIterator.prototype);
  function RingBuffer(buffer, filledSize) {
    AbstractList.call(this);
    this.y5_1 = buffer;
    {
      var tmp0_require = filledSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'ring buffer filled size should not be negative but it is ' + filledSize;
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    {
      var tmp1_require = filledSize <= this.y5_1.length;
      {
      }
      if (!tmp1_require) {
        var tmp$ret$1;
        {
          tmp$ret$1 = 'ring buffer filled size: ' + filledSize + ' cannot be larger than the buffer size: ' + this.y5_1.length;
        }
        var message_0 = tmp$ret$1;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message_0));
      }
    }
    this.z5_1 = this.y5_1.length;
    this.a6_1 = 0;
    this.b6_1 = filledSize;
  }
  RingBuffer.prototype.m = function () {
    return this.b6_1;
  };
  RingBuffer.prototype.r = function (index) {
    Companion_getInstance().e2(index, this.b6_1);
    var tmp$ret$0;
    {
      var tmp0_forward = this.a6_1;
      tmp$ret$0 = (tmp0_forward + index | 0) % this.z5_1 | 0;
    }
    var tmp = this.y5_1[tmp$ret$0];
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  RingBuffer.prototype.c6 = function () {
    return this.b6_1 === this.z5_1;
  };
  RingBuffer.prototype.h = function () {
    return new RingBuffer$iterator$1(this);
  };
  RingBuffer.prototype.d6 = function (array) {
    var tmp;
    if (array.length < this.b6_1) {
      tmp = copyOf_7(array, this.b6_1);
    } else {
      tmp = isArray(array) ? array : THROW_CCE();
    }
    var result = tmp;
    var size = this.b6_1;
    var widx = 0;
    var idx = this.a6_1;
    while (widx < size ? idx < this.z5_1 : false) {
      var tmp_0 = widx;
      var tmp_1 = this.y5_1[idx];
      result[tmp_0] = (tmp_1 == null ? true : isObject(tmp_1)) ? tmp_1 : THROW_CCE();
      var tmp0 = widx;
      widx = tmp0 + 1 | 0;
      var tmp1 = idx;
      idx = tmp1 + 1 | 0;
    }
    idx = 0;
    while (widx < size) {
      var tmp_2 = widx;
      var tmp_3 = this.y5_1[idx];
      result[tmp_2] = (tmp_3 == null ? true : isObject(tmp_3)) ? tmp_3 : THROW_CCE();
      var tmp2 = widx;
      widx = tmp2 + 1 | 0;
      var tmp3 = idx;
      idx = tmp3 + 1 | 0;
    }
    if (result.length > this.b6_1)
      result[this.b6_1] = null;
    return isArray(result) ? result : THROW_CCE();
  };
  RingBuffer.prototype.e6 = function () {
    var tmp$ret$0;
    {
      var tmp0_arrayOfNulls = this.b6_1;
      tmp$ret$0 = fillArrayVal(Array(tmp0_arrayOfNulls), null);
    }
    return this.d6(tmp$ret$0);
  };
  RingBuffer.prototype.toArray = function () {
    return this.e6();
  };
  RingBuffer.prototype.f6 = function (maxCapacity) {
    var newCapacity = coerceAtMost((this.z5_1 + (this.z5_1 >> 1) | 0) + 1 | 0, maxCapacity);
    var tmp;
    if (this.a6_1 === 0) {
      tmp = copyOf_7(this.y5_1, newCapacity);
    } else {
      var tmp$ret$0;
      {
        tmp$ret$0 = fillArrayVal(Array(newCapacity), null);
      }
      tmp = this.d6(tmp$ret$0);
    }
    var newBuffer = tmp;
    return new RingBuffer(newBuffer, this.b6_1);
  };
  RingBuffer.prototype.g6 = function (element) {
    if (this.c6()) {
      throw IllegalStateException_init_$Create$_0('ring buffer is full');
    }
    var tmp$ret$0;
    {
      var tmp0_forward = this.a6_1;
      var tmp1_forward = this.b6_1;
      tmp$ret$0 = (tmp0_forward + tmp1_forward | 0) % this.z5_1 | 0;
    }
    this.y5_1[tmp$ret$0] = element;
    var tmp0_this = this;
    var tmp1 = tmp0_this.b6_1;
    tmp0_this.b6_1 = tmp1 + 1 | 0;
  };
  RingBuffer.prototype.h6 = function (n) {
    {
      var tmp0_require = n >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = "n shouldn't be negative but it is " + n;
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    {
      var tmp1_require = n <= this.b6_1;
      {
      }
      if (!tmp1_require) {
        var tmp$ret$1;
        {
          tmp$ret$1 = "n shouldn't be greater than the buffer size: n = " + n + ', size = ' + this.b6_1;
        }
        var message_0 = tmp$ret$1;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message_0));
      }
    }
    if (n > 0) {
      var start = this.a6_1;
      var tmp$ret$2;
      {
        tmp$ret$2 = (start + n | 0) % this.z5_1 | 0;
      }
      var end = tmp$ret$2;
      if (start > end) {
        fill(this.y5_1, null, start, this.z5_1);
        fill(this.y5_1, null, 0, end);
      } else {
        fill(this.y5_1, null, start, end);
      }
      this.a6_1 = end;
      var tmp0_this = this;
      tmp0_this.b6_1 = tmp0_this.b6_1 - n | 0;
    }
  };
  RingBuffer.$metadata$ = classMeta('RingBuffer', [RandomAccess], undefined, undefined, undefined, AbstractList.prototype);
  function windowedIterator$slambda($size, $step, $iterator, $reuseBuffer, $partialWindows, resultContinuation) {
    this.q6_1 = $size;
    this.r6_1 = $step;
    this.s6_1 = $iterator;
    this.t6_1 = $reuseBuffer;
    this.u6_1 = $partialWindows;
    CoroutineImpl.call(this, resultContinuation);
  }
  windowedIterator$slambda.prototype.h7 = function ($this$iterator, $cont) {
    var tmp = this.i7($this$iterator, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  windowedIterator$slambda.prototype.s7 = function (p1, $cont) {
    return this.h7(p1 instanceof SequenceScope ? p1 : THROW_CCE(), $cont);
  };
  windowedIterator$slambda.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 21;
            this.w6_1 = coerceAtMost(this.q6_1, 1024);
            this.x6_1 = this.r6_1 - this.q6_1 | 0;
            if (this.x6_1 >= 0) {
              this.y6_1 = ArrayList_init_$Create$_0(this.w6_1);
              this.z6_1 = 0;
              var tmp_0 = this;
              tmp_0.a7_1 = this.s6_1;
              this.k7_1 = 12;
              continue $sm;
            } else {
              this.b7_1 = RingBuffer_init_$Create$(this.w6_1);
              var tmp_1 = this;
              tmp_1.c7_1 = this.s6_1;
              this.k7_1 = 1;
              continue $sm;
            }

            break;
          case 1:
            if (!this.c7_1.n()) {
              this.k7_1 = 5;
              continue $sm;
            }

            this.d7_1 = this.c7_1.o();
            this.b7_1.g6(this.d7_1);
            if (this.b7_1.c6()) {
              if (this.b7_1.b6_1 < this.q6_1) {
                this.b7_1 = this.b7_1.f6(this.q6_1);
                this.k7_1 = 1;
                continue $sm;
              } else {
                this.k7_1 = 2;
                continue $sm;
              }
            } else {
              this.k7_1 = 4;
              continue $sm;
            }

            break;
          case 2:
            this.k7_1 = 3;
            suspendResult = this.v6_1.k4(this.t6_1 ? this.b7_1 : ArrayList_init_$Create$_1(this.b7_1), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 3:
            this.b7_1.h6(this.r6_1);
            this.k7_1 = 4;
            continue $sm;
          case 4:
            this.k7_1 = 1;
            continue $sm;
          case 5:
            if (this.u6_1) {
              this.k7_1 = 6;
              continue $sm;
            } else {
              this.k7_1 = 11;
              continue $sm;
            }

            break;
          case 6:
            if (!(this.b7_1.b6_1 > this.r6_1)) {
              this.k7_1 = 8;
              continue $sm;
            }

            this.k7_1 = 7;
            suspendResult = this.v6_1.k4(this.t6_1 ? this.b7_1 : ArrayList_init_$Create$_1(this.b7_1), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 7:
            this.b7_1.h6(this.r6_1);
            this.k7_1 = 6;
            continue $sm;
          case 8:
            var tmp_2 = this;
            tmp_2.e7_1 = this.b7_1;
            if (!this.e7_1.q()) {
              this.k7_1 = 9;
              suspendResult = this.v6_1.k4(this.b7_1, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.k7_1 = 10;
              continue $sm;
            }

            break;
          case 9:
            this.k7_1 = 10;
            continue $sm;
          case 10:
            this.k7_1 = 11;
            continue $sm;
          case 11:
            this.k7_1 = 20;
            continue $sm;
          case 12:
            if (!this.a7_1.n()) {
              this.k7_1 = 16;
              continue $sm;
            }

            this.f7_1 = this.a7_1.o();
            if (this.z6_1 > 0) {
              this.z6_1 = this.z6_1 - 1 | 0;
              this.k7_1 = 12;
              continue $sm;
            } else {
              this.k7_1 = 13;
              continue $sm;
            }

            break;
          case 13:
            this.y6_1.b(this.f7_1);
            ;
            if (this.y6_1.m() === this.q6_1) {
              this.k7_1 = 14;
              suspendResult = this.v6_1.k4(this.y6_1, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.k7_1 = 15;
              continue $sm;
            }

            break;
          case 14:
            if (this.t6_1)
              this.y6_1.t7();
            else
              this.y6_1 = ArrayList_init_$Create$_0(this.q6_1);
            this.z6_1 = this.x6_1;
            this.k7_1 = 15;
            continue $sm;
          case 15:
            this.k7_1 = 12;
            continue $sm;
          case 16:
            var tmp_3 = this;
            tmp_3.g7_1 = this.y6_1;
            if (!this.g7_1.q()) {
              if (this.u6_1 ? true : this.y6_1.m() === this.q6_1) {
                this.k7_1 = 17;
                suspendResult = this.v6_1.k4(this.y6_1, this);
                if (suspendResult === get_COROUTINE_SUSPENDED()) {
                  return suspendResult;
                }
                continue $sm;
              } else {
                this.k7_1 = 18;
                continue $sm;
              }
            } else {
              this.k7_1 = 19;
              continue $sm;
            }

            break;
          case 17:
            this.k7_1 = 18;
            continue $sm;
          case 18:
            this.k7_1 = 19;
            continue $sm;
          case 19:
            this.k7_1 = 20;
            continue $sm;
          case 20:
            return Unit_getInstance();
          case 21:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 21) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  windowedIterator$slambda.prototype.i7 = function ($this$iterator, completion) {
    var i = new windowedIterator$slambda(this.q6_1, this.r6_1, this.s6_1, this.t6_1, this.u6_1, completion);
    i.v6_1 = $this$iterator;
    return i;
  };
  windowedIterator$slambda.$metadata$ = classMeta('windowedIterator$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function windowedIterator$slambda_0($size, $step, $iterator, $reuseBuffer, $partialWindows, resultContinuation) {
    var i = new windowedIterator$slambda($size, $step, $iterator, $reuseBuffer, $partialWindows, resultContinuation);
    var l = function ($this$iterator, $cont) {
      return i.h7($this$iterator, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function _no_name_provided__qut3iv_10($this_windowedSequence, $size, $step, $partialWindows, $reuseBuffer) {
    this.w7_1 = $this_windowedSequence;
    this.x7_1 = $size;
    this.y7_1 = $step;
    this.z7_1 = $partialWindows;
    this.a8_1 = $reuseBuffer;
  }
  _no_name_provided__qut3iv_10.prototype.h = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = windowedIterator(this.w7_1.h(), this.x7_1, this.y7_1, this.z7_1, this.a8_1);
    }
    return tmp$ret$0;
  };
  _no_name_provided__qut3iv_10.$metadata$ = classMeta(undefined, [Sequence]);
  function compareBy(selector) {
    var tmp = compareBy$lambda(selector);
    return new sam$kotlin_Comparator$0_0(tmp);
  }
  function compareValuesBy(a, b, selector) {
    return compareValues(selector(a), selector(b));
  }
  function compareValues(a, b) {
    if (a === b)
      return 0;
    if (a == null)
      return -1;
    if (b == null)
      return 1;
    return compareTo_0((!(a == null) ? isComparable(a) : false) ? a : THROW_CCE(), b);
  }
  function naturalOrder() {
    var tmp = NaturalOrderComparator_getInstance();
    return isInterface(tmp, Comparator) ? tmp : THROW_CCE();
  }
  function NaturalOrderComparator() {
    NaturalOrderComparator_instance = this;
  }
  NaturalOrderComparator.prototype.b8 = function (a, b) {
    return compareTo_0(a, b);
  };
  NaturalOrderComparator.prototype.compare = function (a, b) {
    var tmp = (!(a == null) ? isComparable(a) : false) ? a : THROW_CCE();
    return this.b8(tmp, (!(b == null) ? isComparable(b) : false) ? b : THROW_CCE());
  };
  NaturalOrderComparator.$metadata$ = objectMeta('NaturalOrderComparator', [Comparator]);
  var NaturalOrderComparator_instance;
  function NaturalOrderComparator_getInstance() {
    if (NaturalOrderComparator_instance == null)
      new NaturalOrderComparator();
    return NaturalOrderComparator_instance;
  }
  function sam$kotlin_Comparator$0_0(function_0) {
    this.c8_1 = function_0;
  }
  sam$kotlin_Comparator$0_0.prototype.y = function (a, b) {
    return this.c8_1(a, b);
  };
  sam$kotlin_Comparator$0_0.prototype.compare = function (a, b) {
    return this.y(a, b);
  };
  sam$kotlin_Comparator$0_0.$metadata$ = classMeta('sam$kotlin_Comparator$0', [Comparator]);
  function compareBy$lambda($selector) {
    return function (a, b) {
      var tmp$ret$0;
      {
        tmp$ret$0 = compareValues($selector(a), $selector(b));
      }
      return tmp$ret$0;
    };
  }
  function contract(builder) {
  }
  function Continuation() {
  }
  Continuation.$metadata$ = interfaceMeta('Continuation');
  function resume(_this__u8e3s4, value) {
    var tmp$ret$0;
    {
      var tmp0_success = Companion_getInstance_8();
      tmp$ret$0 = _Result___init__impl__xyqfz8(value);
    }
    return _this__u8e3s4.q4(tmp$ret$0);
  }
  function resumeWithException(_this__u8e3s4, exception) {
    var tmp$ret$0;
    {
      var tmp0_failure = Companion_getInstance_8();
      tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(exception));
    }
    return _this__u8e3s4.q4(tmp$ret$0);
  }
  function startCoroutine(_this__u8e3s4, receiver, completion) {
    var tmp$ret$1;
    {
      var tmp0_resume = intercepted(createCoroutineUnintercepted(_this__u8e3s4, receiver, completion));
      var tmp$ret$0;
      {
        var tmp0_success = Companion_getInstance_8();
        tmp$ret$0 = _Result___init__impl__xyqfz8(Unit_getInstance());
      }
      tmp$ret$1 = tmp0_resume.q4(tmp$ret$0);
    }
  }
  function Key() {
    Key_instance = this;
  }
  Key.$metadata$ = objectMeta('Key', [Key_0]);
  var Key_instance;
  function Key_getInstance() {
    if (Key_instance == null)
      new Key();
    return Key_instance;
  }
  function ContinuationInterceptor() {
  }
  ContinuationInterceptor.$metadata$ = interfaceMeta('ContinuationInterceptor', [Element]);
  function Key_0() {
  }
  Key_0.$metadata$ = interfaceMeta('Key');
  function Element() {
  }
  Element.$metadata$ = interfaceMeta('Element', [CoroutineContext]);
  function CoroutineContext$plus$lambda() {
    return function (acc, element) {
      var removed = acc.k8(element.l2());
      var tmp;
      if (removed === EmptyCoroutineContext_getInstance()) {
        tmp = element;
      } else {
        var interceptor = removed.f8(Key_getInstance());
        var tmp_0;
        if (interceptor == null) {
          tmp_0 = new CombinedContext(removed, element);
        } else {
          var left = removed.k8(Key_getInstance());
          tmp_0 = left === EmptyCoroutineContext_getInstance() ? new CombinedContext(element, interceptor) : new CombinedContext(new CombinedContext(left, element), interceptor);
        }
        tmp = tmp_0;
      }
      return tmp;
    };
  }
  function CoroutineContext() {
  }
  CoroutineContext.$metadata$ = interfaceMeta('CoroutineContext');
  function EmptyCoroutineContext() {
    EmptyCoroutineContext_instance = this;
    this.n8_1 = new Long(0, 0);
  }
  EmptyCoroutineContext.prototype.f8 = function (key) {
    return null;
  };
  EmptyCoroutineContext.prototype.l8 = function (initial, operation) {
    return initial;
  };
  EmptyCoroutineContext.prototype.m8 = function (context) {
    return context;
  };
  EmptyCoroutineContext.prototype.k8 = function (key) {
    return this;
  };
  EmptyCoroutineContext.prototype.hashCode = function () {
    return 0;
  };
  EmptyCoroutineContext.prototype.toString = function () {
    return 'EmptyCoroutineContext';
  };
  EmptyCoroutineContext.$metadata$ = objectMeta('EmptyCoroutineContext', [CoroutineContext, Serializable]);
  var EmptyCoroutineContext_instance;
  function EmptyCoroutineContext_getInstance() {
    if (EmptyCoroutineContext_instance == null)
      new EmptyCoroutineContext();
    return EmptyCoroutineContext_instance;
  }
  function size($this) {
    var cur = $this;
    var size = 2;
    while (true) {
      var tmp = cur.o8_1;
      var tmp0_elvis_lhs = tmp instanceof CombinedContext ? tmp : null;
      var tmp_0;
      if (tmp0_elvis_lhs == null) {
        return size;
      } else {
        tmp_0 = tmp0_elvis_lhs;
      }
      cur = tmp_0;
      var tmp1 = size;
      size = tmp1 + 1 | 0;
    }
  }
  function contains_3($this, element) {
    return equals_1($this.f8(element.l2()), element);
  }
  function containsAll_0($this, context) {
    var cur = context;
    while (true) {
      if (!contains_3($this, cur.p8_1))
        return false;
      var next = cur.o8_1;
      if (next instanceof CombinedContext) {
        cur = next;
      } else {
        return contains_3($this, isInterface(next, Element) ? next : THROW_CCE());
      }
    }
  }
  function CombinedContext$toString$lambda() {
    return function (acc, element) {
      var tmp;
      var tmp$ret$0;
      {
        tmp$ret$0 = charSequenceLength(acc) === 0;
      }
      if (tmp$ret$0) {
        tmp = toString_2(element);
      } else {
        tmp = acc + ', ' + element;
      }
      return tmp;
    };
  }
  function CombinedContext(left, element) {
    this.o8_1 = left;
    this.p8_1 = element;
  }
  CombinedContext.prototype.f8 = function (key) {
    var cur = this;
    while (true) {
      var tmp0_safe_receiver = cur.p8_1.f8(key);
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$0;
        {
          {
          }
          return tmp0_safe_receiver;
        }
      }
      var next = cur.o8_1;
      if (next instanceof CombinedContext) {
        cur = next;
      } else {
        return next.f8(key);
      }
    }
  };
  CombinedContext.prototype.l8 = function (initial, operation) {
    return operation(this.o8_1.l8(initial, operation), this.p8_1);
  };
  CombinedContext.prototype.k8 = function (key) {
    var tmp0_safe_receiver = this.p8_1.f8(key);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        return this.o8_1;
      }
    }
    var newLeft = this.o8_1.k8(key);
    return newLeft === this.o8_1 ? this : newLeft === EmptyCoroutineContext_getInstance() ? this.p8_1 : new CombinedContext(newLeft, this.p8_1);
  };
  CombinedContext.prototype.equals = function (other) {
    var tmp;
    if (this === other) {
      tmp = true;
    } else {
      var tmp_0;
      var tmp_1;
      if (other instanceof CombinedContext) {
        tmp_1 = size(other) === size(this);
      } else {
        tmp_1 = false;
      }
      if (tmp_1) {
        tmp_0 = containsAll_0(other, this);
      } else {
        tmp_0 = false;
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  CombinedContext.prototype.hashCode = function () {
    return hashCode_0(this.o8_1) + hashCode_0(this.p8_1) | 0;
  };
  CombinedContext.prototype.toString = function () {
    return '[' + this.l8('', CombinedContext$toString$lambda()) + ']';
  };
  CombinedContext.$metadata$ = classMeta('CombinedContext', [CoroutineContext, Serializable]);
  function AbstractCoroutineContextKey(baseKey, safeCast) {
    this.g8_1 = safeCast;
    var tmp = this;
    var tmp_0;
    if (baseKey instanceof AbstractCoroutineContextKey) {
      tmp_0 = baseKey.h8_1;
    } else {
      tmp_0 = baseKey;
    }
    tmp.h8_1 = tmp_0;
  }
  AbstractCoroutineContextKey.prototype.i8 = function (element) {
    return this.g8_1(element);
  };
  AbstractCoroutineContextKey.prototype.j8 = function (key) {
    return key === this ? true : this.h8_1 === key;
  };
  AbstractCoroutineContextKey.$metadata$ = classMeta('AbstractCoroutineContextKey', [Key_0]);
  function AbstractCoroutineContextElement(key) {
    this.q8_1 = key;
  }
  AbstractCoroutineContextElement.prototype.l2 = function () {
    return this.q8_1;
  };
  AbstractCoroutineContextElement.$metadata$ = classMeta('AbstractCoroutineContextElement', [Element]);
  function get_COROUTINE_SUSPENDED() {
    return CoroutineSingletons_COROUTINE_SUSPENDED_getInstance();
  }
  var CoroutineSingletons_COROUTINE_SUSPENDED_instance;
  var CoroutineSingletons_UNDECIDED_instance;
  var CoroutineSingletons_RESUMED_instance;
  var CoroutineSingletons_entriesInitialized;
  function CoroutineSingletons_initEntries() {
    if (CoroutineSingletons_entriesInitialized)
      return Unit_getInstance();
    CoroutineSingletons_entriesInitialized = true;
    CoroutineSingletons_COROUTINE_SUSPENDED_instance = new CoroutineSingletons('COROUTINE_SUSPENDED', 0);
    CoroutineSingletons_UNDECIDED_instance = new CoroutineSingletons('UNDECIDED', 1);
    CoroutineSingletons_RESUMED_instance = new CoroutineSingletons('RESUMED', 2);
  }
  function CoroutineSingletons(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  CoroutineSingletons.$metadata$ = classMeta('CoroutineSingletons', undefined, undefined, undefined, undefined, Enum.prototype);
  function CoroutineSingletons_COROUTINE_SUSPENDED_getInstance() {
    CoroutineSingletons_initEntries();
    return CoroutineSingletons_COROUTINE_SUSPENDED_instance;
  }
  function and(_this__u8e3s4, other) {
    return toByte(_this__u8e3s4 & other);
  }
  function getProgressionLastElement(start, end, step) {
    var tmp;
    if (step > 0) {
      tmp = start >= end ? end : end - differenceModulo(end, start, step) | 0;
    } else if (step < 0) {
      tmp = start <= end ? end : end + differenceModulo(start, end, -step | 0) | 0;
    } else {
      throw IllegalArgumentException_init_$Create$_0('Step is zero.');
    }
    return tmp;
  }
  function differenceModulo(a, b, c) {
    return mod(mod(a, c) - mod(b, c) | 0, c);
  }
  function mod(a, b) {
    var mod = a % b | 0;
    return mod >= 0 ? mod : mod + b | 0;
  }
  function ReadWriteProperty() {
  }
  ReadWriteProperty.$metadata$ = interfaceMeta('ReadWriteProperty', [ReadOnlyProperty]);
  function ReadOnlyProperty() {
  }
  ReadOnlyProperty.$metadata$ = interfaceMeta('ReadOnlyProperty');
  function getValue_0(_this__u8e3s4, thisRef, property) {
    return _this__u8e3s4.get();
  }
  function Default() {
    Default_instance = this;
    Random.call(this);
    this.t8_1 = defaultPlatformRandom();
  }
  Default.prototype.u8 = function (bitCount) {
    return this.t8_1.u8(bitCount);
  };
  Default.prototype.g4 = function () {
    return this.t8_1.g4();
  };
  Default.prototype.s = function (until) {
    return this.t8_1.s(until);
  };
  Default.prototype.v8 = function (from, until) {
    return this.t8_1.v8(from, until);
  };
  Default.prototype.w8 = function () {
    return this.t8_1.w8();
  };
  Default.$metadata$ = objectMeta('Default', [Serializable], undefined, undefined, undefined, Random.prototype);
  var Default_instance;
  function Default_getInstance() {
    if (Default_instance == null)
      new Default();
    return Default_instance;
  }
  function Random() {
    Default_getInstance();
  }
  Random.prototype.g4 = function () {
    return this.u8(32);
  };
  Random.prototype.s = function (until) {
    return this.v8(0, until);
  };
  Random.prototype.v8 = function (from, until) {
    checkRangeBounds(from, until);
    var n = until - from | 0;
    if (n > 0 ? true : n === IntCompanionObject_getInstance().c1_1) {
      var tmp;
      if ((n & (-n | 0)) === n) {
        var bitCount = fastLog2(n);
        tmp = this.u8(bitCount);
      } else {
        var v;
        do {
          var bits = this.g4() >>> 1 | 0;
          v = bits % n | 0;
        }
         while (((bits - v | 0) + (n - 1 | 0) | 0) < 0);
        tmp = v;
      }
      var rnd = tmp;
      return from + rnd | 0;
    } else {
      while (true) {
        var rnd_0 = this.g4();
        if (from <= rnd_0 ? rnd_0 < until : false)
          return rnd_0;
      }
    }
  };
  Random.prototype.w8 = function () {
    return doubleFromParts(this.u8(26), this.u8(27));
  };
  Random.$metadata$ = classMeta('Random');
  function Random_0(seed) {
    return XorWowRandom_init_$Create$(seed, seed >> 31);
  }
  function checkRangeBounds(from, until) {
    var tmp0_require = until > from;
    {
    }
    var tmp;
    if (!tmp0_require) {
      var tmp$ret$0;
      {
        tmp$ret$0 = boundsErrorMessage(from, until);
      }
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$_0(toString_2(message));
    }
    return tmp;
  }
  function fastLog2(value) {
    var tmp$ret$0;
    {
      tmp$ret$0 = clz32(value);
    }
    return 31 - tmp$ret$0 | 0;
  }
  function boundsErrorMessage(from, until) {
    return 'Random range is empty: [' + toString_2(from) + ', ' + toString_2(until) + ').';
  }
  function takeUpperBits(_this__u8e3s4, bitCount) {
    return (_this__u8e3s4 >>> (32 - bitCount | 0) | 0) & (-bitCount | 0) >> 31;
  }
  function XorWowRandom_init_$Init$(seed1, seed2, $this) {
    XorWowRandom.call($this, seed1, seed2, 0, 0, ~seed1, seed1 << 10 ^ (seed2 >>> 4 | 0));
    return $this;
  }
  function XorWowRandom_init_$Create$(seed1, seed2) {
    return XorWowRandom_init_$Init$(seed1, seed2, Object.create(XorWowRandom.prototype));
  }
  function Companion_2() {
    Companion_instance_2 = this;
    this.x8_1 = new Long(0, 0);
  }
  Companion_2.$metadata$ = objectMeta('Companion');
  var Companion_instance_2;
  function Companion_getInstance_2() {
    if (Companion_instance_2 == null)
      new Companion_2();
    return Companion_instance_2;
  }
  function XorWowRandom(x, y, z, w, v, addend) {
    Companion_getInstance_2();
    Random.call(this);
    this.y8_1 = x;
    this.z8_1 = y;
    this.a9_1 = z;
    this.b9_1 = w;
    this.c9_1 = v;
    this.d9_1 = addend;
    {
      var tmp0_require = !((this.y8_1 | this.z8_1 | this.a9_1 | this.b9_1 | this.c9_1) === 0);
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Initial state must have at least one non-zero element.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    {
      {
      }
      var inductionVariable = 0;
      if (inductionVariable < 64)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          {
            this.g4();
          }
        }
         while (inductionVariable < 64);
    }
  }
  XorWowRandom.prototype.g4 = function () {
    var t = this.y8_1;
    t = t ^ (t >>> 2 | 0);
    this.y8_1 = this.z8_1;
    this.z8_1 = this.a9_1;
    this.a9_1 = this.b9_1;
    var v0 = this.c9_1;
    this.b9_1 = v0;
    t = t ^ t << 1 ^ v0 ^ v0 << 4;
    this.c9_1 = t;
    var tmp0_this = this;
    tmp0_this.d9_1 = tmp0_this.d9_1 + 362437 | 0;
    return t + this.d9_1 | 0;
  };
  XorWowRandom.prototype.u8 = function (bitCount) {
    return takeUpperBits(this.g4(), bitCount);
  };
  XorWowRandom.$metadata$ = classMeta('XorWowRandom', [Serializable], undefined, undefined, undefined, Random.prototype);
  function Companion_3() {
    Companion_instance_3 = this;
    this.b1_1 = new IntRange(1, 0);
  }
  Companion_3.$metadata$ = objectMeta('Companion');
  var Companion_instance_3;
  function Companion_getInstance_3() {
    if (Companion_instance_3 == null)
      new Companion_3();
    return Companion_instance_3;
  }
  function IntRange(start, endInclusive) {
    Companion_getInstance_3();
    IntProgression.call(this, start, endInclusive, 1);
  }
  IntRange.prototype.h9 = function () {
    return this.i9();
  };
  IntRange.prototype.j9 = function () {
    return this.k9();
  };
  IntRange.prototype.l9 = function (value) {
    return this.i9() <= value ? value <= this.k9() : false;
  };
  IntRange.prototype.q = function () {
    return this.i9() > this.k9();
  };
  IntRange.prototype.equals = function (other) {
    var tmp;
    if (other instanceof IntRange) {
      tmp = (this.q() ? other.q() : false) ? true : this.i9() === other.i9() ? this.k9() === other.k9() : false;
    } else {
      tmp = false;
    }
    return tmp;
  };
  IntRange.prototype.hashCode = function () {
    return this.q() ? -1 : imul(31, this.i9()) + this.k9() | 0;
  };
  IntRange.prototype.toString = function () {
    return '' + this.i9() + '..' + this.k9();
  };
  IntRange.$metadata$ = classMeta('IntRange', [ClosedRange, OpenEndRange], undefined, undefined, undefined, IntProgression.prototype);
  function Companion_4() {
    Companion_instance_4 = this;
    this.m9_1 = new CharRange(_Char___init__impl__6a9atx(1), _Char___init__impl__6a9atx(0));
  }
  Companion_4.$metadata$ = objectMeta('Companion');
  var Companion_instance_4;
  function Companion_getInstance_4() {
    if (Companion_instance_4 == null)
      new Companion_4();
    return Companion_instance_4;
  }
  function CharRange(start, endInclusive) {
    Companion_getInstance_4();
    CharProgression.call(this, start, endInclusive, 1);
  }
  CharRange.prototype.q9 = function (value) {
    return Char__compareTo_impl_ypi4mb(this.v9(), value) <= 0 ? Char__compareTo_impl_ypi4mb(value, this.u9()) <= 0 : false;
  };
  CharRange.prototype.q = function () {
    return Char__compareTo_impl_ypi4mb(this.v9(), this.u9()) > 0;
  };
  CharRange.prototype.equals = function (other) {
    var tmp;
    if (other instanceof CharRange) {
      tmp = (this.q() ? other.q() : false) ? true : equals_1(new Char_0(this.v9()), new Char_0(other.v9())) ? equals_1(new Char_0(this.u9()), new Char_0(other.u9())) : false;
    } else {
      tmp = false;
    }
    return tmp;
  };
  CharRange.prototype.hashCode = function () {
    var tmp;
    if (this.q()) {
      tmp = -1;
    } else {
      var tmp$ret$0;
      {
        var tmp0__get_code__88qj9g = this.v9();
        tmp$ret$0 = Char__toInt_impl_vasixd(tmp0__get_code__88qj9g);
      }
      var tmp_0 = imul(31, tmp$ret$0);
      var tmp$ret$1;
      {
        var tmp1__get_code__adl84j = this.u9();
        tmp$ret$1 = Char__toInt_impl_vasixd(tmp1__get_code__adl84j);
      }
      tmp = tmp_0 + tmp$ret$1 | 0;
    }
    return tmp;
  };
  CharRange.prototype.toString = function () {
    return '' + new Char_0(this.v9()) + '..' + new Char_0(this.u9());
  };
  CharRange.$metadata$ = classMeta('CharRange', [ClosedRange, OpenEndRange], undefined, undefined, undefined, CharProgression.prototype);
  function IntProgressionIterator(first, last, step) {
    IntIterator.call(this);
    this.w9_1 = step;
    this.x9_1 = last;
    this.y9_1 = this.w9_1 > 0 ? first <= last : first >= last;
    this.z9_1 = this.y9_1 ? first : this.x9_1;
  }
  IntProgressionIterator.prototype.n = function () {
    return this.y9_1;
  };
  IntProgressionIterator.prototype.g4 = function () {
    var value = this.z9_1;
    if (value === this.x9_1) {
      if (!this.y9_1)
        throw NoSuchElementException_init_$Create$();
      this.y9_1 = false;
    } else {
      var tmp0_this = this;
      tmp0_this.z9_1 = tmp0_this.z9_1 + this.w9_1 | 0;
    }
    return value;
  };
  IntProgressionIterator.$metadata$ = classMeta('IntProgressionIterator', undefined, undefined, undefined, undefined, IntIterator.prototype);
  function CharProgressionIterator(first, last, step) {
    CharIterator.call(this);
    this.aa_1 = step;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = Char__toInt_impl_vasixd(last);
    }
    tmp.ba_1 = tmp$ret$0;
    this.ca_1 = this.aa_1 > 0 ? Char__compareTo_impl_ypi4mb(first, last) <= 0 : Char__compareTo_impl_ypi4mb(first, last) >= 0;
    var tmp_0 = this;
    var tmp_1;
    if (this.ca_1) {
      var tmp$ret$1;
      {
        tmp$ret$1 = Char__toInt_impl_vasixd(first);
      }
      tmp_1 = tmp$ret$1;
    } else {
      tmp_1 = this.ba_1;
    }
    tmp_0.da_1 = tmp_1;
  }
  CharProgressionIterator.prototype.n = function () {
    return this.ca_1;
  };
  CharProgressionIterator.prototype.i4 = function () {
    var value = this.da_1;
    if (value === this.ba_1) {
      if (!this.ca_1)
        throw NoSuchElementException_init_$Create$();
      this.ca_1 = false;
    } else {
      var tmp0_this = this;
      tmp0_this.da_1 = tmp0_this.da_1 + this.aa_1 | 0;
    }
    return numberToChar(value);
  };
  CharProgressionIterator.$metadata$ = classMeta('CharProgressionIterator', undefined, undefined, undefined, undefined, CharIterator.prototype);
  function Companion_5() {
    Companion_instance_5 = this;
  }
  Companion_5.prototype.j1 = function (rangeStart, rangeEnd, step) {
    return new IntProgression(rangeStart, rangeEnd, step);
  };
  Companion_5.$metadata$ = objectMeta('Companion');
  var Companion_instance_5;
  function Companion_getInstance_5() {
    if (Companion_instance_5 == null)
      new Companion_5();
    return Companion_instance_5;
  }
  function IntProgression(start, endInclusive, step) {
    Companion_getInstance_5();
    if (step === 0)
      throw IllegalArgumentException_init_$Create$_0('Step must be non-zero.');
    if (step === IntCompanionObject_getInstance().c1_1)
      throw IllegalArgumentException_init_$Create$_0('Step must be greater than Int.MIN_VALUE to avoid overflow on negation.');
    this.g1_1 = start;
    this.h1_1 = getProgressionLastElement(start, endInclusive, step);
    this.i1_1 = step;
  }
  IntProgression.prototype.i9 = function () {
    return this.g1_1;
  };
  IntProgression.prototype.k9 = function () {
    return this.h1_1;
  };
  IntProgression.prototype.h = function () {
    return new IntProgressionIterator(this.g1_1, this.h1_1, this.i1_1);
  };
  IntProgression.prototype.q = function () {
    return this.i1_1 > 0 ? this.g1_1 > this.h1_1 : this.g1_1 < this.h1_1;
  };
  IntProgression.prototype.equals = function (other) {
    var tmp;
    if (other instanceof IntProgression) {
      tmp = (this.q() ? other.q() : false) ? true : (this.g1_1 === other.g1_1 ? this.h1_1 === other.h1_1 : false) ? this.i1_1 === other.i1_1 : false;
    } else {
      tmp = false;
    }
    return tmp;
  };
  IntProgression.prototype.hashCode = function () {
    return this.q() ? -1 : imul(31, imul(31, this.g1_1) + this.h1_1 | 0) + this.i1_1 | 0;
  };
  IntProgression.prototype.toString = function () {
    return this.i1_1 > 0 ? '' + this.g1_1 + '..' + this.h1_1 + ' step ' + this.i1_1 : '' + this.g1_1 + ' downTo ' + this.h1_1 + ' step ' + (-this.i1_1 | 0);
  };
  IntProgression.$metadata$ = classMeta('IntProgression', [Iterable_0]);
  function Companion_6() {
    Companion_instance_6 = this;
  }
  Companion_6.$metadata$ = objectMeta('Companion');
  var Companion_instance_6;
  function Companion_getInstance_6() {
    if (Companion_instance_6 == null)
      new Companion_6();
    return Companion_instance_6;
  }
  function CharProgression(start, endInclusive, step) {
    Companion_getInstance_6();
    if (step === 0)
      throw IllegalArgumentException_init_$Create$_0('Step must be non-zero.');
    if (step === IntCompanionObject_getInstance().c1_1)
      throw IllegalArgumentException_init_$Create$_0('Step must be greater than Int.MIN_VALUE to avoid overflow on negation.');
    this.r9_1 = start;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = Char__toInt_impl_vasixd(start);
    }
    var tmp_0 = tmp$ret$0;
    var tmp$ret$1;
    {
      tmp$ret$1 = Char__toInt_impl_vasixd(endInclusive);
    }
    tmp.s9_1 = numberToChar(getProgressionLastElement(tmp_0, tmp$ret$1, step));
    this.t9_1 = step;
  }
  CharProgression.prototype.v9 = function () {
    return this.r9_1;
  };
  CharProgression.prototype.u9 = function () {
    return this.s9_1;
  };
  CharProgression.prototype.h = function () {
    return new CharProgressionIterator(this.r9_1, this.s9_1, this.t9_1);
  };
  CharProgression.prototype.q = function () {
    return this.t9_1 > 0 ? Char__compareTo_impl_ypi4mb(this.r9_1, this.s9_1) > 0 : Char__compareTo_impl_ypi4mb(this.r9_1, this.s9_1) < 0;
  };
  CharProgression.prototype.equals = function (other) {
    var tmp;
    if (other instanceof CharProgression) {
      tmp = (this.q() ? other.q() : false) ? true : (equals_1(new Char_0(this.r9_1), new Char_0(other.r9_1)) ? equals_1(new Char_0(this.s9_1), new Char_0(other.s9_1)) : false) ? this.t9_1 === other.t9_1 : false;
    } else {
      tmp = false;
    }
    return tmp;
  };
  CharProgression.prototype.hashCode = function () {
    var tmp;
    if (this.q()) {
      tmp = -1;
    } else {
      var tmp$ret$0;
      {
        var tmp0__get_code__88qj9g = this.r9_1;
        tmp$ret$0 = Char__toInt_impl_vasixd(tmp0__get_code__88qj9g);
      }
      var tmp_0 = imul(31, tmp$ret$0);
      var tmp$ret$1;
      {
        var tmp1__get_code__adl84j = this.s9_1;
        tmp$ret$1 = Char__toInt_impl_vasixd(tmp1__get_code__adl84j);
      }
      tmp = imul(31, tmp_0 + tmp$ret$1 | 0) + this.t9_1 | 0;
    }
    return tmp;
  };
  CharProgression.prototype.toString = function () {
    return this.t9_1 > 0 ? '' + new Char_0(this.r9_1) + '..' + new Char_0(this.s9_1) + ' step ' + this.t9_1 : '' + new Char_0(this.r9_1) + ' downTo ' + new Char_0(this.s9_1) + ' step ' + (-this.t9_1 | 0);
  };
  CharProgression.$metadata$ = classMeta('CharProgression', [Iterable_0]);
  function ClosedRange() {
  }
  ClosedRange.$metadata$ = interfaceMeta('ClosedRange');
  function OpenEndRange() {
  }
  OpenEndRange.$metadata$ = interfaceMeta('OpenEndRange');
  function checkStepIsPositive(isPositive, step) {
    if (!isPositive)
      throw IllegalArgumentException_init_$Create$_0('Step must be positive, was: ' + toString_2(step) + '.');
  }
  function KClassifier() {
  }
  KClassifier.$metadata$ = interfaceMeta('KClassifier');
  function KTypeParameter() {
  }
  KTypeParameter.$metadata$ = interfaceMeta('KTypeParameter', [KClassifier]);
  function appendElement(_this__u8e3s4, element, transform) {
    if (!(transform == null)) {
      _this__u8e3s4.c(transform(element));
    } else {
      if (element == null ? true : isCharSequence(element)) {
        _this__u8e3s4.c(element);
      } else {
        if (element instanceof Char_0) {
          _this__u8e3s4.ea(element.p1_1);
        } else {
          _this__u8e3s4.c(toString_1(element));
        }
      }
    }
  }
  function equals(_this__u8e3s4, other, ignoreCase) {
    if (equals_1(new Char_0(_this__u8e3s4), new Char_0(other)))
      return true;
    if (!ignoreCase)
      return false;
    var thisUpper = uppercaseChar(_this__u8e3s4);
    var otherUpper = uppercaseChar(other);
    var tmp;
    if (equals_1(new Char_0(thisUpper), new Char_0(otherUpper))) {
      tmp = true;
    } else {
      var tmp$ret$3;
      {
        var tmp$ret$2;
        {
          var tmp$ret$1;
          {
            var tmp$ret$0;
            {
              var tmp0_asDynamic = toString_0(thisUpper);
              tmp$ret$0 = tmp0_asDynamic;
            }
            var tmp1_unsafeCast = tmp$ret$0.toLowerCase();
            tmp$ret$1 = tmp1_unsafeCast;
          }
          tmp$ret$2 = tmp$ret$1;
        }
        tmp$ret$3 = charSequenceGet(tmp$ret$2, 0);
      }
      var tmp_0 = new Char_0(tmp$ret$3);
      var tmp$ret$7;
      {
        var tmp$ret$6;
        {
          var tmp$ret$5;
          {
            var tmp$ret$4;
            {
              var tmp2_asDynamic = toString_0(otherUpper);
              tmp$ret$4 = tmp2_asDynamic;
            }
            var tmp3_unsafeCast = tmp$ret$4.toLowerCase();
            tmp$ret$5 = tmp3_unsafeCast;
          }
          tmp$ret$6 = tmp$ret$5;
        }
        tmp$ret$7 = charSequenceGet(tmp$ret$6, 0);
      }
      tmp = equals_1(tmp_0, new Char_0(tmp$ret$7));
    }
    return tmp;
  }
  function titlecase(_this__u8e3s4) {
    return titlecaseImpl(_this__u8e3s4);
  }
  function plus_1(_this__u8e3s4, other) {
    return toString_0(_this__u8e3s4) + other;
  }
  function trimIndent(_this__u8e3s4) {
    return replaceIndent(_this__u8e3s4, '');
  }
  function replaceIndent(_this__u8e3s4, newIndent) {
    var lines_0 = lines(_this__u8e3s4);
    var tmp$ret$3;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_filterTo = ArrayList_init_$Create$();
          var tmp0_iterator = lines_0.h();
          while (tmp0_iterator.n()) {
            var element = tmp0_iterator.o();
            if (isNotBlank(element)) {
              tmp0_filterTo.b(element);
            }
          }
          tmp$ret$0 = tmp0_filterTo;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      var tmp0_map = tmp$ret$1;
      var tmp$ret$2;
      {
        var tmp0_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map, 10));
        var tmp0_iterator_0 = tmp0_map.h();
        while (tmp0_iterator_0.n()) {
          var item = tmp0_iterator_0.o();
          tmp0_mapTo.b(indentWidth(item));
        }
        tmp$ret$2 = tmp0_mapTo;
      }
      tmp$ret$3 = tmp$ret$2;
    }
    var tmp0_elvis_lhs = minOrNull(tmp$ret$3);
    var minCommonIndent = tmp0_elvis_lhs == null ? 0 : tmp0_elvis_lhs;
    var tmp$ret$10;
    {
      var tmp1_reindent = _this__u8e3s4.length + imul(newIndent.length, lines_0.m()) | 0;
      var tmp2_reindent = getIndentFunction(newIndent);
      var lastIndex = get_lastIndex_3(lines_0);
      var tmp$ret$9;
      {
        var tmp$ret$8;
        {
          var tmp1_mapIndexedNotNullTo = ArrayList_init_$Create$();
          {
            var index = 0;
            var tmp0_iterator_1 = lines_0.h();
            while (tmp0_iterator_1.n()) {
              var item_0 = tmp0_iterator_1.o();
              {
                var tmp1 = index;
                index = tmp1 + 1 | 0;
                var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
                var tmp$ret$6;
                {
                  var tmp;
                  if ((tmp0__anonymous__q1qw7t === 0 ? true : tmp0__anonymous__q1qw7t === lastIndex) ? isBlank(item_0) : false) {
                    tmp = null;
                  } else {
                    var tmp$ret$4;
                    {
                      tmp$ret$4 = drop(item_0, minCommonIndent);
                    }
                    var tmp0_safe_receiver = tmp$ret$4;
                    var tmp_0;
                    if (tmp0_safe_receiver == null) {
                      tmp_0 = null;
                    } else {
                      var tmp$ret$5;
                      {
                        {
                        }
                        tmp$ret$5 = tmp2_reindent(tmp0_safe_receiver);
                      }
                      tmp_0 = tmp$ret$5;
                    }
                    var tmp1_elvis_lhs = tmp_0;
                    tmp = tmp1_elvis_lhs == null ? item_0 : tmp1_elvis_lhs;
                  }
                  tmp$ret$6 = tmp;
                }
                var tmp0_safe_receiver_0 = tmp$ret$6;
                if (tmp0_safe_receiver_0 == null)
                  null;
                else {
                  var tmp$ret$7;
                  {
                    {
                    }
                    tmp1_mapIndexedNotNullTo.b(tmp0_safe_receiver_0);
                    tmp$ret$7 = Unit_getInstance();
                  }
                }
              }
            }
          }
          tmp$ret$8 = tmp1_mapIndexedNotNullTo;
        }
        tmp$ret$9 = tmp$ret$8;
      }
      var tmp_1 = tmp$ret$9;
      var tmp_2 = StringBuilder_init_$Create$(tmp1_reindent);
      tmp$ret$10 = joinTo$default(tmp_1, tmp_2, '\n', null, null, 0, null, null, 124, null).toString();
    }
    return tmp$ret$10;
  }
  function indentWidth(_this__u8e3s4) {
    var tmp$ret$3;
    {
      var tmp$ret$1;
      $l$block: {
        var inductionVariable = 0;
        var last = charSequenceLength(_this__u8e3s4) - 1 | 0;
        if (inductionVariable <= last)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var tmp$ret$0;
            {
              var tmp0__anonymous__q1qw7t = charSequenceGet(_this__u8e3s4, index);
              tmp$ret$0 = !isWhitespace(tmp0__anonymous__q1qw7t);
            }
            if (tmp$ret$0) {
              tmp$ret$1 = index;
              break $l$block;
            }
          }
           while (inductionVariable <= last);
        tmp$ret$1 = -1;
      }
      var tmp1_let = tmp$ret$1;
      {
      }
      var tmp$ret$2;
      {
        tmp$ret$2 = tmp1_let === -1 ? _this__u8e3s4.length : tmp1_let;
      }
      tmp$ret$3 = tmp$ret$2;
    }
    return tmp$ret$3;
  }
  function reindent(_this__u8e3s4, resultSizeEstimate, indentAddFunction, indentCutFunction) {
    var lastIndex = get_lastIndex_3(_this__u8e3s4);
    var tmp$ret$4;
    {
      var tmp$ret$3;
      {
        var tmp1_mapIndexedNotNullTo = ArrayList_init_$Create$();
        {
          var index = 0;
          var tmp0_iterator = _this__u8e3s4.h();
          while (tmp0_iterator.n()) {
            var item = tmp0_iterator.o();
            {
              var tmp1 = index;
              index = tmp1 + 1 | 0;
              var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
              var tmp$ret$1;
              {
                var tmp;
                if ((tmp0__anonymous__q1qw7t === 0 ? true : tmp0__anonymous__q1qw7t === lastIndex) ? isBlank(item) : false) {
                  tmp = null;
                } else {
                  var tmp0_safe_receiver = indentCutFunction(item);
                  var tmp_0;
                  if (tmp0_safe_receiver == null) {
                    tmp_0 = null;
                  } else {
                    var tmp$ret$0;
                    {
                      {
                      }
                      tmp$ret$0 = indentAddFunction(tmp0_safe_receiver);
                    }
                    tmp_0 = tmp$ret$0;
                  }
                  var tmp1_elvis_lhs = tmp_0;
                  tmp = tmp1_elvis_lhs == null ? item : tmp1_elvis_lhs;
                }
                tmp$ret$1 = tmp;
              }
              var tmp0_safe_receiver_0 = tmp$ret$1;
              if (tmp0_safe_receiver_0 == null)
                null;
              else {
                var tmp$ret$2;
                {
                  {
                  }
                  tmp1_mapIndexedNotNullTo.b(tmp0_safe_receiver_0);
                  tmp$ret$2 = Unit_getInstance();
                }
              }
            }
          }
        }
        tmp$ret$3 = tmp1_mapIndexedNotNullTo;
      }
      tmp$ret$4 = tmp$ret$3;
    }
    var tmp_1 = tmp$ret$4;
    var tmp_2 = StringBuilder_init_$Create$(resultSizeEstimate);
    return joinTo$default(tmp_1, tmp_2, '\n', null, null, 0, null, null, 124, null).toString();
  }
  function getIndentFunction(indent) {
    var tmp;
    var tmp$ret$0;
    {
      tmp$ret$0 = charSequenceLength(indent) === 0;
    }
    if (tmp$ret$0) {
      tmp = getIndentFunction$lambda();
    } else {
      tmp = getIndentFunction$lambda_0(indent);
    }
    return tmp;
  }
  function prependIndent(_this__u8e3s4, indent) {
    var tmp = lineSequence(_this__u8e3s4);
    var tmp_0 = map_2(tmp, prependIndent$lambda(indent));
    return joinToString$default_1(tmp_0, '\n', null, null, 0, null, null, 62, null);
  }
  function getIndentFunction$lambda() {
    return function (line) {
      return line;
    };
  }
  function getIndentFunction$lambda_0($indent) {
    return function (line) {
      return $indent + line;
    };
  }
  function prependIndent$lambda($indent) {
    return function (it) {
      var tmp;
      if (isBlank(it)) {
        tmp = it.length < $indent.length ? $indent : it;
      } else {
        tmp = $indent + it;
      }
      return tmp;
    };
  }
  function buildString(builderAction) {
    {
    }
    var tmp$ret$0;
    {
      var tmp0_apply = StringBuilder_init_$Create$_0();
      {
      }
      builderAction(tmp0_apply);
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0.toString();
  }
  function appendLine(_this__u8e3s4, value) {
    var tmp$ret$0;
    {
      var tmp0_appendLine = _this__u8e3s4.ga(value);
      tmp$ret$0 = tmp0_appendLine.ea(_Char___init__impl__6a9atx(10));
    }
    return tmp$ret$0;
  }
  function appendLine_0(_this__u8e3s4) {
    return _this__u8e3s4.ea(_Char___init__impl__6a9atx(10));
  }
  function toIntOrNull(_this__u8e3s4) {
    return toIntOrNull_0(_this__u8e3s4, 10);
  }
  function toLongOrNull(_this__u8e3s4) {
    return toLongOrNull_0(_this__u8e3s4, 10);
  }
  function toIntOrNull_0(_this__u8e3s4, radix) {
    checkRadix(radix);
    var length = _this__u8e3s4.length;
    if (length === 0)
      return null;
    var start;
    var isNegative;
    var limit;
    var firstChar = charSequenceGet(_this__u8e3s4, 0);
    if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
      if (length === 1)
        return null;
      start = 1;
      if (equals_1(new Char_0(firstChar), new Char_0(_Char___init__impl__6a9atx(45)))) {
        isNegative = true;
        limit = IntCompanionObject_getInstance().c1_1;
      } else if (equals_1(new Char_0(firstChar), new Char_0(_Char___init__impl__6a9atx(43)))) {
        isNegative = false;
        limit = -IntCompanionObject_getInstance().d1_1 | 0;
      } else
        return null;
    } else {
      start = 0;
      isNegative = false;
      limit = -IntCompanionObject_getInstance().d1_1 | 0;
    }
    var limitForMaxRadix = (-IntCompanionObject_getInstance().d1_1 | 0) / 36 | 0;
    var limitBeforeMul = limitForMaxRadix;
    var result = 0;
    var inductionVariable = start;
    if (inductionVariable < length)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
        if (digit < 0)
          return null;
        if (result < limitBeforeMul) {
          if (limitBeforeMul === limitForMaxRadix) {
            limitBeforeMul = limit / radix | 0;
            if (result < limitBeforeMul) {
              return null;
            }
          } else {
            return null;
          }
        }
        result = imul(result, radix);
        if (result < (limit + digit | 0))
          return null;
        result = result - digit | 0;
      }
       while (inductionVariable < length);
    return isNegative ? result : -result | 0;
  }
  function toLongOrNull_0(_this__u8e3s4, radix) {
    checkRadix(radix);
    var length = _this__u8e3s4.length;
    if (length === 0)
      return null;
    var start;
    var isNegative;
    var limit;
    var firstChar = charSequenceGet(_this__u8e3s4, 0);
    if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
      if (length === 1)
        return null;
      start = 1;
      if (equals_1(new Char_0(firstChar), new Char_0(_Char___init__impl__6a9atx(45)))) {
        isNegative = true;
        Companion_getInstance_14();
        limit = new Long(0, -2147483648);
      } else if (equals_1(new Char_0(firstChar), new Char_0(_Char___init__impl__6a9atx(43)))) {
        isNegative = false;
        Companion_getInstance_14();
        limit = (new Long(-1, 2147483647)).ha();
      } else
        return null;
    } else {
      start = 0;
      isNegative = false;
      Companion_getInstance_14();
      limit = (new Long(-1, 2147483647)).ha();
    }
    var tmp$ret$0;
    {
      Companion_getInstance_14();
      var tmp0_div = (new Long(-1, 2147483647)).ha();
      tmp$ret$0 = tmp0_div.ia(new Long(36, 0));
    }
    var limitForMaxRadix = tmp$ret$0;
    var limitBeforeMul = limitForMaxRadix;
    var result = new Long(0, 0);
    var inductionVariable = start;
    if (inductionVariable < length)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
        if (digit < 0)
          return null;
        if (result.m1(limitBeforeMul) < 0) {
          if (limitBeforeMul.equals(limitForMaxRadix)) {
            var tmp$ret$1;
            {
              tmp$ret$1 = limit.ia(toLong_0(radix));
            }
            limitBeforeMul = tmp$ret$1;
            if (result.m1(limitBeforeMul) < 0) {
              return null;
            }
          } else {
            return null;
          }
        }
        var tmp$ret$2;
        {
          var tmp1_times = result;
          tmp$ret$2 = tmp1_times.ja(toLong_0(radix));
        }
        result = tmp$ret$2;
        var tmp = result;
        var tmp$ret$3;
        {
          tmp$ret$3 = limit.ka(toLong_0(digit));
        }
        if (tmp.m1(tmp$ret$3) < 0)
          return null;
        var tmp$ret$4;
        {
          var tmp2_minus = result;
          tmp$ret$4 = tmp2_minus.la(toLong_0(digit));
        }
        result = tmp$ret$4;
      }
       while (inductionVariable < length);
    return isNegative ? result : result.ha();
  }
  function numberFormatError(input) {
    throw NumberFormatException_init_$Create$("Invalid number format: '" + input + "'");
  }
  function isEmpty_2(_this__u8e3s4) {
    return charSequenceLength(_this__u8e3s4) === 0;
  }
  function isNotBlank(_this__u8e3s4) {
    return !isBlank(_this__u8e3s4);
  }
  function removePrefix(_this__u8e3s4, prefix) {
    if (startsWith$default_0(_this__u8e3s4, prefix, false, 2, null)) {
      var tmp$ret$1;
      {
        var tmp0_substring = charSequenceLength(prefix);
        var tmp$ret$0;
        {
          tmp$ret$0 = _this__u8e3s4;
        }
        tmp$ret$1 = tmp$ret$0.substring(tmp0_substring);
      }
      return tmp$ret$1;
    }
    return _this__u8e3s4;
  }
  function padStart(_this__u8e3s4, length, padChar) {
    return toString_2(padStart_0(isCharSequence(_this__u8e3s4) ? _this__u8e3s4 : THROW_CCE(), length, padChar));
  }
  function isNotEmpty_1(_this__u8e3s4) {
    return charSequenceLength(_this__u8e3s4) > 0;
  }
  function padEnd(_this__u8e3s4, length, padChar) {
    return toString_2(padEnd_0(isCharSequence(_this__u8e3s4) ? _this__u8e3s4 : THROW_CCE(), length, padChar));
  }
  function iterator_2(_this__u8e3s4) {
    return new iterator$1(_this__u8e3s4);
  }
  function startsWith(_this__u8e3s4, char, ignoreCase) {
    return charSequenceLength(_this__u8e3s4) > 0 ? equals(charSequenceGet(_this__u8e3s4, 0), char, ignoreCase) : false;
  }
  function startsWith$default(_this__u8e3s4, char, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    return startsWith(_this__u8e3s4, char, ignoreCase);
  }
  function contains_4(_this__u8e3s4, char, ignoreCase) {
    return indexOf$default(_this__u8e3s4, char, 0, ignoreCase, 2, null) >= 0;
  }
  function contains$default(_this__u8e3s4, char, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    return contains_4(_this__u8e3s4, char, ignoreCase);
  }
  function indexOf_3(_this__u8e3s4, char, startIndex, ignoreCase) {
    var tmp;
    var tmp_0;
    if (ignoreCase) {
      tmp_0 = true;
    } else {
      tmp_0 = !(typeof _this__u8e3s4 === 'string');
    }
    if (tmp_0) {
      var tmp$ret$0;
      {
        tmp$ret$0 = charArrayOf_0([char]);
      }
      tmp = indexOfAny(_this__u8e3s4, tmp$ret$0, startIndex, ignoreCase);
    } else {
      var tmp$ret$3;
      {
        var tmp1_nativeIndexOf = _this__u8e3s4;
        var tmp$ret$2;
        {
          var tmp0_nativeIndexOf = toString_0(char);
          var tmp$ret$1;
          {
            tmp$ret$1 = tmp1_nativeIndexOf;
          }
          tmp$ret$2 = tmp$ret$1.indexOf(tmp0_nativeIndexOf, startIndex);
        }
        tmp$ret$3 = tmp$ret$2;
      }
      tmp = tmp$ret$3;
    }
    return tmp;
  }
  function indexOf$default(_this__u8e3s4, char, startIndex, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = 0;
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return indexOf_3(_this__u8e3s4, char, startIndex, ignoreCase);
  }
  function get_lastIndex_4(_this__u8e3s4) {
    return charSequenceLength(_this__u8e3s4) - 1 | 0;
  }
  function startsWith_0(_this__u8e3s4, prefix, ignoreCase) {
    var tmp;
    var tmp_0;
    if (!ignoreCase) {
      tmp_0 = typeof _this__u8e3s4 === 'string';
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = typeof prefix === 'string';
    } else {
      tmp = false;
    }
    if (tmp) {
      return startsWith$default_1(_this__u8e3s4, prefix, false, 2, null);
    } else {
      return regionMatchesImpl(_this__u8e3s4, 0, prefix, 0, charSequenceLength(prefix), ignoreCase);
    }
  }
  function startsWith$default_0(_this__u8e3s4, prefix, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    return startsWith_0(_this__u8e3s4, prefix, ignoreCase);
  }
  function padStart_0(_this__u8e3s4, length, padChar) {
    if (length < 0)
      throw IllegalArgumentException_init_$Create$_0('Desired length ' + length + ' is less than zero.');
    if (length <= charSequenceLength(_this__u8e3s4))
      return charSequenceSubSequence(_this__u8e3s4, 0, charSequenceLength(_this__u8e3s4));
    var sb = StringBuilder_init_$Create$(length);
    var inductionVariable = 1;
    var last = length - charSequenceLength(_this__u8e3s4) | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        sb.ea(padChar);
      }
       while (!(i === last));
    sb.c(_this__u8e3s4);
    return sb;
  }
  function padEnd_0(_this__u8e3s4, length, padChar) {
    if (length < 0)
      throw IllegalArgumentException_init_$Create$_0('Desired length ' + length + ' is less than zero.');
    if (length <= charSequenceLength(_this__u8e3s4))
      return charSequenceSubSequence(_this__u8e3s4, 0, charSequenceLength(_this__u8e3s4));
    var sb = StringBuilder_init_$Create$(length);
    sb.c(_this__u8e3s4);
    var inductionVariable = 1;
    var last = length - charSequenceLength(_this__u8e3s4) | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        sb.ea(padChar);
      }
       while (!(i === last));
    return sb;
  }
  function indexOfAny(_this__u8e3s4, chars, startIndex, ignoreCase) {
    var tmp;
    if (!ignoreCase ? chars.length === 1 : false) {
      tmp = typeof _this__u8e3s4 === 'string';
    } else {
      tmp = false;
    }
    if (tmp) {
      var char = single(chars);
      var tmp$ret$2;
      {
        var tmp1_nativeIndexOf = _this__u8e3s4;
        var tmp$ret$1;
        {
          var tmp0_nativeIndexOf = toString_0(char);
          var tmp$ret$0;
          {
            tmp$ret$0 = tmp1_nativeIndexOf;
          }
          tmp$ret$1 = tmp$ret$0.indexOf(tmp0_nativeIndexOf, startIndex);
        }
        tmp$ret$2 = tmp$ret$1;
      }
      return tmp$ret$2;
    }
    var inductionVariable = coerceAtLeast(startIndex, 0);
    var last = get_lastIndex_4(_this__u8e3s4);
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var charAtIndex = charSequenceGet(_this__u8e3s4, index);
        var tmp$ret$4;
        $l$block: {
          var indexedObject = chars;
          var inductionVariable_0 = 0;
          var last_0 = indexedObject.length;
          while (inductionVariable_0 < last_0) {
            var element = indexedObject[inductionVariable_0];
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var tmp$ret$3;
            {
              tmp$ret$3 = equals(element, charAtIndex, ignoreCase);
            }
            if (tmp$ret$3) {
              tmp$ret$4 = true;
              break $l$block;
            }
          }
          tmp$ret$4 = false;
        }
        if (tmp$ret$4)
          return index;
      }
       while (!(index === last));
    return -1;
  }
  function regionMatchesImpl(_this__u8e3s4, thisOffset, other, otherOffset, length, ignoreCase) {
    if (((otherOffset < 0 ? true : thisOffset < 0) ? true : thisOffset > (charSequenceLength(_this__u8e3s4) - length | 0)) ? true : otherOffset > (charSequenceLength(other) - length | 0)) {
      return false;
    }
    var inductionVariable = 0;
    if (inductionVariable < length)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!equals(charSequenceGet(_this__u8e3s4, thisOffset + index | 0), charSequenceGet(other, otherOffset + index | 0), ignoreCase))
          return false;
      }
       while (inductionVariable < length);
    return true;
  }
  function get_indices_3(_this__u8e3s4) {
    return numberRangeToNumber(0, charSequenceLength(_this__u8e3s4) - 1 | 0);
  }
  function lines(_this__u8e3s4) {
    return toList_1(lineSequence(_this__u8e3s4));
  }
  function lineSequence(_this__u8e3s4) {
    return splitToSequence$default(_this__u8e3s4, ['\r\n', '\n', '\r'], false, 0, 6, null);
  }
  function splitToSequence(_this__u8e3s4, delimiters, ignoreCase, limit) {
    var tmp = rangesDelimitedBy$default(_this__u8e3s4, delimiters, 0, ignoreCase, limit, 2, null);
    return map_2(tmp, splitToSequence$lambda(_this__u8e3s4));
  }
  function splitToSequence$default(_this__u8e3s4, delimiters, ignoreCase, limit, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    if (!(($mask0 & 4) === 0))
      limit = 0;
    return splitToSequence(_this__u8e3s4, delimiters, ignoreCase, limit);
  }
  function substring(_this__u8e3s4, range) {
    return toString_2(charSequenceSubSequence(_this__u8e3s4, range.h9(), range.j9() + 1 | 0));
  }
  function rangesDelimitedBy(_this__u8e3s4, delimiters, startIndex, ignoreCase, limit) {
    requireNonNegativeLimit(limit);
    var delimitersList = asList(delimiters);
    return new DelimitedRangesSequence(_this__u8e3s4, startIndex, limit, rangesDelimitedBy$lambda(delimitersList, ignoreCase));
  }
  function rangesDelimitedBy$default(_this__u8e3s4, delimiters, startIndex, ignoreCase, limit, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = 0;
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    if (!(($mask0 & 8) === 0))
      limit = 0;
    return rangesDelimitedBy(_this__u8e3s4, delimiters, startIndex, ignoreCase, limit);
  }
  function requireNonNegativeLimit(limit) {
    var tmp0_require = limit >= 0;
    {
    }
    var tmp;
    if (!tmp0_require) {
      var tmp$ret$0;
      {
        tmp$ret$0 = 'Limit must be non-negative, but was ' + limit;
      }
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$_0(toString_2(message));
    }
    return tmp;
  }
  function calcNext_1($this) {
    if ($this.oa_1 < 0) {
      $this.ma_1 = 0;
      $this.pa_1 = null;
    } else {
      var tmp;
      var tmp_0;
      if ($this.ra_1.ua_1 > 0) {
        var tmp0_this = $this;
        tmp0_this.qa_1 = tmp0_this.qa_1 + 1 | 0;
        tmp_0 = tmp0_this.qa_1 >= $this.ra_1.ua_1;
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        tmp = true;
      } else {
        tmp = $this.oa_1 > charSequenceLength($this.ra_1.sa_1);
      }
      if (tmp) {
        $this.pa_1 = numberRangeToNumber($this.na_1, get_lastIndex_4($this.ra_1.sa_1));
        $this.oa_1 = -1;
      } else {
        var match = $this.ra_1.va_1($this.ra_1.sa_1, $this.oa_1);
        if (match == null) {
          $this.pa_1 = numberRangeToNumber($this.na_1, get_lastIndex_4($this.ra_1.sa_1));
          $this.oa_1 = -1;
        } else {
          var tmp1_container = match;
          var index = tmp1_container.z3();
          var length = tmp1_container.a4();
          $this.pa_1 = until($this.na_1, index);
          $this.na_1 = index + length | 0;
          $this.oa_1 = $this.na_1 + (length === 0 ? 1 : 0) | 0;
        }
      }
      $this.ma_1 = 1;
    }
  }
  function DelimitedRangesSequence$iterator$1(this$0) {
    this.ra_1 = this$0;
    this.ma_1 = -1;
    this.na_1 = coerceIn_0(this$0.ta_1, 0, charSequenceLength(this$0.sa_1));
    this.oa_1 = this.na_1;
    this.pa_1 = null;
    this.qa_1 = 0;
  }
  DelimitedRangesSequence$iterator$1.prototype.o = function () {
    if (this.ma_1 === -1)
      calcNext_1(this);
    if (this.ma_1 === 0)
      throw NoSuchElementException_init_$Create$();
    var tmp = this.pa_1;
    var result = tmp instanceof IntRange ? tmp : THROW_CCE();
    this.pa_1 = null;
    this.ma_1 = -1;
    return result;
  };
  DelimitedRangesSequence$iterator$1.prototype.n = function () {
    if (this.ma_1 === -1)
      calcNext_1(this);
    return this.ma_1 === 1;
  };
  DelimitedRangesSequence$iterator$1.$metadata$ = classMeta(undefined, [Iterator]);
  function DelimitedRangesSequence(input, startIndex, limit, getNextMatch) {
    this.sa_1 = input;
    this.ta_1 = startIndex;
    this.ua_1 = limit;
    this.va_1 = getNextMatch;
  }
  DelimitedRangesSequence.prototype.h = function () {
    return new DelimitedRangesSequence$iterator$1(this);
  };
  DelimitedRangesSequence.$metadata$ = classMeta('DelimitedRangesSequence', [Sequence]);
  function findAnyOf(_this__u8e3s4, strings, startIndex, ignoreCase, last) {
    if (!ignoreCase ? strings.m() === 1 : false) {
      var string = single_0(strings);
      var tmp;
      if (!last) {
        tmp = indexOf$default_0(_this__u8e3s4, string, startIndex, false, 4, null);
      } else {
        tmp = lastIndexOf$default(_this__u8e3s4, string, startIndex, false, 4, null);
      }
      var index = tmp;
      return index < 0 ? null : to(index, string);
    }
    var indices = !last ? numberRangeToNumber(coerceAtLeast(startIndex, 0), charSequenceLength(_this__u8e3s4)) : downTo(coerceAtMost(startIndex, get_lastIndex_4(_this__u8e3s4)), 0);
    if (typeof _this__u8e3s4 === 'string') {
      var inductionVariable = indices.g1_1;
      var last_0 = indices.h1_1;
      var step = indices.i1_1;
      if ((step > 0 ? inductionVariable <= last_0 : false) ? true : step < 0 ? last_0 <= inductionVariable : false)
        do {
          var index_0 = inductionVariable;
          inductionVariable = inductionVariable + step | 0;
          var tmp$ret$1;
          $l$block: {
            var tmp0_iterator = strings.h();
            while (tmp0_iterator.n()) {
              var element = tmp0_iterator.o();
              var tmp$ret$0;
              {
                tmp$ret$0 = regionMatches(element, 0, _this__u8e3s4, index_0, element.length, ignoreCase);
              }
              if (tmp$ret$0) {
                tmp$ret$1 = element;
                break $l$block;
              }
            }
            tmp$ret$1 = null;
          }
          var matchingString = tmp$ret$1;
          if (!(matchingString == null))
            return to(index_0, matchingString);
        }
         while (!(index_0 === last_0));
    } else {
      var inductionVariable_0 = indices.g1_1;
      var last_1 = indices.h1_1;
      var step_0 = indices.i1_1;
      if ((step_0 > 0 ? inductionVariable_0 <= last_1 : false) ? true : step_0 < 0 ? last_1 <= inductionVariable_0 : false)
        do {
          var index_1 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + step_0 | 0;
          var tmp$ret$3;
          $l$block_0: {
            var tmp0_iterator_0 = strings.h();
            while (tmp0_iterator_0.n()) {
              var element_0 = tmp0_iterator_0.o();
              var tmp$ret$2;
              {
                tmp$ret$2 = regionMatchesImpl(element_0, 0, _this__u8e3s4, index_1, element_0.length, ignoreCase);
              }
              if (tmp$ret$2) {
                tmp$ret$3 = element_0;
                break $l$block_0;
              }
            }
            tmp$ret$3 = null;
          }
          var matchingString_0 = tmp$ret$3;
          if (!(matchingString_0 == null))
            return to(index_1, matchingString_0);
        }
         while (!(index_1 === last_1));
    }
    return null;
  }
  function indexOf_4(_this__u8e3s4, string, startIndex, ignoreCase) {
    var tmp;
    var tmp_0;
    if (ignoreCase) {
      tmp_0 = true;
    } else {
      tmp_0 = !(typeof _this__u8e3s4 === 'string');
    }
    if (tmp_0) {
      var tmp_1 = charSequenceLength(_this__u8e3s4);
      tmp = indexOf$default_1(_this__u8e3s4, string, startIndex, tmp_1, ignoreCase, false, 16, null);
    } else {
      var tmp$ret$1;
      {
        var tmp0_nativeIndexOf = _this__u8e3s4;
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_nativeIndexOf;
        }
        tmp$ret$1 = tmp$ret$0.indexOf(string, startIndex);
      }
      tmp = tmp$ret$1;
    }
    return tmp;
  }
  function indexOf$default_0(_this__u8e3s4, string, startIndex, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = 0;
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return indexOf_4(_this__u8e3s4, string, startIndex, ignoreCase);
  }
  function lastIndexOf(_this__u8e3s4, string, startIndex, ignoreCase) {
    var tmp;
    var tmp_0;
    if (ignoreCase) {
      tmp_0 = true;
    } else {
      tmp_0 = !(typeof _this__u8e3s4 === 'string');
    }
    if (tmp_0) {
      tmp = indexOf_5(_this__u8e3s4, string, startIndex, 0, ignoreCase, true);
    } else {
      var tmp$ret$1;
      {
        var tmp0_nativeLastIndexOf = _this__u8e3s4;
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_nativeLastIndexOf;
        }
        tmp$ret$1 = tmp$ret$0.lastIndexOf(string, startIndex);
      }
      tmp = tmp$ret$1;
    }
    return tmp;
  }
  function lastIndexOf$default(_this__u8e3s4, string, startIndex, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = get_lastIndex_4(_this__u8e3s4);
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return lastIndexOf(_this__u8e3s4, string, startIndex, ignoreCase);
  }
  function indexOf_5(_this__u8e3s4, other, startIndex, endIndex, ignoreCase, last) {
    var indices = !last ? numberRangeToNumber(coerceAtLeast(startIndex, 0), coerceAtMost(endIndex, charSequenceLength(_this__u8e3s4))) : downTo(coerceAtMost(startIndex, get_lastIndex_4(_this__u8e3s4)), coerceAtLeast(endIndex, 0));
    var tmp;
    if (typeof _this__u8e3s4 === 'string') {
      tmp = typeof other === 'string';
    } else {
      tmp = false;
    }
    if (tmp) {
      var inductionVariable = indices.g1_1;
      var last_0 = indices.h1_1;
      var step = indices.i1_1;
      if ((step > 0 ? inductionVariable <= last_0 : false) ? true : step < 0 ? last_0 <= inductionVariable : false)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + step | 0;
          if (regionMatches(other, 0, _this__u8e3s4, index, charSequenceLength(other), ignoreCase))
            return index;
        }
         while (!(index === last_0));
    } else {
      var inductionVariable_0 = indices.g1_1;
      var last_1 = indices.h1_1;
      var step_0 = indices.i1_1;
      if ((step_0 > 0 ? inductionVariable_0 <= last_1 : false) ? true : step_0 < 0 ? last_1 <= inductionVariable_0 : false)
        do {
          var index_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + step_0 | 0;
          if (regionMatchesImpl(other, 0, _this__u8e3s4, index_0, charSequenceLength(other), ignoreCase))
            return index_0;
        }
         while (!(index_0 === last_1));
    }
    return -1;
  }
  function indexOf$default_1(_this__u8e3s4, other, startIndex, endIndex, ignoreCase, last, $mask0, $handler) {
    if (!(($mask0 & 16) === 0))
      last = false;
    return indexOf_5(_this__u8e3s4, other, startIndex, endIndex, ignoreCase, last);
  }
  function substring_0(_this__u8e3s4, startIndex, endIndex) {
    return toString_2(charSequenceSubSequence(_this__u8e3s4, startIndex, endIndex));
  }
  function substring_1(_this__u8e3s4, range) {
    var tmp$ret$1;
    {
      var tmp0_substring = range.h9();
      var tmp1_substring = range.j9() + 1 | 0;
      var tmp$ret$0;
      {
        tmp$ret$0 = _this__u8e3s4;
      }
      tmp$ret$1 = tmp$ret$0.substring(tmp0_substring, tmp1_substring);
    }
    return tmp$ret$1;
  }
  function matches(_this__u8e3s4, regex) {
    return regex.bb(_this__u8e3s4);
  }
  function replaceFirstChar(_this__u8e3s4, transform) {
    var tmp;
    var tmp$ret$0;
    {
      tmp$ret$0 = charSequenceLength(_this__u8e3s4) > 0;
    }
    if (tmp$ret$0) {
      var tmp_0 = toString_2(transform(new Char_0(charSequenceGet(_this__u8e3s4, 0))));
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          tmp$ret$1 = _this__u8e3s4;
        }
        tmp$ret$2 = tmp$ret$1.substring(1);
      }
      tmp = tmp_0 + tmp$ret$2;
    } else {
      tmp = _this__u8e3s4;
    }
    return tmp;
  }
  function iterator$1($this_iterator) {
    this.db_1 = $this_iterator;
    CharIterator.call(this);
    this.cb_1 = 0;
  }
  iterator$1.prototype.i4 = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this.cb_1;
    tmp0_this.cb_1 = tmp1 + 1 | 0;
    return charSequenceGet(this.db_1, tmp1);
  };
  iterator$1.prototype.n = function () {
    return this.cb_1 < charSequenceLength(this.db_1);
  };
  iterator$1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, CharIterator.prototype);
  function splitToSequence$lambda($this_splitToSequence) {
    return function (it) {
      return substring($this_splitToSequence, it);
    };
  }
  function rangesDelimitedBy$lambda($delimitersList, $ignoreCase) {
    return function ($this$$receiver, currentIndex) {
      var tmp0_safe_receiver = findAnyOf($this$$receiver, $delimitersList, currentIndex, $ignoreCase, false);
      var tmp;
      if (tmp0_safe_receiver == null) {
        tmp = null;
      } else {
        var tmp$ret$1;
        {
          {
          }
          var tmp$ret$0;
          {
            tmp$ret$0 = to(tmp0_safe_receiver.v_1, tmp0_safe_receiver.w_1.length);
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp = tmp$ret$1;
      }
      return tmp;
    };
  }
  function _Duration___init__impl__kdtzql(rawValue) {
    var tmp$ret$0;
    {
      tmp$ret$0 = true;
    }
    if (tmp$ret$0) {
      if (isInNanos(rawValue)) {
        var containsLower = new Long(387905, -1073741824);
        var containsUpper = new Long(-387905, 1073741823);
        var containsArg = _get_value__a43j40(rawValue);
        if (!(containsLower.m1(containsArg) <= 0 ? containsArg.m1(containsUpper) <= 0 : false))
          throw AssertionError_init_$Create$(toString_2(_get_value__a43j40(rawValue)) + ' ns is out of nanoseconds range');
      } else {
        var containsLower_0 = new Long(1, -1073741824);
        var containsUpper_0 = new Long(-1, 1073741823);
        var containsArg_0 = _get_value__a43j40(rawValue);
        if (!(containsLower_0.m1(containsArg_0) <= 0 ? containsArg_0.m1(containsUpper_0) <= 0 : false))
          throw AssertionError_init_$Create$(toString_2(_get_value__a43j40(rawValue)) + ' ms is out of milliseconds range');
        var containsLower_1 = new Long(1108857478, -1074);
        var containsUpper_1 = new Long(-1108857478, 1073);
        var containsArg_1 = _get_value__a43j40(rawValue);
        if (containsLower_1.m1(containsArg_1) <= 0 ? containsArg_1.m1(containsUpper_1) <= 0 : false)
          throw AssertionError_init_$Create$(toString_2(_get_value__a43j40(rawValue)) + ' ms is denormalized');
      }
    }
    return rawValue;
  }
  function _get_rawValue__5zfu4e($this) {
    return $this;
  }
  function _get_value__a43j40($this) {
    return _get_rawValue__5zfu4e($this).eb(1);
  }
  function isInNanos($this) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _get_rawValue__5zfu4e($this).fb() & 1;
    }
    return tmp$ret$0 === 0;
  }
  function isInMillis($this) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _get_rawValue__5zfu4e($this).fb() & 1;
    }
    return tmp$ret$0 === 1;
  }
  function _get_storageUnit__szjgha($this) {
    return isInNanos($this) ? DurationUnit_NANOSECONDS_getInstance() : DurationUnit_MILLISECONDS_getInstance();
  }
  function Companion_7() {
    Companion_instance_7 = this;
    this.gb_1 = _Duration___init__impl__kdtzql(new Long(0, 0));
    this.hb_1 = durationOfMillis(new Long(-1, 1073741823));
    this.ib_1 = durationOfMillis(new Long(1, -1073741824));
  }
  Companion_7.prototype.jb = function (_this__u8e3s4) {
    return toDuration_0(_this__u8e3s4, DurationUnit_MILLISECONDS_getInstance());
  };
  Companion_7.prototype.kb = function (value) {
    var tmp;
    try {
      tmp = parseDuration(value, true);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof IllegalArgumentException) {
        throw IllegalArgumentException_init_$Create$_1("Invalid ISO duration string format: '" + value + "'.", $p);
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  Companion_7.$metadata$ = objectMeta('Companion');
  var Companion_instance_7;
  function Companion_getInstance_7() {
    if (Companion_instance_7 == null)
      new Companion_7();
    return Companion_instance_7;
  }
  function Duration__unaryMinus_impl_x2k1y0($this) {
    var tmp = _get_value__a43j40($this).ha();
    var tmp$ret$0;
    {
      tmp$ret$0 = _get_rawValue__5zfu4e($this).fb() & 1;
    }
    return durationOf(tmp, tmp$ret$0);
  }
  function Duration__plus_impl_yu9v8f($this, other) {
    if (Duration__isInfinite_impl_tsn9y3($this)) {
      if (Duration__isFinite_impl_rzjsps(other) ? true : _get_rawValue__5zfu4e($this).lb(_get_rawValue__5zfu4e(other)).m1(new Long(0, 0)) >= 0)
        return $this;
      else
        throw IllegalArgumentException_init_$Create$_0('Summing infinite durations of different signs yields an undefined result.');
    } else if (Duration__isInfinite_impl_tsn9y3(other))
      return other;
    var tmp;
    var tmp$ret$0;
    {
      tmp$ret$0 = _get_rawValue__5zfu4e($this).fb() & 1;
    }
    var tmp_0 = tmp$ret$0;
    var tmp$ret$1;
    {
      tmp$ret$1 = _get_rawValue__5zfu4e(other).fb() & 1;
    }
    if (tmp_0 === tmp$ret$1) {
      var result = _get_value__a43j40($this).ka(_get_value__a43j40(other));
      tmp = isInNanos($this) ? durationOfNanosNormalized(result) : durationOfMillisNormalized(result);
    } else {
      if (isInMillis($this)) {
        tmp = addValuesMixedRanges($this, _get_value__a43j40($this), _get_value__a43j40(other));
      } else {
        tmp = addValuesMixedRanges($this, _get_value__a43j40(other), _get_value__a43j40($this));
      }
    }
    return tmp;
  }
  function addValuesMixedRanges($this, thisMillis, otherNanos) {
    var otherMillis = nanosToMillis(otherNanos);
    var resultMillis = thisMillis.ka(otherMillis);
    var tmp;
    var containsLower = new Long(1108857478, -1074);
    if (resultMillis.m1(new Long(-1108857478, 1073)) <= 0 ? containsLower.m1(resultMillis) <= 0 : false) {
      var otherNanoRemainder = otherNanos.la(millisToNanos(otherMillis));
      tmp = durationOfNanos(millisToNanos(resultMillis).ka(otherNanoRemainder));
    } else {
      tmp = durationOfMillis(coerceIn(resultMillis, new Long(1, -1073741824), new Long(-1, 1073741823)));
    }
    return tmp;
  }
  function Duration__isNegative_impl_pbysfa($this) {
    return _get_rawValue__5zfu4e($this).m1(new Long(0, 0)) < 0;
  }
  function Duration__isInfinite_impl_tsn9y3($this) {
    return _get_rawValue__5zfu4e($this).equals(_get_rawValue__5zfu4e(Companion_getInstance_7().hb_1)) ? true : _get_rawValue__5zfu4e($this).equals(_get_rawValue__5zfu4e(Companion_getInstance_7().ib_1));
  }
  function Duration__isFinite_impl_rzjsps($this) {
    return !Duration__isInfinite_impl_tsn9y3($this);
  }
  function _Duration___get_absoluteValue__impl__vr7i6w($this) {
    return Duration__isNegative_impl_pbysfa($this) ? Duration__unaryMinus_impl_x2k1y0($this) : $this;
  }
  function Duration__compareTo_impl_pchp0f($this, other) {
    var compareBits = _get_rawValue__5zfu4e($this).lb(_get_rawValue__5zfu4e(other));
    if (compareBits.m1(new Long(0, 0)) < 0 ? true : (compareBits.fb() & 1) === 0)
      return _get_rawValue__5zfu4e($this).m1(_get_rawValue__5zfu4e(other));
    var tmp$ret$0;
    {
      tmp$ret$0 = _get_rawValue__5zfu4e($this).fb() & 1;
    }
    var tmp = tmp$ret$0;
    var tmp$ret$1;
    {
      tmp$ret$1 = _get_rawValue__5zfu4e(other).fb() & 1;
    }
    var r = tmp - tmp$ret$1 | 0;
    return Duration__isNegative_impl_pbysfa($this) ? -r | 0 : r;
  }
  function Duration__compareTo_impl_pchp0f_0($this, other) {
    var tmp = $this.mb_1;
    return Duration__compareTo_impl_pchp0f(tmp, other instanceof Duration ? other.mb_1 : THROW_CCE());
  }
  function Duration__toComponents_impl_rvki3c($this, action) {
    {
    }
    return action(_Duration___get_inWholeDays__impl__7bvpxz($this), _Duration___get_hoursComponent__impl__7hllxa($this), _Duration___get_minutesComponent__impl__ctvd8u($this), _Duration___get_secondsComponent__impl__if34a6($this), _Duration___get_nanosecondsComponent__impl__nh19kq($this));
  }
  function _Duration___get_hoursComponent__impl__7hllxa($this) {
    var tmp;
    if (Duration__isInfinite_impl_tsn9y3($this)) {
      tmp = 0;
    } else {
      var tmp$ret$0;
      {
        var tmp0_rem = _Duration___get_inWholeHours__impl__kb9f3j($this);
        tmp$ret$0 = tmp0_rem.nb(new Long(24, 0));
      }
      tmp = tmp$ret$0.fb();
    }
    return tmp;
  }
  function _Duration___get_minutesComponent__impl__ctvd8u($this) {
    var tmp;
    if (Duration__isInfinite_impl_tsn9y3($this)) {
      tmp = 0;
    } else {
      var tmp$ret$0;
      {
        var tmp0_rem = _Duration___get_inWholeMinutes__impl__dognoh($this);
        tmp$ret$0 = tmp0_rem.nb(new Long(60, 0));
      }
      tmp = tmp$ret$0.fb();
    }
    return tmp;
  }
  function _Duration___get_secondsComponent__impl__if34a6($this) {
    var tmp;
    if (Duration__isInfinite_impl_tsn9y3($this)) {
      tmp = 0;
    } else {
      var tmp$ret$0;
      {
        var tmp0_rem = _Duration___get_inWholeSeconds__impl__hpy7b3($this);
        tmp$ret$0 = tmp0_rem.nb(new Long(60, 0));
      }
      tmp = tmp$ret$0.fb();
    }
    return tmp;
  }
  function _Duration___get_nanosecondsComponent__impl__nh19kq($this) {
    var tmp;
    if (Duration__isInfinite_impl_tsn9y3($this)) {
      tmp = 0;
    } else if (isInMillis($this)) {
      var tmp$ret$0;
      {
        var tmp0_rem = _get_value__a43j40($this);
        tmp$ret$0 = tmp0_rem.nb(new Long(1000, 0));
      }
      tmp = millisToNanos(tmp$ret$0).fb();
    } else {
      var tmp$ret$1;
      {
        var tmp1_rem = _get_value__a43j40($this);
        tmp$ret$1 = tmp1_rem.nb(new Long(1000000000, 0));
      }
      tmp = tmp$ret$1.fb();
    }
    return tmp;
  }
  function Duration__toLong_impl_shr43i($this, unit) {
    var tmp0_subject = _get_rawValue__5zfu4e($this);
    var tmp;
    if (tmp0_subject.equals(_get_rawValue__5zfu4e(Companion_getInstance_7().hb_1))) {
      Companion_getInstance_14();
      tmp = new Long(-1, 2147483647);
    } else if (tmp0_subject.equals(_get_rawValue__5zfu4e(Companion_getInstance_7().ib_1))) {
      Companion_getInstance_14();
      tmp = new Long(0, -2147483648);
    } else {
      tmp = convertDurationUnit_0(_get_value__a43j40($this), _get_storageUnit__szjgha($this), unit);
    }
    return tmp;
  }
  function _Duration___get_inWholeDays__impl__7bvpxz($this) {
    return Duration__toLong_impl_shr43i($this, DurationUnit_DAYS_getInstance());
  }
  function _Duration___get_inWholeHours__impl__kb9f3j($this) {
    return Duration__toLong_impl_shr43i($this, DurationUnit_HOURS_getInstance());
  }
  function _Duration___get_inWholeMinutes__impl__dognoh($this) {
    return Duration__toLong_impl_shr43i($this, DurationUnit_MINUTES_getInstance());
  }
  function _Duration___get_inWholeSeconds__impl__hpy7b3($this) {
    return Duration__toLong_impl_shr43i($this, DurationUnit_SECONDS_getInstance());
  }
  function Duration__toString_impl_8d916b($this) {
    var tmp0_subject = _get_rawValue__5zfu4e($this);
    var tmp;
    if (tmp0_subject.equals(new Long(0, 0))) {
      tmp = '0s';
    } else if (tmp0_subject.equals(_get_rawValue__5zfu4e(Companion_getInstance_7().hb_1))) {
      tmp = 'Infinity';
    } else if (tmp0_subject.equals(_get_rawValue__5zfu4e(Companion_getInstance_7().ib_1))) {
      tmp = '-Infinity';
    } else {
      var isNegative = Duration__isNegative_impl_pbysfa($this);
      var tmp$ret$2;
      {
        {
        }
        var tmp$ret$1;
        {
          var tmp0_apply = StringBuilder_init_$Create$_0();
          {
          }
          {
            if (isNegative) {
              tmp0_apply.ea(_Char___init__impl__6a9atx(45));
            }
            var tmp$ret$0;
            {
              var tmp0_toComponents = _Duration___get_absoluteValue__impl__vr7i6w($this);
              {
              }
              var tmp1__anonymous__uwfjfc = _Duration___get_inWholeDays__impl__7bvpxz(tmp0_toComponents);
              var tmp2__anonymous__z9zvc9 = _Duration___get_hoursComponent__impl__7hllxa(tmp0_toComponents);
              var tmp3__anonymous__ufb84q = _Duration___get_minutesComponent__impl__ctvd8u(tmp0_toComponents);
              var tmp4__anonymous__pkmkx7 = _Duration___get_secondsComponent__impl__if34a6(tmp0_toComponents);
              var tmp5__anonymous__kpxxpo = _Duration___get_nanosecondsComponent__impl__nh19kq(tmp0_toComponents);
              var hasDays = !tmp1__anonymous__uwfjfc.equals(new Long(0, 0));
              var hasHours = !(tmp2__anonymous__z9zvc9 === 0);
              var hasMinutes = !(tmp3__anonymous__ufb84q === 0);
              var hasSeconds = !(tmp4__anonymous__pkmkx7 === 0) ? true : !(tmp5__anonymous__kpxxpo === 0);
              var components = 0;
              if (hasDays) {
                tmp0_apply.ob(tmp1__anonymous__uwfjfc).ea(_Char___init__impl__6a9atx(100));
                var tmp0 = components;
                components = tmp0 + 1 | 0;
              }
              if (hasHours ? true : hasDays ? hasMinutes ? true : hasSeconds : false) {
                var tmp1 = components;
                components = tmp1 + 1 | 0;
                if (tmp1 > 0) {
                  tmp0_apply.ea(_Char___init__impl__6a9atx(32));
                }
                tmp0_apply.ob(tmp2__anonymous__z9zvc9).ea(_Char___init__impl__6a9atx(104));
              }
              if (hasMinutes ? true : hasSeconds ? hasHours ? true : hasDays : false) {
                var tmp2 = components;
                components = tmp2 + 1 | 0;
                if (tmp2 > 0) {
                  tmp0_apply.ea(_Char___init__impl__6a9atx(32));
                }
                tmp0_apply.ob(tmp3__anonymous__ufb84q).ea(_Char___init__impl__6a9atx(109));
              }
              if (hasSeconds) {
                var tmp3 = components;
                components = tmp3 + 1 | 0;
                if (tmp3 > 0) {
                  tmp0_apply.ea(_Char___init__impl__6a9atx(32));
                }
                if (((!(tmp4__anonymous__pkmkx7 === 0) ? true : hasDays) ? true : hasHours) ? true : hasMinutes)
                  appendFractional(tmp0_apply, $this, tmp4__anonymous__pkmkx7, tmp5__anonymous__kpxxpo, 9, 's', false);
                else if (tmp5__anonymous__kpxxpo >= 1000000)
                  appendFractional(tmp0_apply, $this, tmp5__anonymous__kpxxpo / 1000000 | 0, tmp5__anonymous__kpxxpo % 1000000 | 0, 6, 'ms', false);
                else if (tmp5__anonymous__kpxxpo >= 1000)
                  appendFractional(tmp0_apply, $this, tmp5__anonymous__kpxxpo / 1000 | 0, tmp5__anonymous__kpxxpo % 1000 | 0, 3, 'us', false);
                else {
                  tmp0_apply.ob(tmp5__anonymous__kpxxpo).ga('ns');
                }
              }
              var tmp_0;
              if (isNegative ? components > 1 : false) {
                tmp0_apply.pb(1, _Char___init__impl__6a9atx(40)).ea(_Char___init__impl__6a9atx(41));
                tmp_0 = Unit_getInstance();
              }
              tmp$ret$0 = tmp_0;
            }
          }
          tmp$ret$1 = tmp0_apply;
        }
        tmp$ret$2 = tmp$ret$1.toString();
      }
      tmp = tmp$ret$2;
    }
    return tmp;
  }
  function appendFractional(_this__u8e3s4, $this, whole, fractional, fractionalSize, unit, isoZeroes) {
    _this__u8e3s4.ob(whole);
    if (!(fractional === 0)) {
      _this__u8e3s4.ea(_Char___init__impl__6a9atx(46));
      var fracString = padStart(fractional.toString(), fractionalSize, _Char___init__impl__6a9atx(48));
      var tmp$ret$1;
      $l$block: {
        var inductionVariable = charSequenceLength(fracString) - 1 | 0;
        if (0 <= inductionVariable)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + -1 | 0;
            var tmp$ret$0;
            {
              var tmp0__anonymous__q1qw7t = charSequenceGet(fracString, index);
              tmp$ret$0 = !equals_1(new Char_0(tmp0__anonymous__q1qw7t), new Char_0(_Char___init__impl__6a9atx(48)));
            }
            if (tmp$ret$0) {
              tmp$ret$1 = index;
              break $l$block;
            }
          }
           while (0 <= inductionVariable);
        tmp$ret$1 = -1;
      }
      var nonZeroDigits = tmp$ret$1 + 1 | 0;
      if (!isoZeroes ? nonZeroDigits < 3 : false) {
        _this__u8e3s4.qb(fracString, 0, nonZeroDigits);
      } else {
        _this__u8e3s4.qb(fracString, 0, imul((nonZeroDigits + 2 | 0) / 3 | 0, 3));
      }
    }
    _this__u8e3s4.ga(unit);
  }
  function Duration__hashCode_impl_u4exz6($this) {
    return $this.hashCode();
  }
  function Duration__equals_impl_ygj6w6($this, other) {
    if (!(other instanceof Duration))
      return false;
    var tmp0_other_with_cast = other instanceof Duration ? other.mb_1 : THROW_CCE();
    if (!$this.equals(tmp0_other_with_cast))
      return false;
    return true;
  }
  function Duration(rawValue) {
    Companion_getInstance_7();
    this.mb_1 = rawValue;
  }
  Duration.prototype.rb = function (other) {
    return Duration__compareTo_impl_pchp0f(this.mb_1, other);
  };
  Duration.prototype.sb = function (other) {
    return Duration__compareTo_impl_pchp0f_0(this, other);
  };
  Duration.prototype.toString = function () {
    return Duration__toString_impl_8d916b(this.mb_1);
  };
  Duration.prototype.hashCode = function () {
    return Duration__hashCode_impl_u4exz6(this.mb_1);
  };
  Duration.prototype.equals = function (other) {
    return Duration__equals_impl_ygj6w6(this.mb_1, other);
  };
  Duration.$metadata$ = classMeta('Duration', [Comparable]);
  function durationOfMillis(normalMillis) {
    var tmp$ret$0;
    {
      var tmp0_plus = normalMillis.tb(1);
      tmp$ret$0 = tmp0_plus.ka(new Long(1, 0));
    }
    return _Duration___init__impl__kdtzql(tmp$ret$0);
  }
  function toDuration(_this__u8e3s4, unit) {
    var maxNsInUnit = convertDurationUnitOverflow(new Long(-387905, 1073741823), DurationUnit_NANOSECONDS_getInstance(), unit);
    if (maxNsInUnit.ha().m1(_this__u8e3s4) <= 0 ? _this__u8e3s4.m1(maxNsInUnit) <= 0 : false) {
      return durationOfNanos(convertDurationUnitOverflow(_this__u8e3s4, unit, DurationUnit_NANOSECONDS_getInstance()));
    } else {
      var millis = convertDurationUnit_0(_this__u8e3s4, unit, DurationUnit_MILLISECONDS_getInstance());
      return durationOfMillis(coerceIn(millis, new Long(1, -1073741824), new Long(-1, 1073741823)));
    }
  }
  function toDuration_0(_this__u8e3s4, unit) {
    var valueInNs = convertDurationUnit(_this__u8e3s4, unit, DurationUnit_NANOSECONDS_getInstance());
    {
      var tmp0_require = !isNaN_0(valueInNs);
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Duration value cannot be NaN.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    var nanos = roundToLong(valueInNs);
    var tmp;
    var containsLower = new Long(387905, -1073741824);
    if (nanos.m1(new Long(-387905, 1073741823)) <= 0 ? containsLower.m1(nanos) <= 0 : false) {
      tmp = durationOfNanos(nanos);
    } else {
      var millis = roundToLong(convertDurationUnit(_this__u8e3s4, unit, DurationUnit_MILLISECONDS_getInstance()));
      tmp = durationOfMillisNormalized(millis);
    }
    return tmp;
  }
  function parseDuration(value, strictIso) {
    var length = value.length;
    if (length === 0)
      throw IllegalArgumentException_init_$Create$_0('The string is empty');
    var index = 0;
    var result = Companion_getInstance_7().gb_1;
    var infinityString = 'Infinity';
    var tmp0_subject = charSequenceGet(value, index);
    if (equals_1(new Char_0(tmp0_subject), new Char_0(_Char___init__impl__6a9atx(43))) ? true : equals_1(new Char_0(tmp0_subject), new Char_0(_Char___init__impl__6a9atx(45)))) {
      var tmp1 = index;
      index = tmp1 + 1 | 0;
    }
    var hasSign = index > 0;
    var tmp;
    if (hasSign) {
      var tmp_0 = _Char___init__impl__6a9atx(45);
      tmp = startsWith$default(value, tmp_0, false, 2, null);
    } else {
      tmp = false;
    }
    var isNegative = tmp;
    if (length <= index)
      throw IllegalArgumentException_init_$Create$_0('No components');
    else {
      if (equals_1(new Char_0(charSequenceGet(value, index)), new Char_0(_Char___init__impl__6a9atx(80)))) {
        index = index + 1 | 0;
        if (index === length)
          throw IllegalArgumentException_init_$Create$();
        var nonDigitSymbols = '+-.';
        var isTimeComponent = false;
        var prevUnit = null;
        $l$loop: while (index < length) {
          if (equals_1(new Char_0(charSequenceGet(value, index)), new Char_0(_Char___init__impl__6a9atx(84)))) {
            var tmp_1;
            if (isTimeComponent) {
              tmp_1 = true;
            } else {
              index = index + 1 | 0;
              tmp_1 = index === length;
            }
            if (tmp_1)
              throw IllegalArgumentException_init_$Create$();
            isTimeComponent = true;
            continue $l$loop;
          }
          var tmp$ret$4;
          {
            var tmp1_substringWhile = index;
            var tmp$ret$3;
            {
              var tmp$ret$1;
              {
                var i = tmp1_substringWhile;
                $l$loop_0: while (true) {
                  var tmp_2;
                  if (i < value.length) {
                    var tmp$ret$0;
                    {
                      var tmp2__anonymous__z9zvc9 = charSequenceGet(value, i);
                      var tmp_3;
                      if (_Char___init__impl__6a9atx(48) <= tmp2__anonymous__z9zvc9 ? tmp2__anonymous__z9zvc9 <= _Char___init__impl__6a9atx(57) : false) {
                        tmp_3 = true;
                      } else {
                        tmp_3 = contains$default(nonDigitSymbols, tmp2__anonymous__z9zvc9, false, 2, null);
                      }
                      tmp$ret$0 = tmp_3;
                    }
                    tmp_2 = tmp$ret$0;
                  } else {
                    tmp_2 = false;
                  }
                  if (!tmp_2) {
                    break $l$loop_0;
                  }
                  var tmp0 = i;
                  i = tmp0 + 1 | 0;
                }
                tmp$ret$1 = i;
              }
              var tmp0_substring = tmp$ret$1;
              var tmp$ret$2;
              {
                tmp$ret$2 = value;
              }
              tmp$ret$3 = tmp$ret$2.substring(tmp1_substringWhile, tmp0_substring);
            }
            tmp$ret$4 = tmp$ret$3;
          }
          var component = tmp$ret$4;
          var tmp$ret$5;
          {
            tmp$ret$5 = charSequenceLength(component) === 0;
          }
          if (tmp$ret$5)
            throw IllegalArgumentException_init_$Create$();
          index = index + component.length | 0;
          var tmp$ret$6;
          {
            var tmp3_getOrElse = index;
            var tmp_4;
            if (tmp3_getOrElse >= 0 ? tmp3_getOrElse <= get_lastIndex_4(value) : false) {
              tmp_4 = charSequenceGet(value, tmp3_getOrElse);
            } else {
              throw IllegalArgumentException_init_$Create$_0('Missing unit for value ' + component);
            }
            tmp$ret$6 = tmp_4;
          }
          var unitChar = tmp$ret$6;
          var tmp2 = index;
          index = tmp2 + 1 | 0;
          var unit = durationUnitByIsoChar(unitChar, isTimeComponent);
          if (!(prevUnit == null) ? prevUnit.b2(unit) <= 0 : false)
            throw IllegalArgumentException_init_$Create$_0('Unexpected order of duration components');
          prevUnit = unit;
          var tmp_5 = _Char___init__impl__6a9atx(46);
          var dotIndex = indexOf$default(component, tmp_5, 0, false, 6, null);
          if (unit.equals(DurationUnit_SECONDS_getInstance()) ? dotIndex > 0 : false) {
            var tmp$ret$8;
            {
              var tmp$ret$7;
              {
                tmp$ret$7 = component;
              }
              tmp$ret$8 = tmp$ret$7.substring(0, dotIndex);
            }
            var whole = tmp$ret$8;
            result = Duration__plus_impl_yu9v8f(result, toDuration(parseOverLongIsoComponent(whole), unit));
            var tmp_6 = result;
            var tmp$ret$10;
            {
              var tmp$ret$9;
              {
                tmp$ret$9 = component;
              }
              tmp$ret$10 = tmp$ret$9.substring(dotIndex);
            }
            result = Duration__plus_impl_yu9v8f(tmp_6, toDuration_0(toDouble(tmp$ret$10), unit));
          } else {
            result = Duration__plus_impl_yu9v8f(result, toDuration(parseOverLongIsoComponent(component), unit));
          }
        }
      } else {
        if (strictIso)
          throw IllegalArgumentException_init_$Create$();
        else {
          var tmp_7 = index;
          var tmp$ret$11;
          {
            var tmp4_maxOf = length - index | 0;
            var tmp5_maxOf = infinityString.length;
            tmp$ret$11 = Math.max(tmp4_maxOf, tmp5_maxOf);
          }
          if (regionMatches(value, tmp_7, infinityString, 0, tmp$ret$11, true)) {
            result = Companion_getInstance_7().hb_1;
          } else {
            var prevUnit_0 = null;
            var afterFirst = false;
            var allowSpaces = !hasSign;
            if ((hasSign ? equals_1(new Char_0(charSequenceGet(value, index)), new Char_0(_Char___init__impl__6a9atx(40))) : false) ? equals_1(new Char_0(last_0(value)), new Char_0(_Char___init__impl__6a9atx(41))) : false) {
              allowSpaces = true;
              index = index + 1 | 0;
              var tmp_8 = index;
              length = length - 1 | 0;
              if (tmp_8 === length)
                throw IllegalArgumentException_init_$Create$_0('No components');
            }
            while (index < length) {
              if (afterFirst ? allowSpaces : false) {
                var tmp$ret$13;
                {
                  var tmp6_skipWhile = index;
                  var i_0 = tmp6_skipWhile;
                  $l$loop_1: while (true) {
                    var tmp_9;
                    if (i_0 < value.length) {
                      var tmp$ret$12;
                      {
                        var tmp7__anonymous__b0knam = charSequenceGet(value, i_0);
                        tmp$ret$12 = equals_1(new Char_0(tmp7__anonymous__b0knam), new Char_0(_Char___init__impl__6a9atx(32)));
                      }
                      tmp_9 = tmp$ret$12;
                    } else {
                      tmp_9 = false;
                    }
                    if (!tmp_9) {
                      break $l$loop_1;
                    }
                    var tmp0_0 = i_0;
                    i_0 = tmp0_0 + 1 | 0;
                  }
                  tmp$ret$13 = i_0;
                }
                index = tmp$ret$13;
              }
              afterFirst = true;
              var tmp$ret$18;
              {
                var tmp9_substringWhile = index;
                var tmp$ret$17;
                {
                  var tmp$ret$15;
                  {
                    var i_1 = tmp9_substringWhile;
                    $l$loop_2: while (true) {
                      var tmp_10;
                      if (i_1 < value.length) {
                        var tmp$ret$14;
                        {
                          var tmp10__anonymous__yfiz50 = charSequenceGet(value, i_1);
                          tmp$ret$14 = (_Char___init__impl__6a9atx(48) <= tmp10__anonymous__yfiz50 ? tmp10__anonymous__yfiz50 <= _Char___init__impl__6a9atx(57) : false) ? true : equals_1(new Char_0(tmp10__anonymous__yfiz50), new Char_0(_Char___init__impl__6a9atx(46)));
                        }
                        tmp_10 = tmp$ret$14;
                      } else {
                        tmp_10 = false;
                      }
                      if (!tmp_10) {
                        break $l$loop_2;
                      }
                      var tmp0_1 = i_1;
                      i_1 = tmp0_1 + 1 | 0;
                    }
                    tmp$ret$15 = i_1;
                  }
                  var tmp8_substring = tmp$ret$15;
                  var tmp$ret$16;
                  {
                    tmp$ret$16 = value;
                  }
                  tmp$ret$17 = tmp$ret$16.substring(tmp9_substringWhile, tmp8_substring);
                }
                tmp$ret$18 = tmp$ret$17;
              }
              var component_0 = tmp$ret$18;
              var tmp$ret$19;
              {
                tmp$ret$19 = charSequenceLength(component_0) === 0;
              }
              if (tmp$ret$19)
                throw IllegalArgumentException_init_$Create$();
              index = index + component_0.length | 0;
              var tmp$ret$24;
              {
                var tmp12_substringWhile = index;
                var tmp$ret$23;
                {
                  var tmp$ret$21;
                  {
                    var i_2 = tmp12_substringWhile;
                    $l$loop_3: while (true) {
                      var tmp_11;
                      if (i_2 < value.length) {
                        var tmp$ret$20;
                        {
                          var tmp13__anonymous__jvh1if = charSequenceGet(value, i_2);
                          tmp$ret$20 = _Char___init__impl__6a9atx(97) <= tmp13__anonymous__jvh1if ? tmp13__anonymous__jvh1if <= _Char___init__impl__6a9atx(122) : false;
                        }
                        tmp_11 = tmp$ret$20;
                      } else {
                        tmp_11 = false;
                      }
                      if (!tmp_11) {
                        break $l$loop_3;
                      }
                      var tmp0_2 = i_2;
                      i_2 = tmp0_2 + 1 | 0;
                    }
                    tmp$ret$21 = i_2;
                  }
                  var tmp11_substring = tmp$ret$21;
                  var tmp$ret$22;
                  {
                    tmp$ret$22 = value;
                  }
                  tmp$ret$23 = tmp$ret$22.substring(tmp12_substringWhile, tmp11_substring);
                }
                tmp$ret$24 = tmp$ret$23;
              }
              var unitName = tmp$ret$24;
              index = index + unitName.length | 0;
              var unit_0 = durationUnitByShortName(unitName);
              if (!(prevUnit_0 == null) ? prevUnit_0.b2(unit_0) <= 0 : false)
                throw IllegalArgumentException_init_$Create$_0('Unexpected order of duration components');
              prevUnit_0 = unit_0;
              var tmp_12 = _Char___init__impl__6a9atx(46);
              var dotIndex_0 = indexOf$default(component_0, tmp_12, 0, false, 6, null);
              if (dotIndex_0 > 0) {
                var tmp$ret$26;
                {
                  var tmp$ret$25;
                  {
                    tmp$ret$25 = component_0;
                  }
                  tmp$ret$26 = tmp$ret$25.substring(0, dotIndex_0);
                }
                var whole_0 = tmp$ret$26;
                result = Duration__plus_impl_yu9v8f(result, toDuration(toLong(whole_0), unit_0));
                var tmp_13 = result;
                var tmp$ret$28;
                {
                  var tmp$ret$27;
                  {
                    tmp$ret$27 = component_0;
                  }
                  tmp$ret$28 = tmp$ret$27.substring(dotIndex_0);
                }
                result = Duration__plus_impl_yu9v8f(tmp_13, toDuration_0(toDouble(tmp$ret$28), unit_0));
                if (index < length)
                  throw IllegalArgumentException_init_$Create$_0('Fractional component must be last');
              } else {
                result = Duration__plus_impl_yu9v8f(result, toDuration(toLong(component_0), unit_0));
              }
            }
          }
        }
      }
    }
    return isNegative ? Duration__unaryMinus_impl_x2k1y0(result) : result;
  }
  function durationOf(normalValue, unitDiscriminator) {
    var tmp$ret$0;
    {
      var tmp0_plus = normalValue.tb(1);
      tmp$ret$0 = tmp0_plus.ka(toLong_0(unitDiscriminator));
    }
    return _Duration___init__impl__kdtzql(tmp$ret$0);
  }
  function durationOfNanosNormalized(nanos) {
    var tmp;
    var containsLower = new Long(387905, -1073741824);
    if (nanos.m1(new Long(-387905, 1073741823)) <= 0 ? containsLower.m1(nanos) <= 0 : false) {
      tmp = durationOfNanos(nanos);
    } else {
      tmp = durationOfMillis(nanosToMillis(nanos));
    }
    return tmp;
  }
  function durationOfMillisNormalized(millis) {
    var tmp;
    var containsLower = new Long(1108857478, -1074);
    if (millis.m1(new Long(-1108857478, 1073)) <= 0 ? containsLower.m1(millis) <= 0 : false) {
      tmp = durationOfNanos(millisToNanos(millis));
    } else {
      tmp = durationOfMillis(coerceIn(millis, new Long(1, -1073741824), new Long(-1, 1073741823)));
    }
    return tmp;
  }
  function nanosToMillis(nanos) {
    var tmp$ret$0;
    {
      var tmp0_div = 1000000;
      tmp$ret$0 = nanos.ia(toLong_0(tmp0_div));
    }
    return tmp$ret$0;
  }
  function millisToNanos(millis) {
    var tmp$ret$0;
    {
      var tmp0_times = 1000000;
      tmp$ret$0 = millis.ja(toLong_0(tmp0_times));
    }
    return tmp$ret$0;
  }
  function durationOfNanos(normalNanos) {
    return _Duration___init__impl__kdtzql(normalNanos.tb(1));
  }
  function substringWhile(_this__u8e3s4, startIndex, predicate) {
    var tmp$ret$2;
    {
      var tmp$ret$0;
      {
        var i = startIndex;
        while (i < _this__u8e3s4.length ? predicate(new Char_0(charSequenceGet(_this__u8e3s4, i))) : false) {
          var tmp0 = i;
          i = tmp0 + 1 | 0;
        }
        tmp$ret$0 = i;
      }
      var tmp0_substring = tmp$ret$0;
      var tmp$ret$1;
      {
        tmp$ret$1 = _this__u8e3s4;
      }
      tmp$ret$2 = tmp$ret$1.substring(startIndex, tmp0_substring);
    }
    return tmp$ret$2;
  }
  function parseOverLongIsoComponent(value) {
    var length = value.length;
    var startIndex = 0;
    var tmp;
    if (length > 0) {
      var tmp_0 = charSequenceGet(value, 0);
      tmp = contains$default('+-', tmp_0, false, 2, null);
    } else {
      tmp = false;
    }
    if (tmp) {
      var tmp0 = startIndex;
      startIndex = tmp0 + 1 | 0;
    }
    var tmp_1;
    if ((length - startIndex | 0) > 16) {
      var tmp$ret$0;
      $l$block_0: {
        var tmp0_all = numberRangeToNumber(startIndex, get_lastIndex_4(value));
        var tmp_2;
        if (isInterface(tmp0_all, Collection)) {
          tmp_2 = tmp0_all.q();
        } else {
          tmp_2 = false;
        }
        if (tmp_2) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
        var inductionVariable = tmp0_all.i9();
        var last = tmp0_all.k9();
        if (inductionVariable <= last)
          do {
            var element = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var tmp$ret$1;
            {
              var containsArg = charSequenceGet(value, element);
              tmp$ret$1 = _Char___init__impl__6a9atx(48) <= containsArg ? containsArg <= _Char___init__impl__6a9atx(57) : false;
            }
            if (!tmp$ret$1) {
              tmp$ret$0 = false;
              break $l$block_0;
            }
          }
           while (!(element === last));
        tmp$ret$0 = true;
      }
      tmp_1 = tmp$ret$0;
    } else {
      tmp_1 = false;
    }
    if (tmp_1) {
      var tmp_3;
      if (equals_1(new Char_0(charSequenceGet(value, 0)), new Char_0(_Char___init__impl__6a9atx(45)))) {
        Companion_getInstance_14();
        tmp_3 = new Long(0, -2147483648);
      } else {
        Companion_getInstance_14();
        tmp_3 = new Long(-1, 2147483647);
      }
      return tmp_3;
    }
    var tmp_4;
    if (startsWith$default_1(value, '+', false, 2, null)) {
      tmp_4 = toLong(drop(value, 1));
    } else {
      tmp_4 = toLong(value);
    }
    return tmp_4;
  }
  function skipWhile(_this__u8e3s4, startIndex, predicate) {
    var i = startIndex;
    while (i < _this__u8e3s4.length ? predicate(new Char_0(charSequenceGet(_this__u8e3s4, i))) : false) {
      var tmp0 = i;
      i = tmp0 + 1 | 0;
    }
    return i;
  }
  function durationUnitByIsoChar(isoChar, isTimeComponent) {
    var tmp;
    if (!isTimeComponent) {
      var tmp0_subject = isoChar;
      var tmp_0;
      if (equals_1(new Char_0(tmp0_subject), new Char_0(_Char___init__impl__6a9atx(68)))) {
        tmp_0 = DurationUnit_DAYS_getInstance();
      } else {
        throw IllegalArgumentException_init_$Create$_0('Invalid or unsupported duration ISO non-time unit: ' + new Char_0(isoChar));
      }
      tmp = tmp_0;
    } else {
      var tmp1_subject = isoChar;
      var tmp_1;
      if (equals_1(new Char_0(tmp1_subject), new Char_0(_Char___init__impl__6a9atx(72)))) {
        tmp_1 = DurationUnit_HOURS_getInstance();
      } else if (equals_1(new Char_0(tmp1_subject), new Char_0(_Char___init__impl__6a9atx(77)))) {
        tmp_1 = DurationUnit_MINUTES_getInstance();
      } else if (equals_1(new Char_0(tmp1_subject), new Char_0(_Char___init__impl__6a9atx(83)))) {
        tmp_1 = DurationUnit_SECONDS_getInstance();
      } else {
        throw IllegalArgumentException_init_$Create$_0('Invalid duration ISO time unit: ' + new Char_0(isoChar));
      }
      tmp = tmp_1;
    }
    return tmp;
  }
  function durationUnitByShortName(shortName) {
    var tmp0_subject = shortName;
    var tmp;
    switch (tmp0_subject) {
      case 'ns':
        tmp = DurationUnit_NANOSECONDS_getInstance();
        break;
      case 'us':
        tmp = DurationUnit_MICROSECONDS_getInstance();
        break;
      case 'ms':
        tmp = DurationUnit_MILLISECONDS_getInstance();
        break;
      case 's':
        tmp = DurationUnit_SECONDS_getInstance();
        break;
      case 'm':
        tmp = DurationUnit_MINUTES_getInstance();
        break;
      case 'h':
        tmp = DurationUnit_HOURS_getInstance();
        break;
      case 'd':
        tmp = DurationUnit_DAYS_getInstance();
        break;
      default:
        throw IllegalArgumentException_init_$Create$_0('Unknown duration unit short name: ' + shortName);
    }
    return tmp;
  }
  function _ValueTimeMark___init__impl__uyfl2m(reading) {
    return reading;
  }
  function _ValueTimeMark___get_reading__impl__5qz8rd($this) {
    return $this;
  }
  function ValueTimeMark__elapsedNow_impl_eonqvs($this) {
    return MonotonicTimeSource_getInstance().vb($this);
  }
  function ValueTimeMark__toString_impl_ow3ax6($this) {
    return 'ValueTimeMark(reading=' + toString_2($this) + ')';
  }
  function ValueTimeMark__hashCode_impl_oduu93($this) {
    return hashCode_0($this);
  }
  function ValueTimeMark__equals_impl_uc54jh($this, other) {
    if (!(other instanceof ValueTimeMark))
      return false;
    var tmp0_other_with_cast = other instanceof ValueTimeMark ? other.wb_1 : THROW_CCE();
    if (!equals_1($this, tmp0_other_with_cast))
      return false;
    return true;
  }
  function ValueTimeMark(reading) {
    this.wb_1 = reading;
  }
  ValueTimeMark.prototype.xb = function () {
    return ValueTimeMark__elapsedNow_impl_eonqvs(this.wb_1);
  };
  ValueTimeMark.prototype.toString = function () {
    return ValueTimeMark__toString_impl_ow3ax6(this.wb_1);
  };
  ValueTimeMark.prototype.hashCode = function () {
    return ValueTimeMark__hashCode_impl_oduu93(this.wb_1);
  };
  ValueTimeMark.prototype.equals = function (other) {
    return ValueTimeMark__equals_impl_uc54jh(this.wb_1, other);
  };
  ValueTimeMark.$metadata$ = classMeta('ValueTimeMark', [TimeMark]);
  function Monotonic() {
    Monotonic_instance = this;
  }
  Monotonic.prototype.yb = function () {
    return MonotonicTimeSource_getInstance().yb();
  };
  Monotonic.prototype.toString = function () {
    return toString_2(MonotonicTimeSource_getInstance());
  };
  Monotonic.$metadata$ = objectMeta('Monotonic', [TimeSource]);
  var Monotonic_instance;
  function Monotonic_getInstance() {
    if (Monotonic_instance == null)
      new Monotonic();
    return Monotonic_instance;
  }
  function TimeSource() {
  }
  TimeSource.$metadata$ = interfaceMeta('TimeSource');
  function TimeMark() {
  }
  TimeMark.$metadata$ = interfaceMeta('TimeMark');
  function TimedValue(value, duration) {
    this.zb_1 = value;
    this.ac_1 = duration;
  }
  TimedValue.prototype.z3 = function () {
    return this.zb_1;
  };
  TimedValue.prototype.bc = function () {
    return this.ac_1;
  };
  TimedValue.prototype.toString = function () {
    return 'TimedValue(value=' + this.zb_1 + ', duration=' + new Duration(this.ac_1) + ')';
  };
  TimedValue.prototype.hashCode = function () {
    var result = this.zb_1 == null ? 0 : hashCode_0(this.zb_1);
    result = imul(result, 31) + Duration__hashCode_impl_u4exz6(this.ac_1) | 0;
    return result;
  };
  TimedValue.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof TimedValue))
      return false;
    var tmp0_other_with_cast = other instanceof TimedValue ? other : THROW_CCE();
    if (!equals_1(this.zb_1, tmp0_other_with_cast.zb_1))
      return false;
    if (!equals_1(this.ac_1, tmp0_other_with_cast.ac_1))
      return false;
    return true;
  };
  TimedValue.$metadata$ = classMeta('TimedValue');
  function measureTimedValue(block) {
    {
    }
    var tmp$ret$0;
    {
      var tmp0_measureTimedValue = Monotonic_getInstance();
      {
      }
      var mark = tmp0_measureTimedValue.yb();
      var result = block();
      tmp$ret$0 = new TimedValue(result, ValueTimeMark__elapsedNow_impl_eonqvs(mark));
    }
    return tmp$ret$0;
  }
  function measureTimedValue_0(_this__u8e3s4, block) {
    {
    }
    var mark = _this__u8e3s4.yb();
    var result = block();
    return new TimedValue(result, ValueTimeMark__elapsedNow_impl_eonqvs(mark));
  }
  function get_UNDEFINED_RESULT() {
    init_properties_DeepRecursive_kt_b2anle();
    return UNDEFINED_RESULT;
  }
  var UNDEFINED_RESULT;
  function DeepRecursiveScope() {
  }
  DeepRecursiveScope.$metadata$ = classMeta('DeepRecursiveScope');
  function invoke(_this__u8e3s4, value) {
    init_properties_DeepRecursive_kt_b2anle();
    return (new DeepRecursiveScopeImpl(_this__u8e3s4.dc_1, value)).ic();
  }
  function DeepRecursiveFunction(block) {
    this.dc_1 = block;
  }
  DeepRecursiveFunction.$metadata$ = classMeta('DeepRecursiveFunction');
  function DeepRecursiveScopeImpl(block, value) {
    DeepRecursiveScope.call(this);
    var tmp = this;
    tmp.ec_1 = isSuspendFunction(block, 2) ? block : THROW_CCE();
    this.fc_1 = value;
    var tmp_0 = this;
    tmp_0.gc_1 = isInterface(this, Continuation) ? this : THROW_CCE();
    this.hc_1 = get_UNDEFINED_RESULT();
  }
  DeepRecursiveScopeImpl.prototype.s4 = function () {
    return EmptyCoroutineContext_getInstance();
  };
  DeepRecursiveScopeImpl.prototype.jc = function (result) {
    this.gc_1 = null;
    this.hc_1 = result;
  };
  DeepRecursiveScopeImpl.prototype.q4 = function (result) {
    return this.jc(result);
  };
  DeepRecursiveScopeImpl.prototype.cc = function (value, $cont) {
    var tmp$ret$0;
    {
      var tmp0__anonymous__q1qw7t = $cont;
      var tmp = this;
      tmp.gc_1 = isInterface(tmp0__anonymous__q1qw7t, Continuation) ? tmp0__anonymous__q1qw7t : THROW_CCE();
      this.fc_1 = value;
      tmp$ret$0 = get_COROUTINE_SUSPENDED();
    }
    return tmp$ret$0;
  };
  DeepRecursiveScopeImpl.prototype.ic = function () {
    $l$loop: while (true) {
      var result = this.hc_1;
      var tmp0_elvis_lhs = this.gc_1;
      var tmp;
      if (tmp0_elvis_lhs == null) {
        var tmp$ret$0;
        {
          var tmp0_getOrThrow = new Result(result) instanceof Result ? result : THROW_CCE();
          throwOnFailure(tmp0_getOrThrow);
          var tmp_0 = _Result___get_value__impl__bjfvqg(tmp0_getOrThrow);
          tmp$ret$0 = (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
        }
        return tmp$ret$0;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var cont = tmp;
      if (equals_1(get_UNDEFINED_RESULT(), result)) {
        var tmp_1;
        try {
          var tmp$ret$2;
          {
            var tmp1_startCoroutineUninterceptedOrReturn = this.ec_1;
            var tmp2_startCoroutineUninterceptedOrReturn = this.fc_1;
            var tmp$ret$1;
            {
              tmp$ret$1 = tmp1_startCoroutineUninterceptedOrReturn;
            }
            var a = tmp$ret$1;
            tmp$ret$2 = typeof a === 'function' ? a(this, tmp2_startCoroutineUninterceptedOrReturn, cont) : tmp1_startCoroutineUninterceptedOrReturn.kc(this, tmp2_startCoroutineUninterceptedOrReturn, cont);
          }
          tmp_1 = tmp$ret$2;
        } catch ($p) {
          var tmp_2;
          if ($p instanceof Error) {
            var tmp$ret$4;
            {
              var tmp$ret$3;
              {
                var tmp0_failure = Companion_getInstance_8();
                tmp$ret$3 = _Result___init__impl__xyqfz8(createFailure($p));
              }
              tmp$ret$4 = cont.q4(tmp$ret$3);
            }
            continue $l$loop;
          } else {
            throw $p;
          }
          tmp_1 = tmp_2;
        }
        var r = tmp_1;
        if (!(r === get_COROUTINE_SUSPENDED())) {
          var tmp$ret$6;
          {
            var tmp3_resume = (r == null ? true : isObject(r)) ? r : THROW_CCE();
            var tmp$ret$5;
            {
              var tmp0_success = Companion_getInstance_8();
              tmp$ret$5 = _Result___init__impl__xyqfz8(tmp3_resume);
            }
            tmp$ret$6 = cont.q4(tmp$ret$5);
          }
        }
      } else {
        this.hc_1 = get_UNDEFINED_RESULT();
        cont.q4(result);
      }
    }
  };
  DeepRecursiveScopeImpl.$metadata$ = classMeta('DeepRecursiveScopeImpl', [Continuation], undefined, undefined, undefined, DeepRecursiveScope.prototype);
  var properties_initialized_DeepRecursive_kt_5z0al2;
  function init_properties_DeepRecursive_kt_b2anle() {
    if (properties_initialized_DeepRecursive_kt_5z0al2) {
    } else {
      properties_initialized_DeepRecursive_kt_5z0al2 = true;
      var tmp$ret$0;
      {
        var tmp0_success = Companion_getInstance_8();
        var tmp1_success = get_COROUTINE_SUSPENDED();
        tmp$ret$0 = _Result___init__impl__xyqfz8(tmp1_success);
      }
      UNDEFINED_RESULT = tmp$ret$0;
    }
  }
  function mod_0(_this__u8e3s4, other) {
    var r = _this__u8e3s4 % other | 0;
    return r + (other & ((r ^ other) & (r | (-r | 0))) >> 31) | 0;
  }
  function hashCode(_this__u8e3s4) {
    var tmp0_safe_receiver = _this__u8e3s4;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode_0(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
  }
  function getValue_1(_this__u8e3s4, thisRef, property) {
    return _this__u8e3s4.n2();
  }
  function Lazy() {
  }
  Lazy.$metadata$ = interfaceMeta('Lazy');
  var LazyThreadSafetyMode_SYNCHRONIZED_instance;
  var LazyThreadSafetyMode_PUBLICATION_instance;
  var LazyThreadSafetyMode_NONE_instance;
  var LazyThreadSafetyMode_entriesInitialized;
  function LazyThreadSafetyMode_initEntries() {
    if (LazyThreadSafetyMode_entriesInitialized)
      return Unit_getInstance();
    LazyThreadSafetyMode_entriesInitialized = true;
    LazyThreadSafetyMode_SYNCHRONIZED_instance = new LazyThreadSafetyMode('SYNCHRONIZED', 0);
    LazyThreadSafetyMode_PUBLICATION_instance = new LazyThreadSafetyMode('PUBLICATION', 1);
    LazyThreadSafetyMode_NONE_instance = new LazyThreadSafetyMode('NONE', 2);
  }
  function LazyThreadSafetyMode(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  LazyThreadSafetyMode.$metadata$ = classMeta('LazyThreadSafetyMode', undefined, undefined, undefined, undefined, Enum.prototype);
  function UnsafeLazyImpl(initializer) {
    this.lc_1 = initializer;
    this.mc_1 = UNINITIALIZED_VALUE_getInstance();
  }
  UnsafeLazyImpl.prototype.n2 = function () {
    if (this.mc_1 === UNINITIALIZED_VALUE_getInstance()) {
      this.mc_1 = ensureNotNull(this.lc_1)();
      this.lc_1 = null;
    }
    var tmp = this.mc_1;
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  UnsafeLazyImpl.prototype.nc = function () {
    return !(this.mc_1 === UNINITIALIZED_VALUE_getInstance());
  };
  UnsafeLazyImpl.prototype.toString = function () {
    return this.nc() ? toString_1(this.n2()) : 'Lazy value not initialized yet.';
  };
  UnsafeLazyImpl.$metadata$ = classMeta('UnsafeLazyImpl', [Lazy, Serializable]);
  function UNINITIALIZED_VALUE() {
    UNINITIALIZED_VALUE_instance = this;
  }
  UNINITIALIZED_VALUE.$metadata$ = objectMeta('UNINITIALIZED_VALUE');
  var UNINITIALIZED_VALUE_instance;
  function UNINITIALIZED_VALUE_getInstance() {
    if (UNINITIALIZED_VALUE_instance == null)
      new UNINITIALIZED_VALUE();
    return UNINITIALIZED_VALUE_instance;
  }
  function LazyThreadSafetyMode_PUBLICATION_getInstance() {
    LazyThreadSafetyMode_initEntries();
    return LazyThreadSafetyMode_PUBLICATION_instance;
  }
  function error(message) {
    throw IllegalStateException_init_$Create$_0(toString_2(message));
  }
  function check(value) {
    {
    }
    {
      {
      }
      if (!value) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Check failed.';
        }
        var message = tmp$ret$0;
        throw IllegalStateException_init_$Create$_0(toString_2(message));
      }
    }
  }
  function check_0(value, lazyMessage) {
    {
    }
    if (!value) {
      var message = lazyMessage();
      throw IllegalStateException_init_$Create$_0(toString_2(message));
    }
  }
  function require_0(value, lazyMessage) {
    {
    }
    if (!value) {
      var message = lazyMessage();
      throw IllegalArgumentException_init_$Create$_0(toString_2(message));
    }
  }
  function require_1(value) {
    {
    }
    {
      {
      }
      if (!value) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Failed requirement.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
  }
  function checkNotNull(value) {
    {
    }
    var tmp$ret$1;
    $l$block: {
      {
      }
      if (value == null) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Required value was null.';
        }
        var message = tmp$ret$0;
        throw IllegalStateException_init_$Create$_0(toString_2(message));
      } else {
        tmp$ret$1 = value;
        break $l$block;
      }
    }
    return tmp$ret$1;
  }
  function checkNotNull_0(value, lazyMessage) {
    {
    }
    if (value == null) {
      var message = lazyMessage();
      throw IllegalStateException_init_$Create$_0(toString_2(message));
    } else {
      return value;
    }
  }
  function requireNotNull(value, lazyMessage) {
    {
    }
    if (value == null) {
      var message = lazyMessage();
      throw IllegalArgumentException_init_$Create$_0(toString_2(message));
    } else {
      return value;
    }
  }
  function _Result___init__impl__xyqfz8(value) {
    return value;
  }
  function _Result___get_value__impl__bjfvqg($this) {
    return $this;
  }
  function _Result___get_isFailure__impl__jpiriv($this) {
    var tmp = _Result___get_value__impl__bjfvqg($this);
    return tmp instanceof Failure;
  }
  function Result__getOrNull_impl_x6tyqe($this) {
    var tmp;
    if (_Result___get_isFailure__impl__jpiriv($this)) {
      tmp = null;
    } else {
      var tmp_0 = _Result___get_value__impl__bjfvqg($this);
      tmp = (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
    }
    return tmp;
  }
  function Result__exceptionOrNull_impl_p6xea9($this) {
    var tmp0_subject = _Result___get_value__impl__bjfvqg($this);
    var tmp;
    if (tmp0_subject instanceof Failure) {
      tmp = _Result___get_value__impl__bjfvqg($this).oc_1;
    } else {
      tmp = null;
    }
    return tmp;
  }
  function Result__toString_impl_yu5r8k($this) {
    var tmp0_subject = _Result___get_value__impl__bjfvqg($this);
    var tmp;
    if (tmp0_subject instanceof Failure) {
      tmp = toString_2(_Result___get_value__impl__bjfvqg($this));
    } else {
      tmp = 'Success(' + toString_1(_Result___get_value__impl__bjfvqg($this)) + ')';
    }
    return tmp;
  }
  function Companion_8() {
    Companion_instance_8 = this;
  }
  Companion_8.prototype.pc = function (value) {
    return _Result___init__impl__xyqfz8(value);
  };
  Companion_8.prototype.qc = function (exception) {
    return _Result___init__impl__xyqfz8(createFailure(exception));
  };
  Companion_8.$metadata$ = objectMeta('Companion');
  var Companion_instance_8;
  function Companion_getInstance_8() {
    if (Companion_instance_8 == null)
      new Companion_8();
    return Companion_instance_8;
  }
  function Failure(exception) {
    this.oc_1 = exception;
  }
  Failure.prototype.equals = function (other) {
    var tmp;
    if (other instanceof Failure) {
      tmp = equals_1(this.oc_1, other.oc_1);
    } else {
      tmp = false;
    }
    return tmp;
  };
  Failure.prototype.hashCode = function () {
    return hashCode_0(this.oc_1);
  };
  Failure.prototype.toString = function () {
    return 'Failure(' + this.oc_1 + ')';
  };
  Failure.$metadata$ = classMeta('Failure', [Serializable]);
  function Result__hashCode_impl_d2zufp($this) {
    return $this == null ? 0 : hashCode_0($this);
  }
  function Result__equals_impl_bxgmep($this, other) {
    if (!(other instanceof Result))
      return false;
    var tmp0_other_with_cast = other instanceof Result ? other.rc_1 : THROW_CCE();
    if (!equals_1($this, tmp0_other_with_cast))
      return false;
    return true;
  }
  function Result(value) {
    Companion_getInstance_8();
    this.rc_1 = value;
  }
  Result.prototype.toString = function () {
    return Result__toString_impl_yu5r8k(this.rc_1);
  };
  Result.prototype.hashCode = function () {
    return Result__hashCode_impl_d2zufp(this.rc_1);
  };
  Result.prototype.equals = function (other) {
    return Result__equals_impl_bxgmep(this.rc_1, other);
  };
  Result.$metadata$ = classMeta('Result', [Serializable]);
  function createFailure(exception) {
    return new Failure(exception);
  }
  function getOrThrow(_this__u8e3s4) {
    throwOnFailure(_this__u8e3s4);
    var tmp = _Result___get_value__impl__bjfvqg(_this__u8e3s4);
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  }
  function throwOnFailure(_this__u8e3s4) {
    var tmp = _Result___get_value__impl__bjfvqg(_this__u8e3s4);
    if (tmp instanceof Failure)
      throw _Result___get_value__impl__bjfvqg(_this__u8e3s4).oc_1;
  }
  function runCatching(_this__u8e3s4, block) {
    var tmp;
    try {
      var tmp$ret$0;
      {
        var tmp0_success = Companion_getInstance_8();
        var tmp1_success = block(_this__u8e3s4);
        tmp$ret$0 = _Result___init__impl__xyqfz8(tmp1_success);
      }
      tmp = tmp$ret$0;
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        var tmp$ret$1;
        {
          var tmp2_failure = Companion_getInstance_8();
          tmp$ret$1 = _Result___init__impl__xyqfz8(createFailure($p));
        }
        tmp_0 = tmp$ret$1;
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function fold_2(_this__u8e3s4, onSuccess, onFailure) {
    {
    }
    var exception = Result__exceptionOrNull_impl_p6xea9(_this__u8e3s4);
    var tmp;
    if (exception == null) {
      var tmp_0 = _Result___get_value__impl__bjfvqg(_this__u8e3s4);
      tmp = onSuccess((tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE());
    } else {
      tmp = onFailure(exception);
    }
    return tmp;
  }
  function run(block) {
    {
    }
    return block();
  }
  function NotImplementedError_init_$Init$(message, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      message = 'An operation is not implemented.';
    NotImplementedError.call($this, message);
    return $this;
  }
  function NotImplementedError_init_$Create$(message, $mask0, $marker) {
    var tmp = NotImplementedError_init_$Init$(message, $mask0, $marker, Object.create(NotImplementedError.prototype));
    captureStack(tmp, NotImplementedError_init_$Create$);
    return tmp;
  }
  function NotImplementedError(message) {
    Error_init_$Init$(message, this);
    captureStack(this, NotImplementedError);
  }
  NotImplementedError.$metadata$ = classMeta('NotImplementedError', undefined, undefined, undefined, undefined, Error_0.prototype);
  function let_0(_this__u8e3s4, block) {
    {
    }
    return block(_this__u8e3s4);
  }
  function also(_this__u8e3s4, block) {
    {
    }
    block(_this__u8e3s4);
    return _this__u8e3s4;
  }
  function takeUnless(_this__u8e3s4, predicate) {
    {
    }
    return !predicate(_this__u8e3s4) ? _this__u8e3s4 : null;
  }
  function apply(_this__u8e3s4, block) {
    {
    }
    block(_this__u8e3s4);
    return _this__u8e3s4;
  }
  function run_0(_this__u8e3s4, block) {
    {
    }
    return block(_this__u8e3s4);
  }
  function takeIf(_this__u8e3s4, predicate) {
    {
    }
    return predicate(_this__u8e3s4) ? _this__u8e3s4 : null;
  }
  function with_0(receiver, block) {
    {
    }
    return block(receiver);
  }
  function repeat(times, action) {
    {
    }
    var inductionVariable = 0;
    if (inductionVariable < times)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        action(index);
      }
       while (inductionVariable < times);
  }
  function Pair(first, second) {
    this.v_1 = first;
    this.w_1 = second;
  }
  Pair.prototype.i9 = function () {
    return this.v_1;
  };
  Pair.prototype.sc = function () {
    return this.w_1;
  };
  Pair.prototype.toString = function () {
    return '(' + this.v_1 + ', ' + this.w_1 + ')';
  };
  Pair.prototype.z3 = function () {
    return this.v_1;
  };
  Pair.prototype.a4 = function () {
    return this.w_1;
  };
  Pair.prototype.hashCode = function () {
    var result = this.v_1 == null ? 0 : hashCode_0(this.v_1);
    result = imul(result, 31) + (this.w_1 == null ? 0 : hashCode_0(this.w_1)) | 0;
    return result;
  };
  Pair.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Pair))
      return false;
    var tmp0_other_with_cast = other instanceof Pair ? other : THROW_CCE();
    if (!equals_1(this.v_1, tmp0_other_with_cast.v_1))
      return false;
    if (!equals_1(this.w_1, tmp0_other_with_cast.w_1))
      return false;
    return true;
  };
  Pair.$metadata$ = classMeta('Pair', [Serializable]);
  function to(_this__u8e3s4, that) {
    return new Pair(_this__u8e3s4, that);
  }
  function Triple(first, second, third) {
    this.tc_1 = first;
    this.uc_1 = second;
    this.vc_1 = third;
  }
  Triple.prototype.toString = function () {
    return '(' + this.tc_1 + ', ' + this.uc_1 + ', ' + this.vc_1 + ')';
  };
  Triple.prototype.hashCode = function () {
    var result = this.tc_1 == null ? 0 : hashCode_0(this.tc_1);
    result = imul(result, 31) + (this.uc_1 == null ? 0 : hashCode_0(this.uc_1)) | 0;
    result = imul(result, 31) + (this.vc_1 == null ? 0 : hashCode_0(this.vc_1)) | 0;
    return result;
  };
  Triple.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Triple))
      return false;
    var tmp0_other_with_cast = other instanceof Triple ? other : THROW_CCE();
    if (!equals_1(this.tc_1, tmp0_other_with_cast.tc_1))
      return false;
    if (!equals_1(this.uc_1, tmp0_other_with_cast.uc_1))
      return false;
    if (!equals_1(this.vc_1, tmp0_other_with_cast.vc_1))
      return false;
    return true;
  };
  Triple.$metadata$ = classMeta('Triple', [Serializable]);
  function _UInt___init__impl__l7qpdl(data) {
    return data;
  }
  function _UInt___get_data__impl__f0vqqw($this) {
    return $this;
  }
  function Companion_9() {
    Companion_instance_9 = this;
    this.wc_1 = _UInt___init__impl__l7qpdl(0);
    this.xc_1 = _UInt___init__impl__l7qpdl(-1);
    this.yc_1 = 4;
    this.zc_1 = 32;
  }
  Companion_9.$metadata$ = objectMeta('Companion');
  var Companion_instance_9;
  function Companion_getInstance_9() {
    if (Companion_instance_9 == null)
      new Companion_9();
    return Companion_instance_9;
  }
  function UInt__compareTo_impl_yacclj($this, other) {
    return uintCompare(_UInt___get_data__impl__f0vqqw($this), _UInt___get_data__impl__f0vqqw(other));
  }
  function UInt__compareTo_impl_yacclj_0($this, other) {
    var tmp = $this.ad_1;
    return UInt__compareTo_impl_yacclj(tmp, other instanceof UInt ? other.ad_1 : THROW_CCE());
  }
  function UInt__and_impl_fv3j80($this, other) {
    return _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw($this) & _UInt___get_data__impl__f0vqqw(other));
  }
  function UInt__or_impl_nrzdg0($this, other) {
    return _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw($this) | _UInt___get_data__impl__f0vqqw(other));
  }
  function UInt__toByte_impl_enbcz4($this) {
    return toByte(_UInt___get_data__impl__f0vqqw($this));
  }
  function UInt__toInt_impl_93yt4d($this) {
    return _UInt___get_data__impl__f0vqqw($this);
  }
  function UInt__toLong_impl_le5rq4($this) {
    return toLong_0(_UInt___get_data__impl__f0vqqw($this)).bd(new Long(-1, 0));
  }
  function UInt__toString_impl_dbgl21($this) {
    var tmp$ret$0;
    {
      tmp$ret$0 = toLong_0(_UInt___get_data__impl__f0vqqw($this)).bd(new Long(-1, 0));
    }
    return tmp$ret$0.toString();
  }
  function UInt__hashCode_impl_z2mhuw($this) {
    return $this;
  }
  function UInt__equals_impl_ffdoxg($this, other) {
    if (!(other instanceof UInt))
      return false;
    var tmp0_other_with_cast = other instanceof UInt ? other.ad_1 : THROW_CCE();
    if (!($this === tmp0_other_with_cast))
      return false;
    return true;
  }
  function UInt(data) {
    Companion_getInstance_9();
    this.ad_1 = data;
  }
  UInt.prototype.cd = function (other) {
    return UInt__compareTo_impl_yacclj(this.ad_1, other);
  };
  UInt.prototype.sb = function (other) {
    return UInt__compareTo_impl_yacclj_0(this, other);
  };
  UInt.prototype.toString = function () {
    return UInt__toString_impl_dbgl21(this.ad_1);
  };
  UInt.prototype.hashCode = function () {
    return UInt__hashCode_impl_z2mhuw(this.ad_1);
  };
  UInt.prototype.equals = function (other) {
    return UInt__equals_impl_ffdoxg(this.ad_1, other);
  };
  UInt.$metadata$ = classMeta('UInt', [Comparable]);
  function toUInt(_this__u8e3s4) {
    return _UInt___init__impl__l7qpdl(_this__u8e3s4);
  }
  function toUInt_0(_this__u8e3s4) {
    return _UInt___init__impl__l7qpdl(_this__u8e3s4);
  }
  function _ULong___init__impl__c78o9k(data) {
    return data;
  }
  function _ULong___get_data__impl__fggpzb($this) {
    return $this;
  }
  function Companion_10() {
    Companion_instance_10 = this;
    this.dd_1 = _ULong___init__impl__c78o9k(new Long(0, 0));
    this.ed_1 = _ULong___init__impl__c78o9k(new Long(-1, -1));
    this.fd_1 = 8;
    this.gd_1 = 64;
  }
  Companion_10.$metadata$ = objectMeta('Companion');
  var Companion_instance_10;
  function Companion_getInstance_10() {
    if (Companion_instance_10 == null)
      new Companion_10();
    return Companion_instance_10;
  }
  function ULong__compareTo_impl_38i7tu($this, other) {
    return ulongCompare(_ULong___get_data__impl__fggpzb($this), _ULong___get_data__impl__fggpzb(other));
  }
  function ULong__compareTo_impl_38i7tu_0($this, other) {
    var tmp = $this.hd_1;
    return ULong__compareTo_impl_38i7tu(tmp, other instanceof ULong ? other.hd_1 : THROW_CCE());
  }
  function ULong__plus_impl_plxuny($this, other) {
    return _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb($this).ka(_ULong___get_data__impl__fggpzb(other)));
  }
  function ULong__times_impl_ffj6l4($this, other) {
    return _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb($this).ja(_ULong___get_data__impl__fggpzb(other)));
  }
  function ULong__shl_impl_5lazrb($this, bitCount) {
    return _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb($this).tb(bitCount));
  }
  function ULong__toLong_impl_i1ol5n($this) {
    return _ULong___get_data__impl__fggpzb($this);
  }
  function ULong__toString_impl_f9au7k($this) {
    return ulongToString(_ULong___get_data__impl__fggpzb($this));
  }
  function ULong__hashCode_impl_6hv2lb($this) {
    return $this.hashCode();
  }
  function ULong__equals_impl_o0gnyb($this, other) {
    if (!(other instanceof ULong))
      return false;
    var tmp0_other_with_cast = other instanceof ULong ? other.hd_1 : THROW_CCE();
    if (!$this.equals(tmp0_other_with_cast))
      return false;
    return true;
  }
  function ULong(data) {
    Companion_getInstance_10();
    this.hd_1 = data;
  }
  ULong.prototype.id = function (other) {
    return ULong__compareTo_impl_38i7tu(this.hd_1, other);
  };
  ULong.prototype.sb = function (other) {
    return ULong__compareTo_impl_38i7tu_0(this, other);
  };
  ULong.prototype.toString = function () {
    return ULong__toString_impl_f9au7k(this.hd_1);
  };
  ULong.prototype.hashCode = function () {
    return ULong__hashCode_impl_6hv2lb(this.hd_1);
  };
  ULong.prototype.equals = function (other) {
    return ULong__equals_impl_o0gnyb(this.hd_1, other);
  };
  ULong.$metadata$ = classMeta('ULong', [Comparable]);
  function toULong(_this__u8e3s4) {
    return _ULong___init__impl__c78o9k(toLong_0(_this__u8e3s4));
  }
  function _UShort___init__impl__jigrne(data) {
    return data;
  }
  function _UShort___get_data__impl__g0245($this) {
    return $this;
  }
  function UShort__toInt_impl_72bkww($this) {
    return _UShort___get_data__impl__g0245($this) & 65535;
  }
  function toUShort(_this__u8e3s4) {
    return _UShort___init__impl__jigrne(toShort(_this__u8e3s4));
  }
  function uintCompare(v1, v2) {
    return compareTo_0(v1 ^ IntCompanionObject_getInstance().c1_1, v2 ^ IntCompanionObject_getInstance().c1_1);
  }
  function ulongCompare(v1, v2) {
    Companion_getInstance_14();
    var tmp = v1.lb(new Long(0, -2147483648));
    Companion_getInstance_14();
    return tmp.m1(v2.lb(new Long(0, -2147483648)));
  }
  function ulongToString(v) {
    return ulongToString_0(v, 10);
  }
  function ulongToString_0(v, base) {
    if (v.m1(new Long(0, 0)) >= 0)
      return toString_3(v, base);
    var tmp$ret$0;
    {
      var tmp0_div = v.jd(1);
      tmp$ret$0 = tmp0_div.ia(toLong_0(base));
    }
    var quotient = tmp$ret$0.tb(1);
    var tmp$ret$1;
    {
      var tmp1_times = quotient;
      tmp$ret$1 = tmp1_times.ja(toLong_0(base));
    }
    var rem = v.la(tmp$ret$1);
    if (rem.m1(toLong_0(base)) >= 0) {
      var tmp$ret$2;
      {
        var tmp2_minus = rem;
        tmp$ret$2 = tmp2_minus.la(toLong_0(base));
      }
      rem = tmp$ret$2;
      var tmp$ret$3;
      {
        var tmp3_plus = quotient;
        tmp$ret$3 = tmp3_plus.ka(new Long(1, 0));
      }
      quotient = tmp$ret$3;
    }
    return toString_3(quotient, base) + toString_3(rem, base);
  }
  function Annotation() {
  }
  Annotation.$metadata$ = interfaceMeta('Annotation');
  function CharSequence() {
  }
  CharSequence.$metadata$ = interfaceMeta('CharSequence');
  function Comparable() {
  }
  Comparable.$metadata$ = interfaceMeta('Comparable');
  function Iterator() {
  }
  Iterator.$metadata$ = interfaceMeta('Iterator');
  function MutableIterator() {
  }
  MutableIterator.$metadata$ = interfaceMeta('MutableIterator', [Iterator]);
  function ListIterator() {
  }
  ListIterator.$metadata$ = interfaceMeta('ListIterator', [Iterator]);
  function MutableListIterator() {
  }
  MutableListIterator.$metadata$ = interfaceMeta('MutableListIterator', [ListIterator, MutableIterator]);
  function Number_0() {
  }
  Number_0.$metadata$ = classMeta('Number');
  function Unit() {
    Unit_instance = this;
  }
  Unit.prototype.toString = function () {
    return 'kotlin.Unit';
  };
  Unit.$metadata$ = objectMeta('Unit');
  var Unit_instance;
  function Unit_getInstance() {
    if (Unit_instance == null)
      new Unit();
    return Unit_instance;
  }
  function ByteCompanionObject() {
    ByteCompanionObject_instance = this;
    this.nd_1 = -128;
    this.od_1 = 127;
    this.pd_1 = 1;
    this.qd_1 = 8;
  }
  ByteCompanionObject.prototype.rd = function () {
    return this.nd_1;
  };
  ByteCompanionObject.prototype.sd = function () {
    return this.od_1;
  };
  ByteCompanionObject.prototype.td = function () {
    return this.pd_1;
  };
  ByteCompanionObject.prototype.ud = function () {
    return this.qd_1;
  };
  ByteCompanionObject.$metadata$ = objectMeta('ByteCompanionObject');
  Object.defineProperty(ByteCompanionObject.prototype, 'MIN_VALUE', {
    configurable: true,
    get: ByteCompanionObject.prototype.rd
  });
  Object.defineProperty(ByteCompanionObject.prototype, 'MAX_VALUE', {
    configurable: true,
    get: ByteCompanionObject.prototype.sd
  });
  Object.defineProperty(ByteCompanionObject.prototype, 'SIZE_BYTES', {
    configurable: true,
    get: ByteCompanionObject.prototype.td
  });
  Object.defineProperty(ByteCompanionObject.prototype, 'SIZE_BITS', {
    configurable: true,
    get: ByteCompanionObject.prototype.ud
  });
  var ByteCompanionObject_instance;
  function ByteCompanionObject_getInstance() {
    if (ByteCompanionObject_instance == null)
      new ByteCompanionObject();
    return ByteCompanionObject_instance;
  }
  function ShortCompanionObject() {
    ShortCompanionObject_instance = this;
    this.vd_1 = -32768;
    this.wd_1 = 32767;
    this.xd_1 = 2;
    this.yd_1 = 16;
  }
  ShortCompanionObject.prototype.rd = function () {
    return this.vd_1;
  };
  ShortCompanionObject.prototype.sd = function () {
    return this.wd_1;
  };
  ShortCompanionObject.prototype.td = function () {
    return this.xd_1;
  };
  ShortCompanionObject.prototype.ud = function () {
    return this.yd_1;
  };
  ShortCompanionObject.$metadata$ = objectMeta('ShortCompanionObject');
  Object.defineProperty(ShortCompanionObject.prototype, 'MIN_VALUE', {
    configurable: true,
    get: ShortCompanionObject.prototype.rd
  });
  Object.defineProperty(ShortCompanionObject.prototype, 'MAX_VALUE', {
    configurable: true,
    get: ShortCompanionObject.prototype.sd
  });
  Object.defineProperty(ShortCompanionObject.prototype, 'SIZE_BYTES', {
    configurable: true,
    get: ShortCompanionObject.prototype.td
  });
  Object.defineProperty(ShortCompanionObject.prototype, 'SIZE_BITS', {
    configurable: true,
    get: ShortCompanionObject.prototype.ud
  });
  var ShortCompanionObject_instance;
  function ShortCompanionObject_getInstance() {
    if (ShortCompanionObject_instance == null)
      new ShortCompanionObject();
    return ShortCompanionObject_instance;
  }
  function IntCompanionObject() {
    IntCompanionObject_instance = this;
    this.c1_1 = -2147483648;
    this.d1_1 = 2147483647;
    this.e1_1 = 4;
    this.f1_1 = 32;
  }
  IntCompanionObject.prototype.rd = function () {
    return this.c1_1;
  };
  IntCompanionObject.prototype.sd = function () {
    return this.d1_1;
  };
  IntCompanionObject.prototype.td = function () {
    return this.e1_1;
  };
  IntCompanionObject.prototype.ud = function () {
    return this.f1_1;
  };
  IntCompanionObject.$metadata$ = objectMeta('IntCompanionObject');
  Object.defineProperty(IntCompanionObject.prototype, 'MIN_VALUE', {
    configurable: true,
    get: IntCompanionObject.prototype.rd
  });
  Object.defineProperty(IntCompanionObject.prototype, 'MAX_VALUE', {
    configurable: true,
    get: IntCompanionObject.prototype.sd
  });
  Object.defineProperty(IntCompanionObject.prototype, 'SIZE_BYTES', {
    configurable: true,
    get: IntCompanionObject.prototype.td
  });
  Object.defineProperty(IntCompanionObject.prototype, 'SIZE_BITS', {
    configurable: true,
    get: IntCompanionObject.prototype.ud
  });
  var IntCompanionObject_instance;
  function IntCompanionObject_getInstance() {
    if (IntCompanionObject_instance == null)
      new IntCompanionObject();
    return IntCompanionObject_instance;
  }
  function FloatCompanionObject() {
    FloatCompanionObject_instance = this;
    this.zd_1 = 1.4E-45;
    this.ae_1 = 3.4028235E38;
    this.be_1 = Infinity;
    this.ce_1 = -Infinity;
    this.de_1 = NaN;
    this.ee_1 = 4;
    this.fe_1 = 32;
  }
  FloatCompanionObject.prototype.rd = function () {
    return this.zd_1;
  };
  FloatCompanionObject.prototype.sd = function () {
    return this.ae_1;
  };
  FloatCompanionObject.prototype.ge = function () {
    return this.be_1;
  };
  FloatCompanionObject.prototype.he = function () {
    return this.ce_1;
  };
  FloatCompanionObject.prototype.ie = function () {
    return this.de_1;
  };
  FloatCompanionObject.prototype.td = function () {
    return this.ee_1;
  };
  FloatCompanionObject.prototype.ud = function () {
    return this.fe_1;
  };
  FloatCompanionObject.$metadata$ = objectMeta('FloatCompanionObject');
  Object.defineProperty(FloatCompanionObject.prototype, 'MIN_VALUE', {
    configurable: true,
    get: FloatCompanionObject.prototype.rd
  });
  Object.defineProperty(FloatCompanionObject.prototype, 'MAX_VALUE', {
    configurable: true,
    get: FloatCompanionObject.prototype.sd
  });
  Object.defineProperty(FloatCompanionObject.prototype, 'POSITIVE_INFINITY', {
    configurable: true,
    get: FloatCompanionObject.prototype.ge
  });
  Object.defineProperty(FloatCompanionObject.prototype, 'NEGATIVE_INFINITY', {
    configurable: true,
    get: FloatCompanionObject.prototype.he
  });
  Object.defineProperty(FloatCompanionObject.prototype, 'NaN', {
    configurable: true,
    get: FloatCompanionObject.prototype.ie
  });
  Object.defineProperty(FloatCompanionObject.prototype, 'SIZE_BYTES', {
    configurable: true,
    get: FloatCompanionObject.prototype.td
  });
  Object.defineProperty(FloatCompanionObject.prototype, 'SIZE_BITS', {
    configurable: true,
    get: FloatCompanionObject.prototype.ud
  });
  var FloatCompanionObject_instance;
  function FloatCompanionObject_getInstance() {
    if (FloatCompanionObject_instance == null)
      new FloatCompanionObject();
    return FloatCompanionObject_instance;
  }
  function DoubleCompanionObject() {
    DoubleCompanionObject_instance = this;
    this.je_1 = 4.9E-324;
    this.ke_1 = 1.7976931348623157E308;
    this.le_1 = Infinity;
    this.me_1 = -Infinity;
    this.ne_1 = NaN;
    this.oe_1 = 8;
    this.pe_1 = 64;
  }
  DoubleCompanionObject.prototype.rd = function () {
    return this.je_1;
  };
  DoubleCompanionObject.prototype.sd = function () {
    return this.ke_1;
  };
  DoubleCompanionObject.prototype.ge = function () {
    return this.le_1;
  };
  DoubleCompanionObject.prototype.he = function () {
    return this.me_1;
  };
  DoubleCompanionObject.prototype.ie = function () {
    return this.ne_1;
  };
  DoubleCompanionObject.prototype.td = function () {
    return this.oe_1;
  };
  DoubleCompanionObject.prototype.ud = function () {
    return this.pe_1;
  };
  DoubleCompanionObject.$metadata$ = objectMeta('DoubleCompanionObject');
  Object.defineProperty(DoubleCompanionObject.prototype, 'MIN_VALUE', {
    configurable: true,
    get: DoubleCompanionObject.prototype.rd
  });
  Object.defineProperty(DoubleCompanionObject.prototype, 'MAX_VALUE', {
    configurable: true,
    get: DoubleCompanionObject.prototype.sd
  });
  Object.defineProperty(DoubleCompanionObject.prototype, 'POSITIVE_INFINITY', {
    configurable: true,
    get: DoubleCompanionObject.prototype.ge
  });
  Object.defineProperty(DoubleCompanionObject.prototype, 'NEGATIVE_INFINITY', {
    configurable: true,
    get: DoubleCompanionObject.prototype.he
  });
  Object.defineProperty(DoubleCompanionObject.prototype, 'NaN', {
    configurable: true,
    get: DoubleCompanionObject.prototype.ie
  });
  Object.defineProperty(DoubleCompanionObject.prototype, 'SIZE_BYTES', {
    configurable: true,
    get: DoubleCompanionObject.prototype.td
  });
  Object.defineProperty(DoubleCompanionObject.prototype, 'SIZE_BITS', {
    configurable: true,
    get: DoubleCompanionObject.prototype.ud
  });
  var DoubleCompanionObject_instance;
  function DoubleCompanionObject_getInstance() {
    if (DoubleCompanionObject_instance == null)
      new DoubleCompanionObject();
    return DoubleCompanionObject_instance;
  }
  function StringCompanionObject() {
    StringCompanionObject_instance = this;
  }
  StringCompanionObject.$metadata$ = objectMeta('StringCompanionObject');
  var StringCompanionObject_instance;
  function StringCompanionObject_getInstance() {
    if (StringCompanionObject_instance == null)
      new StringCompanionObject();
    return StringCompanionObject_instance;
  }
  function BooleanCompanionObject() {
    BooleanCompanionObject_instance = this;
  }
  BooleanCompanionObject.$metadata$ = objectMeta('BooleanCompanionObject');
  var BooleanCompanionObject_instance;
  function BooleanCompanionObject_getInstance() {
    if (BooleanCompanionObject_instance == null)
      new BooleanCompanionObject();
    return BooleanCompanionObject_instance;
  }
  function Comparator() {
  }
  Comparator.$metadata$ = interfaceMeta('Comparator');
  function toTypedArray(_this__u8e3s4) {
    return copyToArray(_this__u8e3s4);
  }
  function mapCapacity(expectedSize) {
    return expectedSize;
  }
  function mapOf_0(pair) {
    return hashMapOf([pair]);
  }
  function toSingletonMapOrSelf(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  function arrayCopy(source, destination, destinationOffset, startIndex, endIndex) {
    Companion_getInstance().g2(startIndex, endIndex, source.length);
    var rangeSize = endIndex - startIndex | 0;
    Companion_getInstance().g2(destinationOffset, destinationOffset + rangeSize | 0, destination.length);
    if (isView(destination) ? isView(source) : false) {
      var tmp$ret$0;
      {
        tmp$ret$0 = source;
      }
      var subrange = tmp$ret$0.subarray(startIndex, endIndex);
      var tmp$ret$1;
      {
        tmp$ret$1 = destination;
      }
      tmp$ret$1.set(subrange, destinationOffset);
    } else {
      if (!(source === destination) ? true : destinationOffset <= startIndex) {
        var inductionVariable = 0;
        if (inductionVariable < rangeSize)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            destination[destinationOffset + index | 0] = source[startIndex + index | 0];
          }
           while (inductionVariable < rangeSize);
      } else {
        var inductionVariable_0 = rangeSize - 1 | 0;
        if (0 <= inductionVariable_0)
          do {
            var index_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + -1 | 0;
            destination[destinationOffset + index_0 | 0] = source[startIndex + index_0 | 0];
          }
           while (0 <= inductionVariable_0);
      }
    }
  }
  function listOf_0(element) {
    return arrayListOf_0([element]);
  }
  function checkIndexOverflow(index) {
    if (index < 0) {
      throwIndexOverflow();
    }
    return index;
  }
  function setOf(element) {
    return hashSetOf([element]);
  }
  function sortWith(_this__u8e3s4, comparator) {
    collectionsSort(_this__u8e3s4, comparator);
  }
  function copyToArray(collection) {
    var tmp;
    var tmp$ret$0;
    {
      tmp$ret$0 = collection;
    }
    if (tmp$ret$0.toArray !== undefined) {
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          tmp$ret$1 = collection;
        }
        var tmp0_unsafeCast = tmp$ret$1.toArray();
        tmp$ret$2 = tmp0_unsafeCast;
      }
      tmp = tmp$ret$2;
    } else {
      var tmp$ret$4;
      {
        var tmp1_unsafeCast = copyToArrayImpl(collection);
        var tmp$ret$3;
        {
          tmp$ret$3 = tmp1_unsafeCast;
        }
        tmp$ret$4 = tmp$ret$3;
      }
      tmp = tmp$ret$4;
    }
    return tmp;
  }
  function collectionsSort(list, comparator) {
    if (list.m() <= 1)
      return Unit_getInstance();
    var array = copyToArray(list);
    sortArrayWith(array, comparator);
    var inductionVariable = 0;
    var last = array.length;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        list.t(i, array[i]);
      }
       while (inductionVariable < last);
  }
  function copyToArrayImpl(collection) {
    var tmp$ret$0;
    {
      tmp$ret$0 = [];
    }
    var array = tmp$ret$0;
    var iterator = collection.h();
    while (iterator.n()) {
      var tmp$ret$1;
      {
        tmp$ret$1 = array;
      }
      tmp$ret$1.push(iterator.o());
    }
    return array;
  }
  function brittleContainsOptimizationEnabled() {
    return false;
  }
  function AbstractMutableCollection$removeAll$lambda($elements) {
    return function (it) {
      return $elements.p(it);
    };
  }
  function AbstractMutableCollection() {
    AbstractCollection.call(this);
  }
  AbstractMutableCollection.prototype.c4 = function (element) {
    this.qe();
    var iterator = this.h();
    while (iterator.n()) {
      if (equals_1(iterator.o(), element)) {
        iterator.e4();
        return true;
      }
    }
    return false;
  };
  AbstractMutableCollection.prototype.o1 = function (elements) {
    this.qe();
    var modified = false;
    var tmp0_iterator = elements.h();
    while (tmp0_iterator.n()) {
      var element = tmp0_iterator.o();
      if (this.b(element))
        modified = true;
    }
    return modified;
  };
  AbstractMutableCollection.prototype.f4 = function (elements) {
    this.qe();
    var tmp = isInterface(this, MutableIterable) ? this : THROW_CCE();
    return removeAll(tmp, AbstractMutableCollection$removeAll$lambda(elements));
  };
  AbstractMutableCollection.prototype.t7 = function () {
    this.qe();
    var iterator = this.h();
    while (iterator.n()) {
      iterator.o();
      iterator.e4();
    }
  };
  AbstractMutableCollection.prototype.toJSON = function () {
    return this.toArray();
  };
  AbstractMutableCollection.prototype.qe = function () {
  };
  AbstractMutableCollection.$metadata$ = classMeta('AbstractMutableCollection', [MutableCollection], undefined, undefined, undefined, AbstractCollection.prototype);
  function IteratorImpl_0($outer) {
    this.te_1 = $outer;
    this.re_1 = 0;
    this.se_1 = -1;
  }
  IteratorImpl_0.prototype.ue = function (_set____db54di) {
    this.re_1 = _set____db54di;
  };
  IteratorImpl_0.prototype.n = function () {
    return this.re_1 < this.te_1.m();
  };
  IteratorImpl_0.prototype.o = function () {
    if (!this.n())
      throw NoSuchElementException_init_$Create$();
    var tmp = this;
    var tmp0_this = this;
    var tmp1 = tmp0_this.re_1;
    tmp0_this.re_1 = tmp1 + 1 | 0;
    tmp.se_1 = tmp1;
    return this.te_1.r(this.se_1);
  };
  IteratorImpl_0.prototype.e4 = function () {
    {
      var tmp0_check = !(this.se_1 === -1);
      {
      }
      if (!tmp0_check) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Call next() or previous() before removing element from the iterator.';
        }
        var message = tmp$ret$0;
        throw IllegalStateException_init_$Create$_0(toString_2(message));
      }
    }
    this.te_1.d4(this.se_1);
    this.re_1 = this.se_1;
    this.se_1 = -1;
  };
  IteratorImpl_0.$metadata$ = classMeta('IteratorImpl', [MutableIterator]);
  function ListIteratorImpl($outer, index) {
    this.ze_1 = $outer;
    IteratorImpl_0.call(this, $outer);
    Companion_getInstance().f2(index, this.ze_1.m());
    this.ue(index);
  }
  ListIteratorImpl.$metadata$ = classMeta('ListIteratorImpl', [MutableListIterator], undefined, undefined, undefined, IteratorImpl_0.prototype);
  function AbstractMutableList$removeAll$lambda($elements) {
    return function (it) {
      return $elements.p(it);
    };
  }
  function AbstractMutableList() {
    AbstractMutableCollection.call(this);
    this.ve_1 = 0;
  }
  AbstractMutableList.prototype.af = function (_set____db54di) {
    this.ve_1 = _set____db54di;
  };
  AbstractMutableList.prototype.bf = function () {
    return this.ve_1;
  };
  AbstractMutableList.prototype.b = function (element) {
    this.qe();
    this.cf(this.m(), element);
    return true;
  };
  AbstractMutableList.prototype.t7 = function () {
    this.qe();
    this.df(0, this.m());
  };
  AbstractMutableList.prototype.f4 = function (elements) {
    this.qe();
    return removeAll_0(this, AbstractMutableList$removeAll$lambda(elements));
  };
  AbstractMutableList.prototype.h = function () {
    return new IteratorImpl_0(this);
  };
  AbstractMutableList.prototype.p = function (element) {
    return this.u(element) >= 0;
  };
  AbstractMutableList.prototype.u = function (element) {
    var inductionVariable = 0;
    var last = get_lastIndex_3(this);
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (equals_1(this.r(index), element)) {
          return index;
        }
      }
       while (!(index === last));
    return -1;
  };
  AbstractMutableList.prototype.ef = function () {
    return this.ff(0);
  };
  AbstractMutableList.prototype.ff = function (index) {
    return new ListIteratorImpl(this, index);
  };
  AbstractMutableList.prototype.df = function (fromIndex, toIndex) {
    var iterator = this.ff(fromIndex);
    {
      var tmp0_repeat = toIndex - fromIndex | 0;
      {
      }
      var inductionVariable = 0;
      if (inductionVariable < tmp0_repeat)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          {
            iterator.o();
            iterator.e4();
          }
        }
         while (inductionVariable < tmp0_repeat);
    }
  };
  AbstractMutableList.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, List_0) : false))
      return false;
    return Companion_getInstance().j2(this, other);
  };
  AbstractMutableList.prototype.hashCode = function () {
    return Companion_getInstance().i2(this);
  };
  AbstractMutableList.$metadata$ = classMeta('AbstractMutableList', [MutableList_0], undefined, undefined, undefined, AbstractMutableCollection.prototype);
  function AbstractMutableMap$keys$1$iterator$1($entryIterator) {
    this.gf_1 = $entryIterator;
  }
  AbstractMutableMap$keys$1$iterator$1.prototype.n = function () {
    return this.gf_1.n();
  };
  AbstractMutableMap$keys$1$iterator$1.prototype.o = function () {
    return this.gf_1.o().l2();
  };
  AbstractMutableMap$keys$1$iterator$1.prototype.e4 = function () {
    return this.gf_1.e4();
  };
  AbstractMutableMap$keys$1$iterator$1.$metadata$ = classMeta(undefined, [MutableIterator]);
  function AbstractMutableMap$values$1$iterator$1($entryIterator) {
    this.hf_1 = $entryIterator;
  }
  AbstractMutableMap$values$1$iterator$1.prototype.n = function () {
    return this.hf_1.n();
  };
  AbstractMutableMap$values$1$iterator$1.prototype.o = function () {
    return this.hf_1.o().n2();
  };
  AbstractMutableMap$values$1$iterator$1.prototype.e4 = function () {
    return this.hf_1.e4();
  };
  AbstractMutableMap$values$1$iterator$1.$metadata$ = classMeta(undefined, [MutableIterator]);
  function SimpleEntry(key, value) {
    this.if_1 = key;
    this.jf_1 = value;
  }
  SimpleEntry.prototype.l2 = function () {
    return this.if_1;
  };
  SimpleEntry.prototype.n2 = function () {
    return this.jf_1;
  };
  SimpleEntry.prototype.kf = function (newValue) {
    var oldValue = this.jf_1;
    this.jf_1 = newValue;
    return oldValue;
  };
  SimpleEntry.prototype.hashCode = function () {
    return Companion_getInstance_0().o2(this);
  };
  SimpleEntry.prototype.toString = function () {
    return Companion_getInstance_0().p2(this);
  };
  SimpleEntry.prototype.equals = function (other) {
    return Companion_getInstance_0().q2(this, other);
  };
  SimpleEntry.$metadata$ = classMeta('SimpleEntry', [MutableEntry]);
  function AbstractEntrySet() {
    AbstractMutableSet.call(this);
  }
  AbstractEntrySet.prototype.p = function (element) {
    return this.lf(element);
  };
  AbstractEntrySet.prototype.c4 = function (element) {
    return this.mf(element);
  };
  AbstractEntrySet.$metadata$ = classMeta('AbstractEntrySet', undefined, undefined, undefined, undefined, AbstractMutableSet.prototype);
  function AbstractMutableMap$keys$1(this$0) {
    this.nf_1 = this$0;
    AbstractMutableSet.call(this);
  }
  AbstractMutableMap$keys$1.prototype.of = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on keys');
  };
  AbstractMutableMap$keys$1.prototype.b = function (element) {
    return this.of((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  AbstractMutableMap$keys$1.prototype.t7 = function () {
    this.nf_1.t7();
  };
  AbstractMutableMap$keys$1.prototype.s2 = function (element) {
    return this.nf_1.v2(element);
  };
  AbstractMutableMap$keys$1.prototype.p = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    return this.s2((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  AbstractMutableMap$keys$1.prototype.h = function () {
    var entryIterator = this.nf_1.a1().h();
    return new AbstractMutableMap$keys$1$iterator$1(entryIterator);
  };
  AbstractMutableMap$keys$1.prototype.tf = function (element) {
    this.qe();
    if (this.nf_1.v2(element)) {
      this.nf_1.tf(element);
      return true;
    }
    return false;
  };
  AbstractMutableMap$keys$1.prototype.c4 = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    return this.tf((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  AbstractMutableMap$keys$1.prototype.m = function () {
    return this.nf_1.m();
  };
  AbstractMutableMap$keys$1.prototype.qe = function () {
    return this.nf_1.qe();
  };
  AbstractMutableMap$keys$1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, AbstractMutableSet.prototype);
  function AbstractMutableMap$values$1(this$0) {
    this.uf_1 = this$0;
    AbstractMutableCollection.call(this);
  }
  AbstractMutableMap$values$1.prototype.vf = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on values');
  };
  AbstractMutableMap$values$1.prototype.b = function (element) {
    return this.vf((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  AbstractMutableMap$values$1.prototype.y2 = function (element) {
    return this.uf_1.z2(element);
  };
  AbstractMutableMap$values$1.prototype.p = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    return this.y2((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  AbstractMutableMap$values$1.prototype.h = function () {
    var entryIterator = this.uf_1.a1().h();
    return new AbstractMutableMap$values$1$iterator$1(entryIterator);
  };
  AbstractMutableMap$values$1.prototype.m = function () {
    return this.uf_1.m();
  };
  AbstractMutableMap$values$1.prototype.qe = function () {
    return this.uf_1.qe();
  };
  AbstractMutableMap$values$1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, AbstractMutableCollection.prototype);
  function AbstractMutableMap() {
    AbstractMap.call(this);
    this.rf_1 = null;
    this.sf_1 = null;
  }
  AbstractMutableMap.prototype.t7 = function () {
    this.a1().t7();
  };
  AbstractMutableMap.prototype.c3 = function () {
    if (this.rf_1 == null) {
      var tmp = this;
      tmp.rf_1 = new AbstractMutableMap$keys$1(this);
    }
    return ensureNotNull(this.rf_1);
  };
  AbstractMutableMap.prototype.b4 = function (from) {
    this.qe();
    var tmp$ret$0;
    {
      tmp$ret$0 = from.a1().h();
    }
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.n()) {
      var tmp1_loop_parameter = tmp0_iterator.o();
      var tmp$ret$1;
      {
        tmp$ret$1 = tmp1_loop_parameter.l2();
      }
      var key = tmp$ret$1;
      var tmp$ret$2;
      {
        tmp$ret$2 = tmp1_loop_parameter.n2();
      }
      var value = tmp$ret$2;
      this.a(key, value);
    }
  };
  AbstractMutableMap.prototype.d3 = function () {
    if (this.sf_1 == null) {
      var tmp = this;
      tmp.sf_1 = new AbstractMutableMap$values$1(this);
    }
    return ensureNotNull(this.sf_1);
  };
  AbstractMutableMap.prototype.tf = function (key) {
    this.qe();
    var iter = this.a1().h();
    while (iter.n()) {
      var entry = iter.o();
      var k = entry.l2();
      if (equals_1(key, k)) {
        var value = entry.n2();
        iter.e4();
        return value;
      }
    }
    return null;
  };
  AbstractMutableMap.prototype.qe = function () {
  };
  AbstractMutableMap.$metadata$ = classMeta('AbstractMutableMap', [MutableMap], undefined, undefined, undefined, AbstractMap.prototype);
  function AbstractMutableSet() {
    AbstractMutableCollection.call(this);
  }
  AbstractMutableSet.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, Set) : false))
      return false;
    return Companion_getInstance_1().f3(this, other);
  };
  AbstractMutableSet.prototype.hashCode = function () {
    return Companion_getInstance_1().e3(this);
  };
  AbstractMutableSet.$metadata$ = classMeta('AbstractMutableSet', [MutableSet], undefined, undefined, undefined, AbstractMutableCollection.prototype);
  function ArrayList_init_$Init$($this) {
    var tmp$ret$0;
    {
      tmp$ret$0 = [];
    }
    ArrayList.call($this, tmp$ret$0);
    return $this;
  }
  function ArrayList_init_$Create$() {
    return ArrayList_init_$Init$(Object.create(ArrayList.prototype));
  }
  function ArrayList_init_$Init$_0(initialCapacity, $this) {
    var tmp$ret$0;
    {
      tmp$ret$0 = [];
    }
    ArrayList.call($this, tmp$ret$0);
    return $this;
  }
  function ArrayList_init_$Create$_0(initialCapacity) {
    return ArrayList_init_$Init$_0(initialCapacity, Object.create(ArrayList.prototype));
  }
  function ArrayList_init_$Init$_1(elements, $this) {
    var tmp$ret$0;
    {
      tmp$ret$0 = copyToArray(elements);
    }
    ArrayList.call($this, tmp$ret$0);
    return $this;
  }
  function ArrayList_init_$Create$_1(elements) {
    return ArrayList_init_$Init$_1(elements, Object.create(ArrayList.prototype));
  }
  function rangeCheck($this, index) {
    var tmp$ret$0;
    {
      {
      }
      {
        Companion_getInstance().e2(index, $this.m());
      }
      tmp$ret$0 = index;
    }
    return tmp$ret$0;
  }
  function insertionRangeCheck($this, index) {
    var tmp$ret$0;
    {
      {
      }
      {
        Companion_getInstance().f2(index, $this.m());
      }
      tmp$ret$0 = index;
    }
    return tmp$ret$0;
  }
  function ArrayList(array) {
    AbstractMutableList.call(this);
    this.e_1 = array;
    this.f_1 = false;
  }
  ArrayList.prototype.wf = function (minCapacity) {
  };
  ArrayList.prototype.m = function () {
    return this.e_1.length;
  };
  ArrayList.prototype.r = function (index) {
    var tmp = this.e_1[rangeCheck(this, index)];
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  ArrayList.prototype.t = function (index, element) {
    this.qe();
    rangeCheck(this, index);
    var tmp$ret$0;
    {
      var tmp0_apply = this.e_1[index];
      {
      }
      {
        this.e_1[index] = element;
      }
      tmp$ret$0 = tmp0_apply;
    }
    var tmp = tmp$ret$0;
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  ArrayList.prototype.b = function (element) {
    this.qe();
    var tmp$ret$0;
    {
      var tmp0_asDynamic = this.e_1;
      tmp$ret$0 = tmp0_asDynamic;
    }
    tmp$ret$0.push(element);
    var tmp0_this = this;
    var tmp1 = tmp0_this.bf();
    tmp0_this.af(tmp1 + 1 | 0);
    return true;
  };
  ArrayList.prototype.cf = function (index, element) {
    this.qe();
    var tmp$ret$0;
    {
      var tmp0_asDynamic = this.e_1;
      tmp$ret$0 = tmp0_asDynamic;
    }
    tmp$ret$0.splice(insertionRangeCheck(this, index), 0, element);
    var tmp0_this = this;
    var tmp1 = tmp0_this.bf();
    tmp0_this.af(tmp1 + 1 | 0);
  };
  ArrayList.prototype.o1 = function (elements) {
    this.qe();
    if (elements.q())
      return false;
    var tmp0_this = this;
    var tmp = tmp0_this;
    var tmp$ret$2;
    {
      var tmp0_plus = tmp0_this.e_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = copyToArray(elements);
      }
      var tmp1_plus = tmp$ret$0;
      var tmp$ret$1;
      {
        tmp$ret$1 = tmp0_plus;
      }
      tmp$ret$2 = tmp$ret$1.concat(tmp1_plus);
    }
    tmp.e_1 = tmp$ret$2;
    var tmp1_this = this;
    var tmp2 = tmp1_this.bf();
    tmp1_this.af(tmp2 + 1 | 0);
    return true;
  };
  ArrayList.prototype.d4 = function (index) {
    this.qe();
    rangeCheck(this, index);
    var tmp0_this = this;
    var tmp1 = tmp0_this.bf();
    tmp0_this.af(tmp1 + 1 | 0);
    var tmp;
    if (index === get_lastIndex_3(this)) {
      var tmp$ret$0;
      {
        var tmp0_asDynamic = this.e_1;
        tmp$ret$0 = tmp0_asDynamic;
      }
      tmp = tmp$ret$0.pop();
    } else {
      var tmp$ret$1;
      {
        var tmp1_asDynamic = this.e_1;
        tmp$ret$1 = tmp1_asDynamic;
      }
      tmp = tmp$ret$1.splice(index, 1)[0];
    }
    return tmp;
  };
  ArrayList.prototype.c4 = function (element) {
    this.qe();
    var inductionVariable = 0;
    var last = this.e_1.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (equals_1(this.e_1[index], element)) {
          var tmp$ret$0;
          {
            var tmp0_asDynamic = this.e_1;
            tmp$ret$0 = tmp0_asDynamic;
          }
          tmp$ret$0.splice(index, 1);
          var tmp1_this = this;
          var tmp2 = tmp1_this.bf();
          tmp1_this.af(tmp2 + 1 | 0);
          return true;
        }
      }
       while (inductionVariable <= last);
    return false;
  };
  ArrayList.prototype.df = function (fromIndex, toIndex) {
    this.qe();
    var tmp0_this = this;
    var tmp1 = tmp0_this.bf();
    tmp0_this.af(tmp1 + 1 | 0);
    var tmp$ret$0;
    {
      var tmp0_asDynamic = this.e_1;
      tmp$ret$0 = tmp0_asDynamic;
    }
    tmp$ret$0.splice(fromIndex, toIndex - fromIndex | 0);
  };
  ArrayList.prototype.t7 = function () {
    this.qe();
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = [];
    }
    tmp.e_1 = tmp$ret$0;
    var tmp0_this = this;
    var tmp1 = tmp0_this.bf();
    tmp0_this.af(tmp1 + 1 | 0);
  };
  ArrayList.prototype.u = function (element) {
    return indexOf(this.e_1, element);
  };
  ArrayList.prototype.toString = function () {
    return arrayToString(this.e_1);
  };
  ArrayList.prototype.e6 = function () {
    return [].slice.call(this.e_1);
  };
  ArrayList.prototype.toArray = function () {
    return this.e6();
  };
  ArrayList.prototype.qe = function () {
    if (this.f_1)
      throw UnsupportedOperationException_init_$Create$();
  };
  ArrayList.$metadata$ = classMeta('ArrayList', [MutableList_0, RandomAccess], undefined, undefined, undefined, AbstractMutableList.prototype);
  var _stableSortingIsSupported;
  function sortArrayWith(array, comparator) {
    if (getStableSortingIsSupported()) {
      var comparison = sortArrayWith$lambda(comparator);
      var tmp$ret$0;
      {
        tmp$ret$0 = array;
      }
      tmp$ret$0.sort(comparison);
    } else {
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          tmp$ret$1 = array;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      mergeSort(tmp$ret$2, 0, get_lastIndex(array), comparator);
    }
  }
  function getStableSortingIsSupported() {
    var tmp0_safe_receiver = _stableSortingIsSupported;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        return tmp0_safe_receiver;
      }
    }
    _stableSortingIsSupported = false;
    var tmp$ret$1;
    {
      var tmp0_unsafeCast = [];
      tmp$ret$1 = tmp0_unsafeCast;
    }
    var array = tmp$ret$1;
    var inductionVariable = 0;
    if (inductionVariable < 600)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$2;
        {
          tmp$ret$2 = array;
        }
        tmp$ret$2.push(index);
      }
       while (inductionVariable < 600);
    var comparison = getStableSortingIsSupported$lambda();
    var tmp$ret$3;
    {
      tmp$ret$3 = array;
    }
    tmp$ret$3.sort(comparison);
    var inductionVariable_0 = 1;
    var last = array.length;
    if (inductionVariable_0 < last)
      do {
        var index_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var a = array[index_0 - 1 | 0];
        var b = array[index_0];
        if ((a & 3) === (b & 3) ? a >= b : false)
          return false;
      }
       while (inductionVariable_0 < last);
    _stableSortingIsSupported = true;
    return true;
  }
  function mergeSort(array, start, endInclusive, comparator) {
    var tmp$ret$2;
    {
      var tmp$ret$0;
      {
        var tmp0_arrayOfNulls = array.length;
        tmp$ret$0 = fillArrayVal(Array(tmp0_arrayOfNulls), null);
      }
      var tmp1_unsafeCast = tmp$ret$0;
      var tmp$ret$1;
      {
        tmp$ret$1 = tmp1_unsafeCast;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    var buffer = tmp$ret$2;
    var result = mergeSort_0(array, buffer, start, endInclusive, comparator);
    if (!(result === array)) {
      var inductionVariable = start;
      if (inductionVariable <= endInclusive)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          array[i] = result[i];
        }
         while (!(i === endInclusive));
    }
  }
  function mergeSort_0(array, buffer, start, end, comparator) {
    if (start === end) {
      return array;
    }
    var median = (start + end | 0) / 2 | 0;
    var left = mergeSort_0(array, buffer, start, median, comparator);
    var right = mergeSort_0(array, buffer, median + 1 | 0, end, comparator);
    var target = left === buffer ? array : buffer;
    var leftIndex = start;
    var rightIndex = median + 1 | 0;
    var inductionVariable = start;
    if (inductionVariable <= end)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (leftIndex <= median ? rightIndex <= end : false) {
          var leftValue = left[leftIndex];
          var rightValue = right[rightIndex];
          if (comparator.compare(leftValue, rightValue) <= 0) {
            target[i] = leftValue;
            var tmp1 = leftIndex;
            leftIndex = tmp1 + 1 | 0;
          } else {
            target[i] = rightValue;
            var tmp2 = rightIndex;
            rightIndex = tmp2 + 1 | 0;
          }
        } else if (leftIndex <= median) {
          target[i] = left[leftIndex];
          var tmp3 = leftIndex;
          leftIndex = tmp3 + 1 | 0;
        } else {
          target[i] = right[rightIndex];
          var tmp4 = rightIndex;
          rightIndex = tmp4 + 1 | 0;
        }
      }
       while (!(i === end));
    return target;
  }
  function sortArray(array) {
    if (getStableSortingIsSupported()) {
      var comparison = sortArray$lambda();
      var tmp$ret$0;
      {
        tmp$ret$0 = array;
      }
      tmp$ret$0.sort(comparison);
    } else {
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          tmp$ret$1 = array;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      mergeSort(tmp$ret$2, 0, get_lastIndex(array), naturalOrder());
    }
  }
  function sortArrayWith$lambda($comparator) {
    return function (a, b) {
      return $comparator.compare(a, b);
    };
  }
  function getStableSortingIsSupported$lambda() {
    return function (a, b) {
      return (a & 3) - (b & 3) | 0;
    };
  }
  function sortArray$lambda() {
    return function (a, b) {
      return compareTo_0(a, b);
    };
  }
  function HashCode() {
    HashCode_instance = this;
  }
  HashCode.prototype.xf = function (value1, value2) {
    return equals_1(value1, value2);
  };
  HashCode.prototype.yf = function (value) {
    var tmp0_safe_receiver = value;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode_0(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
  };
  HashCode.$metadata$ = objectMeta('HashCode', [EqualityComparator]);
  var HashCode_instance;
  function HashCode_getInstance() {
    if (HashCode_instance == null)
      new HashCode();
    return HashCode_instance;
  }
  function EqualityComparator() {
  }
  EqualityComparator.$metadata$ = interfaceMeta('EqualityComparator');
  function EntrySet($outer) {
    this.zf_1 = $outer;
    AbstractEntrySet.call(this);
  }
  EntrySet.prototype.ag = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on entries');
  };
  EntrySet.prototype.b = function (element) {
    return this.ag((!(element == null) ? isInterface(element, MutableEntry) : false) ? element : THROW_CCE());
  };
  EntrySet.prototype.t7 = function () {
    this.zf_1.t7();
  };
  EntrySet.prototype.lf = function (element) {
    return this.zf_1.a3(element);
  };
  EntrySet.prototype.h = function () {
    return this.zf_1.fg_1.h();
  };
  EntrySet.prototype.mf = function (element) {
    if (contains_1(this, element)) {
      this.zf_1.tf(element.l2());
      return true;
    }
    return false;
  };
  EntrySet.prototype.m = function () {
    return this.zf_1.m();
  };
  EntrySet.$metadata$ = classMeta('EntrySet', undefined, undefined, undefined, undefined, AbstractEntrySet.prototype);
  function HashMap_init_$Init$(internalMap, $this) {
    AbstractMutableMap.call($this);
    HashMap.call($this);
    $this.fg_1 = internalMap;
    $this.gg_1 = internalMap.ig();
    return $this;
  }
  function HashMap_init_$Init$_0($this) {
    HashMap_init_$Init$(new InternalHashCodeMap(HashCode_getInstance()), $this);
    return $this;
  }
  function HashMap_init_$Create$() {
    return HashMap_init_$Init$_0(Object.create(HashMap.prototype));
  }
  function HashMap_init_$Init$_1(initialCapacity, loadFactor, $this) {
    HashMap_init_$Init$_0($this);
    {
      var tmp0_require = initialCapacity >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Negative initial capacity: ' + initialCapacity;
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    {
      var tmp1_require = loadFactor >= 0;
      {
      }
      if (!tmp1_require) {
        var tmp$ret$1;
        {
          tmp$ret$1 = 'Non-positive load factor: ' + loadFactor;
        }
        var message_0 = tmp$ret$1;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message_0));
      }
    }
    return $this;
  }
  function HashMap_init_$Create$_0(initialCapacity, loadFactor) {
    return HashMap_init_$Init$_1(initialCapacity, loadFactor, Object.create(HashMap.prototype));
  }
  function HashMap_init_$Init$_2(initialCapacity, $this) {
    HashMap_init_$Init$_1(initialCapacity, 0.0, $this);
    return $this;
  }
  function HashMap_init_$Create$_1(initialCapacity) {
    return HashMap_init_$Init$_2(initialCapacity, Object.create(HashMap.prototype));
  }
  function HashMap_init_$Init$_3(original, $this) {
    HashMap_init_$Init$_0($this);
    $this.b4(original);
    return $this;
  }
  function HashMap_init_$Create$_2(original) {
    return HashMap_init_$Init$_3(original, Object.create(HashMap.prototype));
  }
  HashMap.prototype.t7 = function () {
    this.fg_1.t7();
  };
  HashMap.prototype.v2 = function (key) {
    return this.fg_1.s2(key);
  };
  HashMap.prototype.z2 = function (value) {
    var tmp$ret$0;
    $l$block_0: {
      var tmp0_any = this.fg_1;
      var tmp;
      if (isInterface(tmp0_any, Collection)) {
        tmp = tmp0_any.q();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_any.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        var tmp$ret$1;
        {
          tmp$ret$1 = this.gg_1.xf(element.n2(), value);
        }
        if (tmp$ret$1) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    return tmp$ret$0;
  };
  HashMap.prototype.a1 = function () {
    if (this.hg_1 == null) {
      this.hg_1 = this.jg();
    }
    return ensureNotNull(this.hg_1);
  };
  HashMap.prototype.jg = function () {
    return new EntrySet(this);
  };
  HashMap.prototype.b3 = function (key) {
    return this.fg_1.b3(key);
  };
  HashMap.prototype.a = function (key, value) {
    return this.fg_1.a(key, value);
  };
  HashMap.prototype.tf = function (key) {
    return this.fg_1.tf(key);
  };
  HashMap.prototype.m = function () {
    return this.fg_1.m();
  };
  function HashMap() {
    this.hg_1 = null;
  }
  HashMap.$metadata$ = classMeta('HashMap', [MutableMap], undefined, undefined, undefined, AbstractMutableMap.prototype);
  function HashSet_init_$Init$($this) {
    AbstractMutableSet.call($this);
    HashSet.call($this);
    $this.kg_1 = HashMap_init_$Create$();
    return $this;
  }
  function HashSet_init_$Create$() {
    return HashSet_init_$Init$(Object.create(HashSet.prototype));
  }
  function HashSet_init_$Init$_0(elements, $this) {
    AbstractMutableSet.call($this);
    HashSet.call($this);
    $this.kg_1 = HashMap_init_$Create$_1(elements.m());
    $this.o1(elements);
    return $this;
  }
  function HashSet_init_$Create$_0(elements) {
    return HashSet_init_$Init$_0(elements, Object.create(HashSet.prototype));
  }
  function HashSet_init_$Init$_1(initialCapacity, loadFactor, $this) {
    AbstractMutableSet.call($this);
    HashSet.call($this);
    $this.kg_1 = HashMap_init_$Create$_0(initialCapacity, loadFactor);
    return $this;
  }
  function HashSet_init_$Init$_2(initialCapacity, $this) {
    HashSet_init_$Init$_1(initialCapacity, 0.0, $this);
    return $this;
  }
  function HashSet_init_$Create$_1(initialCapacity) {
    return HashSet_init_$Init$_2(initialCapacity, Object.create(HashSet.prototype));
  }
  function HashSet_init_$Init$_3(map, $this) {
    AbstractMutableSet.call($this);
    HashSet.call($this);
    $this.kg_1 = map;
    return $this;
  }
  HashSet.prototype.lg = function () {
    return this.kg_1;
  };
  HashSet.prototype.b = function (element) {
    var old = this.kg_1.a(element, this);
    return old == null;
  };
  HashSet.prototype.t7 = function () {
    this.kg_1.t7();
  };
  HashSet.prototype.p = function (element) {
    return this.kg_1.v2(element);
  };
  HashSet.prototype.q = function () {
    return this.kg_1.q();
  };
  HashSet.prototype.h = function () {
    return this.kg_1.c3().h();
  };
  HashSet.prototype.c4 = function (element) {
    return !(this.kg_1.tf(element) == null);
  };
  HashSet.prototype.m = function () {
    return this.kg_1.m();
  };
  function HashSet() {
  }
  HashSet.$metadata$ = classMeta('HashSet', [MutableSet], undefined, undefined, undefined, AbstractMutableSet.prototype);
  function computeNext($this) {
    if ($this.pg_1 != null ? $this.qg_1 : false) {
      var tmp$ret$0;
      {
        var tmp0_unsafeCast = $this.pg_1;
        tmp$ret$0 = tmp0_unsafeCast;
      }
      var chainSize = tmp$ret$0.length;
      var tmp0_this = $this;
      tmp0_this.rg_1 = tmp0_this.rg_1 + 1 | 0;
      if (tmp0_this.rg_1 < chainSize)
        return 0;
    }
    var tmp1_this = $this;
    tmp1_this.og_1 = tmp1_this.og_1 + 1 | 0;
    if (tmp1_this.og_1 < $this.ng_1.length) {
      $this.pg_1 = $this.tg_1.vg_1[$this.ng_1[$this.og_1]];
      var tmp = $this;
      var tmp_0 = $this.pg_1;
      tmp.qg_1 = !(tmp_0 == null) ? isArray(tmp_0) : false;
      $this.rg_1 = 0;
      return 0;
    } else {
      $this.pg_1 = null;
      return 1;
    }
  }
  function getEntry($this, key) {
    var tmp0_elvis_lhs = getChainOrEntryOrNull($this, $this.ug_1.yf(key));
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var chainOrEntry = tmp;
    if (!(!(chainOrEntry == null) ? isArray(chainOrEntry) : false)) {
      var entry = chainOrEntry;
      if ($this.ug_1.xf(entry.l2(), key)) {
        return entry;
      } else {
        return null;
      }
    } else {
      var chain = chainOrEntry;
      return findEntryInChain(chain, $this, key);
    }
  }
  function findEntryInChain(_this__u8e3s4, $this, key) {
    var tmp$ret$1;
    $l$block: {
      var indexedObject = _this__u8e3s4;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var element = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        {
          tmp$ret$0 = $this.ug_1.xf(element.l2(), key);
        }
        if (tmp$ret$0) {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      tmp$ret$1 = null;
    }
    return tmp$ret$1;
  }
  function getChainOrEntryOrNull($this, hashCode) {
    var chainOrEntry = $this.vg_1[hashCode];
    return chainOrEntry === undefined ? null : chainOrEntry;
  }
  function InternalHashCodeMap$iterator$1(this$0) {
    this.tg_1 = this$0;
    this.mg_1 = -1;
    this.ng_1 = Object.keys(this$0.vg_1);
    this.og_1 = -1;
    this.pg_1 = null;
    this.qg_1 = false;
    this.rg_1 = -1;
    this.sg_1 = null;
  }
  InternalHashCodeMap$iterator$1.prototype.n = function () {
    if (this.mg_1 === -1)
      this.mg_1 = computeNext(this);
    return this.mg_1 === 0;
  };
  InternalHashCodeMap$iterator$1.prototype.o = function () {
    if (!this.n())
      throw NoSuchElementException_init_$Create$();
    var tmp;
    if (this.qg_1) {
      var tmp$ret$0;
      {
        var tmp0_unsafeCast = this.pg_1;
        tmp$ret$0 = tmp0_unsafeCast;
      }
      tmp = tmp$ret$0[this.rg_1];
    } else {
      var tmp$ret$1;
      {
        var tmp1_unsafeCast = this.pg_1;
        tmp$ret$1 = tmp1_unsafeCast;
      }
      tmp = tmp$ret$1;
    }
    var lastEntry = tmp;
    this.sg_1 = lastEntry;
    this.mg_1 = -1;
    return lastEntry;
  };
  InternalHashCodeMap$iterator$1.prototype.e4 = function () {
    var tmp$ret$2;
    {
      var tmp0_checkNotNull = this.sg_1;
      {
      }
      var tmp$ret$1;
      $l$block: {
        {
        }
        if (tmp0_checkNotNull == null) {
          var tmp$ret$0;
          {
            tmp$ret$0 = 'Required value was null.';
          }
          var message = tmp$ret$0;
          throw IllegalStateException_init_$Create$_0(toString_2(message));
        } else {
          tmp$ret$1 = tmp0_checkNotNull;
          break $l$block;
        }
      }
      tmp$ret$2 = tmp$ret$1;
    }
    this.tg_1.tf(ensureNotNull(this.sg_1).l2());
    this.sg_1 = null;
    var tmp0_this = this;
    var tmp1 = tmp0_this.rg_1;
    tmp0_this.rg_1 = tmp1 - 1 | 0;
  };
  InternalHashCodeMap$iterator$1.$metadata$ = classMeta(undefined, [MutableIterator]);
  function InternalHashCodeMap(equality) {
    this.ug_1 = equality;
    this.vg_1 = this.xg();
    this.wg_1 = 0;
  }
  InternalHashCodeMap.prototype.ig = function () {
    return this.ug_1;
  };
  InternalHashCodeMap.prototype.m = function () {
    return this.wg_1;
  };
  InternalHashCodeMap.prototype.a = function (key, value) {
    var hashCode = this.ug_1.yf(key);
    var chainOrEntry = getChainOrEntryOrNull(this, hashCode);
    if (chainOrEntry == null) {
      this.vg_1[hashCode] = new SimpleEntry(key, value);
    } else {
      if (!(!(chainOrEntry == null) ? isArray(chainOrEntry) : false)) {
        var entry = chainOrEntry;
        if (this.ug_1.xf(entry.l2(), key)) {
          return entry.kf(value);
        } else {
          var tmp$ret$2;
          {
            var tmp0_arrayOf = [entry, new SimpleEntry(key, value)];
            var tmp$ret$1;
            {
              var tmp$ret$0;
              {
                tmp$ret$0 = tmp0_arrayOf;
              }
              tmp$ret$1 = tmp$ret$0;
            }
            tmp$ret$2 = tmp$ret$1;
          }
          this.vg_1[hashCode] = tmp$ret$2;
          var tmp0_this = this;
          var tmp1 = tmp0_this.wg_1;
          tmp0_this.wg_1 = tmp1 + 1 | 0;
          return null;
        }
      } else {
        var chain = chainOrEntry;
        var entry_0 = findEntryInChain(chain, this, key);
        if (!(entry_0 == null)) {
          return entry_0.kf(value);
        }
        var tmp$ret$3;
        {
          tmp$ret$3 = chain;
        }
        tmp$ret$3.push(new SimpleEntry(key, value));
      }
    }
    var tmp2_this = this;
    var tmp3 = tmp2_this.wg_1;
    tmp2_this.wg_1 = tmp3 + 1 | 0;
    return null;
  };
  InternalHashCodeMap.prototype.tf = function (key) {
    var hashCode = this.ug_1.yf(key);
    var tmp0_elvis_lhs = getChainOrEntryOrNull(this, hashCode);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var chainOrEntry = tmp;
    if (!(!(chainOrEntry == null) ? isArray(chainOrEntry) : false)) {
      var entry = chainOrEntry;
      if (this.ug_1.xf(entry.l2(), key)) {
        jsDeleteProperty(this.vg_1, hashCode);
        var tmp1_this = this;
        var tmp2 = tmp1_this.wg_1;
        tmp1_this.wg_1 = tmp2 - 1 | 0;
        return entry.n2();
      } else {
        return null;
      }
    } else {
      var chain = chainOrEntry;
      var inductionVariable = 0;
      var last = chain.length - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var entry_0 = chain[index];
          if (this.ug_1.xf(key, entry_0.l2())) {
            if (chain.length === 1) {
              var tmp$ret$0;
              {
                tmp$ret$0 = chain;
              }
              tmp$ret$0.length = 0;
              jsDeleteProperty(this.vg_1, hashCode);
            } else {
              var tmp$ret$1;
              {
                tmp$ret$1 = chain;
              }
              tmp$ret$1.splice(index, 1);
            }
            var tmp4_this = this;
            var tmp5 = tmp4_this.wg_1;
            tmp4_this.wg_1 = tmp5 - 1 | 0;
            return entry_0.n2();
          }
        }
         while (inductionVariable <= last);
    }
    return null;
  };
  InternalHashCodeMap.prototype.t7 = function () {
    this.vg_1 = this.xg();
    this.wg_1 = 0;
  };
  InternalHashCodeMap.prototype.s2 = function (key) {
    return !(getEntry(this, key) == null);
  };
  InternalHashCodeMap.prototype.b3 = function (key) {
    var tmp0_safe_receiver = getEntry(this, key);
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.n2();
  };
  InternalHashCodeMap.prototype.h = function () {
    return new InternalHashCodeMap$iterator$1(this);
  };
  InternalHashCodeMap.$metadata$ = classMeta('InternalHashCodeMap', [InternalMap]);
  function InternalMap() {
  }
  InternalMap.$metadata$ = interfaceMeta('InternalMap', [MutableIterable]);
  function EntryIterator($outer) {
    this.ah_1 = $outer;
    this.yg_1 = null;
    this.zg_1 = null;
    this.zg_1 = this.ah_1.lh_1.ih_1;
  }
  EntryIterator.prototype.n = function () {
    return !(this.zg_1 === null);
  };
  EntryIterator.prototype.o = function () {
    if (!this.n())
      throw NoSuchElementException_init_$Create$();
    var current = ensureNotNull(this.zg_1);
    this.yg_1 = current;
    var tmp = this;
    var tmp$ret$1;
    {
      var tmp0_takeIf = current.oh_1;
      {
      }
      var tmp_0;
      var tmp$ret$0;
      {
        tmp$ret$0 = !(tmp0_takeIf === this.ah_1.lh_1.ih_1);
      }
      if (tmp$ret$0) {
        tmp_0 = tmp0_takeIf;
      } else {
        tmp_0 = null;
      }
      tmp$ret$1 = tmp_0;
    }
    tmp.zg_1 = tmp$ret$1;
    return current;
  };
  EntryIterator.prototype.e4 = function () {
    {
      var tmp0_check = !(this.yg_1 == null);
      {
      }
      {
        {
        }
        if (!tmp0_check) {
          var tmp$ret$0;
          {
            tmp$ret$0 = 'Check failed.';
          }
          var message = tmp$ret$0;
          throw IllegalStateException_init_$Create$_0(toString_2(message));
        }
      }
    }
    this.ah_1.qe();
    remove(ensureNotNull(this.yg_1), this.ah_1.lh_1);
    this.ah_1.lh_1.jh_1.tf(ensureNotNull(this.yg_1).l2());
    this.yg_1 = null;
  };
  EntryIterator.$metadata$ = classMeta('EntryIterator', [MutableIterator]);
  function ChainEntry($outer, key, value) {
    this.qh_1 = $outer;
    SimpleEntry.call(this, key, value);
    this.oh_1 = null;
    this.ph_1 = null;
  }
  ChainEntry.prototype.kf = function (newValue) {
    this.qh_1.qe();
    return SimpleEntry.prototype.kf.call(this, newValue);
  };
  ChainEntry.$metadata$ = classMeta('ChainEntry', undefined, undefined, undefined, undefined, SimpleEntry.prototype);
  function EntrySet_0($outer) {
    this.lh_1 = $outer;
    AbstractEntrySet.call(this);
  }
  EntrySet_0.prototype.ag = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on entries');
  };
  EntrySet_0.prototype.b = function (element) {
    return this.ag((!(element == null) ? isInterface(element, MutableEntry) : false) ? element : THROW_CCE());
  };
  EntrySet_0.prototype.t7 = function () {
    this.lh_1.t7();
  };
  EntrySet_0.prototype.lf = function (element) {
    return this.lh_1.a3(element);
  };
  EntrySet_0.prototype.h = function () {
    return new EntryIterator(this);
  };
  EntrySet_0.prototype.mf = function (element) {
    this.qe();
    if (contains_1(this, element)) {
      this.lh_1.tf(element.l2());
      return true;
    }
    return false;
  };
  EntrySet_0.prototype.m = function () {
    return this.lh_1.m();
  };
  EntrySet_0.prototype.qe = function () {
    return this.lh_1.qe();
  };
  EntrySet_0.$metadata$ = classMeta('EntrySet', undefined, undefined, undefined, undefined, AbstractEntrySet.prototype);
  function addToEnd(_this__u8e3s4, $this) {
    {
      var tmp0_check = _this__u8e3s4.oh_1 == null ? _this__u8e3s4.ph_1 == null : false;
      {
      }
      {
        {
        }
        if (!tmp0_check) {
          var tmp$ret$0;
          {
            tmp$ret$0 = 'Check failed.';
          }
          var message = tmp$ret$0;
          throw IllegalStateException_init_$Create$_0(toString_2(message));
        }
      }
    }
    var _head = $this.ih_1;
    if (_head == null) {
      $this.ih_1 = _this__u8e3s4;
      _this__u8e3s4.oh_1 = _this__u8e3s4;
      _this__u8e3s4.ph_1 = _this__u8e3s4;
    } else {
      var tmp$ret$3;
      {
        var tmp1_checkNotNull = _head.ph_1;
        {
        }
        var tmp$ret$2;
        $l$block: {
          {
          }
          if (tmp1_checkNotNull == null) {
            var tmp$ret$1;
            {
              tmp$ret$1 = 'Required value was null.';
            }
            var message_0 = tmp$ret$1;
            throw IllegalStateException_init_$Create$_0(toString_2(message_0));
          } else {
            tmp$ret$2 = tmp1_checkNotNull;
            break $l$block;
          }
        }
        tmp$ret$3 = tmp$ret$2;
      }
      var _tail = tmp$ret$3;
      _this__u8e3s4.ph_1 = _tail;
      _this__u8e3s4.oh_1 = _head;
      _head.ph_1 = _this__u8e3s4;
      _tail.oh_1 = _this__u8e3s4;
    }
  }
  function remove(_this__u8e3s4, $this) {
    if (_this__u8e3s4.oh_1 === _this__u8e3s4) {
      $this.ih_1 = null;
    } else {
      if ($this.ih_1 === _this__u8e3s4) {
        $this.ih_1 = _this__u8e3s4.oh_1;
      }
      ensureNotNull(_this__u8e3s4.oh_1).ph_1 = _this__u8e3s4.ph_1;
      ensureNotNull(_this__u8e3s4.ph_1).oh_1 = _this__u8e3s4.oh_1;
    }
    _this__u8e3s4.oh_1 = null;
    _this__u8e3s4.ph_1 = null;
  }
  function LinkedHashMap_init_$Init$($this) {
    HashMap_init_$Init$_0($this);
    LinkedHashMap.call($this);
    $this.jh_1 = HashMap_init_$Create$();
    return $this;
  }
  function LinkedHashMap_init_$Create$() {
    return LinkedHashMap_init_$Init$(Object.create(LinkedHashMap.prototype));
  }
  function LinkedHashMap_init_$Init$_0(initialCapacity, loadFactor, $this) {
    HashMap_init_$Init$_1(initialCapacity, loadFactor, $this);
    LinkedHashMap.call($this);
    $this.jh_1 = HashMap_init_$Create$();
    return $this;
  }
  function LinkedHashMap_init_$Create$_0(initialCapacity, loadFactor) {
    return LinkedHashMap_init_$Init$_0(initialCapacity, loadFactor, Object.create(LinkedHashMap.prototype));
  }
  function LinkedHashMap_init_$Init$_1(initialCapacity, $this) {
    LinkedHashMap_init_$Init$_0(initialCapacity, 0.0, $this);
    return $this;
  }
  function LinkedHashMap_init_$Create$_1(initialCapacity) {
    return LinkedHashMap_init_$Init$_1(initialCapacity, Object.create(LinkedHashMap.prototype));
  }
  function LinkedHashMap_init_$Init$_2(original, $this) {
    HashMap_init_$Init$_0($this);
    LinkedHashMap.call($this);
    $this.jh_1 = HashMap_init_$Create$();
    $this.b4(original);
    return $this;
  }
  function LinkedHashMap_init_$Create$_2(original) {
    return LinkedHashMap_init_$Init$_2(original, Object.create(LinkedHashMap.prototype));
  }
  LinkedHashMap.prototype.t7 = function () {
    this.qe();
    this.jh_1.t7();
    this.ih_1 = null;
  };
  LinkedHashMap.prototype.v2 = function (key) {
    return this.jh_1.v2(key);
  };
  LinkedHashMap.prototype.z2 = function (value) {
    var tmp0_elvis_lhs = this.ih_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var node = tmp;
    do {
      if (equals_1(node.n2(), value)) {
        return true;
      }
      node = ensureNotNull(node.oh_1);
    }
     while (!(node === this.ih_1));
    return false;
  };
  LinkedHashMap.prototype.jg = function () {
    return new EntrySet_0(this);
  };
  LinkedHashMap.prototype.b3 = function (key) {
    var tmp0_safe_receiver = this.jh_1.b3(key);
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.n2();
  };
  LinkedHashMap.prototype.a = function (key, value) {
    this.qe();
    var old = this.jh_1.b3(key);
    if (old == null) {
      var newEntry = new ChainEntry(this, key, value);
      this.jh_1.a(key, newEntry);
      addToEnd(newEntry, this);
      return null;
    } else {
      return old.kf(value);
    }
  };
  LinkedHashMap.prototype.tf = function (key) {
    this.qe();
    var entry = this.jh_1.tf(key);
    if (!(entry == null)) {
      remove(entry, this);
      return entry.n2();
    }
    return null;
  };
  LinkedHashMap.prototype.m = function () {
    return this.jh_1.m();
  };
  LinkedHashMap.prototype.qe = function () {
    if (this.kh_1)
      throw UnsupportedOperationException_init_$Create$();
  };
  function LinkedHashMap() {
    this.ih_1 = null;
    this.kh_1 = false;
  }
  LinkedHashMap.$metadata$ = classMeta('LinkedHashMap', [MutableMap], undefined, undefined, undefined, HashMap.prototype);
  function LinkedHashSet_init_$Init$($this) {
    HashSet_init_$Init$_3(LinkedHashMap_init_$Create$(), $this);
    LinkedHashSet.call($this);
    return $this;
  }
  function LinkedHashSet_init_$Create$() {
    return LinkedHashSet_init_$Init$(Object.create(LinkedHashSet.prototype));
  }
  function LinkedHashSet_init_$Init$_0(elements, $this) {
    HashSet_init_$Init$_3(LinkedHashMap_init_$Create$(), $this);
    LinkedHashSet.call($this);
    $this.o1(elements);
    return $this;
  }
  function LinkedHashSet_init_$Create$_0(elements) {
    return LinkedHashSet_init_$Init$_0(elements, Object.create(LinkedHashSet.prototype));
  }
  function LinkedHashSet_init_$Init$_1(initialCapacity, loadFactor, $this) {
    HashSet_init_$Init$_3(LinkedHashMap_init_$Create$_0(initialCapacity, loadFactor), $this);
    LinkedHashSet.call($this);
    return $this;
  }
  function LinkedHashSet_init_$Init$_2(initialCapacity, $this) {
    LinkedHashSet_init_$Init$_1(initialCapacity, 0.0, $this);
    return $this;
  }
  function LinkedHashSet_init_$Create$_1(initialCapacity) {
    return LinkedHashSet_init_$Init$_2(initialCapacity, Object.create(LinkedHashSet.prototype));
  }
  LinkedHashSet.prototype.qe = function () {
    return this.lg().qe();
  };
  function LinkedHashSet() {
  }
  LinkedHashSet.$metadata$ = classMeta('LinkedHashSet', [MutableSet], undefined, undefined, undefined, HashSet.prototype);
  function RandomAccess() {
  }
  RandomAccess.$metadata$ = interfaceMeta('RandomAccess');
  function get_output() {
    init_properties_console_kt_6h8hpf();
    return output;
  }
  var output;
  function BaseOutput() {
  }
  BaseOutput.prototype.sh = function () {
    this.th('\n');
  };
  BaseOutput.prototype.uh = function (message) {
    this.th(message);
    this.sh();
  };
  BaseOutput.$metadata$ = classMeta('BaseOutput');
  function NodeJsOutput(outputStream) {
    BaseOutput.call(this);
    this.vh_1 = outputStream;
  }
  NodeJsOutput.prototype.th = function (message) {
    var tmp$ret$0;
    {
      tmp$ret$0 = String(message);
    }
    var messageString = tmp$ret$0;
    this.vh_1.write(messageString);
  };
  NodeJsOutput.$metadata$ = classMeta('NodeJsOutput', undefined, undefined, undefined, undefined, BaseOutput.prototype);
  function BufferedOutputToConsoleLog() {
    BufferedOutput.call(this);
  }
  BufferedOutputToConsoleLog.prototype.th = function (message) {
    var tmp$ret$0;
    {
      tmp$ret$0 = String(message);
    }
    var s = tmp$ret$0;
    var tmp$ret$2;
    {
      var tmp0_nativeLastIndexOf = s;
      var tmp$ret$1;
      {
        tmp$ret$1 = tmp0_nativeLastIndexOf;
      }
      tmp$ret$2 = tmp$ret$1.lastIndexOf('\n', 0);
    }
    var i = tmp$ret$2;
    if (i >= 0) {
      var tmp0_this = this;
      var tmp = tmp0_this.yh();
      var tmp$ret$4;
      {
        var tmp1_substring = s;
        var tmp$ret$3;
        {
          tmp$ret$3 = tmp1_substring;
        }
        tmp$ret$4 = tmp$ret$3.substring(0, i);
      }
      tmp0_this.zh(tmp + tmp$ret$4);
      this.ai();
      var tmp$ret$6;
      {
        var tmp2_substring = s;
        var tmp3_substring = i + 1 | 0;
        var tmp$ret$5;
        {
          tmp$ret$5 = tmp2_substring;
        }
        tmp$ret$6 = tmp$ret$5.substring(tmp3_substring);
      }
      s = tmp$ret$6;
    }
    var tmp1_this = this;
    tmp1_this.zh(tmp1_this.yh() + s);
  };
  BufferedOutputToConsoleLog.prototype.ai = function () {
    console.log(this.yh());
    this.zh('');
  };
  BufferedOutputToConsoleLog.$metadata$ = classMeta('BufferedOutputToConsoleLog', undefined, undefined, undefined, undefined, BufferedOutput.prototype);
  function String_0(value) {
    init_properties_console_kt_6h8hpf();
    return String(value);
  }
  function BufferedOutput() {
    BaseOutput.call(this);
    this.xh_1 = '';
  }
  BufferedOutput.prototype.zh = function (_set____db54di) {
    this.xh_1 = _set____db54di;
  };
  BufferedOutput.prototype.yh = function () {
    return this.xh_1;
  };
  BufferedOutput.prototype.th = function (message) {
    var tmp0_this = this;
    var tmp = tmp0_this;
    var tmp_0 = tmp0_this.xh_1;
    var tmp$ret$0;
    {
      tmp$ret$0 = String(message);
    }
    tmp.xh_1 = tmp_0 + tmp$ret$0;
  };
  BufferedOutput.$metadata$ = classMeta('BufferedOutput', undefined, undefined, undefined, undefined, BaseOutput.prototype);
  function println(message) {
    init_properties_console_kt_6h8hpf();
    get_output().uh(message);
  }
  function println_0() {
    init_properties_console_kt_6h8hpf();
    get_output().sh();
  }
  var properties_initialized_console_kt_gll9dl;
  function init_properties_console_kt_6h8hpf() {
    if (properties_initialized_console_kt_gll9dl) {
    } else {
      properties_initialized_console_kt_gll9dl = true;
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          var isNode = typeof process !== 'undefined' && process.versions && !!process.versions.node;
          tmp$ret$0 = isNode ? new NodeJsOutput(process.stdout) : new BufferedOutputToConsoleLog();
        }
        tmp$ret$1 = tmp$ret$0;
      }
      output = tmp$ret$1;
    }
  }
  function CancellationException_init_$Init$(message, $this) {
    IllegalStateException_init_$Init$_0(message, $this);
    CancellationException.call($this);
    return $this;
  }
  function CancellationException_init_$Create$(message) {
    var tmp = CancellationException_init_$Init$(message, Object.create(CancellationException.prototype));
    captureStack(tmp, CancellationException_init_$Create$);
    return tmp;
  }
  function CancellationException_init_$Init$_0(message, cause, $this) {
    IllegalStateException_init_$Init$_1(message, cause, $this);
    CancellationException.call($this);
    return $this;
  }
  function CancellationException() {
    captureStack(this, CancellationException);
  }
  CancellationException.$metadata$ = classMeta('CancellationException', undefined, undefined, undefined, undefined, IllegalStateException.prototype);
  function asDynamic(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  function unsafeCastDynamic(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  function unsafeCast(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0;
  }
  function Serializable() {
  }
  Serializable.$metadata$ = interfaceMeta('Serializable');
  function nativeFill(_this__u8e3s4, element, fromIndex, toIndex) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    tmp$ret$0.fill(element, fromIndex, toIndex);
  }
  function pow(_this__u8e3s4, n) {
    return Math.pow(_this__u8e3s4, n);
  }
  function abs(n) {
    return n < 0 ? -n | 0 | 0 : n;
  }
  function sqrt(x) {
    return Math.sqrt(x);
  }
  function min(a, b) {
    return Math.min(a, b);
  }
  function max(a, b) {
    return Math.max(a, b);
  }
  function ceil(x) {
    return Math.ceil(x);
  }
  function floor(x) {
    return Math.floor(x);
  }
  function get_sign(_this__u8e3s4) {
    return sign(_this__u8e3s4);
  }
  function get_sign_0(_this__u8e3s4) {
    return sign(_this__u8e3s4);
  }
  function ceil_0(x) {
    return Math.ceil(x);
  }
  function sqrt_0(x) {
    return Math.sqrt(x);
  }
  function pow_0(_this__u8e3s4, n) {
    return Math.pow(_this__u8e3s4, n);
  }
  function max_0(a, b) {
    return Math.max(a, b);
  }
  function roundToInt(_this__u8e3s4) {
    var tmp;
    if (isNaN_0(_this__u8e3s4)) {
      throw IllegalArgumentException_init_$Create$_0('Cannot round NaN value.');
    } else if (_this__u8e3s4 > IntCompanionObject_getInstance().d1_1) {
      tmp = IntCompanionObject_getInstance().d1_1;
    } else if (_this__u8e3s4 < IntCompanionObject_getInstance().c1_1) {
      tmp = IntCompanionObject_getInstance().c1_1;
    } else {
      tmp = numberToInt(Math.round(_this__u8e3s4));
    }
    return tmp;
  }
  function roundToLong(_this__u8e3s4) {
    var tmp;
    if (isNaN_0(_this__u8e3s4)) {
      throw IllegalArgumentException_init_$Create$_0('Cannot round NaN value.');
    } else {
      Companion_getInstance_14();
      if (_this__u8e3s4 > (new Long(-1, 2147483647)).bi()) {
        Companion_getInstance_14();
        tmp = new Long(-1, 2147483647);
      } else {
        Companion_getInstance_14();
        if (_this__u8e3s4 < (new Long(0, -2147483648)).bi()) {
          Companion_getInstance_14();
          tmp = new Long(0, -2147483648);
        } else {
          tmp = numberToLong(Math.round(_this__u8e3s4));
        }
      }
    }
    return tmp;
  }
  function abs_0(x) {
    return Math.abs(x);
  }
  function roundToInt_0(_this__u8e3s4) {
    return roundToInt(_this__u8e3s4);
  }
  function cos(x) {
    return Math.cos(x);
  }
  function sin(x) {
    return Math.sin(x);
  }
  function cos_0(x) {
    return Math.cos(x);
  }
  function tan(x) {
    return Math.tan(x);
  }
  function atan(x) {
    return Math.atan(x);
  }
  function tan_0(x) {
    return Math.tan(x);
  }
  function abs_1(x) {
    return Math.abs(x);
  }
  function round(x) {
    return round_0(x);
  }
  function min_0(a, b) {
    return Math.min(a, b);
  }
  function pow_1(_this__u8e3s4, x) {
    return Math.pow(_this__u8e3s4, x);
  }
  function floor_0(x) {
    return Math.floor(x);
  }
  function log2_0(x) {
    return log2(x);
  }
  function log(x, base) {
    if (base <= 0.0 ? true : base === 1.0) {
      DoubleCompanionObject_getInstance();
      return NaN;
    }
    return Math.log(x) / Math.log(base);
  }
  function pow_2(_this__u8e3s4, x) {
    return Math.pow(_this__u8e3s4, x);
  }
  function round_0(x) {
    if (!(x % 0.5 === 0.0)) {
      return Math.round(x);
    }
    var tmp$ret$0;
    {
      tmp$ret$0 = Math.floor(x);
    }
    var floor = tmp$ret$0;
    var tmp;
    if (floor % 2 === 0.0) {
      tmp = floor;
    } else {
      var tmp$ret$1;
      {
        tmp$ret$1 = Math.ceil(x);
      }
      tmp = tmp$ret$1;
    }
    return tmp;
  }
  function isNaN_0(_this__u8e3s4) {
    return !(_this__u8e3s4 === _this__u8e3s4);
  }
  function isInfinite(_this__u8e3s4) {
    var tmp;
    DoubleCompanionObject_getInstance();
    if (_this__u8e3s4 === Infinity) {
      tmp = true;
    } else {
      DoubleCompanionObject_getInstance();
      tmp = _this__u8e3s4 === -Infinity;
    }
    return tmp;
  }
  function isFinite(_this__u8e3s4) {
    return !isInfinite(_this__u8e3s4) ? !isNaN_0(_this__u8e3s4) : false;
  }
  function countLeadingZeroBits(_this__u8e3s4) {
    return clz32(_this__u8e3s4);
  }
  function isFinite_0(_this__u8e3s4) {
    return !isInfinite_0(_this__u8e3s4) ? !isNaN_1(_this__u8e3s4) : false;
  }
  function isNaN_1(_this__u8e3s4) {
    return !(_this__u8e3s4 === _this__u8e3s4);
  }
  function isInfinite_0(_this__u8e3s4) {
    var tmp;
    FloatCompanionObject_getInstance();
    if (_this__u8e3s4 === Infinity) {
      tmp = true;
    } else {
      FloatCompanionObject_getInstance();
      tmp = _this__u8e3s4 === -Infinity;
    }
    return tmp;
  }
  function countTrailingZeroBits(_this__u8e3s4) {
    var low = _this__u8e3s4.k1_1;
    var tmp;
    if (low === 0) {
      IntCompanionObject_getInstance();
      tmp = 32 + countTrailingZeroBits_0(_this__u8e3s4.l1_1) | 0;
    } else {
      tmp = countTrailingZeroBits_0(low);
    }
    return tmp;
  }
  function countTrailingZeroBits_0(_this__u8e3s4) {
    IntCompanionObject_getInstance();
    var tmp$ret$0;
    {
      var tmp0_countLeadingZeroBits = ~(_this__u8e3s4 | (-_this__u8e3s4 | 0));
      tmp$ret$0 = clz32(tmp0_countLeadingZeroBits);
    }
    return 32 - tmp$ret$0 | 0;
  }
  function get_INV_2_26() {
    init_properties_PlatformRandom_kt_or3gqs();
    return INV_2_26;
  }
  var INV_2_26;
  function get_INV_2_53() {
    init_properties_PlatformRandom_kt_or3gqs();
    return INV_2_53;
  }
  var INV_2_53;
  function doubleFromParts(hi26, low27) {
    init_properties_PlatformRandom_kt_or3gqs();
    return hi26 * get_INV_2_26() + low27 * get_INV_2_53();
  }
  function defaultPlatformRandom() {
    init_properties_PlatformRandom_kt_or3gqs();
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = Math.random() * Math.pow(2, 32) | 0;
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return Random_0(tmp$ret$0);
  }
  var properties_initialized_PlatformRandom_kt_uibhw8;
  function init_properties_PlatformRandom_kt_or3gqs() {
    if (properties_initialized_PlatformRandom_kt_uibhw8) {
    } else {
      properties_initialized_PlatformRandom_kt_uibhw8 = true;
      var tmp$ret$0;
      {
        tmp$ret$0 = Math.pow(2.0, -26.0);
      }
      INV_2_26 = tmp$ret$0;
      var tmp$ret$0_0;
      {
        tmp$ret$0_0 = Math.pow(2.0, -53.0);
      }
      INV_2_53 = tmp$ret$0_0;
    }
  }
  function get_js(_this__u8e3s4) {
    return (_this__u8e3s4 instanceof KClassImpl ? _this__u8e3s4 : THROW_CCE()).di();
  }
  function KCallable() {
  }
  KCallable.$metadata$ = interfaceMeta('KCallable');
  function KClass() {
  }
  KClass.$metadata$ = interfaceMeta('KClass', [KClassifier]);
  function KClassImpl(jClass) {
    this.ci_1 = jClass;
  }
  KClassImpl.prototype.di = function () {
    return this.ci_1;
  };
  KClassImpl.prototype.equals = function (other) {
    var tmp;
    if (other instanceof KClassImpl) {
      tmp = equals_1(this.di(), other.di());
    } else {
      tmp = false;
    }
    return tmp;
  };
  KClassImpl.prototype.hashCode = function () {
    var tmp0_safe_receiver = this.ei();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : getStringHashCode(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
  };
  KClassImpl.prototype.toString = function () {
    return 'class ' + this.ei();
  };
  KClassImpl.$metadata$ = classMeta('KClassImpl', [KClass]);
  function PrimitiveKClassImpl(jClass, givenSimpleName, isInstanceFunction) {
    KClassImpl.call(this, jClass);
    this.gi_1 = givenSimpleName;
    this.hi_1 = isInstanceFunction;
  }
  PrimitiveKClassImpl.prototype.equals = function (other) {
    if (!(other instanceof PrimitiveKClassImpl))
      return false;
    return KClassImpl.prototype.equals.call(this, other) ? this.gi_1 === other.gi_1 : false;
  };
  PrimitiveKClassImpl.prototype.ei = function () {
    return this.gi_1;
  };
  PrimitiveKClassImpl.$metadata$ = classMeta('PrimitiveKClassImpl', undefined, undefined, undefined, undefined, KClassImpl.prototype);
  function NothingKClassImpl() {
    NothingKClassImpl_instance = this;
    KClassImpl.call(this, Object);
    this.ji_1 = 'Nothing';
  }
  NothingKClassImpl.prototype.ei = function () {
    return this.ji_1;
  };
  NothingKClassImpl.prototype.di = function () {
    throw UnsupportedOperationException_init_$Create$_0("There's no native JS class for Nothing type");
  };
  NothingKClassImpl.prototype.equals = function (other) {
    return other === this;
  };
  NothingKClassImpl.prototype.hashCode = function () {
    return 0;
  };
  NothingKClassImpl.$metadata$ = objectMeta('NothingKClassImpl', undefined, undefined, undefined, undefined, KClassImpl.prototype);
  var NothingKClassImpl_instance;
  function NothingKClassImpl_getInstance() {
    if (NothingKClassImpl_instance == null)
      new NothingKClassImpl();
    return NothingKClassImpl_instance;
  }
  function ErrorKClass() {
  }
  ErrorKClass.prototype.ei = function () {
    throw IllegalStateException_init_$Create$_0('Unknown simpleName for ErrorKClass');
  };
  ErrorKClass.prototype.equals = function (other) {
    return other === this;
  };
  ErrorKClass.prototype.hashCode = function () {
    return 0;
  };
  ErrorKClass.$metadata$ = classMeta('ErrorKClass', [KClass]);
  function SimpleKClassImpl(jClass) {
    KClassImpl.call(this, jClass);
    var tmp = this;
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = jClass;
      }
      var tmp0_safe_receiver = tmp$ret$0.$metadata$;
      var tmp0_unsafeCast = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.simpleName;
      tmp$ret$1 = tmp0_unsafeCast;
    }
    tmp.li_1 = tmp$ret$1;
  }
  SimpleKClassImpl.prototype.ei = function () {
    return this.li_1;
  };
  SimpleKClassImpl.$metadata$ = classMeta('SimpleKClassImpl', undefined, undefined, undefined, undefined, KClassImpl.prototype);
  function KProperty1() {
  }
  KProperty1.$metadata$ = interfaceMeta('KProperty1', [KProperty]);
  function KMutableProperty1() {
  }
  KMutableProperty1.$metadata$ = interfaceMeta('KMutableProperty1', [KProperty1, KMutableProperty]);
  function KProperty() {
  }
  KProperty.$metadata$ = interfaceMeta('KProperty', [KCallable]);
  function KMutableProperty() {
  }
  KMutableProperty.$metadata$ = interfaceMeta('KMutableProperty', [KProperty]);
  function KMutableProperty0() {
  }
  KMutableProperty0.$metadata$ = interfaceMeta('KMutableProperty0', [KProperty0, KMutableProperty]);
  function KProperty0() {
  }
  KProperty0.$metadata$ = interfaceMeta('KProperty0', [KProperty]);
  function KType() {
  }
  KType.$metadata$ = interfaceMeta('KType');
  function createKType(classifier, arguments_0, isMarkedNullable) {
    return new KTypeImpl(classifier, asList(arguments_0), isMarkedNullable);
  }
  function KTypeImpl(classifier, arguments_0, isMarkedNullable) {
    this.pi_1 = classifier;
    this.qi_1 = arguments_0;
    this.ri_1 = isMarkedNullable;
  }
  KTypeImpl.prototype.mi = function () {
    return this.pi_1;
  };
  KTypeImpl.prototype.ni = function () {
    return this.qi_1;
  };
  KTypeImpl.prototype.oi = function () {
    return this.ri_1;
  };
  KTypeImpl.prototype.equals = function (other) {
    var tmp;
    var tmp_0;
    var tmp_1;
    if (other instanceof KTypeImpl) {
      tmp_1 = equals_1(this.pi_1, other.pi_1);
    } else {
      tmp_1 = false;
    }
    if (tmp_1) {
      tmp_0 = equals_1(this.qi_1, other.qi_1);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = this.ri_1 === other.ri_1;
    } else {
      tmp = false;
    }
    return tmp;
  };
  KTypeImpl.prototype.hashCode = function () {
    return imul(imul(hashCode_0(this.pi_1), 31) + hashCode_0(this.qi_1) | 0, 31) + (this.ri_1 | 0) | 0;
  };
  KTypeImpl.prototype.toString = function () {
    var tmp = this.pi_1;
    var kClass = isInterface(tmp, KClass) ? tmp : null;
    var classifierName = kClass == null ? toString_2(this.pi_1) : !(kClass.ei() == null) ? kClass.ei() : '(non-denotable type)';
    var tmp_0;
    if (this.qi_1.q()) {
      tmp_0 = '';
    } else {
      tmp_0 = joinToString$default_0(this.qi_1, ', ', '<', '>', 0, null, null, 56, null);
    }
    var args = tmp_0;
    var nullable = this.ri_1 ? '?' : '';
    return plus_2(classifierName, args) + nullable;
  };
  KTypeImpl.$metadata$ = classMeta('KTypeImpl', [KType]);
  function get_functionClasses() {
    init_properties_primitives_kt_rm1w5q();
    return functionClasses;
  }
  var functionClasses;
  function PrimitiveClasses$anyClass$lambda() {
    return function (it) {
      return isObject(it);
    };
  }
  function PrimitiveClasses$numberClass$lambda() {
    return function (it) {
      return isNumber(it);
    };
  }
  function PrimitiveClasses$booleanClass$lambda() {
    return function (it) {
      return !(it == null) ? typeof it === 'boolean' : false;
    };
  }
  function PrimitiveClasses$byteClass$lambda() {
    return function (it) {
      return !(it == null) ? typeof it === 'number' : false;
    };
  }
  function PrimitiveClasses$shortClass$lambda() {
    return function (it) {
      return !(it == null) ? typeof it === 'number' : false;
    };
  }
  function PrimitiveClasses$intClass$lambda() {
    return function (it) {
      return !(it == null) ? typeof it === 'number' : false;
    };
  }
  function PrimitiveClasses$floatClass$lambda() {
    return function (it) {
      return !(it == null) ? typeof it === 'number' : false;
    };
  }
  function PrimitiveClasses$doubleClass$lambda() {
    return function (it) {
      return !(it == null) ? typeof it === 'number' : false;
    };
  }
  function PrimitiveClasses$arrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isArray(it) : false;
    };
  }
  function PrimitiveClasses$stringClass$lambda() {
    return function (it) {
      return !(it == null) ? typeof it === 'string' : false;
    };
  }
  function PrimitiveClasses$throwableClass$lambda() {
    return function (it) {
      return it instanceof Error;
    };
  }
  function PrimitiveClasses$booleanArrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isBooleanArray(it) : false;
    };
  }
  function PrimitiveClasses$charArrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isCharArray(it) : false;
    };
  }
  function PrimitiveClasses$byteArrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isByteArray(it) : false;
    };
  }
  function PrimitiveClasses$shortArrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isShortArray(it) : false;
    };
  }
  function PrimitiveClasses$intArrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isIntArray(it) : false;
    };
  }
  function PrimitiveClasses$longArrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isLongArray(it) : false;
    };
  }
  function PrimitiveClasses$floatArrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isFloatArray(it) : false;
    };
  }
  function PrimitiveClasses$doubleArrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isDoubleArray(it) : false;
    };
  }
  function PrimitiveClasses$functionClass$lambda($arity) {
    return function (it) {
      var tmp;
      if (typeof it === 'function') {
        var tmp$ret$0;
        {
          tmp$ret$0 = it;
        }
        tmp = tmp$ret$0.length === $arity;
      } else {
        tmp = false;
      }
      return tmp;
    };
  }
  function PrimitiveClasses() {
    PrimitiveClasses_instance = this;
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = Object;
      tmp$ret$0 = tmp0_unsafeCast;
    }
    var tmp_0 = tmp$ret$0;
    tmp.si_1 = new PrimitiveKClassImpl(tmp_0, 'Any', PrimitiveClasses$anyClass$lambda());
    var tmp_1 = this;
    var tmp$ret$1;
    {
      var tmp0_unsafeCast_0 = Number;
      tmp$ret$1 = tmp0_unsafeCast_0;
    }
    var tmp_2 = tmp$ret$1;
    tmp_1.ti_1 = new PrimitiveKClassImpl(tmp_2, 'Number', PrimitiveClasses$numberClass$lambda());
    this.ui_1 = NothingKClassImpl_getInstance();
    var tmp_3 = this;
    var tmp$ret$2;
    {
      var tmp0_unsafeCast_1 = Boolean;
      tmp$ret$2 = tmp0_unsafeCast_1;
    }
    var tmp_4 = tmp$ret$2;
    tmp_3.vi_1 = new PrimitiveKClassImpl(tmp_4, 'Boolean', PrimitiveClasses$booleanClass$lambda());
    var tmp_5 = this;
    var tmp$ret$3;
    {
      var tmp0_unsafeCast_2 = Number;
      tmp$ret$3 = tmp0_unsafeCast_2;
    }
    var tmp_6 = tmp$ret$3;
    tmp_5.wi_1 = new PrimitiveKClassImpl(tmp_6, 'Byte', PrimitiveClasses$byteClass$lambda());
    var tmp_7 = this;
    var tmp$ret$4;
    {
      var tmp0_unsafeCast_3 = Number;
      tmp$ret$4 = tmp0_unsafeCast_3;
    }
    var tmp_8 = tmp$ret$4;
    tmp_7.xi_1 = new PrimitiveKClassImpl(tmp_8, 'Short', PrimitiveClasses$shortClass$lambda());
    var tmp_9 = this;
    var tmp$ret$5;
    {
      var tmp0_unsafeCast_4 = Number;
      tmp$ret$5 = tmp0_unsafeCast_4;
    }
    var tmp_10 = tmp$ret$5;
    tmp_9.yi_1 = new PrimitiveKClassImpl(tmp_10, 'Int', PrimitiveClasses$intClass$lambda());
    var tmp_11 = this;
    var tmp$ret$6;
    {
      var tmp0_unsafeCast_5 = Number;
      tmp$ret$6 = tmp0_unsafeCast_5;
    }
    var tmp_12 = tmp$ret$6;
    tmp_11.zi_1 = new PrimitiveKClassImpl(tmp_12, 'Float', PrimitiveClasses$floatClass$lambda());
    var tmp_13 = this;
    var tmp$ret$7;
    {
      var tmp0_unsafeCast_6 = Number;
      tmp$ret$7 = tmp0_unsafeCast_6;
    }
    var tmp_14 = tmp$ret$7;
    tmp_13.aj_1 = new PrimitiveKClassImpl(tmp_14, 'Double', PrimitiveClasses$doubleClass$lambda());
    var tmp_15 = this;
    var tmp$ret$8;
    {
      var tmp0_unsafeCast_7 = Array;
      tmp$ret$8 = tmp0_unsafeCast_7;
    }
    var tmp_16 = tmp$ret$8;
    tmp_15.bj_1 = new PrimitiveKClassImpl(tmp_16, 'Array', PrimitiveClasses$arrayClass$lambda());
    var tmp_17 = this;
    var tmp$ret$9;
    {
      var tmp0_unsafeCast_8 = String;
      tmp$ret$9 = tmp0_unsafeCast_8;
    }
    var tmp_18 = tmp$ret$9;
    tmp_17.cj_1 = new PrimitiveKClassImpl(tmp_18, 'String', PrimitiveClasses$stringClass$lambda());
    var tmp_19 = this;
    var tmp$ret$10;
    {
      var tmp0_unsafeCast_9 = Error;
      tmp$ret$10 = tmp0_unsafeCast_9;
    }
    var tmp_20 = tmp$ret$10;
    tmp_19.dj_1 = new PrimitiveKClassImpl(tmp_20, 'Throwable', PrimitiveClasses$throwableClass$lambda());
    var tmp_21 = this;
    var tmp$ret$11;
    {
      var tmp0_unsafeCast_10 = Array;
      tmp$ret$11 = tmp0_unsafeCast_10;
    }
    var tmp_22 = tmp$ret$11;
    tmp_21.ej_1 = new PrimitiveKClassImpl(tmp_22, 'BooleanArray', PrimitiveClasses$booleanArrayClass$lambda());
    var tmp_23 = this;
    var tmp$ret$12;
    {
      var tmp0_unsafeCast_11 = Uint16Array;
      tmp$ret$12 = tmp0_unsafeCast_11;
    }
    var tmp_24 = tmp$ret$12;
    tmp_23.fj_1 = new PrimitiveKClassImpl(tmp_24, 'CharArray', PrimitiveClasses$charArrayClass$lambda());
    var tmp_25 = this;
    var tmp$ret$13;
    {
      var tmp0_unsafeCast_12 = Int8Array;
      tmp$ret$13 = tmp0_unsafeCast_12;
    }
    var tmp_26 = tmp$ret$13;
    tmp_25.gj_1 = new PrimitiveKClassImpl(tmp_26, 'ByteArray', PrimitiveClasses$byteArrayClass$lambda());
    var tmp_27 = this;
    var tmp$ret$14;
    {
      var tmp0_unsafeCast_13 = Int16Array;
      tmp$ret$14 = tmp0_unsafeCast_13;
    }
    var tmp_28 = tmp$ret$14;
    tmp_27.hj_1 = new PrimitiveKClassImpl(tmp_28, 'ShortArray', PrimitiveClasses$shortArrayClass$lambda());
    var tmp_29 = this;
    var tmp$ret$15;
    {
      var tmp0_unsafeCast_14 = Int32Array;
      tmp$ret$15 = tmp0_unsafeCast_14;
    }
    var tmp_30 = tmp$ret$15;
    tmp_29.ij_1 = new PrimitiveKClassImpl(tmp_30, 'IntArray', PrimitiveClasses$intArrayClass$lambda());
    var tmp_31 = this;
    var tmp$ret$16;
    {
      var tmp0_unsafeCast_15 = Array;
      tmp$ret$16 = tmp0_unsafeCast_15;
    }
    var tmp_32 = tmp$ret$16;
    tmp_31.jj_1 = new PrimitiveKClassImpl(tmp_32, 'LongArray', PrimitiveClasses$longArrayClass$lambda());
    var tmp_33 = this;
    var tmp$ret$17;
    {
      var tmp0_unsafeCast_16 = Float32Array;
      tmp$ret$17 = tmp0_unsafeCast_16;
    }
    var tmp_34 = tmp$ret$17;
    tmp_33.kj_1 = new PrimitiveKClassImpl(tmp_34, 'FloatArray', PrimitiveClasses$floatArrayClass$lambda());
    var tmp_35 = this;
    var tmp$ret$18;
    {
      var tmp0_unsafeCast_17 = Float64Array;
      tmp$ret$18 = tmp0_unsafeCast_17;
    }
    var tmp_36 = tmp$ret$18;
    tmp_35.lj_1 = new PrimitiveKClassImpl(tmp_36, 'DoubleArray', PrimitiveClasses$doubleArrayClass$lambda());
  }
  PrimitiveClasses.prototype.mj = function () {
    return this.si_1;
  };
  PrimitiveClasses.prototype.nj = function () {
    return this.ti_1;
  };
  PrimitiveClasses.prototype.oj = function () {
    return this.ui_1;
  };
  PrimitiveClasses.prototype.pj = function () {
    return this.vi_1;
  };
  PrimitiveClasses.prototype.qj = function () {
    return this.wi_1;
  };
  PrimitiveClasses.prototype.rj = function () {
    return this.xi_1;
  };
  PrimitiveClasses.prototype.sj = function () {
    return this.yi_1;
  };
  PrimitiveClasses.prototype.tj = function () {
    return this.zi_1;
  };
  PrimitiveClasses.prototype.uj = function () {
    return this.aj_1;
  };
  PrimitiveClasses.prototype.vj = function () {
    return this.bj_1;
  };
  PrimitiveClasses.prototype.wj = function () {
    return this.cj_1;
  };
  PrimitiveClasses.prototype.xj = function () {
    return this.dj_1;
  };
  PrimitiveClasses.prototype.yj = function () {
    return this.ej_1;
  };
  PrimitiveClasses.prototype.zj = function () {
    return this.fj_1;
  };
  PrimitiveClasses.prototype.ak = function () {
    return this.gj_1;
  };
  PrimitiveClasses.prototype.bk = function () {
    return this.hj_1;
  };
  PrimitiveClasses.prototype.ck = function () {
    return this.ij_1;
  };
  PrimitiveClasses.prototype.dk = function () {
    return this.jj_1;
  };
  PrimitiveClasses.prototype.ek = function () {
    return this.kj_1;
  };
  PrimitiveClasses.prototype.fk = function () {
    return this.lj_1;
  };
  PrimitiveClasses.prototype.functionClass = function (arity) {
    var tmp0_elvis_lhs = get_functionClasses()[arity];
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$3;
      {
        {
        }
        var tmp$ret$2;
        {
          var tmp$ret$0;
          {
            var tmp0_unsafeCast = Function;
            tmp$ret$0 = tmp0_unsafeCast;
          }
          var tmp_0 = tmp$ret$0;
          var tmp_1 = 'Function' + arity;
          var result = new PrimitiveKClassImpl(tmp_0, tmp_1, PrimitiveClasses$functionClass$lambda(arity));
          var tmp$ret$1;
          {
            var tmp1_asDynamic = get_functionClasses();
            tmp$ret$1 = tmp1_asDynamic;
          }
          tmp$ret$1[arity] = result;
          tmp$ret$2 = result;
        }
        tmp$ret$3 = tmp$ret$2;
      }
      tmp = tmp$ret$3;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  PrimitiveClasses.$metadata$ = objectMeta('PrimitiveClasses');
  Object.defineProperty(PrimitiveClasses.prototype, 'anyClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.mj
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'numberClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.nj
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'nothingClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.oj
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'booleanClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.pj
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'byteClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.qj
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'shortClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.rj
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'intClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.sj
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'floatClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.tj
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'doubleClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.uj
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'arrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.vj
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'stringClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.wj
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'throwableClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.xj
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'booleanArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.yj
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'charArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.zj
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'byteArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.ak
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'shortArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.bk
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'intArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.ck
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'longArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.dk
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'floatArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.ek
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'doubleArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.fk
  });
  var PrimitiveClasses_instance;
  function PrimitiveClasses_getInstance() {
    if (PrimitiveClasses_instance == null)
      new PrimitiveClasses();
    return PrimitiveClasses_instance;
  }
  var properties_initialized_primitives_kt_jle18u;
  function init_properties_primitives_kt_rm1w5q() {
    if (properties_initialized_primitives_kt_jle18u) {
    } else {
      properties_initialized_primitives_kt_jle18u = true;
      var tmp$ret$0;
      {
        tmp$ret$0 = fillArrayVal(Array(0), null);
      }
      functionClasses = tmp$ret$0;
    }
  }
  function getKClass(jClass) {
    var tmp;
    if (Array.isArray(jClass)) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = jClass;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = getKClassM(tmp$ret$1);
    } else {
      var tmp$ret$3;
      {
        var tmp$ret$2;
        {
          tmp$ret$2 = jClass;
        }
        tmp$ret$3 = tmp$ret$2;
      }
      tmp = getKClass1(tmp$ret$3);
    }
    return tmp;
  }
  function getKClassM(jClasses) {
    var tmp0_subject = jClasses.length;
    var tmp;
    switch (tmp0_subject) {
      case 1:
        tmp = getKClass1(jClasses[0]);
        break;
      case 0:
        var tmp$ret$1;
        {
          var tmp0_unsafeCast = NothingKClassImpl_getInstance();
          var tmp$ret$0;
          {
            tmp$ret$0 = tmp0_unsafeCast;
          }
          tmp$ret$1 = tmp$ret$0;
        }

        tmp = tmp$ret$1;
        break;
      default:
        var tmp$ret$3;
        {
          var tmp1_unsafeCast = new ErrorKClass();
          var tmp$ret$2;
          {
            tmp$ret$2 = tmp1_unsafeCast;
          }
          tmp$ret$3 = tmp$ret$2;
        }

        tmp = tmp$ret$3;
        break;
    }
    return tmp;
  }
  function getKClass1(jClass) {
    if (jClass === String) {
      var tmp$ret$1;
      {
        var tmp0_unsafeCast = PrimitiveClasses_getInstance().cj_1;
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_unsafeCast;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      return tmp$ret$1;
    }
    var tmp$ret$2;
    {
      tmp$ret$2 = jClass;
    }
    var metadata = tmp$ret$2.$metadata$;
    var tmp;
    if (metadata != null) {
      var tmp_0;
      if (metadata.$kClass$ == null) {
        var kClass = new SimpleKClassImpl(jClass);
        metadata.$kClass$ = kClass;
        tmp_0 = kClass;
      } else {
        tmp_0 = metadata.$kClass$;
      }
      tmp = tmp_0;
    } else {
      tmp = new SimpleKClassImpl(jClass);
    }
    return tmp;
  }
  function getKClassFromExpression(e) {
    var tmp$ret$3;
    {
      var tmp0_subject = typeof e;
      var tmp;
      switch (tmp0_subject) {
        case 'string':
          tmp = PrimitiveClasses_getInstance().cj_1;
          break;
        case 'number':
          var tmp_0;
          var tmp$ret$0;
          {
            var tmp0_asDynamic = jsBitwiseOr(e, 0);
            tmp$ret$0 = tmp0_asDynamic;
          }

          if (tmp$ret$0 === e) {
            tmp_0 = PrimitiveClasses_getInstance().yi_1;
          } else {
            tmp_0 = PrimitiveClasses_getInstance().aj_1;
          }

          tmp = tmp_0;
          break;
        case 'boolean':
          tmp = PrimitiveClasses_getInstance().vi_1;
          break;
        case 'function':
          var tmp_1 = PrimitiveClasses_getInstance();
          var tmp$ret$1;
          {
            tmp$ret$1 = e;
          }

          tmp = tmp_1.functionClass(tmp$ret$1.length);
          break;
        default:
          var tmp_2;
          if (isBooleanArray(e)) {
            tmp_2 = PrimitiveClasses_getInstance().ej_1;
          } else {
            if (isCharArray(e)) {
              tmp_2 = PrimitiveClasses_getInstance().fj_1;
            } else {
              if (isByteArray(e)) {
                tmp_2 = PrimitiveClasses_getInstance().gj_1;
              } else {
                if (isShortArray(e)) {
                  tmp_2 = PrimitiveClasses_getInstance().hj_1;
                } else {
                  if (isIntArray(e)) {
                    tmp_2 = PrimitiveClasses_getInstance().ij_1;
                  } else {
                    if (isLongArray(e)) {
                      tmp_2 = PrimitiveClasses_getInstance().jj_1;
                    } else {
                      if (isFloatArray(e)) {
                        tmp_2 = PrimitiveClasses_getInstance().kj_1;
                      } else {
                        if (isDoubleArray(e)) {
                          tmp_2 = PrimitiveClasses_getInstance().lj_1;
                        } else {
                          if (isInterface(e, KClass)) {
                            tmp_2 = getKClass(KClass);
                          } else {
                            if (isArray(e)) {
                              tmp_2 = PrimitiveClasses_getInstance().bj_1;
                            } else {
                              var constructor = Object.getPrototypeOf(e).constructor;
                              var tmp_3;
                              if (constructor === Object) {
                                tmp_3 = PrimitiveClasses_getInstance().si_1;
                              } else if (constructor === Error) {
                                tmp_3 = PrimitiveClasses_getInstance().dj_1;
                              } else {
                                var jsClass = constructor;
                                tmp_3 = getKClass1(jsClass);
                              }
                              tmp_2 = tmp_3;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }

          tmp = tmp_2;
          break;
      }
      var tmp1_unsafeCast = tmp;
      var tmp$ret$2;
      {
        tmp$ret$2 = tmp1_unsafeCast;
      }
      tmp$ret$3 = tmp$ret$2;
    }
    return tmp$ret$3;
  }
  function reset(_this__u8e3s4) {
    _this__u8e3s4.lastIndex = 0;
  }
  function ConstrainedOnceSequence(sequence) {
    this.gk_1 = sequence;
  }
  ConstrainedOnceSequence.prototype.h = function () {
    var tmp0_elvis_lhs = this.gk_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$_0('This sequence can be consumed only once.');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var sequence = tmp;
    this.gk_1 = null;
    return sequence.h();
  };
  ConstrainedOnceSequence.$metadata$ = classMeta('ConstrainedOnceSequence', [Sequence]);
  function Appendable() {
  }
  Appendable.$metadata$ = interfaceMeta('Appendable');
  function CharacterCodingException(message) {
    Exception_init_$Init$_0(message, this);
    captureStack(this, CharacterCodingException);
  }
  CharacterCodingException.$metadata$ = classMeta('CharacterCodingException', undefined, undefined, undefined, undefined, Exception.prototype);
  function StringBuilder_init_$Init$(capacity, $this) {
    StringBuilder_init_$Init$_0($this);
    return $this;
  }
  function StringBuilder_init_$Create$(capacity) {
    return StringBuilder_init_$Init$(capacity, Object.create(StringBuilder.prototype));
  }
  function StringBuilder_init_$Init$_0($this) {
    StringBuilder.call($this, '');
    return $this;
  }
  function StringBuilder_init_$Create$_0() {
    return StringBuilder_init_$Init$_0(Object.create(StringBuilder.prototype));
  }
  function StringBuilder(content) {
    this.fa_1 = !(content === undefined) ? content : '';
  }
  StringBuilder.prototype.kd = function () {
    var tmp$ret$0;
    {
      var tmp0_asDynamic = this.fa_1;
      tmp$ret$0 = tmp0_asDynamic;
    }
    return tmp$ret$0.length;
  };
  StringBuilder.prototype.ld = function (index) {
    var tmp$ret$0;
    {
      var tmp0_getOrElse = this.fa_1;
      var tmp;
      if (index >= 0 ? index <= get_lastIndex_4(tmp0_getOrElse) : false) {
        tmp = charSequenceGet(tmp0_getOrElse, index);
      } else {
        throw IndexOutOfBoundsException_init_$Create$('index: ' + index + ', length: ' + this.kd() + '}');
      }
      tmp$ret$0 = tmp;
    }
    return tmp$ret$0;
  };
  StringBuilder.prototype.md = function (startIndex, endIndex) {
    var tmp$ret$1;
    {
      var tmp0_substring = this.fa_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_substring;
      }
      tmp$ret$1 = tmp$ret$0.substring(startIndex, endIndex);
    }
    return tmp$ret$1;
  };
  StringBuilder.prototype.ea = function (value) {
    var tmp0_this = this;
    tmp0_this.fa_1 = tmp0_this.fa_1 + new Char_0(value);
    return this;
  };
  StringBuilder.prototype.c = function (value) {
    var tmp0_this = this;
    tmp0_this.fa_1 = tmp0_this.fa_1 + toString_1(value);
    return this;
  };
  StringBuilder.prototype.hk = function (value, startIndex, endIndex) {
    var tmp0_elvis_lhs = value;
    return this.qb(tmp0_elvis_lhs == null ? 'null' : tmp0_elvis_lhs, startIndex, endIndex);
  };
  StringBuilder.prototype.ob = function (value) {
    var tmp0_this = this;
    tmp0_this.fa_1 = tmp0_this.fa_1 + toString_1(value);
    return this;
  };
  StringBuilder.prototype.ga = function (value) {
    var tmp0_this = this;
    var tmp = tmp0_this;
    var tmp_0 = tmp0_this.fa_1;
    var tmp1_elvis_lhs = value;
    tmp.fa_1 = tmp_0 + (tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs);
    return this;
  };
  StringBuilder.prototype.pb = function (index, value) {
    Companion_getInstance().f2(index, this.kd());
    var tmp = this;
    var tmp$ret$1;
    {
      var tmp0_substring = this.fa_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_substring;
      }
      tmp$ret$1 = tmp$ret$0.substring(0, index);
    }
    var tmp_0 = tmp$ret$1 + new Char_0(value);
    var tmp$ret$3;
    {
      var tmp1_substring = this.fa_1;
      var tmp$ret$2;
      {
        tmp$ret$2 = tmp1_substring;
      }
      tmp$ret$3 = tmp$ret$2.substring(index);
    }
    tmp.fa_1 = tmp_0 + tmp$ret$3;
    return this;
  };
  StringBuilder.prototype.ik = function (newLength) {
    if (newLength < 0) {
      throw IllegalArgumentException_init_$Create$_0('Negative new length: ' + newLength + '.');
    }
    if (newLength <= this.kd()) {
      var tmp = this;
      var tmp$ret$1;
      {
        var tmp0_substring = this.fa_1;
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_substring;
        }
        tmp$ret$1 = tmp$ret$0.substring(0, newLength);
      }
      tmp.fa_1 = tmp$ret$1;
    } else {
      var inductionVariable = this.kd();
      if (inductionVariable < newLength)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp1_this = this;
          tmp1_this.fa_1 = tmp1_this.fa_1 + new Char_0(_Char___init__impl__6a9atx(0));
        }
         while (inductionVariable < newLength);
    }
  };
  StringBuilder.prototype.toString = function () {
    return this.fa_1;
  };
  StringBuilder.prototype.qb = function (value, startIndex, endIndex) {
    var stringCsq = toString_2(value);
    Companion_getInstance().h2(startIndex, endIndex, stringCsq.length);
    var tmp0_this = this;
    var tmp = tmp0_this;
    var tmp_0 = tmp0_this.fa_1;
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = stringCsq;
      }
      tmp$ret$1 = tmp$ret$0.substring(startIndex, endIndex);
    }
    tmp.fa_1 = tmp_0 + tmp$ret$1;
    return this;
  };
  StringBuilder.$metadata$ = classMeta('StringBuilder', [Appendable, CharSequence]);
  function uppercaseChar(_this__u8e3s4) {
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_asDynamic = toString_0(_this__u8e3s4);
          tmp$ret$0 = tmp0_asDynamic;
        }
        var tmp1_unsafeCast = tmp$ret$0.toUpperCase();
        tmp$ret$1 = tmp1_unsafeCast;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    var uppercase = tmp$ret$2;
    return uppercase.length > 1 ? _this__u8e3s4 : charSequenceGet(uppercase, 0);
  }
  function lowercaseChar(_this__u8e3s4) {
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_asDynamic = toString_0(_this__u8e3s4);
          tmp$ret$0 = tmp0_asDynamic;
        }
        var tmp1_unsafeCast = tmp$ret$0.toLowerCase();
        tmp$ret$1 = tmp1_unsafeCast;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return charSequenceGet(tmp$ret$2, 0);
  }
  function uppercase(_this__u8e3s4) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_asDynamic = toString_0(_this__u8e3s4);
        tmp$ret$0 = tmp0_asDynamic;
      }
      var tmp1_unsafeCast = tmp$ret$0.toUpperCase();
      tmp$ret$1 = tmp1_unsafeCast;
    }
    return tmp$ret$1;
  }
  function lowercase(_this__u8e3s4) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_asDynamic = toString_0(_this__u8e3s4);
        tmp$ret$0 = tmp0_asDynamic;
      }
      var tmp1_unsafeCast = tmp$ret$0.toLowerCase();
      tmp$ret$1 = tmp1_unsafeCast;
    }
    return tmp$ret$1;
  }
  function isWhitespace(_this__u8e3s4) {
    return isWhitespaceImpl(_this__u8e3s4);
  }
  function isLowerCase(_this__u8e3s4) {
    if (_Char___init__impl__6a9atx(97) <= _this__u8e3s4 ? _this__u8e3s4 <= _Char___init__impl__6a9atx(122) : false) {
      return true;
    }
    if (Char__compareTo_impl_ypi4mb(_this__u8e3s4, _Char___init__impl__6a9atx(128)) < 0) {
      return false;
    }
    return isLowerCaseImpl(_this__u8e3s4);
  }
  function titlecaseChar(_this__u8e3s4) {
    return titlecaseCharImpl(_this__u8e3s4);
  }
  function checkRadix(radix) {
    if (!(2 <= radix ? radix <= 36 : false)) {
      throw IllegalArgumentException_init_$Create$_0('radix ' + radix + ' was not in valid range 2..36');
    }
    return radix;
  }
  function toDouble(_this__u8e3s4) {
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = _this__u8e3s4;
        }
        var tmp0_unsafeCast = +tmp$ret$0;
        tmp$ret$1 = tmp0_unsafeCast;
      }
      var tmp1_also = tmp$ret$1;
      {
      }
      {
        if ((isNaN_0(tmp1_also) ? !isNaN_2(_this__u8e3s4) : false) ? true : tmp1_also === 0.0 ? isBlank(_this__u8e3s4) : false) {
          numberFormatError(_this__u8e3s4);
        }
      }
      tmp$ret$2 = tmp1_also;
    }
    return tmp$ret$2;
  }
  function toLong(_this__u8e3s4) {
    var tmp0_elvis_lhs = toLongOrNull(_this__u8e3s4);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function digitOf(char, radix) {
    var tmp$ret$1;
    {
      var tmp0_let = (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(48)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(57)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(48)) : (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(90)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(65)) + 10 | 0 : (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(97)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(122)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(97)) + 10 | 0 : Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(128)) < 0 ? -1 : (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65313)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65338)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(65313)) + 10 | 0 : (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65345)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65370)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(65345)) + 10 | 0 : digitToIntImpl(char);
      {
      }
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_let >= radix ? -1 : tmp0_let;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  }
  function isNaN_2(_this__u8e3s4) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = _this__u8e3s4;
      }
      tmp$ret$1 = tmp$ret$0.toLowerCase();
    }
    var tmp0_subject = tmp$ret$1;
    switch (tmp0_subject) {
      case 'nan':
      case '+nan':
      case '-nan':
        return true;
      default:
        return false;
    }
  }
  function toInt(_this__u8e3s4) {
    var tmp0_elvis_lhs = toIntOrNull(_this__u8e3s4);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toFloat(_this__u8e3s4) {
    var tmp$ret$1;
    {
      var tmp0_unsafeCast = toDouble(_this__u8e3s4);
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_unsafeCast;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  }
  function toInt_0(_this__u8e3s4, radix) {
    var tmp0_elvis_lhs = toIntOrNull_0(_this__u8e3s4, radix);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toBoolean(_this__u8e3s4) {
    var tmp;
    if (!(_this__u8e3s4 == null)) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = _this__u8e3s4;
        }
        tmp$ret$1 = tmp$ret$0.toLowerCase();
      }
      tmp = tmp$ret$1 === 'true';
    } else {
      tmp = false;
    }
    return tmp;
  }
  function Regex_init_$Init$(pattern, $this) {
    Regex.call($this, pattern, emptySet());
    return $this;
  }
  function Regex_init_$Create$(pattern) {
    return Regex_init_$Init$(pattern, Object.create(Regex.prototype));
  }
  function Companion_11() {
    Companion_instance_11 = this;
    this.jk_1 = new RegExp('[\\\\^$*+?.()|[\\]{}]', 'g');
    this.kk_1 = new RegExp('[\\\\$]', 'g');
    this.lk_1 = new RegExp('\\$', 'g');
  }
  Companion_11.prototype.mk = function (literal) {
    var tmp$ret$1;
    {
      var tmp0_nativeReplace = this.jk_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = literal;
      }
      tmp$ret$1 = tmp$ret$0.replace(tmp0_nativeReplace, '\\$&');
    }
    return tmp$ret$1;
  };
  Companion_11.$metadata$ = objectMeta('Companion');
  var Companion_instance_11;
  function Companion_getInstance_11() {
    if (Companion_instance_11 == null)
      new Companion_11();
    return Companion_instance_11;
  }
  function Regex(pattern, options) {
    Companion_getInstance_11();
    this.wa_1 = pattern;
    this.xa_1 = toSet(options);
    this.ya_1 = new RegExp(pattern, toFlags(options, 'gu'));
    this.za_1 = null;
    this.ab_1 = null;
  }
  Regex.prototype.bb = function (input) {
    reset(this.ya_1);
    var match = this.ya_1.exec(toString_2(input));
    return (!(match == null) ? match.index === 0 : false) ? this.ya_1.lastIndex === charSequenceLength(input) : false;
  };
  Regex.prototype.toString = function () {
    return this.ya_1.toString();
  };
  Regex.$metadata$ = classMeta('Regex');
  function toFlags(_this__u8e3s4, prepend) {
    return joinToString$default_0(_this__u8e3s4, '', prepend, null, 0, null, toFlags$lambda(), 28, null);
  }
  function toFlags$lambda() {
    return function (it) {
      return it.pk_1;
    };
  }
  var STRING_CASE_INSENSITIVE_ORDER;
  function nativeLastIndexOf(_this__u8e3s4, str, fromIndex) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0.lastIndexOf(str, fromIndex);
  }
  function substring_2(_this__u8e3s4, startIndex, endIndex) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0.substring(startIndex, endIndex);
  }
  function substring_3(_this__u8e3s4, startIndex) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0.substring(startIndex);
  }
  function compareTo(_this__u8e3s4, other, ignoreCase) {
    init_properties_string_kt_z8k4s7();
    if (ignoreCase) {
      var n1 = _this__u8e3s4.length;
      var n2 = other.length;
      var tmp$ret$0;
      {
        tmp$ret$0 = Math.min(n1, n2);
      }
      var min = tmp$ret$0;
      if (min === 0)
        return n1 - n2 | 0;
      var inductionVariable = 0;
      if (inductionVariable < min)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var thisChar = charSequenceGet(_this__u8e3s4, index);
          var otherChar = charSequenceGet(other, index);
          if (!equals_1(new Char_0(thisChar), new Char_0(otherChar))) {
            thisChar = uppercaseChar(thisChar);
            otherChar = uppercaseChar(otherChar);
            if (!equals_1(new Char_0(thisChar), new Char_0(otherChar))) {
              var tmp$ret$4;
              {
                var tmp0_lowercaseChar = thisChar;
                var tmp$ret$3;
                {
                  var tmp$ret$2;
                  {
                    var tmp$ret$1;
                    {
                      var tmp0_asDynamic = toString_0(tmp0_lowercaseChar);
                      tmp$ret$1 = tmp0_asDynamic;
                    }
                    var tmp1_unsafeCast = tmp$ret$1.toLowerCase();
                    tmp$ret$2 = tmp1_unsafeCast;
                  }
                  tmp$ret$3 = tmp$ret$2;
                }
                tmp$ret$4 = charSequenceGet(tmp$ret$3, 0);
              }
              thisChar = tmp$ret$4;
              var tmp$ret$8;
              {
                var tmp1_lowercaseChar = otherChar;
                var tmp$ret$7;
                {
                  var tmp$ret$6;
                  {
                    var tmp$ret$5;
                    {
                      var tmp0_asDynamic_0 = toString_0(tmp1_lowercaseChar);
                      tmp$ret$5 = tmp0_asDynamic_0;
                    }
                    var tmp1_unsafeCast_0 = tmp$ret$5.toLowerCase();
                    tmp$ret$6 = tmp1_unsafeCast_0;
                  }
                  tmp$ret$7 = tmp$ret$6;
                }
                tmp$ret$8 = charSequenceGet(tmp$ret$7, 0);
              }
              otherChar = tmp$ret$8;
              if (!equals_1(new Char_0(thisChar), new Char_0(otherChar))) {
                return Char__compareTo_impl_ypi4mb(thisChar, otherChar);
              }
            }
          }
        }
         while (inductionVariable < min);
      return n1 - n2 | 0;
    } else {
      return compareTo_0(_this__u8e3s4, other);
    }
  }
  function decodeToString(_this__u8e3s4) {
    init_properties_string_kt_z8k4s7();
    return decodeUtf8(_this__u8e3s4, 0, _this__u8e3s4.length, false);
  }
  function lowercase_0(_this__u8e3s4) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0.toLowerCase();
  }
  function nativeReplace(_this__u8e3s4, pattern, replacement) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0.replace(pattern, replacement);
  }
  function nativeStartsWith(_this__u8e3s4, s, position) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0.startsWith(s, position);
  }
  function nativeIndexOf(_this__u8e3s4, str, fromIndex) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0.indexOf(str, fromIndex);
  }
  function sam$kotlin_Comparator$0_1(function_0) {
    this.qk_1 = function_0;
  }
  sam$kotlin_Comparator$0_1.prototype.y = function (a, b) {
    return this.qk_1(a, b);
  };
  sam$kotlin_Comparator$0_1.prototype.compare = function (a, b) {
    return this.y(a, b);
  };
  sam$kotlin_Comparator$0_1.$metadata$ = classMeta('sam$kotlin_Comparator$0', [Comparator]);
  function STRING_CASE_INSENSITIVE_ORDER$lambda() {
    return function (a, b) {
      return compareTo(a, b, true);
    };
  }
  var properties_initialized_string_kt_4g1sj;
  function init_properties_string_kt_z8k4s7() {
    if (properties_initialized_string_kt_4g1sj) {
    } else {
      properties_initialized_string_kt_4g1sj = true;
      var tmp = STRING_CASE_INSENSITIVE_ORDER$lambda();
      STRING_CASE_INSENSITIVE_ORDER = new sam$kotlin_Comparator$0_1(tmp);
    }
  }
  function replace(_this__u8e3s4, oldChar, newChar, ignoreCase) {
    var tmp$ret$1;
    {
      var tmp0_nativeReplace = new RegExp(Companion_getInstance_11().mk(toString_0(oldChar)), ignoreCase ? 'gui' : 'gu');
      var tmp1_nativeReplace = toString_0(newChar);
      var tmp$ret$0;
      {
        tmp$ret$0 = _this__u8e3s4;
      }
      tmp$ret$1 = tmp$ret$0.replace(tmp0_nativeReplace, tmp1_nativeReplace);
    }
    return tmp$ret$1;
  }
  function replace$default(_this__u8e3s4, oldChar, newChar, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return replace(_this__u8e3s4, oldChar, newChar, ignoreCase);
  }
  function regionMatches(_this__u8e3s4, thisOffset, other, otherOffset, length, ignoreCase) {
    return regionMatchesImpl(_this__u8e3s4, thisOffset, other, otherOffset, length, ignoreCase);
  }
  function startsWith_1(_this__u8e3s4, prefix, ignoreCase) {
    if (!ignoreCase) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = _this__u8e3s4;
        }
        tmp$ret$1 = tmp$ret$0.startsWith(prefix, 0);
      }
      return tmp$ret$1;
    } else
      return regionMatches(_this__u8e3s4, 0, prefix, 0, prefix.length, ignoreCase);
  }
  function startsWith$default_1(_this__u8e3s4, prefix, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    return startsWith_1(_this__u8e3s4, prefix, ignoreCase);
  }
  function isBlank(_this__u8e3s4) {
    var tmp;
    if (charSequenceLength(_this__u8e3s4) === 0) {
      tmp = true;
    } else {
      var tmp$ret$0;
      $l$block_0: {
        var tmp0_all = get_indices_3(_this__u8e3s4);
        var tmp_0;
        if (isInterface(tmp0_all, Collection)) {
          tmp_0 = tmp0_all.q();
        } else {
          tmp_0 = false;
        }
        if (tmp_0) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
        var inductionVariable = tmp0_all.i9();
        var last = tmp0_all.k9();
        if (inductionVariable <= last)
          do {
            var element = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var tmp$ret$1;
            {
              tmp$ret$1 = isWhitespace(charSequenceGet(_this__u8e3s4, element));
            }
            if (!tmp$ret$1) {
              tmp$ret$0 = false;
              break $l$block_0;
            }
          }
           while (!(element === last));
        tmp$ret$0 = true;
      }
      tmp = tmp$ret$0;
    }
    return tmp;
  }
  function nativeIndexOf_0(_this__u8e3s4, ch, fromIndex) {
    var tmp$ret$1;
    {
      var tmp0_nativeIndexOf = toString_0(ch);
      var tmp$ret$0;
      {
        tmp$ret$0 = _this__u8e3s4;
      }
      tmp$ret$1 = tmp$ret$0.indexOf(tmp0_nativeIndexOf, fromIndex);
    }
    return tmp$ret$1;
  }
  function equals_0(_this__u8e3s4, other, ignoreCase) {
    if (_this__u8e3s4 == null)
      return other == null;
    if (other == null)
      return false;
    if (!ignoreCase)
      return _this__u8e3s4 == other;
    if (!(_this__u8e3s4.length === other.length))
      return false;
    var inductionVariable = 0;
    var last = _this__u8e3s4.length;
    if (inductionVariable < last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var thisChar = charSequenceGet(_this__u8e3s4, index);
        var otherChar = charSequenceGet(other, index);
        if (!equals(thisChar, otherChar, ignoreCase)) {
          return false;
        }
      }
       while (inductionVariable < last);
    return true;
  }
  var REPLACEMENT_BYTE_SEQUENCE;
  function decodeUtf8(bytes, startIndex, endIndex, throwOnMalformed) {
    init_properties_utf8Encoding_kt_xjxnfa();
    {
      var tmp0_require = (startIndex >= 0 ? endIndex <= bytes.length : false) ? startIndex <= endIndex : false;
      {
      }
      {
        {
        }
        if (!tmp0_require) {
          var tmp$ret$0;
          {
            tmp$ret$0 = 'Failed requirement.';
          }
          var message = tmp$ret$0;
          throw IllegalArgumentException_init_$Create$_0(toString_2(message));
        }
      }
    }
    var byteIndex = startIndex;
    var stringBuilder = StringBuilder_init_$Create$_0();
    while (byteIndex < endIndex) {
      var tmp0 = byteIndex;
      byteIndex = tmp0 + 1 | 0;
      var byte = bytes[tmp0];
      if (byte >= 0) {
        stringBuilder.ea(numberToChar(byte));
      } else if (byte >> 5 === -2) {
        var code = codePointFrom2(bytes, byte, byteIndex, endIndex, throwOnMalformed);
        if (code <= 0) {
          stringBuilder.ea(_Char___init__impl__6a9atx(65533));
          byteIndex = byteIndex + (-code | 0) | 0;
        } else {
          stringBuilder.ea(numberToChar(code));
          byteIndex = byteIndex + 1 | 0;
        }
      } else if (byte >> 4 === -2) {
        var code_0 = codePointFrom3(bytes, byte, byteIndex, endIndex, throwOnMalformed);
        if (code_0 <= 0) {
          stringBuilder.ea(_Char___init__impl__6a9atx(65533));
          byteIndex = byteIndex + (-code_0 | 0) | 0;
        } else {
          stringBuilder.ea(numberToChar(code_0));
          byteIndex = byteIndex + 2 | 0;
        }
      } else if (byte >> 3 === -2) {
        var code_1 = codePointFrom4(bytes, byte, byteIndex, endIndex, throwOnMalformed);
        if (code_1 <= 0) {
          stringBuilder.ea(_Char___init__impl__6a9atx(65533));
          byteIndex = byteIndex + (-code_1 | 0) | 0;
        } else {
          var high = (code_1 - 65536 | 0) >> 10 | 55296;
          var low = code_1 & 1023 | 56320;
          stringBuilder.ea(numberToChar(high));
          stringBuilder.ea(numberToChar(low));
          byteIndex = byteIndex + 3 | 0;
        }
      } else {
        malformed(0, byteIndex, throwOnMalformed);
        stringBuilder.ea(_Char___init__impl__6a9atx(65533));
      }
    }
    return stringBuilder.toString();
  }
  function codePointFrom2(bytes, byte1, index, endIndex, throwOnMalformed) {
    init_properties_utf8Encoding_kt_xjxnfa();
    if ((byte1 & 30) === 0 ? true : index >= endIndex) {
      return malformed(0, index, throwOnMalformed);
    }
    var byte2 = bytes[index];
    if (!((byte2 & 192) === 128)) {
      return malformed(0, index, throwOnMalformed);
    }
    return byte1 << 6 ^ byte2 ^ 3968;
  }
  function codePointFrom3(bytes, byte1, index, endIndex, throwOnMalformed) {
    init_properties_utf8Encoding_kt_xjxnfa();
    if (index >= endIndex) {
      return malformed(0, index, throwOnMalformed);
    }
    var byte2 = bytes[index];
    if ((byte1 & 15) === 0) {
      if (!((byte2 & 224) === 160)) {
        return malformed(0, index, throwOnMalformed);
      }
    } else if ((byte1 & 15) === 13) {
      if (!((byte2 & 224) === 128)) {
        return malformed(0, index, throwOnMalformed);
      }
    } else if (!((byte2 & 192) === 128)) {
      return malformed(0, index, throwOnMalformed);
    }
    if ((index + 1 | 0) === endIndex) {
      return malformed(1, index, throwOnMalformed);
    }
    var byte3 = bytes[index + 1 | 0];
    if (!((byte3 & 192) === 128)) {
      return malformed(1, index, throwOnMalformed);
    }
    return byte1 << 12 ^ byte2 << 6 ^ byte3 ^ -123008;
  }
  function codePointFrom4(bytes, byte1, index, endIndex, throwOnMalformed) {
    init_properties_utf8Encoding_kt_xjxnfa();
    if (index >= endIndex) {
      malformed(0, index, throwOnMalformed);
    }
    var byte2 = bytes[index];
    if ((byte1 & 15) === 0) {
      if ((byte2 & 240) <= 128) {
        return malformed(0, index, throwOnMalformed);
      }
    } else if ((byte1 & 15) === 4) {
      if (!((byte2 & 240) === 128)) {
        return malformed(0, index, throwOnMalformed);
      }
    } else if ((byte1 & 15) > 4) {
      return malformed(0, index, throwOnMalformed);
    } else if (!((byte2 & 192) === 128)) {
      return malformed(0, index, throwOnMalformed);
    }
    if ((index + 1 | 0) === endIndex) {
      return malformed(1, index, throwOnMalformed);
    }
    var byte3 = bytes[index + 1 | 0];
    if (!((byte3 & 192) === 128)) {
      return malformed(1, index, throwOnMalformed);
    }
    if ((index + 2 | 0) === endIndex) {
      return malformed(2, index, throwOnMalformed);
    }
    var byte4 = bytes[index + 2 | 0];
    if (!((byte4 & 192) === 128)) {
      return malformed(2, index, throwOnMalformed);
    }
    return byte1 << 18 ^ byte2 << 12 ^ byte3 << 6 ^ byte4 ^ 3678080;
  }
  function malformed(size, index, throwOnMalformed) {
    init_properties_utf8Encoding_kt_xjxnfa();
    if (throwOnMalformed)
      throw new CharacterCodingException('Malformed sequence starting at ' + (index - 1 | 0));
    return -size | 0;
  }
  var properties_initialized_utf8Encoding_kt_eee1vq;
  function init_properties_utf8Encoding_kt_xjxnfa() {
    if (properties_initialized_utf8Encoding_kt_eee1vq) {
    } else {
      properties_initialized_utf8Encoding_kt_eee1vq = true;
      var tmp$ret$0;
      {
        var tmp0_byteArrayOf = new Int8Array([-17, -65, -67]);
        tmp$ret$0 = tmp0_byteArrayOf;
      }
      REPLACEMENT_BYTE_SEQUENCE = tmp$ret$0;
    }
  }
  function addSuppressed(_this__u8e3s4, exception) {
    if (!(_this__u8e3s4 === exception)) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = _this__u8e3s4;
        }
        var tmp0_unsafeCast = tmp$ret$0._suppressed;
        tmp$ret$1 = tmp0_unsafeCast;
      }
      var suppressed = tmp$ret$1;
      if (suppressed == null) {
        var tmp$ret$2;
        {
          tmp$ret$2 = _this__u8e3s4;
        }
        tmp$ret$2._suppressed = mutableListOf_0([exception]);
      } else {
        suppressed.b(exception);
      }
    }
  }
  function get_durationAssertionsEnabled() {
    return true;
  }
  var DurationUnit_NANOSECONDS_instance;
  var DurationUnit_MICROSECONDS_instance;
  var DurationUnit_MILLISECONDS_instance;
  var DurationUnit_SECONDS_instance;
  var DurationUnit_MINUTES_instance;
  var DurationUnit_HOURS_instance;
  var DurationUnit_DAYS_instance;
  var DurationUnit_entriesInitialized;
  function DurationUnit_initEntries() {
    if (DurationUnit_entriesInitialized)
      return Unit_getInstance();
    DurationUnit_entriesInitialized = true;
    DurationUnit_NANOSECONDS_instance = new DurationUnit('NANOSECONDS', 0, 1.0);
    DurationUnit_MICROSECONDS_instance = new DurationUnit('MICROSECONDS', 1, 1000.0);
    DurationUnit_MILLISECONDS_instance = new DurationUnit('MILLISECONDS', 2, 1000000.0);
    DurationUnit_SECONDS_instance = new DurationUnit('SECONDS', 3, 1.0E9);
    DurationUnit_MINUTES_instance = new DurationUnit('MINUTES', 4, 6.0E10);
    DurationUnit_HOURS_instance = new DurationUnit('HOURS', 5, 3.6E12);
    DurationUnit_DAYS_instance = new DurationUnit('DAYS', 6, 8.64E13);
  }
  function DurationUnit(name, ordinal, scale) {
    Enum.call(this, name, ordinal);
    this.tk_1 = scale;
  }
  DurationUnit.$metadata$ = classMeta('DurationUnit', undefined, undefined, undefined, undefined, Enum.prototype);
  function convertDurationUnit(value, sourceUnit, targetUnit) {
    var sourceCompareTarget = compareTo_0(sourceUnit.tk_1, targetUnit.tk_1);
    return sourceCompareTarget > 0 ? value * (sourceUnit.tk_1 / targetUnit.tk_1) : sourceCompareTarget < 0 ? value / (targetUnit.tk_1 / sourceUnit.tk_1) : value;
  }
  function convertDurationUnit_0(value, sourceUnit, targetUnit) {
    var sourceCompareTarget = compareTo_0(sourceUnit.tk_1, targetUnit.tk_1);
    var tmp;
    if (sourceCompareTarget > 0) {
      var scale = numberToLong(sourceUnit.tk_1 / targetUnit.tk_1);
      var result = value.ja(scale);
      var tmp_0;
      if (result.ia(scale).equals(value)) {
        tmp_0 = result;
      } else if (value.m1(new Long(0, 0)) > 0) {
        Companion_getInstance_14();
        tmp_0 = new Long(-1, 2147483647);
      } else {
        Companion_getInstance_14();
        tmp_0 = new Long(0, -2147483648);
      }
      tmp = tmp_0;
    } else if (sourceCompareTarget < 0) {
      tmp = value.ia(numberToLong(targetUnit.tk_1 / sourceUnit.tk_1));
    } else {
      tmp = value;
    }
    return tmp;
  }
  function convertDurationUnitOverflow(value, sourceUnit, targetUnit) {
    var sourceCompareTarget = compareTo_0(sourceUnit.tk_1, targetUnit.tk_1);
    return sourceCompareTarget > 0 ? value.ja(numberToLong(sourceUnit.tk_1 / targetUnit.tk_1)) : sourceCompareTarget < 0 ? value.ia(numberToLong(targetUnit.tk_1 / sourceUnit.tk_1)) : value;
  }
  function DurationUnit_NANOSECONDS_getInstance() {
    DurationUnit_initEntries();
    return DurationUnit_NANOSECONDS_instance;
  }
  function DurationUnit_MICROSECONDS_getInstance() {
    DurationUnit_initEntries();
    return DurationUnit_MICROSECONDS_instance;
  }
  function DurationUnit_MILLISECONDS_getInstance() {
    DurationUnit_initEntries();
    return DurationUnit_MILLISECONDS_instance;
  }
  function DurationUnit_SECONDS_getInstance() {
    DurationUnit_initEntries();
    return DurationUnit_SECONDS_instance;
  }
  function DurationUnit_MINUTES_getInstance() {
    DurationUnit_initEntries();
    return DurationUnit_MINUTES_instance;
  }
  function DurationUnit_HOURS_getInstance() {
    DurationUnit_initEntries();
    return DurationUnit_HOURS_instance;
  }
  function DurationUnit_DAYS_getInstance() {
    DurationUnit_initEntries();
    return DurationUnit_DAYS_instance;
  }
  function MonotonicTimeSource() {
    MonotonicTimeSource_instance = this;
    var tmp = this;
    var tmp$ret$4;
    {
      {
      }
      var tmp$ret$3;
      {
        var isNode = typeof process !== 'undefined' && process.versions && !!process.versions.node;
        var tmp_0;
        if (isNode) {
          var tmp$ret$0;
          {
            var tmp0_unsafeCast = process;
            tmp$ret$0 = tmp0_unsafeCast;
          }
          tmp_0 = new HrTimeSource(tmp$ret$0);
        } else {
          var tmp$ret$1;
          {
            var tmp1_unsafeCast = typeof self !== 'undefined' ? self : globalThis;
            tmp$ret$1 = tmp1_unsafeCast;
          }
          var tmp0_safe_receiver = tmp$ret$1;
          var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.performance;
          var tmp_1;
          if (tmp1_safe_receiver == null) {
            tmp_1 = null;
          } else {
            var tmp$ret$2;
            {
              {
              }
              tmp$ret$2 = new PerformanceTimeSource(tmp1_safe_receiver);
            }
            tmp_1 = tmp$ret$2;
          }
          var tmp2_elvis_lhs = tmp_1;
          tmp_0 = tmp2_elvis_lhs == null ? DateNowTimeSource_getInstance() : tmp2_elvis_lhs;
        }
        tmp$ret$3 = tmp_0;
      }
      tmp$ret$4 = tmp$ret$3;
    }
    tmp.ub_1 = tmp$ret$4;
  }
  MonotonicTimeSource.prototype.yb = function () {
    return this.ub_1.yb();
  };
  MonotonicTimeSource.prototype.uk = function () {
    return new ValueTimeMark(this.yb());
  };
  MonotonicTimeSource.prototype.vb = function (timeMark) {
    return this.ub_1.vb(timeMark);
  };
  MonotonicTimeSource.$metadata$ = objectMeta('MonotonicTimeSource', [DefaultTimeSource, TimeSource]);
  var MonotonicTimeSource_instance;
  function MonotonicTimeSource_getInstance() {
    if (MonotonicTimeSource_instance == null)
      new MonotonicTimeSource();
    return MonotonicTimeSource_instance;
  }
  function DefaultTimeSource() {
  }
  DefaultTimeSource.$metadata$ = interfaceMeta('DefaultTimeSource', [TimeSource]);
  function HrTimeSource(process) {
    this.vk_1 = process;
  }
  HrTimeSource.prototype.yb = function () {
    return _ValueTimeMark___init__impl__uyfl2m(this.vk_1.hrtime());
  };
  HrTimeSource.prototype.uk = function () {
    return new ValueTimeMark(this.yb());
  };
  HrTimeSource.prototype.vb = function (timeMark) {
    var tmp$ret$3;
    {
      var tmp = _ValueTimeMark___get_reading__impl__5qz8rd(timeMark);
      var tmp0_let = this.vk_1.hrtime(isArray(tmp) ? tmp : THROW_CCE());
      {
      }
      var tmp$ret$2;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_let[0];
        }
        var seconds = tmp$ret$0;
        var tmp$ret$1;
        {
          tmp$ret$1 = tmp0_let[1];
        }
        var nanos = tmp$ret$1;
        tmp$ret$2 = Duration__plus_impl_yu9v8f(toDuration_0(seconds, DurationUnit_SECONDS_getInstance()), toDuration_0(nanos, DurationUnit_NANOSECONDS_getInstance()));
      }
      tmp$ret$3 = tmp$ret$2;
    }
    return tmp$ret$3;
  };
  HrTimeSource.prototype.toString = function () {
    return 'TimeSource(process.hrtime())';
  };
  HrTimeSource.$metadata$ = classMeta('HrTimeSource', [DefaultTimeSource]);
  function read($this) {
    return $this.wk_1.now();
  }
  function PerformanceTimeSource(performance) {
    this.wk_1 = performance;
  }
  PerformanceTimeSource.prototype.yb = function () {
    return _ValueTimeMark___init__impl__uyfl2m(read(this));
  };
  PerformanceTimeSource.prototype.uk = function () {
    return new ValueTimeMark(this.yb());
  };
  PerformanceTimeSource.prototype.vb = function (timeMark) {
    var tmp$ret$0;
    {
      var tmp0__get_milliseconds__kazo1t = Companion_getInstance_7();
      var tmp = read(this);
      var tmp_0 = _ValueTimeMark___get_reading__impl__5qz8rd(timeMark);
      var tmp1__get_milliseconds__r2e6ua = tmp - (typeof tmp_0 === 'number' ? tmp_0 : THROW_CCE());
      tmp$ret$0 = toDuration_0(tmp1__get_milliseconds__r2e6ua, DurationUnit_MILLISECONDS_getInstance());
    }
    return tmp$ret$0;
  };
  PerformanceTimeSource.prototype.toString = function () {
    return 'TimeSource(self.performance.now())';
  };
  PerformanceTimeSource.$metadata$ = classMeta('PerformanceTimeSource', [DefaultTimeSource]);
  function read_0($this) {
    return Date.now();
  }
  function DateNowTimeSource() {
    DateNowTimeSource_instance = this;
  }
  DateNowTimeSource.prototype.yb = function () {
    return _ValueTimeMark___init__impl__uyfl2m(read_0(this));
  };
  DateNowTimeSource.prototype.uk = function () {
    return new ValueTimeMark(this.yb());
  };
  DateNowTimeSource.prototype.vb = function (timeMark) {
    var tmp$ret$0;
    {
      var tmp0__get_milliseconds__kazo1t = Companion_getInstance_7();
      var tmp = read_0(this);
      var tmp_0 = _ValueTimeMark___get_reading__impl__5qz8rd(timeMark);
      var tmp1__get_milliseconds__r2e6ua = tmp - (typeof tmp_0 === 'number' ? tmp_0 : THROW_CCE());
      tmp$ret$0 = toDuration_0(tmp1__get_milliseconds__r2e6ua, DurationUnit_MILLISECONDS_getInstance());
    }
    return tmp$ret$0;
  };
  DateNowTimeSource.prototype.toString = function () {
    return 'TimeSource(Date.now())';
  };
  DateNowTimeSource.$metadata$ = objectMeta('DateNowTimeSource', [DefaultTimeSource]);
  var DateNowTimeSource_instance;
  function DateNowTimeSource_getInstance() {
    if (DateNowTimeSource_instance == null)
      new DateNowTimeSource();
    return DateNowTimeSource_instance;
  }
  function get_2(_this__u8e3s4, index) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0[index];
  }
  function set_0(_this__u8e3s4, index, value) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    tmp$ret$0[index] = value;
  }
  function get_3(_this__u8e3s4, index) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0[index];
  }
  function set_1(_this__u8e3s4, index, value) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    tmp$ret$0[index] = value;
  }
  function get_4(_this__u8e3s4, index) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0[index];
  }
  function set_2(_this__u8e3s4, index, value) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    tmp$ret$0[index] = value;
  }
  function get_5(_this__u8e3s4, index) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0[index];
  }
  function set_3(_this__u8e3s4, index, value) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    tmp$ret$0[index] = value;
  }
  function set_4(_this__u8e3s4, key, value) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    tmp$ret$0[key] = value;
  }
  function get_6(_this__u8e3s4, key) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0[key];
  }
  function get_7(_this__u8e3s4, index) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0[index];
  }
  function get_ARRAYBUFFER(_this__u8e3s4) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = 'arraybuffer';
      }
      var tmp0_unsafeCast = tmp$ret$0;
      tmp$ret$1 = tmp0_unsafeCast;
    }
    return tmp$ret$1;
  }
  function _Char___init__impl__6a9atx(value) {
    return value;
  }
  function _get_value__a43j40_0($this) {
    return $this;
  }
  function _Char___init__impl__6a9atx_0(code) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _UShort___get_data__impl__g0245(code) & 65535;
    }
    var tmp = _Char___init__impl__6a9atx(tmp$ret$0);
    return tmp;
  }
  function Char__compareTo_impl_ypi4mb($this, other) {
    return _get_value__a43j40_0($this) - _get_value__a43j40_0(other) | 0;
  }
  function Char__compareTo_impl_ypi4mb_0($this, other) {
    var tmp = $this.p1_1;
    return Char__compareTo_impl_ypi4mb(tmp, other instanceof Char_0 ? other.p1_1 : THROW_CCE());
  }
  function Char__plus_impl_qi7pgj($this, other) {
    return numberToChar(_get_value__a43j40_0($this) + other | 0);
  }
  function Char__minus_impl_a2frrh($this, other) {
    return _get_value__a43j40_0($this) - _get_value__a43j40_0(other) | 0;
  }
  function Char__rangeTo_impl_tkncvp($this, other) {
    return new CharRange($this, other);
  }
  function Char__toInt_impl_vasixd($this) {
    return _get_value__a43j40_0($this);
  }
  function Char__equals_impl_x6719k($this, other) {
    if (!(other instanceof Char_0))
      return false;
    return _get_value__a43j40_0($this) === _get_value__a43j40_0(other.p1_1);
  }
  function Char__hashCode_impl_otmys($this) {
    return _get_value__a43j40_0($this);
  }
  function toString_0($this) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = String.fromCharCode(_get_value__a43j40_0($this));
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function Companion_12() {
    Companion_instance_12 = this;
    this.xk_1 = _Char___init__impl__6a9atx(0);
    this.yk_1 = _Char___init__impl__6a9atx(65535);
    this.zk_1 = _Char___init__impl__6a9atx(55296);
    this.al_1 = _Char___init__impl__6a9atx(56319);
    this.bl_1 = _Char___init__impl__6a9atx(56320);
    this.cl_1 = _Char___init__impl__6a9atx(57343);
    this.dl_1 = _Char___init__impl__6a9atx(55296);
    this.el_1 = _Char___init__impl__6a9atx(57343);
    this.fl_1 = 2;
    this.gl_1 = 16;
  }
  Companion_12.$metadata$ = objectMeta('Companion');
  var Companion_instance_12;
  function Companion_getInstance_12() {
    if (Companion_instance_12 == null)
      new Companion_12();
    return Companion_instance_12;
  }
  function Char_0(value) {
    Companion_getInstance_12();
    this.p1_1 = value;
  }
  Char_0.prototype.hl = function (other) {
    return Char__compareTo_impl_ypi4mb(this.p1_1, other);
  };
  Char_0.prototype.sb = function (other) {
    return Char__compareTo_impl_ypi4mb_0(this, other);
  };
  Char_0.prototype.equals = function (other) {
    return Char__equals_impl_x6719k(this.p1_1, other);
  };
  Char_0.prototype.hashCode = function () {
    return Char__hashCode_impl_otmys(this.p1_1);
  };
  Char_0.prototype.toString = function () {
    return toString_0(this.p1_1);
  };
  Char_0.$metadata$ = classMeta('Char', [Comparable]);
  function Iterable_0() {
  }
  Iterable_0.$metadata$ = interfaceMeta('Iterable');
  function Entry() {
  }
  Entry.$metadata$ = interfaceMeta('Entry');
  function Map() {
  }
  Map.$metadata$ = interfaceMeta('Map');
  function List_0() {
  }
  List_0.$metadata$ = interfaceMeta('List', [Collection]);
  function Collection() {
  }
  Collection.$metadata$ = interfaceMeta('Collection', [Iterable_0]);
  function MutableEntry() {
  }
  MutableEntry.$metadata$ = interfaceMeta('MutableEntry', [Entry]);
  function MutableMap() {
  }
  MutableMap.$metadata$ = interfaceMeta('MutableMap', [Map]);
  function MutableList_0() {
  }
  MutableList_0.$metadata$ = interfaceMeta('MutableList', [List_0, MutableCollection]);
  function MutableSet() {
  }
  MutableSet.$metadata$ = interfaceMeta('MutableSet', [Set, MutableCollection]);
  function Set() {
  }
  Set.$metadata$ = interfaceMeta('Set', [Collection]);
  function MutableCollection() {
  }
  MutableCollection.$metadata$ = interfaceMeta('MutableCollection', [Collection, MutableIterable]);
  function MutableIterable() {
  }
  MutableIterable.$metadata$ = interfaceMeta('MutableIterable', [Iterable_0]);
  function Companion_13() {
    Companion_instance_13 = this;
  }
  Companion_13.$metadata$ = objectMeta('Companion');
  var Companion_instance_13;
  function Companion_getInstance_13() {
    if (Companion_instance_13 == null)
      new Companion_13();
    return Companion_instance_13;
  }
  function Enum(name, ordinal) {
    Companion_getInstance_13();
    this.w1_1 = name;
    this.x1_1 = ordinal;
  }
  Enum.prototype.il = function () {
    return this.w1_1;
  };
  Enum.prototype.y1 = function () {
    return this.x1_1;
  };
  Enum.prototype.b2 = function (other) {
    return compareTo_0(this.x1_1, other.x1_1);
  };
  Enum.prototype.sb = function (other) {
    return this.b2(other instanceof Enum ? other : THROW_CCE());
  };
  Enum.prototype.equals = function (other) {
    return this === other;
  };
  Enum.prototype.hashCode = function () {
    return identityHashCode(this);
  };
  Enum.prototype.toString = function () {
    return this.w1_1;
  };
  Enum.$metadata$ = classMeta('Enum', [Comparable]);
  function byteArrayOf(elements) {
    return elements;
  }
  function arrayOf(elements) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = elements;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  }
  function toString_1(_this__u8e3s4) {
    var tmp0_safe_receiver = _this__u8e3s4;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : toString_2(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs;
  }
  function charArrayOf(elements) {
    return elements;
  }
  function intArrayOf(elements) {
    return elements;
  }
  function plus_2(_this__u8e3s4, other) {
    var tmp2_safe_receiver = _this__u8e3s4;
    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : toString_2(tmp2_safe_receiver);
    var tmp = tmp3_elvis_lhs == null ? 'null' : tmp3_elvis_lhs;
    var tmp0_safe_receiver = other;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : toString_2(tmp0_safe_receiver);
    return tmp + (tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs);
  }
  function fillArrayVal(array, initValue) {
    var inductionVariable = 0;
    var last = array.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        array[i] = initValue;
      }
       while (!(i === last));
    return array;
  }
  function arrayIterator(array) {
    return new arrayIterator$1(array);
  }
  function booleanArrayIterator(array) {
    return new booleanArrayIterator$1(array);
  }
  function intArrayIterator(array) {
    return new intArrayIterator$1(array);
  }
  function booleanArray(size) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_withType = fillArrayVal(Array(size), false);
        tmp0_withType.$type$ = 'BooleanArray';
        tmp$ret$0 = tmp0_withType;
      }
      var tmp1_unsafeCast = tmp$ret$0;
      tmp$ret$1 = tmp1_unsafeCast;
    }
    return tmp$ret$1;
  }
  function charArray(size) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_withType = new Uint16Array(size);
        tmp0_withType.$type$ = 'CharArray';
        tmp$ret$0 = tmp0_withType;
      }
      var tmp1_unsafeCast = tmp$ret$0;
      tmp$ret$1 = tmp1_unsafeCast;
    }
    return tmp$ret$1;
  }
  function longArray(size) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_withType = fillArrayVal(Array(size), new Long(0, 0));
        tmp0_withType.$type$ = 'LongArray';
        tmp$ret$0 = tmp0_withType;
      }
      var tmp1_unsafeCast = tmp$ret$0;
      tmp$ret$1 = tmp1_unsafeCast;
    }
    return tmp$ret$1;
  }
  function charArrayOf_0(arr) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_withType = new Uint16Array(arr);
        tmp0_withType.$type$ = 'CharArray';
        tmp$ret$0 = tmp0_withType;
      }
      var tmp1_unsafeCast = tmp$ret$0;
      tmp$ret$1 = tmp1_unsafeCast;
    }
    return tmp$ret$1;
  }
  function arrayIterator$1($array) {
    this.kl_1 = $array;
    this.jl_1 = 0;
  }
  arrayIterator$1.prototype.n = function () {
    return !(this.jl_1 === this.kl_1.length);
  };
  arrayIterator$1.prototype.o = function () {
    var tmp;
    if (!(this.jl_1 === this.kl_1.length)) {
      var tmp0_this = this;
      var tmp1 = tmp0_this.jl_1;
      tmp0_this.jl_1 = tmp1 + 1 | 0;
      tmp = this.kl_1[tmp1];
    } else {
      throw NoSuchElementException_init_$Create$_0('' + this.jl_1);
    }
    return tmp;
  };
  arrayIterator$1.$metadata$ = classMeta(undefined, [Iterator]);
  function booleanArrayIterator$1($array) {
    this.ml_1 = $array;
    BooleanIterator.call(this);
    this.ll_1 = 0;
  }
  booleanArrayIterator$1.prototype.n = function () {
    return !(this.ll_1 === this.ml_1.length);
  };
  booleanArrayIterator$1.prototype.j4 = function () {
    var tmp;
    if (!(this.ll_1 === this.ml_1.length)) {
      var tmp0_this = this;
      var tmp1 = tmp0_this.ll_1;
      tmp0_this.ll_1 = tmp1 + 1 | 0;
      tmp = this.ml_1[tmp1];
    } else {
      throw NoSuchElementException_init_$Create$_0('' + this.ll_1);
    }
    return tmp;
  };
  booleanArrayIterator$1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, BooleanIterator.prototype);
  function intArrayIterator$1($array) {
    this.ol_1 = $array;
    IntIterator.call(this);
    this.nl_1 = 0;
  }
  intArrayIterator$1.prototype.n = function () {
    return !(this.nl_1 === this.ol_1.length);
  };
  intArrayIterator$1.prototype.g4 = function () {
    var tmp;
    if (!(this.nl_1 === this.ol_1.length)) {
      var tmp0_this = this;
      var tmp1 = tmp0_this.nl_1;
      tmp0_this.nl_1 = tmp1 + 1 | 0;
      tmp = this.ol_1[tmp1];
    } else {
      throw NoSuchElementException_init_$Create$_0('' + this.nl_1);
    }
    return tmp;
  };
  intArrayIterator$1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, IntIterator.prototype);
  function get_buf() {
    init_properties_bitUtils_kt_cxtw9i();
    return buf;
  }
  var buf;
  function get_bufFloat64() {
    init_properties_bitUtils_kt_cxtw9i();
    return bufFloat64;
  }
  var bufFloat64;
  var bufFloat32;
  function get_bufInt32() {
    init_properties_bitUtils_kt_cxtw9i();
    return bufInt32;
  }
  var bufInt32;
  function get_lowIndex() {
    init_properties_bitUtils_kt_cxtw9i();
    return lowIndex;
  }
  var lowIndex;
  function get_highIndex() {
    init_properties_bitUtils_kt_cxtw9i();
    return highIndex;
  }
  var highIndex;
  function getNumberHashCode(obj) {
    init_properties_bitUtils_kt_cxtw9i();
    var tmp$ret$1;
    {
      var tmp0_unsafeCast = jsBitwiseOr(obj, 0);
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_unsafeCast;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    if (tmp$ret$1 === obj) {
      return numberToInt(obj);
    }
    get_bufFloat64()[0] = obj;
    return imul(get_bufInt32()[get_highIndex()], 31) + get_bufInt32()[get_lowIndex()] | 0;
  }
  var properties_initialized_bitUtils_kt_i2bo3e;
  function init_properties_bitUtils_kt_cxtw9i() {
    if (properties_initialized_bitUtils_kt_i2bo3e) {
    } else {
      properties_initialized_bitUtils_kt_i2bo3e = true;
      buf = new ArrayBuffer(8);
      var tmp$ret$1;
      {
        var tmp0_unsafeCast = new Float64Array(get_buf());
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_unsafeCast;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      bufFloat64 = tmp$ret$1;
      var tmp$ret$1_0;
      {
        var tmp0_unsafeCast_0 = new Float32Array(get_buf());
        var tmp$ret$0_0;
        {
          tmp$ret$0_0 = tmp0_unsafeCast_0;
        }
        tmp$ret$1_0 = tmp$ret$0_0;
      }
      bufFloat32 = tmp$ret$1_0;
      var tmp$ret$1_1;
      {
        var tmp0_unsafeCast_1 = new Int32Array(get_buf());
        var tmp$ret$0_1;
        {
          tmp$ret$0_1 = tmp0_unsafeCast_1;
        }
        tmp$ret$1_1 = tmp$ret$0_1;
      }
      bufInt32 = tmp$ret$1_1;
      var tmp$ret$1_2;
      {
        {
        }
        var tmp$ret$0_2;
        {
          get_bufFloat64()[0] = -1.0;
          tmp$ret$0_2 = !(get_bufInt32()[0] === 0) ? 1 : 0;
        }
        tmp$ret$1_2 = tmp$ret$0_2;
      }
      lowIndex = tmp$ret$1_2;
      highIndex = 1 - get_lowIndex() | 0;
    }
  }
  function charSequenceGet(a, index) {
    var tmp;
    if (isString(a)) {
      var tmp$ret$4;
      {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = a;
          }
          var tmp0_unsafeCast = tmp$ret$0.charCodeAt(index);
          tmp$ret$1 = tmp0_unsafeCast;
        }
        var tmp1_Char = tmp$ret$1;
        var tmp_0;
        var tmp$ret$2;
        {
          Companion_getInstance_12();
          var tmp0__get_code__88qj9g = _Char___init__impl__6a9atx(0);
          tmp$ret$2 = Char__toInt_impl_vasixd(tmp0__get_code__88qj9g);
        }
        if (tmp1_Char < tmp$ret$2) {
          tmp_0 = true;
        } else {
          var tmp$ret$3;
          {
            Companion_getInstance_12();
            var tmp1__get_code__adl84j = _Char___init__impl__6a9atx(65535);
            tmp$ret$3 = Char__toInt_impl_vasixd(tmp1__get_code__adl84j);
          }
          tmp_0 = tmp1_Char > tmp$ret$3;
        }
        if (tmp_0) {
          throw IllegalArgumentException_init_$Create$_0('Invalid Char code: ' + tmp1_Char);
        }
        tmp$ret$4 = numberToChar(tmp1_Char);
      }
      tmp = tmp$ret$4;
    } else {
      tmp = a.ld(index);
    }
    return tmp;
  }
  function isString(a) {
    return typeof a === 'string';
  }
  function charSequenceLength(a) {
    var tmp;
    if (isString(a)) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = a;
        }
        var tmp0_unsafeCast = tmp$ret$0.length;
        tmp$ret$1 = tmp0_unsafeCast;
      }
      tmp = tmp$ret$1;
    } else {
      tmp = a.kd();
    }
    return tmp;
  }
  function charSequenceSubSequence(a, startIndex, endIndex) {
    var tmp;
    if (isString(a)) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = a;
        }
        var tmp0_unsafeCast = tmp$ret$0.substring(startIndex, endIndex);
        tmp$ret$1 = tmp0_unsafeCast;
      }
      tmp = tmp$ret$1;
    } else {
      tmp = a.md(startIndex, endIndex);
    }
    return tmp;
  }
  function contentEqualsInternal(_this__u8e3s4, other) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    var a = tmp$ret$0;
    var tmp$ret$1;
    {
      tmp$ret$1 = other;
    }
    var b = tmp$ret$1;
    if (a === b)
      return true;
    if (((a == null ? true : b == null) ? true : !isArrayish(b)) ? true : a.length != b.length)
      return false;
    var inductionVariable = 0;
    var last = a.length;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!equals_1(a[i], b[i])) {
          return false;
        }
      }
       while (inductionVariable < last);
    return true;
  }
  function contentHashCodeInternal(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    var a = tmp$ret$0;
    if (a == null)
      return 0;
    var result = 1;
    var inductionVariable = 0;
    var last = a.length;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        result = imul(result, 31) + hashCode_0(a[i]) | 0;
      }
       while (inductionVariable < last);
    return result;
  }
  function arrayToString(array) {
    return joinToString$default(array, ', ', '[', ']', 0, null, arrayToString$lambda(), 24, null);
  }
  function arrayToString$lambda() {
    return function (it) {
      return toString_2(it);
    };
  }
  function compareTo_0(a, b) {
    var tmp0_subject = typeof a;
    var tmp;
    switch (tmp0_subject) {
      case 'number':
        var tmp_0;
        if (typeof b === 'number') {
          tmp_0 = doubleCompareTo(a, b);
        } else {
          if (b instanceof Long) {
            tmp_0 = doubleCompareTo(a, b.bi());
          } else {
            tmp_0 = primitiveCompareTo(a, b);
          }
        }

        tmp = tmp_0;
        break;
      case 'string':
      case 'boolean':
        tmp = primitiveCompareTo(a, b);
        break;
      default:
        tmp = compareToDoNotIntrinsicify(a, b);
        break;
    }
    return tmp;
  }
  function doubleCompareTo(a, b) {
    var tmp;
    if (a < b) {
      tmp = -1;
    } else if (a > b) {
      tmp = 1;
    } else if (a === b) {
      var tmp_0;
      if (a !== 0) {
        tmp_0 = 0;
      } else {
        var tmp$ret$0;
        {
          tmp$ret$0 = 1;
        }
        var ia = tmp$ret$0 / a;
        var tmp_1;
        var tmp$ret$1;
        {
          tmp$ret$1 = 1;
        }
        if (ia === tmp$ret$1 / b) {
          tmp_1 = 0;
        } else {
          if (ia < 0) {
            tmp_1 = -1;
          } else {
            tmp_1 = 1;
          }
        }
        tmp_0 = tmp_1;
      }
      tmp = tmp_0;
    } else if (a !== a) {
      tmp = b !== b ? 0 : 1;
    } else {
      tmp = -1;
    }
    return tmp;
  }
  function primitiveCompareTo(a, b) {
    return a < b ? -1 : a > b ? 1 : 0;
  }
  function compareToDoNotIntrinsicify(a, b) {
    return a.sb(b);
  }
  function identityHashCode(obj) {
    return getObjectHashCode(obj);
  }
  function getObjectHashCode(obj) {
    if (!jsIn('kotlinHashCodeValue$', obj)) {
      var hash = jsBitwiseOr(Math.random() * 4.294967296E9, 0);
      var descriptor = new Object();
      descriptor.value = hash;
      descriptor.enumerable = false;
      Object.defineProperty(obj, 'kotlinHashCodeValue$', descriptor);
    }
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = obj['kotlinHashCodeValue$'];
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function equals_1(obj1, obj2) {
    if (obj1 == null) {
      return obj2 == null;
    }
    if (obj2 == null) {
      return false;
    }
    if (typeof obj1 === 'object' ? typeof obj1.equals === 'function' : false) {
      return obj1.equals(obj2);
    }
    if (obj1 !== obj1) {
      return obj2 !== obj2;
    }
    if (typeof obj1 === 'number' ? typeof obj2 === 'number' : false) {
      var tmp;
      if (obj1 === obj2) {
        var tmp_0;
        if (obj1 !== 0) {
          tmp_0 = true;
        } else {
          var tmp$ret$0;
          {
            tmp$ret$0 = 1;
          }
          var tmp_1 = tmp$ret$0 / obj1;
          var tmp$ret$1;
          {
            tmp$ret$1 = 1;
          }
          tmp_0 = tmp_1 === tmp$ret$1 / obj2;
        }
        tmp = tmp_0;
      } else {
        tmp = false;
      }
      return tmp;
    }
    return obj1 === obj2;
  }
  function hashCode_0(obj) {
    if (obj == null)
      return 0;
    var tmp0_subject = typeof obj;
    var tmp;
    switch (tmp0_subject) {
      case 'object':
        tmp = 'function' === typeof obj.hashCode ? obj.hashCode() : getObjectHashCode(obj);
        break;
      case 'function':
        tmp = getObjectHashCode(obj);
        break;
      case 'number':
        tmp = getNumberHashCode(obj);
        break;
      case 'boolean':
        var tmp_0;
        var tmp$ret$0;
        {
          tmp$ret$0 = obj;
        }

        if (tmp$ret$0) {
          tmp_0 = 1;
        } else {
          tmp_0 = 0;
        }

        tmp = tmp_0;
        break;
      default:
        tmp = getStringHashCode(String(obj));
        break;
    }
    return tmp;
  }
  function toString_2(o) {
    var tmp;
    if (o == null) {
      tmp = 'null';
    } else if (isArrayish(o)) {
      tmp = '[...]';
    } else {
      var tmp$ret$0;
      {
        var tmp0_unsafeCast = o.toString();
        tmp$ret$0 = tmp0_unsafeCast;
      }
      tmp = tmp$ret$0;
    }
    return tmp;
  }
  function getStringHashCode(str) {
    var hash = 0;
    var length = str.length;
    var inductionVariable = 0;
    var last = length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        {
          tmp$ret$0 = str;
        }
        var code = tmp$ret$0.charCodeAt(i);
        hash = imul(hash, 31) + code | 0;
      }
       while (!(i === last));
    return hash;
  }
  function anyToString(o) {
    return Object.prototype.toString.call(o);
  }
  function boxIntrinsic(x) {
    throw IllegalStateException_init_$Create$_0('Should be lowered');
  }
  function unboxIntrinsic(x) {
    throw IllegalStateException_init_$Create$_0('Should be lowered');
  }
  function captureStack(instance, constructorFunction) {
    if (Error.captureStackTrace != null) {
      Error.captureStackTrace(instance, constructorFunction);
    } else {
      var tmp$ret$0;
      {
        tmp$ret$0 = instance;
      }
      tmp$ret$0.stack = (new Error()).stack;
    }
  }
  function extendThrowable(this_, message, cause) {
    Error.call(this_);
    setPropertiesToThrowableInstance(this_, message, cause);
  }
  function setPropertiesToThrowableInstance(this_, message, cause) {
    if (!hasOwnPrototypeProperty(this_, 'message')) {
      var tmp;
      if (message == null) {
        var tmp_0;
        if (!(message === null)) {
          var tmp0_safe_receiver = cause;
          var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.toString();
          tmp_0 = tmp1_elvis_lhs == null ? undefined : tmp1_elvis_lhs;
        } else {
          tmp_0 = undefined;
        }
        tmp = tmp_0;
      } else {
        tmp = message;
      }
      this_.message = tmp;
    }
    if (!hasOwnPrototypeProperty(this_, 'cause')) {
      this_.cause = cause;
    }
    this_.name = Object.getPrototypeOf(this_).constructor.name;
  }
  function hasOwnPrototypeProperty(o, name) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = Object.getPrototypeOf(o).hasOwnProperty(name);
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function returnIfSuspended(argument, $cont) {
    return (argument == null ? true : isObject(argument)) ? argument : THROW_CCE();
  }
  function ensureNotNull(v) {
    var tmp;
    if (v == null) {
      THROW_NPE();
    } else {
      tmp = v;
    }
    return tmp;
  }
  function THROW_NPE() {
    throw NullPointerException_init_$Create$();
  }
  function noWhenBranchMatchedException() {
    throw NoWhenBranchMatchedException_init_$Create$();
  }
  function THROW_CCE() {
    throw ClassCastException_init_$Create$();
  }
  function throwUninitializedPropertyAccessException(name) {
    throw UninitializedPropertyAccessException_init_$Create$('lateinit property ' + name + ' has not been initialized');
  }
  function throwKotlinNothingValueException() {
    throw KotlinNothingValueException_init_$Create$();
  }
  function THROW_ISE() {
    throw IllegalStateException_init_$Create$();
  }
  function lazy(mode, initializer) {
    return new UnsafeLazyImpl(initializer);
  }
  function lazy_0(initializer) {
    return new UnsafeLazyImpl(initializer);
  }
  function fillFrom(src, dst) {
    var srcLen = src.length;
    var dstLen = dst.length;
    var index = 0;
    var tmp$ret$0;
    {
      tmp$ret$0 = dst;
    }
    var arr = tmp$ret$0;
    while (index < srcLen ? index < dstLen : false) {
      var tmp = index;
      var tmp0 = index;
      index = tmp0 + 1 | 0;
      arr[tmp] = src[tmp0];
    }
    return dst;
  }
  function arrayCopyResize(source, newSize, defaultValue) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = source.slice(0, newSize);
      tmp$ret$0 = tmp0_unsafeCast;
    }
    var result = tmp$ret$0;
    {
      if (source.$type$ !== undefined) {
        result.$type$ = source.$type$;
      }
    }
    var index = source.length;
    if (newSize > index) {
      var tmp$ret$1;
      {
        tmp$ret$1 = result;
      }
      tmp$ret$1.length = newSize;
      while (index < newSize) {
        var tmp0 = index;
        index = tmp0 + 1 | 0;
        result[tmp0] = defaultValue;
      }
    }
    return result;
  }
  function copyArrayType(from, to) {
    if (from.$type$ !== undefined) {
      to.$type$ = from.$type$;
    }
  }
  function emptyArray() {
    return [];
  }
  function enumValueOfIntrinsic(name) {
    throw IllegalStateException_init_$Create$_0('Should be replaced by compiler');
  }
  function Companion_14() {
    Companion_instance_14 = this;
    this.pl_1 = new Long(0, -2147483648);
    this.ql_1 = new Long(-1, 2147483647);
    this.rl_1 = 8;
    this.sl_1 = 64;
  }
  Companion_14.prototype.sd = function () {
    return this.ql_1;
  };
  Companion_14.$metadata$ = objectMeta('Companion');
  var Companion_instance_14;
  function Companion_getInstance_14() {
    if (Companion_instance_14 == null)
      new Companion_14();
    return Companion_instance_14;
  }
  function Long(low, high) {
    Companion_getInstance_14();
    Number_0.call(this);
    this.k1_1 = low;
    this.l1_1 = high;
  }
  Long.prototype.m1 = function (other) {
    return compare(this, other);
  };
  Long.prototype.sb = function (other) {
    return this.m1(other instanceof Long ? other : THROW_CCE());
  };
  Long.prototype.tl = function (other) {
    return this.ka(toLong_0(other));
  };
  Long.prototype.ka = function (other) {
    return add(this, other);
  };
  Long.prototype.ul = function (other) {
    return this.la(toLong_0(other));
  };
  Long.prototype.la = function (other) {
    return subtract(this, other);
  };
  Long.prototype.vl = function (other) {
    return this.ja(toLong_0(other));
  };
  Long.prototype.ja = function (other) {
    return multiply(this, other);
  };
  Long.prototype.wl = function (other) {
    return this.ia(toLong_0(other));
  };
  Long.prototype.ia = function (other) {
    return divide(this, other);
  };
  Long.prototype.xl = function (other) {
    return this.nb(toLong_0(other));
  };
  Long.prototype.nb = function (other) {
    return modulo(this, other);
  };
  Long.prototype.yl = function () {
    return this.ka(new Long(1, 0));
  };
  Long.prototype.zl = function () {
    return this.la(new Long(1, 0));
  };
  Long.prototype.ha = function () {
    return this.am().ka(new Long(1, 0));
  };
  Long.prototype.tb = function (bitCount) {
    return shiftLeft(this, bitCount);
  };
  Long.prototype.eb = function (bitCount) {
    return shiftRight(this, bitCount);
  };
  Long.prototype.jd = function (bitCount) {
    return shiftRightUnsigned(this, bitCount);
  };
  Long.prototype.bd = function (other) {
    return new Long(this.k1_1 & other.k1_1, this.l1_1 & other.l1_1);
  };
  Long.prototype.bm = function (other) {
    return new Long(this.k1_1 | other.k1_1, this.l1_1 | other.l1_1);
  };
  Long.prototype.lb = function (other) {
    return new Long(this.k1_1 ^ other.k1_1, this.l1_1 ^ other.l1_1);
  };
  Long.prototype.am = function () {
    return new Long(~this.k1_1, ~this.l1_1);
  };
  Long.prototype.cm = function () {
    return toByte(this.k1_1);
  };
  Long.prototype.dm = function () {
    return toShort(this.k1_1);
  };
  Long.prototype.fb = function () {
    return this.k1_1;
  };
  Long.prototype.bi = function () {
    return toNumber(this);
  };
  Long.prototype.valueOf = function () {
    return this.bi();
  };
  Long.prototype.equals = function (other) {
    var tmp;
    if (other instanceof Long) {
      tmp = equalsLong(this, other);
    } else {
      tmp = false;
    }
    return tmp;
  };
  Long.prototype.hashCode = function () {
    return hashCode_1(this);
  };
  Long.prototype.toString = function () {
    return toStringImpl(this, 10);
  };
  Long.$metadata$ = classMeta('Long', [Comparable], undefined, undefined, undefined, Number_0.prototype);
  function get_ZERO() {
    init_properties_longjs_kt_ttk8rv();
    return ZERO;
  }
  var ZERO;
  function get_ONE() {
    init_properties_longjs_kt_ttk8rv();
    return ONE;
  }
  var ONE;
  function get_NEG_ONE() {
    init_properties_longjs_kt_ttk8rv();
    return NEG_ONE;
  }
  var NEG_ONE;
  function get_MAX_VALUE() {
    init_properties_longjs_kt_ttk8rv();
    return MAX_VALUE;
  }
  var MAX_VALUE;
  function get_MIN_VALUE() {
    init_properties_longjs_kt_ttk8rv();
    return MIN_VALUE;
  }
  var MIN_VALUE;
  function get_TWO_PWR_24_() {
    init_properties_longjs_kt_ttk8rv();
    return TWO_PWR_24_;
  }
  var TWO_PWR_24_;
  function compare(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    if (equalsLong(_this__u8e3s4, other)) {
      return 0;
    }
    var thisNeg = isNegative(_this__u8e3s4);
    var otherNeg = isNegative(other);
    return (thisNeg ? !otherNeg : false) ? -1 : (!thisNeg ? otherNeg : false) ? 1 : isNegative(subtract(_this__u8e3s4, other)) ? -1 : 1;
  }
  function add(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    var a48 = _this__u8e3s4.l1_1 >>> 16 | 0;
    var a32 = _this__u8e3s4.l1_1 & 65535;
    var a16 = _this__u8e3s4.k1_1 >>> 16 | 0;
    var a00 = _this__u8e3s4.k1_1 & 65535;
    var b48 = other.l1_1 >>> 16 | 0;
    var b32 = other.l1_1 & 65535;
    var b16 = other.k1_1 >>> 16 | 0;
    var b00 = other.k1_1 & 65535;
    var c48 = 0;
    var c32 = 0;
    var c16 = 0;
    var c00 = 0;
    c00 = c00 + (a00 + b00 | 0) | 0;
    c16 = c16 + (c00 >>> 16 | 0) | 0;
    c00 = c00 & 65535;
    c16 = c16 + (a16 + b16 | 0) | 0;
    c32 = c32 + (c16 >>> 16 | 0) | 0;
    c16 = c16 & 65535;
    c32 = c32 + (a32 + b32 | 0) | 0;
    c48 = c48 + (c32 >>> 16 | 0) | 0;
    c32 = c32 & 65535;
    c48 = c48 + (a48 + b48 | 0) | 0;
    c48 = c48 & 65535;
    return new Long(c16 << 16 | c00, c48 << 16 | c32);
  }
  function subtract(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return add(_this__u8e3s4, other.ha());
  }
  function multiply(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    if (isZero(_this__u8e3s4)) {
      return get_ZERO();
    } else if (isZero(other)) {
      return get_ZERO();
    }
    if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {
      return isOdd(other) ? get_MIN_VALUE() : get_ZERO();
    } else if (equalsLong(other, get_MIN_VALUE())) {
      return isOdd(_this__u8e3s4) ? get_MIN_VALUE() : get_ZERO();
    }
    if (isNegative(_this__u8e3s4)) {
      var tmp;
      if (isNegative(other)) {
        tmp = multiply(negate(_this__u8e3s4), negate(other));
      } else {
        tmp = negate(multiply(negate(_this__u8e3s4), other));
      }
      return tmp;
    } else if (isNegative(other)) {
      return negate(multiply(_this__u8e3s4, negate(other)));
    }
    if (lessThan(_this__u8e3s4, get_TWO_PWR_24_()) ? lessThan(other, get_TWO_PWR_24_()) : false) {
      return fromNumber(toNumber(_this__u8e3s4) * toNumber(other));
    }
    var a48 = _this__u8e3s4.l1_1 >>> 16 | 0;
    var a32 = _this__u8e3s4.l1_1 & 65535;
    var a16 = _this__u8e3s4.k1_1 >>> 16 | 0;
    var a00 = _this__u8e3s4.k1_1 & 65535;
    var b48 = other.l1_1 >>> 16 | 0;
    var b32 = other.l1_1 & 65535;
    var b16 = other.k1_1 >>> 16 | 0;
    var b00 = other.k1_1 & 65535;
    var c48 = 0;
    var c32 = 0;
    var c16 = 0;
    var c00 = 0;
    c00 = c00 + imul(a00, b00) | 0;
    c16 = c16 + (c00 >>> 16 | 0) | 0;
    c00 = c00 & 65535;
    c16 = c16 + imul(a16, b00) | 0;
    c32 = c32 + (c16 >>> 16 | 0) | 0;
    c16 = c16 & 65535;
    c16 = c16 + imul(a00, b16) | 0;
    c32 = c32 + (c16 >>> 16 | 0) | 0;
    c16 = c16 & 65535;
    c32 = c32 + imul(a32, b00) | 0;
    c48 = c48 + (c32 >>> 16 | 0) | 0;
    c32 = c32 & 65535;
    c32 = c32 + imul(a16, b16) | 0;
    c48 = c48 + (c32 >>> 16 | 0) | 0;
    c32 = c32 & 65535;
    c32 = c32 + imul(a00, b32) | 0;
    c48 = c48 + (c32 >>> 16 | 0) | 0;
    c32 = c32 & 65535;
    c48 = c48 + (((imul(a48, b00) + imul(a32, b16) | 0) + imul(a16, b32) | 0) + imul(a00, b48) | 0) | 0;
    c48 = c48 & 65535;
    return new Long(c16 << 16 | c00, c48 << 16 | c32);
  }
  function divide(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    if (isZero(other)) {
      throw Exception_init_$Create$('division by zero');
    } else if (isZero(_this__u8e3s4)) {
      return get_ZERO();
    }
    if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {
      if (equalsLong(other, get_ONE()) ? true : equalsLong(other, get_NEG_ONE())) {
        return get_MIN_VALUE();
      } else if (equalsLong(other, get_MIN_VALUE())) {
        return get_ONE();
      } else {
        var halfThis = shiftRight(_this__u8e3s4, 1);
        var approx = shiftLeft(halfThis.ia(other), 1);
        if (equalsLong(approx, get_ZERO())) {
          return isNegative(other) ? get_ONE() : get_NEG_ONE();
        } else {
          var rem = subtract(_this__u8e3s4, multiply(other, approx));
          return add(approx, rem.ia(other));
        }
      }
    } else if (equalsLong(other, get_MIN_VALUE())) {
      return get_ZERO();
    }
    if (isNegative(_this__u8e3s4)) {
      var tmp;
      if (isNegative(other)) {
        tmp = negate(_this__u8e3s4).ia(negate(other));
      } else {
        tmp = negate(negate(_this__u8e3s4).ia(other));
      }
      return tmp;
    } else if (isNegative(other)) {
      return negate(_this__u8e3s4.ia(negate(other)));
    }
    var res = get_ZERO();
    var rem_0 = _this__u8e3s4;
    while (greaterThanOrEqual(rem_0, other)) {
      var approxDouble = toNumber(rem_0) / toNumber(other);
      var approx2 = Math.max(1.0, Math.floor(approxDouble));
      var log2 = Math.ceil(Math.log(approx2) / Math.LN2);
      var delta = log2 <= 48.0 ? 1.0 : Math.pow(2.0, log2 - 48);
      var approxRes = fromNumber(approx2);
      var approxRem = multiply(approxRes, other);
      while (isNegative(approxRem) ? true : greaterThan(approxRem, rem_0)) {
        approx2 = approx2 - delta;
        approxRes = fromNumber(approx2);
        approxRem = multiply(approxRes, other);
      }
      if (isZero(approxRes)) {
        approxRes = get_ONE();
      }
      res = add(res, approxRes);
      rem_0 = subtract(rem_0, approxRem);
    }
    return res;
  }
  function modulo(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return subtract(_this__u8e3s4, multiply(_this__u8e3s4.ia(other), other));
  }
  function shiftLeft(_this__u8e3s4, numBits) {
    init_properties_longjs_kt_ttk8rv();
    var numBits_0 = numBits & 63;
    if (numBits_0 === 0) {
      return _this__u8e3s4;
    } else {
      if (numBits_0 < 32) {
        return new Long(_this__u8e3s4.k1_1 << numBits_0, _this__u8e3s4.l1_1 << numBits_0 | (_this__u8e3s4.k1_1 >>> (32 - numBits_0 | 0) | 0));
      } else {
        return new Long(0, _this__u8e3s4.k1_1 << (numBits_0 - 32 | 0));
      }
    }
  }
  function shiftRight(_this__u8e3s4, numBits) {
    init_properties_longjs_kt_ttk8rv();
    var numBits_0 = numBits & 63;
    if (numBits_0 === 0) {
      return _this__u8e3s4;
    } else {
      if (numBits_0 < 32) {
        return new Long(_this__u8e3s4.k1_1 >>> numBits_0 | 0 | _this__u8e3s4.l1_1 << (32 - numBits_0 | 0), _this__u8e3s4.l1_1 >> numBits_0);
      } else {
        return new Long(_this__u8e3s4.l1_1 >> (numBits_0 - 32 | 0), _this__u8e3s4.l1_1 >= 0 ? 0 : -1);
      }
    }
  }
  function shiftRightUnsigned(_this__u8e3s4, numBits) {
    init_properties_longjs_kt_ttk8rv();
    var numBits_0 = numBits & 63;
    if (numBits_0 === 0) {
      return _this__u8e3s4;
    } else {
      if (numBits_0 < 32) {
        return new Long(_this__u8e3s4.k1_1 >>> numBits_0 | 0 | _this__u8e3s4.l1_1 << (32 - numBits_0 | 0), _this__u8e3s4.l1_1 >>> numBits_0 | 0);
      } else {
        var tmp;
        if (numBits_0 === 32) {
          tmp = new Long(_this__u8e3s4.l1_1, 0);
        } else {
          tmp = new Long(_this__u8e3s4.l1_1 >>> (numBits_0 - 32 | 0) | 0, 0);
        }
        return tmp;
      }
    }
  }
  function toNumber(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.l1_1 * 4.294967296E9 + getLowBitsUnsigned(_this__u8e3s4);
  }
  function equalsLong(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.l1_1 === other.l1_1 ? _this__u8e3s4.k1_1 === other.k1_1 : false;
  }
  function hashCode_1(l) {
    init_properties_longjs_kt_ttk8rv();
    return l.k1_1 ^ l.l1_1;
  }
  function toStringImpl(_this__u8e3s4, radix) {
    init_properties_longjs_kt_ttk8rv();
    if (radix < 2 ? true : 36 < radix) {
      throw Exception_init_$Create$('radix out of range: ' + radix);
    }
    if (isZero(_this__u8e3s4)) {
      return '0';
    }
    if (isNegative(_this__u8e3s4)) {
      if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {
        var radixLong = fromInt(radix);
        var div = _this__u8e3s4.ia(radixLong);
        var rem = subtract(multiply(div, radixLong), _this__u8e3s4).fb();
        var tmp = toStringImpl(div, radix);
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = rem;
          }
          var tmp0_unsafeCast = tmp$ret$0.toString(radix);
          tmp$ret$1 = tmp0_unsafeCast;
        }
        return tmp + tmp$ret$1;
      } else {
        return '-' + toStringImpl(negate(_this__u8e3s4), radix);
      }
    }
    var digitsPerTime = radix === 2 ? 31 : radix <= 10 ? 9 : radix <= 21 ? 7 : radix <= 35 ? 6 : 5;
    var radixToPower = fromNumber(Math.pow(radix, digitsPerTime));
    var rem_0 = _this__u8e3s4;
    var result = '';
    while (true) {
      var remDiv = rem_0.ia(radixToPower);
      var intval = subtract(rem_0, multiply(remDiv, radixToPower)).fb();
      var tmp$ret$3;
      {
        var tmp$ret$2;
        {
          tmp$ret$2 = intval;
        }
        var tmp1_unsafeCast = tmp$ret$2.toString(radix);
        tmp$ret$3 = tmp1_unsafeCast;
      }
      var digits = tmp$ret$3;
      rem_0 = remDiv;
      if (isZero(rem_0)) {
        return digits + result;
      } else {
        while (digits.length < digitsPerTime) {
          digits = '0' + digits;
        }
        result = digits + result;
      }
    }
  }
  function fromInt(value) {
    init_properties_longjs_kt_ttk8rv();
    return new Long(value, value < 0 ? -1 : 0);
  }
  function isNegative(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.l1_1 < 0;
  }
  function isZero(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.l1_1 === 0 ? _this__u8e3s4.k1_1 === 0 : false;
  }
  function isOdd(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return (_this__u8e3s4.k1_1 & 1) === 1;
  }
  function negate(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.ha();
  }
  function lessThan(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return compare(_this__u8e3s4, other) < 0;
  }
  function fromNumber(value) {
    init_properties_longjs_kt_ttk8rv();
    if (isNaN_0(value)) {
      return get_ZERO();
    } else if (value <= -9.223372036854776E18) {
      return get_MIN_VALUE();
    } else if (value + 1 >= 9.223372036854776E18) {
      return get_MAX_VALUE();
    } else if (value < 0.0) {
      return negate(fromNumber(-value));
    } else {
      var twoPwr32 = 4.294967296E9;
      return new Long(jsBitwiseOr(value % twoPwr32, 0), jsBitwiseOr(value / twoPwr32, 0));
    }
  }
  function greaterThan(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return compare(_this__u8e3s4, other) > 0;
  }
  function greaterThanOrEqual(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return compare(_this__u8e3s4, other) >= 0;
  }
  function getLowBitsUnsigned(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.k1_1 >= 0 ? _this__u8e3s4.k1_1 : 4.294967296E9 + _this__u8e3s4.k1_1;
  }
  var properties_initialized_longjs_kt_5aju7t;
  function init_properties_longjs_kt_ttk8rv() {
    if (properties_initialized_longjs_kt_5aju7t) {
    } else {
      properties_initialized_longjs_kt_5aju7t = true;
      ZERO = fromInt(0);
      ONE = fromInt(1);
      NEG_ONE = fromInt(-1);
      MAX_VALUE = new Long(-1, 2147483647);
      MIN_VALUE = new Long(0, -2147483648);
      TWO_PWR_24_ = fromInt(16777216);
    }
  }
  function withType(type, array) {
    array.$type$ = type;
    return array;
  }
  function toByte(a) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = a << 24 >> 24;
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function numberToInt(a) {
    var tmp;
    if (a instanceof Long) {
      tmp = a.fb();
    } else {
      tmp = doubleToInt(a);
    }
    return tmp;
  }
  function doubleToInt(a) {
    return a > 2.147483647E9 ? 2147483647 : a < -2.147483648E9 ? -2147483648 : jsBitwiseOr(a, 0);
  }
  function toShort(a) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = a << 16 >> 16;
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function numberToLong(a) {
    var tmp;
    if (a instanceof Long) {
      tmp = a;
    } else {
      tmp = fromNumber(a);
    }
    return tmp;
  }
  function numberToChar(a) {
    var tmp$ret$0;
    {
      var tmp0_toUShort = numberToInt(a);
      tmp$ret$0 = _UShort___init__impl__jigrne(toShort(tmp0_toUShort));
    }
    return _Char___init__impl__6a9atx_0(tmp$ret$0);
  }
  function toLong_0(a) {
    return fromInt(a);
  }
  function numberRangeToNumber(start, endInclusive) {
    return new IntRange(start, endInclusive);
  }
  function get_propertyRefClassMetadataCache() {
    init_properties_reflectRuntime_kt_yf9l8h();
    return propertyRefClassMetadataCache;
  }
  var propertyRefClassMetadataCache;
  function metadataObject() {
    init_properties_reflectRuntime_kt_yf9l8h();
    var undef = undefined;
    return classMeta(undef, undef, undef, undef, undef, undef);
  }
  function getPropertyCallableRef(name, paramCount, type, getter, setter) {
    init_properties_reflectRuntime_kt_yf9l8h();
    getter.get = getter;
    getter.set = setter;
    getter.callableName = name;
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = getPropertyRefClass(getter, getKPropMetadata(paramCount, setter, type));
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function getPropertyRefClass(obj, metadata) {
    init_properties_reflectRuntime_kt_yf9l8h();
    obj.$metadata$ = metadata;
    obj.constructor = obj;
    return obj;
  }
  function getKPropMetadata(paramCount, setter, type) {
    init_properties_reflectRuntime_kt_yf9l8h();
    var mdata = get_propertyRefClassMetadataCache()[paramCount][setter == null ? 0 : 1];
    if (mdata.interfaces.length === 0) {
      var tmp$ret$0;
      {
        var tmp0_asDynamic = mdata.interfaces;
        tmp$ret$0 = tmp0_asDynamic;
      }
      tmp$ret$0.push(type);
      if (mdata.interfacesCache == null) {
        mdata.interfacesCache = generateInterfaceCache();
      } else {
        ensureNotNull(mdata.interfacesCache).isComplete = false;
      }
      extendCacheWithSingle(ensureNotNull(mdata.interfacesCache), type);
    }
    return mdata;
  }
  var properties_initialized_reflectRuntime_kt_inkhwd;
  function init_properties_reflectRuntime_kt_yf9l8h() {
    if (properties_initialized_reflectRuntime_kt_inkhwd) {
    } else {
      properties_initialized_reflectRuntime_kt_inkhwd = true;
      var tmp$ret$11;
      {
        var tmp$ret$2;
        {
          var tmp0_arrayOf = [metadataObject(), metadataObject()];
          var tmp$ret$1;
          {
            var tmp$ret$0;
            {
              tmp$ret$0 = tmp0_arrayOf;
            }
            tmp$ret$1 = tmp$ret$0;
          }
          tmp$ret$2 = tmp$ret$1;
        }
        var tmp = tmp$ret$2;
        var tmp$ret$5;
        {
          var tmp1_arrayOf = [metadataObject(), metadataObject()];
          var tmp$ret$4;
          {
            var tmp$ret$3;
            {
              tmp$ret$3 = tmp1_arrayOf;
            }
            tmp$ret$4 = tmp$ret$3;
          }
          tmp$ret$5 = tmp$ret$4;
        }
        var tmp_0 = tmp$ret$5;
        var tmp$ret$8;
        {
          var tmp2_arrayOf = [metadataObject(), metadataObject()];
          var tmp$ret$7;
          {
            var tmp$ret$6;
            {
              tmp$ret$6 = tmp2_arrayOf;
            }
            tmp$ret$7 = tmp$ret$6;
          }
          tmp$ret$8 = tmp$ret$7;
        }
        var tmp3_arrayOf = [tmp, tmp_0, tmp$ret$8];
        var tmp$ret$10;
        {
          var tmp$ret$9;
          {
            tmp$ret$9 = tmp3_arrayOf;
          }
          tmp$ret$10 = tmp$ret$9;
        }
        tmp$ret$11 = tmp$ret$10;
      }
      propertyRefClassMetadataCache = tmp$ret$11;
    }
  }
  var interfacesCounter;
  function classMeta(name, interfaces, associatedObjectKey, associatedObjects, suspendArity, fastPrototype) {
    return createMetadata('class', name, interfaces, associatedObjectKey, associatedObjects, suspendArity, fastPrototype);
  }
  function createMetadata(kind, name, interfaces, associatedObjectKey, associatedObjects, suspendArity, fastPrototype) {
    return {kind: kind, simpleName: name, interfaceId: kind === 'interface' ? -1 : undefined, interfaces: interfaces || [], associatedObjectKey: associatedObjectKey, associatedObjects: associatedObjects, suspendArity: suspendArity, fastPrototype: fastPrototype, $kClass$: undefined, interfacesCache: {isComplete: fastPrototype === undefined && (interfaces === undefined || interfaces.length === 0), implementInterfaceMemo: {}}};
  }
  function isArrayish(o) {
    return isJsArray(o) ? true : isView(o);
  }
  function isJsArray(obj) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = Array.isArray(obj);
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function isInterface(obj, iface) {
    var tmp0_elvis_lhs = obj.constructor;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var ctor = tmp;
    return isInterfaceImpl(ctor, iface);
  }
  function isInterfaceImpl(ctor, iface) {
    if (ctor === iface) {
      return true;
    }
    var metadata = ctor.$metadata$;
    if (!(metadata == null) ? metadata.interfacesCache == null : false) {
      metadata.interfacesCache = generateInterfaceCache();
    }
    var tmp0_safe_receiver = metadata;
    var interfacesCache = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.interfacesCache;
    var tmp;
    if (!(interfacesCache == null)) {
      if (!interfacesCache.isComplete) {
        completeInterfaceCache(ctor);
      }
      var tmp1_safe_receiver = iface.$metadata$;
      var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.interfaceId;
      var tmp_0;
      if (tmp2_elvis_lhs == null) {
        return false;
      } else {
        tmp_0 = tmp2_elvis_lhs;
      }
      var interfaceId = tmp_0;
      tmp = !!interfacesCache.implementInterfaceMemo[interfaceId];
    } else {
      var tmp3_safe_receiver = fastGetPrototype(ctor);
      var tmp4_elvis_lhs = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.constructor;
      var tmp_1;
      if (tmp4_elvis_lhs == null) {
        return false;
      } else {
        tmp_1 = tmp4_elvis_lhs;
      }
      var constructor = tmp_1;
      tmp = isInterfaceImpl(constructor, iface);
    }
    return tmp;
  }
  function generateInterfaceCache() {
    return {isComplete: false, implementInterfaceMemo: {}};
  }
  function completeInterfaceCache(ctor) {
    var metadata = ctor.$metadata$;
    if (!(metadata == null) ? metadata.interfacesCache == null : false) {
      metadata.interfacesCache = generateInterfaceCache();
    }
    var tmp0_safe_receiver = metadata;
    var interfacesCache = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.interfacesCache;
    if (!(interfacesCache == null)) {
      if (interfacesCache.isComplete === true) {
        return interfacesCache;
      }
      var indexedObject = metadata.interfaces;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var i = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        extendCacheWithSingle(interfacesCache, i);
        extendCacheWith(interfacesCache, completeInterfaceCache(i));
      }
    }
    var tmp2_safe_receiver = fastGetPrototype(ctor);
    var tmp3_safe_receiver = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.constructor;
    var tmp;
    if (tmp3_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$0;
      {
        {
        }
        tmp$ret$0 = completeInterfaceCache(tmp3_safe_receiver);
      }
      tmp = tmp$ret$0;
    }
    var parentInterfacesCache = tmp;
    var tmp4_safe_receiver = interfacesCache;
    var tmp_0;
    if (tmp4_safe_receiver == null) {
      tmp_0 = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        {
          extendCacheWith(tmp4_safe_receiver, parentInterfacesCache);
          tmp4_safe_receiver.isComplete = true;
        }
        tmp$ret$1 = tmp4_safe_receiver;
      }
      tmp_0 = tmp$ret$1;
    }
    var tmp5_elvis_lhs = tmp_0;
    return tmp5_elvis_lhs == null ? parentInterfacesCache : tmp5_elvis_lhs;
  }
  function fastGetPrototype(ctor) {
    var tmp0_safe_receiver = ctor.$metadata$;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          if (tmp0_safe_receiver.fastPrototype == null) {
            tmp0_safe_receiver.fastPrototype = getPrototype(ctor);
          }
          tmp$ret$0 = tmp0_safe_receiver.fastPrototype;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    var tmp1_elvis_lhs = tmp;
    return tmp1_elvis_lhs == null ? getPrototype(ctor) : tmp1_elvis_lhs;
  }
  function extendCacheWithSingle(_this__u8e3s4, intr) {
    _this__u8e3s4.implementInterfaceMemo[getOrDefineInterfaceId(intr)] = true;
  }
  function extendCacheWith(_this__u8e3s4, cache) {
    var tmp0_safe_receiver = cache;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.implementInterfaceMemo;
    var tmp;
    if (tmp1_elvis_lhs == null) {
      return Unit_getInstance();
    } else {
      tmp = tmp1_elvis_lhs;
    }
    var anotherInterfaceMemo = tmp;
    Object.assign(_this__u8e3s4.implementInterfaceMemo, anotherInterfaceMemo);
  }
  function getPrototype(_this__u8e3s4) {
    var tmp0_safe_receiver = _this__u8e3s4.prototype;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$2;
      {
        {
        }
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            var tmp0_unsafeCast = Object.getPrototypeOf(tmp0_safe_receiver);
            tmp$ret$0 = tmp0_unsafeCast;
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      tmp = tmp$ret$2;
    }
    return tmp;
  }
  function getOrDefineInterfaceId(_this__u8e3s4) {
    var tmp$ret$1;
    {
      var tmp0_unsafeCast = _this__u8e3s4.$metadata$;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_unsafeCast;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    var metadata = tmp$ret$1;
    var tmp0_elvis_lhs = metadata.interfaceId;
    var interfaceId = tmp0_elvis_lhs == null ? -1 : tmp0_elvis_lhs;
    var tmp;
    if (!equals_1(interfaceId, -1)) {
      tmp = interfaceId;
    } else {
      var tmp1 = interfacesCounter;
      interfacesCounter = tmp1 + 1 | 0;
      var result = tmp1;
      metadata.interfaceId = result;
      tmp = result;
    }
    return tmp;
  }
  function isArray(obj) {
    var tmp;
    if (isJsArray(obj)) {
      var tmp$ret$0;
      {
        tmp$ret$0 = obj;
      }
      tmp = !tmp$ret$0.$type$;
    } else {
      tmp = false;
    }
    return tmp;
  }
  function isObject(obj) {
    var objTypeOf = typeof obj;
    var tmp0_subject = objTypeOf;
    switch (tmp0_subject) {
      case 'string':
        return true;
      case 'number':
        return true;
      case 'boolean':
        return true;
      case 'function':
        return true;
      default:
        return jsInstanceOf(obj, Object);
    }
  }
  function isSuspendFunction(obj, arity) {
    if (typeof obj === 'function') {
      var tmp$ret$0;
      {
        var tmp0_unsafeCast = obj.$arity;
        tmp$ret$0 = tmp0_unsafeCast;
      }
      return tmp$ret$0 === arity;
    }
    if (typeof obj === 'object' ? jsIn('$metadata$', obj.constructor) : false) {
      var tmp$ret$1;
      {
        var tmp1_unsafeCast = obj.constructor;
        tmp$ret$1 = tmp1_unsafeCast;
      }
      var tmp0_safe_receiver = tmp$ret$1.$metadata$;
      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.suspendArity;
      var tmp;
      if (tmp1_safe_receiver == null) {
        tmp = null;
      } else {
        var tmp$ret$2;
        {
          {
          }
          var result = false;
          var tmp0_iterator = arrayIterator(tmp1_safe_receiver);
          $l$loop: while (tmp0_iterator.n()) {
            var item = tmp0_iterator.o();
            if (arity === item) {
              result = true;
              break $l$loop;
            }
          }
          return result;
        }
        tmp = tmp$ret$2;
      }
      var tmp2_elvis_lhs = tmp;
      return tmp2_elvis_lhs == null ? false : tmp2_elvis_lhs;
    }
    return false;
  }
  function isNumber(a) {
    var tmp;
    if (typeof a === 'number') {
      tmp = true;
    } else {
      tmp = a instanceof Long;
    }
    return tmp;
  }
  function isComparable(value) {
    var type = typeof value;
    return ((type === 'string' ? true : type === 'boolean') ? true : isNumber(value)) ? true : isInterface(value, get_js(getKClass(Comparable)));
  }
  function isCharSequence(value) {
    return typeof value === 'string' ? true : isInterface(value, get_js(getKClass(CharSequence)));
  }
  function isBooleanArray(a) {
    return isJsArray(a) ? a.$type$ === 'BooleanArray' : false;
  }
  function isByteArray(a) {
    return jsInstanceOf(a, Int8Array);
  }
  function isShortArray(a) {
    return jsInstanceOf(a, Int16Array);
  }
  function isCharArray(a) {
    return jsInstanceOf(a, Uint16Array) ? a.$type$ === 'CharArray' : false;
  }
  function isIntArray(a) {
    return jsInstanceOf(a, Int32Array);
  }
  function isFloatArray(a) {
    return jsInstanceOf(a, Float32Array);
  }
  function isLongArray(a) {
    return isJsArray(a) ? a.$type$ === 'LongArray' : false;
  }
  function isDoubleArray(a) {
    return jsInstanceOf(a, Float64Array);
  }
  function interfaceMeta(name, interfaces, associatedObjectKey, associatedObjects, suspendArity) {
    return createMetadata('interface', name, interfaces, associatedObjectKey, associatedObjects, suspendArity, undefined);
  }
  function objectMeta(name, interfaces, associatedObjectKey, associatedObjects, suspendArity, fastPrototype) {
    return createMetadata('object', name, interfaces, associatedObjectKey, associatedObjects, suspendArity, fastPrototype);
  }
  function copyOf(_this__u8e3s4, newSize) {
    {
      var tmp0_require = newSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    var tmp$ret$1;
    {
      var tmp1_withType = fillFrom(_this__u8e3s4, charArray(newSize));
      tmp1_withType.$type$ = 'CharArray';
      tmp$ret$1 = tmp1_withType;
    }
    return tmp$ret$1;
  }
  function copyOf_0(_this__u8e3s4, newSize) {
    {
      var tmp0_require = newSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    return fillFrom(_this__u8e3s4, new Float64Array(newSize));
  }
  function copyOf_1(_this__u8e3s4, newSize) {
    {
      var tmp0_require = newSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    return fillFrom(_this__u8e3s4, new Float32Array(newSize));
  }
  function copyOf_2(_this__u8e3s4, newSize) {
    {
      var tmp0_require = newSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    var tmp$ret$1;
    {
      var tmp1_withType = arrayCopyResize(_this__u8e3s4, newSize, new Long(0, 0));
      tmp1_withType.$type$ = 'LongArray';
      tmp$ret$1 = tmp1_withType;
    }
    return tmp$ret$1;
  }
  function copyOf_3(_this__u8e3s4, newSize) {
    {
      var tmp0_require = newSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    return fillFrom(_this__u8e3s4, new Int32Array(newSize));
  }
  function copyOf_4(_this__u8e3s4, newSize) {
    {
      var tmp0_require = newSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    return fillFrom(_this__u8e3s4, new Int16Array(newSize));
  }
  function copyOf_5(_this__u8e3s4, newSize) {
    {
      var tmp0_require = newSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    return fillFrom(_this__u8e3s4, new Int8Array(newSize));
  }
  function copyOf_6(_this__u8e3s4, newSize) {
    {
      var tmp0_require = newSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    var tmp$ret$1;
    {
      var tmp1_withType = arrayCopyResize(_this__u8e3s4, newSize, false);
      tmp1_withType.$type$ = 'BooleanArray';
      tmp$ret$1 = tmp1_withType;
    }
    return tmp$ret$1;
  }
  function asList(_this__u8e3s4) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = _this__u8e3s4;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return new ArrayList(tmp$ret$1);
  }
  function contentEquals(_this__u8e3s4, other) {
    return contentEqualsInternal(_this__u8e3s4, other);
  }
  function contentHashCode(_this__u8e3s4) {
    return contentHashCodeInternal(_this__u8e3s4);
  }
  function copyInto(_this__u8e3s4, destination, destinationOffset, startIndex, endIndex) {
    arrayCopy(_this__u8e3s4, destination, destinationOffset, startIndex, endIndex);
    return destination;
  }
  function plus_3(_this__u8e3s4, elements) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0.concat(elements);
  }
  function copyOf_7(_this__u8e3s4, newSize) {
    {
      var tmp0_require = newSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    return arrayCopyResize(_this__u8e3s4, newSize, null);
  }
  function fill(_this__u8e3s4, element, fromIndex, toIndex) {
    Companion_getInstance().g2(fromIndex, toIndex, _this__u8e3s4.length);
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = _this__u8e3s4;
      }
      tmp$ret$0.fill(element, fromIndex, toIndex);
    }
  }
  function fill$default(_this__u8e3s4, element, fromIndex, toIndex, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      fromIndex = 0;
    if (!(($mask0 & 4) === 0))
      toIndex = _this__u8e3s4.length;
    return fill(_this__u8e3s4, element, fromIndex, toIndex);
  }
  function contentHashCode_0(_this__u8e3s4) {
    return contentHashCodeInternal(_this__u8e3s4);
  }
  function contentEquals_0(_this__u8e3s4, other) {
    return contentEqualsInternal(_this__u8e3s4, other);
  }
  function sort(_this__u8e3s4) {
    if (_this__u8e3s4.length > 1)
      sortArray(_this__u8e3s4);
  }
  function toTypedArray_0(_this__u8e3s4) {
    return [].slice.call(_this__u8e3s4);
  }
  function decodeVarLenBase64(base64, fromBase64, resultLength) {
    var result = new Int32Array(resultLength);
    var index = 0;
    var int = 0;
    var shift = 0;
    var indexedObject = base64;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var char = charSequenceGet(indexedObject, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      var tmp$ret$0;
      {
        tmp$ret$0 = Char__toInt_impl_vasixd(char);
      }
      var sixBit = fromBase64[tmp$ret$0];
      int = int | (sixBit & 31) << shift;
      if (sixBit < 32) {
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        result[tmp1] = int;
        int = 0;
        shift = 0;
      } else {
        shift = shift + 5 | 0;
      }
    }
    return result;
  }
  function reverse(_this__u8e3s4) {
    var midPoint = (_this__u8e3s4.m() / 2 | 0) - 1 | 0;
    if (midPoint < 0)
      return Unit_getInstance();
    var reverseIndex = get_lastIndex_3(_this__u8e3s4);
    var inductionVariable = 0;
    if (inductionVariable <= midPoint)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = _this__u8e3s4.r(index);
        _this__u8e3s4.t(index, _this__u8e3s4.r(reverseIndex));
        _this__u8e3s4.t(reverseIndex, tmp);
        var tmp1 = reverseIndex;
        reverseIndex = tmp1 - 1 | 0;
      }
       while (!(index === midPoint));
  }
  function minOf(a, b) {
    return Math.min(a, b);
  }
  function maxOf(a, b) {
    return Math.max(a, b);
  }
  function minOf_0(a, other) {
    var min = a;
    var indexedObject = other;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var e = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      var tmp$ret$0;
      {
        var tmp0_minOf = min;
        tmp$ret$0 = Math.min(tmp0_minOf, e);
      }
      min = tmp$ret$0;
    }
    return min;
  }
  function maxOf_0(a, other) {
    var max = a;
    var indexedObject = other;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var e = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      var tmp$ret$0;
      {
        var tmp0_maxOf = max;
        tmp$ret$0 = Math.max(tmp0_maxOf, e);
      }
      max = tmp$ret$0;
    }
    return max;
  }
  function minOf_1(a, b) {
    return Math.min(a, b);
  }
  function maxOf_1(a, b) {
    return Math.max(a, b);
  }
  function digitToIntImpl(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = Char__toInt_impl_vasixd(_this__u8e3s4);
    }
    var ch = tmp$ret$0;
    var index = binarySearchRange(Digit_getInstance().em_1, ch);
    var diff = ch - Digit_getInstance().em_1[index] | 0;
    return diff < 10 ? diff : -1;
  }
  function binarySearchRange(array, needle) {
    var bottom = 0;
    var top = array.length - 1 | 0;
    var middle = -1;
    var value = 0;
    while (bottom <= top) {
      middle = (bottom + top | 0) / 2 | 0;
      value = array[middle];
      if (needle > value)
        bottom = middle + 1 | 0;
      else if (needle === value)
        return middle;
      else
        top = middle - 1 | 0;
    }
    return middle - (needle < value ? 1 : 0) | 0;
  }
  function Digit() {
    Digit_instance = this;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = new Int32Array([48, 1632, 1776, 1984, 2406, 2534, 2662, 2790, 2918, 3046, 3174, 3302, 3430, 3558, 3664, 3792, 3872, 4160, 4240, 6112, 6160, 6470, 6608, 6784, 6800, 6992, 7088, 7232, 7248, 42528, 43216, 43264, 43472, 43504, 43600, 44016, 65296]);
    }
    tmp.em_1 = tmp$ret$0;
  }
  Digit.$metadata$ = objectMeta('Digit');
  var Digit_instance;
  function Digit_getInstance() {
    if (Digit_instance == null)
      new Digit();
    return Digit_instance;
  }
  function isLowerCaseImpl(_this__u8e3s4) {
    var tmp;
    if (getLetterType(_this__u8e3s4) === 1) {
      tmp = true;
    } else {
      var tmp$ret$0;
      {
        tmp$ret$0 = Char__toInt_impl_vasixd(_this__u8e3s4);
      }
      tmp = isOtherLowercase(tmp$ret$0);
    }
    return tmp;
  }
  function getLetterType(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = Char__toInt_impl_vasixd(_this__u8e3s4);
    }
    var ch = tmp$ret$0;
    var index = binarySearchRange(Letter_getInstance().fm_1, ch);
    var rangeStart = Letter_getInstance().fm_1[index];
    var rangeEnd = (rangeStart + Letter_getInstance().gm_1[index] | 0) - 1 | 0;
    var code = Letter_getInstance().hm_1[index];
    if (ch > rangeEnd) {
      return 0;
    }
    var lastTwoBits = code & 3;
    if (lastTwoBits === 0) {
      var shift = 2;
      var threshold = rangeStart;
      var inductionVariable = 0;
      if (inductionVariable <= 1)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          threshold = threshold + (code >> shift & 127) | 0;
          if (threshold > ch) {
            return 3;
          }
          shift = shift + 7 | 0;
          threshold = threshold + (code >> shift & 127) | 0;
          if (threshold > ch) {
            return 0;
          }
          shift = shift + 7 | 0;
        }
         while (inductionVariable <= 1);
      return 3;
    }
    if (code <= 7) {
      return lastTwoBits;
    }
    var distance = ch - rangeStart | 0;
    var shift_0 = code <= 31 ? distance % 2 | 0 : distance;
    return code >> imul(2, shift_0) & 3;
  }
  function Letter() {
    Letter_instance = this;
    var toBase64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
    var fromBase64 = new Int32Array(128);
    var inductionVariable = 0;
    var last = charSequenceLength(toBase64) - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        {
          var tmp0__get_code__88qj9g = charSequenceGet(toBase64, i);
          tmp$ret$0 = Char__toInt_impl_vasixd(tmp0__get_code__88qj9g);
        }
        fromBase64[tmp$ret$0] = i;
      }
       while (inductionVariable <= last);
    var rangeStartDiff = 'hCgBpCQGYHZH5BRpBPPPPPPRMP5BPPlCPP6BkEPPPPcPXPzBvBrB3BOiDoBHwD+E3DauCnFmBmB2D6E1BlBTiBmBlBP5BhBiBrBvBjBqBnBPRtBiCmCtBlB0BmB5BiB7BmBgEmChBZgCoEoGVpBSfRhBPqKQ2BwBYoFgB4CJuTiEvBuCuDrF5DgEgFlJ1DgFmBQtBsBRGsB+BPiBlD1EIjDPRPPPQPPPPPGQSQS/DxENVNU+B9zCwBwBPPCkDPNnBPqDYY1R8B7FkFgTgwGgwUwmBgKwBuBScmEP/BPPPPPPrBP8B7F1B/ErBqC6B7BiBmBfQsBUwCw/KwqIwLwETPcPjQgJxFgBlBsD';
    var diff = decodeVarLenBase64(rangeStartDiff, fromBase64, 222);
    var start = new Int32Array(diff.length);
    var inductionVariable_0 = 0;
    var last_0 = diff.length - 1 | 0;
    if (inductionVariable_0 <= last_0)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        if (i_0 === 0)
          start[i_0] = diff[i_0];
        else
          start[i_0] = start[i_0 - 1 | 0] + diff[i_0] | 0;
      }
       while (inductionVariable_0 <= last_0);
    this.fm_1 = start;
    var rangeLength = 'aaMBXHYH5BRpBPPPPPPRMP5BPPlCPPzBDOOPPcPXPzBvBjB3BOhDmBBpB7DoDYxB+EiBP1DoExBkBQhBekBPmBgBhBctBiBMWOOXhCsBpBkBUV3Ba4BkB0DlCgBXgBtD4FSdBfPhBPpKP0BvBXjEQ2CGsT8DhBtCqDpFvD1D3E0IrD2EkBJrBDOBsB+BPiBlB1EIjDPPPPPPPPPPPGPPMNLsBNPNPKCvBvBPPCkDPBmBPhDXXgD4B6FzEgDguG9vUtkB9JcuBSckEP/BPPPPPPBPf4FrBjEhBpC3B5BKaWPrBOwCk/KsCuLqDHPbPxPsFtEaaqDL';
    this.gm_1 = decodeVarLenBase64(rangeLength, fromBase64, 222);
    var rangeCategory = 'GFjgggUHGGFFZZZmzpz5qB6s6020B60ptltB6smt2sB60mz22B1+vv+8BZZ5s2850BW5q1ymtB506smzBF3q1q1qB1q1q1+Bgii4wDTm74g3KiggxqM60q1q1Bq1o1q1BF1qlrqrBZ2q5wprBGFZWWZGHFsjiooLowgmOowjkwCkgoiIk7ligGogiioBkwkiYkzj2oNoi+sbkwj04DghhkQ8wgiYkgoioDsgnkwC4gikQ//v+85BkwvoIsgoyI4yguI0whiwEowri4CoghsJowgqYowgm4DkwgsY/nwnzPowhmYkg6wI8yggZswikwHgxgmIoxgqYkwgk4DkxgmIkgoioBsgssoBgzgyI8g9gL8g9kI0wgwJoxgkoC0wgioFkw/wI0w53iF4gioYowjmgBHGq1qkgwBF1q1q8qBHwghuIwghyKk0goQkwgoQk3goQHGFHkyg0pBgxj6IoinkxDswno7Ikwhz9Bo0gioB8z48Rwli0xN0mpjoX8w78pDwltoqKHFGGwwgsIHFH3q1q16BFHWFZ1q10q1B2qlwq1B1q10q1B2q1yq1B6q1gq1Biq1qhxBir1qp1Bqt1q1qB1g1q1+B//3q16B///q1qBH/qlqq9Bholqq9B1i00a1q10qD1op1HkwmigEigiy6Cptogq1Bixo1kDq7/j00B2qgoBWGFm1lz50B6s5q1+BGWhggzhwBFFhgk4//Bo2jigE8wguI8wguI8wgugUog1qoB4qjmIwwi2KgkYHHH4lBgiFWkgIWoghssMmz5smrBZ3q1y50B5sm7gzBtz1smzB5smz50BqzqtmzB5sgzqzBF2/9//5BowgoIwmnkzPkwgk4C8ys65BkgoqI0wgy6FghquZo2giY0ghiIsgh24B4ghsQ8QF/v1q1OFs0O8iCHHF1qggz/B8wg6Iznv+//B08QgohsjK0QGFk7hsQ4gB';
    this.hm_1 = decodeVarLenBase64(rangeCategory, fromBase64, 222);
  }
  Letter.$metadata$ = objectMeta('Letter');
  var Letter_instance;
  function Letter_getInstance() {
    if (Letter_instance == null)
      new Letter();
    return Letter_instance;
  }
  function isOtherLowercase(_this__u8e3s4) {
    var index = binarySearchRange(OtherLowercase_getInstance().im_1, _this__u8e3s4);
    return index >= 0 ? _this__u8e3s4 < (OtherLowercase_getInstance().im_1[index] + OtherLowercase_getInstance().jm_1[index] | 0) : false;
  }
  function OtherLowercase() {
    OtherLowercase_instance = this;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = new Int32Array([170, 186, 688, 704, 736, 837, 890, 7468, 7544, 7579, 8305, 8319, 8336, 8560, 9424, 11388, 42652, 42864, 43000, 43868]);
    }
    tmp.im_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = new Int32Array([1, 1, 9, 2, 5, 1, 1, 63, 1, 37, 1, 1, 13, 16, 26, 2, 2, 1, 2, 4]);
    }
    tmp_0.jm_1 = tmp$ret$1;
  }
  OtherLowercase.$metadata$ = objectMeta('OtherLowercase');
  var OtherLowercase_instance;
  function OtherLowercase_getInstance() {
    if (OtherLowercase_instance == null)
      new OtherLowercase();
    return OtherLowercase_instance;
  }
  function titlecaseCharImpl(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = Char__toInt_impl_vasixd(_this__u8e3s4);
    }
    var code = tmp$ret$0;
    if ((452 <= code ? code <= 460 : false) ? true : 497 <= code ? code <= 499 : false) {
      return numberToChar(imul(3, (code + 1 | 0) / 3 | 0));
    }
    if ((4304 <= code ? code <= 4346 : false) ? true : 4349 <= code ? code <= 4351 : false) {
      return _this__u8e3s4;
    }
    return uppercaseChar(_this__u8e3s4);
  }
  function isWhitespaceImpl(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = Char__toInt_impl_vasixd(_this__u8e3s4);
    }
    var ch = tmp$ret$0;
    return (((9 <= ch ? ch <= 13 : false) ? true : 28 <= ch ? ch <= 32 : false) ? true : ch === 160) ? true : ch > 4096 ? (((((ch === 5760 ? true : 8192 <= ch ? ch <= 8202 : false) ? true : ch === 8232) ? true : ch === 8233) ? true : ch === 8239) ? true : ch === 8287) ? true : ch === 12288 : false;
  }
  function releaseIntercepted($this) {
    var intercepted = $this.q7_1;
    if (!(intercepted == null) ? !(intercepted === $this) : false) {
      ensureNotNull($this.s4().f8(Key_getInstance())).e8(intercepted);
    }
    $this.q7_1 = CompletedContinuation_getInstance();
  }
  function CoroutineImpl(resultContinuation) {
    this.j7_1 = resultContinuation;
    this.k7_1 = 0;
    this.l7_1 = 0;
    this.m7_1 = null;
    this.n7_1 = null;
    this.o7_1 = null;
    var tmp = this;
    var tmp0_safe_receiver = this.j7_1;
    tmp.p7_1 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.s4();
    this.q7_1 = null;
  }
  CoroutineImpl.prototype.km = function () {
    return this.n7_1;
  };
  CoroutineImpl.prototype.s4 = function () {
    return ensureNotNull(this.p7_1);
  };
  CoroutineImpl.prototype.u7 = function () {
    var tmp2_elvis_lhs = this.q7_1;
    var tmp;
    if (tmp2_elvis_lhs == null) {
      var tmp$ret$0;
      {
        var tmp0_safe_receiver = this.s4().f8(Key_getInstance());
        var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.d8(this);
        var tmp0_also = tmp1_elvis_lhs == null ? this : tmp1_elvis_lhs;
        {
        }
        {
          this.q7_1 = tmp0_also;
        }
        tmp$ret$0 = tmp0_also;
      }
      tmp = tmp$ret$0;
    } else {
      tmp = tmp2_elvis_lhs;
    }
    return tmp;
  };
  CoroutineImpl.prototype.v7 = function (result) {
    var current = this;
    var tmp$ret$0;
    {
      var tmp;
      if (_Result___get_isFailure__impl__jpiriv(result)) {
        tmp = null;
      } else {
        var tmp_0 = _Result___get_value__impl__bjfvqg(result);
        tmp = (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
      }
      tmp$ret$0 = tmp;
    }
    var currentResult = tmp$ret$0;
    var currentException = Result__exceptionOrNull_impl_p6xea9(result);
    while (true) {
      var tmp$ret$6;
      {
        var tmp0_with = current;
        {
        }
        if (currentException == null) {
          tmp0_with.m7_1 = currentResult;
        } else {
          tmp0_with.k7_1 = tmp0_with.l7_1;
          tmp0_with.n7_1 = currentException;
        }
        try {
          var outcome = tmp0_with.r7();
          if (outcome === get_COROUTINE_SUSPENDED())
            return Unit_getInstance();
          currentResult = outcome;
          currentException = null;
        } catch ($p) {
          currentResult = null;
          var tmp$ret$1;
          {
            tmp$ret$1 = $p;
          }
          currentException = tmp$ret$1;
        }
        releaseIntercepted(tmp0_with);
        var completion = ensureNotNull(tmp0_with.j7_1);
        var tmp_1;
        if (completion instanceof CoroutineImpl) {
          current = completion;
          tmp_1 = Unit_getInstance();
        } else {
          if (!(currentException == null)) {
            var tmp$ret$3;
            {
              var tmp0_resumeWithException = ensureNotNull(currentException);
              var tmp$ret$2;
              {
                var tmp0_failure = Companion_getInstance_8();
                tmp$ret$2 = _Result___init__impl__xyqfz8(createFailure(tmp0_resumeWithException));
              }
              tmp$ret$3 = completion.q4(tmp$ret$2);
            }
          } else {
            var tmp$ret$5;
            {
              var tmp1_resume = currentResult;
              var tmp$ret$4;
              {
                var tmp0_success = Companion_getInstance_8();
                tmp$ret$4 = _Result___init__impl__xyqfz8(tmp1_resume);
              }
              tmp$ret$5 = completion.q4(tmp$ret$4);
            }
          }
          return Unit_getInstance();
        }
        tmp$ret$6 = tmp_1;
      }
    }
  };
  CoroutineImpl.prototype.q4 = function (result) {
    return this.v7(result);
  };
  CoroutineImpl.$metadata$ = classMeta('CoroutineImpl', [Continuation]);
  function CompletedContinuation() {
    CompletedContinuation_instance = this;
  }
  CompletedContinuation.prototype.s4 = function () {
    throw IllegalStateException_init_$Create$_0('This continuation is already complete');
  };
  CompletedContinuation.prototype.v7 = function (result) {
    {
      throw IllegalStateException_init_$Create$_0('This continuation is already complete');
    }
  };
  CompletedContinuation.prototype.q4 = function (result) {
    return this.v7(result);
  };
  CompletedContinuation.prototype.toString = function () {
    return 'This continuation is already complete';
  };
  CompletedContinuation.$metadata$ = objectMeta('CompletedContinuation', [Continuation]);
  var CompletedContinuation_instance;
  function CompletedContinuation_getInstance() {
    if (CompletedContinuation_instance == null)
      new CompletedContinuation();
    return CompletedContinuation_instance;
  }
  function intercepted(_this__u8e3s4) {
    var tmp0_safe_receiver = _this__u8e3s4 instanceof CoroutineImpl ? _this__u8e3s4 : null;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.u7();
    return tmp1_elvis_lhs == null ? _this__u8e3s4 : tmp1_elvis_lhs;
  }
  function createCoroutineUnintercepted(_this__u8e3s4, receiver, completion) {
    var tmp$ret$0;
    {
      tmp$ret$0 = new _no_name_provided__qut3iv_11(completion, _this__u8e3s4, receiver);
    }
    return tmp$ret$0;
  }
  function startCoroutineUninterceptedOrReturn(_this__u8e3s4, receiver, completion) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    var a = tmp$ret$0;
    return typeof a === 'function' ? a(receiver, completion) : _this__u8e3s4.s7(receiver, completion);
  }
  function createCoroutineFromSuspendFunction(completion, block) {
    return new _no_name_provided__qut3iv_12(completion, block);
  }
  function invokeSuspendSuperTypeWithReceiver(_this__u8e3s4, receiver, completion) {
    throw new NotImplementedError('It is intrinsic method');
  }
  function startCoroutineUninterceptedOrReturn_0(_this__u8e3s4, receiver, param, completion) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    var a = tmp$ret$0;
    return typeof a === 'function' ? a(receiver, param, completion) : _this__u8e3s4.kc(receiver, param, completion);
  }
  function invokeSuspendSuperTypeWithReceiverAndParam(_this__u8e3s4, receiver, param, completion) {
    throw new NotImplementedError('It is intrinsic method');
  }
  function _no_name_provided__qut3iv_11($completion, $this_createCoroutineUnintercepted, $receiver) {
    this.tm_1 = $completion;
    this.um_1 = $this_createCoroutineUnintercepted;
    this.vm_1 = $receiver;
    CoroutineImpl.call(this, isInterface($completion, Continuation) ? $completion : THROW_CCE());
  }
  _no_name_provided__qut3iv_11.prototype.r7 = function () {
    if (this.km() != null)
      throw this.km();
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = this.um_1;
      }
      var a = tmp$ret$0;
      tmp$ret$1 = typeof a === 'function' ? a(this.vm_1, this.tm_1) : this.um_1.s7(this.vm_1, this.tm_1);
    }
    return tmp$ret$1;
  };
  _no_name_provided__qut3iv_11.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function _no_name_provided__qut3iv_12($completion, $block) {
    this.en_1 = $block;
    CoroutineImpl.call(this, isInterface($completion, Continuation) ? $completion : THROW_CCE());
  }
  _no_name_provided__qut3iv_12.prototype.r7 = function () {
    if (this.km() != null)
      throw this.km();
    return this.en_1();
  };
  _no_name_provided__qut3iv_12.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function Exception_init_$Init$($this) {
    extendThrowable($this, void 1, void 1);
    Exception.call($this);
    return $this;
  }
  function Exception_init_$Init$_0(message, $this) {
    extendThrowable($this, message, void 1);
    Exception.call($this);
    return $this;
  }
  function Exception_init_$Create$(message) {
    var tmp = Exception_init_$Init$_0(message, Object.create(Exception.prototype));
    captureStack(tmp, Exception_init_$Create$);
    return tmp;
  }
  function Exception_init_$Init$_1(message, cause, $this) {
    extendThrowable($this, message, cause);
    Exception.call($this);
    return $this;
  }
  function Exception() {
    captureStack(this, Exception);
  }
  Exception.$metadata$ = classMeta('Exception', undefined, undefined, undefined, undefined, Error.prototype);
  function Error_init_$Init$(message, $this) {
    extendThrowable($this, message, void 1);
    Error_0.call($this);
    return $this;
  }
  function Error_init_$Create$(message) {
    var tmp = Error_init_$Init$(message, Object.create(Error_0.prototype));
    captureStack(tmp, Error_init_$Create$);
    return tmp;
  }
  function Error_init_$Init$_0(message, cause, $this) {
    extendThrowable($this, message, cause);
    Error_0.call($this);
    return $this;
  }
  function Error_0() {
    captureStack(this, Error_0);
  }
  Error_0.$metadata$ = classMeta('Error', undefined, undefined, undefined, undefined, Error.prototype);
  function IllegalArgumentException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    IllegalArgumentException.call($this);
    return $this;
  }
  function IllegalArgumentException_init_$Create$() {
    var tmp = IllegalArgumentException_init_$Init$(Object.create(IllegalArgumentException.prototype));
    captureStack(tmp, IllegalArgumentException_init_$Create$);
    return tmp;
  }
  function IllegalArgumentException_init_$Init$_0(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    IllegalArgumentException.call($this);
    return $this;
  }
  function IllegalArgumentException_init_$Create$_0(message) {
    var tmp = IllegalArgumentException_init_$Init$_0(message, Object.create(IllegalArgumentException.prototype));
    captureStack(tmp, IllegalArgumentException_init_$Create$_0);
    return tmp;
  }
  function IllegalArgumentException_init_$Init$_1(message, cause, $this) {
    RuntimeException_init_$Init$_1(message, cause, $this);
    IllegalArgumentException.call($this);
    return $this;
  }
  function IllegalArgumentException_init_$Create$_1(message, cause) {
    var tmp = IllegalArgumentException_init_$Init$_1(message, cause, Object.create(IllegalArgumentException.prototype));
    captureStack(tmp, IllegalArgumentException_init_$Create$_1);
    return tmp;
  }
  function IllegalArgumentException() {
    captureStack(this, IllegalArgumentException);
  }
  IllegalArgumentException.$metadata$ = classMeta('IllegalArgumentException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function IllegalStateException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    IllegalStateException.call($this);
    return $this;
  }
  function IllegalStateException_init_$Create$() {
    var tmp = IllegalStateException_init_$Init$(Object.create(IllegalStateException.prototype));
    captureStack(tmp, IllegalStateException_init_$Create$);
    return tmp;
  }
  function IllegalStateException_init_$Init$_0(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    IllegalStateException.call($this);
    return $this;
  }
  function IllegalStateException_init_$Create$_0(message) {
    var tmp = IllegalStateException_init_$Init$_0(message, Object.create(IllegalStateException.prototype));
    captureStack(tmp, IllegalStateException_init_$Create$_0);
    return tmp;
  }
  function IllegalStateException_init_$Init$_1(message, cause, $this) {
    RuntimeException_init_$Init$_1(message, cause, $this);
    IllegalStateException.call($this);
    return $this;
  }
  function IllegalStateException_init_$Create$_1(message, cause) {
    var tmp = IllegalStateException_init_$Init$_1(message, cause, Object.create(IllegalStateException.prototype));
    captureStack(tmp, IllegalStateException_init_$Create$_1);
    return tmp;
  }
  function IllegalStateException() {
    captureStack(this, IllegalStateException);
  }
  IllegalStateException.$metadata$ = classMeta('IllegalStateException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function NoSuchElementException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    NoSuchElementException.call($this);
    return $this;
  }
  function NoSuchElementException_init_$Create$() {
    var tmp = NoSuchElementException_init_$Init$(Object.create(NoSuchElementException.prototype));
    captureStack(tmp, NoSuchElementException_init_$Create$);
    return tmp;
  }
  function NoSuchElementException_init_$Init$_0(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    NoSuchElementException.call($this);
    return $this;
  }
  function NoSuchElementException_init_$Create$_0(message) {
    var tmp = NoSuchElementException_init_$Init$_0(message, Object.create(NoSuchElementException.prototype));
    captureStack(tmp, NoSuchElementException_init_$Create$_0);
    return tmp;
  }
  function NoSuchElementException() {
    captureStack(this, NoSuchElementException);
  }
  NoSuchElementException.$metadata$ = classMeta('NoSuchElementException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function RuntimeException_init_$Init$($this) {
    Exception_init_$Init$($this);
    RuntimeException.call($this);
    return $this;
  }
  function RuntimeException_init_$Init$_0(message, $this) {
    Exception_init_$Init$_0(message, $this);
    RuntimeException.call($this);
    return $this;
  }
  function RuntimeException_init_$Init$_1(message, cause, $this) {
    Exception_init_$Init$_1(message, cause, $this);
    RuntimeException.call($this);
    return $this;
  }
  function RuntimeException_init_$Create$(message, cause) {
    var tmp = RuntimeException_init_$Init$_1(message, cause, Object.create(RuntimeException.prototype));
    captureStack(tmp, RuntimeException_init_$Create$);
    return tmp;
  }
  function RuntimeException() {
    captureStack(this, RuntimeException);
  }
  RuntimeException.$metadata$ = classMeta('RuntimeException', undefined, undefined, undefined, undefined, Exception.prototype);
  function IndexOutOfBoundsException_init_$Init$(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    IndexOutOfBoundsException.call($this);
    return $this;
  }
  function IndexOutOfBoundsException_init_$Create$(message) {
    var tmp = IndexOutOfBoundsException_init_$Init$(message, Object.create(IndexOutOfBoundsException.prototype));
    captureStack(tmp, IndexOutOfBoundsException_init_$Create$);
    return tmp;
  }
  function IndexOutOfBoundsException() {
    captureStack(this, IndexOutOfBoundsException);
  }
  IndexOutOfBoundsException.$metadata$ = classMeta('IndexOutOfBoundsException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function UnsupportedOperationException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    UnsupportedOperationException.call($this);
    return $this;
  }
  function UnsupportedOperationException_init_$Create$() {
    var tmp = UnsupportedOperationException_init_$Init$(Object.create(UnsupportedOperationException.prototype));
    captureStack(tmp, UnsupportedOperationException_init_$Create$);
    return tmp;
  }
  function UnsupportedOperationException_init_$Init$_0(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    UnsupportedOperationException.call($this);
    return $this;
  }
  function UnsupportedOperationException_init_$Create$_0(message) {
    var tmp = UnsupportedOperationException_init_$Init$_0(message, Object.create(UnsupportedOperationException.prototype));
    captureStack(tmp, UnsupportedOperationException_init_$Create$_0);
    return tmp;
  }
  function UnsupportedOperationException() {
    captureStack(this, UnsupportedOperationException);
  }
  UnsupportedOperationException.$metadata$ = classMeta('UnsupportedOperationException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function AssertionError_init_$Init$(message, $this) {
    Error_init_$Init$(message, $this);
    AssertionError.call($this);
    return $this;
  }
  function AssertionError_init_$Create$(message) {
    var tmp = AssertionError_init_$Init$(message, Object.create(AssertionError.prototype));
    captureStack(tmp, AssertionError_init_$Create$);
    return tmp;
  }
  function AssertionError() {
    captureStack(this, AssertionError);
  }
  AssertionError.$metadata$ = classMeta('AssertionError', undefined, undefined, undefined, undefined, Error_0.prototype);
  function ArithmeticException_init_$Init$(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    ArithmeticException.call($this);
    return $this;
  }
  function ArithmeticException_init_$Create$(message) {
    var tmp = ArithmeticException_init_$Init$(message, Object.create(ArithmeticException.prototype));
    captureStack(tmp, ArithmeticException_init_$Create$);
    return tmp;
  }
  function ArithmeticException() {
    captureStack(this, ArithmeticException);
  }
  ArithmeticException.$metadata$ = classMeta('ArithmeticException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function NumberFormatException_init_$Init$(message, $this) {
    IllegalArgumentException_init_$Init$_0(message, $this);
    NumberFormatException.call($this);
    return $this;
  }
  function NumberFormatException_init_$Create$(message) {
    var tmp = NumberFormatException_init_$Init$(message, Object.create(NumberFormatException.prototype));
    captureStack(tmp, NumberFormatException_init_$Create$);
    return tmp;
  }
  function NumberFormatException() {
    captureStack(this, NumberFormatException);
  }
  NumberFormatException.$metadata$ = classMeta('NumberFormatException', undefined, undefined, undefined, undefined, IllegalArgumentException.prototype);
  function NullPointerException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    NullPointerException.call($this);
    return $this;
  }
  function NullPointerException_init_$Create$() {
    var tmp = NullPointerException_init_$Init$(Object.create(NullPointerException.prototype));
    captureStack(tmp, NullPointerException_init_$Create$);
    return tmp;
  }
  function NullPointerException() {
    captureStack(this, NullPointerException);
  }
  NullPointerException.$metadata$ = classMeta('NullPointerException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function NoWhenBranchMatchedException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    NoWhenBranchMatchedException.call($this);
    return $this;
  }
  function NoWhenBranchMatchedException_init_$Create$() {
    var tmp = NoWhenBranchMatchedException_init_$Init$(Object.create(NoWhenBranchMatchedException.prototype));
    captureStack(tmp, NoWhenBranchMatchedException_init_$Create$);
    return tmp;
  }
  function NoWhenBranchMatchedException() {
    captureStack(this, NoWhenBranchMatchedException);
  }
  NoWhenBranchMatchedException.$metadata$ = classMeta('NoWhenBranchMatchedException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function ClassCastException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    ClassCastException.call($this);
    return $this;
  }
  function ClassCastException_init_$Create$() {
    var tmp = ClassCastException_init_$Init$(Object.create(ClassCastException.prototype));
    captureStack(tmp, ClassCastException_init_$Create$);
    return tmp;
  }
  function ClassCastException() {
    captureStack(this, ClassCastException);
  }
  ClassCastException.$metadata$ = classMeta('ClassCastException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function UninitializedPropertyAccessException_init_$Init$(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    UninitializedPropertyAccessException.call($this);
    return $this;
  }
  function UninitializedPropertyAccessException_init_$Create$(message) {
    var tmp = UninitializedPropertyAccessException_init_$Init$(message, Object.create(UninitializedPropertyAccessException.prototype));
    captureStack(tmp, UninitializedPropertyAccessException_init_$Create$);
    return tmp;
  }
  function UninitializedPropertyAccessException() {
    captureStack(this, UninitializedPropertyAccessException);
  }
  UninitializedPropertyAccessException.$metadata$ = classMeta('UninitializedPropertyAccessException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function jsIn(lhs_hack, rhs_hack) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = lhs_hack in rhs_hack;
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function jsBitwiseOr(lhs_hack, rhs_hack) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = lhs_hack | rhs_hack;
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function jsTypeOf(value_hack) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = typeof value_hack;
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function jsDeleteProperty(obj_hack, property_hack) {
    delete obj_hack[property_hack];
  }
  function jsInstanceOf(obj_hack, jsClass_hack) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = obj_hack instanceof jsClass_hack;
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function findAssociatedObject(_this__u8e3s4, annotationClass) {
    var tmp;
    var tmp_0;
    if (_this__u8e3s4 instanceof KClassImpl) {
      tmp_0 = annotationClass instanceof KClassImpl;
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_asDynamic = annotationClass.di();
          tmp$ret$0 = tmp0_asDynamic;
        }
        var tmp1_unsafeCast = tmp$ret$0;
        tmp$ret$1 = tmp1_unsafeCast;
      }
      var tmp0_safe_receiver = tmp$ret$1.$metadata$;
      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.associatedObjectKey;
      var tmp_1;
      if (tmp1_safe_receiver == null) {
        tmp_1 = null;
      } else {
        var tmp$ret$3;
        {
          var tmp$ret$2;
          {
            tmp$ret$2 = tmp1_safe_receiver;
          }
          tmp$ret$3 = tmp$ret$2;
        }
        tmp_1 = tmp$ret$3;
      }
      var tmp2_elvis_lhs = tmp_1;
      var tmp_2;
      if (tmp2_elvis_lhs == null) {
        return null;
      } else {
        tmp_2 = tmp2_elvis_lhs;
      }
      var key = tmp_2;
      var tmp$ret$5;
      {
        var tmp$ret$4;
        {
          var tmp2_asDynamic = _this__u8e3s4.di();
          tmp$ret$4 = tmp2_asDynamic;
        }
        var tmp3_unsafeCast = tmp$ret$4;
        tmp$ret$5 = tmp3_unsafeCast;
      }
      var tmp3_safe_receiver = tmp$ret$5.$metadata$;
      var tmp4_elvis_lhs = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.associatedObjects;
      var tmp_3;
      if (tmp4_elvis_lhs == null) {
        return null;
      } else {
        tmp_3 = tmp4_elvis_lhs;
      }
      var map = tmp_3;
      var tmp5_elvis_lhs = map[key];
      var tmp_4;
      if (tmp5_elvis_lhs == null) {
        return null;
      } else {
        tmp_4 = tmp5_elvis_lhs;
      }
      var factory = tmp_4;
      return factory();
    } else {
      tmp = null;
    }
    return tmp;
  }
  function toString_3(_this__u8e3s4, radix) {
    return toStringImpl(_this__u8e3s4, checkRadix(radix));
  }
  function Function1() {
  }
  Function1.$metadata$ = interfaceMeta('Function1');
  function Function0() {
  }
  Function0.$metadata$ = interfaceMeta('Function0');
  function SuspendFunction1() {
  }
  SuspendFunction1.$metadata$ = interfaceMeta('SuspendFunction1');
  function SuspendFunction2() {
  }
  SuspendFunction2.$metadata$ = interfaceMeta('SuspendFunction2');
  //region block: post-declaration
  CombinedContext.prototype.m8 = plus;
  AbstractCoroutineContextElement.prototype.f8 = get;
  AbstractCoroutineContextElement.prototype.l8 = fold;
  AbstractCoroutineContextElement.prototype.k8 = minusKey;
  AbstractCoroutineContextElement.prototype.m8 = plus;
  InternalHashCodeMap.prototype.xg = createJsMap;
  //endregion
  //region block: init
  PI = 3.141592653589793;
  _stableSortingIsSupported = null;
  interfacesCounter = 0;
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = createKType;
  _.$_$.b = findAssociatedObject;
  _.$_$.c = getKClassFromExpression;
  _.$_$.d = getKClass;
  _.$_$.e = LazyThreadSafetyMode_PUBLICATION_getInstance;
  _.$_$.f = returnIfSuspended;
  _.$_$.g = fill$default;
  _.$_$.h = joinToString$default_0;
  _.$_$.i = joinToString$default;
  _.$_$.j = joinTo$default;
  _.$_$.k = joinToString$default_1;
  _.$_$.l = contains$default;
  _.$_$.m = indexOf$default;
  _.$_$.n = lastIndexOf$default;
  _.$_$.o = replace$default;
  _.$_$.p = startsWith$default_1;
  _.$_$.q = NotImplementedError_init_$Create$;
  _.$_$.r = ArrayList_init_$Create$_0;
  _.$_$.s = ArrayList_init_$Create$;
  _.$_$.t = ArrayList_init_$Create$_1;
  _.$_$.u = HashMap_init_$Create$_1;
  _.$_$.v = HashMap_init_$Create$;
  _.$_$.w = HashMap_init_$Create$_2;
  _.$_$.x = HashSet_init_$Create$_1;
  _.$_$.y = HashSet_init_$Create$;
  _.$_$.z = HashSet_init_$Create$_0;
  _.$_$.a1 = LinkedHashMap_init_$Create$_1;
  _.$_$.b1 = LinkedHashMap_init_$Create$;
  _.$_$.c1 = LinkedHashMap_init_$Create$_2;
  _.$_$.d1 = LinkedHashSet_init_$Create$;
  _.$_$.e1 = LinkedHashSet_init_$Create$_0;
  _.$_$.f1 = CancellationException_init_$Create$;
  _.$_$.g1 = CancellationException_init_$Init$_0;
  _.$_$.h1 = Regex_init_$Create$;
  _.$_$.i1 = StringBuilder_init_$Create$_0;
  _.$_$.j1 = AssertionError_init_$Create$;
  _.$_$.k1 = Error_init_$Create$;
  _.$_$.l1 = Error_init_$Init$_0;
  _.$_$.m1 = Exception_init_$Init$_1;
  _.$_$.n1 = IllegalArgumentException_init_$Create$;
  _.$_$.o1 = IllegalArgumentException_init_$Init$_0;
  _.$_$.p1 = IllegalArgumentException_init_$Create$_0;
  _.$_$.q1 = IllegalArgumentException_init_$Init$_1;
  _.$_$.r1 = IllegalArgumentException_init_$Create$_1;
  _.$_$.s1 = IllegalStateException_init_$Create$;
  _.$_$.t1 = IllegalStateException_init_$Init$_0;
  _.$_$.u1 = IllegalStateException_init_$Create$_0;
  _.$_$.v1 = IllegalStateException_init_$Create$_1;
  _.$_$.w1 = IndexOutOfBoundsException_init_$Create$;
  _.$_$.x1 = NoSuchElementException_init_$Create$;
  _.$_$.y1 = NoSuchElementException_init_$Init$_0;
  _.$_$.z1 = NoSuchElementException_init_$Create$_0;
  _.$_$.a2 = RuntimeException_init_$Init$_1;
  _.$_$.b2 = RuntimeException_init_$Create$;
  _.$_$.c2 = UnsupportedOperationException_init_$Create$;
  _.$_$.d2 = UnsupportedOperationException_init_$Create$_0;
  _.$_$.e2 = ValueTimeMark__elapsedNow_impl_eonqvs;
  _.$_$.f2 = _Char___init__impl__6a9atx;
  _.$_$.g2 = Char__minus_impl_a2frrh;
  _.$_$.h2 = Char__plus_impl_qi7pgj;
  _.$_$.i2 = Char__toInt_impl_vasixd;
  _.$_$.j2 = toString_0;
  _.$_$.k2 = _Result___init__impl__xyqfz8;
  _.$_$.l2 = Result__exceptionOrNull_impl_p6xea9;
  _.$_$.m2 = _Result___get_isFailure__impl__jpiriv;
  _.$_$.n2 = _Result___get_value__impl__bjfvqg;
  _.$_$.o2 = _UInt___init__impl__l7qpdl;
  _.$_$.p2 = _UInt___get_data__impl__f0vqqw;
  _.$_$.q2 = _ULong___init__impl__c78o9k;
  _.$_$.r2 = _ULong___get_data__impl__fggpzb;
  _.$_$.s2 = ULong__hashCode_impl_6hv2lb;
  _.$_$.t2 = Key_getInstance;
  _.$_$.u2 = EmptyCoroutineContext_getInstance;
  _.$_$.v2 = BooleanCompanionObject_getInstance;
  _.$_$.w2 = ByteCompanionObject_getInstance;
  _.$_$.x2 = DoubleCompanionObject_getInstance;
  _.$_$.y2 = FloatCompanionObject_getInstance;
  _.$_$.z2 = IntCompanionObject_getInstance;
  _.$_$.a3 = ShortCompanionObject_getInstance;
  _.$_$.b3 = StringCompanionObject_getInstance;
  _.$_$.c3 = Default_getInstance;
  _.$_$.d3 = PrimitiveClasses_getInstance;
  _.$_$.e3 = Companion_getInstance_7;
  _.$_$.f3 = Monotonic_getInstance;
  _.$_$.g3 = Companion_getInstance_12;
  _.$_$.h3 = Companion_getInstance_14;
  _.$_$.i3 = Companion_getInstance_8;
  _.$_$.j3 = Unit_getInstance;
  _.$_$.k3 = ArrayList;
  _.$_$.l3 = Collection;
  _.$_$.m3 = HashMap;
  _.$_$.n3 = HashSet;
  _.$_$.o3 = Iterable_0;
  _.$_$.p3 = Iterator;
  _.$_$.q3 = LinkedHashMap;
  _.$_$.r3 = LinkedHashSet;
  _.$_$.s3 = List_0;
  _.$_$.t3 = Entry;
  _.$_$.u3 = Map;
  _.$_$.v3 = MutableListIterator;
  _.$_$.w3 = MutableList_0;
  _.$_$.x3 = MutableEntry;
  _.$_$.y3 = MutableMap;
  _.$_$.z3 = MutableSet;
  _.$_$.a4 = Set;
  _.$_$.b4 = addAll;
  _.$_$.c4 = addAll_0;
  _.$_$.d4 = arrayCopy;
  _.$_$.e4 = arrayListOf_0;
  _.$_$.f4 = asIterable_0;
  _.$_$.g4 = asIterable;
  _.$_$.h4 = asList;
  _.$_$.i4 = asSequence_1;
  _.$_$.j4 = asSequence_0;
  _.$_$.k4 = asSequence_2;
  _.$_$.l4 = asSequence;
  _.$_$.m4 = checkIndexOverflow;
  _.$_$.n4 = collectionSizeOrDefault;
  _.$_$.o4 = contains_1;
  _.$_$.p4 = contains_0;
  _.$_$.q4 = contentEquals;
  _.$_$.r4 = contentEquals_0;
  _.$_$.s4 = contentHashCode_0;
  _.$_$.t4 = contentHashCode;
  _.$_$.u4 = copyOf_4;
  _.$_$.v4 = copyOf_2;
  _.$_$.w4 = copyOf_6;
  _.$_$.x4 = copyOf;
  _.$_$.y4 = copyOf_5;
  _.$_$.z4 = copyOf_0;
  _.$_$.a5 = copyOf_1;
  _.$_$.b5 = copyOf_7;
  _.$_$.c5 = copyOf_3;
  _.$_$.d5 = copyToArray;
  _.$_$.e5 = distinct;
  _.$_$.f5 = distinct_0;
  _.$_$.g5 = emptyList;
  _.$_$.h5 = emptyMap;
  _.$_$.i5 = emptySet;
  _.$_$.j5 = fill;
  _.$_$.k5 = first;
  _.$_$.l5 = flatten;
  _.$_$.m5 = getValue;
  _.$_$.n5 = get_indices_0;
  _.$_$.o5 = get_indices_1;
  _.$_$.p5 = get_indices;
  _.$_$.q5 = get_indices_2;
  _.$_$.r5 = get_lastIndex_1;
  _.$_$.s5 = get_lastIndex_2;
  _.$_$.t5 = get_lastIndex_3;
  _.$_$.u5 = get_lastIndex;
  _.$_$.v5 = lastOrNull;
  _.$_$.w5 = last;
  _.$_$.x5 = listOf_0;
  _.$_$.y5 = listOf;
  _.$_$.z5 = mapCapacity;
  _.$_$.a6 = mapOf;
  _.$_$.b6 = minus;
  _.$_$.c6 = mutableListOf_0;
  _.$_$.d6 = mutableMapOf_0;
  _.$_$.e6 = mutableSetOf_0;
  _.$_$.f6 = plus_0;
  _.$_$.g6 = removeAll;
  _.$_$.h6 = removeAll_0;
  _.$_$.i6 = removeAll_1;
  _.$_$.j6 = removeLastOrNull;
  _.$_$.k6 = removeLast;
  _.$_$.l6 = retainAll;
  _.$_$.m6 = reversed;
  _.$_$.n6 = reversed_0;
  _.$_$.o6 = setOf;
  _.$_$.p6 = shuffled;
  _.$_$.q6 = singleOrNull;
  _.$_$.r6 = sortWith;
  _.$_$.s6 = sorted;
  _.$_$.t6 = sum_1;
  _.$_$.u6 = sum_0;
  _.$_$.v6 = sum;
  _.$_$.w6 = toBooleanArray;
  _.$_$.x6 = toHashSet;
  _.$_$.y6 = toIntArray;
  _.$_$.z6 = toList_0;
  _.$_$.a7 = toList;
  _.$_$.b7 = toMap;
  _.$_$.c7 = toMutableList_2;
  _.$_$.d7 = toMutableList_1;
  _.$_$.e7 = toSet;
  _.$_$.f7 = withIndex;
  _.$_$.g7 = compareValues;
  _.$_$.h7 = maxOf_0;
  _.$_$.i7 = minOf_0;
  _.$_$.j7 = CancellationException;
  _.$_$.k7 = get_COROUTINE_SUSPENDED;
  _.$_$.l7 = createCoroutineUnintercepted;
  _.$_$.m7 = intercepted;
  _.$_$.n7 = AbstractCoroutineContextElement;
  _.$_$.o7 = AbstractCoroutineContextKey;
  _.$_$.p7 = get_0;
  _.$_$.q7 = minusKey_0;
  _.$_$.r7 = ContinuationInterceptor;
  _.$_$.s7 = Continuation;
  _.$_$.t7 = fold;
  _.$_$.u7 = get;
  _.$_$.v7 = minusKey;
  _.$_$.w7 = Element;
  _.$_$.x7 = Key_0;
  _.$_$.y7 = plus;
  _.$_$.z7 = CoroutineImpl;
  _.$_$.a8 = SuspendFunction1;
  _.$_$.b8 = SuspendFunction2;
  _.$_$.c8 = startCoroutine;
  _.$_$.d8 = getProgressionLastElement;
  _.$_$.e8 = println;
  _.$_$.f8 = println_0;
  _.$_$.g8 = anyToString;
  _.$_$.h8 = arrayIterator;
  _.$_$.i8 = booleanArray;
  _.$_$.j8 = captureStack;
  _.$_$.k8 = charArray;
  _.$_$.l8 = charSequenceGet;
  _.$_$.m8 = charSequenceLength;
  _.$_$.n8 = charSequenceSubSequence;
  _.$_$.o8 = classMeta;
  _.$_$.p8 = compareTo_0;
  _.$_$.q8 = equals_1;
  _.$_$.r8 = fillArrayVal;
  _.$_$.s8 = getNumberHashCode;
  _.$_$.t8 = getPropertyCallableRef;
  _.$_$.u8 = getStringHashCode;
  _.$_$.v8 = hashCode_0;
  _.$_$.w8 = intArrayIterator;
  _.$_$.x8 = interfaceMeta;
  _.$_$.y8 = isArray;
  _.$_$.z8 = isBooleanArray;
  _.$_$.a9 = isByteArray;
  _.$_$.b9 = isCharArray;
  _.$_$.c9 = isComparable;
  _.$_$.d9 = isDoubleArray;
  _.$_$.e9 = isFloatArray;
  _.$_$.f9 = isIntArray;
  _.$_$.g9 = isInterface;
  _.$_$.h9 = isLongArray;
  _.$_$.i9 = isObject;
  _.$_$.j9 = isShortArray;
  _.$_$.k9 = isSuspendFunction;
  _.$_$.l9 = get_js;
  _.$_$.m9 = longArray;
  _.$_$.n9 = numberRangeToNumber;
  _.$_$.o9 = numberToChar;
  _.$_$.p9 = numberToInt;
  _.$_$.q9 = objectMeta;
  _.$_$.r9 = toByte;
  _.$_$.s9 = toLong_0;
  _.$_$.t9 = toShort;
  _.$_$.u9 = toString_2;
  _.$_$.v9 = get_PI;
  _.$_$.w9 = abs;
  _.$_$.x9 = log;
  _.$_$.y9 = roundToInt;
  _.$_$.z9 = round_0;
  _.$_$.aa = ReadWriteProperty;
  _.$_$.ba = Random_0;
  _.$_$.ca = coerceAtLeast;
  _.$_$.da = coerceAtMost;
  _.$_$.ea = coerceIn;
  _.$_$.fa = reversed_1;
  _.$_$.ga = step;
  _.$_$.ha = until;
  _.$_$.ia = KClass;
  _.$_$.ja = KMutableProperty0;
  _.$_$.ka = KMutableProperty1;
  _.$_$.la = KProperty1;
  _.$_$.ma = KTypeParameter;
  _.$_$.na = SequenceScope;
  _.$_$.oa = Sequence;
  _.$_$.pa = asIterable_1;
  _.$_$.qa = asSequence_3;
  _.$_$.ra = chunked;
  _.$_$.sa = emptySequence;
  _.$_$.ta = filter_0;
  _.$_$.ua = flatMap_0;
  _.$_$.va = generateSequence;
  _.$_$.wa = indexOf_2;
  _.$_$.xa = iterator_1;
  _.$_$.ya = map_2;
  _.$_$.za = sequenceOf;
  _.$_$.ab = sequence;
  _.$_$.bb = toList_1;
  _.$_$.cb = StringBuilder;
  _.$_$.db = decodeToString;
  _.$_$.eb = equals_0;
  _.$_$.fb = isBlank;
  _.$_$.gb = isLowerCase;
  _.$_$.hb = lineSequence;
  _.$_$.ib = lines;
  _.$_$.jb = padEnd;
  _.$_$.kb = padStart;
  _.$_$.lb = prependIndent;
  _.$_$.mb = removePrefix;
  _.$_$.nb = single_2;
  _.$_$.ob = startsWith_1;
  _.$_$.pb = substring_1;
  _.$_$.qb = titlecase;
  _.$_$.rb = toBoolean;
  _.$_$.sb = toDouble;
  _.$_$.tb = toIntOrNull;
  _.$_$.ub = toInt;
  _.$_$.vb = toInt_0;
  _.$_$.wb = toLongOrNull;
  _.$_$.xb = toLong;
  _.$_$.yb = trimIndent;
  _.$_$.zb = uppercaseChar;
  _.$_$.ac = Duration;
  _.$_$.bc = TimedValue;
  _.$_$.cc = Annotation;
  _.$_$.dc = Char_0;
  _.$_$.ec = Comparable;
  _.$_$.fc = Comparator;
  _.$_$.gc = DeepRecursiveFunction;
  _.$_$.hc = DeepRecursiveScope;
  _.$_$.ic = Enum;
  _.$_$.jc = Error_0;
  _.$_$.kc = Exception;
  _.$_$.lc = IllegalArgumentException;
  _.$_$.mc = IllegalStateException;
  _.$_$.nc = Long;
  _.$_$.oc = NoSuchElementException;
  _.$_$.pc = NotImplementedError;
  _.$_$.qc = NumberFormatException;
  _.$_$.rc = Pair;
  _.$_$.sc = RuntimeException;
  _.$_$.tc = THROW_CCE;
  _.$_$.uc = THROW_ISE;
  _.$_$.vc = Triple;
  _.$_$.wc = UInt;
  _.$_$.xc = Unit;
  _.$_$.yc = UnsupportedOperationException;
  _.$_$.zc = addSuppressed;
  _.$_$.ad = arrayOf;
  _.$_$.bd = countTrailingZeroBits;
  _.$_$.cd = createFailure;
  _.$_$.dd = ensureNotNull;
  _.$_$.ed = invoke;
  _.$_$.fd = isFinite;
  _.$_$.gd = isFinite_0;
  _.$_$.hd = isInfinite;
  _.$_$.id = isNaN_1;
  _.$_$.jd = isNaN_0;
  _.$_$.kd = lazy;
  _.$_$.ld = lazy_0;
  _.$_$.md = noWhenBranchMatchedException;
  _.$_$.nd = plus_2;
  _.$_$.od = throwUninitializedPropertyAccessException;
  _.$_$.pd = toString_1;
  _.$_$.qd = to;
  //endregion
  return _;
}));



/***/ }),

/***/ "./kotlin/kotlin_org_mifek_wfc_WFC_Kotlin.js":
/*!***************************************************!*\
  !*** ./kotlin/kotlin_org_mifek_wfc_WFC_Kotlin.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
  if (true)
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ./kotlin-kotlin-stdlib-js-ir.js */ "./kotlin/kotlin-kotlin-stdlib-js-ir.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
}(this, function (_, kotlin_kotlin) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var classMeta = kotlin_kotlin.$_$.o8;
  var CoroutineImpl = kotlin_kotlin.$_$.z7;
  var Unit_getInstance = kotlin_kotlin.$_$.j3;
  var THROW_CCE = kotlin_kotlin.$_$.tc;
  var SequenceScope = kotlin_kotlin.$_$.na;
  var arrayIterator = kotlin_kotlin.$_$.h8;
  var asSequence = kotlin_kotlin.$_$.i4;
  var get_COROUTINE_SUSPENDED = kotlin_kotlin.$_$.k7;
  var get_indices = kotlin_kotlin.$_$.p5;
  var get_lastIndex = kotlin_kotlin.$_$.u5;
  var iterator = kotlin_kotlin.$_$.xa;
  var Iterable = kotlin_kotlin.$_$.o3;
  var SuspendFunction1 = kotlin_kotlin.$_$.a8;
  var fillArrayVal = kotlin_kotlin.$_$.r8;
  var booleanArray = kotlin_kotlin.$_$.i8;
  var map = kotlin_kotlin.$_$.ya;
  var Triple = kotlin_kotlin.$_$.vc;
  var Pair = kotlin_kotlin.$_$.rc;
  var indexOf = kotlin_kotlin.$_$.wa;
  var contains = kotlin_kotlin.$_$.p4;
  var Random = kotlin_kotlin.$_$.ba;
  var Default_getInstance = kotlin_kotlin.$_$.c3;
  var get_lastIndex_0 = kotlin_kotlin.$_$.r5;
  var get_indices_0 = kotlin_kotlin.$_$.o5;
  var intArrayIterator = kotlin_kotlin.$_$.w8;
  var until = kotlin_kotlin.$_$.ha;
  var asSequence_0 = kotlin_kotlin.$_$.qa;
  var toList = kotlin_kotlin.$_$.bb;
  var MutableListIterator = kotlin_kotlin.$_$.v3;
  var contentHashCode = kotlin_kotlin.$_$.s4;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.s;
  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.b1;
  var Map = kotlin_kotlin.$_$.u3;
  var isInterface = kotlin_kotlin.$_$.g9;
  var ensureNotNull = kotlin_kotlin.$_$.dd;
  var Collection = kotlin_kotlin.$_$.l3;
  var contentEquals = kotlin_kotlin.$_$.r4;
  var isIntArray = kotlin_kotlin.$_$.f9;
  var NoSuchElementException_init_$Create$ = kotlin_kotlin.$_$.z1;
  var arrayListOf = kotlin_kotlin.$_$.e4;
  var NotImplementedError = kotlin_kotlin.$_$.pc;
  var MutableList = kotlin_kotlin.$_$.w3;
  var Error_init_$Create$ = kotlin_kotlin.$_$.k1;
  var objectMeta = kotlin_kotlin.$_$.q9;
  var Enum = kotlin_kotlin.$_$.ic;
  var log = kotlin_kotlin.$_$.x9;
  var sum = kotlin_kotlin.$_$.u6;
  var DoubleCompanionObject_getInstance = kotlin_kotlin.$_$.x2;
  var interfaceMeta = kotlin_kotlin.$_$.x8;
  var collectionSizeOrDefault = kotlin_kotlin.$_$.n4;
  var ArrayList_init_$Create$_0 = kotlin_kotlin.$_$.r;
  var distinct = kotlin_kotlin.$_$.e5;
  var flatten = kotlin_kotlin.$_$.l5;
  var addAll = kotlin_kotlin.$_$.b4;
  var toMutableList = kotlin_kotlin.$_$.d7;
  var minus = kotlin_kotlin.$_$.b6;
  var asIterable = kotlin_kotlin.$_$.pa;
  var println = kotlin_kotlin.$_$.e8;
  var noWhenBranchMatchedException = kotlin_kotlin.$_$.md;
  var IntCompanionObject_getInstance = kotlin_kotlin.$_$.z2;
  var hashCode = kotlin_kotlin.$_$.v8;
  var equals = kotlin_kotlin.$_$.q8;
  var asSequence_1 = kotlin_kotlin.$_$.j4;
  var emptySequence = kotlin_kotlin.$_$.sa;
  var getNumberHashCode = kotlin_kotlin.$_$.s8;
  var sum_0 = kotlin_kotlin.$_$.t6;
  var copyToArray = kotlin_kotlin.$_$.d5;
  var distinct_0 = kotlin_kotlin.$_$.f5;
  var checkIndexOverflow = kotlin_kotlin.$_$.m4;
  var toIntArray = kotlin_kotlin.$_$.y6;
  var mapOf = kotlin_kotlin.$_$.a6;
  var numberRangeToNumber = kotlin_kotlin.$_$.n9;
  var mutableListOf = kotlin_kotlin.$_$.c6;
  var sequenceOf = kotlin_kotlin.$_$.za;
  var addAll_0 = kotlin_kotlin.$_$.c4;
  var sequence = kotlin_kotlin.$_$.ab;
  var reversed = kotlin_kotlin.$_$.m6;
  var asIterable_0 = kotlin_kotlin.$_$.f4;
  //endregion
  //region block: pre-declaration
  Cartesian2DWfcAlgorithm.prototype = Object.create(WfcAlgorithm.prototype);
  Cartesian2DWfcAlgorithm.prototype.constructor = Cartesian2DWfcAlgorithm;
  Waves$iterator$slambda.prototype = Object.create(CoroutineImpl.prototype);
  Waves$iterator$slambda.prototype.constructor = Waves$iterator$slambda;
  IntArray2D$rows$o$iterator$slambda.prototype = Object.create(CoroutineImpl.prototype);
  IntArray2D$rows$o$iterator$slambda.prototype.constructor = IntArray2D$rows$o$iterator$slambda;
  IntArray2D$columns$o$iterator$slambda.prototype = Object.create(CoroutineImpl.prototype);
  IntArray2D$columns$o$iterator$slambda.prototype.constructor = IntArray2D$columns$o$iterator$slambda;
  Direction2D.prototype = Object.create(Enum.prototype);
  Direction2D.prototype.constructor = Direction2D;
  Pixels$iterator$slambda.prototype = Object.create(CoroutineImpl.prototype);
  Pixels$iterator$slambda.prototype.constructor = Pixels$iterator$slambda;
  Cartesian2DTopology$neighbourIterator$slambda.prototype = Object.create(CoroutineImpl.prototype);
  Cartesian2DTopology$neighbourIterator$slambda.prototype.constructor = Cartesian2DTopology$neighbourIterator$slambda;
  //endregion
  function Cartesian2DWfcAlgorithm(topology2D, weights, propagator, patterns, pixels) {
    WfcAlgorithm.call(this, topology2D, weights, propagator, new LowestEntropyHeuristic(patterns.c68_1, topology2D.l68(), weights));
    this.q69_1 = topology2D;
    this.r69_1 = patterns;
    this.s69_1 = pixels;
  }
  Cartesian2DWfcAlgorithm.prototype.t69 = function (wave, patterns) {
    {
      var tmp0_iterator = patterns.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          if (this.y6a(wave, element) == null)
            return false;
        }
      }
    }
    return this.a6b() ? true : this.z6a();
  };
  Cartesian2DWfcAlgorithm.$metadata$ = classMeta('Cartesian2DWfcAlgorithm', undefined, undefined, undefined, undefined, WfcAlgorithm.prototype);
  function Waves$iterator$slambda(this$0, resultContinuation) {
    this.w6b_1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  Waves$iterator$slambda.prototype.a6c = function ($this$iterator, $cont) {
    var tmp = this.b6c($this$iterator, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  Waves$iterator$slambda.prototype.s7 = function (p1, $cont) {
    return this.a6c(p1 instanceof SequenceScope ? p1 : THROW_CCE(), $cont);
  };
  Waves$iterator$slambda.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 4;
            this.y6b_1 = arrayIterator(this.w6b_1.c6c_1);
            this.k7_1 = 1;
            continue $sm;
          case 1:
            if (!this.y6b_1.n()) {
              this.k7_1 = 3;
              continue $sm;
            }

            this.z6b_1 = this.y6b_1.o();
            this.k7_1 = 2;
            suspendResult = this.x6b_1.k4(asSequence(this.z6b_1), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.k7_1 = 1;
            continue $sm;
          case 3:
            return Unit_getInstance();
          case 4:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 4) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  Waves$iterator$slambda.prototype.b6c = function ($this$iterator, completion) {
    var i = new Waves$iterator$slambda(this.w6b_1, completion);
    i.x6b_1 = $this$iterator;
    return i;
  };
  Waves$iterator$slambda.$metadata$ = classMeta('Waves$iterator$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function Waves$iterator$slambda_0(this$0, resultContinuation) {
    var i = new Waves$iterator$slambda(this$0, resultContinuation);
    var l = function ($this$iterator, $cont) {
      return i.a6c($this$iterator, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function Waves(waves) {
    this.c6c_1 = waves;
    this.d6c_1 = this.c6c_1.length;
    this.e6c_1 = get_indices(this.c6c_1);
    this.f6c_1 = get_lastIndex(this.c6c_1);
  }
  Waves.prototype.r2g = function (waveIndex, patternIndex) {
    return this.c6c_1[waveIndex][patternIndex];
  };
  Waves.prototype.r = function (waveIndex) {
    return asSequence(this.c6c_1[waveIndex]);
  };
  Waves.prototype.h = function () {
    return iterator(Waves$iterator$slambda_0(this, null));
  };
  Waves.$metadata$ = classMeta('Waves', [Iterable]);
  function WfcAlgorithm$warmup$lambda() {
    return function (it) {
      return it.v_1;
    };
  }
  function WfcAlgorithm(topology, weights, propagator, heuristic) {
    this.u69_1 = topology;
    this.v69_1 = weights;
    this.w69_1 = propagator;
    this.x69_1 = heuristic;
    this.y69_1 = false;
    this.z69_1 = this.v69_1.length;
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = this.u69_1.l68();
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(tmp_1), null);
    }
    var tmp_2 = tmp$ret$0;
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$1;
      {
        tmp$ret$1 = booleanArray(this.z69_1);
      }
      tmp_2[tmp_3] = tmp$ret$1;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp.a6a_1 = tmp_2;
    var tmp_4 = this;
    var tmp_5 = 0;
    var tmp_6 = this.u69_1.l68();
    var tmp_7 = new Int32Array(tmp_6);
    while (tmp_5 < tmp_6) {
      var tmp_8 = tmp_5;
      var tmp$ret$2;
      {
        tmp$ret$2 = this.z69_1;
      }
      tmp_7[tmp_8] = tmp$ret$2;
      tmp_5 = tmp_5 + 1 | 0;
    }
    tmp_4.b6a_1 = tmp_7;
    this.c6a_1 = false;
    this.d6a_1 = new Waves(this.a6a_1);
    var tmp_9 = this;
    var tmp_10 = 0;
    var tmp_11 = this.a6a_1.length;
    var tmp$ret$3;
    {
      tmp$ret$3 = fillArrayVal(Array(tmp_11), null);
    }
    var tmp_12 = tmp$ret$3;
    while (tmp_10 < tmp_11) {
      var tmp_13 = tmp_10;
      var tmp$ret$6;
      {
        var tmp_14 = 0;
        var tmp_15 = this.z69_1;
        var tmp$ret$4;
        {
          tmp$ret$4 = fillArrayVal(Array(tmp_15), null);
        }
        var tmp_16 = tmp$ret$4;
        while (tmp_14 < tmp_15) {
          var tmp_17 = tmp_14;
          var tmp$ret$5;
          {
            tmp$ret$5 = new Int32Array(this.u69_1.g6c());
          }
          tmp_16[tmp_17] = tmp$ret$5;
          tmp_14 = tmp_14 + 1 | 0;
        }
        tmp$ret$6 = tmp_16;
      }
      tmp_12[tmp_13] = tmp$ret$6;
      tmp_10 = tmp_10 + 1 | 0;
    }
    tmp_9.e6a_1 = tmp_12;
    this.f6a_1 = 0;
    var tmp_18 = this;
    var tmp$ret$7;
    {
      var tmp0_arrayOfNulls = imul(this.a6a_1.length, this.z69_1);
      tmp$ret$7 = fillArrayVal(Array(tmp0_arrayOfNulls), null);
    }
    tmp_18.g6a_1 = tmp$ret$7;
    this.h6a_1 = new EventHandler();
    this.i6a_1 = new EventHandler();
    this.j6a_1 = new EventHandler();
    this.k6a_1 = new EventHandler();
    this.l6a_1 = new EventHandler();
    this.m6a_1 = new EventHandler();
    this.n6a_1 = new EventHandler();
    this.o6a_1 = new EventHandler();
    this.p6a_1 = new EventHandler();
    this.q6a_1 = new EventHandler();
    this.r6a_1 = new EventHandler();
    this.s6a_1 = new EventHandler();
    this.t6a_1 = new EventHandler();
    this.u6a_1 = new EventHandler();
    this.v6a_1 = new EventHandler();
    this.w6a_1 = new EventHandler();
    this.x6a_1 = new EventHandler();
  }
  WfcAlgorithm.prototype.b6b = function () {
    return this.u69_1;
  };
  WfcAlgorithm.prototype.c6b = function () {
    return this.y69_1;
  };
  WfcAlgorithm.prototype.d6b = function () {
    return this.z69_1;
  };
  WfcAlgorithm.prototype.e6b = function (value) {
    this.c6a_1 = value;
    if (!value) {
      this.z6a();
    }
  };
  WfcAlgorithm.prototype.a6b = function () {
    return this.c6a_1;
  };
  WfcAlgorithm.prototype.f6b = function () {
    return this.d6a_1;
  };
  WfcAlgorithm.prototype.g6b = function () {
    return this.h6a_1;
  };
  WfcAlgorithm.prototype.h6b = function () {
    return this.q6a_1;
  };
  WfcAlgorithm.prototype.t7 = function () {
    this.i6a_1.i6c(this);
    this.y69_1 = false;
    var inductionVariable = 0;
    var last = this.a6a_1.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var w = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var inductionVariable_0 = 0;
        var last_0 = this.z69_1;
        if (inductionVariable_0 < last_0)
          do {
            var p = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            this.a6a_1[w][p] = true;
            var inductionVariable_1 = 0;
            var last_1 = this.u69_1.g6c();
            if (inductionVariable_1 < last_1)
              do {
                var n = inductionVariable_1;
                inductionVariable_1 = inductionVariable_1 + 1 | 0;
                this.e6a_1[w][p][n] = this.w69_1[(n + (this.u69_1.g6c() / 2 | 0) | 0) % this.u69_1.g6c() | 0][p].length;
              }
               while (inductionVariable_1 < last_1);
          }
           while (inductionVariable_0 < last_0);
        this.b6a_1[w] = this.z69_1;
      }
       while (inductionVariable <= last);
    this.j6a_1.i6c(this);
  };
  WfcAlgorithm.prototype.i6b = function () {
    this.k6a_1.i6c(this);
    this.y69_1 = true;
    var inductionVariable = 0;
    var last = this.a6a_1.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var w = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = this.u69_1.j6c(w);
        var neighbourDirections = map(tmp, WfcAlgorithm$warmup$lambda());
        var inductionVariable_0 = 0;
        var last_0 = this.z69_1;
        if (inductionVariable_0 < last_0)
          do {
            var p = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var tmp2_iterator = neighbourDirections.h();
            $l$loop: while (tmp2_iterator.n()) {
              var d = tmp2_iterator.o();
              var tmp$ret$0;
              {
                var tmp0_isEmpty = this.w69_1[d][p];
                tmp$ret$0 = tmp0_isEmpty.length === 0;
              }
              if (tmp$ret$0) {
                if (this.y6a(w, p) == null) {
                  this.q6a_1.i6c(this);
                  return false;
                }
                break $l$loop;
              }
            }
          }
           while (inductionVariable_0 < last_0);
      }
       while (inductionVariable <= last);
    var result = this.z6a();
    this.l6a_1.i6c(this);
    return result;
  };
  WfcAlgorithm.prototype.y6a = function (wave, pattern) {
    if (!this.a6a_1[wave][pattern])
      return false;
    this.o6a_1.i6c(new Triple(this, wave, pattern));
    this.a6a_1[wave][pattern] = false;
    var tmp0_array = this.b6a_1;
    var tmp1_index0 = wave;
    var tmp2 = tmp0_array[tmp1_index0];
    tmp0_array[tmp1_index0] = tmp2 - 1 | 0;
    var compatiblePatterns = this.e6a_1[wave][pattern];
    var inductionVariable = 0;
    var last = this.u69_1.g6c();
    if (inductionVariable < last)
      do {
        var neighbour = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        compatiblePatterns[neighbour] = 0;
      }
       while (inductionVariable < last);
    if (this.f6a_1 === this.g6a_1.length)
      return null;
    var tmp4_this = this;
    var tmp5 = tmp4_this.f6a_1;
    tmp4_this.f6a_1 = tmp5 + 1 | 0;
    this.g6a_1[tmp5] = new Pair(wave, pattern);
    this.p6a_1.i6c(new Triple(this, wave, pattern));
    if (this.b6a_1[wave] === 0) {
      return null;
    } else if (this.b6a_1[wave] === 1) {
      this.x6a_1.i6c(new Triple(this, wave, indexOf(this.d6a_1.r(wave), true)));
    }
    return true;
  };
  WfcAlgorithm.prototype.j6b = function (patterns, random) {
    var tmp = 0;
    var tmp_0 = this.z69_1;
    var tmp_1 = new Float64Array(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$0;
      {
        tmp$ret$0 = patterns[tmp_2] ? this.v69_1[tmp_2] : 0.0;
      }
      tmp_1[tmp_2] = tmp$ret$0;
      tmp = tmp + 1 | 0;
    }
    var distribution = tmp_1;
    return randomIndex(distribution, random);
  };
  WfcAlgorithm.prototype.k6b = function (random) {
    this.m6a_1.i6c(this);
    var selectedWave = this.x69_1.k6c();
    if (selectedWave == null) {
      this.q6a_1.i6c(this);
      return false;
    } else if (selectedWave === -1) {
      return true;
    }
    var wavePatterns = this.a6a_1[selectedWave];
    var observedPattern = this.j6b(wavePatterns, random);
    var inductionVariable = 0;
    var last = this.z69_1;
    if (inductionVariable < last)
      do {
        var patternIndex = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!(wavePatterns[patternIndex] === (patternIndex === observedPattern))) {
          if (this.y6a(selectedWave, patternIndex) == null) {
            this.n6a_1.i6c(new Triple(this, selectedWave, observedPattern));
            this.q6a_1.i6c(this);
            return false;
          }
        }
      }
       while (inductionVariable < last);
    this.n6a_1.i6c(new Triple(this, selectedWave, observedPattern));
    return null;
  };
  WfcAlgorithm.prototype.z6a = function () {
    this.r6a_1.i6c(this);
    var original = this.f6a_1;
    $l$loop: while (this.f6a_1 > 0) {
      var tmp0_this = this;
      var tmp1 = tmp0_this.f6a_1;
      tmp0_this.f6a_1 = tmp1 - 1 | 0;
      var tmp2 = original;
      original = tmp2 - 1 | 0;
      var tmp3_elvis_lhs = this.g6a_1[this.f6a_1];
      var tmp;
      if (tmp3_elvis_lhs == null) {
        continue $l$loop;
      } else {
        tmp = tmp3_elvis_lhs;
      }
      var actual = tmp;
      var tmp4_container = actual;
      var waveIndex = tmp4_container.z3();
      var patternIndex = tmp4_container.a4();
      var tmp5_iterator = this.u69_1.j6c(waveIndex).h();
      while (tmp5_iterator.n()) {
        var neighbour = tmp5_iterator.o();
        var direction = neighbour.v_1;
        var neighbourIndex = neighbour.w_1;
        var neighbourPatterns = this.w69_1[direction][patternIndex];
        var compatibles = this.e6a_1[neighbourIndex];
        var inductionVariable = 0;
        var last = this.z69_1;
        if (inductionVariable < last)
          $l$loop_0: do {
            var neighbourPatternIndex = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            if ((!(compatibles[neighbourPatternIndex][direction] === 0) ? true : !this.a6a_1[neighbourIndex][neighbourPatternIndex]) ? !contains(neighbourPatterns, neighbourPatternIndex) : false) {
              continue $l$loop_0;
            }
            var optionCompatible = compatibles[neighbourPatternIndex];
            if (optionCompatible[direction] > 0) {
              var tmp7_array = optionCompatible;
              var tmp8_index0 = direction;
              var tmp9 = tmp7_array[tmp8_index0];
              tmp7_array[tmp8_index0] = tmp9 - 1 | 0;
            }
            if (optionCompatible[direction] === 0) {
              if (this.y6a(neighbourIndex, neighbourPatternIndex) == null) {
                this.t6a_1.i6c(this);
                this.q6a_1.i6c(this);
                return false;
              }
            }
          }
           while (inductionVariable < last);
      }
      if (original === 0) {
        original = this.f6a_1;
        this.s6a_1.i6c(this);
      }
    }
    this.t6a_1.i6c(this);
    return true;
  };
  WfcAlgorithm.prototype.l6b = function (random) {
    this.u6a_1.i6c(this);
    var result = this.k6b(random);
    if (!(result == null)) {
      this.v6a_1.i6c(this);
      return result;
    }
    if (!this.z6a()) {
      this.v6a_1.i6c(this);
      return false;
    }
    this.v6a_1.i6c(this);
    return null;
  };
  WfcAlgorithm.prototype.m6b = function (seed, limit, backtrackLimit) {
    var random = Random(seed);
    this.x69_1.l6c(this, random);
    this.t7();
    this.h6a_1.i6c(this);
    if (!this.i6b()) {
      this.w6a_1.i6c(this);
      return false;
    }
    if (!(limit === 0)) {
      var l = 0;
      while (l < limit) {
        var result = this.l6b(random);
        if (!(result == null)) {
          this.w6a_1.i6c(this);
          return result;
        }
        var tmp0 = l;
        l = tmp0 + 1 | 0;
      }
    } else {
      while (true) {
        var result_0 = this.l6b(random);
        if (!(result_0 == null)) {
          this.w6a_1.i6c(this);
          return result_0;
        }
      }
    }
    this.w6a_1.i6c(this);
    return true;
  };
  WfcAlgorithm.prototype.n6b = function (seed, limit, backtrackLimit, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      seed = Default_getInstance().g4();
    if (!(($mask0 & 2) === 0))
      limit = 0;
    if (!(($mask0 & 4) === 0))
      backtrackLimit = 0;
    return $handler == null ? this.m6b(seed, limit, backtrackLimit) : $handler(seed, limit, backtrackLimit);
  };
  WfcAlgorithm.$metadata$ = classMeta('WfcAlgorithm');
  function IntArray2D$rows$o$iterator$slambda($rows, this$0, resultContinuation) {
    this.u6c_1 = $rows;
    this.v6c_1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  IntArray2D$rows$o$iterator$slambda.prototype.z6c = function ($this$iterator, $cont) {
    var tmp = this.a6d($this$iterator, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  IntArray2D$rows$o$iterator$slambda.prototype.s7 = function (p1, $cont) {
    return this.z6c(p1 instanceof SequenceScope ? p1 : THROW_CCE(), $cont);
  };
  IntArray2D$rows$o$iterator$slambda.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 4;
            this.x6c_1 = this.u6c_1.h();
            this.k7_1 = 1;
            continue $sm;
          case 1:
            if (!this.x6c_1.n()) {
              this.k7_1 = 3;
              continue $sm;
            }

            this.y6c_1 = this.x6c_1.o();
            this.k7_1 = 2;
            suspendResult = this.w6c_1.k4(this.v6c_1.h6d(this.y6c_1), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.k7_1 = 1;
            continue $sm;
          case 3:
            return Unit_getInstance();
          case 4:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 4) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  IntArray2D$rows$o$iterator$slambda.prototype.a6d = function ($this$iterator, completion) {
    var i = new IntArray2D$rows$o$iterator$slambda(this.u6c_1, this.v6c_1, completion);
    i.w6c_1 = $this$iterator;
    return i;
  };
  IntArray2D$rows$o$iterator$slambda.$metadata$ = classMeta('IntArray2D$rows$o$iterator$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function IntArray2D$rows$o$iterator$slambda_0($rows, this$0, resultContinuation) {
    var i = new IntArray2D$rows$o$iterator$slambda($rows, this$0, resultContinuation);
    var l = function ($this$iterator, $cont) {
      return i.z6c($this$iterator, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function IntArray2D$columns$o$iterator$slambda($columns, this$0, resultContinuation) {
    this.q6d_1 = $columns;
    this.r6d_1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  IntArray2D$columns$o$iterator$slambda.prototype.z6c = function ($this$iterator, $cont) {
    var tmp = this.a6d($this$iterator, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  IntArray2D$columns$o$iterator$slambda.prototype.s7 = function (p1, $cont) {
    return this.z6c(p1 instanceof SequenceScope ? p1 : THROW_CCE(), $cont);
  };
  IntArray2D$columns$o$iterator$slambda.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 4;
            this.t6d_1 = this.q6d_1.h();
            this.k7_1 = 1;
            continue $sm;
          case 1:
            if (!this.t6d_1.n()) {
              this.k7_1 = 3;
              continue $sm;
            }

            this.u6d_1 = this.t6d_1.o();
            this.k7_1 = 2;
            suspendResult = this.s6d_1.k4(this.r6d_1.v6d(this.u6d_1), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.k7_1 = 1;
            continue $sm;
          case 3:
            return Unit_getInstance();
          case 4:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 4) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  IntArray2D$columns$o$iterator$slambda.prototype.a6d = function ($this$iterator, completion) {
    var i = new IntArray2D$columns$o$iterator$slambda(this.q6d_1, this.r6d_1, completion);
    i.s6d_1 = $this$iterator;
    return i;
  };
  IntArray2D$columns$o$iterator$slambda.$metadata$ = classMeta('IntArray2D$columns$o$iterator$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function IntArray2D$columns$o$iterator$slambda_0($columns, this$0, resultContinuation) {
    var i = new IntArray2D$columns$o$iterator$slambda($columns, this$0, resultContinuation);
    var l = function ($this$iterator, $cont) {
      return i.z6c($this$iterator, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function IntArray2D_init_$Init$(width, height, init, $mask0, $marker, $this) {
    if (!(($mask0 & 4) === 0)) {
      init = IntArray2D$_init_$lambda_mxcb7z();
    }
    IntArray2D.call($this, width, height, init);
    return $this;
  }
  function IntArray2D_init_$Create$(width, height, init, $mask0, $marker) {
    return IntArray2D_init_$Init$(width, height, init, $mask0, $marker, Object.create(IntArray2D.prototype));
  }
  function IntArray2D$_init_$lambda_mxcb7z() {
    return function (it) {
      return 0;
    };
  }
  function _no_name_provided__qut3iv($rows, this$0) {
    this.w6d_1 = $rows;
    this.x6d_1 = this$0;
  }
  _no_name_provided__qut3iv.prototype.h = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = iterator(IntArray2D$rows$o$iterator$slambda_0(this.w6d_1, this.x6d_1, null));
    }
    return tmp$ret$0;
  };
  _no_name_provided__qut3iv.$metadata$ = classMeta(undefined, [Iterable]);
  function _no_name_provided__qut3iv_0($columns, this$0) {
    this.y6d_1 = $columns;
    this.z6d_1 = this$0;
  }
  _no_name_provided__qut3iv_0.prototype.h = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = iterator(IntArray2D$columns$o$iterator$slambda_0(this.y6d_1, this.z6d_1, null));
    }
    return tmp$ret$0;
  };
  _no_name_provided__qut3iv_0.$metadata$ = classMeta(undefined, [Iterable]);
  function IntArray2D(width, height, init) {
    this.b6d_1 = width;
    this.c6d_1 = height;
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = imul(this.b6d_1, this.c6d_1);
    var tmp_2 = new Int32Array(tmp_1);
    var tmp0 = init;
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      tmp_2[tmp_3] = tmp0(tmp_3);
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp.d6d_1 = tmp_2;
    this.e6d_1 = this.d6d_1.length;
    this.f6d_1 = get_lastIndex_0(this.d6d_1);
    this.g6d_1 = get_indices_0(this.d6d_1);
  }
  IntArray2D.prototype.m55 = function () {
    return this.d6d_1;
  };
  IntArray2D.prototype.h = function () {
    return intArrayIterator(this.d6d_1);
  };
  IntArray2D.prototype.r = function (index) {
    return this.d6d_1[index];
  };
  IntArray2D.prototype.a6e = function (index, value) {
    this.d6d_1[index] = value;
  };
  IntArray2D.prototype.r2g = function (x, y) {
    return this.d6d_1[imul(y, this.b6d_1) + x | 0];
  };
  IntArray2D.prototype.b6e = function (x, y, value) {
    this.d6d_1[imul(y, this.b6d_1) + x | 0] = value;
  };
  IntArray2D.prototype.c6e = function () {
    return this.d6d_1;
  };
  IntArray2D.prototype.d6e = function (startIndex, xRange, yRange) {
    var tmp0_elvis_lhs = xRange;
    var xRange2 = toList(asSequence_0((tmp0_elvis_lhs == null ? until(0, this.b6d_1) : tmp0_elvis_lhs).h()));
    var tmp1_elvis_lhs = yRange;
    var yRange2 = toList(asSequence_0((tmp1_elvis_lhs == null ? until(0, this.c6d_1) : tmp1_elvis_lhs).h()));
    var tmp = xRange2.m();
    var tmp_0 = yRange2.m();
    var slice = IntArray2D_init_$Create$(tmp, tmp_0, null, 4, null);
    var sliceIndex = 0;
    var tmp2_iterator = yRange2.h();
    while (tmp2_iterator.n()) {
      var y = tmp2_iterator.o();
      var postIndex = (startIndex + imul(y, this.b6d_1) | 0) % this.e6d_1 | 0;
      var tmp3_iterator = xRange2.h();
      while (tmp3_iterator.n()) {
        var x = tmp3_iterator.o();
        var height = postIndex / this.b6d_1 | 0;
        var position = ((postIndex % this.b6d_1 | 0) + x | 0) % this.b6d_1 | 0;
        slice.a6e(sliceIndex, this.d6d_1[imul(height, this.b6d_1) + position | 0]);
        var tmp4 = sliceIndex;
        sliceIndex = tmp4 + 1 | 0;
      }
    }
    return slice;
  };
  IntArray2D.prototype.v6d = function (column) {
    var tmp = 0;
    var tmp_0 = this.c6d_1;
    var tmp_1 = new Int32Array(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$0;
      {
        tmp$ret$0 = this.r(imul(tmp_2, this.b6d_1) + column | 0);
      }
      tmp_1[tmp_2] = tmp$ret$0;
      tmp = tmp + 1 | 0;
    }
    return tmp_1;
  };
  IntArray2D.prototype.h6d = function (row) {
    var tmp = 0;
    var tmp_0 = this.b6d_1;
    var tmp_1 = new Int32Array(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$0;
      {
        tmp$ret$0 = this.r(tmp_2 + imul(row, this.b6d_1) | 0);
      }
      tmp_1[tmp_2] = tmp$ret$0;
      tmp = tmp + 1 | 0;
    }
    return tmp_1;
  };
  IntArray2D.prototype.e6e = function (rows) {
    var tmp$ret$0;
    {
      tmp$ret$0 = new _no_name_provided__qut3iv(rows, this);
    }
    return tmp$ret$0;
  };
  IntArray2D.prototype.f6e = function (columns) {
    var tmp$ret$0;
    {
      tmp$ret$0 = new _no_name_provided__qut3iv_0(columns, this);
    }
    return tmp$ret$0;
  };
  IntArray2D.prototype.g6e = function (positive) {
    var res = IntArray2D_init_$Create$(this.c6d_1, this.b6d_1, null, 4, null);
    var inductionVariable = 0;
    var last = res.c6d_1;
    if (inductionVariable < last)
      do {
        var y = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var inductionVariable_0 = 0;
        var last_0 = res.b6d_1;
        if (inductionVariable_0 < last_0)
          do {
            var x = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            res.b6e(x, y, this.r2g(positive ? y : (this.c6d_1 - 1 | 0) - y | 0, positive ? (this.b6d_1 - 1 | 0) - x | 0 : x));
          }
           while (inductionVariable_0 < last_0);
      }
       while (inductionVariable < last);
    return res;
  };
  IntArray2D.prototype.h6e = function (positive, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      positive = true;
    return this.g6e(positive);
  };
  IntArray2D.prototype.i6e = function () {
    var res = IntArray2D_init_$Create$(this.b6d_1, this.c6d_1, null, 4, null);
    var inductionVariable = 0;
    var last = res.c6d_1;
    if (inductionVariable < last)
      do {
        var y = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var inductionVariable_0 = 0;
        var last_0 = res.b6d_1;
        if (inductionVariable_0 < last_0)
          do {
            var x = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            res.b6e(x, y, this.r2g((this.b6d_1 - x | 0) - 1 | 0, y));
          }
           while (inductionVariable_0 < last_0);
      }
       while (inductionVariable < last);
    return res;
  };
  IntArray2D.prototype.j6e = function () {
    var res = IntArray2D_init_$Create$(this.b6d_1, this.c6d_1, null, 4, null);
    var inductionVariable = 0;
    var last = res.c6d_1;
    if (inductionVariable < last)
      do {
        var y = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var inductionVariable_0 = 0;
        var last_0 = res.b6d_1;
        if (inductionVariable_0 < last_0)
          do {
            var x = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            res.b6e(x, y, this.r2g(x, (this.c6d_1 - y | 0) - 1 | 0));
          }
           while (inductionVariable_0 < last_0);
      }
       while (inductionVariable < last);
    return res;
  };
  IntArray2D.$metadata$ = classMeta('IntArray2D', [Iterable]);
  function IntHolder(item) {
    this.k6e_1 = item;
  }
  IntHolder.prototype.l6e = function () {
    return this.k6e_1;
  };
  IntHolder.prototype.toString = function () {
    return 'IntHolder(item=' + this.k6e_1 + ')';
  };
  IntHolder.prototype.hashCode = function () {
    return this.k6e_1;
  };
  IntHolder.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof IntHolder))
      return false;
    var tmp0_other_with_cast = other instanceof IntHolder ? other : THROW_CCE();
    if (!(this.k6e_1 === tmp0_other_with_cast.k6e_1))
      return false;
    return true;
  };
  IntHolder.$metadata$ = classMeta('IntHolder');
  function PabIterator(pab, index) {
    this.m6e_1 = pab;
    this.n6e_1 = index;
    this.o6e_1 = this.m6e_1.p6e_1.ef();
  }
  PabIterator.prototype.n = function () {
    return this.o6e_1.n();
  };
  PabIterator.prototype.o = function () {
    return this.o6e_1.o().v_1;
  };
  PabIterator.prototype.e4 = function () {
    this.o6e_1.e4();
  };
  PabIterator.$metadata$ = classMeta('PabIterator', [MutableListIterator]);
  function hash($this, element) {
    return contentHashCode(element);
  }
  function PatternsArrayBuilder() {
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$();
    }
    tmp.p6e_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = LinkedHashMap_init_$Create$();
    }
    tmp_0.q6e_1 = tmp$ret$1;
  }
  PatternsArrayBuilder.prototype.r6e = function () {
    return this.p6e_1;
  };
  PatternsArrayBuilder.prototype.m = function () {
    return this.p6e_1.m();
  };
  PatternsArrayBuilder.prototype.s6e = function (element) {
    var hash_0 = hash(this, element);
    var tmp$ret$1;
    {
      var tmp0_contains = this.q6e_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = (isInterface(tmp0_contains, Map) ? tmp0_contains : THROW_CCE()).v2(hash_0);
      }
      tmp$ret$1 = tmp$ret$0;
    }
    if (!tmp$ret$1)
      return false;
    var tmp$ret$2;
    $l$block_0: {
      var tmp1_any = ensureNotNull(this.q6e_1.b3(hash_0));
      var tmp;
      if (isInterface(tmp1_any, Collection)) {
        tmp = tmp1_any.q();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$2 = false;
        break $l$block_0;
      }
      var tmp0_iterator = tmp1_any.h();
      while (tmp0_iterator.n()) {
        var element_0 = tmp0_iterator.o();
        var tmp$ret$3;
        {
          tmp$ret$3 = contentEquals(this.p6e_1.r(element_0).v_1, element);
        }
        if (tmp$ret$3) {
          tmp$ret$2 = true;
          break $l$block_0;
        }
      }
      tmp$ret$2 = false;
    }
    return tmp$ret$2;
  };
  PatternsArrayBuilder.prototype.p = function (element) {
    if (!(!(element == null) ? isIntArray(element) : false))
      return false;
    return this.s6e((!(element == null) ? isIntArray(element) : false) ? element : THROW_CCE());
  };
  PatternsArrayBuilder.prototype.t6e = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.q();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        var tmp$ret$1;
        {
          tmp$ret$1 = this.s6e(element);
        }
        if (!tmp$ret$1) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  PatternsArrayBuilder.prototype.s1 = function (elements) {
    return this.t6e(elements);
  };
  PatternsArrayBuilder.prototype.r = function (index) {
    return this.p6e_1.r(index).v_1;
  };
  PatternsArrayBuilder.prototype.u6e = function (element) {
    var hash_0 = hash(this, element);
    var tmp$ret$1;
    {
      var tmp0_contains = this.q6e_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = (isInterface(tmp0_contains, Map) ? tmp0_contains : THROW_CCE()).v2(hash_0);
      }
      tmp$ret$1 = tmp$ret$0;
    }
    if (!tmp$ret$1)
      return -1;
    var tmp$ret$3;
    $l$block: {
      var tmp1_first = ensureNotNull(this.q6e_1.b3(hash_0));
      var tmp0_iterator = tmp1_first.h();
      while (tmp0_iterator.n()) {
        var element_0 = tmp0_iterator.o();
        var tmp$ret$2;
        {
          tmp$ret$2 = contentEquals(this.p6e_1.r(element_0).v_1, element);
        }
        if (tmp$ret$2) {
          tmp$ret$3 = element_0;
          break $l$block;
        }
      }
      throw NoSuchElementException_init_$Create$('Collection contains no element matching the predicate.');
    }
    return tmp$ret$3;
  };
  PatternsArrayBuilder.prototype.u = function (element) {
    if (!(!(element == null) ? isIntArray(element) : false))
      return -1;
    return this.u6e((!(element == null) ? isIntArray(element) : false) ? element : THROW_CCE());
  };
  PatternsArrayBuilder.prototype.q = function () {
    return this.m() === 0;
  };
  PatternsArrayBuilder.prototype.h = function () {
    return new PabIterator(this, 0);
  };
  PatternsArrayBuilder.prototype.ef = function () {
    return new PabIterator(this, 0);
  };
  PatternsArrayBuilder.prototype.v6e = function (element) {
    var hash_0 = hash(this, element);
    if (this.q6e_1.v2(hash_0)) {
      var tmp$ret$2;
      {
        var tmp0_find = ensureNotNull(this.q6e_1.b3(hash_0));
        var tmp$ret$1;
        $l$block: {
          var tmp0_iterator = tmp0_find.h();
          while (tmp0_iterator.n()) {
            var element_0 = tmp0_iterator.o();
            var tmp$ret$0;
            {
              tmp$ret$0 = contentEquals(this.p6e_1.r(element_0).v_1, element);
            }
            if (tmp$ret$0) {
              tmp$ret$1 = element_0;
              break $l$block;
            }
          }
          tmp$ret$1 = null;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      var candidate = tmp$ret$2;
      if (!(candidate == null)) {
        var tmp0_this = this.p6e_1.r(candidate).w_1;
        var tmp1 = tmp0_this.k6e_1;
        tmp0_this.k6e_1 = tmp1 + 1 | 0;
        return true;
      }
      ensureNotNull(this.q6e_1.b3(hash_0)).b(this.p6e_1.m());
      this.p6e_1.b(new Pair(element, new IntHolder(1)));
      return true;
    }
    {
      var tmp1_set = this.q6e_1;
      var tmp2_set = arrayListOf([this.p6e_1.m()]);
      tmp1_set.a(hash_0, tmp2_set);
    }
    this.p6e_1.b(new Pair(element, new IntHolder(1)));
    return true;
  };
  PatternsArrayBuilder.prototype.b = function (element) {
    return this.v6e((!(element == null) ? isIntArray(element) : false) ? element : THROW_CCE());
  };
  PatternsArrayBuilder.prototype.w6e = function (index, element) {
    throw new NotImplementedError('This function is not available yet. Sorry.');
  };
  PatternsArrayBuilder.prototype.cf = function (index, element) {
    return this.w6e(index, (!(element == null) ? isIntArray(element) : false) ? element : THROW_CCE());
  };
  PatternsArrayBuilder.prototype.x6e = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.q();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        var tmp$ret$1;
        {
          tmp$ret$1 = this.v6e(element);
        }
        if (!tmp$ret$1) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  PatternsArrayBuilder.prototype.o1 = function (elements) {
    return this.x6e(elements);
  };
  PatternsArrayBuilder.prototype.t7 = function () {
    this.p6e_1.t7();
    this.q6e_1.t7();
  };
  PatternsArrayBuilder.prototype.y6e = function (element) {
    throw new NotImplementedError('This function is not available yet. Sorry.');
  };
  PatternsArrayBuilder.prototype.c4 = function (element) {
    if (!(!(element == null) ? isIntArray(element) : false))
      return false;
    return this.y6e((!(element == null) ? isIntArray(element) : false) ? element : THROW_CCE());
  };
  PatternsArrayBuilder.prototype.z6e = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.q();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        var tmp$ret$1;
        {
          tmp$ret$1 = this.y6e(element);
        }
        if (!tmp$ret$1) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  PatternsArrayBuilder.prototype.f4 = function (elements) {
    return this.z6e(elements);
  };
  PatternsArrayBuilder.prototype.d4 = function (index) {
    throw new NotImplementedError('This function is not available yet. Sorry.');
  };
  PatternsArrayBuilder.prototype.a6f = function (index, element) {
    throw new NotImplementedError('This function is not available yet. Sorry.');
  };
  PatternsArrayBuilder.prototype.t = function (index, element) {
    return this.a6f(index, (!(element == null) ? isIntArray(element) : false) ? element : THROW_CCE());
  };
  PatternsArrayBuilder.$metadata$ = classMeta('PatternsArrayBuilder', [MutableList]);
  var Direction2D_NORTH_instance;
  var Direction2D_EAST_instance;
  var Direction2D_SOUTH_instance;
  var Direction2D_WEST_instance;
  function Companion() {
    Companion_instance = this;
  }
  Companion.prototype.b6f = function (value) {
    var tmp0_subject = value;
    var tmp;
    switch (tmp0_subject) {
      case 0:
        tmp = Direction2D_NORTH_getInstance();
        break;
      case 1:
        tmp = Direction2D_EAST_getInstance();
        break;
      case 2:
        tmp = Direction2D_SOUTH_getInstance();
        break;
      case 3:
        tmp = Direction2D_WEST_getInstance();
        break;
      default:
        throw Error_init_$Create$('Wrong value. Accepts 0..3.');
    }
    return tmp;
  };
  Companion.$metadata$ = objectMeta('Companion');
  var Companion_instance;
  function Companion_getInstance() {
    Direction2D_initEntries();
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  var Direction2D_entriesInitialized;
  function Direction2D_initEntries() {
    if (Direction2D_entriesInitialized)
      return Unit_getInstance();
    Direction2D_entriesInitialized = true;
    Direction2D_NORTH_instance = new Direction2D('NORTH', 0, 0);
    Direction2D_EAST_instance = new Direction2D('EAST', 1, 1);
    Direction2D_SOUTH_instance = new Direction2D('SOUTH', 2, 2);
    Direction2D_WEST_instance = new Direction2D('WEST', 3, 3);
    Companion_getInstance();
  }
  function Direction2D(name, ordinal, value) {
    Enum.call(this, name, ordinal);
    this.e6f_1 = value;
  }
  Direction2D.prototype.fb = function () {
    return this.e6f_1;
  };
  Direction2D.$metadata$ = classMeta('Direction2D', undefined, undefined, undefined, undefined, Enum.prototype);
  function Direction2D_NORTH_getInstance() {
    Direction2D_initEntries();
    return Direction2D_NORTH_instance;
  }
  function Direction2D_EAST_getInstance() {
    Direction2D_initEntries();
    return Direction2D_EAST_instance;
  }
  function Direction2D_SOUTH_getInstance() {
    Direction2D_initEntries();
    return Direction2D_SOUTH_instance;
  }
  function Direction2D_WEST_getInstance() {
    Direction2D_initEntries();
    return Direction2D_WEST_instance;
  }
  function onBan($this, wave, pattern) {
    var tmp0_array = $this.k6f_1;
    var tmp1_index0 = wave;
    var tmp2 = tmp0_array[tmp1_index0];
    tmp0_array[tmp1_index0] = tmp2 - 1 | 0;
    var tmp3_array = $this.l6f_1;
    var tmp4_index0 = wave;
    tmp3_array[tmp4_index0] = tmp3_array[tmp4_index0] - $this.f6f_1[pattern];
    var tmp5_array = $this.m6f_1;
    var tmp6_index0 = wave;
    tmp5_array[tmp6_index0] = tmp5_array[tmp6_index0] - $this.g6f_1[pattern];
    $this.n6f_1[wave] = log($this.l6f_1[wave], get_LOG_BASE()) - $this.m6f_1[wave] / $this.l6f_1[wave];
  }
  function onClear($this) {
    var inductionVariable = 0;
    var last = $this.k6f_1.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var w = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        $this.k6f_1[w] = $this.f6f_1.length;
        $this.l6f_1[w] = $this.h6f_1;
        $this.m6f_1[w] = $this.i6f_1;
        $this.n6f_1[w] = $this.j6f_1;
      }
       while (inductionVariable <= last);
  }
  function LowestEntropyHeuristic$onBanLambda$lambda(this$0) {
    return function (triple) {
      onBan(this$0, triple.uc_1, triple.vc_1);
      return Unit_getInstance();
    };
  }
  function LowestEntropyHeuristic$onClearLambda$lambda(this$0) {
    return function (_anonymous_parameter_0__qggqh8) {
      onClear(this$0);
      return Unit_getInstance();
    };
  }
  function LowestEntropyHeuristic(patternCount, wavesCount, weights) {
    this.f6f_1 = weights;
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = patternCount;
    var tmp_2 = new Float64Array(tmp_1);
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$0;
      {
        tmp$ret$0 = this.f6f_1[tmp_3] * log(this.f6f_1[tmp_3], get_LOG_BASE());
      }
      tmp_2[tmp_3] = tmp$ret$0;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp.g6f_1 = tmp_2;
    this.h6f_1 = sum(this.f6f_1);
    this.i6f_1 = sum(this.g6f_1);
    this.j6f_1 = log(this.h6f_1, get_LOG_BASE()) - this.i6f_1 / this.h6f_1;
    var tmp_4 = this;
    var tmp_5 = 0;
    var tmp_6 = wavesCount;
    var tmp_7 = new Int32Array(tmp_6);
    while (tmp_5 < tmp_6) {
      var tmp_8 = tmp_5;
      var tmp$ret$1;
      {
        tmp$ret$1 = this.f6f_1.length;
      }
      tmp_7[tmp_8] = tmp$ret$1;
      tmp_5 = tmp_5 + 1 | 0;
    }
    tmp_4.k6f_1 = tmp_7;
    var tmp_9 = this;
    var tmp_10 = 0;
    var tmp_11 = wavesCount;
    var tmp_12 = new Float64Array(tmp_11);
    while (tmp_10 < tmp_11) {
      var tmp_13 = tmp_10;
      var tmp$ret$2;
      {
        tmp$ret$2 = this.h6f_1;
      }
      tmp_12[tmp_13] = tmp$ret$2;
      tmp_10 = tmp_10 + 1 | 0;
    }
    tmp_9.l6f_1 = tmp_12;
    var tmp_14 = this;
    var tmp_15 = 0;
    var tmp_16 = wavesCount;
    var tmp_17 = new Float64Array(tmp_16);
    while (tmp_15 < tmp_16) {
      var tmp_18 = tmp_15;
      var tmp$ret$3;
      {
        tmp$ret$3 = this.i6f_1;
      }
      tmp_17[tmp_18] = tmp$ret$3;
      tmp_15 = tmp_15 + 1 | 0;
    }
    tmp_14.m6f_1 = tmp_17;
    var tmp_19 = this;
    var tmp_20 = 0;
    var tmp_21 = wavesCount;
    var tmp_22 = new Float64Array(tmp_21);
    while (tmp_20 < tmp_21) {
      var tmp_23 = tmp_20;
      var tmp$ret$4;
      {
        tmp$ret$4 = this.j6f_1;
      }
      tmp_22[tmp_23] = tmp$ret$4;
      tmp_20 = tmp_20 + 1 | 0;
    }
    tmp_19.n6f_1 = tmp_22;
    var tmp_24 = this;
    tmp_24.o6f_1 = LowestEntropyHeuristic$onBanLambda$lambda(this);
    var tmp_25 = this;
    tmp_25.p6f_1 = LowestEntropyHeuristic$onClearLambda$lambda(this);
    this.q6f_1 = Default_getInstance();
  }
  LowestEntropyHeuristic.prototype.r6f = function () {
    return this.h6f_1;
  };
  LowestEntropyHeuristic.prototype.s6f = function () {
    return this.i6f_1;
  };
  LowestEntropyHeuristic.prototype.t6f = function () {
    return this.j6f_1;
  };
  LowestEntropyHeuristic.prototype.l6c = function (algorithm, random) {
    this.q6f_1 = random;
    if (!algorithm.p6a_1.v6f(this.o6f_1)) {
      var tmp0_this = algorithm;
      tmp0_this.p6a_1.u6f(this.o6f_1);
    }
    if (!algorithm.j6a_1.v6f(this.p6f_1)) {
      var tmp1_this = algorithm;
      tmp1_this.i6a_1.u6f(this.p6f_1);
    }
  };
  LowestEntropyHeuristic.prototype.k6c = function () {
    DoubleCompanionObject_getInstance();
    var min = 1.7976931348623157E308;
    var argmin = -1;
    var inductionVariable = 0;
    var last = this.k6f_1.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var waveIndex = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var amount = this.k6f_1[waveIndex];
        if (amount === 0)
          return null;
        var entropy = this.n6f_1[waveIndex];
        if (amount > 1 ? entropy <= min : false) {
          var noise = 1.0E-6 * this.q6f_1.w8();
          if (entropy + noise < min) {
            min = entropy + noise;
            argmin = waveIndex;
          }
        }
      }
       while (inductionVariable <= last);
    return argmin;
  };
  LowestEntropyHeuristic.$metadata$ = classMeta('LowestEntropyHeuristic', [SelectionHeuristic]);
  function SelectionHeuristic() {
  }
  SelectionHeuristic.$metadata$ = interfaceMeta('SelectionHeuristic');
  function Model() {
  }
  Model.$metadata$ = interfaceMeta('Model');
  function OverlappingCartesian2DModel_init_$Init$(input, overlap, outputWidth, outputHeight, options, $this) {
    OverlappingCartesian2DModel.call($this, new PatternWeights2D(input, overlap, options), outputWidth, outputHeight);
    return $this;
  }
  function OverlappingCartesian2DModel_init_$Create$(input, overlap, outputWidth, outputHeight, options) {
    return OverlappingCartesian2DModel_init_$Init$(input, overlap, outputWidth, outputHeight, options, Object.create(OverlappingCartesian2DModel.prototype));
  }
  function OverlappingCartesian2DModel$build$lambda(this$0, $algorithm) {
    return function (it) {
      var wasBatchUpdate = it.c6a_1;
      it.e6b(true);
      {
        var tmp$ret$0;
        {
          var tmp0_iterator = this$0.m6g_1;
          tmp$ret$0 = tmp0_iterator.a1().h();
        }
        var tmp0_iterator_0 = tmp$ret$0;
        $l$loop: while (tmp0_iterator_0.n()) {
          var entry = tmp0_iterator_0.o();
          if (!$algorithm.t69(entry.l2(), entry.n2())) {
            break $l$loop;
          }
        }
      }
      it.e6b(wasBatchUpdate);
      return Unit_getInstance();
    };
  }
  function OverlappingCartesian2DModel(storage, outputWidth, outputHeight) {
    this.w6f_1 = storage;
    this.x6f_1 = outputWidth;
    this.y6f_1 = outputHeight;
    this.z6f_1 = this.w6f_1.o6g_1;
    this.a6g_1 = this.w6f_1.q6g_1;
    this.b6g_1 = this.w6f_1.p6g_1;
    this.c6g_1 = this.w6f_1.y6g_1;
    this.d6g_1 = this.w6f_1.z6g_1;
    this.e6g_1 = this.w6f_1.s6g_1;
    this.f6g_1 = this.w6f_1.r6g_1;
    this.g6g_1 = this.w6f_1.v6g_1;
    this.h6g_1 = this.w6f_1.n6g_1;
    this.i6g_1 = this.w6f_1.x6g_1;
    this.j6g_1 = this.w6f_1.w6g_1;
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_intArrayOf = new Int32Array([this.x6f_1, this.y6f_1]);
      tmp$ret$0 = tmp0_intArrayOf;
    }
    tmp.k6g_1 = tmp$ret$0;
    this.l6g_1 = new Cartesian2DTopology(this.x6f_1 - (this.b6g_1.m6h_1 ? 0 : this.z6f_1) | 0, this.y6f_1 - (this.b6g_1.m6h_1 ? 0 : this.z6f_1) | 0, this.b6g_1.m6h_1);
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = LinkedHashMap_init_$Create$();
    }
    tmp_0.m6g_1 = tmp$ret$1;
    if (this.b6g_1.d6h_1) {
      var tmp$ret$4;
      {
        var tmp0_map = until(0, this.x6f_1);
        var tmp$ret$3;
        {
          var tmp0_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map, 10));
          var inductionVariable = tmp0_map.i9();
          var last = tmp0_map.k9();
          if (inductionVariable <= last)
            do {
              var item = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              var tmp$ret$2;
              {
                tmp$ret$2 = new Pair(item, this.y6f_1 - 1 | 0);
              }
              tmp0_mapTo.b(tmp$ret$2);
            }
             while (!(item === last));
          tmp$ret$3 = tmp0_mapTo;
        }
        tmp$ret$4 = tmp$ret$3;
      }
      this.p6h(tmp$ret$4, distinct(this.h6g_1.h6d(this.h6g_1.c6d_1 - 1 | 0)));
    }
    if (this.b6g_1.e6h_1) {
      var tmp$ret$10;
      {
        var tmp1_map = until(0, this.x6f_1);
        var tmp$ret$9;
        {
          var tmp0_mapTo_0 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp1_map, 10));
          var inductionVariable_0 = tmp1_map.i9();
          var last_0 = tmp1_map.k9();
          if (inductionVariable_0 <= last_0)
            do {
              var item_0 = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              var tmp$ret$8;
              {
                var tmp$ret$7;
                {
                  var tmp0_map_0 = until(0, (this.y6f_1 - 1 | 0) - this.z6f_1 | 0);
                  var tmp$ret$6;
                  {
                    var tmp0_mapTo_1 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map_0, 10));
                    var inductionVariable_1 = tmp0_map_0.i9();
                    var last_1 = tmp0_map_0.k9();
                    if (inductionVariable_1 <= last_1)
                      do {
                        var item_1 = inductionVariable_1;
                        inductionVariable_1 = inductionVariable_1 + 1 | 0;
                        var tmp$ret$5;
                        {
                          tmp$ret$5 = new Pair(item_0, item_1);
                        }
                        tmp0_mapTo_1.b(tmp$ret$5);
                      }
                       while (!(item_1 === last_1));
                    tmp$ret$6 = tmp0_mapTo_1;
                  }
                  tmp$ret$7 = tmp$ret$6;
                }
                tmp$ret$8 = tmp$ret$7;
              }
              tmp0_mapTo_0.b(tmp$ret$8);
            }
             while (!(item_0 === last_0));
          tmp$ret$9 = tmp0_mapTo_0;
        }
        tmp$ret$10 = tmp$ret$9;
      }
      this.q6h(flatten(tmp$ret$10), distinct(this.h6g_1.h6d(this.h6g_1.c6d_1 - 1 | 0)));
    }
    if (this.b6g_1.f6h_1) {
      var tmp$ret$13;
      {
        var tmp2_map = until(0, this.x6f_1);
        var tmp$ret$12;
        {
          var tmp0_mapTo_2 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp2_map, 10));
          var inductionVariable_2 = tmp2_map.i9();
          var last_2 = tmp2_map.k9();
          if (inductionVariable_2 <= last_2)
            do {
              var item_2 = inductionVariable_2;
              inductionVariable_2 = inductionVariable_2 + 1 | 0;
              var tmp$ret$11;
              {
                tmp$ret$11 = new Pair(item_2, 0);
              }
              tmp0_mapTo_2.b(tmp$ret$11);
            }
             while (!(item_2 === last_2));
          tmp$ret$12 = tmp0_mapTo_2;
        }
        tmp$ret$13 = tmp$ret$12;
      }
      this.p6h(tmp$ret$13, distinct(this.h6g_1.h6d(0)));
    }
    if (this.b6g_1.g6h_1) {
      var tmp$ret$19;
      {
        var tmp3_map = until(0, this.x6f_1);
        var tmp$ret$18;
        {
          var tmp0_mapTo_3 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp3_map, 10));
          var inductionVariable_3 = tmp3_map.i9();
          var last_3 = tmp3_map.k9();
          if (inductionVariable_3 <= last_3)
            do {
              var item_3 = inductionVariable_3;
              inductionVariable_3 = inductionVariable_3 + 1 | 0;
              var tmp$ret$17;
              {
                var tmp$ret$16;
                {
                  var tmp0_map_1 = until(1 + this.z6f_1 | 0, this.y6f_1);
                  var tmp$ret$15;
                  {
                    var tmp0_mapTo_4 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map_1, 10));
                    var inductionVariable_4 = tmp0_map_1.i9();
                    var last_4 = tmp0_map_1.k9();
                    if (inductionVariable_4 <= last_4)
                      do {
                        var item_4 = inductionVariable_4;
                        inductionVariable_4 = inductionVariable_4 + 1 | 0;
                        var tmp$ret$14;
                        {
                          tmp$ret$14 = new Pair(item_3, item_4);
                        }
                        tmp0_mapTo_4.b(tmp$ret$14);
                      }
                       while (!(item_4 === last_4));
                    tmp$ret$15 = tmp0_mapTo_4;
                  }
                  tmp$ret$16 = tmp$ret$15;
                }
                tmp$ret$17 = tmp$ret$16;
              }
              tmp0_mapTo_3.b(tmp$ret$17);
            }
             while (!(item_3 === last_3));
          tmp$ret$18 = tmp0_mapTo_3;
        }
        tmp$ret$19 = tmp$ret$18;
      }
      this.q6h(flatten(tmp$ret$19), distinct(this.h6g_1.h6d(0)));
    }
    if (this.b6g_1.h6h_1) {
      var tmp$ret$22;
      {
        var tmp4_map = until(0, this.y6f_1);
        var tmp$ret$21;
        {
          var tmp0_mapTo_5 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp4_map, 10));
          var inductionVariable_5 = tmp4_map.i9();
          var last_5 = tmp4_map.k9();
          if (inductionVariable_5 <= last_5)
            do {
              var item_5 = inductionVariable_5;
              inductionVariable_5 = inductionVariable_5 + 1 | 0;
              var tmp$ret$20;
              {
                tmp$ret$20 = new Pair(0, item_5);
              }
              tmp0_mapTo_5.b(tmp$ret$20);
            }
             while (!(item_5 === last_5));
          tmp$ret$21 = tmp0_mapTo_5;
        }
        tmp$ret$22 = tmp$ret$21;
      }
      this.p6h(tmp$ret$22, distinct(this.h6g_1.v6d(0)));
    }
    if (this.b6g_1.i6h_1) {
      var tmp$ret$28;
      {
        var tmp5_map = until(1 + this.z6f_1 | 0, this.x6f_1);
        var tmp$ret$27;
        {
          var tmp0_mapTo_6 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp5_map, 10));
          var inductionVariable_6 = tmp5_map.i9();
          var last_6 = tmp5_map.k9();
          if (inductionVariable_6 <= last_6)
            do {
              var item_6 = inductionVariable_6;
              inductionVariable_6 = inductionVariable_6 + 1 | 0;
              var tmp$ret$26;
              {
                var tmp$ret$25;
                {
                  var tmp0_map_2 = until(0, this.y6f_1);
                  var tmp$ret$24;
                  {
                    var tmp0_mapTo_7 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map_2, 10));
                    var inductionVariable_7 = tmp0_map_2.i9();
                    var last_7 = tmp0_map_2.k9();
                    if (inductionVariable_7 <= last_7)
                      do {
                        var item_7 = inductionVariable_7;
                        inductionVariable_7 = inductionVariable_7 + 1 | 0;
                        var tmp$ret$23;
                        {
                          tmp$ret$23 = new Pair(item_6, item_7);
                        }
                        tmp0_mapTo_7.b(tmp$ret$23);
                      }
                       while (!(item_7 === last_7));
                    tmp$ret$24 = tmp0_mapTo_7;
                  }
                  tmp$ret$25 = tmp$ret$24;
                }
                tmp$ret$26 = tmp$ret$25;
              }
              tmp0_mapTo_6.b(tmp$ret$26);
            }
             while (!(item_6 === last_6));
          tmp$ret$27 = tmp0_mapTo_6;
        }
        tmp$ret$28 = tmp$ret$27;
      }
      this.q6h(flatten(tmp$ret$28), distinct(this.h6g_1.v6d(0)));
    }
    if (this.b6g_1.j6h_1) {
      var tmp$ret$31;
      {
        var tmp6_map = until(0, this.y6f_1);
        var tmp$ret$30;
        {
          var tmp0_mapTo_8 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp6_map, 10));
          var inductionVariable_8 = tmp6_map.i9();
          var last_8 = tmp6_map.k9();
          if (inductionVariable_8 <= last_8)
            do {
              var item_8 = inductionVariable_8;
              inductionVariable_8 = inductionVariable_8 + 1 | 0;
              var tmp$ret$29;
              {
                tmp$ret$29 = new Pair(this.x6f_1 - 1 | 0, item_8);
              }
              tmp0_mapTo_8.b(tmp$ret$29);
            }
             while (!(item_8 === last_8));
          tmp$ret$30 = tmp0_mapTo_8;
        }
        tmp$ret$31 = tmp$ret$30;
      }
      this.p6h(tmp$ret$31, distinct(this.h6g_1.v6d(this.h6g_1.b6d_1 - 1 | 0)));
    }
    if (this.b6g_1.k6h_1) {
      var tmp$ret$37;
      {
        var tmp7_map = until(0, (this.x6f_1 - 1 | 0) - this.z6f_1 | 0);
        var tmp$ret$36;
        {
          var tmp0_mapTo_9 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp7_map, 10));
          var inductionVariable_9 = tmp7_map.i9();
          var last_9 = tmp7_map.k9();
          if (inductionVariable_9 <= last_9)
            do {
              var item_9 = inductionVariable_9;
              inductionVariable_9 = inductionVariable_9 + 1 | 0;
              var tmp$ret$35;
              {
                var tmp$ret$34;
                {
                  var tmp0_map_3 = until(0, this.y6f_1);
                  var tmp$ret$33;
                  {
                    var tmp0_mapTo_10 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map_3, 10));
                    var inductionVariable_10 = tmp0_map_3.i9();
                    var last_10 = tmp0_map_3.k9();
                    if (inductionVariable_10 <= last_10)
                      do {
                        var item_10 = inductionVariable_10;
                        inductionVariable_10 = inductionVariable_10 + 1 | 0;
                        var tmp$ret$32;
                        {
                          tmp$ret$32 = new Pair(item_9, item_10);
                        }
                        tmp0_mapTo_10.b(tmp$ret$32);
                      }
                       while (!(item_10 === last_10));
                    tmp$ret$33 = tmp0_mapTo_10;
                  }
                  tmp$ret$34 = tmp$ret$33;
                }
                tmp$ret$35 = tmp$ret$34;
              }
              tmp0_mapTo_9.b(tmp$ret$35);
            }
             while (!(item_9 === last_9));
          tmp$ret$36 = tmp0_mapTo_9;
        }
        tmp$ret$37 = tmp$ret$36;
      }
      this.q6h(flatten(tmp$ret$37), distinct(this.h6g_1.v6d(this.h6g_1.b6d_1 - 1 | 0)));
    }
  }
  OverlappingCartesian2DModel.prototype.r6h = function () {
    return this.x6f_1;
  };
  OverlappingCartesian2DModel.prototype.s6h = function () {
    return this.y6f_1;
  };
  OverlappingCartesian2DModel.prototype.t6h = function () {
    return this.z6f_1;
  };
  OverlappingCartesian2DModel.prototype.u6h = function () {
    return this.i6g_1;
  };
  OverlappingCartesian2DModel.prototype.r6e = function () {
    return this.j6g_1;
  };
  OverlappingCartesian2DModel.prototype.v6h = function () {
    return this.m6g_1;
  };
  OverlappingCartesian2DModel.prototype.sr = function () {
    var algorithm = new Cartesian2DWfcAlgorithm(this.l6g_1, this.c6g_1, this.d6g_1, this.r6e(), this.u6h());
    var tmp0_this = algorithm;
    var tmp = tmp0_this.g6b();
    tmp.u6f(OverlappingCartesian2DModel$build$lambda(this, algorithm));
    return algorithm;
  };
  OverlappingCartesian2DModel.prototype.w6h = function (x, y, patterns) {
    if (x >= (this.x6f_1 - (this.b6g_1.m6h_1 ? 0 : this.z6f_1) | 0) ? true : y >= (this.y6f_1 - (this.b6g_1.m6h_1 ? 0 : this.z6f_1) | 0)) {
      throw Error_init_$Create$('Output dimensions exceeded [' + x + ', ' + y + ']x[' + (this.x6f_1 - (this.b6g_1.m6h_1 ? 0 : this.z6f_1) | 0) + ', ' + (this.y6f_1 - (this.b6g_1.m6h_1 ? 0 : this.z6f_1) | 0) + '].');
    }
    var coordinates = this.l6g_1.x6h(x, y);
    if (!this.m6g_1.v2(coordinates)) {
      {
        var tmp0_set = this.m6g_1;
        var tmp1_set = toMutableList(patterns);
        tmp0_set.a(coordinates, tmp1_set);
      }
    } else {
      addAll(ensureNotNull(this.m6g_1.b3(coordinates)), patterns);
    }
    return this;
  };
  OverlappingCartesian2DModel.prototype.y6h = function (x, y, patterns) {
    this.w6h(x, y, minus(get_indices(this.g6g_1), patterns));
    return this;
  };
  OverlappingCartesian2DModel.prototype.z6h = function (x, y, pixel) {
    if (this.b6g_1.m6h_1) {
      this.y6h(x, y, asIterable(this.u6h().r(pixel)));
      return this;
    }
    var X = x;
    var xShift = 0;
    if (X >= (this.x6f_1 - this.z6f_1 | 0)) {
      X = (this.x6f_1 - this.z6f_1 | 0) - 1 | 0;
      xShift = x - X | 0;
    }
    var Y = y;
    var yShift = 0;
    if (Y >= (this.y6f_1 - this.z6f_1 | 0)) {
      Y = (this.y6f_1 - this.z6f_1 | 0) - 1 | 0;
      yShift = y - Y | 0;
    }
    var tmp = X;
    var tmp_0 = Y;
    var tmp$ret$2;
    {
      var tmp0_filter = this.r6e().d68_1;
      var tmp$ret$1;
      {
        var tmp0_filterTo = ArrayList_init_$Create$();
        var inductionVariable = tmp0_filter.i9();
        var last = tmp0_filter.k9();
        if (inductionVariable <= last)
          do {
            var element = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var tmp$ret$0;
            {
              tmp$ret$0 = this.g6g_1[element].r2g(xShift, yShift) === pixel;
            }
            if (tmp$ret$0) {
              tmp0_filterTo.b(element);
            }
          }
           while (!(element === last));
        tmp$ret$1 = tmp0_filterTo;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    this.y6h(tmp, tmp_0, tmp$ret$2);
    return this;
  };
  OverlappingCartesian2DModel.prototype.f6i = function (x, y, pixel) {
    if (this.b6g_1.m6h_1) {
      this.w6h(x, y, asIterable(this.u6h().r(pixel)));
      return this;
    }
    var X = x;
    var xShift = 0;
    if (X >= (this.x6f_1 - this.z6f_1 | 0)) {
      X = (this.x6f_1 - this.z6f_1 | 0) - 1 | 0;
      xShift = x - X | 0;
    }
    var Y = y;
    var yShift = 0;
    if (Y >= (this.y6f_1 - this.z6f_1 | 0)) {
      Y = (this.y6f_1 - this.z6f_1 | 0) - 1 | 0;
      yShift = y - Y | 0;
    }
    var tmp = X;
    var tmp_0 = Y;
    var tmp$ret$2;
    {
      var tmp0_filter = this.r6e().d68_1;
      var tmp$ret$1;
      {
        var tmp0_filterTo = ArrayList_init_$Create$();
        var inductionVariable = tmp0_filter.i9();
        var last = tmp0_filter.k9();
        if (inductionVariable <= last)
          do {
            var element = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var tmp$ret$0;
            {
              tmp$ret$0 = this.g6g_1[element].r2g(xShift, yShift) === pixel;
            }
            if (tmp$ret$0) {
              tmp0_filterTo.b(element);
            }
          }
           while (!(element === last));
        tmp$ret$1 = tmp0_filterTo;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    this.w6h(tmp, tmp_0, tmp$ret$2);
    return this;
  };
  OverlappingCartesian2DModel.prototype.g6i = function (x, y, pixels) {
    {
      var tmp0_iterator = pixels.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          this.z6h(x, y, element);
        }
      }
    }
    return this;
  };
  OverlappingCartesian2DModel.prototype.p6h = function (coordinates, pixels) {
    {
      var tmp0_iterator = coordinates.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          this.g6i(element.v_1, element.w_1, pixels);
        }
      }
    }
    return this;
  };
  OverlappingCartesian2DModel.prototype.h6i = function (x, y, pixels) {
    {
      var tmp0_iterator = pixels.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          this.f6i(x, y, element);
        }
      }
    }
    return this;
  };
  OverlappingCartesian2DModel.prototype.q6h = function (coordinates, pixels) {
    {
      var tmp0_iterator = coordinates.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          this.h6i(element.v_1, element.w_1, pixels);
        }
      }
    }
    return this;
  };
  OverlappingCartesian2DModel.prototype.i6i = function (waveIndex) {
    if ((waveIndex % this.x6f_1 | 0) >= (this.x6f_1 - this.z6f_1 | 0)) {
      return true;
    }
    if (waveIndex >= imul(this.x6f_1, this.y6f_1 - this.z6f_1 | 0)) {
      return true;
    }
    return false;
  };
  OverlappingCartesian2DModel.prototype.j6i = function (wave) {
    var index = wave;
    var shiftX = 0;
    var shiftY = 0;
    if (!this.b6g_1.m6h_1) {
      if (this.i6i(wave)) {
        var coordinates = toCoordinates(wave, this.k6g_1);
        if (coordinates[0] >= (this.x6f_1 - this.z6f_1 | 0)) {
          shiftX = ((coordinates[0] - this.x6f_1 | 0) + this.z6f_1 | 0) + 1 | 0;
          index = index - shiftX | 0;
        }
        if (coordinates[1] >= (this.y6f_1 - this.z6f_1 | 0)) {
          shiftY = ((coordinates[1] - this.y6f_1 | 0) + this.z6f_1 | 0) + 1 | 0;
          index = index - imul(shiftY, this.x6f_1) | 0;
        }
      }
      index = index - imul(index / this.x6f_1 | 0, this.z6f_1) | 0;
    }
    var shift = imul(shiftY, this.z6f_1 + 1 | 0) + shiftX | 0;
    return new Pair(index, shift);
  };
  OverlappingCartesian2DModel.prototype.k6i = function (algorithm) {
    if (!algorithm.c6b()) {
      println("WARNING: Algorithm hasn't run yet.");
    }
    var tmp = 0;
    var tmp_0 = this.y6f_1;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(tmp_0), null);
    }
    var tmp_1 = tmp$ret$0;
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$9;
      {
        var tmp_3 = 0;
        var tmp_4 = this.x6f_1;
        var tmp$ret$1;
        {
          tmp$ret$1 = fillArrayVal(Array(tmp_4), null);
        }
        var tmp_5 = tmp$ret$1;
        while (tmp_3 < tmp_4) {
          var tmp_6 = tmp_3;
          var tmp$ret$8;
          {
            var tmp$ret$2;
            {
              tmp$ret$2 = new Int32Array([tmp_6, tmp_2]);
            }
            var waveIndex = toIndex(tmp$ret$2, this.k6g_1);
            var pair = this.j6i(waveIndex);
            var index = pair.v_1;
            var shift = pair.w_1;
            var a = 0;
            var b = 1;
            var tmp$ret$4;
            {
              var tmp0_sumOf = algorithm.f6b().r(index);
              var sum = 0;
              var tmp0_iterator = tmp0_sumOf.h();
              while (tmp0_iterator.n()) {
                var element = tmp0_iterator.o();
                var tmp_7 = sum;
                var tmp$ret$3;
                {
                  var tmp0_subject = element;
                  var tmp_8;
                  switch (tmp0_subject) {
                    case false:
                      tmp_8 = a;
                      break;
                    case true:
                      tmp_8 = b;
                      break;
                    default:
                      noWhenBranchMatchedException();
                      break;
                  }
                  tmp$ret$3 = tmp_8;
                }
                sum = tmp_7 + tmp$ret$3 | 0;
              }
              tmp$ret$4 = sum;
            }
            var sum_0 = tmp$ret$4;
            var tmp0_subject_0 = sum_0;
            var tmp_9;
            switch (tmp0_subject_0) {
              case 0:
                tmp_9 = IntCompanionObject_getInstance().c1_1;
                break;
              case 1:
                var tmp$ret$7;
                {
                  var tmp1_filter = this.r6e().d68_1;
                  var tmp$ret$6;
                  {
                    var tmp0_filterTo = ArrayList_init_$Create$();
                    var inductionVariable = tmp1_filter.i9();
                    var last = tmp1_filter.k9();
                    if (inductionVariable <= last)
                      do {
                        var element_0 = inductionVariable;
                        inductionVariable = inductionVariable + 1 | 0;
                        var tmp$ret$5;
                        {
                          tmp$ret$5 = algorithm.f6b().r2g(index, element_0);
                        }
                        if (tmp$ret$5) {
                          tmp0_filterTo.b(element_0);
                        }
                      }
                       while (!(element_0 === last));
                    tmp$ret$6 = tmp0_filterTo;
                  }
                  tmp$ret$7 = tmp$ret$6;
                }

                tmp_9 = this.g6g_1[tmp$ret$7.r(0)].r(shift);
                break;
              default:
                tmp_9 = null;
                break;
            }
            tmp$ret$8 = tmp_9;
          }
          tmp_5[tmp_6] = tmp$ret$8;
          tmp_3 = tmp_3 + 1 | 0;
        }
        tmp$ret$9 = tmp_5;
      }
      tmp_1[tmp_2] = tmp$ret$9;
      tmp = tmp + 1 | 0;
    }
    return tmp_1;
  };
  OverlappingCartesian2DModel.$metadata$ = classMeta('OverlappingCartesian2DModel', [OverlappingModel]);
  function OverlappingModel() {
  }
  OverlappingModel.$metadata$ = interfaceMeta('OverlappingModel', [Model]);
  function Patterns(patterns) {
    this.b68_1 = patterns;
    this.c68_1 = this.b68_1.length;
    this.d68_1 = get_indices(this.b68_1);
    this.e68_1 = get_lastIndex(this.b68_1);
    var tmp = this;
    var tmp$ret$2;
    {
      var tmp0_map = this.b68_1;
      var tmp$ret$1;
      {
        var tmp0_mapTo = ArrayList_init_$Create$_0(tmp0_map.length);
        var indexedObject = tmp0_map;
        var inductionVariable = 0;
        var last = indexedObject.length;
        while (inductionVariable < last) {
          var item = indexedObject[inductionVariable];
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$0;
          {
            tmp$ret$0 = item[0];
          }
          tmp0_mapTo.b(tmp$ret$0);
        }
        tmp$ret$1 = tmp0_mapTo;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    tmp.f68_1 = tmp$ret$2;
  }
  Patterns.prototype.u6h = function () {
    return this.f68_1;
  };
  Patterns.prototype.h = function () {
    return arrayIterator(this.b68_1);
  };
  Patterns.$metadata$ = classMeta('Patterns', [Iterable]);
  function Entry(key, value) {
    this.l6i_1 = key;
    this.m6i_1 = value;
  }
  Entry.prototype.toString = function () {
    return 'Entry(key=' + this.l6i_1 + ', value=' + this.m6i_1 + ')';
  };
  Entry.prototype.hashCode = function () {
    var result = this.l6i_1;
    result = imul(result, 31) + hashCode(this.m6i_1) | 0;
    return result;
  };
  Entry.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Entry))
      return false;
    var tmp0_other_with_cast = other instanceof Entry ? other : THROW_CCE();
    if (!(this.l6i_1 === tmp0_other_with_cast.l6i_1))
      return false;
    if (!equals(this.m6i_1, tmp0_other_with_cast.m6i_1))
      return false;
    return true;
  };
  Entry.$metadata$ = classMeta('Entry');
  function Pixels$iterator$slambda(this$0, resultContinuation) {
    this.v6i_1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  Pixels$iterator$slambda.prototype.a6j = function ($this$iterator, $cont) {
    var tmp = this.b6j($this$iterator, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  Pixels$iterator$slambda.prototype.s7 = function (p1, $cont) {
    return this.a6j(p1 instanceof SequenceScope ? p1 : THROW_CCE(), $cont);
  };
  Pixels$iterator$slambda.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 4;
            var tmp_0 = this;
            var tmp_1 = this;
            tmp_1.x6i_1 = this.v6i_1.a6i_1;
            tmp_0.y6i_1 = this.x6i_1.a1().h();
            this.k7_1 = 1;
            continue $sm;
          case 1:
            if (!this.y6i_1.n()) {
              this.k7_1 = 3;
              continue $sm;
            }

            this.z6i_1 = this.y6i_1.o();
            this.k7_1 = 2;
            suspendResult = this.w6i_1.k4(new Entry(this.z6i_1.l2(), asSequence_1(this.z6i_1.n2())), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.k7_1 = 1;
            continue $sm;
          case 3:
            return Unit_getInstance();
          case 4:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 4) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  Pixels$iterator$slambda.prototype.b6j = function ($this$iterator, completion) {
    var i = new Pixels$iterator$slambda(this.v6i_1, completion);
    i.w6i_1 = $this$iterator;
    return i;
  };
  Pixels$iterator$slambda.$metadata$ = classMeta('Pixels$iterator$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function Pixels$iterator$slambda_0(this$0, resultContinuation) {
    var i = new Pixels$iterator$slambda(this$0, resultContinuation);
    var l = function ($this$iterator, $cont) {
      return i.a6j($this$iterator, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function Pixels(pixels) {
    this.a6i_1 = pixels;
    this.b6i_1 = this.a6i_1.m();
    this.c6i_1 = this.a6i_1.c3();
    this.d6i_1 = this.a6i_1.a1();
    this.e6i_1 = this.a6i_1.d3();
  }
  Pixels.prototype.r = function (index) {
    var tmp0_safe_receiver = this.a6i_1.b3(index);
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : asSequence_1(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? emptySequence() : tmp1_elvis_lhs;
  };
  Pixels.prototype.h = function () {
    return iterator(Pixels$iterator$slambda_0(this, null));
  };
  Pixels.$metadata$ = classMeta('Pixels', [Iterable]);
  function Cartesian2DModelOptions_init_$Init$(allowRotations, allowHorizontalFlips, allowVerticalFlips, grounded, banGroundElsewhere, roofed, banRoofElsewhere, leftSided, banLeftSideElsewhere, rightSided, banRightSideElsewhere, banSidesElsewhere, periodicOutput, periodicInput, weightPower, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      allowRotations = false;
    if (!(($mask0 & 2) === 0))
      allowHorizontalFlips = false;
    if (!(($mask0 & 4) === 0))
      allowVerticalFlips = false;
    if (!(($mask0 & 8) === 0))
      grounded = false;
    if (!(($mask0 & 16) === 0))
      banGroundElsewhere = false;
    if (!(($mask0 & 32) === 0))
      roofed = false;
    if (!(($mask0 & 64) === 0))
      banRoofElsewhere = false;
    if (!(($mask0 & 128) === 0))
      leftSided = false;
    if (!(($mask0 & 256) === 0))
      banLeftSideElsewhere = false;
    if (!(($mask0 & 512) === 0))
      rightSided = false;
    if (!(($mask0 & 1024) === 0))
      banRightSideElsewhere = false;
    if (!(($mask0 & 2048) === 0))
      banSidesElsewhere = false;
    if (!(($mask0 & 4096) === 0))
      periodicOutput = false;
    if (!(($mask0 & 8192) === 0))
      periodicInput = false;
    if (!(($mask0 & 16384) === 0))
      weightPower = 1.0;
    Cartesian2DModelOptions.call($this, allowRotations, allowHorizontalFlips, allowVerticalFlips, grounded, banGroundElsewhere, roofed, banRoofElsewhere, leftSided, banLeftSideElsewhere, rightSided, banRightSideElsewhere, banSidesElsewhere, periodicOutput, periodicInput, weightPower);
    return $this;
  }
  function Cartesian2DModelOptions_init_$Create$(allowRotations, allowHorizontalFlips, allowVerticalFlips, grounded, banGroundElsewhere, roofed, banRoofElsewhere, leftSided, banLeftSideElsewhere, rightSided, banRightSideElsewhere, banSidesElsewhere, periodicOutput, periodicInput, weightPower, $mask0, $marker) {
    return Cartesian2DModelOptions_init_$Init$(allowRotations, allowHorizontalFlips, allowVerticalFlips, grounded, banGroundElsewhere, roofed, banRoofElsewhere, leftSided, banLeftSideElsewhere, rightSided, banRightSideElsewhere, banSidesElsewhere, periodicOutput, periodicInput, weightPower, $mask0, $marker, Object.create(Cartesian2DModelOptions.prototype));
  }
  function Cartesian2DModelOptions(allowRotations, allowHorizontalFlips, allowVerticalFlips, grounded, banGroundElsewhere, roofed, banRoofElsewhere, leftSided, banLeftSideElsewhere, rightSided, banRightSideElsewhere, banSidesElsewhere, periodicOutput, periodicInput, weightPower) {
    this.a6h_1 = allowRotations;
    this.b6h_1 = allowHorizontalFlips;
    this.c6h_1 = allowVerticalFlips;
    this.d6h_1 = grounded;
    this.e6h_1 = banGroundElsewhere;
    this.f6h_1 = roofed;
    this.g6h_1 = banRoofElsewhere;
    this.h6h_1 = leftSided;
    this.i6h_1 = banLeftSideElsewhere;
    this.j6h_1 = rightSided;
    this.k6h_1 = banRightSideElsewhere;
    this.l6h_1 = banSidesElsewhere;
    this.m6h_1 = periodicOutput;
    this.n6h_1 = periodicInput;
    this.o6h_1 = weightPower;
  }
  Cartesian2DModelOptions.prototype.c6j = function () {
    return this.o6h_1;
  };
  Cartesian2DModelOptions.prototype.toString = function () {
    return 'Cartesian2DModelOptions(allowRotations=' + this.a6h_1 + ', allowHorizontalFlips=' + this.b6h_1 + ', allowVerticalFlips=' + this.c6h_1 + ', grounded=' + this.d6h_1 + ', banGroundElsewhere=' + this.e6h_1 + ', roofed=' + this.f6h_1 + ', banRoofElsewhere=' + this.g6h_1 + ', leftSided=' + this.h6h_1 + ', banLeftSideElsewhere=' + this.i6h_1 + ', rightSided=' + this.j6h_1 + ', banRightSideElsewhere=' + this.k6h_1 + ', banSidesElsewhere=' + this.l6h_1 + ', periodicOutput=' + this.m6h_1 + ', periodicInput=' + this.n6h_1 + ', weightPower=' + this.o6h_1 + ')';
  };
  Cartesian2DModelOptions.prototype.hashCode = function () {
    var result = this.a6h_1 | 0;
    result = imul(result, 31) + (this.b6h_1 | 0) | 0;
    result = imul(result, 31) + (this.c6h_1 | 0) | 0;
    result = imul(result, 31) + (this.d6h_1 | 0) | 0;
    result = imul(result, 31) + (this.e6h_1 | 0) | 0;
    result = imul(result, 31) + (this.f6h_1 | 0) | 0;
    result = imul(result, 31) + (this.g6h_1 | 0) | 0;
    result = imul(result, 31) + (this.h6h_1 | 0) | 0;
    result = imul(result, 31) + (this.i6h_1 | 0) | 0;
    result = imul(result, 31) + (this.j6h_1 | 0) | 0;
    result = imul(result, 31) + (this.k6h_1 | 0) | 0;
    result = imul(result, 31) + (this.l6h_1 | 0) | 0;
    result = imul(result, 31) + (this.m6h_1 | 0) | 0;
    result = imul(result, 31) + (this.n6h_1 | 0) | 0;
    result = imul(result, 31) + getNumberHashCode(this.o6h_1) | 0;
    return result;
  };
  Cartesian2DModelOptions.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Cartesian2DModelOptions))
      return false;
    var tmp0_other_with_cast = other instanceof Cartesian2DModelOptions ? other : THROW_CCE();
    if (!(this.a6h_1 === tmp0_other_with_cast.a6h_1))
      return false;
    if (!(this.b6h_1 === tmp0_other_with_cast.b6h_1))
      return false;
    if (!(this.c6h_1 === tmp0_other_with_cast.c6h_1))
      return false;
    if (!(this.d6h_1 === tmp0_other_with_cast.d6h_1))
      return false;
    if (!(this.e6h_1 === tmp0_other_with_cast.e6h_1))
      return false;
    if (!(this.f6h_1 === tmp0_other_with_cast.f6h_1))
      return false;
    if (!(this.g6h_1 === tmp0_other_with_cast.g6h_1))
      return false;
    if (!(this.h6h_1 === tmp0_other_with_cast.h6h_1))
      return false;
    if (!(this.i6h_1 === tmp0_other_with_cast.i6h_1))
      return false;
    if (!(this.j6h_1 === tmp0_other_with_cast.j6h_1))
      return false;
    if (!(this.k6h_1 === tmp0_other_with_cast.k6h_1))
      return false;
    if (!(this.l6h_1 === tmp0_other_with_cast.l6h_1))
      return false;
    if (!(this.m6h_1 === tmp0_other_with_cast.m6h_1))
      return false;
    if (!(this.n6h_1 === tmp0_other_with_cast.n6h_1))
      return false;
    if (!equals(this.o6h_1, tmp0_other_with_cast.o6h_1))
      return false;
    return true;
  };
  Cartesian2DModelOptions.$metadata$ = classMeta('Cartesian2DModelOptions', [ModelOptions]);
  function ModelOptions() {
  }
  ModelOptions.$metadata$ = interfaceMeta('ModelOptions');
  function PatternWeights2D$loadPatterns$lambda($item) {
    return function (it) {
      return $item.v_1[it];
    };
  }
  function PatternWeights2D(input, overlap, options) {
    this.n6g_1 = input;
    this.o6g_1 = overlap;
    this.p6g_1 = options;
    this.q6g_1 = this.o6g_1 + 1 | 0;
    this.r6g_1 = ArrayList_init_$Create$();
    this.s6g_1 = ArrayList_init_$Create$();
    this.t6g_1 = this.d6j(this.n6g_1, this.o6g_1);
    var tmp = this;
    var tmp$ret$2;
    {
      var tmp0_map = this.t6g_1;
      var tmp$ret$1;
      {
        var tmp0_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map, 10));
        var tmp0_iterator = tmp0_map.h();
        while (tmp0_iterator.n()) {
          var item = tmp0_iterator.o();
          var tmp$ret$0;
          {
            tmp$ret$0 = item.w_1.k6e_1;
          }
          tmp0_mapTo.b(tmp$ret$0);
        }
        tmp$ret$1 = tmp0_mapTo;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    tmp.u6g_1 = sum_0(tmp$ret$2);
    var tmp_0 = this;
    var tmp$ret$6;
    {
      var tmp$ret$5;
      {
        var tmp0_map_0 = this.t6g_1;
        var tmp$ret$4;
        {
          var tmp0_mapTo_0 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map_0, 10));
          var tmp0_iterator_0 = tmp0_map_0.h();
          while (tmp0_iterator_0.n()) {
            var item_0 = tmp0_iterator_0.o();
            var tmp$ret$3;
            {
              tmp$ret$3 = item_0.v_1;
            }
            tmp0_mapTo_0.b(tmp$ret$3);
          }
          tmp$ret$4 = tmp0_mapTo_0;
        }
        tmp$ret$5 = tmp$ret$4;
      }
      var tmp1_toTypedArray = tmp$ret$5;
      tmp$ret$6 = copyToArray(tmp1_toTypedArray);
    }
    tmp_0.v6g_1 = tmp$ret$6;
    var tmp_1 = this;
    var tmp$ret$10;
    {
      var tmp$ret$9;
      {
        var tmp0_map_1 = this.v6g_1;
        var tmp$ret$8;
        {
          var tmp0_mapTo_1 = ArrayList_init_$Create$_0(tmp0_map_1.length);
          var indexedObject = tmp0_map_1;
          var inductionVariable = 0;
          var last = indexedObject.length;
          while (inductionVariable < last) {
            var item_1 = indexedObject[inductionVariable];
            inductionVariable = inductionVariable + 1 | 0;
            var tmp$ret$7;
            {
              tmp$ret$7 = item_1.c6e();
            }
            tmp0_mapTo_1.b(tmp$ret$7);
          }
          tmp$ret$8 = tmp0_mapTo_1;
        }
        tmp$ret$9 = tmp$ret$8;
      }
      var tmp1_toTypedArray_0 = tmp$ret$9;
      tmp$ret$10 = copyToArray(tmp1_toTypedArray_0);
    }
    tmp_1.w6g_1 = new Patterns(tmp$ret$10);
    var tmp_2 = this;
    var tmp$ret$26;
    {
      var tmp$ret$25;
      {
        var tmp$ret$13;
        {
          var tmp0_map_2 = this.w6g_1.f68_1;
          var tmp$ret$12;
          {
            var tmp0_mapTo_2 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map_2, 10));
            var tmp0_iterator_1 = tmp0_map_2.h();
            while (tmp0_iterator_1.n()) {
              var item_2 = tmp0_iterator_1.o();
              var tmp$ret$11;
              {
                tmp$ret$11 = item_2;
              }
              tmp0_mapTo_2.b(tmp$ret$11);
            }
            tmp$ret$12 = tmp0_mapTo_2;
          }
          tmp$ret$13 = tmp$ret$12;
        }
        var tmp1_map = distinct_0(tmp$ret$13);
        var tmp$ret$24;
        {
          var tmp0_mapTo_3 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp1_map, 10));
          var tmp0_iterator_2 = tmp1_map.h();
          while (tmp0_iterator_2.n()) {
            var item_3 = tmp0_iterator_2.o();
            var tmp$ret$23;
            {
              var tmp$ret$22;
              {
                var tmp$ret$19;
                {
                  var tmp$ret$16;
                  {
                    var tmp0_mapIndexed = this.w6g_1.f68_1;
                    var tmp$ret$15;
                    {
                      var tmp0_mapIndexedTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_mapIndexed, 10));
                      var index = 0;
                      var tmp0_iterator_3 = tmp0_mapIndexed.h();
                      while (tmp0_iterator_3.n()) {
                        var item_4 = tmp0_iterator_3.o();
                        var tmp$ret$14;
                        {
                          var tmp1 = index;
                          index = tmp1 + 1 | 0;
                          var tmp1__anonymous__uwfjfc = checkIndexOverflow(tmp1);
                          tmp$ret$14 = new Pair(item_4, tmp1__anonymous__uwfjfc);
                        }
                        tmp0_mapIndexedTo.b(tmp$ret$14);
                      }
                      tmp$ret$15 = tmp0_mapIndexedTo;
                    }
                    tmp$ret$16 = tmp$ret$15;
                  }
                  var tmp2_filter = tmp$ret$16;
                  var tmp$ret$18;
                  {
                    var tmp0_filterTo = ArrayList_init_$Create$();
                    var tmp0_iterator_4 = tmp2_filter.h();
                    while (tmp0_iterator_4.n()) {
                      var element = tmp0_iterator_4.o();
                      var tmp$ret$17;
                      {
                        tmp$ret$17 = element.v_1 === item_3;
                      }
                      if (tmp$ret$17) {
                        tmp0_filterTo.b(element);
                      }
                    }
                    tmp$ret$18 = tmp0_filterTo;
                  }
                  tmp$ret$19 = tmp$ret$18;
                }
                var tmp3_map = tmp$ret$19;
                var tmp$ret$21;
                {
                  var tmp0_mapTo_4 = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp3_map, 10));
                  var tmp0_iterator_5 = tmp3_map.h();
                  while (tmp0_iterator_5.n()) {
                    var item_5 = tmp0_iterator_5.o();
                    var tmp$ret$20;
                    {
                      tmp$ret$20 = item_5.w_1;
                    }
                    tmp0_mapTo_4.b(tmp$ret$20);
                  }
                  tmp$ret$21 = tmp0_mapTo_4;
                }
                tmp$ret$22 = tmp$ret$21;
              }
              tmp$ret$23 = new Pair(item_3, toIntArray(tmp$ret$22));
            }
            tmp0_mapTo_3.b(tmp$ret$23);
          }
          tmp$ret$24 = tmp0_mapTo_3;
        }
        tmp$ret$25 = tmp$ret$24;
      }
      var tmp2_toTypedArray = tmp$ret$25;
      tmp$ret$26 = copyToArray(tmp2_toTypedArray);
    }
    tmp_2.x6g_1 = new Pixels(mapOf(tmp$ret$26.slice()));
    var tmp_3 = this;
    var tmp_4 = 0;
    var tmp_5 = this.t6g_1.m();
    var tmp_6 = new Float64Array(tmp_5);
    while (tmp_4 < tmp_5) {
      var tmp_7 = tmp_4;
      var tmp$ret$28;
      {
        var tmp$ret$27;
        {
          var tmp0_pow = this.t6g_1.r(tmp_7).w_1.k6e_1 / this.u6g_1;
          var tmp1_pow = this.p6g_1.o6h_1;
          tmp$ret$27 = Math.pow(tmp0_pow, tmp1_pow);
        }
        tmp$ret$28 = tmp$ret$27;
      }
      tmp_6[tmp_7] = tmp$ret$28;
      tmp_4 = tmp_4 + 1 | 0;
    }
    tmp_3.y6g_1 = tmp_6;
    var tmp_8 = this;
    var tmp_9 = 0;
    var tmp_10 = 4;
    var tmp$ret$29;
    {
      tmp$ret$29 = fillArrayVal(Array(tmp_10), null);
    }
    var tmp_11 = tmp$ret$29;
    while (tmp_9 < tmp_10) {
      var tmp_12 = tmp_9;
      var tmp$ret$35;
      {
        var tmp_13 = 0;
        var tmp_14 = this.v6g_1.length;
        var tmp$ret$30;
        {
          tmp$ret$30 = fillArrayVal(Array(tmp_14), null);
        }
        var tmp_15 = tmp$ret$30;
        while (tmp_13 < tmp_14) {
          var tmp_16 = tmp_13;
          var tmp$ret$34;
          {
            var d = Companion_getInstance().b6f(tmp_12);
            var tmp$ret$33;
            {
              var tmp0_filter = get_indices(this.v6g_1);
              var tmp$ret$32;
              {
                var tmp0_filterTo_0 = ArrayList_init_$Create$();
                var inductionVariable_0 = tmp0_filter.i9();
                var last_0 = tmp0_filter.k9();
                if (inductionVariable_0 <= last_0)
                  do {
                    var element_0 = inductionVariable_0;
                    inductionVariable_0 = inductionVariable_0 + 1 | 0;
                    var tmp$ret$31;
                    {
                      tmp$ret$31 = this.e6j(this.v6g_1[tmp_16], this.v6g_1[element_0], d);
                    }
                    if (tmp$ret$31) {
                      tmp0_filterTo_0.b(element_0);
                    }
                  }
                   while (!(element_0 === last_0));
                tmp$ret$32 = tmp0_filterTo_0;
              }
              tmp$ret$33 = tmp$ret$32;
            }
            tmp$ret$34 = toIntArray(tmp$ret$33);
          }
          tmp_15[tmp_16] = tmp$ret$34;
          tmp_13 = tmp_13 + 1 | 0;
        }
        tmp$ret$35 = tmp_15;
      }
      tmp_11[tmp_12] = tmp$ret$35;
      tmp_9 = tmp_9 + 1 | 0;
    }
    tmp_8.z6g_1 = tmp_11;
  }
  PatternWeights2D.prototype.f6j = function () {
    return this.p6g_1;
  };
  PatternWeights2D.prototype.g6j = function () {
    return this.q6g_1;
  };
  PatternWeights2D.prototype.h6j = function () {
    return this.u6g_1;
  };
  PatternWeights2D.prototype.i6j = function () {
    return this.v6g_1;
  };
  PatternWeights2D.prototype.r6e = function () {
    return this.w6g_1;
  };
  PatternWeights2D.prototype.e6j = function (pattern1, pattern2, direction) {
    var tmp0_subject = direction;
    var tmp0 = tmp0_subject.y1();
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = chain(asSequence_0(pattern1.e6e(until(0, this.o6g_1)).h()), this.o6g_1, this.q6g_1);
        break;
      case 1:
        tmp = chain(asSequence_0(pattern1.f6e(until(this.q6g_1 - this.o6g_1 | 0, this.q6g_1)).h()), this.o6g_1, this.q6g_1);
        break;
      case 2:
        tmp = chain(asSequence_0(pattern1.e6e(until(this.q6g_1 - this.o6g_1 | 0, this.q6g_1)).h()), this.o6g_1, this.q6g_1);
        break;
      case 3:
        tmp = chain(asSequence_0(pattern1.f6e(until(0, this.o6g_1)).h()), this.o6g_1, this.q6g_1);
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    var line1 = tmp;
    var tmp1_subject = direction;
    var tmp0_0 = tmp1_subject.y1();
    var tmp_0;
    switch (tmp0_0) {
      case 0:
        tmp_0 = chain(asSequence_0(pattern2.e6e(until(this.q6g_1 - this.o6g_1 | 0, this.q6g_1)).h()), this.o6g_1, this.q6g_1);
        break;
      case 1:
        tmp_0 = chain(asSequence_0(pattern2.f6e(until(0, this.o6g_1)).h()), this.o6g_1, this.q6g_1);
        break;
      case 2:
        tmp_0 = chain(asSequence_0(pattern2.e6e(until(0, this.o6g_1)).h()), this.o6g_1, this.q6g_1);
        break;
      case 3:
        tmp_0 = chain(asSequence_0(pattern2.f6e(until(this.q6g_1 - this.o6g_1 | 0, this.q6g_1)).h()), this.o6g_1, this.q6g_1);
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    var line2 = tmp_0;
    return contentEquals(line1, line2);
  };
  PatternWeights2D.prototype.d6j = function (data, overlap) {
    var pab = new PatternsArrayBuilder();
    var yMax = data.c6d_1 - (this.p6g_1.n6h_1 ? 0 : overlap) | 0;
    var xMax = data.b6d_1 - (this.p6g_1.n6h_1 ? 0 : overlap) | 0;
    var inductionVariable = 0;
    if (inductionVariable < yMax)
      do {
        var yOffset = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var preIndex = imul(yOffset, data.b6d_1);
        var inductionVariable_0 = 0;
        if (inductionVariable_0 < xMax)
          do {
            var xOffset = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var index = preIndex + xOffset | 0;
            var pattern = data.d6e(index, numberRangeToNumber(0, overlap), numberRangeToNumber(0, overlap));
            var foundPatterns = mutableListOf([pattern]);
            if (this.p6g_1.b6h_1 ? true : this.p6g_1.c6h_1) {
              if (this.p6g_1.b6h_1) {
                var patternH = pattern.i6e();
                foundPatterns.b(patternH);
                if (this.p6g_1.c6h_1) {
                  var patternHV = patternH.j6e();
                  foundPatterns.b(patternHV);
                }
              }
              if (this.p6g_1.c6h_1) {
                var patternV = pattern.j6e();
                foundPatterns.b(patternV);
              }
            }
            if (this.p6g_1.a6h_1) {
              var pattern90 = pattern.h6e(false, 1, null);
              var pattern180 = pattern90.h6e(false, 1, null);
              var pattern270 = pattern180.h6e(false, 1, null);
              addAll_0(foundPatterns, sequenceOf([pattern90, pattern180, pattern270]));
              if (this.p6g_1.b6h_1 ? true : this.p6g_1.c6h_1) {
                if (this.p6g_1.b6h_1) {
                  var pattern90H = pattern90.i6e();
                  var pattern180H = pattern180.i6e();
                  var pattern270H = pattern270.i6e();
                  addAll_0(foundPatterns, sequenceOf([pattern90H, pattern180H, pattern270H]));
                  if (this.p6g_1.c6h_1) {
                    var pattern90HV = pattern90H.j6e();
                    var pattern180HV = pattern180H.j6e();
                    var pattern270HV = pattern270H.j6e();
                    addAll_0(foundPatterns, sequenceOf([pattern90HV, pattern180HV, pattern270HV]));
                  }
                }
                if (this.p6g_1.c6h_1) {
                  var pattern90V = pattern90.j6e();
                  var pattern180V = pattern180.j6e();
                  var pattern270V = pattern270.j6e();
                  addAll_0(foundPatterns, sequenceOf([pattern90V, pattern180V, pattern270V]));
                }
              }
            }
            {
              var tmp0_iterator = foundPatterns.h();
              while (tmp0_iterator.n()) {
                var element = tmp0_iterator.o();
                {
                  pab.v6e(element.c6e());
                }
              }
            }
            if (this.p6g_1.f6h_1 ? yOffset === 0 : false) {
              var tmp$ret$1;
              $l$block: {
                var index_0 = 0;
                var tmp0_iterator_0 = pab.h();
                while (tmp0_iterator_0.n()) {
                  var item = tmp0_iterator_0.o();
                  var tmp$ret$0;
                  {
                    tmp$ret$0 = contentEquals(item, pattern.d6d_1);
                  }
                  if (tmp$ret$0) {
                    tmp$ret$1 = index_0;
                    break $l$block;
                  }
                  var tmp1 = index_0;
                  index_0 = tmp1 + 1 | 0;
                }
                tmp$ret$1 = -1;
              }
              this.r6g_1.b(tmp$ret$1);
            }
            if (this.p6g_1.d6h_1 ? yOffset === ((data.c6d_1 - 1 | 0) - overlap | 0) : false) {
              var tmp$ret$3;
              $l$block_0: {
                var index_1 = 0;
                var tmp0_iterator_1 = pab.h();
                while (tmp0_iterator_1.n()) {
                  var item_0 = tmp0_iterator_1.o();
                  var tmp$ret$2;
                  {
                    tmp$ret$2 = contentEquals(item_0, pattern.d6d_1);
                  }
                  if (tmp$ret$2) {
                    tmp$ret$3 = index_1;
                    break $l$block_0;
                  }
                  var tmp1_0 = index_1;
                  index_1 = tmp1_0 + 1 | 0;
                }
                tmp$ret$3 = -1;
              }
              this.s6g_1.b(tmp$ret$3);
            }
          }
           while (inductionVariable_0 < xMax);
      }
       while (inductionVariable < yMax);
    var tmp$ret$6;
    {
      var tmp0_map = pab.r6e();
      var tmp$ret$5;
      {
        var tmp0_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map, 10));
        var tmp0_iterator_2 = tmp0_map.h();
        while (tmp0_iterator_2.n()) {
          var item_1 = tmp0_iterator_2.o();
          var tmp$ret$4;
          {
            tmp$ret$4 = new Pair(new IntArray2D(this.q6g_1, this.q6g_1, PatternWeights2D$loadPatterns$lambda(item_1)), item_1.w_1);
          }
          tmp0_mapTo.b(tmp$ret$4);
        }
        tmp$ret$5 = tmp0_mapTo;
      }
      tmp$ret$6 = tmp$ret$5;
    }
    return tmp$ret$6;
  };
  PatternWeights2D.$metadata$ = classMeta('PatternWeights2D');
  function Cartesian2DTopology$neighbourIterator$slambda(this$0, $index, resultContinuation) {
    this.r6j_1 = this$0;
    this.s6j_1 = $index;
    CoroutineImpl.call(this, resultContinuation);
  }
  Cartesian2DTopology$neighbourIterator$slambda.prototype.u6j = function ($this$sequence, $cont) {
    var tmp = this.v6j($this$sequence, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  Cartesian2DTopology$neighbourIterator$slambda.prototype.s7 = function (p1, $cont) {
    return this.u6j(p1 instanceof SequenceScope ? p1 : THROW_CCE(), $cont);
  };
  Cartesian2DTopology$neighbourIterator$slambda.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 9;
            if (this.r6j_1.w6j() ? true : this.s6j_1 >= this.r6j_1.g68_1 ? this.r6j_1.h68_1 > 1 : false) {
              this.k7_1 = 1;
              suspendResult = this.t6j_1.k4(new Pair(Direction2D_NORTH_getInstance().fb(), ((this.s6j_1 - this.r6j_1.g68_1 | 0) + this.r6j_1.l68() | 0) % this.r6j_1.l68() | 0), this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.k7_1 = 2;
              continue $sm;
            }

            break;
          case 1:
            this.k7_1 = 2;
            continue $sm;
          case 2:
            if (this.r6j_1.w6j() ? true : !(((this.s6j_1 + 1 | 0) % this.r6j_1.g68_1 | 0) === 0) ? this.r6j_1.g68_1 > 1 : false) {
              this.k7_1 = 3;
              suspendResult = this.t6j_1.k4(new Pair(Direction2D_EAST_getInstance().fb(), ((this.s6j_1 + 1 | 0) % this.r6j_1.g68_1 | 0) === 0 ? (this.s6j_1 + 1 | 0) - this.r6j_1.g68_1 | 0 : this.s6j_1 + 1 | 0), this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.k7_1 = 4;
              continue $sm;
            }

            break;
          case 3:
            this.k7_1 = 4;
            continue $sm;
          case 4:
            if (this.r6j_1.w6j() ? true : this.s6j_1 < (this.r6j_1.l68() - this.r6j_1.g68_1 | 0) ? this.r6j_1.h68_1 > 1 : false) {
              this.k7_1 = 5;
              suspendResult = this.t6j_1.k4(new Pair(Direction2D_SOUTH_getInstance().fb(), (this.s6j_1 + this.r6j_1.g68_1 | 0) % this.r6j_1.l68() | 0), this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.k7_1 = 6;
              continue $sm;
            }

            break;
          case 5:
            this.k7_1 = 6;
            continue $sm;
          case 6:
            if (this.r6j_1.w6j() ? true : !((this.s6j_1 % this.r6j_1.g68_1 | 0) === 0) ? this.r6j_1.g68_1 > 1 : false) {
              this.k7_1 = 7;
              suspendResult = this.t6j_1.k4(new Pair(Direction2D_WEST_getInstance().fb(), (this.s6j_1 % this.r6j_1.g68_1 | 0) === 0 ? (this.s6j_1 - 1 | 0) + this.r6j_1.g68_1 | 0 : this.s6j_1 - 1 | 0), this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.k7_1 = 8;
              continue $sm;
            }

            break;
          case 7:
            this.k7_1 = 8;
            continue $sm;
          case 8:
            return Unit_getInstance();
          case 9:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 9) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  Cartesian2DTopology$neighbourIterator$slambda.prototype.v6j = function ($this$sequence, completion) {
    var i = new Cartesian2DTopology$neighbourIterator$slambda(this.r6j_1, this.s6j_1, completion);
    i.t6j_1 = $this$sequence;
    return i;
  };
  Cartesian2DTopology$neighbourIterator$slambda.$metadata$ = classMeta('Cartesian2DTopology$neighbourIterator$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function Cartesian2DTopology$neighbourIterator$slambda_0(this$0, $index, resultContinuation) {
    var i = new Cartesian2DTopology$neighbourIterator$slambda(this$0, $index, resultContinuation);
    var l = function ($this$sequence, $cont) {
      return i.u6j($this$sequence, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function Cartesian2DTopology(width, height, periodic) {
    this.g68_1 = width;
    this.h68_1 = height;
    this.i68_1 = periodic;
    this.j68_1 = imul(this.g68_1, this.h68_1);
    this.k68_1 = 4;
  }
  Cartesian2DTopology.prototype.w6j = function () {
    return this.i68_1;
  };
  Cartesian2DTopology.prototype.l68 = function () {
    return this.j68_1;
  };
  Cartesian2DTopology.prototype.g6c = function () {
    return this.k68_1;
  };
  Cartesian2DTopology.prototype.x6h = function (x, y) {
    return imul(y, this.g68_1) + x | 0;
  };
  Cartesian2DTopology.prototype.j6c = function (index) {
    return sequence(Cartesian2DTopology$neighbourIterator$slambda_0(this, index, null));
  };
  Cartesian2DTopology.$metadata$ = classMeta('Cartesian2DTopology', [Topology]);
  function Topology() {
  }
  Topology.$metadata$ = interfaceMeta('Topology');
  function get_LOG_BASE() {
    return LOG_BASE;
  }
  var LOG_BASE;
  function EventHandler() {
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$();
    }
    tmp.h6c_1 = tmp$ret$0;
  }
  EventHandler.prototype.x6j = function (handler) {
    return this.h6c_1.b(handler);
  };
  EventHandler.prototype.u6f = function (handler) {
    this.x6j(handler);
  };
  EventHandler.prototype.v6f = function (handler) {
    return this.h6c_1.p(handler);
  };
  EventHandler.prototype.i6c = function (data) {
    {
      var tmp0_forEach = this.h6c_1;
      var tmp0_iterator = tmp0_forEach.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        {
          element(data);
        }
      }
    }
  };
  EventHandler.$metadata$ = classMeta('EventHandler');
  function toCoordinates(_this__u8e3s4, sizes) {
    var res = new Int32Array(sizes.length);
    var rest = _this__u8e3s4;
    var inductionVariable = 0;
    var last = sizes.length - 1 | 0;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        res[i] = rest % sizes[i] | 0;
        rest = rest / sizes[i] | 0;
      }
       while (inductionVariable < last);
    res[res.length - 1 | 0] = rest;
    return res;
  }
  function toIndex(_this__u8e3s4, sizes) {
    var res = 0;
    var i = _this__u8e3s4.length - 1 | 0;
    var indexedObject = reversed(sizes);
    var inductionVariable = 0;
    var last = indexedObject.m();
    while (inductionVariable < last) {
      var size = indexedObject.r(inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      var tmp = imul(res, size);
      var tmp1 = i;
      i = tmp1 - 1 | 0;
      res = tmp + _this__u8e3s4[tmp1] | 0;
    }
    return res;
  }
  function randomIndex(_this__u8e3s4, random) {
    var sum_0 = sum(_this__u8e3s4);
    var rand = random.w8() * sum_0;
    var partialSum = 0.0;
    var inductionVariable = 0;
    var last = _this__u8e3s4.length;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        partialSum = partialSum + _this__u8e3s4[i];
        if (partialSum > rand) {
          return i;
        }
      }
       while (inductionVariable < last);
    return _this__u8e3s4.length - 1 | 0;
  }
  function chain(_this__u8e3s4, number, size) {
    var tmp$ret$1;
    {
      var tmp0_fold = ArrayList_init_$Create$_0(imul(number, size));
      var accumulator = tmp0_fold;
      var tmp0_iterator = _this__u8e3s4.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        var tmp$ret$0;
        {
          var tmp1__anonymous__uwfjfc = accumulator;
          addAll(tmp1__anonymous__uwfjfc, asIterable_0(element));
          tmp$ret$0 = tmp1__anonymous__uwfjfc;
        }
        accumulator = tmp$ret$0;
      }
      tmp$ret$1 = accumulator;
    }
    return toIntArray(tmp$ret$1);
  }
  //region block: init
  LOG_BASE = 2.0;
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = Cartesian2DModelOptions_init_$Create$;
  _.$_$.b = OverlappingCartesian2DModel_init_$Create$;
  _.$_$.c = IntArray2D;
  //endregion
  return _;
}));



/***/ }),

/***/ "./kotlin/kotlinx-serialization-kotlinx-serialization-core-js-ir.js":
/*!**************************************************************************!*\
  !*** ./kotlin/kotlinx-serialization-kotlinx-serialization-core-js-ir.js ***!
  \**************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
  if (true)
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ./kotlin-kotlin-stdlib-js-ir.js */ "./kotlin/kotlin-kotlin-stdlib-js-ir.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
}(this, function (_, kotlin_kotlin) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var interfaceMeta = kotlin_kotlin.$_$.x8;
  var StringCompanionObject_getInstance = kotlin_kotlin.$_$.b3;
  var Unit_getInstance = kotlin_kotlin.$_$.j3;
  var emptyList = kotlin_kotlin.$_$.g5;
  var LazyThreadSafetyMode_PUBLICATION_getInstance = kotlin_kotlin.$_$.e;
  var lazy = kotlin_kotlin.$_$.kd;
  var classMeta = kotlin_kotlin.$_$.o8;
  var KProperty1 = kotlin_kotlin.$_$.la;
  var getPropertyCallableRef = kotlin_kotlin.$_$.t8;
  var IllegalArgumentException_init_$Init$ = kotlin_kotlin.$_$.o1;
  var captureStack = kotlin_kotlin.$_$.j8;
  var IllegalArgumentException_init_$Init$_0 = kotlin_kotlin.$_$.q1;
  var IllegalArgumentException = kotlin_kotlin.$_$.lc;
  var collectionSizeOrDefault = kotlin_kotlin.$_$.n4;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.r;
  var toString = kotlin_kotlin.$_$.u9;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.p1;
  var THROW_CCE = kotlin_kotlin.$_$.tc;
  var isInterface = kotlin_kotlin.$_$.g9;
  var KClass = kotlin_kotlin.$_$.ia;
  var copyToArray = kotlin_kotlin.$_$.d5;
  var Triple = kotlin_kotlin.$_$.vc;
  var getKClass = kotlin_kotlin.$_$.d;
  var Pair = kotlin_kotlin.$_$.rc;
  var Entry = kotlin_kotlin.$_$.t3;
  var LinkedHashMap = kotlin_kotlin.$_$.q3;
  var MutableMap = kotlin_kotlin.$_$.y3;
  var Map = kotlin_kotlin.$_$.u3;
  var HashMap = kotlin_kotlin.$_$.m3;
  var LinkedHashSet = kotlin_kotlin.$_$.r3;
  var MutableSet = kotlin_kotlin.$_$.z3;
  var Set = kotlin_kotlin.$_$.a4;
  var HashSet = kotlin_kotlin.$_$.n3;
  var ArrayList = kotlin_kotlin.$_$.k3;
  var MutableList = kotlin_kotlin.$_$.w3;
  var List = kotlin_kotlin.$_$.s3;
  var Collection = kotlin_kotlin.$_$.l3;
  var equals = kotlin_kotlin.$_$.q8;
  var getStringHashCode = kotlin_kotlin.$_$.u8;
  var Iterator = kotlin_kotlin.$_$.p3;
  var Iterable = kotlin_kotlin.$_$.o3;
  var isBlank = kotlin_kotlin.$_$.fb;
  var toList = kotlin_kotlin.$_$.a7;
  var ArrayList_init_$Create$_0 = kotlin_kotlin.$_$.s;
  var HashSet_init_$Create$ = kotlin_kotlin.$_$.y;
  var toHashSet = kotlin_kotlin.$_$.x6;
  var toBooleanArray = kotlin_kotlin.$_$.w6;
  var withIndex = kotlin_kotlin.$_$.f7;
  var to = kotlin_kotlin.$_$.qd;
  var toMap = kotlin_kotlin.$_$.b7;
  var lazy_0 = kotlin_kotlin.$_$.ld;
  var contentEquals = kotlin_kotlin.$_$.q4;
  var until = kotlin_kotlin.$_$.ha;
  var joinToString$default = kotlin_kotlin.$_$.h;
  var objectMeta = kotlin_kotlin.$_$.q9;
  var getKClassFromExpression = kotlin_kotlin.$_$.c;
  var ensureNotNull = kotlin_kotlin.$_$.dd;
  var Long = kotlin_kotlin.$_$.nc;
  var Char = kotlin_kotlin.$_$.dc;
  var isObject = kotlin_kotlin.$_$.i9;
  var Companion_getInstance = kotlin_kotlin.$_$.e3;
  var Duration = kotlin_kotlin.$_$.ac;
  var toIntOrNull = kotlin_kotlin.$_$.tb;
  var hashCode = kotlin_kotlin.$_$.v8;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.u1;
  var asList = kotlin_kotlin.$_$.h4;
  var ArrayList_init_$Create$_1 = kotlin_kotlin.$_$.t;
  var isArray = kotlin_kotlin.$_$.y8;
  var step = kotlin_kotlin.$_$.ga;
  var getValue = kotlin_kotlin.$_$.m5;
  var HashMap_init_$Create$ = kotlin_kotlin.$_$.v;
  var HashMap_init_$Create$_0 = kotlin_kotlin.$_$.w;
  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.b1;
  var LinkedHashMap_init_$Create$_0 = kotlin_kotlin.$_$.c1;
  var HashSet_init_$Create$_0 = kotlin_kotlin.$_$.z;
  var LinkedHashSet_init_$Create$ = kotlin_kotlin.$_$.d1;
  var LinkedHashSet_init_$Create$_0 = kotlin_kotlin.$_$.e1;
  var longArray = kotlin_kotlin.$_$.m9;
  var Companion_getInstance_0 = kotlin_kotlin.$_$.h3;
  var get_lastIndex = kotlin_kotlin.$_$.s5;
  var countTrailingZeroBits = kotlin_kotlin.$_$.bd;
  var KTypeParameter = kotlin_kotlin.$_$.ma;
  var HashSet_init_$Create$_1 = kotlin_kotlin.$_$.x;
  var contentHashCode = kotlin_kotlin.$_$.t4;
  var arrayIterator = kotlin_kotlin.$_$.h8;
  var fillArrayVal = kotlin_kotlin.$_$.r8;
  var booleanArray = kotlin_kotlin.$_$.i8;
  var emptyMap = kotlin_kotlin.$_$.h5;
  var Companion_getInstance_1 = kotlin_kotlin.$_$.g3;
  var isCharArray = kotlin_kotlin.$_$.b9;
  var charArray = kotlin_kotlin.$_$.k8;
  var DoubleCompanionObject_getInstance = kotlin_kotlin.$_$.x2;
  var isDoubleArray = kotlin_kotlin.$_$.d9;
  var FloatCompanionObject_getInstance = kotlin_kotlin.$_$.y2;
  var isFloatArray = kotlin_kotlin.$_$.e9;
  var isLongArray = kotlin_kotlin.$_$.h9;
  var IntCompanionObject_getInstance = kotlin_kotlin.$_$.z2;
  var isIntArray = kotlin_kotlin.$_$.f9;
  var ShortCompanionObject_getInstance = kotlin_kotlin.$_$.a3;
  var isShortArray = kotlin_kotlin.$_$.j9;
  var ByteCompanionObject_getInstance = kotlin_kotlin.$_$.w2;
  var isByteArray = kotlin_kotlin.$_$.a9;
  var BooleanCompanionObject_getInstance = kotlin_kotlin.$_$.v2;
  var isBooleanArray = kotlin_kotlin.$_$.z8;
  var coerceAtLeast = kotlin_kotlin.$_$.ca;
  var copyOf = kotlin_kotlin.$_$.x4;
  var copyOf_0 = kotlin_kotlin.$_$.z4;
  var copyOf_1 = kotlin_kotlin.$_$.a5;
  var copyOf_2 = kotlin_kotlin.$_$.v4;
  var copyOf_3 = kotlin_kotlin.$_$.c5;
  var copyOf_4 = kotlin_kotlin.$_$.u4;
  var copyOf_5 = kotlin_kotlin.$_$.y4;
  var copyOf_6 = kotlin_kotlin.$_$.w4;
  var trimIndent = kotlin_kotlin.$_$.yb;
  var equals_0 = kotlin_kotlin.$_$.eb;
  var charSequenceLength = kotlin_kotlin.$_$.m8;
  var charSequenceGet = kotlin_kotlin.$_$.l8;
  var toString_0 = kotlin_kotlin.$_$.j2;
  var titlecase = kotlin_kotlin.$_$.qb;
  var isLowerCase = kotlin_kotlin.$_$.gb;
  var PrimitiveClasses_getInstance = kotlin_kotlin.$_$.d3;
  var Unit = kotlin_kotlin.$_$.xc;
  var mapOf = kotlin_kotlin.$_$.a6;
  var lastOrNull = kotlin_kotlin.$_$.v5;
  var get_lastIndex_0 = kotlin_kotlin.$_$.t5;
  var Annotation = kotlin_kotlin.$_$.cc;
  var get_indices = kotlin_kotlin.$_$.p5;
  var IndexOutOfBoundsException_init_$Create$ = kotlin_kotlin.$_$.w1;
  var get_indices_0 = kotlin_kotlin.$_$.n5;
  var get_js = kotlin_kotlin.$_$.l9;
  var findAssociatedObject = kotlin_kotlin.$_$.b;
  //endregion
  //region block: pre-declaration
  PolymorphicSerializer.prototype = Object.create(AbstractPolymorphicSerializer.prototype);
  PolymorphicSerializer.prototype.constructor = PolymorphicSerializer;
  SerializationException.prototype = Object.create(IllegalArgumentException.prototype);
  SerializationException.prototype.constructor = SerializationException;
  UnknownFieldException.prototype = Object.create(SerializationException.prototype);
  UnknownFieldException.prototype.constructor = UnknownFieldException;
  MissingFieldException.prototype = Object.create(SerializationException.prototype);
  MissingFieldException.prototype.constructor = MissingFieldException;
  function get_isNullable() {
    return false;
  }
  function get_isInline() {
    return false;
  }
  function get_annotations() {
    return emptyList();
  }
  ENUM.prototype = Object.create(SerialKind.prototype);
  ENUM.prototype.constructor = ENUM;
  CONTEXTUAL.prototype = Object.create(SerialKind.prototype);
  CONTEXTUAL.prototype.constructor = CONTEXTUAL;
  PolymorphicKind.prototype = Object.create(SerialKind.prototype);
  PolymorphicKind.prototype.constructor = PolymorphicKind;
  SEALED.prototype = Object.create(PolymorphicKind.prototype);
  SEALED.prototype.constructor = SEALED;
  OPEN.prototype = Object.create(PolymorphicKind.prototype);
  OPEN.prototype.constructor = OPEN;
  PrimitiveKind.prototype = Object.create(SerialKind.prototype);
  PrimitiveKind.prototype.constructor = PrimitiveKind;
  BOOLEAN.prototype = Object.create(PrimitiveKind.prototype);
  BOOLEAN.prototype.constructor = BOOLEAN;
  BYTE.prototype = Object.create(PrimitiveKind.prototype);
  BYTE.prototype.constructor = BYTE;
  CHAR.prototype = Object.create(PrimitiveKind.prototype);
  CHAR.prototype.constructor = CHAR;
  SHORT.prototype = Object.create(PrimitiveKind.prototype);
  SHORT.prototype.constructor = SHORT;
  INT.prototype = Object.create(PrimitiveKind.prototype);
  INT.prototype.constructor = INT;
  LONG.prototype = Object.create(PrimitiveKind.prototype);
  LONG.prototype.constructor = LONG;
  FLOAT.prototype = Object.create(PrimitiveKind.prototype);
  FLOAT.prototype.constructor = FLOAT;
  DOUBLE.prototype = Object.create(PrimitiveKind.prototype);
  DOUBLE.prototype.constructor = DOUBLE;
  STRING.prototype = Object.create(PrimitiveKind.prototype);
  STRING.prototype.constructor = STRING;
  StructureKind.prototype = Object.create(SerialKind.prototype);
  StructureKind.prototype.constructor = StructureKind;
  CLASS.prototype = Object.create(StructureKind.prototype);
  CLASS.prototype.constructor = CLASS;
  LIST.prototype = Object.create(StructureKind.prototype);
  LIST.prototype.constructor = LIST;
  MAP.prototype = Object.create(StructureKind.prototype);
  MAP.prototype.constructor = MAP;
  OBJECT.prototype = Object.create(StructureKind.prototype);
  OBJECT.prototype.constructor = OBJECT;
  function decodeSerializableValue(deserializer) {
    return deserializer.in(this);
  }
  function decodeSequentially() {
    return false;
  }
  function decodeCollectionSize(descriptor) {
    return -1;
  }
  function decodeSerializableElement$default(descriptor, index, deserializer, previousValue, $mask0, $handler) {
    if (!(($mask0 & 8) === 0))
      previousValue = null;
    return $handler == null ? this.lq(descriptor, index, deserializer, previousValue) : $handler(descriptor, index, deserializer, previousValue);
  }
  PrimitiveArrayDescriptor.prototype = Object.create(ListLikeDescriptor.prototype);
  PrimitiveArrayDescriptor.prototype.constructor = PrimitiveArrayDescriptor;
  ArrayClassDesc.prototype = Object.create(ListLikeDescriptor.prototype);
  ArrayClassDesc.prototype.constructor = ArrayClassDesc;
  HashMapClassDesc.prototype = Object.create(MapLikeDescriptor.prototype);
  HashMapClassDesc.prototype.constructor = HashMapClassDesc;
  LinkedHashMapClassDesc.prototype = Object.create(MapLikeDescriptor.prototype);
  LinkedHashMapClassDesc.prototype.constructor = LinkedHashMapClassDesc;
  ArrayListClassDesc.prototype = Object.create(ListLikeDescriptor.prototype);
  ArrayListClassDesc.prototype.constructor = ArrayListClassDesc;
  HashSetClassDesc.prototype = Object.create(ListLikeDescriptor.prototype);
  HashSetClassDesc.prototype.constructor = HashSetClassDesc;
  LinkedHashSetClassDesc.prototype = Object.create(ListLikeDescriptor.prototype);
  LinkedHashSetClassDesc.prototype.constructor = LinkedHashSetClassDesc;
  CollectionLikeSerializer.prototype = Object.create(AbstractCollectionSerializer.prototype);
  CollectionLikeSerializer.prototype.constructor = CollectionLikeSerializer;
  PrimitiveArraySerializer.prototype = Object.create(CollectionLikeSerializer.prototype);
  PrimitiveArraySerializer.prototype.constructor = PrimitiveArraySerializer;
  CollectionSerializer.prototype = Object.create(CollectionLikeSerializer.prototype);
  CollectionSerializer.prototype.constructor = CollectionSerializer;
  ReferenceArraySerializer.prototype = Object.create(CollectionLikeSerializer.prototype);
  ReferenceArraySerializer.prototype.constructor = ReferenceArraySerializer;
  MapLikeSerializer.prototype = Object.create(AbstractCollectionSerializer.prototype);
  MapLikeSerializer.prototype.constructor = MapLikeSerializer;
  HashMapSerializer.prototype = Object.create(MapLikeSerializer.prototype);
  HashMapSerializer.prototype.constructor = HashMapSerializer;
  LinkedHashMapSerializer.prototype = Object.create(MapLikeSerializer.prototype);
  LinkedHashMapSerializer.prototype.constructor = LinkedHashMapSerializer;
  ArrayListSerializer.prototype = Object.create(CollectionSerializer.prototype);
  ArrayListSerializer.prototype.constructor = ArrayListSerializer;
  HashSetSerializer.prototype = Object.create(CollectionSerializer.prototype);
  HashSetSerializer.prototype.constructor = HashSetSerializer;
  LinkedHashSetSerializer.prototype = Object.create(CollectionSerializer.prototype);
  LinkedHashSetSerializer.prototype.constructor = LinkedHashSetSerializer;
  function typeParametersSerializers() {
    return get_EMPTY_SERIALIZER_ARRAY();
  }
  CharArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  CharArraySerializer_0.prototype.constructor = CharArraySerializer_0;
  DoubleArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  DoubleArraySerializer_0.prototype.constructor = DoubleArraySerializer_0;
  FloatArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  FloatArraySerializer_0.prototype.constructor = FloatArraySerializer_0;
  LongArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  LongArraySerializer_0.prototype.constructor = LongArraySerializer_0;
  IntArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  IntArraySerializer_0.prototype.constructor = IntArraySerializer_0;
  ShortArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  ShortArraySerializer_0.prototype.constructor = ShortArraySerializer_0;
  ByteArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  ByteArraySerializer_0.prototype.constructor = ByteArraySerializer_0;
  BooleanArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  BooleanArraySerializer_0.prototype.constructor = BooleanArraySerializer_0;
  CharArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  CharArrayBuilder.prototype.constructor = CharArrayBuilder;
  DoubleArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  DoubleArrayBuilder.prototype.constructor = DoubleArrayBuilder;
  FloatArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  FloatArrayBuilder.prototype.constructor = FloatArrayBuilder;
  LongArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  LongArrayBuilder.prototype.constructor = LongArrayBuilder;
  IntArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  IntArrayBuilder.prototype.constructor = IntArrayBuilder;
  ShortArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  ShortArrayBuilder.prototype.constructor = ShortArrayBuilder;
  ByteArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  ByteArrayBuilder.prototype.constructor = ByteArrayBuilder;
  BooleanArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  BooleanArrayBuilder.prototype.constructor = BooleanArrayBuilder;
  NamedValueDecoder.prototype = Object.create(TaggedDecoder.prototype);
  NamedValueDecoder.prototype.constructor = NamedValueDecoder;
  MapEntrySerializer_0.prototype = Object.create(KeyValueSerializer.prototype);
  MapEntrySerializer_0.prototype.constructor = MapEntrySerializer_0;
  PairSerializer_0.prototype = Object.create(KeyValueSerializer.prototype);
  PairSerializer_0.prototype.constructor = PairSerializer_0;
  SerialModuleImpl.prototype = Object.create(SerializersModule.prototype);
  SerialModuleImpl.prototype.constructor = SerialModuleImpl;
  //endregion
  function KSerializer() {
  }
  KSerializer.$metadata$ = interfaceMeta('KSerializer', [SerializationStrategy, DeserializationStrategy]);
  function SerializationStrategy() {
  }
  SerializationStrategy.$metadata$ = interfaceMeta('SerializationStrategy');
  function DeserializationStrategy() {
  }
  DeserializationStrategy.$metadata$ = interfaceMeta('DeserializationStrategy');
  function PolymorphicSerializer$descriptor$delegate$lambda$lambda(this$0) {
    return function ($this$buildSerialDescriptor) {
      var tmp = serializer_1(StringCompanionObject_getInstance()).hn();
      $this$buildSerialDescriptor.rn('type', tmp, null, false, 12, null);
      var tmp_0 = 'kotlinx.serialization.Polymorphic<' + this$0.sn_1.ei() + '>';
      var tmp_1 = CONTEXTUAL_getInstance();
      var tmp_2 = buildSerialDescriptor$default(tmp_0, tmp_1, [], null, 12, null);
      $this$buildSerialDescriptor.rn('value', tmp_2, null, false, 12, null);
      $this$buildSerialDescriptor.ln_1 = this$0.tn_1;
      return Unit_getInstance();
    };
  }
  function PolymorphicSerializer$descriptor$delegate$lambda(this$0) {
    return function () {
      var tmp = OPEN_getInstance();
      return withContext(buildSerialDescriptor$default('kotlinx.serialization.Polymorphic', tmp, [], PolymorphicSerializer$descriptor$delegate$lambda$lambda(this$0), 4, null), this$0.sn_1);
    };
  }
  function PolymorphicSerializer(baseClass) {
    AbstractPolymorphicSerializer.call(this);
    this.sn_1 = baseClass;
    this.tn_1 = emptyList();
    var tmp = this;
    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp.un_1 = lazy(tmp_0, PolymorphicSerializer$descriptor$delegate$lambda(this));
  }
  PolymorphicSerializer.prototype.vn = function () {
    return this.sn_1;
  };
  PolymorphicSerializer.prototype.hn = function () {
    var tmp$ret$0;
    {
      var tmp0_getValue = descriptor$factory();
      tmp$ret$0 = this.un_1.n2();
    }
    return tmp$ret$0;
  };
  PolymorphicSerializer.prototype.toString = function () {
    return 'kotlinx.serialization.PolymorphicSerializer(baseClass: ' + this.sn_1 + ')';
  };
  PolymorphicSerializer.$metadata$ = classMeta('PolymorphicSerializer', undefined, undefined, undefined, undefined, AbstractPolymorphicSerializer.prototype);
  function findPolymorphicSerializer(_this__u8e3s4, decoder, klassName) {
    var tmp0_elvis_lhs = _this__u8e3s4.wn(decoder, klassName);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throwSubtypeNotRegistered(klassName, _this__u8e3s4.vn());
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function descriptor$factory() {
    return getPropertyCallableRef('descriptor', 1, KProperty1, function (receiver) {
      return receiver.hn();
    }, null);
  }
  function StringFormat() {
  }
  StringFormat.$metadata$ = interfaceMeta('StringFormat', [SerialFormat]);
  function SerialFormat() {
  }
  SerialFormat.$metadata$ = interfaceMeta('SerialFormat');
  function SerializationException_init_$Init$(message, $this) {
    IllegalArgumentException_init_$Init$(message, $this);
    SerializationException.call($this);
    return $this;
  }
  function SerializationException_init_$Create$(message) {
    var tmp = SerializationException_init_$Init$(message, Object.create(SerializationException.prototype));
    captureStack(tmp, SerializationException_init_$Create$);
    return tmp;
  }
  function SerializationException_init_$Init$_0(message, cause, $this) {
    IllegalArgumentException_init_$Init$_0(message, cause, $this);
    SerializationException.call($this);
    return $this;
  }
  function SerializationException() {
    captureStack(this, SerializationException);
  }
  SerializationException.$metadata$ = classMeta('SerializationException', undefined, undefined, undefined, undefined, IllegalArgumentException.prototype);
  function UnknownFieldException_init_$Init$(index, $this) {
    UnknownFieldException.call($this, 'An unknown field for index ' + index);
    return $this;
  }
  function UnknownFieldException_init_$Create$(index) {
    var tmp = UnknownFieldException_init_$Init$(index, Object.create(UnknownFieldException.prototype));
    captureStack(tmp, UnknownFieldException_init_$Create$);
    return tmp;
  }
  function UnknownFieldException(message) {
    SerializationException_init_$Init$(message, this);
    captureStack(this, UnknownFieldException);
  }
  UnknownFieldException.$metadata$ = classMeta('UnknownFieldException', undefined, undefined, undefined, undefined, SerializationException.prototype);
  function MissingFieldException_init_$Init$(missingFields, serialName, $this) {
    MissingFieldException.call($this, missingFields, missingFields.m() === 1 ? "Field '" + missingFields.r(0) + "' is required for type with serial name '" + serialName + "', but it was missing" : 'Fields ' + missingFields + " are required for type with serial name '" + serialName + "', but they were missing", null);
    return $this;
  }
  function MissingFieldException_init_$Create$(missingFields, serialName) {
    var tmp = MissingFieldException_init_$Init$(missingFields, serialName, Object.create(MissingFieldException.prototype));
    captureStack(tmp, MissingFieldException_init_$Create$);
    return tmp;
  }
  function MissingFieldException(missingFields, message, cause) {
    SerializationException_init_$Init$_0(message, cause, this);
    this.zn_1 = missingFields;
    captureStack(this, MissingFieldException);
  }
  MissingFieldException.$metadata$ = classMeta('MissingFieldException', undefined, undefined, undefined, undefined, SerializationException.prototype);
  function serializer(type) {
    return serializer_0(EmptySerializersModule_0(), type);
  }
  function serializer_0(_this__u8e3s4, type) {
    var tmp0_elvis_lhs = serializerByKTypeImpl(_this__u8e3s4, type, true);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      platformSpecificSerializerNotRegistered(kclass(type));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function serializerByKTypeImpl(_this__u8e3s4, type, failOnMissingTypeArgSerializer) {
    var rootClass = kclass(type);
    var isNullable = type.oi();
    var tmp$ret$4;
    {
      var tmp0_map = type.ni();
      var tmp$ret$3;
      {
        var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
        var tmp0_iterator = tmp0_map.h();
        while (tmp0_iterator.n()) {
          var item = tmp0_iterator.o();
          var tmp$ret$2;
          {
            var tmp$ret$1;
            $l$block: {
              var tmp0_requireNotNull = item.bo_1;
              {
              }
              if (tmp0_requireNotNull == null) {
                var tmp$ret$0;
                {
                  tmp$ret$0 = 'Star projections in type arguments are not allowed, but had ' + type;
                }
                var message = tmp$ret$0;
                throw IllegalArgumentException_init_$Create$(toString(message));
              } else {
                tmp$ret$1 = tmp0_requireNotNull;
                break $l$block;
              }
            }
            tmp$ret$2 = tmp$ret$1;
          }
          tmp0_mapTo.b(tmp$ret$2);
        }
        tmp$ret$3 = tmp0_mapTo;
      }
      tmp$ret$4 = tmp$ret$3;
    }
    var typeArguments = tmp$ret$4;
    var tmp;
    if (typeArguments.q()) {
      var tmp0_elvis_lhs = serializerOrNull(rootClass);
      var tmp_0;
      if (tmp0_elvis_lhs == null) {
        tmp_0 = _this__u8e3s4.co(rootClass, null, 2, null);
      } else {
        tmp_0 = tmp0_elvis_lhs;
      }
      tmp = tmp_0;
    } else {
      tmp = builtinSerializer(_this__u8e3s4, typeArguments, rootClass, failOnMissingTypeArgSerializer);
    }
    var tmp1_safe_receiver = tmp;
    var tmp_1;
    if (tmp1_safe_receiver == null) {
      tmp_1 = null;
    } else {
      var tmp$ret$5;
      {
        tmp$ret$5 = (!(tmp1_safe_receiver == null) ? isInterface(tmp1_safe_receiver, KSerializer) : false) ? tmp1_safe_receiver : THROW_CCE();
      }
      tmp_1 = tmp$ret$5;
    }
    var result = tmp_1;
    var tmp2_safe_receiver = result;
    return tmp2_safe_receiver == null ? null : nullable(tmp2_safe_receiver, isNullable);
  }
  function serializerOrNull(_this__u8e3s4) {
    var tmp0_elvis_lhs = compiledSerializerImpl(_this__u8e3s4);
    return tmp0_elvis_lhs == null ? builtinSerializerOrNull(_this__u8e3s4) : tmp0_elvis_lhs;
  }
  function builtinSerializer(_this__u8e3s4, typeArguments, rootClass, failOnMissingTypeArgSerializer) {
    var tmp;
    if (failOnMissingTypeArgSerializer) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(typeArguments, 10));
          var tmp0_iterator = typeArguments.h();
          while (tmp0_iterator.n()) {
            var item = tmp0_iterator.o();
            tmp0_mapTo.b(serializer_0(_this__u8e3s4, item));
          }
          tmp$ret$0 = tmp0_mapTo;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    } else {
      var tmp$ret$4;
      {
        var tmp$ret$3;
        {
          var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(typeArguments, 10));
          var tmp0_iterator_0 = typeArguments.h();
          while (tmp0_iterator_0.n()) {
            var item_0 = tmp0_iterator_0.o();
            var tmp$ret$2;
            {
              var tmp0_elvis_lhs = serializerOrNull_0(_this__u8e3s4, item_0);
              var tmp_0;
              if (tmp0_elvis_lhs == null) {
                return null;
              } else {
                tmp_0 = tmp0_elvis_lhs;
              }
              tmp$ret$2 = tmp_0;
            }
            tmp0_mapTo_0.b(tmp$ret$2);
          }
          tmp$ret$3 = tmp0_mapTo_0;
        }
        tmp$ret$4 = tmp$ret$3;
      }
      tmp = tmp$ret$4;
    }
    var serializers = tmp;
    var tmp0_subject = rootClass;
    var tmp_1;
    if (((tmp0_subject.equals(getKClass(Collection)) ? true : tmp0_subject.equals(getKClass(List))) ? true : tmp0_subject.equals(getKClass(MutableList))) ? true : tmp0_subject.equals(getKClass(ArrayList))) {
      tmp_1 = new ArrayListSerializer(serializers.r(0));
    } else if (tmp0_subject.equals(getKClass(HashSet))) {
      tmp_1 = new HashSetSerializer(serializers.r(0));
    } else if ((tmp0_subject.equals(getKClass(Set)) ? true : tmp0_subject.equals(getKClass(MutableSet))) ? true : tmp0_subject.equals(getKClass(LinkedHashSet))) {
      tmp_1 = new LinkedHashSetSerializer(serializers.r(0));
    } else if (tmp0_subject.equals(getKClass(HashMap))) {
      tmp_1 = new HashMapSerializer(serializers.r(0), serializers.r(1));
    } else if ((tmp0_subject.equals(getKClass(Map)) ? true : tmp0_subject.equals(getKClass(MutableMap))) ? true : tmp0_subject.equals(getKClass(LinkedHashMap))) {
      tmp_1 = new LinkedHashMapSerializer(serializers.r(0), serializers.r(1));
    } else if (tmp0_subject.equals(getKClass(Entry))) {
      tmp_1 = MapEntrySerializer(serializers.r(0), serializers.r(1));
    } else if (tmp0_subject.equals(getKClass(Pair))) {
      tmp_1 = PairSerializer(serializers.r(0), serializers.r(1));
    } else if (tmp0_subject.equals(getKClass(Triple))) {
      tmp_1 = TripleSerializer(serializers.r(0), serializers.r(1), serializers.r(2));
    } else {
      if (isReferenceArray(rootClass)) {
        var tmp$ret$5;
        {
          var tmp_2 = typeArguments.r(0).mi();
          var tmp0_cast = ArraySerializer((!(tmp_2 == null) ? isInterface(tmp_2, KClass) : false) ? tmp_2 : THROW_CCE(), serializers.r(0));
          tmp$ret$5 = isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE();
        }
        return tmp$ret$5;
      }
      var tmp$ret$6;
      {
        tmp$ret$6 = copyToArray(serializers);
      }
      var args = tmp$ret$6;
      var tmp1_elvis_lhs = constructSerializerForGivenTypeArgs(rootClass, args.slice());
      tmp_1 = tmp1_elvis_lhs == null ? reflectiveOrContextual(_this__u8e3s4, rootClass, serializers) : tmp1_elvis_lhs;
    }
    return tmp_1;
  }
  function nullable(_this__u8e3s4, shouldBeNullable) {
    if (shouldBeNullable)
      return get_nullable(_this__u8e3s4);
    return isInterface(_this__u8e3s4, KSerializer) ? _this__u8e3s4 : THROW_CCE();
  }
  function serializerOrNull_0(_this__u8e3s4, type) {
    return serializerByKTypeImpl(_this__u8e3s4, type, false);
  }
  function reflectiveOrContextual(_this__u8e3s4, kClass, typeArgumentsSerializers) {
    var tmp0_elvis_lhs = serializerOrNull(kClass);
    return tmp0_elvis_lhs == null ? _this__u8e3s4.do(kClass, typeArgumentsSerializers) : tmp0_elvis_lhs;
  }
  function serializer_1(_this__u8e3s4) {
    return StringSerializer_getInstance();
  }
  function serializer_2(_this__u8e3s4) {
    return CharSerializer_getInstance();
  }
  function CharArraySerializer() {
    return CharArraySerializer_getInstance();
  }
  function serializer_3(_this__u8e3s4) {
    return DoubleSerializer_getInstance();
  }
  function DoubleArraySerializer() {
    return DoubleArraySerializer_getInstance();
  }
  function serializer_4(_this__u8e3s4) {
    return FloatSerializer_getInstance();
  }
  function FloatArraySerializer() {
    return FloatArraySerializer_getInstance();
  }
  function serializer_5(_this__u8e3s4) {
    return LongSerializer_getInstance();
  }
  function LongArraySerializer() {
    return LongArraySerializer_getInstance();
  }
  function serializer_6(_this__u8e3s4) {
    return IntSerializer_getInstance();
  }
  function IntArraySerializer() {
    return IntArraySerializer_getInstance();
  }
  function serializer_7(_this__u8e3s4) {
    return ShortSerializer_getInstance();
  }
  function ShortArraySerializer() {
    return ShortArraySerializer_getInstance();
  }
  function serializer_8(_this__u8e3s4) {
    return ByteSerializer_getInstance();
  }
  function ByteArraySerializer() {
    return ByteArraySerializer_getInstance();
  }
  function serializer_9(_this__u8e3s4) {
    return BooleanSerializer_getInstance();
  }
  function BooleanArraySerializer() {
    return BooleanArraySerializer_getInstance();
  }
  function serializer_10(_this__u8e3s4) {
    return UnitSerializer_getInstance();
  }
  function serializer_11(_this__u8e3s4) {
    return DurationSerializer_getInstance();
  }
  function MapEntrySerializer(keySerializer, valueSerializer) {
    return new MapEntrySerializer_0(keySerializer, valueSerializer);
  }
  function PairSerializer(keySerializer, valueSerializer) {
    return new PairSerializer_0(keySerializer, valueSerializer);
  }
  function TripleSerializer(aSerializer, bSerializer, cSerializer) {
    return new TripleSerializer_0(aSerializer, bSerializer, cSerializer);
  }
  function ArraySerializer(kClass, elementSerializer) {
    return new ReferenceArraySerializer(kClass, elementSerializer);
  }
  function get_nullable(_this__u8e3s4) {
    var tmp;
    if (_this__u8e3s4.hn().eo()) {
      tmp = isInterface(_this__u8e3s4, KSerializer) ? _this__u8e3s4 : THROW_CCE();
    } else {
      tmp = new NullableSerializer(_this__u8e3s4);
    }
    return tmp;
  }
  function MapSerializer(keySerializer, valueSerializer) {
    return new LinkedHashMapSerializer(keySerializer, valueSerializer);
  }
  function ListSerializer(elementSerializer) {
    return new ArrayListSerializer(elementSerializer);
  }
  function withContext(_this__u8e3s4, context) {
    return new ContextDescriptor(_this__u8e3s4, context);
  }
  function ContextDescriptor(original, kClass) {
    this.fo_1 = original;
    this.go_1 = kClass;
    this.ho_1 = this.fo_1.io() + '<' + this.go_1.ei() + '>';
  }
  ContextDescriptor.prototype.jo = function () {
    return this.fo_1.jo();
  };
  ContextDescriptor.prototype.ko = function () {
    return this.fo_1.ko();
  };
  ContextDescriptor.prototype.lo = function () {
    return this.fo_1.lo();
  };
  ContextDescriptor.prototype.eo = function () {
    return this.fo_1.eo();
  };
  ContextDescriptor.prototype.mo = function () {
    return this.fo_1.mo();
  };
  ContextDescriptor.prototype.no = function (index) {
    return this.fo_1.no(index);
  };
  ContextDescriptor.prototype.oo = function (index) {
    return this.fo_1.oo(index);
  };
  ContextDescriptor.prototype.po = function (name) {
    return this.fo_1.po(name);
  };
  ContextDescriptor.prototype.qo = function (index) {
    return this.fo_1.qo(index);
  };
  ContextDescriptor.prototype.ro = function (index) {
    return this.fo_1.ro(index);
  };
  ContextDescriptor.prototype.io = function () {
    return this.ho_1;
  };
  ContextDescriptor.prototype.equals = function (other) {
    var tmp0_elvis_lhs = other instanceof ContextDescriptor ? other : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var another = tmp;
    return equals(this.fo_1, another.fo_1) ? another.go_1.equals(this.go_1) : false;
  };
  ContextDescriptor.prototype.hashCode = function () {
    var result = this.go_1.hashCode();
    result = imul(31, result) + getStringHashCode(this.ho_1) | 0;
    return result;
  };
  ContextDescriptor.prototype.toString = function () {
    return 'ContextDescriptor(kClass: ' + this.go_1 + ', original: ' + this.fo_1 + ')';
  };
  ContextDescriptor.$metadata$ = classMeta('ContextDescriptor', [SerialDescriptor]);
  function getContextualDescriptor(_this__u8e3s4, descriptor) {
    var tmp0_safe_receiver = get_capturedKClass(descriptor);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          var tmp0_safe_receiver_0 = _this__u8e3s4.co(tmp0_safe_receiver, null, 2, null);
          tmp$ret$0 = tmp0_safe_receiver_0 == null ? null : tmp0_safe_receiver_0.hn();
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    return tmp;
  }
  function get_capturedKClass(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4;
    var tmp;
    if (tmp0_subject instanceof ContextDescriptor) {
      tmp = _this__u8e3s4.go_1;
    } else {
      if (tmp0_subject instanceof SerialDescriptorForNullable) {
        tmp = get_capturedKClass(_this__u8e3s4.so_1);
      } else {
        tmp = null;
      }
    }
    return tmp;
  }
  function SerialDescriptor() {
  }
  SerialDescriptor.$metadata$ = interfaceMeta('SerialDescriptor');
  function get_elementDescriptors(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = new _no_name_provided__qut3iv(_this__u8e3s4);
    }
    return tmp$ret$0;
  }
  function elementDescriptors$1$1($this_elementDescriptors) {
    this.wo_1 = $this_elementDescriptors;
    this.vo_1 = $this_elementDescriptors.ko();
  }
  elementDescriptors$1$1.prototype.n = function () {
    return this.vo_1 > 0;
  };
  elementDescriptors$1$1.prototype.o = function () {
    var tmp = this.wo_1.ko();
    var tmp0_this = this;
    var tmp1 = tmp0_this.vo_1;
    tmp0_this.vo_1 = tmp1 - 1 | 0;
    return this.wo_1.oo(tmp - tmp1 | 0);
  };
  elementDescriptors$1$1.$metadata$ = classMeta(undefined, [Iterator]);
  function _no_name_provided__qut3iv($this_elementDescriptors) {
    this.xo_1 = $this_elementDescriptors;
  }
  _no_name_provided__qut3iv.prototype.h = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = new elementDescriptors$1$1(this.xo_1);
    }
    return tmp$ret$0;
  };
  _no_name_provided__qut3iv.$metadata$ = classMeta(undefined, [Iterable]);
  function buildSerialDescriptor(serialName, kind, typeParameters, builder) {
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = !isBlank(serialName);
      }
      var tmp0_require = tmp$ret$0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$1;
        {
          tmp$ret$1 = 'Blank serial names are prohibited';
        }
        var message = tmp$ret$1;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    {
      var tmp1_require = !equals(kind, CLASS_getInstance());
      {
      }
      if (!tmp1_require) {
        var tmp$ret$2;
        {
          tmp$ret$2 = "For StructureKind.CLASS please use 'buildClassSerialDescriptor' instead";
        }
        var message_0 = tmp$ret$2;
        throw IllegalArgumentException_init_$Create$(toString(message_0));
      }
    }
    var sdBuilder = new ClassSerialDescriptorBuilder(serialName);
    builder(sdBuilder);
    return new SerialDescriptorImpl(serialName, kind, sdBuilder.mn_1.m(), toList(typeParameters), sdBuilder);
  }
  function buildSerialDescriptor$default(serialName, kind, typeParameters, builder, $mask0, $handler) {
    if (!(($mask0 & 8) === 0)) {
      builder = buildSerialDescriptor$lambda();
    }
    return buildSerialDescriptor(serialName, kind, typeParameters, builder);
  }
  function ClassSerialDescriptorBuilder(serialName) {
    this.jn_1 = serialName;
    this.kn_1 = false;
    this.ln_1 = emptyList();
    this.mn_1 = ArrayList_init_$Create$_0();
    this.nn_1 = HashSet_init_$Create$();
    this.on_1 = ArrayList_init_$Create$_0();
    this.pn_1 = ArrayList_init_$Create$_0();
    this.qn_1 = ArrayList_init_$Create$_0();
  }
  ClassSerialDescriptorBuilder.prototype.yo = function (elementName, descriptor, annotations, isOptional) {
    {
      var tmp0_require = this.nn_1.b(elementName);
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = "Element with name '" + elementName + "' is already registered";
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    var tmp0_this = this;
    {
      var tmp1_plusAssign = tmp0_this.mn_1;
      tmp1_plusAssign.b(elementName);
    }
    var tmp1_this = this;
    {
      var tmp2_plusAssign = tmp1_this.on_1;
      tmp2_plusAssign.b(descriptor);
    }
    var tmp2_this = this;
    {
      var tmp3_plusAssign = tmp2_this.pn_1;
      tmp3_plusAssign.b(annotations);
    }
    var tmp3_this = this;
    {
      var tmp4_plusAssign = tmp3_this.qn_1;
      tmp4_plusAssign.b(isOptional);
    }
  };
  ClassSerialDescriptorBuilder.prototype.rn = function (elementName, descriptor, annotations, isOptional, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      annotations = emptyList();
    if (!(($mask0 & 8) === 0))
      isOptional = false;
    return this.yo(elementName, descriptor, annotations, isOptional);
  };
  ClassSerialDescriptorBuilder.$metadata$ = classMeta('ClassSerialDescriptorBuilder');
  function _get__hashCode__tgwhef($this) {
    var tmp$ret$0;
    {
      var tmp0_getValue = _hashCode$factory();
      tmp$ret$0 = $this.kp_1.n2();
    }
    return tmp$ret$0;
  }
  function SerialDescriptorImpl$_hashCode$delegate$lambda(this$0) {
    return function () {
      return hashCodeImpl(this$0, this$0.jp_1);
    };
  }
  function SerialDescriptorImpl$toString$lambda(this$0) {
    return function (it) {
      return this$0.qo(it) + ': ' + this$0.oo(it).io();
    };
  }
  function SerialDescriptorImpl(serialName, kind, elementsCount, typeParameters, builder) {
    this.zo_1 = serialName;
    this.ap_1 = kind;
    this.bp_1 = elementsCount;
    this.cp_1 = builder.ln_1;
    this.dp_1 = toHashSet(builder.mn_1);
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_toTypedArray = builder.mn_1;
      tmp$ret$0 = copyToArray(tmp0_toTypedArray);
    }
    tmp.ep_1 = tmp$ret$0;
    this.fp_1 = compactArray(builder.on_1);
    var tmp_0 = this;
    var tmp$ret$1;
    {
      var tmp0_toTypedArray_0 = builder.pn_1;
      tmp$ret$1 = copyToArray(tmp0_toTypedArray_0);
    }
    tmp_0.gp_1 = tmp$ret$1;
    this.hp_1 = toBooleanArray(builder.qn_1);
    var tmp_1 = this;
    var tmp$ret$4;
    {
      var tmp0_map = withIndex(this.ep_1);
      var tmp$ret$3;
      {
        var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
        var tmp0_iterator = tmp0_map.h();
        while (tmp0_iterator.n()) {
          var item = tmp0_iterator.o();
          var tmp$ret$2;
          {
            tmp$ret$2 = to(item.p3_1, item.o3_1);
          }
          tmp0_mapTo.b(tmp$ret$2);
        }
        tmp$ret$3 = tmp0_mapTo;
      }
      tmp$ret$4 = tmp$ret$3;
    }
    tmp_1.ip_1 = toMap(tmp$ret$4);
    this.jp_1 = compactArray(typeParameters);
    var tmp_2 = this;
    tmp_2.kp_1 = lazy_0(SerialDescriptorImpl$_hashCode$delegate$lambda(this));
  }
  SerialDescriptorImpl.prototype.io = function () {
    return this.zo_1;
  };
  SerialDescriptorImpl.prototype.mo = function () {
    return this.ap_1;
  };
  SerialDescriptorImpl.prototype.ko = function () {
    return this.bp_1;
  };
  SerialDescriptorImpl.prototype.jo = function () {
    return this.cp_1;
  };
  SerialDescriptorImpl.prototype.lp = function () {
    return this.dp_1;
  };
  SerialDescriptorImpl.prototype.qo = function (index) {
    return getChecked(this.ep_1, index);
  };
  SerialDescriptorImpl.prototype.po = function (name) {
    var tmp0_elvis_lhs = this.ip_1.b3(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      Companion_getInstance_2();
      tmp = -3;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  SerialDescriptorImpl.prototype.no = function (index) {
    return getChecked(this.gp_1, index);
  };
  SerialDescriptorImpl.prototype.oo = function (index) {
    return getChecked(this.fp_1, index);
  };
  SerialDescriptorImpl.prototype.ro = function (index) {
    return getChecked_0(this.hp_1, index);
  };
  SerialDescriptorImpl.prototype.equals = function (other) {
    var tmp$ret$0;
    $l$block_5: {
      if (this === other) {
        tmp$ret$0 = true;
        break $l$block_5;
      }
      if (!(other instanceof SerialDescriptorImpl)) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.io() === other.io())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var tmp$ret$1;
      {
        var tmp0__anonymous__q1qw7t = other;
        tmp$ret$1 = contentEquals(this.jp_1, tmp0__anonymous__q1qw7t.jp_1);
      }
      if (!tmp$ret$1) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.ko() === other.ko())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var inductionVariable = 0;
      var last = this.ko();
      if (inductionVariable < last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (!(this.oo(index).io() === other.oo(index).io())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
          if (!equals(this.oo(index).mo(), other.oo(index).mo())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
        }
         while (inductionVariable < last);
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  SerialDescriptorImpl.prototype.hashCode = function () {
    return _get__hashCode__tgwhef(this);
  };
  SerialDescriptorImpl.prototype.toString = function () {
    var tmp = until(0, this.bp_1);
    var tmp_0 = this.zo_1 + '(';
    return joinToString$default(tmp, ', ', tmp_0, ')', 0, null, SerialDescriptorImpl$toString$lambda(this), 24, null);
  };
  SerialDescriptorImpl.$metadata$ = classMeta('SerialDescriptorImpl', [SerialDescriptor, CachedNames]);
  function buildClassSerialDescriptor(serialName, typeParameters, builderAction) {
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = !isBlank(serialName);
      }
      var tmp0_require = tmp$ret$0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$1;
        {
          tmp$ret$1 = 'Blank serial names are prohibited';
        }
        var message = tmp$ret$1;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    var sdBuilder = new ClassSerialDescriptorBuilder(serialName);
    builderAction(sdBuilder);
    return new SerialDescriptorImpl(serialName, CLASS_getInstance(), sdBuilder.mn_1.m(), toList(typeParameters), sdBuilder);
  }
  function buildClassSerialDescriptor$default(serialName, typeParameters, builderAction, $mask0, $handler) {
    if (!(($mask0 & 4) === 0)) {
      builderAction = buildClassSerialDescriptor$lambda();
    }
    return buildClassSerialDescriptor(serialName, typeParameters, builderAction);
  }
  function PrimitiveSerialDescriptor(serialName, kind) {
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = !isBlank(serialName);
      }
      var tmp0_require = tmp$ret$0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$1;
        {
          tmp$ret$1 = 'Blank serial names are prohibited';
        }
        var message = tmp$ret$1;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    return PrimitiveDescriptorSafe(serialName, kind);
  }
  function buildSerialDescriptor$lambda() {
    return function ($this$null) {
      return Unit_getInstance();
    };
  }
  function buildClassSerialDescriptor$lambda() {
    return function ($this$null) {
      return Unit_getInstance();
    };
  }
  function _hashCode$factory() {
    return getPropertyCallableRef('_hashCode', 1, KProperty1, function (receiver) {
      return _get__hashCode__tgwhef(receiver);
    }, null);
  }
  function ENUM() {
    ENUM_instance = this;
    SerialKind.call(this);
  }
  ENUM.$metadata$ = objectMeta('ENUM', undefined, undefined, undefined, undefined, SerialKind.prototype);
  var ENUM_instance;
  function ENUM_getInstance() {
    if (ENUM_instance == null)
      new ENUM();
    return ENUM_instance;
  }
  function CONTEXTUAL() {
    CONTEXTUAL_instance = this;
    SerialKind.call(this);
  }
  CONTEXTUAL.$metadata$ = objectMeta('CONTEXTUAL', undefined, undefined, undefined, undefined, SerialKind.prototype);
  var CONTEXTUAL_instance;
  function CONTEXTUAL_getInstance() {
    if (CONTEXTUAL_instance == null)
      new CONTEXTUAL();
    return CONTEXTUAL_instance;
  }
  function SerialKind() {
  }
  SerialKind.prototype.toString = function () {
    return ensureNotNull(getKClassFromExpression(this).ei());
  };
  SerialKind.prototype.hashCode = function () {
    return getStringHashCode(this.toString());
  };
  SerialKind.$metadata$ = classMeta('SerialKind');
  function SEALED() {
    SEALED_instance = this;
    PolymorphicKind.call(this);
  }
  SEALED.$metadata$ = objectMeta('SEALED', undefined, undefined, undefined, undefined, PolymorphicKind.prototype);
  var SEALED_instance;
  function SEALED_getInstance() {
    if (SEALED_instance == null)
      new SEALED();
    return SEALED_instance;
  }
  function OPEN() {
    OPEN_instance = this;
    PolymorphicKind.call(this);
  }
  OPEN.$metadata$ = objectMeta('OPEN', undefined, undefined, undefined, undefined, PolymorphicKind.prototype);
  var OPEN_instance;
  function OPEN_getInstance() {
    if (OPEN_instance == null)
      new OPEN();
    return OPEN_instance;
  }
  function PolymorphicKind() {
    SerialKind.call(this);
  }
  PolymorphicKind.$metadata$ = classMeta('PolymorphicKind', undefined, undefined, undefined, undefined, SerialKind.prototype);
  function BOOLEAN() {
    BOOLEAN_instance = this;
    PrimitiveKind.call(this);
  }
  BOOLEAN.$metadata$ = objectMeta('BOOLEAN', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var BOOLEAN_instance;
  function BOOLEAN_getInstance() {
    if (BOOLEAN_instance == null)
      new BOOLEAN();
    return BOOLEAN_instance;
  }
  function BYTE() {
    BYTE_instance = this;
    PrimitiveKind.call(this);
  }
  BYTE.$metadata$ = objectMeta('BYTE', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var BYTE_instance;
  function BYTE_getInstance() {
    if (BYTE_instance == null)
      new BYTE();
    return BYTE_instance;
  }
  function CHAR() {
    CHAR_instance = this;
    PrimitiveKind.call(this);
  }
  CHAR.$metadata$ = objectMeta('CHAR', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var CHAR_instance;
  function CHAR_getInstance() {
    if (CHAR_instance == null)
      new CHAR();
    return CHAR_instance;
  }
  function SHORT() {
    SHORT_instance = this;
    PrimitiveKind.call(this);
  }
  SHORT.$metadata$ = objectMeta('SHORT', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var SHORT_instance;
  function SHORT_getInstance() {
    if (SHORT_instance == null)
      new SHORT();
    return SHORT_instance;
  }
  function INT() {
    INT_instance = this;
    PrimitiveKind.call(this);
  }
  INT.$metadata$ = objectMeta('INT', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var INT_instance;
  function INT_getInstance() {
    if (INT_instance == null)
      new INT();
    return INT_instance;
  }
  function LONG() {
    LONG_instance = this;
    PrimitiveKind.call(this);
  }
  LONG.$metadata$ = objectMeta('LONG', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var LONG_instance;
  function LONG_getInstance() {
    if (LONG_instance == null)
      new LONG();
    return LONG_instance;
  }
  function FLOAT() {
    FLOAT_instance = this;
    PrimitiveKind.call(this);
  }
  FLOAT.$metadata$ = objectMeta('FLOAT', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var FLOAT_instance;
  function FLOAT_getInstance() {
    if (FLOAT_instance == null)
      new FLOAT();
    return FLOAT_instance;
  }
  function DOUBLE() {
    DOUBLE_instance = this;
    PrimitiveKind.call(this);
  }
  DOUBLE.$metadata$ = objectMeta('DOUBLE', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var DOUBLE_instance;
  function DOUBLE_getInstance() {
    if (DOUBLE_instance == null)
      new DOUBLE();
    return DOUBLE_instance;
  }
  function STRING() {
    STRING_instance = this;
    PrimitiveKind.call(this);
  }
  STRING.$metadata$ = objectMeta('STRING', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var STRING_instance;
  function STRING_getInstance() {
    if (STRING_instance == null)
      new STRING();
    return STRING_instance;
  }
  function PrimitiveKind() {
    SerialKind.call(this);
  }
  PrimitiveKind.$metadata$ = classMeta('PrimitiveKind', undefined, undefined, undefined, undefined, SerialKind.prototype);
  function CLASS() {
    CLASS_instance = this;
    StructureKind.call(this);
  }
  CLASS.$metadata$ = objectMeta('CLASS', undefined, undefined, undefined, undefined, StructureKind.prototype);
  var CLASS_instance;
  function CLASS_getInstance() {
    if (CLASS_instance == null)
      new CLASS();
    return CLASS_instance;
  }
  function LIST() {
    LIST_instance = this;
    StructureKind.call(this);
  }
  LIST.$metadata$ = objectMeta('LIST', undefined, undefined, undefined, undefined, StructureKind.prototype);
  var LIST_instance;
  function LIST_getInstance() {
    if (LIST_instance == null)
      new LIST();
    return LIST_instance;
  }
  function MAP() {
    MAP_instance = this;
    StructureKind.call(this);
  }
  MAP.$metadata$ = objectMeta('MAP', undefined, undefined, undefined, undefined, StructureKind.prototype);
  var MAP_instance;
  function MAP_getInstance() {
    if (MAP_instance == null)
      new MAP();
    return MAP_instance;
  }
  function OBJECT() {
    OBJECT_instance = this;
    StructureKind.call(this);
  }
  OBJECT.$metadata$ = objectMeta('OBJECT', undefined, undefined, undefined, undefined, StructureKind.prototype);
  var OBJECT_instance;
  function OBJECT_getInstance() {
    if (OBJECT_instance == null)
      new OBJECT();
    return OBJECT_instance;
  }
  function StructureKind() {
    SerialKind.call(this);
  }
  StructureKind.$metadata$ = classMeta('StructureKind', undefined, undefined, undefined, undefined, SerialKind.prototype);
  function AbstractDecoder() {
  }
  AbstractDecoder.prototype.mp = function () {
    throw SerializationException_init_$Create$('' + getKClassFromExpression(this) + " can't retrieve untyped values");
  };
  AbstractDecoder.prototype.np = function () {
    return true;
  };
  AbstractDecoder.prototype.op = function () {
    return null;
  };
  AbstractDecoder.prototype.pp = function () {
    var tmp = this.mp();
    return typeof tmp === 'boolean' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.qp = function () {
    var tmp = this.mp();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.rp = function () {
    var tmp = this.mp();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.sp = function () {
    var tmp = this.mp();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.tp = function () {
    var tmp = this.mp();
    return tmp instanceof Long ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.up = function () {
    var tmp = this.mp();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.vp = function () {
    var tmp = this.mp();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.wp = function () {
    var tmp = this.mp();
    return tmp instanceof Char ? tmp.p1_1 : THROW_CCE();
  };
  AbstractDecoder.prototype.xp = function () {
    var tmp = this.mp();
    return typeof tmp === 'string' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.yp = function (deserializer, previousValue) {
    return this.zp(deserializer);
  };
  AbstractDecoder.prototype.aq = function (descriptor) {
    return this;
  };
  AbstractDecoder.prototype.bq = function (descriptor) {
  };
  AbstractDecoder.prototype.cq = function (descriptor, index) {
    return this.pp();
  };
  AbstractDecoder.prototype.dq = function (descriptor, index) {
    return this.qp();
  };
  AbstractDecoder.prototype.eq = function (descriptor, index) {
    return this.rp();
  };
  AbstractDecoder.prototype.fq = function (descriptor, index) {
    return this.sp();
  };
  AbstractDecoder.prototype.gq = function (descriptor, index) {
    return this.tp();
  };
  AbstractDecoder.prototype.hq = function (descriptor, index) {
    return this.up();
  };
  AbstractDecoder.prototype.iq = function (descriptor, index) {
    return this.vp();
  };
  AbstractDecoder.prototype.jq = function (descriptor, index) {
    return this.wp();
  };
  AbstractDecoder.prototype.kq = function (descriptor, index) {
    return this.xp();
  };
  AbstractDecoder.prototype.lq = function (descriptor, index, deserializer, previousValue) {
    return this.yp(deserializer, previousValue);
  };
  AbstractDecoder.$metadata$ = classMeta('AbstractDecoder', [Decoder, CompositeDecoder]);
  function Decoder() {
  }
  Decoder.$metadata$ = interfaceMeta('Decoder');
  function Companion() {
    Companion_instance = this;
    this.qq_1 = -1;
    this.rq_1 = -3;
  }
  Companion.prototype.sq = function () {
    return this.qq_1;
  };
  Companion.$metadata$ = objectMeta('Companion');
  var Companion_instance;
  function Companion_getInstance_2() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function CompositeDecoder() {
  }
  CompositeDecoder.$metadata$ = interfaceMeta('CompositeDecoder');
  function decodeStructure(_this__u8e3s4, descriptor, block) {
    var composite = _this__u8e3s4.aq(descriptor);
    var result = block(composite);
    composite.bq(descriptor);
    return result;
  }
  function decodeSequentially_0($this, compositeDecoder) {
    var klassName = compositeDecoder.kq($this.hn(), 0);
    var serializer = findPolymorphicSerializer($this, compositeDecoder, klassName);
    var tmp = $this.hn();
    return compositeDecoder.mq(tmp, 1, serializer, null, 8, null);
  }
  function AbstractPolymorphicSerializer() {
  }
  AbstractPolymorphicSerializer.prototype.in = function (decoder) {
    var tmp$ret$5;
    {
      var tmp0_decodeStructure = this.hn();
      var composite = decoder.aq(tmp0_decodeStructure);
      var tmp$ret$0;
      $l$block: {
        var klassName = null;
        var value = null;
        if (composite.nq()) {
          tmp$ret$0 = decodeSequentially_0(this, composite);
          break $l$block;
        }
        mainLoop: while (true) {
          var index = composite.oq(this.hn());
          Companion_getInstance_2();
          if (index === -1) {
            break mainLoop;
          } else {
            if (index === 0) {
              klassName = composite.kq(this.hn(), index);
            } else {
              if (index === 1) {
                var tmp$ret$2;
                $l$block_0: {
                  var tmp0_requireNotNull = klassName;
                  {
                  }
                  if (tmp0_requireNotNull == null) {
                    var tmp$ret$1;
                    {
                      tmp$ret$1 = 'Cannot read polymorphic value before its type token';
                    }
                    var message = tmp$ret$1;
                    throw IllegalArgumentException_init_$Create$(toString(message));
                  } else {
                    tmp$ret$2 = tmp0_requireNotNull;
                    break $l$block_0;
                  }
                }
                klassName = tmp$ret$2;
                var serializer = findPolymorphicSerializer(this, composite, klassName);
                var tmp = this.hn();
                value = composite.mq(tmp, index, serializer, null, 8, null);
              } else {
                var tmp0_elvis_lhs = klassName;
                throw SerializationException_init_$Create$('Invalid index in polymorphic deserialization of ' + (tmp0_elvis_lhs == null ? 'unknown class' : tmp0_elvis_lhs) + ('\n Expected 0, 1 or DECODE_DONE(-1), but found ' + index));
              }
            }
          }
        }
        var tmp$ret$4;
        $l$block_1: {
          var tmp1_requireNotNull = value;
          {
          }
          if (tmp1_requireNotNull == null) {
            var tmp$ret$3;
            {
              tmp$ret$3 = 'Polymorphic value has not been read for class ' + klassName;
            }
            var message_0 = tmp$ret$3;
            throw IllegalArgumentException_init_$Create$(toString(message_0));
          } else {
            tmp$ret$4 = tmp1_requireNotNull;
            break $l$block_1;
          }
        }
        var tmp_0 = tmp$ret$4;
        tmp$ret$0 = isObject(tmp_0) ? tmp_0 : THROW_CCE();
      }
      var result = tmp$ret$0;
      composite.bq(tmp0_decodeStructure);
      tmp$ret$5 = result;
    }
    return tmp$ret$5;
  };
  AbstractPolymorphicSerializer.prototype.wn = function (decoder, klassName) {
    return decoder.yn().tq(this.vn(), klassName);
  };
  AbstractPolymorphicSerializer.$metadata$ = classMeta('AbstractPolymorphicSerializer', [KSerializer]);
  function throwSubtypeNotRegistered(subClassName, baseClass) {
    var scope = "in the scope of '" + baseClass.ei() + "'";
    throw SerializationException_init_$Create$(subClassName == null ? 'Class discriminator was missing and no default polymorphic serializers were registered ' + scope : "Class '" + subClassName + "' is not registered for polymorphic serialization " + scope + '.\n' + "Mark the base class as 'sealed' or register the serializer explicitly.");
  }
  function DurationSerializer() {
    DurationSerializer_instance = this;
    this.uq_1 = new PrimitiveSerialDescriptor_0('kotlin.time.Duration', STRING_getInstance());
  }
  DurationSerializer.prototype.hn = function () {
    return this.uq_1;
  };
  DurationSerializer.prototype.vq = function (decoder) {
    return Companion_getInstance().kb(decoder.xp());
  };
  DurationSerializer.prototype.in = function (decoder) {
    return new Duration(this.vq(decoder));
  };
  DurationSerializer.$metadata$ = objectMeta('DurationSerializer', [KSerializer]);
  var DurationSerializer_instance;
  function DurationSerializer_getInstance() {
    if (DurationSerializer_instance == null)
      new DurationSerializer();
    return DurationSerializer_instance;
  }
  function CachedNames() {
  }
  CachedNames.$metadata$ = interfaceMeta('CachedNames');
  function PrimitiveArrayDescriptor(primitive) {
    ListLikeDescriptor.call(this, primitive);
    this.yq_1 = primitive.io() + 'Array';
  }
  PrimitiveArrayDescriptor.prototype.io = function () {
    return this.yq_1;
  };
  PrimitiveArrayDescriptor.$metadata$ = classMeta('PrimitiveArrayDescriptor', undefined, undefined, undefined, undefined, ListLikeDescriptor.prototype);
  function ArrayClassDesc(elementDesc) {
    ListLikeDescriptor.call(this, elementDesc);
  }
  ArrayClassDesc.prototype.io = function () {
    return 'kotlin.Array';
  };
  ArrayClassDesc.$metadata$ = classMeta('ArrayClassDesc', undefined, undefined, undefined, undefined, ListLikeDescriptor.prototype);
  function HashMapClassDesc(keyDesc, valueDesc) {
    MapLikeDescriptor.call(this, 'kotlin.collections.HashMap', keyDesc, valueDesc);
  }
  HashMapClassDesc.$metadata$ = classMeta('HashMapClassDesc', undefined, undefined, undefined, undefined, MapLikeDescriptor.prototype);
  function LinkedHashMapClassDesc(keyDesc, valueDesc) {
    MapLikeDescriptor.call(this, 'kotlin.collections.LinkedHashMap', keyDesc, valueDesc);
  }
  LinkedHashMapClassDesc.$metadata$ = classMeta('LinkedHashMapClassDesc', undefined, undefined, undefined, undefined, MapLikeDescriptor.prototype);
  function ListLikeDescriptor(elementDescriptor) {
    this.zq_1 = elementDescriptor;
    this.ar_1 = 1;
  }
  ListLikeDescriptor.prototype.mo = function () {
    return LIST_getInstance();
  };
  ListLikeDescriptor.prototype.ko = function () {
    return this.ar_1;
  };
  ListLikeDescriptor.prototype.qo = function (index) {
    return index.toString();
  };
  ListLikeDescriptor.prototype.po = function (name) {
    var tmp0_elvis_lhs = toIntOrNull(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalArgumentException_init_$Create$(name + ' is not a valid list index');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  ListLikeDescriptor.prototype.ro = function (index) {
    {
      var tmp0_require = index >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Illegal index ' + index + ', ' + this.io() + ' expects only non-negative indices';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    return false;
  };
  ListLikeDescriptor.prototype.no = function (index) {
    {
      var tmp0_require = index >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Illegal index ' + index + ', ' + this.io() + ' expects only non-negative indices';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    return emptyList();
  };
  ListLikeDescriptor.prototype.oo = function (index) {
    {
      var tmp0_require = index >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Illegal index ' + index + ', ' + this.io() + ' expects only non-negative indices';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    return this.zq_1;
  };
  ListLikeDescriptor.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof ListLikeDescriptor))
      return false;
    if (equals(this.zq_1, other.zq_1) ? this.io() === other.io() : false)
      return true;
    return false;
  };
  ListLikeDescriptor.prototype.hashCode = function () {
    return imul(hashCode(this.zq_1), 31) + getStringHashCode(this.io()) | 0;
  };
  ListLikeDescriptor.prototype.toString = function () {
    return this.io() + '(' + this.zq_1 + ')';
  };
  ListLikeDescriptor.$metadata$ = classMeta('ListLikeDescriptor', [SerialDescriptor]);
  function MapLikeDescriptor(serialName, keyDescriptor, valueDescriptor) {
    this.dr_1 = serialName;
    this.er_1 = keyDescriptor;
    this.fr_1 = valueDescriptor;
    this.gr_1 = 2;
  }
  MapLikeDescriptor.prototype.io = function () {
    return this.dr_1;
  };
  MapLikeDescriptor.prototype.mo = function () {
    return MAP_getInstance();
  };
  MapLikeDescriptor.prototype.ko = function () {
    return this.gr_1;
  };
  MapLikeDescriptor.prototype.qo = function (index) {
    return index.toString();
  };
  MapLikeDescriptor.prototype.po = function (name) {
    var tmp0_elvis_lhs = toIntOrNull(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalArgumentException_init_$Create$(name + ' is not a valid map index');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  MapLikeDescriptor.prototype.ro = function (index) {
    {
      var tmp0_require = index >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Illegal index ' + index + ', ' + this.io() + ' expects only non-negative indices';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    return false;
  };
  MapLikeDescriptor.prototype.no = function (index) {
    {
      var tmp0_require = index >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Illegal index ' + index + ', ' + this.io() + ' expects only non-negative indices';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    return emptyList();
  };
  MapLikeDescriptor.prototype.oo = function (index) {
    {
      var tmp0_require = index >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Illegal index ' + index + ', ' + this.io() + ' expects only non-negative indices';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    var tmp0_subject = index % 2 | 0;
    var tmp;
    switch (tmp0_subject) {
      case 0:
        tmp = this.er_1;
        break;
      case 1:
        tmp = this.fr_1;
        break;
      default:
        throw IllegalStateException_init_$Create$('Unreached');
    }
    return tmp;
  };
  MapLikeDescriptor.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MapLikeDescriptor))
      return false;
    if (!(this.io() === other.io()))
      return false;
    if (!equals(this.er_1, other.er_1))
      return false;
    if (!equals(this.fr_1, other.fr_1))
      return false;
    return true;
  };
  MapLikeDescriptor.prototype.hashCode = function () {
    var result = getStringHashCode(this.io());
    result = imul(31, result) + hashCode(this.er_1) | 0;
    result = imul(31, result) + hashCode(this.fr_1) | 0;
    return result;
  };
  MapLikeDescriptor.prototype.toString = function () {
    return this.io() + '(' + this.er_1 + ', ' + this.fr_1 + ')';
  };
  MapLikeDescriptor.$metadata$ = classMeta('MapLikeDescriptor', [SerialDescriptor]);
  function ArrayListClassDesc(elementDesc) {
    ListLikeDescriptor.call(this, elementDesc);
  }
  ArrayListClassDesc.prototype.io = function () {
    return 'kotlin.collections.ArrayList';
  };
  ArrayListClassDesc.$metadata$ = classMeta('ArrayListClassDesc', undefined, undefined, undefined, undefined, ListLikeDescriptor.prototype);
  function HashSetClassDesc(elementDesc) {
    ListLikeDescriptor.call(this, elementDesc);
  }
  HashSetClassDesc.prototype.io = function () {
    return 'kotlin.collections.HashSet';
  };
  HashSetClassDesc.$metadata$ = classMeta('HashSetClassDesc', undefined, undefined, undefined, undefined, ListLikeDescriptor.prototype);
  function LinkedHashSetClassDesc(elementDesc) {
    ListLikeDescriptor.call(this, elementDesc);
  }
  LinkedHashSetClassDesc.prototype.io = function () {
    return 'kotlin.collections.LinkedHashSet';
  };
  LinkedHashSetClassDesc.$metadata$ = classMeta('LinkedHashSetClassDesc', undefined, undefined, undefined, undefined, ListLikeDescriptor.prototype);
  function PrimitiveArraySerializer(primitiveSerializer) {
    CollectionLikeSerializer.call(this, primitiveSerializer);
    this.or_1 = new PrimitiveArrayDescriptor(primitiveSerializer.hn());
  }
  PrimitiveArraySerializer.prototype.hn = function () {
    return this.or_1;
  };
  PrimitiveArraySerializer.prototype.pr = function (_this__u8e3s4) {
    return _this__u8e3s4.qr();
  };
  PrimitiveArraySerializer.prototype.rr = function (_this__u8e3s4) {
    return _this__u8e3s4.sr();
  };
  PrimitiveArraySerializer.prototype.tr = function (_this__u8e3s4, size) {
    return _this__u8e3s4.wf(size);
  };
  PrimitiveArraySerializer.prototype.ur = function (_this__u8e3s4, index, element) {
    throw IllegalStateException_init_$Create$('This method lead to boxing and must not be used, use Builder.append instead');
  };
  PrimitiveArraySerializer.prototype.vr = function () {
    return this.xr(this.wr());
  };
  PrimitiveArraySerializer.prototype.in = function (decoder) {
    return this.as(decoder, null);
  };
  PrimitiveArraySerializer.$metadata$ = classMeta('PrimitiveArraySerializer', undefined, undefined, undefined, undefined, CollectionLikeSerializer.prototype);
  function PrimitiveArrayBuilder() {
  }
  PrimitiveArrayBuilder.prototype.ds = function (requiredCapacity, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      requiredCapacity = this.qr() + 1 | 0;
    return $handler == null ? this.wf(requiredCapacity) : $handler(requiredCapacity);
  };
  PrimitiveArrayBuilder.$metadata$ = classMeta('PrimitiveArrayBuilder');
  function CollectionLikeSerializer(elementSerializer) {
    AbstractCollectionSerializer.call(this);
    this.bs_1 = elementSerializer;
  }
  CollectionLikeSerializer.prototype.cs = function (decoder, builder, startIndex, size) {
    {
      var tmp0_require = size >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Size must be known in advance when using READ_ALL';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.yr(decoder, startIndex + index | 0, builder, false);
      }
       while (inductionVariable < size);
  };
  CollectionLikeSerializer.prototype.yr = function (decoder, index, builder, checkIndex) {
    var tmp = this.hn();
    this.ur(builder, index, decoder.mq(tmp, index, this.bs_1, null, 8, null));
  };
  CollectionLikeSerializer.$metadata$ = classMeta('CollectionLikeSerializer', undefined, undefined, undefined, undefined, AbstractCollectionSerializer.prototype);
  function readSize($this, decoder, builder) {
    var size = decoder.pq($this.hn());
    $this.tr(builder, size);
    return size;
  }
  function AbstractCollectionSerializer() {
  }
  AbstractCollectionSerializer.prototype.as = function (decoder, previous) {
    var tmp0_safe_receiver = previous;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : this.xr(tmp0_safe_receiver);
    var builder = tmp1_elvis_lhs == null ? this.vr() : tmp1_elvis_lhs;
    var startIndex = this.pr(builder);
    var compositeDecoder = decoder.aq(this.hn());
    if (compositeDecoder.nq()) {
      this.cs(compositeDecoder, builder, startIndex, readSize(this, compositeDecoder, builder));
    } else {
      $l$loop: while (true) {
        var index = compositeDecoder.oq(this.hn());
        Companion_getInstance_2();
        if (index === -1)
          break $l$loop;
        var tmp = startIndex + index | 0;
        this.zr(compositeDecoder, tmp, builder, false, 8, null);
      }
    }
    compositeDecoder.bq(this.hn());
    return this.rr(builder);
  };
  AbstractCollectionSerializer.prototype.in = function (decoder) {
    return this.as(decoder, null);
  };
  AbstractCollectionSerializer.prototype.zr = function (decoder, index, builder, checkIndex, $mask0, $handler) {
    if (!(($mask0 & 8) === 0))
      checkIndex = true;
    return $handler == null ? this.yr(decoder, index, builder, checkIndex) : $handler(decoder, index, builder, checkIndex);
  };
  AbstractCollectionSerializer.$metadata$ = classMeta('AbstractCollectionSerializer', [KSerializer]);
  function CollectionSerializer(element) {
    CollectionLikeSerializer.call(this, element);
  }
  CollectionSerializer.$metadata$ = classMeta('CollectionSerializer', undefined, undefined, undefined, undefined, CollectionLikeSerializer.prototype);
  function ReferenceArraySerializer(kClass, eSerializer) {
    CollectionLikeSerializer.call(this, eSerializer);
    this.fs_1 = kClass;
    this.gs_1 = new ArrayClassDesc(eSerializer.hn());
  }
  ReferenceArraySerializer.prototype.hn = function () {
    return this.gs_1;
  };
  ReferenceArraySerializer.prototype.vr = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    return tmp$ret$0;
  };
  ReferenceArraySerializer.prototype.hs = function (_this__u8e3s4) {
    return _this__u8e3s4.m();
  };
  ReferenceArraySerializer.prototype.pr = function (_this__u8e3s4) {
    return this.hs(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE());
  };
  ReferenceArraySerializer.prototype.is = function (_this__u8e3s4) {
    return toNativeArrayImpl(_this__u8e3s4, this.fs_1);
  };
  ReferenceArraySerializer.prototype.rr = function (_this__u8e3s4) {
    return this.is(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE());
  };
  ReferenceArraySerializer.prototype.js = function (_this__u8e3s4) {
    return ArrayList_init_$Create$_1(asList(_this__u8e3s4));
  };
  ReferenceArraySerializer.prototype.xr = function (_this__u8e3s4) {
    return this.js((!(_this__u8e3s4 == null) ? isArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ReferenceArraySerializer.prototype.ks = function (_this__u8e3s4, size) {
    return _this__u8e3s4.wf(size);
  };
  ReferenceArraySerializer.prototype.tr = function (_this__u8e3s4, size) {
    return this.ks(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE(), size);
  };
  ReferenceArraySerializer.prototype.ls = function (_this__u8e3s4, index, element) {
    _this__u8e3s4.cf(index, element);
  };
  ReferenceArraySerializer.prototype.ur = function (_this__u8e3s4, index, element) {
    var tmp = _this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE();
    return this.ls(tmp, index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  ReferenceArraySerializer.$metadata$ = classMeta('ReferenceArraySerializer', undefined, undefined, undefined, undefined, CollectionLikeSerializer.prototype);
  function MapLikeSerializer(keySerializer, valueSerializer) {
    AbstractCollectionSerializer.call(this);
    this.ms_1 = keySerializer;
    this.ns_1 = valueSerializer;
  }
  MapLikeSerializer.prototype.cs = function (decoder, builder, startIndex, size) {
    {
      var tmp0_require = size >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Size must be known in advance when using READ_ALL';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    var progression = step(until(0, imul(size, 2)), 2);
    var inductionVariable = progression.g1_1;
    var last = progression.h1_1;
    var step_0 = progression.i1_1;
    if ((step_0 > 0 ? inductionVariable <= last : false) ? true : step_0 < 0 ? last <= inductionVariable : false)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + step_0 | 0;
        this.yr(decoder, startIndex + index | 0, builder, false);
      }
       while (!(index === last));
  };
  MapLikeSerializer.prototype.yr = function (decoder, index, builder, checkIndex) {
    var tmp = this.hn();
    var key = decoder.mq(tmp, index, this.ms_1, null, 8, null);
    var tmp_0;
    if (checkIndex) {
      var tmp$ret$1;
      {
        var tmp0_also = decoder.oq(this.hn());
        {
        }
        {
          {
            var tmp0_require = tmp0_also === (index + 1 | 0);
            {
            }
            if (!tmp0_require) {
              var tmp$ret$0;
              {
                tmp$ret$0 = 'Value must follow key in a map, index for key: ' + index + ', returned index for value: ' + tmp0_also;
              }
              var message = tmp$ret$0;
              throw IllegalArgumentException_init_$Create$(toString(message));
            }
          }
        }
        tmp$ret$1 = tmp0_also;
      }
      tmp_0 = tmp$ret$1;
    } else {
      tmp_0 = index + 1 | 0;
    }
    var vIndex = tmp_0;
    var tmp_1;
    var tmp_2;
    if (builder.v2(key)) {
      var tmp_3 = this.ns_1.hn().mo();
      tmp_2 = !(tmp_3 instanceof PrimitiveKind);
    } else {
      tmp_2 = false;
    }
    if (tmp_2) {
      tmp_1 = decoder.lq(this.hn(), vIndex, this.ns_1, getValue(builder, key));
    } else {
      var tmp_4 = this.hn();
      tmp_1 = decoder.mq(tmp_4, vIndex, this.ns_1, null, 8, null);
    }
    var value = tmp_1;
    {
      builder.a(key, value);
    }
  };
  MapLikeSerializer.$metadata$ = classMeta('MapLikeSerializer', undefined, undefined, undefined, undefined, AbstractCollectionSerializer.prototype);
  function HashMapSerializer(kSerializer, vSerializer) {
    MapLikeSerializer.call(this, kSerializer, vSerializer);
    this.qs_1 = new HashMapClassDesc(kSerializer.hn(), vSerializer.hn());
  }
  HashMapSerializer.prototype.hn = function () {
    return this.qs_1;
  };
  HashMapSerializer.prototype.vr = function () {
    return HashMap_init_$Create$();
  };
  HashMapSerializer.prototype.rs = function (_this__u8e3s4) {
    return imul(_this__u8e3s4.m(), 2);
  };
  HashMapSerializer.prototype.pr = function (_this__u8e3s4) {
    return this.rs(_this__u8e3s4 instanceof HashMap ? _this__u8e3s4 : THROW_CCE());
  };
  HashMapSerializer.prototype.ss = function (_this__u8e3s4) {
    return _this__u8e3s4;
  };
  HashMapSerializer.prototype.rr = function (_this__u8e3s4) {
    return this.ss(_this__u8e3s4 instanceof HashMap ? _this__u8e3s4 : THROW_CCE());
  };
  HashMapSerializer.prototype.ts = function (_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof HashMap ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? HashMap_init_$Create$_0(_this__u8e3s4) : tmp0_elvis_lhs;
  };
  HashMapSerializer.prototype.xr = function (_this__u8e3s4) {
    return this.ts((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Map) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  HashMapSerializer.prototype.us = function (_this__u8e3s4, size) {
  };
  HashMapSerializer.prototype.tr = function (_this__u8e3s4, size) {
    return this.us(_this__u8e3s4 instanceof HashMap ? _this__u8e3s4 : THROW_CCE(), size);
  };
  HashMapSerializer.$metadata$ = classMeta('HashMapSerializer', undefined, undefined, undefined, undefined, MapLikeSerializer.prototype);
  function LinkedHashMapSerializer(kSerializer, vSerializer) {
    MapLikeSerializer.call(this, kSerializer, vSerializer);
    this.xs_1 = new LinkedHashMapClassDesc(kSerializer.hn(), vSerializer.hn());
  }
  LinkedHashMapSerializer.prototype.hn = function () {
    return this.xs_1;
  };
  LinkedHashMapSerializer.prototype.vr = function () {
    return LinkedHashMap_init_$Create$();
  };
  LinkedHashMapSerializer.prototype.ys = function (_this__u8e3s4) {
    return imul(_this__u8e3s4.m(), 2);
  };
  LinkedHashMapSerializer.prototype.pr = function (_this__u8e3s4) {
    return this.ys(_this__u8e3s4 instanceof LinkedHashMap ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashMapSerializer.prototype.zs = function (_this__u8e3s4) {
    return _this__u8e3s4;
  };
  LinkedHashMapSerializer.prototype.rr = function (_this__u8e3s4) {
    return this.zs(_this__u8e3s4 instanceof LinkedHashMap ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashMapSerializer.prototype.ts = function (_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof LinkedHashMap ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? LinkedHashMap_init_$Create$_0(_this__u8e3s4) : tmp0_elvis_lhs;
  };
  LinkedHashMapSerializer.prototype.xr = function (_this__u8e3s4) {
    return this.ts((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Map) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashMapSerializer.prototype.at = function (_this__u8e3s4, size) {
  };
  LinkedHashMapSerializer.prototype.tr = function (_this__u8e3s4, size) {
    return this.at(_this__u8e3s4 instanceof LinkedHashMap ? _this__u8e3s4 : THROW_CCE(), size);
  };
  LinkedHashMapSerializer.$metadata$ = classMeta('LinkedHashMapSerializer', undefined, undefined, undefined, undefined, MapLikeSerializer.prototype);
  function ArrayListSerializer(element) {
    CollectionSerializer.call(this, element);
    this.ct_1 = new ArrayListClassDesc(element.hn());
  }
  ArrayListSerializer.prototype.hn = function () {
    return this.ct_1;
  };
  ArrayListSerializer.prototype.vr = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    return tmp$ret$0;
  };
  ArrayListSerializer.prototype.dt = function (_this__u8e3s4) {
    return _this__u8e3s4.m();
  };
  ArrayListSerializer.prototype.pr = function (_this__u8e3s4) {
    return this.dt(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE());
  };
  ArrayListSerializer.prototype.et = function (_this__u8e3s4) {
    return _this__u8e3s4;
  };
  ArrayListSerializer.prototype.rr = function (_this__u8e3s4) {
    return this.et(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE());
  };
  ArrayListSerializer.prototype.ft = function (_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? ArrayList_init_$Create$_1(_this__u8e3s4) : tmp0_elvis_lhs;
  };
  ArrayListSerializer.prototype.xr = function (_this__u8e3s4) {
    return this.ft((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, List) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ArrayListSerializer.prototype.gt = function (_this__u8e3s4, size) {
    return _this__u8e3s4.wf(size);
  };
  ArrayListSerializer.prototype.tr = function (_this__u8e3s4, size) {
    return this.gt(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE(), size);
  };
  ArrayListSerializer.prototype.ht = function (_this__u8e3s4, index, element) {
    _this__u8e3s4.cf(index, element);
  };
  ArrayListSerializer.prototype.ur = function (_this__u8e3s4, index, element) {
    var tmp = _this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE();
    return this.ht(tmp, index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  ArrayListSerializer.$metadata$ = classMeta('ArrayListSerializer', undefined, undefined, undefined, undefined, CollectionSerializer.prototype);
  function HashSetSerializer(eSerializer) {
    CollectionSerializer.call(this, eSerializer);
    this.jt_1 = new HashSetClassDesc(eSerializer.hn());
  }
  HashSetSerializer.prototype.hn = function () {
    return this.jt_1;
  };
  HashSetSerializer.prototype.vr = function () {
    return HashSet_init_$Create$();
  };
  HashSetSerializer.prototype.kt = function (_this__u8e3s4) {
    return _this__u8e3s4.m();
  };
  HashSetSerializer.prototype.pr = function (_this__u8e3s4) {
    return this.kt(_this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : THROW_CCE());
  };
  HashSetSerializer.prototype.lt = function (_this__u8e3s4) {
    return _this__u8e3s4;
  };
  HashSetSerializer.prototype.rr = function (_this__u8e3s4) {
    return this.lt(_this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : THROW_CCE());
  };
  HashSetSerializer.prototype.mt = function (_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? HashSet_init_$Create$_0(_this__u8e3s4) : tmp0_elvis_lhs;
  };
  HashSetSerializer.prototype.xr = function (_this__u8e3s4) {
    return this.mt((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Set) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  HashSetSerializer.prototype.nt = function (_this__u8e3s4, size) {
  };
  HashSetSerializer.prototype.tr = function (_this__u8e3s4, size) {
    return this.nt(_this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : THROW_CCE(), size);
  };
  HashSetSerializer.prototype.ot = function (_this__u8e3s4, index, element) {
    _this__u8e3s4.b(element);
  };
  HashSetSerializer.prototype.ur = function (_this__u8e3s4, index, element) {
    var tmp = _this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : THROW_CCE();
    return this.ot(tmp, index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  HashSetSerializer.$metadata$ = classMeta('HashSetSerializer', undefined, undefined, undefined, undefined, CollectionSerializer.prototype);
  function LinkedHashSetSerializer(eSerializer) {
    CollectionSerializer.call(this, eSerializer);
    this.qt_1 = new LinkedHashSetClassDesc(eSerializer.hn());
  }
  LinkedHashSetSerializer.prototype.hn = function () {
    return this.qt_1;
  };
  LinkedHashSetSerializer.prototype.vr = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashSet_init_$Create$();
    }
    return tmp$ret$0;
  };
  LinkedHashSetSerializer.prototype.rt = function (_this__u8e3s4) {
    return _this__u8e3s4.m();
  };
  LinkedHashSetSerializer.prototype.pr = function (_this__u8e3s4) {
    return this.rt(_this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashSetSerializer.prototype.st = function (_this__u8e3s4) {
    return _this__u8e3s4;
  };
  LinkedHashSetSerializer.prototype.rr = function (_this__u8e3s4) {
    return this.st(_this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashSetSerializer.prototype.mt = function (_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? LinkedHashSet_init_$Create$_0(_this__u8e3s4) : tmp0_elvis_lhs;
  };
  LinkedHashSetSerializer.prototype.xr = function (_this__u8e3s4) {
    return this.mt((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Set) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashSetSerializer.prototype.tt = function (_this__u8e3s4, size) {
  };
  LinkedHashSetSerializer.prototype.tr = function (_this__u8e3s4, size) {
    return this.tt(_this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : THROW_CCE(), size);
  };
  LinkedHashSetSerializer.prototype.ut = function (_this__u8e3s4, index, element) {
    _this__u8e3s4.b(element);
  };
  LinkedHashSetSerializer.prototype.ur = function (_this__u8e3s4, index, element) {
    var tmp = _this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : THROW_CCE();
    return this.ut(tmp, index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  LinkedHashSetSerializer.$metadata$ = classMeta('LinkedHashSetSerializer', undefined, undefined, undefined, undefined, CollectionSerializer.prototype);
  function Companion_0() {
    Companion_instance_0 = this;
    this.vt_1 = longArray(0);
  }
  Companion_0.$metadata$ = objectMeta('Companion');
  var Companion_instance_0;
  function Companion_getInstance_3() {
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function prepareHighMarksArray($this, elementsCount) {
    var slotsCount = (elementsCount - 1 | 0) >>> 6 | 0;
    Companion_getInstance_0();
    var elementsInLastSlot = elementsCount & (64 - 1 | 0);
    var highMarks = longArray(slotsCount);
    if (!(elementsInLastSlot === 0)) {
      highMarks[get_lastIndex(highMarks)] = (new Long(-1, -1)).tb(elementsCount);
    }
    return highMarks;
  }
  function markHigh($this, index) {
    var slot = (index >>> 6 | 0) - 1 | 0;
    Companion_getInstance_0();
    var offsetInSlot = index & (64 - 1 | 0);
    $this.zt_1[slot] = $this.zt_1[slot].bm((new Long(1, 0)).tb(offsetInSlot));
  }
  function nextUnmarkedHighIndex($this) {
    var inductionVariable = 0;
    var last = $this.zt_1.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var slot = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = slot + 1 | 0;
        Companion_getInstance_0();
        var slotOffset = imul(tmp, 64);
        var slotMarks = $this.zt_1[slot];
        while (!slotMarks.equals(new Long(-1, -1))) {
          var indexInSlot = countTrailingZeroBits(slotMarks.am());
          slotMarks = slotMarks.bm((new Long(1, 0)).tb(indexInSlot));
          var index = slotOffset + indexInSlot | 0;
          if ($this.xt_1($this.wt_1, index)) {
            $this.zt_1[slot] = slotMarks;
            return index;
          }
        }
        $this.zt_1[slot] = slotMarks;
      }
       while (inductionVariable <= last);
    Companion_getInstance_2();
    return -1;
  }
  function ElementMarker(descriptor, readIfAbsent) {
    Companion_getInstance_3();
    this.wt_1 = descriptor;
    this.xt_1 = readIfAbsent;
    var elementsCount = this.wt_1.ko();
    Companion_getInstance_0();
    if (elementsCount <= 64) {
      var tmp = this;
      var tmp_0;
      Companion_getInstance_0();
      if (elementsCount === 64) {
        tmp_0 = new Long(0, 0);
      } else {
        tmp_0 = (new Long(-1, -1)).tb(elementsCount);
      }
      tmp.yt_1 = tmp_0;
      this.zt_1 = Companion_getInstance_3().vt_1;
    } else {
      this.yt_1 = new Long(0, 0);
      this.zt_1 = prepareHighMarksArray(this, elementsCount);
    }
  }
  ElementMarker.prototype.au = function (index) {
    Companion_getInstance_0();
    if (index < 64) {
      this.yt_1 = this.yt_1.bm((new Long(1, 0)).tb(index));
    } else {
      markHigh(this, index);
    }
  };
  ElementMarker.prototype.bu = function () {
    var elementsCount = this.wt_1.ko();
    while (!this.yt_1.equals(new Long(-1, -1))) {
      var index = countTrailingZeroBits(this.yt_1.am());
      this.yt_1 = this.yt_1.bm((new Long(1, 0)).tb(index));
      if (this.xt_1(this.wt_1, index)) {
        return index;
      }
    }
    Companion_getInstance_0();
    if (elementsCount > 64) {
      return nextUnmarkedHighIndex(this);
    }
    Companion_getInstance_2();
    return -1;
  };
  ElementMarker.$metadata$ = classMeta('ElementMarker');
  function jsonCachedSerialNames(_this__u8e3s4) {
    return cachedSerialNames(_this__u8e3s4);
  }
  function NullableSerializer(serializer) {
    this.cu_1 = serializer;
    this.du_1 = new SerialDescriptorForNullable(this.cu_1.hn());
  }
  NullableSerializer.prototype.hn = function () {
    return this.du_1;
  };
  NullableSerializer.prototype.in = function (decoder) {
    return decoder.np() ? decoder.zp(this.cu_1) : decoder.op();
  };
  NullableSerializer.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof NullableSerializer)
      other;
    else
      THROW_CCE();
    if (!equals(this.cu_1, other.cu_1))
      return false;
    return true;
  };
  NullableSerializer.prototype.hashCode = function () {
    return hashCode(this.cu_1);
  };
  NullableSerializer.$metadata$ = classMeta('NullableSerializer', [KSerializer]);
  function SerialDescriptorForNullable(original) {
    this.so_1 = original;
    this.to_1 = this.so_1.io() + '?';
    this.uo_1 = cachedSerialNames(this.so_1);
  }
  SerialDescriptorForNullable.prototype.jo = function () {
    return this.so_1.jo();
  };
  SerialDescriptorForNullable.prototype.ko = function () {
    return this.so_1.ko();
  };
  SerialDescriptorForNullable.prototype.lo = function () {
    return this.so_1.lo();
  };
  SerialDescriptorForNullable.prototype.mo = function () {
    return this.so_1.mo();
  };
  SerialDescriptorForNullable.prototype.no = function (index) {
    return this.so_1.no(index);
  };
  SerialDescriptorForNullable.prototype.oo = function (index) {
    return this.so_1.oo(index);
  };
  SerialDescriptorForNullable.prototype.po = function (name) {
    return this.so_1.po(name);
  };
  SerialDescriptorForNullable.prototype.qo = function (index) {
    return this.so_1.qo(index);
  };
  SerialDescriptorForNullable.prototype.ro = function (index) {
    return this.so_1.ro(index);
  };
  SerialDescriptorForNullable.prototype.io = function () {
    return this.to_1;
  };
  SerialDescriptorForNullable.prototype.lp = function () {
    return this.uo_1;
  };
  SerialDescriptorForNullable.prototype.eo = function () {
    return true;
  };
  SerialDescriptorForNullable.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SerialDescriptorForNullable))
      return false;
    if (!equals(this.so_1, other.so_1))
      return false;
    return true;
  };
  SerialDescriptorForNullable.prototype.toString = function () {
    return '' + this.so_1 + '?';
  };
  SerialDescriptorForNullable.prototype.hashCode = function () {
    return imul(hashCode(this.so_1), 31);
  };
  SerialDescriptorForNullable.$metadata$ = classMeta('SerialDescriptorForNullable', [SerialDescriptor, CachedNames]);
  function ObjectSerializer$descriptor$delegate$lambda$lambda(this$0) {
    return function ($this$buildSerialDescriptor) {
      $this$buildSerialDescriptor.ln_1 = this$0.fu_1;
      return Unit_getInstance();
    };
  }
  function ObjectSerializer$descriptor$delegate$lambda($serialName, this$0) {
    return function () {
      var tmp = OBJECT_getInstance();
      return buildSerialDescriptor$default($serialName, tmp, [], ObjectSerializer$descriptor$delegate$lambda$lambda(this$0), 4, null);
    };
  }
  function ObjectSerializer(serialName, objectInstance) {
    this.eu_1 = objectInstance;
    this.fu_1 = emptyList();
    var tmp = this;
    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp.gu_1 = lazy(tmp_0, ObjectSerializer$descriptor$delegate$lambda(serialName, this));
  }
  ObjectSerializer.prototype.hn = function () {
    var tmp$ret$0;
    {
      var tmp0_getValue = descriptor$factory_0();
      tmp$ret$0 = this.gu_1.n2();
    }
    return tmp$ret$0;
  };
  ObjectSerializer.prototype.in = function (decoder) {
    var tmp$ret$1;
    {
      var tmp0_decodeStructure = this.hn();
      var composite = decoder.aq(tmp0_decodeStructure);
      var tmp$ret$0;
      $l$block: {
        var index = composite.oq(this.hn());
        Companion_getInstance_2();
        if (index === -1) {
          tmp$ret$0 = Unit_getInstance();
          break $l$block;
        } else {
          throw SerializationException_init_$Create$('Unexpected index ' + index);
        }
      }
      var result = tmp$ret$0;
      composite.bq(tmp0_decodeStructure);
      tmp$ret$1 = result;
    }
    return this.eu_1;
  };
  ObjectSerializer.$metadata$ = classMeta('ObjectSerializer', [KSerializer]);
  function descriptor$factory_0() {
    return getPropertyCallableRef('descriptor', 1, KProperty1, function (receiver) {
      return receiver.hn();
    }, null);
  }
  function get_EMPTY_DESCRIPTOR_ARRAY() {
    init_properties_Platform_common_kt_9ujmfm();
    return EMPTY_DESCRIPTOR_ARRAY;
  }
  var EMPTY_DESCRIPTOR_ARRAY;
  function cast(_this__u8e3s4) {
    init_properties_Platform_common_kt_9ujmfm();
    return isInterface(_this__u8e3s4, KSerializer) ? _this__u8e3s4 : THROW_CCE();
  }
  function compactArray(_this__u8e3s4) {
    init_properties_Platform_common_kt_9ujmfm();
    var tmp$ret$2;
    {
      {
      }
      var tmp;
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          {
          }
          tmp$ret$0 = _this__u8e3s4 == null ? true : _this__u8e3s4.q();
        }
        tmp$ret$1 = tmp$ret$0;
      }
      if (!tmp$ret$1) {
        tmp = _this__u8e3s4;
      } else {
        tmp = null;
      }
      tmp$ret$2 = tmp;
    }
    var tmp0_safe_receiver = tmp$ret$2;
    var tmp_0;
    if (tmp0_safe_receiver == null) {
      tmp_0 = null;
    } else {
      var tmp$ret$3;
      {
        tmp$ret$3 = copyToArray(tmp0_safe_receiver);
      }
      tmp_0 = tmp$ret$3;
    }
    var tmp1_elvis_lhs = tmp_0;
    return tmp1_elvis_lhs == null ? get_EMPTY_DESCRIPTOR_ARRAY() : tmp1_elvis_lhs;
  }
  function elementsHashCodeBy(_this__u8e3s4, selector) {
    init_properties_Platform_common_kt_9ujmfm();
    var tmp$ret$2;
    {
      var accumulator = 1;
      var tmp0_iterator = _this__u8e3s4.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        var tmp$ret$1;
        {
          var tmp0__anonymous__q1qw7t = accumulator;
          var tmp = imul(31, tmp0__anonymous__q1qw7t);
          var tmp$ret$0;
          {
            var tmp0_hashCode = selector(element);
            var tmp0_safe_receiver = tmp0_hashCode;
            var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
            tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
          }
          tmp$ret$1 = tmp + tmp$ret$0 | 0;
        }
        accumulator = tmp$ret$1;
      }
      tmp$ret$2 = accumulator;
    }
    return tmp$ret$2;
  }
  function kclass(_this__u8e3s4) {
    init_properties_Platform_common_kt_9ujmfm();
    var t = _this__u8e3s4.mi();
    var tmp;
    if (!(t == null) ? isInterface(t, KClass) : false) {
      tmp = t;
    } else {
      if (!(t == null) ? isInterface(t, KTypeParameter) : false) {
        var tmp0_error = 'Captured type paramerer ' + t + ' from generic non-reified function. ' + ('Such functionality cannot be supported as ' + t + ' is erased, either specify serializer explicitly or make ') + ('calling function inline with reified ' + t);
        throw IllegalStateException_init_$Create$(toString(tmp0_error));
      } else {
        var tmp1_error = 'Only KClass supported as classifier, got ' + t;
        throw IllegalStateException_init_$Create$(toString(tmp1_error));
      }
    }
    var tmp_0 = tmp;
    return isInterface(tmp_0, KClass) ? tmp_0 : THROW_CCE();
  }
  function cachedSerialNames(_this__u8e3s4) {
    init_properties_Platform_common_kt_9ujmfm();
    if (isInterface(_this__u8e3s4, CachedNames))
      return _this__u8e3s4.lp();
    var result = HashSet_init_$Create$_1(_this__u8e3s4.ko());
    var inductionVariable = 0;
    var last = _this__u8e3s4.ko();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        {
          var tmp0_plusAssign = _this__u8e3s4.qo(i);
          result.b(tmp0_plusAssign);
        }
      }
       while (inductionVariable < last);
    return result;
  }
  var properties_initialized_Platform_common_kt_i7q4ty;
  function init_properties_Platform_common_kt_9ujmfm() {
    if (properties_initialized_Platform_common_kt_i7q4ty) {
    } else {
      properties_initialized_Platform_common_kt_i7q4ty = true;
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = [];
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      EMPTY_DESCRIPTOR_ARRAY = tmp$ret$2;
    }
  }
  function throwMissingFieldException(seen, goldenMask, descriptor) {
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    var missingFields = tmp$ret$0;
    var missingFieldsBits = goldenMask & ~seen;
    var inductionVariable = 0;
    if (inductionVariable < 32)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!((missingFieldsBits & 1) === 0)) {
          {
            var tmp0_plusAssign = descriptor.qo(i);
            missingFields.b(tmp0_plusAssign);
          }
        }
        missingFieldsBits = missingFieldsBits >>> 1 | 0;
      }
       while (inductionVariable < 32);
    throw MissingFieldException_init_$Create$(missingFields, descriptor.io());
  }
  function hashCodeImpl(_this__u8e3s4, typeParams) {
    var result = getStringHashCode(_this__u8e3s4.io());
    result = imul(31, result) + contentHashCode(typeParams) | 0;
    var elementDescriptors = get_elementDescriptors(_this__u8e3s4);
    var tmp$ret$4;
    {
      var tmp$ret$3;
      {
        var accumulator = 1;
        var tmp0_iterator = elementDescriptors.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          var tmp$ret$2;
          {
            var tmp0__anonymous__q1qw7t = accumulator;
            var tmp = imul(31, tmp0__anonymous__q1qw7t);
            var tmp$ret$1;
            {
              var tmp$ret$0;
              {
                tmp$ret$0 = element.io();
              }
              var tmp0_hashCode = tmp$ret$0;
              var tmp0_safe_receiver = tmp0_hashCode;
              var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
              tmp$ret$1 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
            }
            tmp$ret$2 = tmp + tmp$ret$1 | 0;
          }
          accumulator = tmp$ret$2;
        }
        tmp$ret$3 = accumulator;
      }
      tmp$ret$4 = tmp$ret$3;
    }
    var namesHash = tmp$ret$4;
    var tmp$ret$9;
    {
      var tmp$ret$8;
      {
        var accumulator_0 = 1;
        var tmp0_iterator_0 = elementDescriptors.h();
        while (tmp0_iterator_0.n()) {
          var element_0 = tmp0_iterator_0.o();
          var tmp$ret$7;
          {
            var tmp0__anonymous__q1qw7t_0 = accumulator_0;
            var tmp_0 = imul(31, tmp0__anonymous__q1qw7t_0);
            var tmp$ret$6;
            {
              var tmp$ret$5;
              {
                tmp$ret$5 = element_0.mo();
              }
              var tmp0_hashCode_0 = tmp$ret$5;
              var tmp0_safe_receiver_0 = tmp0_hashCode_0;
              var tmp1_elvis_lhs_0 = tmp0_safe_receiver_0 == null ? null : hashCode(tmp0_safe_receiver_0);
              tmp$ret$6 = tmp1_elvis_lhs_0 == null ? 0 : tmp1_elvis_lhs_0;
            }
            tmp$ret$7 = tmp_0 + tmp$ret$6 | 0;
          }
          accumulator_0 = tmp$ret$7;
        }
        tmp$ret$8 = accumulator_0;
      }
      tmp$ret$9 = tmp$ret$8;
    }
    var kindHash = tmp$ret$9;
    result = imul(31, result) + namesHash | 0;
    result = imul(31, result) + kindHash | 0;
    return result;
  }
  function _get_childSerializers__7vnyfa($this) {
    var tmp$ret$0;
    {
      var tmp0_getValue = childSerializers$factory();
      tmp$ret$0 = $this.qu_1.n2();
    }
    return tmp$ret$0;
  }
  function _get__hashCode__tgwhef_0($this) {
    var tmp$ret$0;
    {
      var tmp0_getValue = _hashCode$factory_0();
      tmp$ret$0 = $this.su_1.n2();
    }
    return tmp$ret$0;
  }
  function buildIndices($this) {
    var indices = HashMap_init_$Create$();
    var inductionVariable = 0;
    var last = $this.lu_1.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        {
          var tmp0_set = $this.lu_1[i];
          indices.a(tmp0_set, i);
        }
      }
       while (inductionVariable <= last);
    return indices;
  }
  function PluginGeneratedSerialDescriptor$childSerializers$delegate$lambda(this$0) {
    return function () {
      var tmp0_safe_receiver = this$0.iu_1;
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.tu();
      return tmp1_elvis_lhs == null ? get_EMPTY_SERIALIZER_ARRAY() : tmp1_elvis_lhs;
    };
  }
  function PluginGeneratedSerialDescriptor$typeParameterDescriptors$delegate$lambda(this$0) {
    return function () {
      var tmp0_safe_receiver = this$0.iu_1;
      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.uu();
      var tmp;
      if (tmp1_safe_receiver == null) {
        tmp = null;
      } else {
        var tmp$ret$2;
        {
          var tmp$ret$1;
          {
            var tmp0_mapTo = ArrayList_init_$Create$(tmp1_safe_receiver.length);
            var tmp0_iterator = arrayIterator(tmp1_safe_receiver);
            while (tmp0_iterator.n()) {
              var item = tmp0_iterator.o();
              var tmp$ret$0;
              {
                tmp$ret$0 = item.hn();
              }
              tmp0_mapTo.b(tmp$ret$0);
            }
            tmp$ret$1 = tmp0_mapTo;
          }
          tmp$ret$2 = tmp$ret$1;
        }
        tmp = tmp$ret$2;
      }
      return compactArray(tmp);
    };
  }
  function PluginGeneratedSerialDescriptor$_hashCode$delegate$lambda(this$0) {
    return function () {
      return hashCodeImpl(this$0, this$0.vu());
    };
  }
  function PluginGeneratedSerialDescriptor$toString$lambda(this$0) {
    return function (i) {
      return this$0.qo(i) + ': ' + this$0.oo(i).io();
    };
  }
  function PluginGeneratedSerialDescriptor(serialName, generatedSerializer, elementsCount) {
    this.hu_1 = serialName;
    this.iu_1 = generatedSerializer;
    this.ju_1 = elementsCount;
    this.ku_1 = -1;
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = this.ju_1;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(tmp_1), null);
    }
    var tmp_2 = tmp$ret$0;
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$1;
      {
        tmp$ret$1 = '[UNINITIALIZED]';
      }
      tmp_2[tmp_3] = tmp$ret$1;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp.lu_1 = tmp_2;
    var tmp_4 = this;
    var tmp$ret$2;
    {
      var tmp0_arrayOfNulls = this.ju_1;
      tmp$ret$2 = fillArrayVal(Array(tmp0_arrayOfNulls), null);
    }
    tmp_4.mu_1 = tmp$ret$2;
    this.nu_1 = null;
    this.ou_1 = booleanArray(this.ju_1);
    this.pu_1 = emptyMap();
    var tmp_5 = this;
    var tmp_6 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp_5.qu_1 = lazy(tmp_6, PluginGeneratedSerialDescriptor$childSerializers$delegate$lambda(this));
    var tmp_7 = this;
    var tmp_8 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp_7.ru_1 = lazy(tmp_8, PluginGeneratedSerialDescriptor$typeParameterDescriptors$delegate$lambda(this));
    var tmp_9 = this;
    var tmp_10 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp_9.su_1 = lazy(tmp_10, PluginGeneratedSerialDescriptor$_hashCode$delegate$lambda(this));
  }
  PluginGeneratedSerialDescriptor.prototype.io = function () {
    return this.hu_1;
  };
  PluginGeneratedSerialDescriptor.prototype.ko = function () {
    return this.ju_1;
  };
  PluginGeneratedSerialDescriptor.prototype.mo = function () {
    return CLASS_getInstance();
  };
  PluginGeneratedSerialDescriptor.prototype.jo = function () {
    var tmp0_elvis_lhs = this.nu_1;
    return tmp0_elvis_lhs == null ? emptyList() : tmp0_elvis_lhs;
  };
  PluginGeneratedSerialDescriptor.prototype.lp = function () {
    return this.pu_1.c3();
  };
  PluginGeneratedSerialDescriptor.prototype.vu = function () {
    var tmp$ret$0;
    {
      var tmp0_getValue = typeParameterDescriptors$factory();
      tmp$ret$0 = this.ru_1.n2();
    }
    return tmp$ret$0;
  };
  PluginGeneratedSerialDescriptor.prototype.wu = function (name, isOptional) {
    var tmp0_this = this;
    tmp0_this.ku_1 = tmp0_this.ku_1 + 1 | 0;
    this.lu_1[tmp0_this.ku_1] = name;
    this.ou_1[this.ku_1] = isOptional;
    this.mu_1[this.ku_1] = null;
    if (this.ku_1 === (this.ju_1 - 1 | 0)) {
      this.pu_1 = buildIndices(this);
    }
  };
  PluginGeneratedSerialDescriptor.prototype.oo = function (index) {
    return getChecked(_get_childSerializers__7vnyfa(this), index).hn();
  };
  PluginGeneratedSerialDescriptor.prototype.ro = function (index) {
    return getChecked_0(this.ou_1, index);
  };
  PluginGeneratedSerialDescriptor.prototype.no = function (index) {
    var tmp0_elvis_lhs = getChecked(this.mu_1, index);
    return tmp0_elvis_lhs == null ? emptyList() : tmp0_elvis_lhs;
  };
  PluginGeneratedSerialDescriptor.prototype.qo = function (index) {
    return getChecked(this.lu_1, index);
  };
  PluginGeneratedSerialDescriptor.prototype.po = function (name) {
    var tmp0_elvis_lhs = this.pu_1.b3(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      Companion_getInstance_2();
      tmp = -3;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  PluginGeneratedSerialDescriptor.prototype.equals = function (other) {
    var tmp$ret$0;
    $l$block_5: {
      if (this === other) {
        tmp$ret$0 = true;
        break $l$block_5;
      }
      if (!(other instanceof PluginGeneratedSerialDescriptor)) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.io() === other.io())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var tmp$ret$1;
      {
        var tmp0__anonymous__q1qw7t = other;
        tmp$ret$1 = contentEquals(this.vu(), tmp0__anonymous__q1qw7t.vu());
      }
      if (!tmp$ret$1) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.ko() === other.ko())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var inductionVariable = 0;
      var last = this.ko();
      if (inductionVariable < last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (!(this.oo(index).io() === other.oo(index).io())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
          if (!equals(this.oo(index).mo(), other.oo(index).mo())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
        }
         while (inductionVariable < last);
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  PluginGeneratedSerialDescriptor.prototype.hashCode = function () {
    return _get__hashCode__tgwhef_0(this);
  };
  PluginGeneratedSerialDescriptor.prototype.toString = function () {
    var tmp = until(0, this.ju_1);
    var tmp_0 = this.io() + '(';
    return joinToString$default(tmp, ', ', tmp_0, ')', 0, null, PluginGeneratedSerialDescriptor$toString$lambda(this), 24, null);
  };
  PluginGeneratedSerialDescriptor.$metadata$ = classMeta('PluginGeneratedSerialDescriptor', [SerialDescriptor, CachedNames]);
  function childSerializers$factory() {
    return getPropertyCallableRef('childSerializers', 1, KProperty1, function (receiver) {
      return _get_childSerializers__7vnyfa(receiver);
    }, null);
  }
  function typeParameterDescriptors$factory() {
    return getPropertyCallableRef('typeParameterDescriptors', 1, KProperty1, function (receiver) {
      return receiver.vu();
    }, null);
  }
  function _hashCode$factory_0() {
    return getPropertyCallableRef('_hashCode', 1, KProperty1, function (receiver) {
      return _get__hashCode__tgwhef_0(receiver);
    }, null);
  }
  function get_EMPTY_SERIALIZER_ARRAY() {
    init_properties_PluginHelperInterfaces_kt_tblf27();
    return EMPTY_SERIALIZER_ARRAY;
  }
  var EMPTY_SERIALIZER_ARRAY;
  function GeneratedSerializer() {
  }
  GeneratedSerializer.$metadata$ = interfaceMeta('GeneratedSerializer', [KSerializer]);
  function SerializerFactory() {
  }
  SerializerFactory.$metadata$ = interfaceMeta('SerializerFactory');
  var properties_initialized_PluginHelperInterfaces_kt_ap8in1;
  function init_properties_PluginHelperInterfaces_kt_tblf27() {
    if (properties_initialized_PluginHelperInterfaces_kt_ap8in1) {
    } else {
      properties_initialized_PluginHelperInterfaces_kt_ap8in1 = true;
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = [];
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      EMPTY_SERIALIZER_ARRAY = tmp$ret$2;
    }
  }
  function CharArraySerializer_0() {
    CharArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_2(Companion_getInstance_1()));
  }
  CharArraySerializer_0.prototype.av = function (_this__u8e3s4) {
    return new CharArrayBuilder(_this__u8e3s4);
  };
  CharArraySerializer_0.prototype.xr = function (_this__u8e3s4) {
    return this.av((!(_this__u8e3s4 == null) ? isCharArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  CharArraySerializer_0.prototype.wr = function () {
    return charArray(0);
  };
  CharArraySerializer_0.prototype.bv = function (decoder, index, builder, checkIndex) {
    builder.ev(decoder.jq(this.hn(), index));
  };
  CharArraySerializer_0.prototype.yr = function (decoder, index, builder, checkIndex) {
    return this.bv(decoder, index, builder instanceof CharArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  CharArraySerializer_0.$metadata$ = objectMeta('CharArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var CharArraySerializer_instance;
  function CharArraySerializer_getInstance() {
    if (CharArraySerializer_instance == null)
      new CharArraySerializer_0();
    return CharArraySerializer_instance;
  }
  function DoubleArraySerializer_0() {
    DoubleArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_3(DoubleCompanionObject_getInstance()));
  }
  DoubleArraySerializer_0.prototype.hv = function (_this__u8e3s4) {
    return new DoubleArrayBuilder(_this__u8e3s4);
  };
  DoubleArraySerializer_0.prototype.xr = function (_this__u8e3s4) {
    return this.hv((!(_this__u8e3s4 == null) ? isDoubleArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  DoubleArraySerializer_0.prototype.wr = function () {
    return new Float64Array(0);
  };
  DoubleArraySerializer_0.prototype.iv = function (decoder, index, builder, checkIndex) {
    builder.lv(decoder.iq(this.hn(), index));
  };
  DoubleArraySerializer_0.prototype.yr = function (decoder, index, builder, checkIndex) {
    return this.iv(decoder, index, builder instanceof DoubleArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  DoubleArraySerializer_0.$metadata$ = objectMeta('DoubleArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var DoubleArraySerializer_instance;
  function DoubleArraySerializer_getInstance() {
    if (DoubleArraySerializer_instance == null)
      new DoubleArraySerializer_0();
    return DoubleArraySerializer_instance;
  }
  function FloatArraySerializer_0() {
    FloatArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_4(FloatCompanionObject_getInstance()));
  }
  FloatArraySerializer_0.prototype.ov = function (_this__u8e3s4) {
    return new FloatArrayBuilder(_this__u8e3s4);
  };
  FloatArraySerializer_0.prototype.xr = function (_this__u8e3s4) {
    return this.ov((!(_this__u8e3s4 == null) ? isFloatArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  FloatArraySerializer_0.prototype.wr = function () {
    return new Float32Array(0);
  };
  FloatArraySerializer_0.prototype.pv = function (decoder, index, builder, checkIndex) {
    builder.sv(decoder.hq(this.hn(), index));
  };
  FloatArraySerializer_0.prototype.yr = function (decoder, index, builder, checkIndex) {
    return this.pv(decoder, index, builder instanceof FloatArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  FloatArraySerializer_0.$metadata$ = objectMeta('FloatArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var FloatArraySerializer_instance;
  function FloatArraySerializer_getInstance() {
    if (FloatArraySerializer_instance == null)
      new FloatArraySerializer_0();
    return FloatArraySerializer_instance;
  }
  function LongArraySerializer_0() {
    LongArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_5(Companion_getInstance_0()));
  }
  LongArraySerializer_0.prototype.vv = function (_this__u8e3s4) {
    return new LongArrayBuilder(_this__u8e3s4);
  };
  LongArraySerializer_0.prototype.xr = function (_this__u8e3s4) {
    return this.vv((!(_this__u8e3s4 == null) ? isLongArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  LongArraySerializer_0.prototype.wr = function () {
    return longArray(0);
  };
  LongArraySerializer_0.prototype.wv = function (decoder, index, builder, checkIndex) {
    builder.zv(decoder.gq(this.hn(), index));
  };
  LongArraySerializer_0.prototype.yr = function (decoder, index, builder, checkIndex) {
    return this.wv(decoder, index, builder instanceof LongArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  LongArraySerializer_0.$metadata$ = objectMeta('LongArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var LongArraySerializer_instance;
  function LongArraySerializer_getInstance() {
    if (LongArraySerializer_instance == null)
      new LongArraySerializer_0();
    return LongArraySerializer_instance;
  }
  function IntArraySerializer_0() {
    IntArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_6(IntCompanionObject_getInstance()));
  }
  IntArraySerializer_0.prototype.cw = function (_this__u8e3s4) {
    return new IntArrayBuilder(_this__u8e3s4);
  };
  IntArraySerializer_0.prototype.xr = function (_this__u8e3s4) {
    return this.cw((!(_this__u8e3s4 == null) ? isIntArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  IntArraySerializer_0.prototype.wr = function () {
    return new Int32Array(0);
  };
  IntArraySerializer_0.prototype.dw = function (decoder, index, builder, checkIndex) {
    builder.gw(decoder.fq(this.hn(), index));
  };
  IntArraySerializer_0.prototype.yr = function (decoder, index, builder, checkIndex) {
    return this.dw(decoder, index, builder instanceof IntArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  IntArraySerializer_0.$metadata$ = objectMeta('IntArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var IntArraySerializer_instance;
  function IntArraySerializer_getInstance() {
    if (IntArraySerializer_instance == null)
      new IntArraySerializer_0();
    return IntArraySerializer_instance;
  }
  function ShortArraySerializer_0() {
    ShortArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_7(ShortCompanionObject_getInstance()));
  }
  ShortArraySerializer_0.prototype.jw = function (_this__u8e3s4) {
    return new ShortArrayBuilder(_this__u8e3s4);
  };
  ShortArraySerializer_0.prototype.xr = function (_this__u8e3s4) {
    return this.jw((!(_this__u8e3s4 == null) ? isShortArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ShortArraySerializer_0.prototype.wr = function () {
    return new Int16Array(0);
  };
  ShortArraySerializer_0.prototype.kw = function (decoder, index, builder, checkIndex) {
    builder.nw(decoder.eq(this.hn(), index));
  };
  ShortArraySerializer_0.prototype.yr = function (decoder, index, builder, checkIndex) {
    return this.kw(decoder, index, builder instanceof ShortArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  ShortArraySerializer_0.$metadata$ = objectMeta('ShortArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var ShortArraySerializer_instance;
  function ShortArraySerializer_getInstance() {
    if (ShortArraySerializer_instance == null)
      new ShortArraySerializer_0();
    return ShortArraySerializer_instance;
  }
  function ByteArraySerializer_0() {
    ByteArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_8(ByteCompanionObject_getInstance()));
  }
  ByteArraySerializer_0.prototype.qw = function (_this__u8e3s4) {
    return new ByteArrayBuilder(_this__u8e3s4);
  };
  ByteArraySerializer_0.prototype.xr = function (_this__u8e3s4) {
    return this.qw((!(_this__u8e3s4 == null) ? isByteArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ByteArraySerializer_0.prototype.wr = function () {
    return new Int8Array(0);
  };
  ByteArraySerializer_0.prototype.rw = function (decoder, index, builder, checkIndex) {
    builder.uw(decoder.dq(this.hn(), index));
  };
  ByteArraySerializer_0.prototype.yr = function (decoder, index, builder, checkIndex) {
    return this.rw(decoder, index, builder instanceof ByteArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  ByteArraySerializer_0.$metadata$ = objectMeta('ByteArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var ByteArraySerializer_instance;
  function ByteArraySerializer_getInstance() {
    if (ByteArraySerializer_instance == null)
      new ByteArraySerializer_0();
    return ByteArraySerializer_instance;
  }
  function BooleanArraySerializer_0() {
    BooleanArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_9(BooleanCompanionObject_getInstance()));
  }
  BooleanArraySerializer_0.prototype.xw = function (_this__u8e3s4) {
    return new BooleanArrayBuilder(_this__u8e3s4);
  };
  BooleanArraySerializer_0.prototype.xr = function (_this__u8e3s4) {
    return this.xw((!(_this__u8e3s4 == null) ? isBooleanArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  BooleanArraySerializer_0.prototype.wr = function () {
    return booleanArray(0);
  };
  BooleanArraySerializer_0.prototype.yw = function (decoder, index, builder, checkIndex) {
    builder.bx(decoder.cq(this.hn(), index));
  };
  BooleanArraySerializer_0.prototype.yr = function (decoder, index, builder, checkIndex) {
    return this.yw(decoder, index, builder instanceof BooleanArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  BooleanArraySerializer_0.$metadata$ = objectMeta('BooleanArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var BooleanArraySerializer_instance;
  function BooleanArraySerializer_getInstance() {
    if (BooleanArraySerializer_instance == null)
      new BooleanArraySerializer_0();
    return BooleanArraySerializer_instance;
  }
  function CharArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.cv_1 = bufferWithData;
    this.dv_1 = bufferWithData.length;
    this.wf(10);
  }
  CharArrayBuilder.prototype.qr = function () {
    return this.dv_1;
  };
  CharArrayBuilder.prototype.wf = function (requiredCapacity) {
    if (this.cv_1.length < requiredCapacity)
      this.cv_1 = copyOf(this.cv_1, coerceAtLeast(requiredCapacity, imul(this.cv_1.length, 2)));
  };
  CharArrayBuilder.prototype.ev = function (c) {
    this.ds(0, 1, null);
    var tmp = this.cv_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.dv_1;
    tmp0_this.dv_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  CharArrayBuilder.prototype.sr = function () {
    return copyOf(this.cv_1, this.dv_1);
  };
  CharArrayBuilder.$metadata$ = classMeta('CharArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function DoubleArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.jv_1 = bufferWithData;
    this.kv_1 = bufferWithData.length;
    this.wf(10);
  }
  DoubleArrayBuilder.prototype.qr = function () {
    return this.kv_1;
  };
  DoubleArrayBuilder.prototype.wf = function (requiredCapacity) {
    if (this.jv_1.length < requiredCapacity)
      this.jv_1 = copyOf_0(this.jv_1, coerceAtLeast(requiredCapacity, imul(this.jv_1.length, 2)));
  };
  DoubleArrayBuilder.prototype.lv = function (c) {
    this.ds(0, 1, null);
    var tmp = this.jv_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.kv_1;
    tmp0_this.kv_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  DoubleArrayBuilder.prototype.sr = function () {
    return copyOf_0(this.jv_1, this.kv_1);
  };
  DoubleArrayBuilder.$metadata$ = classMeta('DoubleArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function FloatArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.qv_1 = bufferWithData;
    this.rv_1 = bufferWithData.length;
    this.wf(10);
  }
  FloatArrayBuilder.prototype.qr = function () {
    return this.rv_1;
  };
  FloatArrayBuilder.prototype.wf = function (requiredCapacity) {
    if (this.qv_1.length < requiredCapacity)
      this.qv_1 = copyOf_1(this.qv_1, coerceAtLeast(requiredCapacity, imul(this.qv_1.length, 2)));
  };
  FloatArrayBuilder.prototype.sv = function (c) {
    this.ds(0, 1, null);
    var tmp = this.qv_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.rv_1;
    tmp0_this.rv_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  FloatArrayBuilder.prototype.sr = function () {
    return copyOf_1(this.qv_1, this.rv_1);
  };
  FloatArrayBuilder.$metadata$ = classMeta('FloatArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function LongArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.xv_1 = bufferWithData;
    this.yv_1 = bufferWithData.length;
    this.wf(10);
  }
  LongArrayBuilder.prototype.qr = function () {
    return this.yv_1;
  };
  LongArrayBuilder.prototype.wf = function (requiredCapacity) {
    if (this.xv_1.length < requiredCapacity)
      this.xv_1 = copyOf_2(this.xv_1, coerceAtLeast(requiredCapacity, imul(this.xv_1.length, 2)));
  };
  LongArrayBuilder.prototype.zv = function (c) {
    this.ds(0, 1, null);
    var tmp = this.xv_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.yv_1;
    tmp0_this.yv_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  LongArrayBuilder.prototype.sr = function () {
    return copyOf_2(this.xv_1, this.yv_1);
  };
  LongArrayBuilder.$metadata$ = classMeta('LongArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function IntArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.ew_1 = bufferWithData;
    this.fw_1 = bufferWithData.length;
    this.wf(10);
  }
  IntArrayBuilder.prototype.qr = function () {
    return this.fw_1;
  };
  IntArrayBuilder.prototype.wf = function (requiredCapacity) {
    if (this.ew_1.length < requiredCapacity)
      this.ew_1 = copyOf_3(this.ew_1, coerceAtLeast(requiredCapacity, imul(this.ew_1.length, 2)));
  };
  IntArrayBuilder.prototype.gw = function (c) {
    this.ds(0, 1, null);
    var tmp = this.ew_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.fw_1;
    tmp0_this.fw_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  IntArrayBuilder.prototype.sr = function () {
    return copyOf_3(this.ew_1, this.fw_1);
  };
  IntArrayBuilder.$metadata$ = classMeta('IntArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function ShortArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.lw_1 = bufferWithData;
    this.mw_1 = bufferWithData.length;
    this.wf(10);
  }
  ShortArrayBuilder.prototype.qr = function () {
    return this.mw_1;
  };
  ShortArrayBuilder.prototype.wf = function (requiredCapacity) {
    if (this.lw_1.length < requiredCapacity)
      this.lw_1 = copyOf_4(this.lw_1, coerceAtLeast(requiredCapacity, imul(this.lw_1.length, 2)));
  };
  ShortArrayBuilder.prototype.nw = function (c) {
    this.ds(0, 1, null);
    var tmp = this.lw_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.mw_1;
    tmp0_this.mw_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  ShortArrayBuilder.prototype.sr = function () {
    return copyOf_4(this.lw_1, this.mw_1);
  };
  ShortArrayBuilder.$metadata$ = classMeta('ShortArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function ByteArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.sw_1 = bufferWithData;
    this.tw_1 = bufferWithData.length;
    this.wf(10);
  }
  ByteArrayBuilder.prototype.qr = function () {
    return this.tw_1;
  };
  ByteArrayBuilder.prototype.wf = function (requiredCapacity) {
    if (this.sw_1.length < requiredCapacity)
      this.sw_1 = copyOf_5(this.sw_1, coerceAtLeast(requiredCapacity, imul(this.sw_1.length, 2)));
  };
  ByteArrayBuilder.prototype.uw = function (c) {
    this.ds(0, 1, null);
    var tmp = this.sw_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.tw_1;
    tmp0_this.tw_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  ByteArrayBuilder.prototype.sr = function () {
    return copyOf_5(this.sw_1, this.tw_1);
  };
  ByteArrayBuilder.$metadata$ = classMeta('ByteArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function BooleanArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.zw_1 = bufferWithData;
    this.ax_1 = bufferWithData.length;
    this.wf(10);
  }
  BooleanArrayBuilder.prototype.qr = function () {
    return this.ax_1;
  };
  BooleanArrayBuilder.prototype.wf = function (requiredCapacity) {
    if (this.zw_1.length < requiredCapacity)
      this.zw_1 = copyOf_6(this.zw_1, coerceAtLeast(requiredCapacity, imul(this.zw_1.length, 2)));
  };
  BooleanArrayBuilder.prototype.bx = function (c) {
    this.ds(0, 1, null);
    var tmp = this.zw_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.ax_1;
    tmp0_this.ax_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  BooleanArrayBuilder.prototype.sr = function () {
    return copyOf_6(this.zw_1, this.ax_1);
  };
  BooleanArrayBuilder.$metadata$ = classMeta('BooleanArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function get_BUILTIN_SERIALIZERS() {
    init_properties_Primitives_kt_u7dn2q();
    return BUILTIN_SERIALIZERS;
  }
  var BUILTIN_SERIALIZERS;
  function StringSerializer() {
    StringSerializer_instance = this;
    this.cx_1 = new PrimitiveSerialDescriptor_0('kotlin.String', STRING_getInstance());
  }
  StringSerializer.prototype.hn = function () {
    return this.cx_1;
  };
  StringSerializer.prototype.in = function (decoder) {
    return decoder.xp();
  };
  StringSerializer.$metadata$ = objectMeta('StringSerializer', [KSerializer]);
  var StringSerializer_instance;
  function StringSerializer_getInstance() {
    if (StringSerializer_instance == null)
      new StringSerializer();
    return StringSerializer_instance;
  }
  function CharSerializer() {
    CharSerializer_instance = this;
    this.dx_1 = new PrimitiveSerialDescriptor_0('kotlin.Char', CHAR_getInstance());
  }
  CharSerializer.prototype.hn = function () {
    return this.dx_1;
  };
  CharSerializer.prototype.ex = function (decoder) {
    return decoder.wp();
  };
  CharSerializer.prototype.in = function (decoder) {
    return new Char(this.ex(decoder));
  };
  CharSerializer.$metadata$ = objectMeta('CharSerializer', [KSerializer]);
  var CharSerializer_instance;
  function CharSerializer_getInstance() {
    if (CharSerializer_instance == null)
      new CharSerializer();
    return CharSerializer_instance;
  }
  function DoubleSerializer() {
    DoubleSerializer_instance = this;
    this.fx_1 = new PrimitiveSerialDescriptor_0('kotlin.Double', DOUBLE_getInstance());
  }
  DoubleSerializer.prototype.hn = function () {
    return this.fx_1;
  };
  DoubleSerializer.prototype.in = function (decoder) {
    return decoder.vp();
  };
  DoubleSerializer.$metadata$ = objectMeta('DoubleSerializer', [KSerializer]);
  var DoubleSerializer_instance;
  function DoubleSerializer_getInstance() {
    if (DoubleSerializer_instance == null)
      new DoubleSerializer();
    return DoubleSerializer_instance;
  }
  function FloatSerializer() {
    FloatSerializer_instance = this;
    this.gx_1 = new PrimitiveSerialDescriptor_0('kotlin.Float', FLOAT_getInstance());
  }
  FloatSerializer.prototype.hn = function () {
    return this.gx_1;
  };
  FloatSerializer.prototype.in = function (decoder) {
    return decoder.up();
  };
  FloatSerializer.$metadata$ = objectMeta('FloatSerializer', [KSerializer]);
  var FloatSerializer_instance;
  function FloatSerializer_getInstance() {
    if (FloatSerializer_instance == null)
      new FloatSerializer();
    return FloatSerializer_instance;
  }
  function LongSerializer() {
    LongSerializer_instance = this;
    this.hx_1 = new PrimitiveSerialDescriptor_0('kotlin.Long', LONG_getInstance());
  }
  LongSerializer.prototype.hn = function () {
    return this.hx_1;
  };
  LongSerializer.prototype.in = function (decoder) {
    return decoder.tp();
  };
  LongSerializer.$metadata$ = objectMeta('LongSerializer', [KSerializer]);
  var LongSerializer_instance;
  function LongSerializer_getInstance() {
    if (LongSerializer_instance == null)
      new LongSerializer();
    return LongSerializer_instance;
  }
  function IntSerializer() {
    IntSerializer_instance = this;
    this.ix_1 = new PrimitiveSerialDescriptor_0('kotlin.Int', INT_getInstance());
  }
  IntSerializer.prototype.hn = function () {
    return this.ix_1;
  };
  IntSerializer.prototype.in = function (decoder) {
    return decoder.sp();
  };
  IntSerializer.$metadata$ = objectMeta('IntSerializer', [KSerializer]);
  var IntSerializer_instance;
  function IntSerializer_getInstance() {
    if (IntSerializer_instance == null)
      new IntSerializer();
    return IntSerializer_instance;
  }
  function ShortSerializer() {
    ShortSerializer_instance = this;
    this.jx_1 = new PrimitiveSerialDescriptor_0('kotlin.Short', SHORT_getInstance());
  }
  ShortSerializer.prototype.hn = function () {
    return this.jx_1;
  };
  ShortSerializer.prototype.in = function (decoder) {
    return decoder.rp();
  };
  ShortSerializer.$metadata$ = objectMeta('ShortSerializer', [KSerializer]);
  var ShortSerializer_instance;
  function ShortSerializer_getInstance() {
    if (ShortSerializer_instance == null)
      new ShortSerializer();
    return ShortSerializer_instance;
  }
  function ByteSerializer() {
    ByteSerializer_instance = this;
    this.kx_1 = new PrimitiveSerialDescriptor_0('kotlin.Byte', BYTE_getInstance());
  }
  ByteSerializer.prototype.hn = function () {
    return this.kx_1;
  };
  ByteSerializer.prototype.in = function (decoder) {
    return decoder.qp();
  };
  ByteSerializer.$metadata$ = objectMeta('ByteSerializer', [KSerializer]);
  var ByteSerializer_instance;
  function ByteSerializer_getInstance() {
    if (ByteSerializer_instance == null)
      new ByteSerializer();
    return ByteSerializer_instance;
  }
  function BooleanSerializer() {
    BooleanSerializer_instance = this;
    this.lx_1 = new PrimitiveSerialDescriptor_0('kotlin.Boolean', BOOLEAN_getInstance());
  }
  BooleanSerializer.prototype.hn = function () {
    return this.lx_1;
  };
  BooleanSerializer.prototype.in = function (decoder) {
    return decoder.pp();
  };
  BooleanSerializer.$metadata$ = objectMeta('BooleanSerializer', [KSerializer]);
  var BooleanSerializer_instance;
  function BooleanSerializer_getInstance() {
    if (BooleanSerializer_instance == null)
      new BooleanSerializer();
    return BooleanSerializer_instance;
  }
  function UnitSerializer() {
    UnitSerializer_instance = this;
    this.mx_1 = new ObjectSerializer('kotlin.Unit', Unit_getInstance());
  }
  UnitSerializer.prototype.hn = function () {
    return this.mx_1.hn();
  };
  UnitSerializer.prototype.nx = function (decoder) {
    this.mx_1.in(decoder);
  };
  UnitSerializer.prototype.in = function (decoder) {
    this.nx(decoder);
    return Unit_getInstance();
  };
  UnitSerializer.$metadata$ = objectMeta('UnitSerializer', [KSerializer]);
  var UnitSerializer_instance;
  function UnitSerializer_getInstance() {
    if (UnitSerializer_instance == null)
      new UnitSerializer();
    return UnitSerializer_instance;
  }
  function error($this) {
    throw IllegalStateException_init_$Create$('Primitive descriptor does not have elements');
  }
  function PrimitiveSerialDescriptor_0(serialName, kind) {
    this.ox_1 = serialName;
    this.px_1 = kind;
  }
  PrimitiveSerialDescriptor_0.prototype.io = function () {
    return this.ox_1;
  };
  PrimitiveSerialDescriptor_0.prototype.mo = function () {
    return this.px_1;
  };
  PrimitiveSerialDescriptor_0.prototype.ko = function () {
    return 0;
  };
  PrimitiveSerialDescriptor_0.prototype.qo = function (index) {
    error(this);
  };
  PrimitiveSerialDescriptor_0.prototype.po = function (name) {
    error(this);
  };
  PrimitiveSerialDescriptor_0.prototype.ro = function (index) {
    error(this);
  };
  PrimitiveSerialDescriptor_0.prototype.oo = function (index) {
    error(this);
  };
  PrimitiveSerialDescriptor_0.prototype.no = function (index) {
    error(this);
  };
  PrimitiveSerialDescriptor_0.prototype.toString = function () {
    return 'PrimitiveDescriptor(' + this.ox_1 + ')';
  };
  PrimitiveSerialDescriptor_0.$metadata$ = classMeta('PrimitiveSerialDescriptor', [SerialDescriptor]);
  function builtinSerializerOrNull(_this__u8e3s4) {
    init_properties_Primitives_kt_u7dn2q();
    var tmp = get_BUILTIN_SERIALIZERS().b3(_this__u8e3s4);
    return (tmp == null ? true : isInterface(tmp, KSerializer)) ? tmp : THROW_CCE();
  }
  function PrimitiveDescriptorSafe(serialName, kind) {
    init_properties_Primitives_kt_u7dn2q();
    checkName(serialName);
    return new PrimitiveSerialDescriptor_0(serialName, kind);
  }
  function checkName(serialName) {
    init_properties_Primitives_kt_u7dn2q();
    var keys = get_BUILTIN_SERIALIZERS().c3();
    var tmp0_iterator = keys.h();
    while (tmp0_iterator.n()) {
      var primitive = tmp0_iterator.o();
      var simpleName = capitalize(ensureNotNull(primitive.ei()));
      var qualifiedName = 'kotlin.' + simpleName;
      if (equals_0(serialName, qualifiedName, true) ? true : equals_0(serialName, simpleName, true)) {
        throw IllegalArgumentException_init_$Create$(trimIndent('\n                The name of serial descriptor should uniquely identify associated serializer.\n                For serial name ' + serialName + ' there already exist ' + capitalize(simpleName) + 'Serializer.\n                Please refer to SerialDescriptor documentation for additional information.\n            '));
      }
    }
  }
  function capitalize(_this__u8e3s4) {
    init_properties_Primitives_kt_u7dn2q();
    var tmp$ret$4;
    {
      var tmp;
      var tmp$ret$0;
      {
        tmp$ret$0 = charSequenceLength(_this__u8e3s4) > 0;
      }
      if (tmp$ret$0) {
        var tmp$ret$1;
        {
          var tmp0__anonymous__q1qw7t = charSequenceGet(_this__u8e3s4, 0);
          tmp$ret$1 = isLowerCase(tmp0__anonymous__q1qw7t) ? titlecase(tmp0__anonymous__q1qw7t) : toString_0(tmp0__anonymous__q1qw7t);
        }
        var tmp_0 = toString(tmp$ret$1);
        var tmp$ret$3;
        {
          var tmp$ret$2;
          {
            tmp$ret$2 = _this__u8e3s4;
          }
          tmp$ret$3 = tmp$ret$2.substring(1);
        }
        tmp = tmp_0 + tmp$ret$3;
      } else {
        tmp = _this__u8e3s4;
      }
      tmp$ret$4 = tmp;
    }
    return tmp$ret$4;
  }
  var properties_initialized_Primitives_kt_6dpii6;
  function init_properties_Primitives_kt_u7dn2q() {
    if (properties_initialized_Primitives_kt_6dpii6) {
    } else {
      properties_initialized_Primitives_kt_6dpii6 = true;
      BUILTIN_SERIALIZERS = mapOf([to(PrimitiveClasses_getInstance().wj(), serializer_1(StringCompanionObject_getInstance())), to(getKClass(Char), serializer_2(Companion_getInstance_1())), to(PrimitiveClasses_getInstance().zj(), CharArraySerializer()), to(PrimitiveClasses_getInstance().uj(), serializer_3(DoubleCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().fk(), DoubleArraySerializer()), to(PrimitiveClasses_getInstance().tj(), serializer_4(FloatCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().ek(), FloatArraySerializer()), to(getKClass(Long), serializer_5(Companion_getInstance_0())), to(PrimitiveClasses_getInstance().dk(), LongArraySerializer()), to(PrimitiveClasses_getInstance().sj(), serializer_6(IntCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().ck(), IntArraySerializer()), to(PrimitiveClasses_getInstance().rj(), serializer_7(ShortCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().bk(), ShortArraySerializer()), to(PrimitiveClasses_getInstance().qj(), serializer_8(ByteCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().ak(), ByteArraySerializer()), to(PrimitiveClasses_getInstance().pj(), serializer_9(BooleanCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().yj(), BooleanArraySerializer()), to(getKClass(Unit), serializer_10(Unit_getInstance())), to(getKClass(Duration), serializer_11(Companion_getInstance()))]);
    }
  }
  function NamedValueDecoder() {
    TaggedDecoder.call(this);
  }
  NamedValueDecoder.prototype.sx = function (_this__u8e3s4, index) {
    return this.ux(this.tx(_this__u8e3s4, index));
  };
  NamedValueDecoder.prototype.ux = function (nestedName) {
    var tmp0_elvis_lhs = this.xx();
    return this.yx(tmp0_elvis_lhs == null ? '' : tmp0_elvis_lhs, nestedName);
  };
  NamedValueDecoder.prototype.tx = function (desc, index) {
    return desc.qo(index);
  };
  NamedValueDecoder.prototype.yx = function (parentName, childName) {
    var tmp;
    var tmp$ret$0;
    {
      tmp$ret$0 = charSequenceLength(parentName) === 0;
    }
    if (tmp$ret$0) {
      tmp = childName;
    } else {
      tmp = parentName + '.' + childName;
    }
    return tmp;
  };
  NamedValueDecoder.$metadata$ = classMeta('NamedValueDecoder', undefined, undefined, undefined, undefined, TaggedDecoder.prototype);
  function tagBlock($this, tag, block) {
    $this.ky(tag);
    var r = block();
    if (!$this.wx_1) {
      $this.ly();
    }
    $this.wx_1 = false;
    return r;
  }
  function TaggedDecoder$decodeSerializableElement$lambda(this$0, $deserializer, $previousValue) {
    return function () {
      return this$0.yp($deserializer, $previousValue);
    };
  }
  function TaggedDecoder() {
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.vx_1 = tmp$ret$0;
    this.wx_1 = false;
  }
  TaggedDecoder.prototype.yn = function () {
    return EmptySerializersModule_0();
  };
  TaggedDecoder.prototype.zx = function (tag) {
    throw SerializationException_init_$Create$('' + getKClassFromExpression(this) + " can't retrieve untyped values");
  };
  TaggedDecoder.prototype.ay = function (tag) {
    return true;
  };
  TaggedDecoder.prototype.by = function (tag) {
    var tmp = this.zx(tag);
    return typeof tmp === 'boolean' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.cy = function (tag) {
    var tmp = this.zx(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.dy = function (tag) {
    var tmp = this.zx(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.ey = function (tag) {
    var tmp = this.zx(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.fy = function (tag) {
    var tmp = this.zx(tag);
    return tmp instanceof Long ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.gy = function (tag) {
    var tmp = this.zx(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.hy = function (tag) {
    var tmp = this.zx(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.iy = function (tag) {
    var tmp = this.zx(tag);
    return tmp instanceof Char ? tmp.p1_1 : THROW_CCE();
  };
  TaggedDecoder.prototype.jy = function (tag) {
    var tmp = this.zx(tag);
    return typeof tmp === 'string' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.yp = function (deserializer, previousValue) {
    return this.zp(deserializer);
  };
  TaggedDecoder.prototype.np = function () {
    var tmp0_elvis_lhs = this.xx();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var currentTag = tmp;
    return this.ay(currentTag);
  };
  TaggedDecoder.prototype.op = function () {
    return null;
  };
  TaggedDecoder.prototype.pp = function () {
    return this.by(this.ly());
  };
  TaggedDecoder.prototype.qp = function () {
    return this.cy(this.ly());
  };
  TaggedDecoder.prototype.rp = function () {
    return this.dy(this.ly());
  };
  TaggedDecoder.prototype.sp = function () {
    return this.ey(this.ly());
  };
  TaggedDecoder.prototype.tp = function () {
    return this.fy(this.ly());
  };
  TaggedDecoder.prototype.up = function () {
    return this.gy(this.ly());
  };
  TaggedDecoder.prototype.vp = function () {
    return this.hy(this.ly());
  };
  TaggedDecoder.prototype.wp = function () {
    return this.iy(this.ly());
  };
  TaggedDecoder.prototype.xp = function () {
    return this.jy(this.ly());
  };
  TaggedDecoder.prototype.aq = function (descriptor) {
    return this;
  };
  TaggedDecoder.prototype.bq = function (descriptor) {
  };
  TaggedDecoder.prototype.cq = function (descriptor, index) {
    return this.by(this.sx(descriptor, index));
  };
  TaggedDecoder.prototype.dq = function (descriptor, index) {
    return this.cy(this.sx(descriptor, index));
  };
  TaggedDecoder.prototype.eq = function (descriptor, index) {
    return this.dy(this.sx(descriptor, index));
  };
  TaggedDecoder.prototype.fq = function (descriptor, index) {
    return this.ey(this.sx(descriptor, index));
  };
  TaggedDecoder.prototype.gq = function (descriptor, index) {
    return this.fy(this.sx(descriptor, index));
  };
  TaggedDecoder.prototype.hq = function (descriptor, index) {
    return this.gy(this.sx(descriptor, index));
  };
  TaggedDecoder.prototype.iq = function (descriptor, index) {
    return this.hy(this.sx(descriptor, index));
  };
  TaggedDecoder.prototype.jq = function (descriptor, index) {
    return this.iy(this.sx(descriptor, index));
  };
  TaggedDecoder.prototype.kq = function (descriptor, index) {
    return this.jy(this.sx(descriptor, index));
  };
  TaggedDecoder.prototype.lq = function (descriptor, index, deserializer, previousValue) {
    var tmp = this.sx(descriptor, index);
    return tagBlock(this, tmp, TaggedDecoder$decodeSerializableElement$lambda(this, deserializer, previousValue));
  };
  TaggedDecoder.prototype.xx = function () {
    return lastOrNull(this.vx_1);
  };
  TaggedDecoder.prototype.ky = function (name) {
    this.vx_1.b(name);
  };
  TaggedDecoder.prototype.ly = function () {
    var r = this.vx_1.d4(get_lastIndex_0(this.vx_1));
    this.wx_1 = true;
    return r;
  };
  TaggedDecoder.$metadata$ = classMeta('TaggedDecoder', [Decoder, CompositeDecoder]);
  function get_NULL() {
    init_properties_Tuples_kt_v8bvox();
    return NULL;
  }
  var NULL;
  function MapEntry(key, value) {
    this.my_1 = key;
    this.ny_1 = value;
  }
  MapEntry.prototype.l2 = function () {
    return this.my_1;
  };
  MapEntry.prototype.n2 = function () {
    return this.ny_1;
  };
  MapEntry.prototype.toString = function () {
    return 'MapEntry(key=' + this.my_1 + ', value=' + this.ny_1 + ')';
  };
  MapEntry.prototype.hashCode = function () {
    var result = this.my_1 == null ? 0 : hashCode(this.my_1);
    result = imul(result, 31) + (this.ny_1 == null ? 0 : hashCode(this.ny_1)) | 0;
    return result;
  };
  MapEntry.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MapEntry))
      return false;
    var tmp0_other_with_cast = other instanceof MapEntry ? other : THROW_CCE();
    if (!equals(this.my_1, tmp0_other_with_cast.my_1))
      return false;
    if (!equals(this.ny_1, tmp0_other_with_cast.ny_1))
      return false;
    return true;
  };
  MapEntry.$metadata$ = classMeta('MapEntry', [Entry]);
  function MapEntrySerializer$descriptor$lambda($keySerializer, $valueSerializer) {
    return function ($this$buildSerialDescriptor) {
      var tmp = $keySerializer.hn();
      $this$buildSerialDescriptor.rn('key', tmp, null, false, 12, null);
      var tmp_0 = $valueSerializer.hn();
      $this$buildSerialDescriptor.rn('value', tmp_0, null, false, 12, null);
      return Unit_getInstance();
    };
  }
  function MapEntrySerializer_0(keySerializer, valueSerializer) {
    KeyValueSerializer.call(this, keySerializer, valueSerializer);
    var tmp = this;
    var tmp_0 = MAP_getInstance();
    tmp.qy_1 = buildSerialDescriptor$default('kotlin.collections.Map.Entry', tmp_0, [], MapEntrySerializer$descriptor$lambda(keySerializer, valueSerializer), 4, null);
  }
  MapEntrySerializer_0.prototype.hn = function () {
    return this.qy_1;
  };
  MapEntrySerializer_0.prototype.ry = function (key, value) {
    return new MapEntry(key, value);
  };
  MapEntrySerializer_0.$metadata$ = classMeta('MapEntrySerializer', undefined, undefined, undefined, undefined, KeyValueSerializer.prototype);
  function PairSerializer$descriptor$lambda($keySerializer, $valueSerializer) {
    return function ($this$buildClassSerialDescriptor) {
      var tmp = $keySerializer.hn();
      $this$buildClassSerialDescriptor.rn('first', tmp, null, false, 12, null);
      var tmp_0 = $valueSerializer.hn();
      $this$buildClassSerialDescriptor.rn('second', tmp_0, null, false, 12, null);
      return Unit_getInstance();
    };
  }
  function PairSerializer_0(keySerializer, valueSerializer) {
    KeyValueSerializer.call(this, keySerializer, valueSerializer);
    var tmp = this;
    tmp.wy_1 = buildClassSerialDescriptor$default('kotlin.Pair', [], PairSerializer$descriptor$lambda(keySerializer, valueSerializer), 2, null);
  }
  PairSerializer_0.prototype.hn = function () {
    return this.wy_1;
  };
  PairSerializer_0.prototype.ry = function (key, value) {
    return to(key, value);
  };
  PairSerializer_0.$metadata$ = classMeta('PairSerializer', undefined, undefined, undefined, undefined, KeyValueSerializer.prototype);
  function decodeSequentially_1($this, composite) {
    var a = composite.mq($this.az_1, 0, $this.xy_1, null, 8, null);
    var b = composite.mq($this.az_1, 1, $this.yy_1, null, 8, null);
    var c = composite.mq($this.az_1, 2, $this.zy_1, null, 8, null);
    composite.bq($this.az_1);
    return new Triple(a, b, c);
  }
  function decodeStructure_0($this, composite) {
    var a = get_NULL();
    var b = get_NULL();
    var c = get_NULL();
    mainLoop: while (true) {
      var index = composite.oq($this.az_1);
      Companion_getInstance_2();
      if (index === -1) {
        break mainLoop;
      } else {
        if (index === 0) {
          a = composite.mq($this.az_1, 0, $this.xy_1, null, 8, null);
        } else {
          if (index === 1) {
            b = composite.mq($this.az_1, 1, $this.yy_1, null, 8, null);
          } else {
            if (index === 2) {
              c = composite.mq($this.az_1, 2, $this.zy_1, null, 8, null);
            } else {
              throw SerializationException_init_$Create$('Unexpected index ' + index);
            }
          }
        }
      }
    }
    composite.bq($this.az_1);
    if (a === get_NULL())
      throw SerializationException_init_$Create$("Element 'first' is missing");
    if (b === get_NULL())
      throw SerializationException_init_$Create$("Element 'second' is missing");
    if (c === get_NULL())
      throw SerializationException_init_$Create$("Element 'third' is missing");
    var tmp = (a == null ? true : isObject(a)) ? a : THROW_CCE();
    var tmp_0 = (b == null ? true : isObject(b)) ? b : THROW_CCE();
    return new Triple(tmp, tmp_0, (c == null ? true : isObject(c)) ? c : THROW_CCE());
  }
  function TripleSerializer$descriptor$lambda(this$0) {
    return function ($this$buildClassSerialDescriptor) {
      var tmp = this$0.xy_1.hn();
      $this$buildClassSerialDescriptor.rn('first', tmp, null, false, 12, null);
      var tmp_0 = this$0.yy_1.hn();
      $this$buildClassSerialDescriptor.rn('second', tmp_0, null, false, 12, null);
      var tmp_1 = this$0.zy_1.hn();
      $this$buildClassSerialDescriptor.rn('third', tmp_1, null, false, 12, null);
      return Unit_getInstance();
    };
  }
  function TripleSerializer_0(aSerializer, bSerializer, cSerializer) {
    this.xy_1 = aSerializer;
    this.yy_1 = bSerializer;
    this.zy_1 = cSerializer;
    var tmp = this;
    tmp.az_1 = buildClassSerialDescriptor$default('kotlin.Triple', [], TripleSerializer$descriptor$lambda(this), 2, null);
  }
  TripleSerializer_0.prototype.hn = function () {
    return this.az_1;
  };
  TripleSerializer_0.prototype.in = function (decoder) {
    var composite = decoder.aq(this.az_1);
    if (composite.nq()) {
      return decodeSequentially_1(this, composite);
    }
    return decodeStructure_0(this, composite);
  };
  TripleSerializer_0.$metadata$ = classMeta('TripleSerializer', [KSerializer]);
  function KeyValueSerializer(keySerializer, valueSerializer) {
    this.sy_1 = keySerializer;
    this.ty_1 = valueSerializer;
  }
  KeyValueSerializer.prototype.in = function (decoder) {
    var composite = decoder.aq(this.hn());
    if (composite.nq()) {
      var tmp = this.hn();
      var key = composite.mq(tmp, 0, this.sy_1, null, 8, null);
      var tmp_0 = this.hn();
      var value = composite.mq(tmp_0, 1, this.ty_1, null, 8, null);
      return this.ry(key, value);
    }
    var key_0 = get_NULL();
    var value_0 = get_NULL();
    mainLoop: while (true) {
      var idx = composite.oq(this.hn());
      Companion_getInstance_2();
      if (idx === -1) {
        break mainLoop;
      } else {
        if (idx === 0) {
          var tmp_1 = this.hn();
          key_0 = composite.mq(tmp_1, 0, this.sy_1, null, 8, null);
        } else {
          if (idx === 1) {
            var tmp_2 = this.hn();
            value_0 = composite.mq(tmp_2, 1, this.ty_1, null, 8, null);
          } else {
            throw SerializationException_init_$Create$('Invalid index: ' + idx);
          }
        }
      }
    }
    composite.bq(this.hn());
    if (key_0 === get_NULL())
      throw SerializationException_init_$Create$("Element 'key' is missing");
    if (value_0 === get_NULL())
      throw SerializationException_init_$Create$("Element 'value' is missing");
    var tmp_3 = (key_0 == null ? true : isObject(key_0)) ? key_0 : THROW_CCE();
    return this.ry(tmp_3, (value_0 == null ? true : isObject(value_0)) ? value_0 : THROW_CCE());
  };
  KeyValueSerializer.$metadata$ = classMeta('KeyValueSerializer', [KSerializer]);
  var properties_initialized_Tuples_kt_3vs7ar;
  function init_properties_Tuples_kt_v8bvox() {
    if (properties_initialized_Tuples_kt_3vs7ar) {
    } else {
      properties_initialized_Tuples_kt_3vs7ar = true;
      NULL = new Object();
    }
  }
  function get_EmptySerializersModuleLegacyJs() {
    init_properties_SerializersModule_kt_swldyf();
    return EmptySerializersModule;
  }
  var EmptySerializersModule;
  function SerializersModule() {
  }
  SerializersModule.prototype.co = function (kClass, typeArgumentsSerializers, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      typeArgumentsSerializers = emptyList();
    return $handler == null ? this.do(kClass, typeArgumentsSerializers) : $handler(kClass, typeArgumentsSerializers);
  };
  SerializersModule.$metadata$ = classMeta('SerializersModule');
  function SerialModuleImpl(class2ContextualFactory, polyBase2Serializers, polyBase2DefaultSerializerProvider, polyBase2NamedSerializers, polyBase2DefaultDeserializerProvider) {
    SerializersModule.call(this);
    this.bz_1 = class2ContextualFactory;
    this.cz_1 = polyBase2Serializers;
    this.dz_1 = polyBase2DefaultSerializerProvider;
    this.ez_1 = polyBase2NamedSerializers;
    this.fz_1 = polyBase2DefaultDeserializerProvider;
  }
  SerialModuleImpl.prototype.tq = function (baseClass, serializedClassName) {
    var tmp0_safe_receiver = this.ez_1.b3(baseClass);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$0;
      {
        tmp$ret$0 = ((!(tmp0_safe_receiver == null) ? isInterface(tmp0_safe_receiver, Map) : false) ? tmp0_safe_receiver : THROW_CCE()).b3(serializedClassName);
      }
      tmp = tmp$ret$0;
    }
    var tmp_0 = tmp;
    var registered = (!(tmp_0 == null) ? isInterface(tmp_0, KSerializer) : false) ? tmp_0 : null;
    if (!(registered == null))
      return registered;
    var tmp_1 = this.fz_1.b3(baseClass);
    var tmp1_safe_receiver = (!(tmp_1 == null) ? typeof tmp_1 === 'function' : false) ? tmp_1 : null;
    return tmp1_safe_receiver == null ? null : tmp1_safe_receiver(serializedClassName);
  };
  SerialModuleImpl.prototype.do = function (kClass, typeArgumentsSerializers) {
    var tmp0_safe_receiver = this.bz_1.b3(kClass);
    var tmp = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.gz(typeArgumentsSerializers);
    return (tmp == null ? true : isInterface(tmp, KSerializer)) ? tmp : null;
  };
  SerialModuleImpl.$metadata$ = classMeta('SerialModuleImpl', undefined, undefined, undefined, undefined, SerializersModule.prototype);
  var properties_initialized_SerializersModule_kt_fjigjn;
  function init_properties_SerializersModule_kt_swldyf() {
    if (properties_initialized_SerializersModule_kt_fjigjn) {
    } else {
      properties_initialized_SerializersModule_kt_fjigjn = true;
      EmptySerializersModule = new SerialModuleImpl(emptyMap(), emptyMap(), emptyMap(), emptyMap(), emptyMap());
    }
  }
  function EmptySerializersModule_0() {
    return get_EmptySerializersModuleLegacyJs();
  }
  function SerializableWith(serializer) {
    this.hz_1 = serializer;
  }
  SerializableWith.prototype.equals = function (other) {
    if (!(other instanceof SerializableWith))
      return false;
    var tmp0_other_with_cast = other instanceof SerializableWith ? other : THROW_CCE();
    if (!this.hz_1.equals(tmp0_other_with_cast.hz_1))
      return false;
    return true;
  };
  SerializableWith.prototype.hashCode = function () {
    return imul(getStringHashCode('serializer'), 127) ^ this.hz_1.hashCode();
  };
  SerializableWith.prototype.toString = function () {
    return '@kotlinx.serialization.SerializableWith(serializer=' + this.hz_1 + ')';
  };
  SerializableWith.$metadata$ = classMeta('SerializableWith', [Annotation], 0);
  function toNativeArrayImpl(_this__u8e3s4, eClass) {
    var tmp$ret$0;
    {
      tmp$ret$0 = copyToArray(_this__u8e3s4);
    }
    return tmp$ret$0;
  }
  function getChecked(_this__u8e3s4, index) {
    if (!(0 <= index ? index <= (_this__u8e3s4.length - 1 | 0) : false))
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' out of bounds ' + get_indices(_this__u8e3s4));
    return _this__u8e3s4[index];
  }
  function getChecked_0(_this__u8e3s4, index) {
    if (!(0 <= index ? index <= (_this__u8e3s4.length - 1 | 0) : false))
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' out of bounds ' + get_indices_0(_this__u8e3s4));
    return _this__u8e3s4[index];
  }
  function platformSpecificSerializerNotRegistered(_this__u8e3s4) {
    throw SerializationException_init_$Create$("Serializer for class '" + _this__u8e3s4.ei() + "' is not found.\n" + 'Mark the class as @Serializable or provide the serializer explicitly.\n' + 'On Kotlin/JS explicitly declared serializer should be used for interfaces and enums without @Serializable annotation');
  }
  function compiledSerializerImpl(_this__u8e3s4) {
    var tmp1_elvis_lhs = constructSerializerForGivenTypeArgs(_this__u8e3s4, []);
    var tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp$ret$0;
      {
        var tmp0_asDynamic = get_js(_this__u8e3s4);
        tmp$ret$0 = tmp0_asDynamic;
      }
      var tmp0_safe_receiver = tmp$ret$0.Companion;
      var tmp_0 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.serializer();
      tmp = (!(tmp_0 == null) ? isInterface(tmp_0, KSerializer) : false) ? tmp_0 : null;
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  }
  function isReferenceArray(rootClass) {
    return rootClass.equals(PrimitiveClasses_getInstance().vj());
  }
  function constructSerializerForGivenTypeArgs(_this__u8e3s4, args) {
    var tmp;
    try {
      var tmp$ret$0;
      {
        tmp$ret$0 = findAssociatedObject(_this__u8e3s4, getKClass(SerializableWith));
      }
      var assocObject = tmp$ret$0;
      var tmp_0;
      if (!(assocObject == null) ? isInterface(assocObject, KSerializer) : false) {
        tmp_0 = (!(assocObject == null) ? isInterface(assocObject, KSerializer) : false) ? assocObject : THROW_CCE();
      } else {
        if (!(assocObject == null) ? isInterface(assocObject, SerializerFactory) : false) {
          var tmp_1 = assocObject.xu(args.slice());
          tmp_0 = isInterface(tmp_1, KSerializer) ? tmp_1 : THROW_CCE();
        } else {
          if (get_isInterface(_this__u8e3s4)) {
            tmp_0 = new PolymorphicSerializer(_this__u8e3s4);
          } else {
            tmp_0 = null;
          }
        }
      }
      tmp = tmp_0;
    } catch ($p) {
      var tmp_2;
      {
        tmp_2 = null;
      }
      tmp = tmp_2;
    }
    return tmp;
  }
  function get_isInterface(_this__u8e3s4) {
    var tmp$ret$0;
    {
      var tmp0_asDynamic = get_js(_this__u8e3s4);
      tmp$ret$0 = tmp0_asDynamic;
    }
    var tmp0_safe_receiver = tmp$ret$0.$metadata$;
    return (tmp0_safe_receiver == null ? null : tmp0_safe_receiver.kind) == 'interface';
  }
  //region block: post-declaration
  SerialDescriptorImpl.prototype.eo = get_isNullable;
  SerialDescriptorImpl.prototype.lo = get_isInline;
  AbstractDecoder.prototype.mq = decodeSerializableElement$default;
  AbstractDecoder.prototype.zp = decodeSerializableValue;
  AbstractDecoder.prototype.nq = decodeSequentially;
  AbstractDecoder.prototype.pq = decodeCollectionSize;
  ListLikeDescriptor.prototype.eo = get_isNullable;
  ListLikeDescriptor.prototype.lo = get_isInline;
  ListLikeDescriptor.prototype.jo = get_annotations;
  PrimitiveArrayDescriptor.prototype.eo = get_isNullable;
  PrimitiveArrayDescriptor.prototype.lo = get_isInline;
  PrimitiveArrayDescriptor.prototype.jo = get_annotations;
  ArrayClassDesc.prototype.eo = get_isNullable;
  ArrayClassDesc.prototype.lo = get_isInline;
  ArrayClassDesc.prototype.jo = get_annotations;
  MapLikeDescriptor.prototype.eo = get_isNullable;
  MapLikeDescriptor.prototype.lo = get_isInline;
  MapLikeDescriptor.prototype.jo = get_annotations;
  HashMapClassDesc.prototype.eo = get_isNullable;
  HashMapClassDesc.prototype.lo = get_isInline;
  HashMapClassDesc.prototype.jo = get_annotations;
  LinkedHashMapClassDesc.prototype.eo = get_isNullable;
  LinkedHashMapClassDesc.prototype.lo = get_isInline;
  LinkedHashMapClassDesc.prototype.jo = get_annotations;
  ArrayListClassDesc.prototype.eo = get_isNullable;
  ArrayListClassDesc.prototype.lo = get_isInline;
  ArrayListClassDesc.prototype.jo = get_annotations;
  HashSetClassDesc.prototype.eo = get_isNullable;
  HashSetClassDesc.prototype.lo = get_isInline;
  HashSetClassDesc.prototype.jo = get_annotations;
  LinkedHashSetClassDesc.prototype.eo = get_isNullable;
  LinkedHashSetClassDesc.prototype.lo = get_isInline;
  LinkedHashSetClassDesc.prototype.jo = get_annotations;
  PluginGeneratedSerialDescriptor.prototype.eo = get_isNullable;
  PluginGeneratedSerialDescriptor.prototype.lo = get_isInline;
  PrimitiveSerialDescriptor_0.prototype.eo = get_isNullable;
  PrimitiveSerialDescriptor_0.prototype.lo = get_isInline;
  PrimitiveSerialDescriptor_0.prototype.jo = get_annotations;
  TaggedDecoder.prototype.mq = decodeSerializableElement$default;
  TaggedDecoder.prototype.zp = decodeSerializableValue;
  TaggedDecoder.prototype.nq = decodeSequentially;
  TaggedDecoder.prototype.pq = decodeCollectionSize;
  NamedValueDecoder.prototype.zp = decodeSerializableValue;
  NamedValueDecoder.prototype.mq = decodeSerializableElement$default;
  NamedValueDecoder.prototype.nq = decodeSequentially;
  NamedValueDecoder.prototype.pq = decodeCollectionSize;
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = buildSerialDescriptor$default;
  _.$_$.b = decodeSerializableElement$default;
  _.$_$.c = SerializationException_init_$Init$;
  _.$_$.d = UnknownFieldException_init_$Create$;
  _.$_$.e = SEALED_getInstance;
  _.$_$.f = STRING_getInstance;
  _.$_$.g = CONTEXTUAL_getInstance;
  _.$_$.h = ENUM_getInstance;
  _.$_$.i = LIST_getInstance;
  _.$_$.j = MAP_getInstance;
  _.$_$.k = Companion_getInstance_2;
  _.$_$.l = FloatSerializer_getInstance;
  _.$_$.m = IntSerializer_getInstance;
  _.$_$.n = StringSerializer_getInstance;
  _.$_$.o = ListSerializer;
  _.$_$.p = MapSerializer;
  _.$_$.q = serializer_1;
  _.$_$.r = PolymorphicKind;
  _.$_$.s = PrimitiveKind;
  _.$_$.t = PrimitiveSerialDescriptor;
  _.$_$.u = get_annotations;
  _.$_$.v = get_isInline;
  _.$_$.w = get_isNullable;
  _.$_$.x = SerialDescriptor;
  _.$_$.y = getContextualDescriptor;
  _.$_$.z = AbstractDecoder;
  _.$_$.a1 = decodeCollectionSize;
  _.$_$.b1 = decodeSequentially;
  _.$_$.c1 = CompositeDecoder;
  _.$_$.d1 = Decoder;
  _.$_$.e1 = AbstractPolymorphicSerializer;
  _.$_$.f1 = ArrayListSerializer;
  _.$_$.g1 = ElementMarker;
  _.$_$.h1 = typeParametersSerializers;
  _.$_$.i1 = GeneratedSerializer;
  _.$_$.j1 = NamedValueDecoder;
  _.$_$.k1 = PluginGeneratedSerialDescriptor;
  _.$_$.l1 = SerializerFactory;
  _.$_$.m1 = jsonCachedSerialNames;
  _.$_$.n1 = throwMissingFieldException;
  _.$_$.o1 = EmptySerializersModule_0;
  _.$_$.p1 = DeserializationStrategy;
  _.$_$.q1 = KSerializer;
  _.$_$.r1 = MissingFieldException;
  _.$_$.s1 = SerializationException;
  _.$_$.t1 = StringFormat;
  _.$_$.u1 = serializer;
  _.$_$.v1 = serializer_0;
  //endregion
  return _;
}));



/***/ }),

/***/ "./kotlin/kotlinx-serialization-kotlinx-serialization-json-js-ir.js":
/*!**************************************************************************!*\
  !*** ./kotlin/kotlinx-serialization-kotlinx-serialization-json-js-ir.js ***!
  \**************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
  if (true)
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ./kotlinx-serialization-kotlinx-serialization-core-js-ir.js */ "./kotlin/kotlinx-serialization-kotlinx-serialization-core-js-ir.js"), __webpack_require__(/*! ./kotlin-kotlin-stdlib-js-ir.js */ "./kotlin/kotlin-kotlin-stdlib-js-ir.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
}(this, function (_, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core, kotlin_kotlin) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var EmptySerializersModule = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.o1;
  var objectMeta = kotlin_kotlin.$_$.q9;
  var StringFormat = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.t1;
  var classMeta = kotlin_kotlin.$_$.o8;
  var Annotation = kotlin_kotlin.$_$.cc;
  var Decoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.d1;
  var CompositeDecoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.c1;
  var interfaceMeta = kotlin_kotlin.$_$.x8;
  var Unit_getInstance = kotlin_kotlin.$_$.j3;
  var StringBuilder_init_$Create$ = kotlin_kotlin.$_$.i1;
  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.f2;
  var THROW_CCE = kotlin_kotlin.$_$.tc;
  var equals = kotlin_kotlin.$_$.q8;
  var hashCode = kotlin_kotlin.$_$.v8;
  var joinToString$default = kotlin_kotlin.$_$.h;
  var Map = kotlin_kotlin.$_$.u3;
  var toInt = kotlin_kotlin.$_$.ub;
  var List = kotlin_kotlin.$_$.s3;
  var LazyThreadSafetyMode_PUBLICATION_getInstance = kotlin_kotlin.$_$.e;
  var lazy = kotlin_kotlin.$_$.kd;
  var SerializerFactory = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.l1;
  var toString = kotlin_kotlin.$_$.u9;
  var getKClassFromExpression = kotlin_kotlin.$_$.c;
  var getStringHashCode = kotlin_kotlin.$_$.u8;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.p1;
  var toLong = kotlin_kotlin.$_$.xb;
  var toDouble = kotlin_kotlin.$_$.sb;
  var StringCompanionObject_getInstance = kotlin_kotlin.$_$.b3;
  var serializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.q;
  var MapSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.p;
  var SerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.x;
  var KSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.q1;
  var SEALED_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.e;
  var buildSerialDescriptor$default = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.a;
  var STRING_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.f;
  var ListSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.o;
  var ENUM_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.h;
  var PrimitiveSerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.t;
  var isInterface = kotlin_kotlin.$_$.g9;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.u1;
  var lazy_0 = kotlin_kotlin.$_$.ld;
  var get_isNullable = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.w;
  var get_isInline = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.v;
  var get_annotations = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.u;
  var KProperty1 = kotlin_kotlin.$_$.la;
  var getPropertyCallableRef = kotlin_kotlin.$_$.t8;
  var ElementMarker = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.g1;
  var captureStack = kotlin_kotlin.$_$.j8;
  var SerializationException = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.s1;
  var SerializationException_init_$Init$ = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.c;
  var charSequenceLength = kotlin_kotlin.$_$.m8;
  var charSequenceSubSequence = kotlin_kotlin.$_$.n8;
  var coerceAtLeast = kotlin_kotlin.$_$.ca;
  var coerceAtMost = kotlin_kotlin.$_$.da;
  var Companion_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.k;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.s;
  var singleOrNull = kotlin_kotlin.$_$.q6;
  var arrayIterator = kotlin_kotlin.$_$.h8;
  var ensureNotNull = kotlin_kotlin.$_$.dd;
  var emptyMap = kotlin_kotlin.$_$.h5;
  var getValue = kotlin_kotlin.$_$.m5;
  var copyOf = kotlin_kotlin.$_$.b5;
  var copyOf_0 = kotlin_kotlin.$_$.c5;
  var fillArrayVal = kotlin_kotlin.$_$.r8;
  var LIST_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.i;
  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.b1;
  var DeepRecursiveFunction = kotlin_kotlin.$_$.gc;
  var invoke = kotlin_kotlin.$_$.ed;
  var CoroutineImpl = kotlin_kotlin.$_$.z7;
  var DeepRecursiveScope = kotlin_kotlin.$_$.hc;
  var Unit = kotlin_kotlin.$_$.xc;
  var get_COROUTINE_SUSPENDED = kotlin_kotlin.$_$.k7;
  var SuspendFunction2 = kotlin_kotlin.$_$.b8;
  var AbstractPolymorphicSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.e1;
  var getKClass = kotlin_kotlin.$_$.d;
  var DeserializationStrategy = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.p1;
  var isObject = kotlin_kotlin.$_$.i9;
  var AbstractDecoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.z;
  var plus = kotlin_kotlin.$_$.nd;
  var MissingFieldException = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.r1;
  var decodeSerializableElement$default = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.b;
  var toLong_0 = kotlin_kotlin.$_$.s9;
  var IllegalArgumentException = kotlin_kotlin.$_$.lc;
  var isFinite = kotlin_kotlin.$_$.gd;
  var isFinite_0 = kotlin_kotlin.$_$.fd;
  var charSequenceGet = kotlin_kotlin.$_$.l8;
  var decodeSequentially = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.b1;
  var decodeCollectionSize = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.a1;
  var numberToChar = kotlin_kotlin.$_$.o9;
  var Char__toInt_impl_vasixd = kotlin_kotlin.$_$.i2;
  var equals_0 = kotlin_kotlin.$_$.eb;
  var Char = kotlin_kotlin.$_$.dc;
  var toByte = kotlin_kotlin.$_$.r9;
  var NamedValueDecoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.j1;
  var PolymorphicKind = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.r;
  var PrimitiveKind = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.s;
  var MAP_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.j;
  var IllegalArgumentException_init_$Create$_0 = kotlin_kotlin.$_$.n1;
  var ByteCompanionObject_getInstance = kotlin_kotlin.$_$.w2;
  var ShortCompanionObject_getInstance = kotlin_kotlin.$_$.a3;
  var toShort = kotlin_kotlin.$_$.t9;
  var single = kotlin_kotlin.$_$.nb;
  var jsonCachedSerialNames = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.m1;
  var emptySet = kotlin_kotlin.$_$.i5;
  var plus_0 = kotlin_kotlin.$_$.f6;
  var toList = kotlin_kotlin.$_$.z6;
  var Enum = kotlin_kotlin.$_$.ic;
  var getContextualDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.y;
  var CONTEXTUAL_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.g;
  var toString_0 = kotlin_kotlin.$_$.j2;
  var last = kotlin_kotlin.$_$.w5;
  var removeLast = kotlin_kotlin.$_$.k6;
  var lastIndexOf$default = kotlin_kotlin.$_$.n;
  var Long = kotlin_kotlin.$_$.nc;
  var Char__minus_impl_a2frrh = kotlin_kotlin.$_$.g2;
  var Companion_getInstance_0 = kotlin_kotlin.$_$.h3;
  var charArray = kotlin_kotlin.$_$.k8;
  var indexOf$default = kotlin_kotlin.$_$.m;
  var HashMap_init_$Create$ = kotlin_kotlin.$_$.u;
  //endregion
  //region block: pre-declaration
  Default.prototype = Object.create(Json.prototype);
  Default.prototype.constructor = Default;
  JsonObject.prototype = Object.create(JsonElement.prototype);
  JsonObject.prototype.constructor = JsonObject;
  JsonPrimitive.prototype = Object.create(JsonElement.prototype);
  JsonPrimitive.prototype.constructor = JsonPrimitive;
  JsonArray.prototype = Object.create(JsonElement.prototype);
  JsonArray.prototype.constructor = JsonArray;
  JsonNull.prototype = Object.create(JsonPrimitive.prototype);
  JsonNull.prototype.constructor = JsonNull;
  JsonLiteral.prototype = Object.create(JsonPrimitive.prototype);
  JsonLiteral.prototype.constructor = JsonLiteral;
  JsonException.prototype = Object.create(SerializationException.prototype);
  JsonException.prototype.constructor = JsonException;
  JsonDecodingException.prototype = Object.create(JsonException.prototype);
  JsonDecodingException.prototype.constructor = JsonDecodingException;
  JsonEncodingException.prototype = Object.create(JsonException.prototype);
  JsonEncodingException.prototype.constructor = JsonEncodingException;
  JsonTreeReader$readDeepRecursive$slambda.prototype = Object.create(CoroutineImpl.prototype);
  JsonTreeReader$readDeepRecursive$slambda.prototype.constructor = JsonTreeReader$readDeepRecursive$slambda;
  $readObjectCOROUTINE$0.prototype = Object.create(CoroutineImpl.prototype);
  $readObjectCOROUTINE$0.prototype.constructor = $readObjectCOROUTINE$0;
  StreamingJsonDecoder.prototype = Object.create(AbstractDecoder.prototype);
  StreamingJsonDecoder.prototype.constructor = StreamingJsonDecoder;
  AbstractJsonTreeDecoder.prototype = Object.create(NamedValueDecoder.prototype);
  AbstractJsonTreeDecoder.prototype.constructor = AbstractJsonTreeDecoder;
  JsonTreeDecoder.prototype = Object.create(AbstractJsonTreeDecoder.prototype);
  JsonTreeDecoder.prototype.constructor = JsonTreeDecoder;
  JsonTreeListDecoder.prototype = Object.create(AbstractJsonTreeDecoder.prototype);
  JsonTreeListDecoder.prototype.constructor = JsonTreeListDecoder;
  JsonTreeMapDecoder.prototype = Object.create(JsonTreeDecoder.prototype);
  JsonTreeMapDecoder.prototype.constructor = JsonTreeMapDecoder;
  WriteMode.prototype = Object.create(Enum.prototype);
  WriteMode.prototype.constructor = WriteMode;
  StringJsonLexer.prototype = Object.create(AbstractJsonLexer.prototype);
  StringJsonLexer.prototype.constructor = StringJsonLexer;
  //endregion
  function Default() {
    Default_instance = this;
    Json.call(this, JsonConfiguration_init_$Create$(false, false, false, false, false, false, null, false, false, null, false, false, 4095, null), EmptySerializersModule());
  }
  Default.$metadata$ = objectMeta('Default', undefined, undefined, undefined, undefined, Json.prototype);
  var Default_instance;
  function Default_getInstance() {
    if (Default_instance == null)
      new Default();
    return Default_instance;
  }
  function Json(configuration, serializersModule) {
    Default_getInstance();
    this.iz_1 = configuration;
    this.jz_1 = serializersModule;
    this.kz_1 = new DescriptorSchemaCache();
  }
  Json.prototype.yn = function () {
    return this.jz_1;
  };
  Json.prototype.xn = function (deserializer, string) {
    var lexer = new StringJsonLexer(string);
    var input = new StreamingJsonDecoder(this, WriteMode_OBJ_getInstance(), lexer, deserializer.hn(), null);
    var result = input.zp(deserializer);
    lexer.xz();
    return result;
  };
  Json.$metadata$ = classMeta('Json', [StringFormat]);
  function JsonClassDiscriminator() {
  }
  JsonClassDiscriminator.$metadata$ = classMeta('JsonClassDiscriminator', [Annotation]);
  function JsonNames() {
  }
  JsonNames.$metadata$ = classMeta('JsonNames', [Annotation]);
  function JsonConfiguration_init_$Init$(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, explicitNulls, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, useAlternativeNames, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      encodeDefaults = false;
    if (!(($mask0 & 2) === 0))
      ignoreUnknownKeys = false;
    if (!(($mask0 & 4) === 0))
      isLenient = false;
    if (!(($mask0 & 8) === 0))
      allowStructuredMapKeys = false;
    if (!(($mask0 & 16) === 0))
      prettyPrint = false;
    if (!(($mask0 & 32) === 0))
      explicitNulls = true;
    if (!(($mask0 & 64) === 0))
      prettyPrintIndent = '    ';
    if (!(($mask0 & 128) === 0))
      coerceInputValues = false;
    if (!(($mask0 & 256) === 0))
      useArrayPolymorphism = false;
    if (!(($mask0 & 512) === 0))
      classDiscriminator = 'type';
    if (!(($mask0 & 1024) === 0))
      allowSpecialFloatingPointValues = false;
    if (!(($mask0 & 2048) === 0))
      useAlternativeNames = true;
    JsonConfiguration.call($this, encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, explicitNulls, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, useAlternativeNames);
    return $this;
  }
  function JsonConfiguration_init_$Create$(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, explicitNulls, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, useAlternativeNames, $mask0, $marker) {
    return JsonConfiguration_init_$Init$(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, explicitNulls, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, useAlternativeNames, $mask0, $marker, Object.create(JsonConfiguration.prototype));
  }
  function JsonConfiguration(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, explicitNulls, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, useAlternativeNames) {
    this.yz_1 = encodeDefaults;
    this.zz_1 = ignoreUnknownKeys;
    this.a10_1 = isLenient;
    this.b10_1 = allowStructuredMapKeys;
    this.c10_1 = prettyPrint;
    this.d10_1 = explicitNulls;
    this.e10_1 = prettyPrintIndent;
    this.f10_1 = coerceInputValues;
    this.g10_1 = useArrayPolymorphism;
    this.h10_1 = classDiscriminator;
    this.i10_1 = allowSpecialFloatingPointValues;
    this.j10_1 = useAlternativeNames;
  }
  JsonConfiguration.prototype.k10 = function () {
    return this.a10_1;
  };
  JsonConfiguration.prototype.toString = function () {
    return 'JsonConfiguration(encodeDefaults=' + this.yz_1 + ', ignoreUnknownKeys=' + this.zz_1 + ', isLenient=' + this.a10_1 + ', ' + ('allowStructuredMapKeys=' + this.b10_1 + ', prettyPrint=' + this.c10_1 + ', explicitNulls=' + this.d10_1 + ', ') + ("prettyPrintIndent='" + this.e10_1 + "', coerceInputValues=" + this.f10_1 + ', useArrayPolymorphism=' + this.g10_1 + ', ') + ("classDiscriminator='" + this.h10_1 + "', allowSpecialFloatingPointValues=" + this.i10_1 + ')');
  };
  JsonConfiguration.$metadata$ = classMeta('JsonConfiguration');
  function JsonDecoder() {
  }
  JsonDecoder.$metadata$ = interfaceMeta('JsonDecoder', [Decoder, CompositeDecoder]);
  function Companion() {
    Companion_instance = this;
  }
  Companion.$metadata$ = objectMeta('Companion');
  var Companion_instance;
  function Companion_getInstance_1() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function JsonObject$toString$lambda() {
    return function (_name_for_destructuring_parameter_0__wldtmu) {
      var tmp$ret$0;
      {
        tmp$ret$0 = _name_for_destructuring_parameter_0__wldtmu.l2();
      }
      var k = tmp$ret$0;
      var tmp$ret$1;
      {
        tmp$ret$1 = _name_for_destructuring_parameter_0__wldtmu.n2();
      }
      var v = tmp$ret$1;
      var tmp$ret$3;
      {
        {
        }
        var tmp$ret$2;
        {
          var tmp0_apply = StringBuilder_init_$Create$();
          {
          }
          {
            printQuoted(tmp0_apply, k);
            tmp0_apply.ea(_Char___init__impl__6a9atx(58));
            tmp0_apply.ob(v);
          }
          tmp$ret$2 = tmp0_apply;
        }
        tmp$ret$3 = tmp$ret$2.toString();
      }
      return tmp$ret$3;
    };
  }
  function JsonObject(content) {
    Companion_getInstance_1();
    JsonElement.call(this);
    this.n10_1 = content;
  }
  JsonObject.prototype.a1 = function () {
    return this.n10_1.a1();
  };
  JsonObject.prototype.c3 = function () {
    return this.n10_1.c3();
  };
  JsonObject.prototype.m = function () {
    return this.n10_1.m();
  };
  JsonObject.prototype.d3 = function () {
    return this.n10_1.d3();
  };
  JsonObject.prototype.o10 = function (key) {
    return this.n10_1.v2(key);
  };
  JsonObject.prototype.v2 = function (key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return false;
    return this.o10((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
  };
  JsonObject.prototype.p10 = function (key) {
    return this.n10_1.b3(key);
  };
  JsonObject.prototype.b3 = function (key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return null;
    return this.p10((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
  };
  JsonObject.prototype.q = function () {
    return this.n10_1.q();
  };
  JsonObject.prototype.equals = function (other) {
    return equals(this.n10_1, other);
  };
  JsonObject.prototype.hashCode = function () {
    return hashCode(this.n10_1);
  };
  JsonObject.prototype.toString = function () {
    var tmp = this.n10_1.a1();
    return joinToString$default(tmp, ',', '{', '}', 0, null, JsonObject$toString$lambda(), 24, null);
  };
  JsonObject.$metadata$ = classMeta('JsonObject', [Map], undefined, {0: JsonObjectSerializer_getInstance}, undefined, JsonElement.prototype);
  function Companion_0() {
    Companion_instance_0 = this;
  }
  Companion_0.$metadata$ = objectMeta('Companion');
  var Companion_instance_0;
  function Companion_getInstance_2() {
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function JsonElement() {
    Companion_getInstance_2();
  }
  JsonElement.$metadata$ = classMeta('JsonElement', undefined, undefined, {0: JsonElementSerializer_getInstance});
  function get_int(_this__u8e3s4) {
    return toInt(_this__u8e3s4.q10());
  }
  function Companion_1() {
    Companion_instance_1 = this;
  }
  Companion_1.$metadata$ = objectMeta('Companion');
  var Companion_instance_1;
  function Companion_getInstance_3() {
    if (Companion_instance_1 == null)
      new Companion_1();
    return Companion_instance_1;
  }
  function JsonPrimitive() {
    Companion_getInstance_3();
    JsonElement.call(this);
  }
  JsonPrimitive.prototype.toString = function () {
    return this.q10();
  };
  JsonPrimitive.$metadata$ = classMeta('JsonPrimitive', undefined, undefined, {0: JsonPrimitiveSerializer_getInstance}, undefined, JsonElement.prototype);
  function get_jsonPrimitive(_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof JsonPrimitive ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      error(_this__u8e3s4, 'JsonPrimitive');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function Companion_2() {
    Companion_instance_2 = this;
  }
  Companion_2.$metadata$ = objectMeta('Companion');
  var Companion_instance_2;
  function Companion_getInstance_4() {
    if (Companion_instance_2 == null)
      new Companion_2();
    return Companion_instance_2;
  }
  function JsonArray(content) {
    Companion_getInstance_4();
    JsonElement.call(this);
    this.r10_1 = content;
  }
  JsonArray.prototype.m = function () {
    return this.r10_1.m();
  };
  JsonArray.prototype.s10 = function (element) {
    return this.r10_1.p(element);
  };
  JsonArray.prototype.p = function (element) {
    if (!(element instanceof JsonElement))
      return false;
    return this.s10(element instanceof JsonElement ? element : THROW_CCE());
  };
  JsonArray.prototype.t10 = function (elements) {
    return this.r10_1.s1(elements);
  };
  JsonArray.prototype.s1 = function (elements) {
    return this.t10(elements);
  };
  JsonArray.prototype.r = function (index) {
    return this.r10_1.r(index);
  };
  JsonArray.prototype.u10 = function (element) {
    return this.r10_1.u(element);
  };
  JsonArray.prototype.u = function (element) {
    if (!(element instanceof JsonElement))
      return -1;
    return this.u10(element instanceof JsonElement ? element : THROW_CCE());
  };
  JsonArray.prototype.q = function () {
    return this.r10_1.q();
  };
  JsonArray.prototype.h = function () {
    return this.r10_1.h();
  };
  JsonArray.prototype.equals = function (other) {
    return equals(this.r10_1, other);
  };
  JsonArray.prototype.hashCode = function () {
    return hashCode(this.r10_1);
  };
  JsonArray.prototype.toString = function () {
    return joinToString$default(this.r10_1, ',', '[', ']', 0, null, null, 56, null);
  };
  JsonArray.$metadata$ = classMeta('JsonArray', [List], undefined, {0: JsonArraySerializer_getInstance}, undefined, JsonElement.prototype);
  function get_jsonObject(_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof JsonObject ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      error(_this__u8e3s4, 'JsonObject');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function JsonNull$$cachedSerializer$delegate$_anonymous__7w2ks1() {
    return function () {
      return JsonNullSerializer_getInstance();
    };
  }
  function JsonNull() {
    JsonNull_instance = this;
    JsonPrimitive.call(this);
    this.v10_1 = 'null';
    var tmp = this;
    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp.w10_1 = lazy(tmp_0, JsonNull$$cachedSerializer$delegate$_anonymous__7w2ks1());
  }
  JsonNull.prototype.q10 = function () {
    return this.v10_1;
  };
  JsonNull.prototype.x10 = function () {
    return this.w10_1.n2();
  };
  JsonNull.prototype.xu = function (typeParamsSerializers) {
    return this.x10();
  };
  JsonNull.$metadata$ = objectMeta('JsonNull', [SerializerFactory], undefined, {0: JsonNullSerializer_getInstance}, undefined, JsonPrimitive.prototype);
  var JsonNull_instance;
  function JsonNull_getInstance() {
    if (JsonNull_instance == null)
      new JsonNull();
    return JsonNull_instance;
  }
  function JsonLiteral(body, isString) {
    JsonPrimitive.call(this);
    this.y10_1 = isString;
    this.z10_1 = toString(body);
  }
  JsonLiteral.prototype.q10 = function () {
    return this.z10_1;
  };
  JsonLiteral.prototype.toString = function () {
    var tmp;
    if (this.y10_1) {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          var tmp0_apply = StringBuilder_init_$Create$();
          {
          }
          {
            printQuoted(tmp0_apply, this.z10_1);
          }
          tmp$ret$0 = tmp0_apply;
        }
        tmp$ret$1 = tmp$ret$0.toString();
      }
      tmp = tmp$ret$1;
    } else {
      tmp = this.z10_1;
    }
    return tmp;
  };
  JsonLiteral.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof JsonLiteral)
      other;
    else
      THROW_CCE();
    if (!(this.y10_1 === other.y10_1))
      return false;
    if (!(this.z10_1 === other.z10_1))
      return false;
    return true;
  };
  JsonLiteral.prototype.hashCode = function () {
    var result = this.y10_1 | 0;
    result = imul(31, result) + getStringHashCode(this.z10_1) | 0;
    return result;
  };
  JsonLiteral.$metadata$ = classMeta('JsonLiteral', undefined, undefined, undefined, undefined, JsonPrimitive.prototype);
  function error(_this__u8e3s4, element) {
    throw IllegalArgumentException_init_$Create$('Element ' + getKClassFromExpression(_this__u8e3s4) + ' is not a ' + element);
  }
  function get_booleanOrNull(_this__u8e3s4) {
    return toBooleanStrictOrNull(_this__u8e3s4.q10());
  }
  function JsonPrimitive_0(value) {
    if (value == null)
      return JsonNull_getInstance();
    return new JsonLiteral(value, true);
  }
  function get_long(_this__u8e3s4) {
    return toLong(_this__u8e3s4.q10());
  }
  function get_float(_this__u8e3s4) {
    var tmp$ret$2;
    {
      var tmp0_toFloat = _this__u8e3s4.q10();
      var tmp$ret$1;
      {
        var tmp0_unsafeCast = toDouble(tmp0_toFloat);
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_unsafeCast;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  }
  function get_double(_this__u8e3s4) {
    return toDouble(_this__u8e3s4.q10());
  }
  function get_contentOrNull(_this__u8e3s4) {
    var tmp;
    if (_this__u8e3s4 instanceof JsonNull) {
      tmp = null;
    } else {
      tmp = _this__u8e3s4.q10();
    }
    return tmp;
  }
  function JsonObjectDescriptor() {
    JsonObjectDescriptor_instance = this;
    this.a11_1 = MapSerializer(serializer(StringCompanionObject_getInstance()), JsonElementSerializer_getInstance()).hn();
    this.b11_1 = 'kotlinx.serialization.json.JsonObject';
  }
  JsonObjectDescriptor.prototype.jo = function () {
    return this.a11_1.jo();
  };
  JsonObjectDescriptor.prototype.ko = function () {
    return this.a11_1.ko();
  };
  JsonObjectDescriptor.prototype.lo = function () {
    return this.a11_1.lo();
  };
  JsonObjectDescriptor.prototype.eo = function () {
    return this.a11_1.eo();
  };
  JsonObjectDescriptor.prototype.mo = function () {
    return this.a11_1.mo();
  };
  JsonObjectDescriptor.prototype.no = function (index) {
    return this.a11_1.no(index);
  };
  JsonObjectDescriptor.prototype.oo = function (index) {
    return this.a11_1.oo(index);
  };
  JsonObjectDescriptor.prototype.po = function (name) {
    return this.a11_1.po(name);
  };
  JsonObjectDescriptor.prototype.qo = function (index) {
    return this.a11_1.qo(index);
  };
  JsonObjectDescriptor.prototype.ro = function (index) {
    return this.a11_1.ro(index);
  };
  JsonObjectDescriptor.prototype.io = function () {
    return this.b11_1;
  };
  JsonObjectDescriptor.$metadata$ = objectMeta('JsonObjectDescriptor', [SerialDescriptor]);
  var JsonObjectDescriptor_instance;
  function JsonObjectDescriptor_getInstance() {
    if (JsonObjectDescriptor_instance == null)
      new JsonObjectDescriptor();
    return JsonObjectDescriptor_instance;
  }
  function JsonObjectSerializer() {
    JsonObjectSerializer_instance = this;
    this.c11_1 = JsonObjectDescriptor_getInstance();
  }
  JsonObjectSerializer.prototype.hn = function () {
    return this.c11_1;
  };
  JsonObjectSerializer.prototype.in = function (decoder) {
    verify(decoder);
    return new JsonObject(MapSerializer(serializer(StringCompanionObject_getInstance()), JsonElementSerializer_getInstance()).in(decoder));
  };
  JsonObjectSerializer.$metadata$ = objectMeta('JsonObjectSerializer', [KSerializer]);
  var JsonObjectSerializer_instance;
  function JsonObjectSerializer_getInstance() {
    if (JsonObjectSerializer_instance == null)
      new JsonObjectSerializer();
    return JsonObjectSerializer_instance;
  }
  function JsonElementSerializer$descriptor$lambda$lambda() {
    return function () {
      return JsonPrimitiveSerializer_getInstance().d11_1;
    };
  }
  function JsonElementSerializer$descriptor$lambda$lambda_0() {
    return function () {
      return JsonNullSerializer_getInstance().e11_1;
    };
  }
  function JsonElementSerializer$descriptor$lambda$lambda_1() {
    return function () {
      return JsonLiteralSerializer_getInstance().f11_1;
    };
  }
  function JsonElementSerializer$descriptor$lambda$lambda_2() {
    return function () {
      return JsonObjectSerializer_getInstance().c11_1;
    };
  }
  function JsonElementSerializer$descriptor$lambda$lambda_3() {
    return function () {
      return JsonArraySerializer_getInstance().g11_1;
    };
  }
  function JsonElementSerializer$descriptor$lambda() {
    return function ($this$buildSerialDescriptor) {
      var tmp = defer(JsonElementSerializer$descriptor$lambda$lambda());
      $this$buildSerialDescriptor.rn('JsonPrimitive', tmp, null, false, 12, null);
      var tmp_0 = defer(JsonElementSerializer$descriptor$lambda$lambda_0());
      $this$buildSerialDescriptor.rn('JsonNull', tmp_0, null, false, 12, null);
      var tmp_1 = defer(JsonElementSerializer$descriptor$lambda$lambda_1());
      $this$buildSerialDescriptor.rn('JsonLiteral', tmp_1, null, false, 12, null);
      var tmp_2 = defer(JsonElementSerializer$descriptor$lambda$lambda_2());
      $this$buildSerialDescriptor.rn('JsonObject', tmp_2, null, false, 12, null);
      var tmp_3 = defer(JsonElementSerializer$descriptor$lambda$lambda_3());
      $this$buildSerialDescriptor.rn('JsonArray', tmp_3, null, false, 12, null);
      return Unit_getInstance();
    };
  }
  function JsonElementSerializer() {
    JsonElementSerializer_instance = this;
    var tmp = this;
    var tmp_0 = SEALED_getInstance();
    tmp.h11_1 = buildSerialDescriptor$default('kotlinx.serialization.json.JsonElement', tmp_0, [], JsonElementSerializer$descriptor$lambda(), 4, null);
  }
  JsonElementSerializer.prototype.hn = function () {
    return this.h11_1;
  };
  JsonElementSerializer.prototype.in = function (decoder) {
    var input = asJsonDecoder(decoder);
    return input.m10();
  };
  JsonElementSerializer.$metadata$ = objectMeta('JsonElementSerializer', [KSerializer]);
  var JsonElementSerializer_instance;
  function JsonElementSerializer_getInstance() {
    if (JsonElementSerializer_instance == null)
      new JsonElementSerializer();
    return JsonElementSerializer_instance;
  }
  function JsonPrimitiveSerializer() {
    JsonPrimitiveSerializer_instance = this;
    var tmp = this;
    var tmp_0 = STRING_getInstance();
    tmp.d11_1 = buildSerialDescriptor$default('kotlinx.serialization.json.JsonPrimitive', tmp_0, [], null, 12, null);
  }
  JsonPrimitiveSerializer.prototype.hn = function () {
    return this.d11_1;
  };
  JsonPrimitiveSerializer.prototype.in = function (decoder) {
    var result = asJsonDecoder(decoder).m10();
    if (!(result instanceof JsonPrimitive))
      throw JsonDecodingException_0(-1, 'Unexpected JSON element, expected JsonPrimitive, had ' + getKClassFromExpression(result), toString(result));
    return result;
  };
  JsonPrimitiveSerializer.$metadata$ = objectMeta('JsonPrimitiveSerializer', [KSerializer]);
  var JsonPrimitiveSerializer_instance;
  function JsonPrimitiveSerializer_getInstance() {
    if (JsonPrimitiveSerializer_instance == null)
      new JsonPrimitiveSerializer();
    return JsonPrimitiveSerializer_instance;
  }
  function JsonArrayDescriptor() {
    JsonArrayDescriptor_instance = this;
    this.i11_1 = ListSerializer(JsonElementSerializer_getInstance()).hn();
    this.j11_1 = 'kotlinx.serialization.json.JsonArray';
  }
  JsonArrayDescriptor.prototype.jo = function () {
    return this.i11_1.jo();
  };
  JsonArrayDescriptor.prototype.ko = function () {
    return this.i11_1.ko();
  };
  JsonArrayDescriptor.prototype.lo = function () {
    return this.i11_1.lo();
  };
  JsonArrayDescriptor.prototype.eo = function () {
    return this.i11_1.eo();
  };
  JsonArrayDescriptor.prototype.mo = function () {
    return this.i11_1.mo();
  };
  JsonArrayDescriptor.prototype.no = function (index) {
    return this.i11_1.no(index);
  };
  JsonArrayDescriptor.prototype.oo = function (index) {
    return this.i11_1.oo(index);
  };
  JsonArrayDescriptor.prototype.po = function (name) {
    return this.i11_1.po(name);
  };
  JsonArrayDescriptor.prototype.qo = function (index) {
    return this.i11_1.qo(index);
  };
  JsonArrayDescriptor.prototype.ro = function (index) {
    return this.i11_1.ro(index);
  };
  JsonArrayDescriptor.prototype.io = function () {
    return this.j11_1;
  };
  JsonArrayDescriptor.$metadata$ = objectMeta('JsonArrayDescriptor', [SerialDescriptor]);
  var JsonArrayDescriptor_instance;
  function JsonArrayDescriptor_getInstance() {
    if (JsonArrayDescriptor_instance == null)
      new JsonArrayDescriptor();
    return JsonArrayDescriptor_instance;
  }
  function JsonArraySerializer() {
    JsonArraySerializer_instance = this;
    this.g11_1 = JsonArrayDescriptor_getInstance();
  }
  JsonArraySerializer.prototype.hn = function () {
    return this.g11_1;
  };
  JsonArraySerializer.prototype.in = function (decoder) {
    verify(decoder);
    return new JsonArray(ListSerializer(JsonElementSerializer_getInstance()).in(decoder));
  };
  JsonArraySerializer.$metadata$ = objectMeta('JsonArraySerializer', [KSerializer]);
  var JsonArraySerializer_instance;
  function JsonArraySerializer_getInstance() {
    if (JsonArraySerializer_instance == null)
      new JsonArraySerializer();
    return JsonArraySerializer_instance;
  }
  function JsonNullSerializer() {
    JsonNullSerializer_instance = this;
    var tmp = this;
    var tmp_0 = ENUM_getInstance();
    tmp.e11_1 = buildSerialDescriptor$default('kotlinx.serialization.json.JsonNull', tmp_0, [], null, 12, null);
  }
  JsonNullSerializer.prototype.hn = function () {
    return this.e11_1;
  };
  JsonNullSerializer.prototype.in = function (decoder) {
    verify(decoder);
    if (decoder.np()) {
      throw new JsonDecodingException("Expected 'null' literal");
    }
    decoder.op();
    return JsonNull_getInstance();
  };
  JsonNullSerializer.$metadata$ = objectMeta('JsonNullSerializer', [KSerializer]);
  var JsonNullSerializer_instance;
  function JsonNullSerializer_getInstance() {
    if (JsonNullSerializer_instance == null)
      new JsonNullSerializer();
    return JsonNullSerializer_instance;
  }
  function verify(decoder) {
    asJsonDecoder(decoder);
  }
  function defer(deferred) {
    return new defer$1(deferred);
  }
  function JsonLiteralSerializer() {
    JsonLiteralSerializer_instance = this;
    this.f11_1 = PrimitiveSerialDescriptor('kotlinx.serialization.json.JsonLiteral', STRING_getInstance());
  }
  JsonLiteralSerializer.prototype.hn = function () {
    return this.f11_1;
  };
  JsonLiteralSerializer.prototype.in = function (decoder) {
    var result = asJsonDecoder(decoder).m10();
    if (!(result instanceof JsonLiteral))
      throw JsonDecodingException_0(-1, 'Unexpected JSON element, expected JsonLiteral, had ' + getKClassFromExpression(result), toString(result));
    return result;
  };
  JsonLiteralSerializer.$metadata$ = objectMeta('JsonLiteralSerializer', [KSerializer]);
  var JsonLiteralSerializer_instance;
  function JsonLiteralSerializer_getInstance() {
    if (JsonLiteralSerializer_instance == null)
      new JsonLiteralSerializer();
    return JsonLiteralSerializer_instance;
  }
  function asJsonDecoder(_this__u8e3s4) {
    var tmp0_elvis_lhs = isInterface(_this__u8e3s4, JsonDecoder) ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$('This serializer can be used only with Json format.' + ('Expected Decoder to be JsonDecoder, got ' + getKClassFromExpression(_this__u8e3s4)));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function _get_original__l7ku1m($this) {
    var tmp$ret$0;
    {
      var tmp0_getValue = original$factory();
      tmp$ret$0 = $this.k11_1.n2();
    }
    return tmp$ret$0;
  }
  function defer$1($deferred) {
    this.k11_1 = lazy_0($deferred);
  }
  defer$1.prototype.io = function () {
    return _get_original__l7ku1m(this).io();
  };
  defer$1.prototype.mo = function () {
    return _get_original__l7ku1m(this).mo();
  };
  defer$1.prototype.ko = function () {
    return _get_original__l7ku1m(this).ko();
  };
  defer$1.prototype.qo = function (index) {
    return _get_original__l7ku1m(this).qo(index);
  };
  defer$1.prototype.po = function (name) {
    return _get_original__l7ku1m(this).po(name);
  };
  defer$1.prototype.no = function (index) {
    return _get_original__l7ku1m(this).no(index);
  };
  defer$1.prototype.oo = function (index) {
    return _get_original__l7ku1m(this).oo(index);
  };
  defer$1.prototype.ro = function (index) {
    return _get_original__l7ku1m(this).ro(index);
  };
  defer$1.$metadata$ = classMeta(undefined, [SerialDescriptor]);
  function original$factory() {
    return getPropertyCallableRef('original', 1, KProperty1, function (receiver) {
      return _get_original__l7ku1m(receiver);
    }, null);
  }
  function readIfAbsent($this, descriptor, index) {
    $this.m11_1 = !descriptor.ro(index) ? descriptor.oo(index).eo() : false;
    return $this.m11_1;
  }
  function JsonElementMarker$readIfAbsent$ref($boundThis) {
    var l = function (p0, p1) {
      return readIfAbsent($boundThis, p0, p1);
    };
    l.callableName = 'readIfAbsent';
    return l;
  }
  function JsonElementMarker(descriptor) {
    var tmp = this;
    tmp.l11_1 = new ElementMarker(descriptor, JsonElementMarker$readIfAbsent$ref(this));
    this.m11_1 = false;
  }
  JsonElementMarker.prototype.au = function (index) {
    this.l11_1.au(index);
  };
  JsonElementMarker.prototype.bu = function () {
    return this.l11_1.bu();
  };
  JsonElementMarker.$metadata$ = classMeta('JsonElementMarker');
  function JsonDecodingException(message) {
    JsonException.call(this, message);
    captureStack(this, JsonDecodingException);
  }
  JsonDecodingException.$metadata$ = classMeta('JsonDecodingException', undefined, undefined, undefined, undefined, JsonException.prototype);
  function JsonDecodingException_0(offset, message, input) {
    return JsonDecodingException_1(offset, message + '\nJSON input: ' + minify(input, offset));
  }
  function throwInvalidFloatingPointDecoded(_this__u8e3s4, result) {
    var tmp = 'Unexpected special floating-point value ' + toString(result) + '. By default, ' + 'non-finite floating point values are prohibited because they do not conform JSON specification';
    _this__u8e3s4.n11(tmp, 0, get_specialFlowingValuesHint(), 2, null);
  }
  function JsonEncodingException(message) {
    JsonException.call(this, message);
    captureStack(this, JsonEncodingException);
  }
  JsonEncodingException.$metadata$ = classMeta('JsonEncodingException', undefined, undefined, undefined, undefined, JsonException.prototype);
  function InvalidKeyKindException(keyDescriptor) {
    return new JsonEncodingException("Value of type '" + keyDescriptor.io() + "' can't be used in JSON as a key in the map. " + ("It should have either primitive or enum kind, but its kind is '" + keyDescriptor.mo() + "'.\n") + get_allowStructuredMapKeysHint());
  }
  function InvalidFloatingPointDecoded(value, key, output) {
    return JsonDecodingException_1(-1, unexpectedFpErrorMessage(value, key, output));
  }
  function JsonDecodingException_1(offset, message) {
    return new JsonDecodingException(offset >= 0 ? 'Unexpected JSON token at offset ' + offset + ': ' + message : message);
  }
  function UnknownKeyException(key, input) {
    var tmp = "Encountered unknown key '" + key + "'.\n" + (get_ignoreUnknownKeysHint() + '\n');
    return JsonDecodingException_1(-1, tmp + ('Current input: ' + minify$default(input, 0, 1, null)));
  }
  function JsonException(message) {
    SerializationException_init_$Init$(message, this);
    captureStack(this, JsonException);
  }
  JsonException.$metadata$ = classMeta('JsonException', undefined, undefined, undefined, undefined, SerializationException.prototype);
  function minify(_this__u8e3s4, offset) {
    if (charSequenceLength(_this__u8e3s4) < 200)
      return _this__u8e3s4;
    if (offset === -1) {
      var start = charSequenceLength(_this__u8e3s4) - 60 | 0;
      if (start <= 0)
        return _this__u8e3s4;
      var tmp$ret$0;
      {
        var tmp0_substring = charSequenceLength(_this__u8e3s4);
        tmp$ret$0 = toString(charSequenceSubSequence(_this__u8e3s4, start, tmp0_substring));
      }
      return '.....' + tmp$ret$0;
    }
    var start_0 = offset - 30 | 0;
    var end = offset + 30 | 0;
    var prefix = start_0 <= 0 ? '' : '.....';
    var suffix = end >= charSequenceLength(_this__u8e3s4) ? '' : '.....';
    var tmp$ret$1;
    {
      var tmp1_substring = coerceAtLeast(start_0, 0);
      var tmp2_substring = coerceAtMost(end, charSequenceLength(_this__u8e3s4));
      tmp$ret$1 = toString(charSequenceSubSequence(_this__u8e3s4, tmp1_substring, tmp2_substring));
    }
    return prefix + tmp$ret$1 + suffix;
  }
  function minify$default(_this__u8e3s4, offset, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      offset = -1;
    return minify(_this__u8e3s4, offset);
  }
  function unexpectedFpErrorMessage(value, key, output) {
    var tmp = 'Unexpected special floating-point value ' + toString(value) + ' with key ' + key + '. By default, ' + 'non-finite floating point values are prohibited because they do not conform JSON specification. ' + (get_specialFlowingValuesHint() + '\n');
    return tmp + ('Current output: ' + minify$default(output, 0, 1, null));
  }
  function get_JsonAlternativeNamesKey() {
    init_properties_JsonNamesMap_kt_1j2xk2();
    return JsonAlternativeNamesKey;
  }
  var JsonAlternativeNamesKey;
  function tryCoerceValue(_this__u8e3s4, elementDescriptor, peekNull, peekString, onEnumCoercing) {
    init_properties_JsonNamesMap_kt_1j2xk2();
    if (!elementDescriptor.eo() ? peekNull() : false)
      return true;
    if (equals(elementDescriptor.mo(), ENUM_getInstance())) {
      var tmp0_elvis_lhs = peekString();
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return false;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var enumValue = tmp;
      var enumIndex = getJsonNameIndex(elementDescriptor, _this__u8e3s4, enumValue);
      Companion_getInstance();
      if (enumIndex === -3) {
        onEnumCoercing();
        return true;
      }
    }
    return false;
  }
  function getJsonNameIndex(_this__u8e3s4, json, name) {
    init_properties_JsonNamesMap_kt_1j2xk2();
    var index = _this__u8e3s4.po(name);
    Companion_getInstance();
    if (!(index === -3))
      return index;
    if (!json.iz_1.j10_1)
      return index;
    var tmp = get_schemaCache(json);
    var tmp_0 = get_JsonAlternativeNamesKey();
    var alternativeNamesMap = tmp.p11(_this__u8e3s4, tmp_0, buildAlternativeNamesMap$ref(_this__u8e3s4));
    var tmp0_elvis_lhs = alternativeNamesMap.b3(name);
    var tmp_1;
    if (tmp0_elvis_lhs == null) {
      Companion_getInstance();
      tmp_1 = -3;
    } else {
      tmp_1 = tmp0_elvis_lhs;
    }
    return tmp_1;
  }
  function buildAlternativeNamesMap(_this__u8e3s4) {
    init_properties_JsonNamesMap_kt_1j2xk2();
    var builder = null;
    var inductionVariable = 0;
    var last = _this__u8e3s4.ko();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$1;
        {
          var tmp0_filterIsInstance = _this__u8e3s4.no(i);
          var tmp$ret$0;
          {
            var tmp0_filterIsInstanceTo = ArrayList_init_$Create$();
            var tmp0_iterator = tmp0_filterIsInstance.h();
            while (tmp0_iterator.n()) {
              var element = tmp0_iterator.o();
              if (element instanceof JsonNames) {
                tmp0_filterIsInstanceTo.b(element);
              }
            }
            tmp$ret$0 = tmp0_filterIsInstanceTo;
          }
          tmp$ret$1 = tmp$ret$0;
        }
        var tmp1_safe_receiver = singleOrNull(tmp$ret$1);
        var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.q11_1;
        if (tmp2_safe_receiver == null)
          null;
        else {
          {
            var tmp0_iterator_0 = arrayIterator(tmp2_safe_receiver);
            while (tmp0_iterator_0.n()) {
              var element_0 = tmp0_iterator_0.o();
              {
                if (builder == null)
                  builder = createMapForCache(_this__u8e3s4.ko());
                buildAlternativeNamesMap$putOrThrow(ensureNotNull(builder), _this__u8e3s4, element_0, i);
              }
            }
          }
        }
      }
       while (inductionVariable < last);
    var tmp3_elvis_lhs = builder;
    return tmp3_elvis_lhs == null ? emptyMap() : tmp3_elvis_lhs;
  }
  function buildAlternativeNamesMap$putOrThrow(_this__u8e3s4, $this_buildAlternativeNamesMap, name, index) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = (isInterface(_this__u8e3s4, Map) ? _this__u8e3s4 : THROW_CCE()).v2(name);
      }
      tmp$ret$1 = tmp$ret$0;
    }
    if (tmp$ret$1) {
      throw new JsonException("The suggested name '" + name + "' for property " + $this_buildAlternativeNamesMap.qo(index) + ' is already one of the names for property ' + ($this_buildAlternativeNamesMap.qo(getValue(_this__u8e3s4, name)) + ' in ' + $this_buildAlternativeNamesMap));
    }
    {
      _this__u8e3s4.a(name, index);
    }
  }
  function buildAlternativeNamesMap$ref($boundThis) {
    var l = function () {
      return buildAlternativeNamesMap($boundThis);
    };
    l.callableName = 'buildAlternativeNamesMap';
    return l;
  }
  var properties_initialized_JsonNamesMap_kt_ljpf42;
  function init_properties_JsonNamesMap_kt_1j2xk2() {
    if (properties_initialized_JsonNamesMap_kt_ljpf42) {
    } else {
      properties_initialized_JsonNamesMap_kt_ljpf42 = true;
      JsonAlternativeNamesKey = new Key();
    }
  }
  function Tombstone() {
    Tombstone_instance = this;
  }
  Tombstone.$metadata$ = objectMeta('Tombstone');
  var Tombstone_instance;
  function Tombstone_getInstance() {
    if (Tombstone_instance == null)
      new Tombstone();
    return Tombstone_instance;
  }
  function resize($this) {
    var newSize = imul($this.t11_1, 2);
    $this.r11_1 = copyOf($this.r11_1, newSize);
    $this.s11_1 = copyOf_0($this.s11_1, newSize);
  }
  function JsonPath() {
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(8), null);
    }
    tmp.r11_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp_1 = 0;
    var tmp_2 = 8;
    var tmp_3 = new Int32Array(tmp_2);
    while (tmp_1 < tmp_2) {
      var tmp_4 = tmp_1;
      var tmp$ret$1;
      {
        tmp$ret$1 = -1;
      }
      tmp_3[tmp_4] = tmp$ret$1;
      tmp_1 = tmp_1 + 1 | 0;
    }
    tmp_0.s11_1 = tmp_3;
    this.t11_1 = -1;
  }
  JsonPath.prototype.u11 = function (sd) {
    var tmp0_this = this;
    tmp0_this.t11_1 = tmp0_this.t11_1 + 1 | 0;
    var depth = tmp0_this.t11_1;
    if (depth === this.r11_1.length) {
      resize(this);
    }
    this.r11_1[depth] = sd;
  };
  JsonPath.prototype.v11 = function (index) {
    this.s11_1[this.t11_1] = index;
  };
  JsonPath.prototype.w11 = function (key) {
    var tmp;
    if (!(this.s11_1[this.t11_1] === -2)) {
      var tmp0_this = this;
      tmp0_this.t11_1 = tmp0_this.t11_1 + 1 | 0;
      tmp = tmp0_this.t11_1 === this.r11_1.length;
    } else {
      tmp = false;
    }
    if (tmp) {
      resize(this);
    }
    this.r11_1[this.t11_1] = key;
    this.s11_1[this.t11_1] = -2;
  };
  JsonPath.prototype.x11 = function () {
    if (this.s11_1[this.t11_1] === -2) {
      this.r11_1[this.t11_1] = Tombstone_getInstance();
    }
  };
  JsonPath.prototype.y11 = function () {
    var depth = this.t11_1;
    if (this.s11_1[depth] === -2) {
      this.s11_1[depth] = -1;
      var tmp0_this = this;
      var tmp1 = tmp0_this.t11_1;
      tmp0_this.t11_1 = tmp1 - 1 | 0;
    }
    if (!(this.t11_1 === -1)) {
      var tmp2_this = this;
      var tmp3 = tmp2_this.t11_1;
      tmp2_this.t11_1 = tmp3 - 1 | 0;
    }
  };
  JsonPath.prototype.z11 = function () {
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        var tmp0_apply = StringBuilder_init_$Create$();
        {
        }
        {
          tmp0_apply.ga('$');
          {
            var tmp0_repeat = this.t11_1 + 1 | 0;
            {
            }
            var inductionVariable = 0;
            if (inductionVariable < tmp0_repeat)
              do {
                var index = inductionVariable;
                inductionVariable = inductionVariable + 1 | 0;
                {
                  var element = this.r11_1[index];
                  if (!(element == null) ? isInterface(element, SerialDescriptor) : false) {
                    if (equals(element.mo(), LIST_getInstance())) {
                      if (!(this.s11_1[index] === -1)) {
                        tmp0_apply.ga('[');
                        tmp0_apply.ob(this.s11_1[index]);
                        tmp0_apply.ga(']');
                      }
                    } else {
                      var idx = this.s11_1[index];
                      if (idx >= 0) {
                        tmp0_apply.ga('.');
                        tmp0_apply.ga(element.qo(idx));
                      }
                    }
                  } else {
                    if (!(element === Tombstone_getInstance())) {
                      tmp0_apply.ga('[');
                      tmp0_apply.ga("'");
                      tmp0_apply.ob(element);
                      tmp0_apply.ga("'");
                      tmp0_apply.ga(']');
                    }
                  }
                }
              }
               while (inductionVariable < tmp0_repeat);
          }
        }
        tmp$ret$0 = tmp0_apply;
      }
      tmp$ret$1 = tmp$ret$0.toString();
    }
    return tmp$ret$1;
  };
  JsonPath.prototype.toString = function () {
    return this.z11();
  };
  JsonPath.$metadata$ = classMeta('JsonPath');
  function readObject($this) {
    var tmp$ret$2;
    {
      var lastToken = $this.a12_1.d12(get_TC_BEGIN_OBJ());
      if ($this.a12_1.e12() === get_TC_COMMA()) {
        $this.a12_1.n11('Unexpected leading comma', 0, null, 6, null);
      }
      var tmp$ret$0;
      {
        tmp$ret$0 = LinkedHashMap_init_$Create$();
      }
      var result = tmp$ret$0;
      $l$loop: while ($this.a12_1.f12()) {
        var key = $this.b12_1 ? $this.a12_1.h12() : $this.a12_1.g12();
        $this.a12_1.d12(get_TC_COLON());
        var tmp$ret$1;
        {
          tmp$ret$1 = $this.i12();
        }
        var element = tmp$ret$1;
        {
          result.a(key, element);
        }
        lastToken = $this.a12_1.j12();
        var tmp0_subject = lastToken;
        if (tmp0_subject === get_TC_COMMA())
        ;
        else if (tmp0_subject === get_TC_END_OBJ())
          break $l$loop;
        else {
          $this.a12_1.n11('Expected end of the object or comma', 0, null, 6, null);
        }
      }
      if (lastToken === get_TC_BEGIN_OBJ()) {
        $this.a12_1.d12(get_TC_END_OBJ());
      } else if (lastToken === get_TC_COMMA()) {
        $this.a12_1.n11('Unexpected trailing comma', 0, null, 6, null);
      }
      tmp$ret$2 = new JsonObject(result);
    }
    return tmp$ret$2;
  }
  function readObject_0(_this__u8e3s4, $this, $cont) {
    var tmp = new $readObjectCOROUTINE$0($this, _this__u8e3s4, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  }
  function readArray($this) {
    var lastToken = $this.a12_1.j12();
    if ($this.a12_1.e12() === get_TC_COMMA()) {
      $this.a12_1.n11('Unexpected leading comma', 0, null, 6, null);
    }
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$();
    }
    var result = tmp$ret$0;
    while ($this.a12_1.f12()) {
      var element = $this.i12();
      result.b(element);
      lastToken = $this.a12_1.j12();
      if (!(lastToken === get_TC_COMMA())) {
        {
          var tmp0_require = $this.a12_1;
          var tmp1_require = lastToken === get_TC_END_LIST();
          var tmp2_require = tmp0_require.tz_1;
          if (!tmp1_require) {
            var tmp$ret$1;
            {
              tmp$ret$1 = 'Expected end of the array or comma';
            }
            var tmp = tmp$ret$1;
            tmp0_require.n11(tmp, tmp2_require, null, 4, null);
          }
        }
      }
    }
    if (lastToken === get_TC_BEGIN_LIST()) {
      $this.a12_1.d12(get_TC_END_LIST());
    } else if (lastToken === get_TC_COMMA()) {
      $this.a12_1.n11('Unexpected trailing comma', 0, null, 6, null);
    }
    return new JsonArray(result);
  }
  function readValue($this, isString) {
    var tmp;
    if ($this.b12_1 ? true : !isString) {
      tmp = $this.a12_1.h12();
    } else {
      tmp = $this.a12_1.g12();
    }
    var string = tmp;
    if (!isString ? string === get_NULL() : false)
      return JsonNull_getInstance();
    return new JsonLiteral(string, isString);
  }
  function readDeepRecursive($this) {
    return invoke(new DeepRecursiveFunction(JsonTreeReader$readDeepRecursive$slambda_0($this, null)), Unit_getInstance());
  }
  function JsonTreeReader$readDeepRecursive$slambda(this$0, resultContinuation) {
    this.f13_1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  JsonTreeReader$readDeepRecursive$slambda.prototype.k13 = function ($this$$receiver, it, $cont) {
    var tmp = this.l13($this$$receiver, it, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  JsonTreeReader$readDeepRecursive$slambda.prototype.kc = function (p1, p2, $cont) {
    var tmp = p1 instanceof DeepRecursiveScope ? p1 : THROW_CCE();
    return this.k13(tmp, p2 instanceof Unit ? p2 : THROW_CCE(), $cont);
  };
  JsonTreeReader$readDeepRecursive$slambda.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 3;
            this.i13_1 = this.f13_1.a12_1.e12();
            if (this.i13_1 === get_TC_STRING()) {
              this.j13_1 = readValue(this.f13_1, true);
              this.k7_1 = 2;
              continue $sm;
            } else {
              if (this.i13_1 === get_TC_OTHER()) {
                this.j13_1 = readValue(this.f13_1, false);
                this.k7_1 = 2;
                continue $sm;
              } else {
                if (this.i13_1 === get_TC_BEGIN_OBJ()) {
                  this.k7_1 = 1;
                  suspendResult = readObject_0(this.g13_1, this.f13_1, this);
                  if (suspendResult === get_COROUTINE_SUSPENDED()) {
                    return suspendResult;
                  }
                  continue $sm;
                } else {
                  if (this.i13_1 === get_TC_BEGIN_LIST()) {
                    this.j13_1 = readArray(this.f13_1);
                    this.k7_1 = 2;
                    continue $sm;
                  } else {
                    var tmp_0 = this;
                    this.f13_1.a12_1.n11("Can't begin reading element, unexpected token", 0, null, 6, null);
                  }
                }
              }
            }

            break;
          case 1:
            this.j13_1 = suspendResult;
            this.k7_1 = 2;
            continue $sm;
          case 2:
            return this.j13_1;
          case 3:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 3) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  JsonTreeReader$readDeepRecursive$slambda.prototype.l13 = function ($this$$receiver, it, completion) {
    var i = new JsonTreeReader$readDeepRecursive$slambda(this.f13_1, completion);
    i.g13_1 = $this$$receiver;
    i.h13_1 = it;
    return i;
  };
  JsonTreeReader$readDeepRecursive$slambda.$metadata$ = classMeta('JsonTreeReader$readDeepRecursive$slambda', undefined, undefined, undefined, [2], CoroutineImpl.prototype);
  function JsonTreeReader$readDeepRecursive$slambda_0(this$0, resultContinuation) {
    var i = new JsonTreeReader$readDeepRecursive$slambda(this$0, resultContinuation);
    var l = function ($this$$receiver, it, $cont) {
      return i.k13($this$$receiver, it, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function $readObjectCOROUTINE$0(_this__u8e3s4, _this__u8e3s4_0, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.s12_1 = _this__u8e3s4;
    this.t12_1 = _this__u8e3s4_0;
  }
  $readObjectCOROUTINE$0.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 5;
            this.u12_1 = this.s12_1.a12_1.d12(get_TC_BEGIN_OBJ());
            if (this.s12_1.a12_1.e12() === get_TC_COMMA()) {
              this.s12_1.a12_1.n11('Unexpected leading comma', 0, null, 6, null);
            }

            var tmp_0 = this;
            tmp_0.v12_1 = LinkedHashMap_init_$Create$();
            this.k7_1 = 1;
            continue $sm;
          case 1:
            if (!this.s12_1.a12_1.f12()) {
              this.k7_1 = 4;
              continue $sm;
            }

            this.w12_1 = this.s12_1.b12_1 ? this.s12_1.a12_1.h12() : this.s12_1.a12_1.g12();
            this.s12_1.a12_1.d12(get_TC_COLON());
            ;
            this.k7_1 = 2;
            suspendResult = this.t12_1.cc(Unit_getInstance(), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            var element = suspendResult;
            this.v12_1.a(this.w12_1, element);
            ;
            this.u12_1 = this.s12_1.a12_1.j12();
            var tmp0_subject = this.u12_1;
            if (tmp0_subject === get_TC_COMMA()) {
              this.k7_1 = 3;
              continue $sm;
            } else {
              if (tmp0_subject === get_TC_END_OBJ()) {
                this.k7_1 = 4;
                continue $sm;
              } else {
                this.s12_1.a12_1.n11('Expected end of the object or comma', 0, null, 6, null);
              }
            }

            break;
          case 3:
            this.k7_1 = 1;
            continue $sm;
          case 4:
            if (this.u12_1 === get_TC_BEGIN_OBJ()) {
              this.s12_1.a12_1.d12(get_TC_END_OBJ());
            } else if (this.u12_1 === get_TC_COMMA()) {
              this.s12_1.a12_1.n11('Unexpected trailing comma', 0, null, 6, null);
            }

            return new JsonObject(this.v12_1);
          case 5:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 5) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  $readObjectCOROUTINE$0.$metadata$ = classMeta('$readObjectCOROUTINE$0', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function JsonTreeReader(configuration, lexer) {
    this.a12_1 = lexer;
    this.b12_1 = configuration.a10_1;
    this.c12_1 = 0;
  }
  JsonTreeReader.prototype.i12 = function () {
    var token = this.a12_1.e12();
    var tmp;
    if (token === get_TC_STRING()) {
      tmp = readValue(this, true);
    } else if (token === get_TC_OTHER()) {
      tmp = readValue(this, false);
    } else if (token === get_TC_BEGIN_OBJ()) {
      var tmp_0;
      var tmp0_this = this;
      tmp0_this.c12_1 = tmp0_this.c12_1 + 1 | 0;
      if (tmp0_this.c12_1 === 200) {
        tmp_0 = readDeepRecursive(this);
      } else {
        tmp_0 = readObject(this);
      }
      var result = tmp_0;
      var tmp1_this = this;
      tmp1_this.c12_1 = tmp1_this.c12_1 - 1 | 0;
      tmp = result;
    } else if (token === get_TC_BEGIN_LIST()) {
      tmp = readArray(this);
    } else {
      var tmp_1 = 'Cannot begin reading element, unexpected token: ' + token;
      this.a12_1.n11(tmp_1, 0, null, 6, null);
    }
    return tmp;
  };
  JsonTreeReader.$metadata$ = classMeta('JsonTreeReader');
  function classDiscriminator(_this__u8e3s4, json) {
    var tmp0_iterator = _this__u8e3s4.jo().h();
    while (tmp0_iterator.n()) {
      var annotation = tmp0_iterator.o();
      if (annotation instanceof JsonClassDiscriminator)
        return annotation.m13_1;
    }
    return json.iz_1.h10_1;
  }
  function decodeSerializableValuePolymorphic(_this__u8e3s4, deserializer) {
    var tmp;
    if (!(deserializer instanceof AbstractPolymorphicSerializer)) {
      tmp = true;
    } else {
      tmp = _this__u8e3s4.l10().iz_1.g10_1;
    }
    if (tmp) {
      return deserializer.in(_this__u8e3s4);
    }
    var discriminator = classDiscriminator(deserializer.hn(), _this__u8e3s4.l10());
    var tmp$ret$0;
    {
      var tmp0_cast = _this__u8e3s4.m10();
      var tmp1_cast = deserializer.hn();
      if (!(tmp0_cast instanceof JsonObject)) {
        throw JsonDecodingException_1(-1, 'Expected ' + getKClass(JsonObject) + ' as the serialized body of ' + tmp1_cast.io() + ', but had ' + getKClassFromExpression(tmp0_cast));
      }
      tmp$ret$0 = tmp0_cast;
    }
    var jsonTree = tmp$ret$0;
    var tmp0_safe_receiver = jsonTree.p10(discriminator);
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : get_jsonPrimitive(tmp0_safe_receiver);
    var type = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.q10();
    var tmp2_elvis_lhs = deserializer.wn(_this__u8e3s4, type);
    var tmp_0;
    if (tmp2_elvis_lhs == null) {
      throwSerializerNotFound(type, jsonTree);
    } else {
      tmp_0 = tmp2_elvis_lhs;
    }
    var actualSerializer = tmp_0;
    var tmp_1 = _this__u8e3s4.l10();
    return readPolymorphicJson(tmp_1, discriminator, jsonTree, isInterface(actualSerializer, DeserializationStrategy) ? actualSerializer : THROW_CCE());
  }
  function throwSerializerNotFound(type, jsonTree) {
    var suffix = type == null ? "missing class discriminator ('null')" : "class discriminator '" + type + "'";
    throw JsonDecodingException_0(-1, 'Polymorphic serializer was not found for ' + suffix, jsonTree.toString());
  }
  function Key() {
  }
  Key.$metadata$ = classMeta('Key');
  function DescriptorSchemaCache() {
    this.o11_1 = createMapForCache(1);
  }
  DescriptorSchemaCache.prototype.n13 = function (descriptor, key, value) {
    {
      var tmp$ret$1;
      {
        var tmp0_getOrPut = this.o11_1;
        var value_0 = tmp0_getOrPut.b3(descriptor);
        var tmp;
        if (value_0 == null) {
          var tmp$ret$0;
          {
            tmp$ret$0 = createMapForCache(1);
          }
          var answer = tmp$ret$0;
          tmp0_getOrPut.a(descriptor, answer);
          tmp = answer;
        } else {
          tmp = value_0;
        }
        tmp$ret$1 = tmp;
      }
      var tmp1_set = tmp$ret$1;
      var tmp2_set = key instanceof Key ? key : THROW_CCE();
      var tmp3_set = isObject(value) ? value : THROW_CCE();
      tmp1_set.a(tmp2_set, tmp3_set);
    }
  };
  DescriptorSchemaCache.prototype.p11 = function (descriptor, key, defaultValue) {
    var tmp0_safe_receiver = this.o13(descriptor, key);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        return tmp0_safe_receiver;
      }
    }
    var value = defaultValue();
    this.n13(descriptor, key, value);
    return value;
  };
  DescriptorSchemaCache.prototype.o13 = function (descriptor, key) {
    var tmp0_safe_receiver = this.o11_1.b3(descriptor);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      tmp = tmp0_safe_receiver.b3(key instanceof Key ? key : THROW_CCE());
    }
    var tmp_0 = tmp;
    return isObject(tmp_0) ? tmp_0 : null;
  };
  DescriptorSchemaCache.$metadata$ = classMeta('DescriptorSchemaCache');
  function DiscriminatorHolder(discriminatorToSkip) {
    this.p13_1 = discriminatorToSkip;
  }
  DiscriminatorHolder.$metadata$ = classMeta('DiscriminatorHolder');
  function trySkip(_this__u8e3s4, $this, unknownKey) {
    if (_this__u8e3s4 == null)
      return false;
    if (_this__u8e3s4.p13_1 === unknownKey) {
      _this__u8e3s4.p13_1 = null;
      return true;
    }
    return false;
  }
  function skipLeftoverElements($this, descriptor) {
    $l$loop: while (true) {
      var tmp = $this.oq(descriptor);
      Companion_getInstance();
      if (!!(tmp === -1)) {
        break $l$loop;
      }
    }
  }
  function checkLeadingComma($this) {
    if ($this.nz_1.e12() === get_TC_COMMA()) {
      $this.nz_1.n11('Unexpected leading comma', 0, null, 6, null);
    }
  }
  function decodeMapIndex($this) {
    var hasComma = false;
    var decodingKey = !(($this.pz_1 % 2 | 0) === 0);
    if (decodingKey) {
      if (!($this.pz_1 === -1)) {
        hasComma = $this.nz_1.r13();
      }
    } else {
      $this.nz_1.q13(get_COLON());
    }
    var tmp;
    if ($this.nz_1.f12()) {
      if (decodingKey) {
        if ($this.pz_1 === -1) {
          var tmp0_require = $this.nz_1;
          var tmp1_require = !hasComma;
          var tmp2_require = tmp0_require.tz_1;
          if (!tmp1_require) {
            var tmp$ret$0;
            {
              tmp$ret$0 = 'Unexpected trailing comma';
            }
            var tmp_0 = tmp$ret$0;
            tmp0_require.n11(tmp_0, tmp2_require, null, 4, null);
          }
        } else {
          var tmp3_require = $this.nz_1;
          var tmp4_require = hasComma;
          var tmp5_require = tmp3_require.tz_1;
          if (!tmp4_require) {
            var tmp$ret$1;
            {
              tmp$ret$1 = 'Expected comma after the key-value pair';
            }
            var tmp_1 = tmp$ret$1;
            tmp3_require.n11(tmp_1, tmp5_require, null, 4, null);
          }
        }
      }
      var tmp0_this = $this;
      tmp0_this.pz_1 = tmp0_this.pz_1 + 1 | 0;
      tmp = tmp0_this.pz_1;
    } else {
      if (hasComma) {
        $this.nz_1.n11("Expected '}', but had ',' instead", 0, null, 6, null);
      }
      Companion_getInstance();
      tmp = -1;
    }
    return tmp;
  }
  function coerceInputValue($this, descriptor, index) {
    var tmp$ret$1;
    $l$block_1: {
      var tmp0_tryCoerceValue = $this.lz_1;
      var tmp1_tryCoerceValue = descriptor.oo(index);
      var tmp;
      if (!tmp1_tryCoerceValue.eo()) {
        var tmp$ret$0;
        {
          tmp$ret$0 = !$this.nz_1.s13();
        }
        tmp = tmp$ret$0;
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$1 = true;
        break $l$block_1;
      }
      if (equals(tmp1_tryCoerceValue.mo(), ENUM_getInstance())) {
        var tmp$ret$2;
        {
          tmp$ret$2 = $this.nz_1.t13($this.rz_1.a10_1);
        }
        var tmp0_elvis_lhs = tmp$ret$2;
        var tmp_0;
        if (tmp0_elvis_lhs == null) {
          tmp$ret$1 = false;
          break $l$block_1;
        } else {
          tmp_0 = tmp0_elvis_lhs;
        }
        var enumValue = tmp_0;
        var enumIndex = getJsonNameIndex(tmp1_tryCoerceValue, tmp0_tryCoerceValue, enumValue);
        Companion_getInstance();
        if (enumIndex === -3) {
          {
            $this.nz_1.g12();
          }
          tmp$ret$1 = true;
          break $l$block_1;
        }
      }
      tmp$ret$1 = false;
    }
    return tmp$ret$1;
  }
  function decodeObjectIndex($this, descriptor) {
    var hasComma = $this.nz_1.r13();
    while ($this.nz_1.f12()) {
      hasComma = false;
      var key = decodeStringKey($this);
      $this.nz_1.q13(get_COLON());
      var index = getJsonNameIndex(descriptor, $this.lz_1, key);
      var tmp;
      Companion_getInstance();
      if (!(index === -3)) {
        var tmp_0;
        if ($this.rz_1.f10_1 ? coerceInputValue($this, descriptor, index) : false) {
          hasComma = $this.nz_1.r13();
          tmp_0 = false;
        } else {
          var tmp0_safe_receiver = $this.sz_1;
          if (tmp0_safe_receiver == null)
            null;
          else {
            tmp0_safe_receiver.au(index);
          }
          return index;
        }
        tmp = tmp_0;
      } else {
        tmp = true;
      }
      var isUnknown = tmp;
      if (isUnknown) {
        hasComma = handleUnknown($this, key);
      }
    }
    if (hasComma) {
      $this.nz_1.n11('Unexpected trailing comma', 0, null, 6, null);
    }
    var tmp1_safe_receiver = $this.sz_1;
    var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.bu();
    var tmp_1;
    if (tmp2_elvis_lhs == null) {
      Companion_getInstance();
      tmp_1 = -1;
    } else {
      tmp_1 = tmp2_elvis_lhs;
    }
    return tmp_1;
  }
  function handleUnknown($this, key) {
    if ($this.rz_1.zz_1 ? true : trySkip($this.qz_1, $this, key)) {
      $this.nz_1.v13($this.rz_1.a10_1);
    } else {
      $this.nz_1.u13(key);
    }
    return $this.nz_1.r13();
  }
  function decodeListIndex($this) {
    var hasComma = $this.nz_1.r13();
    var tmp;
    if ($this.nz_1.f12()) {
      if (!($this.pz_1 === -1) ? !hasComma : false) {
        $this.nz_1.n11('Expected end of the array or comma', 0, null, 6, null);
      }
      var tmp0_this = $this;
      tmp0_this.pz_1 = tmp0_this.pz_1 + 1 | 0;
      tmp = tmp0_this.pz_1;
    } else {
      if (hasComma) {
        $this.nz_1.n11('Unexpected trailing comma', 0, null, 6, null);
      }
      Companion_getInstance();
      tmp = -1;
    }
    return tmp;
  }
  function decodeStringKey($this) {
    var tmp;
    if ($this.rz_1.a10_1) {
      tmp = $this.nz_1.x13();
    } else {
      tmp = $this.nz_1.w13();
    }
    return tmp;
  }
  function StreamingJsonDecoder(json, mode, lexer, descriptor, discriminatorHolder) {
    AbstractDecoder.call(this);
    this.lz_1 = json;
    this.mz_1 = mode;
    this.nz_1 = lexer;
    this.oz_1 = this.lz_1.yn();
    this.pz_1 = -1;
    this.qz_1 = discriminatorHolder;
    this.rz_1 = this.lz_1.iz_1;
    this.sz_1 = this.rz_1.d10_1 ? null : new JsonElementMarker(descriptor);
  }
  StreamingJsonDecoder.prototype.l10 = function () {
    return this.lz_1;
  };
  StreamingJsonDecoder.prototype.y13 = function () {
    return this.nz_1;
  };
  StreamingJsonDecoder.prototype.yn = function () {
    return this.oz_1;
  };
  StreamingJsonDecoder.prototype.m10 = function () {
    return (new JsonTreeReader(this.lz_1.iz_1, this.nz_1)).i12();
  };
  StreamingJsonDecoder.prototype.zp = function (deserializer) {
    try {
      var tmp;
      if (!(deserializer instanceof AbstractPolymorphicSerializer)) {
        tmp = true;
      } else {
        tmp = this.lz_1.iz_1.g10_1;
      }
      if (tmp) {
        return deserializer.in(this);
      }
      var discriminator = classDiscriminator(deserializer.hn(), this.lz_1);
      var type = this.nz_1.z13(discriminator, this.rz_1.a10_1);
      var actualSerializer = null;
      if (!(type == null)) {
        actualSerializer = deserializer.wn(this, type);
      }
      if (actualSerializer == null) {
        return decodeSerializableValuePolymorphic(this, isInterface(deserializer, DeserializationStrategy) ? deserializer : THROW_CCE());
      }
      this.qz_1 = new DiscriminatorHolder(discriminator);
      var tmp_0 = actualSerializer.in(this);
      var result = isObject(tmp_0) ? tmp_0 : THROW_CCE();
      return result;
    } catch ($p) {
      if ($p instanceof MissingFieldException) {
        throw new MissingFieldException($p.zn_1, plus($p.message, ' at path: ') + this.nz_1.uz_1.z11(), $p);
      } else {
        throw $p;
      }
    }
  };
  StreamingJsonDecoder.prototype.aq = function (descriptor) {
    var newMode = switchMode(this.lz_1, descriptor);
    this.nz_1.uz_1.u11(descriptor);
    this.nz_1.q13(newMode.c14_1);
    checkLeadingComma(this);
    var tmp0_subject = newMode;
    var tmp0 = tmp0_subject.y1();
    var tmp;
    switch (tmp0) {
      case 1:
      case 2:
      case 3:
        tmp = new StreamingJsonDecoder(this.lz_1, newMode, this.nz_1, descriptor, this.qz_1);
        break;
      default:
        var tmp_0;
        if (this.mz_1.equals(newMode) ? this.lz_1.iz_1.d10_1 : false) {
          tmp_0 = this;
        } else {
          tmp_0 = new StreamingJsonDecoder(this.lz_1, newMode, this.nz_1, descriptor, this.qz_1);
        }

        tmp = tmp_0;
        break;
    }
    return tmp;
  };
  StreamingJsonDecoder.prototype.bq = function (descriptor) {
    if (this.lz_1.iz_1.zz_1 ? descriptor.ko() === 0 : false) {
      skipLeftoverElements(this, descriptor);
    }
    this.nz_1.q13(this.mz_1.d14_1);
    this.nz_1.uz_1.y11();
  };
  StreamingJsonDecoder.prototype.np = function () {
    var tmp;
    var tmp0_safe_receiver = this.sz_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.m11_1;
    if (!(tmp1_elvis_lhs == null ? false : tmp1_elvis_lhs)) {
      tmp = this.nz_1.s13();
    } else {
      tmp = false;
    }
    return tmp;
  };
  StreamingJsonDecoder.prototype.op = function () {
    return null;
  };
  StreamingJsonDecoder.prototype.lq = function (descriptor, index, deserializer, previousValue) {
    var isMapKey = this.mz_1.equals(WriteMode_MAP_getInstance()) ? (index & 1) === 0 : false;
    if (isMapKey) {
      this.nz_1.uz_1.x11();
    }
    var value = AbstractDecoder.prototype.lq.call(this, descriptor, index, deserializer, previousValue);
    if (isMapKey) {
      this.nz_1.uz_1.w11(value);
    }
    return value;
  };
  StreamingJsonDecoder.prototype.oq = function (descriptor) {
    var tmp0_subject = this.mz_1;
    var tmp0 = tmp0_subject.y1();
    {
      var index;
      switch (tmp0) {
        case 0:
          index = decodeObjectIndex(this, descriptor);
          break;
        case 2:
          index = decodeMapIndex(this);
          break;
        default:
          index = decodeListIndex(this);
          break;
      }
    }
    if (!this.mz_1.equals(WriteMode_MAP_getInstance())) {
      this.nz_1.uz_1.v11(index);
    }
    return index;
  };
  StreamingJsonDecoder.prototype.pp = function () {
    var tmp;
    if (this.rz_1.a10_1) {
      tmp = this.nz_1.f14();
    } else {
      tmp = this.nz_1.e14();
    }
    return tmp;
  };
  StreamingJsonDecoder.prototype.qp = function () {
    var value = this.nz_1.g14();
    if (!value.equals(toLong_0(value.cm()))) {
      var tmp = "Failed to parse byte for input '" + toString(value) + "'";
      this.nz_1.n11(tmp, 0, null, 6, null);
    }
    return value.cm();
  };
  StreamingJsonDecoder.prototype.rp = function () {
    var value = this.nz_1.g14();
    if (!value.equals(toLong_0(value.dm()))) {
      var tmp = "Failed to parse short for input '" + toString(value) + "'";
      this.nz_1.n11(tmp, 0, null, 6, null);
    }
    return value.dm();
  };
  StreamingJsonDecoder.prototype.sp = function () {
    var value = this.nz_1.g14();
    if (!value.equals(toLong_0(value.fb()))) {
      var tmp = "Failed to parse int for input '" + toString(value) + "'";
      this.nz_1.n11(tmp, 0, null, 6, null);
    }
    return value.fb();
  };
  StreamingJsonDecoder.prototype.tp = function () {
    return this.nz_1.g14();
  };
  StreamingJsonDecoder.prototype.up = function () {
    var tmp$ret$4;
    $l$block: {
      var tmp0_parseString = this.nz_1;
      var input = tmp0_parseString.h12();
      try {
        var tmp$ret$3;
        {
          var tmp$ret$2;
          {
            var tmp$ret$1;
            {
              var tmp0_unsafeCast = toDouble(input);
              var tmp$ret$0;
              {
                tmp$ret$0 = tmp0_unsafeCast;
              }
              tmp$ret$1 = tmp$ret$0;
            }
            tmp$ret$2 = tmp$ret$1;
          }
          tmp$ret$3 = tmp$ret$2;
        }
        tmp$ret$4 = tmp$ret$3;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'float' for input '" + input + "'";
          tmp0_parseString.n11(tmp, 0, null, 6, null);
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$4;
    var specialFp = this.lz_1.iz_1.i10_1;
    if (specialFp ? true : isFinite(result))
      return result;
    throwInvalidFloatingPointDecoded(this.nz_1, result);
  };
  StreamingJsonDecoder.prototype.vp = function () {
    var tmp$ret$1;
    $l$block: {
      var tmp0_parseString = this.nz_1;
      var input = tmp0_parseString.h12();
      try {
        var tmp$ret$0;
        {
          tmp$ret$0 = toDouble(input);
        }
        tmp$ret$1 = tmp$ret$0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'double' for input '" + input + "'";
          tmp0_parseString.n11(tmp, 0, null, 6, null);
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$1;
    var specialFp = this.lz_1.iz_1.i10_1;
    if (specialFp ? true : isFinite_0(result))
      return result;
    throwInvalidFloatingPointDecoded(this.nz_1, result);
  };
  StreamingJsonDecoder.prototype.wp = function () {
    var string = this.nz_1.h12();
    if (!(string.length === 1)) {
      var tmp = "Expected single char, but got '" + string + "'";
      this.nz_1.n11(tmp, 0, null, 6, null);
    }
    return charSequenceGet(string, 0);
  };
  StreamingJsonDecoder.prototype.xp = function () {
    var tmp;
    if (this.rz_1.a10_1) {
      tmp = this.nz_1.x13();
    } else {
      tmp = this.nz_1.g12();
    }
    return tmp;
  };
  StreamingJsonDecoder.$metadata$ = classMeta('StreamingJsonDecoder', [JsonDecoder], undefined, undefined, undefined, AbstractDecoder.prototype);
  function parseString(_this__u8e3s4, expectedType, block) {
    var input = _this__u8e3s4.h12();
    try {
      return block(input);
    } catch ($p) {
      if ($p instanceof IllegalArgumentException) {
        var tmp = "Failed to parse type '" + expectedType + "' for input '" + input + "'";
        _this__u8e3s4.n11(tmp, 0, null, 6, null);
      } else {
        throw $p;
      }
    }
  }
  function get_ESCAPE_STRINGS() {
    init_properties_StringOps_kt_g67jhv();
    return ESCAPE_STRINGS;
  }
  var ESCAPE_STRINGS;
  var ESCAPE_MARKERS;
  function toHexChar(i) {
    init_properties_StringOps_kt_g67jhv();
    var d = i & 15;
    var tmp;
    if (d < 10) {
      var tmp$ret$0;
      {
        tmp$ret$0 = 48;
      }
      tmp = numberToChar(d + tmp$ret$0 | 0);
    } else {
      var tmp_0 = d - 10 | 0;
      var tmp$ret$1;
      {
        tmp$ret$1 = 97;
      }
      tmp = numberToChar(tmp_0 + tmp$ret$1 | 0);
    }
    return tmp;
  }
  function printQuoted(_this__u8e3s4, value) {
    init_properties_StringOps_kt_g67jhv();
    _this__u8e3s4.ea(get_STRING());
    var lastPos = 0;
    var inductionVariable = 0;
    var last = charSequenceLength(value) - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        {
          var tmp0__get_code__88qj9g = charSequenceGet(value, i);
          tmp$ret$0 = Char__toInt_impl_vasixd(tmp0__get_code__88qj9g);
        }
        var c = tmp$ret$0;
        if (c < get_ESCAPE_STRINGS().length ? !(get_ESCAPE_STRINGS()[c] == null) : false) {
          _this__u8e3s4.hk(value, lastPos, i);
          _this__u8e3s4.ga(get_ESCAPE_STRINGS()[c]);
          lastPos = i + 1 | 0;
        }
      }
       while (inductionVariable <= last);
    if (!(lastPos === 0)) {
      _this__u8e3s4.hk(value, lastPos, value.length);
    } else {
      _this__u8e3s4.ga(value);
    }
    _this__u8e3s4.ea(get_STRING());
  }
  function toBooleanStrictOrNull(_this__u8e3s4) {
    init_properties_StringOps_kt_g67jhv();
    return equals_0(_this__u8e3s4, 'true', true) ? true : equals_0(_this__u8e3s4, 'false', true) ? false : null;
  }
  var properties_initialized_StringOps_kt_wzaea7;
  function init_properties_StringOps_kt_g67jhv() {
    if (properties_initialized_StringOps_kt_wzaea7) {
    } else {
      properties_initialized_StringOps_kt_wzaea7 = true;
      var tmp$ret$7;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = fillArrayVal(Array(93), null);
        }
        var tmp0_apply = tmp$ret$0;
        {
        }
        {
          var inductionVariable = 0;
          if (inductionVariable <= 31)
            do {
              var c = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              var c1 = toHexChar(c >> 12);
              var c2 = toHexChar(c >> 8);
              var c3 = toHexChar(c >> 4);
              var c4 = toHexChar(c);
              tmp0_apply[c] = '\\u' + new Char(c1) + new Char(c2) + new Char(c3) + new Char(c4);
            }
             while (inductionVariable <= 31);
          var tmp$ret$1;
          {
            tmp$ret$1 = 34;
          }
          tmp0_apply[tmp$ret$1] = '\\"';
          var tmp$ret$2;
          {
            tmp$ret$2 = 92;
          }
          tmp0_apply[tmp$ret$2] = '\\\\';
          var tmp$ret$3;
          {
            tmp$ret$3 = 9;
          }
          tmp0_apply[tmp$ret$3] = '\\t';
          var tmp$ret$4;
          {
            tmp$ret$4 = 8;
          }
          tmp0_apply[tmp$ret$4] = '\\b';
          var tmp$ret$5;
          {
            tmp$ret$5 = 10;
          }
          tmp0_apply[tmp$ret$5] = '\\n';
          var tmp$ret$6;
          {
            tmp$ret$6 = 13;
          }
          tmp0_apply[tmp$ret$6] = '\\r';
          tmp0_apply[12] = '\\f';
        }
        tmp$ret$7 = tmp0_apply;
      }
      ESCAPE_STRINGS = tmp$ret$7;
      var tmp$ret$13;
      {
        var tmp0_apply_0 = new Int8Array(93);
        {
        }
        {
          var inductionVariable_0 = 0;
          if (inductionVariable_0 <= 31)
            do {
              var c_0 = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              tmp0_apply_0[c_0] = 1;
            }
             while (inductionVariable_0 <= 31);
          var tmp$ret$0_0;
          {
            tmp$ret$0_0 = 34;
          }
          var tmp = tmp$ret$0_0;
          var tmp$ret$1_0;
          {
            tmp$ret$1_0 = 34;
          }
          tmp0_apply_0[tmp] = toByte(tmp$ret$1_0);
          var tmp$ret$2_0;
          {
            tmp$ret$2_0 = 92;
          }
          var tmp_0 = tmp$ret$2_0;
          var tmp$ret$3_0;
          {
            tmp$ret$3_0 = 92;
          }
          tmp0_apply_0[tmp_0] = toByte(tmp$ret$3_0);
          var tmp$ret$4_0;
          {
            tmp$ret$4_0 = 9;
          }
          var tmp_1 = tmp$ret$4_0;
          var tmp$ret$5_0;
          {
            tmp$ret$5_0 = 116;
          }
          tmp0_apply_0[tmp_1] = toByte(tmp$ret$5_0);
          var tmp$ret$6_0;
          {
            tmp$ret$6_0 = 8;
          }
          var tmp_2 = tmp$ret$6_0;
          var tmp$ret$7_0;
          {
            tmp$ret$7_0 = 98;
          }
          tmp0_apply_0[tmp_2] = toByte(tmp$ret$7_0);
          var tmp$ret$8;
          {
            tmp$ret$8 = 10;
          }
          var tmp_3 = tmp$ret$8;
          var tmp$ret$9;
          {
            tmp$ret$9 = 110;
          }
          tmp0_apply_0[tmp_3] = toByte(tmp$ret$9);
          var tmp$ret$10;
          {
            tmp$ret$10 = 13;
          }
          var tmp_4 = tmp$ret$10;
          var tmp$ret$11;
          {
            tmp$ret$11 = 114;
          }
          tmp0_apply_0[tmp_4] = toByte(tmp$ret$11);
          var tmp$ret$12;
          {
            tmp$ret$12 = 102;
          }
          tmp0_apply_0[12] = toByte(tmp$ret$12);
        }
        tmp$ret$13 = tmp0_apply_0;
      }
      ESCAPE_MARKERS = tmp$ret$13;
    }
  }
  function currentObject($this) {
    var tmp0_safe_receiver = $this.xx();
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          tmp$ret$0 = $this.m14(tmp0_safe_receiver);
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    var tmp1_elvis_lhs = tmp;
    return tmp1_elvis_lhs == null ? $this.n2() : tmp1_elvis_lhs;
  }
  function unparsedPrimitive($this, primitive) {
    throw JsonDecodingException_0(-1, "Failed to parse '" + primitive + "'", toString(currentObject($this)));
  }
  function asLiteral(_this__u8e3s4, $this, type) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof JsonLiteral ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw JsonDecodingException_1(-1, "Unexpected 'null' when " + type + ' was expected');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function AbstractJsonTreeDecoder(json, value) {
    NamedValueDecoder.call(this);
    this.j14_1 = json;
    this.k14_1 = value;
    this.l14_1 = this.l10().iz_1;
  }
  AbstractJsonTreeDecoder.prototype.l10 = function () {
    return this.j14_1;
  };
  AbstractJsonTreeDecoder.prototype.n2 = function () {
    return this.k14_1;
  };
  AbstractJsonTreeDecoder.prototype.yn = function () {
    return this.l10().yn();
  };
  AbstractJsonTreeDecoder.prototype.n14 = function () {
    return this.l14_1;
  };
  AbstractJsonTreeDecoder.prototype.m10 = function () {
    return currentObject(this);
  };
  AbstractJsonTreeDecoder.prototype.zp = function (deserializer) {
    return decodeSerializableValuePolymorphic(this, deserializer);
  };
  AbstractJsonTreeDecoder.prototype.yx = function (parentName, childName) {
    return childName;
  };
  AbstractJsonTreeDecoder.prototype.aq = function (descriptor) {
    var currentObject_0 = currentObject(this);
    var tmp0_subject = descriptor.mo();
    var tmp;
    var tmp_0;
    if (equals(tmp0_subject, LIST_getInstance())) {
      tmp_0 = true;
    } else {
      tmp_0 = tmp0_subject instanceof PolymorphicKind;
    }
    if (tmp_0) {
      var tmp_1 = this.l10();
      var tmp$ret$0;
      {
        if (!(currentObject_0 instanceof JsonArray)) {
          throw JsonDecodingException_1(-1, 'Expected ' + getKClass(JsonArray) + ' as the serialized body of ' + descriptor.io() + ', but had ' + getKClassFromExpression(currentObject_0));
        }
        tmp$ret$0 = currentObject_0;
      }
      tmp = new JsonTreeListDecoder(tmp_1, tmp$ret$0);
    } else {
      if (equals(tmp0_subject, MAP_getInstance())) {
        var tmp$ret$5;
        {
          var tmp0_selectMapMode = this.l10();
          var keyDescriptor = carrierDescriptor(descriptor.oo(0), tmp0_selectMapMode.yn());
          var keyKind = keyDescriptor.mo();
          var tmp_2;
          var tmp_3;
          if (keyKind instanceof PrimitiveKind) {
            tmp_3 = true;
          } else {
            tmp_3 = equals(keyKind, ENUM_getInstance());
          }
          if (tmp_3) {
            var tmp$ret$2;
            {
              var tmp_4 = this.l10();
              var tmp$ret$1;
              {
                if (!(currentObject_0 instanceof JsonObject)) {
                  throw JsonDecodingException_1(-1, 'Expected ' + getKClass(JsonObject) + ' as the serialized body of ' + descriptor.io() + ', but had ' + getKClassFromExpression(currentObject_0));
                }
                tmp$ret$1 = currentObject_0;
              }
              tmp$ret$2 = new JsonTreeMapDecoder(tmp_4, tmp$ret$1);
            }
            tmp_2 = tmp$ret$2;
          } else {
            if (tmp0_selectMapMode.iz_1.b10_1) {
              var tmp$ret$4;
              {
                var tmp_5 = this.l10();
                var tmp$ret$3;
                {
                  if (!(currentObject_0 instanceof JsonArray)) {
                    throw JsonDecodingException_1(-1, 'Expected ' + getKClass(JsonArray) + ' as the serialized body of ' + descriptor.io() + ', but had ' + getKClassFromExpression(currentObject_0));
                  }
                  tmp$ret$3 = currentObject_0;
                }
                tmp$ret$4 = new JsonTreeListDecoder(tmp_5, tmp$ret$3);
              }
              tmp_2 = tmp$ret$4;
            } else {
              throw InvalidKeyKindException(keyDescriptor);
            }
          }
          tmp$ret$5 = tmp_2;
        }
        tmp = tmp$ret$5;
      } else {
        var tmp_6 = this.l10();
        var tmp$ret$6;
        {
          if (!(currentObject_0 instanceof JsonObject)) {
            throw JsonDecodingException_1(-1, 'Expected ' + getKClass(JsonObject) + ' as the serialized body of ' + descriptor.io() + ', but had ' + getKClassFromExpression(currentObject_0));
          }
          tmp$ret$6 = currentObject_0;
        }
        var tmp_7 = tmp$ret$6;
        tmp = JsonTreeDecoder_init_$Create$(tmp_6, tmp_7, null, null, 12, null);
      }
    }
    return tmp;
  };
  AbstractJsonTreeDecoder.prototype.bq = function (descriptor) {
  };
  AbstractJsonTreeDecoder.prototype.np = function () {
    var tmp = currentObject(this);
    return !(tmp instanceof JsonNull);
  };
  AbstractJsonTreeDecoder.prototype.o14 = function (tag) {
    var currentElement = this.m14(tag);
    var tmp0_elvis_lhs = currentElement instanceof JsonPrimitive ? currentElement : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw JsonDecodingException_0(-1, 'Expected JsonPrimitive at ' + tag + ', found ' + currentElement, toString(currentObject(this)));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  AbstractJsonTreeDecoder.prototype.p14 = function (tag) {
    return !(this.m14(tag) === JsonNull_getInstance());
  };
  AbstractJsonTreeDecoder.prototype.ay = function (tag) {
    return this.p14((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.q14 = function (tag) {
    var value = this.o14(tag);
    if (!this.l10().iz_1.a10_1) {
      var literal = asLiteral(value, this, 'boolean');
      if (literal.y10_1)
        throw JsonDecodingException_0(-1, "Boolean literal for key '" + tag + "' should be unquoted.\n" + get_lenientHint(), toString(currentObject(this)));
    }
    var tmp$ret$1;
    $l$block: {
      try {
        var tmp$ret$0;
        {
          var tmp0_elvis_lhs = get_booleanOrNull(value);
          var tmp;
          if (tmp0_elvis_lhs == null) {
            throw IllegalArgumentException_init_$Create$_0();
          } else {
            tmp = tmp0_elvis_lhs;
          }
          tmp$ret$0 = tmp;
        }
        var tmp0_elvis_lhs_0 = tmp$ret$0;
        var tmp_0;
        if (tmp0_elvis_lhs_0 == null) {
          unparsedPrimitive(this, 'boolean');
        } else {
          tmp_0 = tmp0_elvis_lhs_0;
        }
        tmp$ret$1 = tmp_0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'boolean');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  AbstractJsonTreeDecoder.prototype.by = function (tag) {
    return this.q14((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.r14 = function (tag) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_primitive = this.o14(tag);
      try {
        var tmp$ret$0;
        {
          var result = get_int(tmp0_primitive);
          var tmp;
          var containsLower = ByteCompanionObject_getInstance().nd_1;
          if (result <= ByteCompanionObject_getInstance().od_1 ? containsLower <= result : false) {
            tmp = toByte(result);
          } else {
            tmp = null;
          }
          tmp$ret$0 = tmp;
        }
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp_0;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'byte');
        } else {
          tmp_0 = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp_0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'byte');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  AbstractJsonTreeDecoder.prototype.cy = function (tag) {
    return this.r14((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.s14 = function (tag) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_primitive = this.o14(tag);
      try {
        var tmp$ret$0;
        {
          var result = get_int(tmp0_primitive);
          var tmp;
          var containsLower = ShortCompanionObject_getInstance().vd_1;
          if (result <= ShortCompanionObject_getInstance().wd_1 ? containsLower <= result : false) {
            tmp = toShort(result);
          } else {
            tmp = null;
          }
          tmp$ret$0 = tmp;
        }
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp_0;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'short');
        } else {
          tmp_0 = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp_0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'short');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  AbstractJsonTreeDecoder.prototype.dy = function (tag) {
    return this.s14((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.t14 = function (tag) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_primitive = this.o14(tag);
      try {
        var tmp$ret$0;
        {
          tmp$ret$0 = get_int(tmp0_primitive);
        }
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'int');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'int');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  AbstractJsonTreeDecoder.prototype.ey = function (tag) {
    return this.t14((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.u14 = function (tag) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_primitive = this.o14(tag);
      try {
        var tmp$ret$0;
        {
          tmp$ret$0 = get_long(tmp0_primitive);
        }
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'long');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'long');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  AbstractJsonTreeDecoder.prototype.fy = function (tag) {
    return this.u14((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.v14 = function (tag) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_primitive = this.o14(tag);
      try {
        var tmp$ret$0;
        {
          tmp$ret$0 = get_float(tmp0_primitive);
        }
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'float');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'float');
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$1;
    var specialFp = this.l10().iz_1.i10_1;
    if (specialFp ? true : isFinite(result))
      return result;
    throw InvalidFloatingPointDecoded(result, tag, toString(currentObject(this)));
  };
  AbstractJsonTreeDecoder.prototype.gy = function (tag) {
    return this.v14((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.w14 = function (tag) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_primitive = this.o14(tag);
      try {
        var tmp$ret$0;
        {
          tmp$ret$0 = get_double(tmp0_primitive);
        }
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'double');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'double');
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$1;
    var specialFp = this.l10().iz_1.i10_1;
    if (specialFp ? true : isFinite_0(result))
      return result;
    throw InvalidFloatingPointDecoded(result, tag, toString(currentObject(this)));
  };
  AbstractJsonTreeDecoder.prototype.hy = function (tag) {
    return this.w14((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.x14 = function (tag) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_primitive = this.o14(tag);
      try {
        var tmp$ret$0;
        {
          tmp$ret$0 = single(tmp0_primitive.q10());
        }
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp;
        var tmp_0 = tmp0_elvis_lhs;
        if ((tmp_0 == null ? null : new Char(tmp_0)) == null) {
          unparsedPrimitive(this, 'char');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'char');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  AbstractJsonTreeDecoder.prototype.iy = function (tag) {
    return this.x14((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.y14 = function (tag) {
    var value = this.o14(tag);
    if (!this.l10().iz_1.a10_1) {
      var literal = asLiteral(value, this, 'string');
      if (!literal.y10_1)
        throw JsonDecodingException_0(-1, "String literal for key '" + tag + "' should be quoted.\n" + get_lenientHint(), toString(currentObject(this)));
    }
    if (value instanceof JsonNull)
      throw JsonDecodingException_0(-1, "Unexpected 'null' value instead of string literal", toString(currentObject(this)));
    return value.q10();
  };
  AbstractJsonTreeDecoder.prototype.jy = function (tag) {
    return this.y14((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.$metadata$ = classMeta('AbstractJsonTreeDecoder', [JsonDecoder], undefined, undefined, undefined, NamedValueDecoder.prototype);
  function JsonTreeDecoder_init_$Init$(json, value, polyDiscriminator, polyDescriptor, $mask0, $marker, $this) {
    if (!(($mask0 & 4) === 0))
      polyDiscriminator = null;
    if (!(($mask0 & 8) === 0))
      polyDescriptor = null;
    JsonTreeDecoder.call($this, json, value, polyDiscriminator, polyDescriptor);
    return $this;
  }
  function JsonTreeDecoder_init_$Create$(json, value, polyDiscriminator, polyDescriptor, $mask0, $marker) {
    return JsonTreeDecoder_init_$Init$(json, value, polyDiscriminator, polyDescriptor, $mask0, $marker, Object.create(JsonTreeDecoder.prototype));
  }
  function coerceInputValue_0($this, descriptor, index, tag) {
    var tmp$ret$1;
    $l$block_1: {
      var tmp0_tryCoerceValue = $this.l10();
      var tmp1_tryCoerceValue = descriptor.oo(index);
      var tmp;
      if (!tmp1_tryCoerceValue.eo()) {
        var tmp$ret$0;
        {
          var tmp_0 = $this.m14(tag);
          tmp$ret$0 = tmp_0 instanceof JsonNull;
        }
        tmp = tmp$ret$0;
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$1 = true;
        break $l$block_1;
      }
      if (equals(tmp1_tryCoerceValue.mo(), ENUM_getInstance())) {
        var tmp$ret$2;
        {
          var tmp_1 = $this.m14(tag);
          var tmp0_safe_receiver = tmp_1 instanceof JsonPrimitive ? tmp_1 : null;
          tmp$ret$2 = tmp0_safe_receiver == null ? null : get_contentOrNull(tmp0_safe_receiver);
        }
        var tmp0_elvis_lhs = tmp$ret$2;
        var tmp_2;
        if (tmp0_elvis_lhs == null) {
          tmp$ret$1 = false;
          break $l$block_1;
        } else {
          tmp_2 = tmp0_elvis_lhs;
        }
        var enumValue = tmp_2;
        var enumIndex = getJsonNameIndex(tmp1_tryCoerceValue, tmp0_tryCoerceValue, enumValue);
        Companion_getInstance();
        if (enumIndex === -3) {
          var tmp$ret$3;
          {
            tmp$ret$3 = Unit_getInstance();
          }
          tmp$ret$1 = true;
          break $l$block_1;
        }
      }
      tmp$ret$1 = false;
    }
    return tmp$ret$1;
  }
  function absenceIsNull($this, descriptor, index) {
    $this.i15_1 = (!$this.l10().iz_1.d10_1 ? !descriptor.ro(index) : false) ? descriptor.oo(index).eo() : false;
    return $this.i15_1;
  }
  function buildAlternativeNamesMap$ref_0($boundThis) {
    var l = function () {
      return buildAlternativeNamesMap($boundThis);
    };
    l.callableName = 'buildAlternativeNamesMap';
    return l;
  }
  function JsonTreeDecoder(json, value, polyDiscriminator, polyDescriptor) {
    AbstractJsonTreeDecoder.call(this, json, value);
    this.e15_1 = value;
    this.f15_1 = polyDiscriminator;
    this.g15_1 = polyDescriptor;
    this.h15_1 = 0;
    this.i15_1 = false;
  }
  JsonTreeDecoder.prototype.n2 = function () {
    return this.e15_1;
  };
  JsonTreeDecoder.prototype.oq = function (descriptor) {
    while (this.h15_1 < descriptor.ko()) {
      var tmp0_this = this;
      var tmp1 = tmp0_this.h15_1;
      tmp0_this.h15_1 = tmp1 + 1 | 0;
      var name = this.sx(descriptor, tmp1);
      var index = this.h15_1 - 1 | 0;
      this.i15_1 = false;
      var tmp;
      var tmp_0;
      var tmp$ret$1;
      {
        var tmp0_contains = this.n2();
        var tmp$ret$0;
        {
          tmp$ret$0 = (isInterface(tmp0_contains, Map) ? tmp0_contains : THROW_CCE()).v2(name);
        }
        tmp$ret$1 = tmp$ret$0;
      }
      if (tmp$ret$1) {
        tmp_0 = true;
      } else {
        tmp_0 = absenceIsNull(this, descriptor, index);
      }
      if (tmp_0) {
        tmp = !this.n14().f10_1 ? true : !coerceInputValue_0(this, descriptor, index, name);
      } else {
        tmp = false;
      }
      if (tmp) {
        return index;
      }
    }
    Companion_getInstance();
    return -1;
  };
  JsonTreeDecoder.prototype.np = function () {
    return !this.i15_1 ? AbstractJsonTreeDecoder.prototype.np.call(this) : false;
  };
  JsonTreeDecoder.prototype.tx = function (desc, index) {
    var mainName = desc.qo(index);
    if (!this.n14().j10_1)
      return mainName;
    if (this.n2().c3().p(mainName))
      return mainName;
    var tmp = get_schemaCache(this.l10());
    var tmp_0 = get_JsonAlternativeNamesKey();
    var alternativeNamesMap = tmp.p11(desc, tmp_0, buildAlternativeNamesMap$ref_0(desc));
    var tmp$ret$2;
    {
      var tmp0_find = this.n2().c3();
      var tmp$ret$1;
      $l$block: {
        var tmp0_iterator = tmp0_find.h();
        while (tmp0_iterator.n()) {
          var element = tmp0_iterator.o();
          var tmp$ret$0;
          {
            tmp$ret$0 = alternativeNamesMap.b3(element) === index;
          }
          if (tmp$ret$0) {
            tmp$ret$1 = element;
            break $l$block;
          }
        }
        tmp$ret$1 = null;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    var nameInObject = tmp$ret$2;
    var tmp0_elvis_lhs = nameInObject;
    return tmp0_elvis_lhs == null ? mainName : tmp0_elvis_lhs;
  };
  JsonTreeDecoder.prototype.m14 = function (tag) {
    return getValue(this.n2(), tag);
  };
  JsonTreeDecoder.prototype.aq = function (descriptor) {
    if (descriptor === this.g15_1)
      return this;
    return AbstractJsonTreeDecoder.prototype.aq.call(this, descriptor);
  };
  JsonTreeDecoder.prototype.bq = function (descriptor) {
    var tmp;
    if (this.n14().zz_1) {
      tmp = true;
    } else {
      var tmp_0 = descriptor.mo();
      tmp = tmp_0 instanceof PolymorphicKind;
    }
    if (tmp)
      return Unit_getInstance();
    var tmp_1;
    if (!this.n14().j10_1) {
      tmp_1 = jsonCachedSerialNames(descriptor);
    } else {
      var tmp_2 = jsonCachedSerialNames(descriptor);
      var tmp$ret$0;
      {
        var tmp0_safe_receiver = get_schemaCache(this.l10()).o13(descriptor, get_JsonAlternativeNamesKey());
        var tmp0_orEmpty = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.c3();
        var tmp0_elvis_lhs = tmp0_orEmpty;
        tmp$ret$0 = tmp0_elvis_lhs == null ? emptySet() : tmp0_elvis_lhs;
      }
      tmp_1 = plus_0(tmp_2, tmp$ret$0);
    }
    var names = tmp_1;
    var tmp1_iterator = this.n2().c3().h();
    while (tmp1_iterator.n()) {
      var key = tmp1_iterator.o();
      if (!names.p(key) ? !(key === this.f15_1) : false) {
        throw UnknownKeyException(key, this.n2().toString());
      }
    }
  };
  JsonTreeDecoder.$metadata$ = classMeta('JsonTreeDecoder', undefined, undefined, undefined, undefined, AbstractJsonTreeDecoder.prototype);
  function JsonTreeListDecoder(json, value) {
    AbstractJsonTreeDecoder.call(this, json, value);
    this.o15_1 = value;
    this.p15_1 = this.o15_1.m();
    this.q15_1 = -1;
  }
  JsonTreeListDecoder.prototype.n2 = function () {
    return this.o15_1;
  };
  JsonTreeListDecoder.prototype.tx = function (desc, index) {
    return index.toString();
  };
  JsonTreeListDecoder.prototype.m14 = function (tag) {
    return this.o15_1.r(toInt(tag));
  };
  JsonTreeListDecoder.prototype.oq = function (descriptor) {
    while (this.q15_1 < (this.p15_1 - 1 | 0)) {
      var tmp0_this = this;
      var tmp1 = tmp0_this.q15_1;
      tmp0_this.q15_1 = tmp1 + 1 | 0;
      return this.q15_1;
    }
    Companion_getInstance();
    return -1;
  };
  JsonTreeListDecoder.$metadata$ = classMeta('JsonTreeListDecoder', undefined, undefined, undefined, undefined, AbstractJsonTreeDecoder.prototype);
  function JsonTreeMapDecoder(json, value) {
    JsonTreeDecoder_init_$Init$(json, value, null, null, 12, null, this);
    this.b16_1 = value;
    this.c16_1 = toList(this.b16_1.c3());
    this.d16_1 = imul(this.c16_1.m(), 2);
    this.e16_1 = -1;
  }
  JsonTreeMapDecoder.prototype.n2 = function () {
    return this.b16_1;
  };
  JsonTreeMapDecoder.prototype.tx = function (desc, index) {
    var i = index / 2 | 0;
    return this.c16_1.r(i);
  };
  JsonTreeMapDecoder.prototype.oq = function (descriptor) {
    while (this.e16_1 < (this.d16_1 - 1 | 0)) {
      var tmp0_this = this;
      var tmp1 = tmp0_this.e16_1;
      tmp0_this.e16_1 = tmp1 + 1 | 0;
      return this.e16_1;
    }
    Companion_getInstance();
    return -1;
  };
  JsonTreeMapDecoder.prototype.m14 = function (tag) {
    return (this.e16_1 % 2 | 0) === 0 ? JsonPrimitive_0(tag) : getValue(this.b16_1, tag);
  };
  JsonTreeMapDecoder.prototype.bq = function (descriptor) {
  };
  JsonTreeMapDecoder.$metadata$ = classMeta('JsonTreeMapDecoder', undefined, undefined, undefined, undefined, JsonTreeDecoder.prototype);
  function readPolymorphicJson(_this__u8e3s4, discriminator, element, deserializer) {
    return (new JsonTreeDecoder(_this__u8e3s4, element, discriminator, deserializer.hn())).zp(deserializer);
  }
  var WriteMode_OBJ_instance;
  var WriteMode_LIST_instance;
  var WriteMode_MAP_instance;
  var WriteMode_POLY_OBJ_instance;
  var WriteMode_entriesInitialized;
  function WriteMode_initEntries() {
    if (WriteMode_entriesInitialized)
      return Unit_getInstance();
    WriteMode_entriesInitialized = true;
    WriteMode_OBJ_instance = new WriteMode('OBJ', 0, get_BEGIN_OBJ(), get_END_OBJ());
    WriteMode_LIST_instance = new WriteMode('LIST', 1, get_BEGIN_LIST(), get_END_LIST());
    WriteMode_MAP_instance = new WriteMode('MAP', 2, get_BEGIN_OBJ(), get_END_OBJ());
    WriteMode_POLY_OBJ_instance = new WriteMode('POLY_OBJ', 3, get_BEGIN_LIST(), get_END_LIST());
  }
  function WriteMode(name, ordinal, begin, end) {
    Enum.call(this, name, ordinal);
    this.c14_1 = begin;
    this.d14_1 = end;
  }
  WriteMode.$metadata$ = classMeta('WriteMode', undefined, undefined, undefined, undefined, Enum.prototype);
  function switchMode(_this__u8e3s4, desc) {
    var tmp0_subject = desc.mo();
    var tmp;
    if (tmp0_subject instanceof PolymorphicKind) {
      tmp = WriteMode_POLY_OBJ_getInstance();
    } else {
      if (equals(tmp0_subject, LIST_getInstance())) {
        tmp = WriteMode_LIST_getInstance();
      } else {
        if (equals(tmp0_subject, MAP_getInstance())) {
          var tmp$ret$2;
          {
            var keyDescriptor = carrierDescriptor(desc.oo(0), _this__u8e3s4.yn());
            var keyKind = keyDescriptor.mo();
            var tmp_0;
            var tmp_1;
            if (keyKind instanceof PrimitiveKind) {
              tmp_1 = true;
            } else {
              tmp_1 = equals(keyKind, ENUM_getInstance());
            }
            if (tmp_1) {
              var tmp$ret$0;
              {
                tmp$ret$0 = WriteMode_MAP_getInstance();
              }
              tmp_0 = tmp$ret$0;
            } else {
              if (_this__u8e3s4.iz_1.b10_1) {
                var tmp$ret$1;
                {
                  tmp$ret$1 = WriteMode_LIST_getInstance();
                }
                tmp_0 = tmp$ret$1;
              } else {
                throw InvalidKeyKindException(keyDescriptor);
              }
            }
            tmp$ret$2 = tmp_0;
          }
          tmp = tmp$ret$2;
        } else {
          tmp = WriteMode_OBJ_getInstance();
        }
      }
    }
    return tmp;
  }
  function selectMapMode(_this__u8e3s4, mapDescriptor, ifMap, ifList) {
    var keyDescriptor = carrierDescriptor(mapDescriptor.oo(0), _this__u8e3s4.yn());
    var keyKind = keyDescriptor.mo();
    var tmp;
    var tmp_0;
    if (keyKind instanceof PrimitiveKind) {
      tmp_0 = true;
    } else {
      tmp_0 = equals(keyKind, ENUM_getInstance());
    }
    if (tmp_0) {
      tmp = ifMap();
    } else {
      if (_this__u8e3s4.iz_1.b10_1) {
        tmp = ifList();
      } else {
        throw InvalidKeyKindException(keyDescriptor);
      }
    }
    return tmp;
  }
  function carrierDescriptor(_this__u8e3s4, module_0) {
    var tmp;
    if (equals(_this__u8e3s4.mo(), CONTEXTUAL_getInstance())) {
      var tmp0_safe_receiver = getContextualDescriptor(module_0, _this__u8e3s4);
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : carrierDescriptor(tmp0_safe_receiver, module_0);
      tmp = tmp1_elvis_lhs == null ? _this__u8e3s4 : tmp1_elvis_lhs;
    } else if (_this__u8e3s4.lo()) {
      tmp = carrierDescriptor(_this__u8e3s4.oo(0), module_0);
    } else {
      tmp = _this__u8e3s4;
    }
    return tmp;
  }
  function WriteMode_OBJ_getInstance() {
    WriteMode_initEntries();
    return WriteMode_OBJ_instance;
  }
  function WriteMode_LIST_getInstance() {
    WriteMode_initEntries();
    return WriteMode_LIST_instance;
  }
  function WriteMode_MAP_getInstance() {
    WriteMode_initEntries();
    return WriteMode_MAP_instance;
  }
  function WriteMode_POLY_OBJ_getInstance() {
    WriteMode_initEntries();
    return WriteMode_POLY_OBJ_instance;
  }
  function get_STRING() {
    return STRING;
  }
  var STRING;
  function appendEscape($this, lastPosition, current) {
    $this.f16(lastPosition, current);
    return appendEsc($this, current + 1 | 0);
  }
  function decodedString($this, lastPosition, currentPosition) {
    $this.f16(lastPosition, currentPosition);
    var result = $this.wz_1.toString();
    $this.wz_1.ik(0);
    return result;
  }
  function takePeeked($this) {
    var tmp$ret$0;
    {
      var tmp0_also = ensureNotNull($this.vz_1);
      {
      }
      {
        $this.vz_1 = null;
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  }
  function wasUnquotedString($this) {
    return !equals(new Char(charSequenceGet($this.g16(), $this.tz_1 - 1 | 0)), new Char(_Char___init__impl__6a9atx(34)));
  }
  function appendEsc($this, startPosition) {
    var currentPosition = startPosition;
    currentPosition = $this.h16(currentPosition);
    if (currentPosition === -1) {
      $this.n11('Expected escape sequence to continue, got EOF', 0, null, 6, null);
    }
    var tmp = $this.g16();
    var tmp0 = currentPosition;
    currentPosition = tmp0 + 1 | 0;
    var currentChar = charSequenceGet(tmp, tmp0);
    if (equals(new Char(currentChar), new Char(_Char___init__impl__6a9atx(117)))) {
      return appendHex($this, $this.g16(), currentPosition);
    }
    var tmp$ret$0;
    {
      tmp$ret$0 = Char__toInt_impl_vasixd(currentChar);
    }
    var c = escapeToChar(tmp$ret$0);
    if (equals(new Char(c), new Char(_Char___init__impl__6a9atx(0)))) {
      var tmp_0 = "Invalid escaped char '" + new Char(currentChar) + "'";
      $this.n11(tmp_0, 0, null, 6, null);
    }
    $this.wz_1.ea(c);
    return currentPosition;
  }
  function appendHex($this, source, startPos) {
    if ((startPos + 4 | 0) >= charSequenceLength(source)) {
      $this.tz_1 = startPos;
      $this.i16();
      if (($this.tz_1 + 4 | 0) >= charSequenceLength(source)) {
        $this.n11('Unexpected EOF during unicode escape', 0, null, 6, null);
      }
      return appendHex($this, source, $this.tz_1);
    }
    $this.wz_1.ea(numberToChar((((fromHexChar($this, source, startPos) << 12) + (fromHexChar($this, source, startPos + 1 | 0) << 8) | 0) + (fromHexChar($this, source, startPos + 2 | 0) << 4) | 0) + fromHexChar($this, source, startPos + 3 | 0) | 0));
    return startPos + 4 | 0;
  }
  function fromHexChar($this, source, currentPosition) {
    var character = charSequenceGet(source, currentPosition);
    var tmp;
    if (_Char___init__impl__6a9atx(48) <= character ? character <= _Char___init__impl__6a9atx(57) : false) {
      var tmp$ret$0;
      {
        tmp$ret$0 = Char__toInt_impl_vasixd(character);
      }
      var tmp_0 = tmp$ret$0;
      var tmp$ret$1;
      {
        tmp$ret$1 = 48;
      }
      tmp = tmp_0 - tmp$ret$1 | 0;
    } else if (_Char___init__impl__6a9atx(97) <= character ? character <= _Char___init__impl__6a9atx(102) : false) {
      var tmp$ret$2;
      {
        tmp$ret$2 = Char__toInt_impl_vasixd(character);
      }
      var tmp_1 = tmp$ret$2;
      var tmp$ret$3;
      {
        tmp$ret$3 = 97;
      }
      tmp = (tmp_1 - tmp$ret$3 | 0) + 10 | 0;
    } else if (_Char___init__impl__6a9atx(65) <= character ? character <= _Char___init__impl__6a9atx(70) : false) {
      var tmp$ret$4;
      {
        tmp$ret$4 = Char__toInt_impl_vasixd(character);
      }
      var tmp_2 = tmp$ret$4;
      var tmp$ret$5;
      {
        tmp$ret$5 = 65;
      }
      tmp = (tmp_2 - tmp$ret$5 | 0) + 10 | 0;
    } else {
      var tmp_3 = "Invalid toHexChar char '" + new Char(character) + "' in unicode escape";
      $this.n11(tmp_3, 0, null, 6, null);
    }
    return tmp;
  }
  function consumeBoolean($this, start) {
    var current = $this.h16(start);
    if (current >= charSequenceLength($this.g16()) ? true : current === -1) {
      $this.n11('EOF', 0, null, 6, null);
    }
    var tmp$ret$0;
    {
      var tmp = $this.g16();
      var tmp0 = current;
      current = tmp0 + 1 | 0;
      var tmp0__get_code__88qj9g = charSequenceGet(tmp, tmp0);
      tmp$ret$0 = Char__toInt_impl_vasixd(tmp0__get_code__88qj9g);
    }
    var tmp1_subject = tmp$ret$0 | 32;
    var tmp_0;
    var tmp$ret$1;
    {
      tmp$ret$1 = 116;
    }
    if (tmp1_subject === tmp$ret$1) {
      consumeBooleanLiteral($this, 'rue', current);
      tmp_0 = true;
    } else {
      var tmp$ret$2;
      {
        tmp$ret$2 = 102;
      }
      if (tmp1_subject === tmp$ret$2) {
        consumeBooleanLiteral($this, 'alse', current);
        tmp_0 = false;
      } else {
        var tmp_1 = "Expected valid boolean literal prefix, but had '" + $this.h12() + "'";
        $this.n11(tmp_1, 0, null, 6, null);
      }
    }
    return tmp_0;
  }
  function consumeBooleanLiteral($this, literalSuffix, current) {
    if ((charSequenceLength($this.g16()) - current | 0) < literalSuffix.length) {
      $this.n11('Unexpected end of boolean literal', 0, null, 6, null);
    }
    var inductionVariable = 0;
    var last = charSequenceLength(literalSuffix) - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var expected = charSequenceGet(literalSuffix, i);
        var actual = charSequenceGet($this.g16(), current + i | 0);
        var tmp$ret$0;
        {
          tmp$ret$0 = Char__toInt_impl_vasixd(expected);
        }
        var tmp = tmp$ret$0;
        var tmp$ret$1;
        {
          tmp$ret$1 = Char__toInt_impl_vasixd(actual);
        }
        if (!(tmp === (tmp$ret$1 | 32))) {
          var tmp_0 = "Expected valid boolean literal prefix, but had '" + $this.h12() + "'";
          $this.n11(tmp_0, 0, null, 6, null);
        }
      }
       while (inductionVariable <= last);
    $this.tz_1 = current + literalSuffix.length | 0;
  }
  function AbstractJsonLexer() {
    this.tz_1 = 0;
    this.uz_1 = new JsonPath();
    this.vz_1 = null;
    this.wz_1 = StringBuilder_init_$Create$();
  }
  AbstractJsonLexer.prototype.j16 = function (_set____db54di) {
    this.tz_1 = _set____db54di;
  };
  AbstractJsonLexer.prototype.k16 = function () {
    return this.tz_1;
  };
  AbstractJsonLexer.prototype.i16 = function () {
  };
  AbstractJsonLexer.prototype.l16 = function (c) {
    var tmp0_subject = c;
    return (((equals(new Char(tmp0_subject), new Char(_Char___init__impl__6a9atx(125))) ? true : equals(new Char(tmp0_subject), new Char(_Char___init__impl__6a9atx(93)))) ? true : equals(new Char(tmp0_subject), new Char(_Char___init__impl__6a9atx(58)))) ? true : equals(new Char(tmp0_subject), new Char(_Char___init__impl__6a9atx(44)))) ? false : true;
  };
  AbstractJsonLexer.prototype.xz = function () {
    var nextToken = this.j12();
    if (!(nextToken === 10)) {
      var tmp = 'Expected EOF after parsing, but had ' + new Char(charSequenceGet(this.g16(), this.tz_1 - 1 | 0)) + ' instead';
      this.n11(tmp, 0, null, 6, null);
    }
  };
  AbstractJsonLexer.prototype.d12 = function (expected) {
    var token = this.j12();
    if (!(token === expected)) {
      this.m16(expected);
    }
    return token;
  };
  AbstractJsonLexer.prototype.q13 = function (expected) {
    this.i16();
    var source = this.g16();
    var cpos = this.tz_1;
    $l$loop_0: while (true) {
      cpos = this.h16(cpos);
      if (cpos === -1)
        break $l$loop_0;
      var tmp0 = cpos;
      cpos = tmp0 + 1 | 0;
      var c = charSequenceGet(source, tmp0);
      if (((equals(new Char(c), new Char(_Char___init__impl__6a9atx(32))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(10)))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(13)))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(9))))
        continue $l$loop_0;
      this.tz_1 = cpos;
      if (equals(new Char(c), new Char(expected)))
        return Unit_getInstance();
      this.n16(expected);
    }
    this.tz_1 = cpos;
    this.n16(expected);
  };
  AbstractJsonLexer.prototype.n16 = function (expected) {
    var tmp0_this = this;
    tmp0_this.tz_1 = tmp0_this.tz_1 - 1 | 0;
    if ((this.tz_1 >= 0 ? equals(new Char(expected), new Char(_Char___init__impl__6a9atx(34))) : false) ? this.h12() === 'null' : false) {
      this.o16("Expected string literal but 'null' literal was found", this.tz_1 - 4 | 0, "Use 'coerceInputValues = true' in 'Json {}` builder to coerce nulls to default values.");
    }
    this.m16(charToTokenClass(expected));
  };
  AbstractJsonLexer.prototype.m16 = function (expectedToken) {
    var tmp0_subject = expectedToken;
    var expected = tmp0_subject === 1 ? "quotation mark '\"'" : tmp0_subject === 4 ? "comma ','" : tmp0_subject === 5 ? "colon ':'" : tmp0_subject === 6 ? "start of the object '{'" : tmp0_subject === 7 ? "end of the object '}'" : tmp0_subject === 8 ? "start of the array '['" : tmp0_subject === 9 ? "end of the array ']'" : 'valid token';
    var s = (this.tz_1 === charSequenceLength(this.g16()) ? true : this.tz_1 <= 0) ? 'EOF' : toString_0(charSequenceGet(this.g16(), this.tz_1 - 1 | 0));
    var tmp = 'Expected ' + expected + ", but had '" + s + "' instead";
    var tmp_0 = this.tz_1 - 1 | 0;
    this.n11(tmp, tmp_0, null, 4, null);
  };
  AbstractJsonLexer.prototype.e12 = function () {
    var source = this.g16();
    var cpos = this.tz_1;
    $l$loop_0: while (true) {
      cpos = this.h16(cpos);
      if (cpos === -1)
        break $l$loop_0;
      var ch = charSequenceGet(source, cpos);
      if (((equals(new Char(ch), new Char(_Char___init__impl__6a9atx(32))) ? true : equals(new Char(ch), new Char(_Char___init__impl__6a9atx(10)))) ? true : equals(new Char(ch), new Char(_Char___init__impl__6a9atx(13)))) ? true : equals(new Char(ch), new Char(_Char___init__impl__6a9atx(9)))) {
        cpos = cpos + 1 | 0;
        continue $l$loop_0;
      }
      this.tz_1 = cpos;
      return charToTokenClass(ch);
    }
    this.tz_1 = cpos;
    return 10;
  };
  AbstractJsonLexer.prototype.s13 = function () {
    var current = this.p16();
    current = this.h16(current);
    var len = charSequenceLength(this.g16()) - current | 0;
    if (len < 4 ? true : current === -1)
      return true;
    var inductionVariable = 0;
    if (inductionVariable <= 3)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!equals(new Char(charSequenceGet('null', i)), new Char(charSequenceGet(this.g16(), current + i | 0))))
          return true;
      }
       while (inductionVariable <= 3);
    if (len > 4 ? charToTokenClass(charSequenceGet(this.g16(), current + 4 | 0)) === 0 : false)
      return true;
    this.tz_1 = current + 4 | 0;
    return false;
  };
  AbstractJsonLexer.prototype.p16 = function () {
    var current = this.tz_1;
    $l$loop_0: while (true) {
      current = this.h16(current);
      if (current === -1)
        break $l$loop_0;
      var c = charSequenceGet(this.g16(), current);
      if (((equals(new Char(c), new Char(_Char___init__impl__6a9atx(32))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(10)))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(13)))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(9)))) {
        current = current + 1 | 0;
      } else {
        break $l$loop_0;
      }
    }
    this.tz_1 = current;
    return current;
  };
  AbstractJsonLexer.prototype.t13 = function (isLenient) {
    var token = this.e12();
    var tmp;
    if (isLenient) {
      if (!(token === 1) ? !(token === 0) : false)
        return null;
      tmp = this.h12();
    } else {
      if (!(token === 1))
        return null;
      tmp = this.g12();
    }
    var string = tmp;
    this.vz_1 = string;
    return string;
  };
  AbstractJsonLexer.prototype.q16 = function (startPos, endPos) {
    var tmp$ret$0;
    {
      var tmp0_substring = this.g16();
      tmp$ret$0 = toString(charSequenceSubSequence(tmp0_substring, startPos, endPos));
    }
    return tmp$ret$0;
  };
  AbstractJsonLexer.prototype.g12 = function () {
    if (!(this.vz_1 == null)) {
      return takePeeked(this);
    }
    return this.w13();
  };
  AbstractJsonLexer.prototype.consumeString2 = function (source, startPosition, current) {
    var currentPosition = current;
    var lastPosition = startPosition;
    var char = charSequenceGet(source, currentPosition);
    var usedAppend = false;
    while (!equals(new Char(char), new Char(_Char___init__impl__6a9atx(34)))) {
      if (equals(new Char(char), new Char(_Char___init__impl__6a9atx(92)))) {
        usedAppend = true;
        currentPosition = this.h16(appendEscape(this, lastPosition, currentPosition));
        if (currentPosition === -1) {
          var tmp = currentPosition;
          this.n11('EOF', tmp, null, 4, null);
        }
        lastPosition = currentPosition;
      } else {
        currentPosition = currentPosition + 1 | 0;
        if (currentPosition >= charSequenceLength(source)) {
          usedAppend = true;
          this.f16(lastPosition, currentPosition);
          currentPosition = this.h16(currentPosition);
          if (currentPosition === -1) {
            var tmp_0 = currentPosition;
            this.n11('EOF', tmp_0, null, 4, null);
          }
          lastPosition = currentPosition;
        }
      }
      char = charSequenceGet(source, currentPosition);
    }
    var tmp_1;
    if (!usedAppend) {
      tmp_1 = this.q16(lastPosition, currentPosition);
    } else {
      tmp_1 = decodedString(this, lastPosition, currentPosition);
    }
    var string = tmp_1;
    this.tz_1 = currentPosition + 1 | 0;
    return string;
  };
  AbstractJsonLexer.prototype.x13 = function () {
    var result = this.h12();
    if (result === 'null' ? wasUnquotedString(this) : false) {
      this.n11("Unexpected 'null' value instead of string literal", 0, null, 6, null);
    }
    return result;
  };
  AbstractJsonLexer.prototype.h12 = function () {
    if (!(this.vz_1 == null)) {
      return takePeeked(this);
    }
    var current = this.p16();
    if (current >= charSequenceLength(this.g16()) ? true : current === -1) {
      var tmp = current;
      this.n11('EOF', tmp, null, 4, null);
    }
    var token = charToTokenClass(charSequenceGet(this.g16(), current));
    if (token === 1) {
      return this.g12();
    }
    if (!(token === 0)) {
      var tmp_0 = 'Expected beginning of the string, but got ' + new Char(charSequenceGet(this.g16(), current));
      this.n11(tmp_0, 0, null, 6, null);
    }
    var usedAppend = false;
    while (charToTokenClass(charSequenceGet(this.g16(), current)) === 0) {
      current = current + 1 | 0;
      if (current >= charSequenceLength(this.g16())) {
        usedAppend = true;
        this.f16(this.tz_1, current);
        var eof = this.h16(current);
        if (eof === -1) {
          this.tz_1 = current;
          return decodedString(this, 0, 0);
        } else {
          current = eof;
        }
      }
    }
    var tmp_1;
    if (!usedAppend) {
      tmp_1 = this.q16(this.tz_1, current);
    } else {
      tmp_1 = decodedString(this, this.tz_1, current);
    }
    var result = tmp_1;
    this.tz_1 = current;
    return result;
  };
  AbstractJsonLexer.prototype.f16 = function (fromIndex, toIndex) {
    this.wz_1.hk(this.g16(), fromIndex, toIndex);
  };
  AbstractJsonLexer.prototype.r16 = function (condition, position, message) {
    if (!condition) {
      var tmp = message();
      this.n11(tmp, position, null, 4, null);
    }
  };
  AbstractJsonLexer.prototype.v13 = function (allowLenientStrings) {
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$();
    }
    var tokenStack = tmp$ret$0;
    var lastToken = this.e12();
    if (!(lastToken === 8) ? !(lastToken === 6) : false) {
      this.h12();
      return Unit_getInstance();
    }
    $l$loop: while (true) {
      lastToken = this.e12();
      if (lastToken === 1) {
        if (allowLenientStrings) {
          this.h12();
        } else {
          this.w13();
        }
        continue $l$loop;
      }
      var tmp0_subject = lastToken;
      if (tmp0_subject === 8 ? true : tmp0_subject === 6) {
        tokenStack.b(lastToken);
      } else if (tmp0_subject === 9) {
        if (!(last(tokenStack) === 8))
          throw JsonDecodingException_0(this.tz_1, 'found ] instead of } at path: ' + this.uz_1, this.g16());
        removeLast(tokenStack);
      } else if (tmp0_subject === 7) {
        if (!(last(tokenStack) === 6))
          throw JsonDecodingException_0(this.tz_1, 'found } instead of ] at path: ' + this.uz_1, this.g16());
        removeLast(tokenStack);
      } else if (tmp0_subject === 10) {
        this.n11('Unexpected end of input due to malformed JSON during ignoring unknown keys', 0, null, 6, null);
      }
      this.j12();
      if (tokenStack.m() === 0)
        return Unit_getInstance();
    }
  };
  AbstractJsonLexer.prototype.toString = function () {
    return "JsonReader(source='" + this.g16() + "', currentPosition=" + this.tz_1 + ')';
  };
  AbstractJsonLexer.prototype.u13 = function (key) {
    var processed = this.q16(0, this.tz_1);
    var lastIndexOf = lastIndexOf$default(processed, key, 0, false, 6, null);
    this.o16("Encountered an unknown key '" + key + "'", lastIndexOf, "Use 'ignoreUnknownKeys = true' in 'Json {}' builder to ignore unknown keys.");
  };
  AbstractJsonLexer.prototype.o16 = function (message, position, hint) {
    var tmp;
    var tmp$ret$0;
    {
      tmp$ret$0 = charSequenceLength(hint) === 0;
    }
    if (tmp$ret$0) {
      tmp = '';
    } else {
      tmp = '\n' + hint;
    }
    var hintMessage = tmp;
    throw JsonDecodingException_0(position, message + ' at path: ' + this.uz_1.z11() + hintMessage, this.g16());
  };
  AbstractJsonLexer.prototype.n11 = function (message, position, hint, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      position = this.tz_1;
    if (!(($mask0 & 4) === 0))
      hint = '';
    return this.o16(message, position, hint);
  };
  AbstractJsonLexer.prototype.g14 = function () {
    var current = this.p16();
    current = this.h16(current);
    if (current >= charSequenceLength(this.g16()) ? true : current === -1) {
      this.n11('EOF', 0, null, 6, null);
    }
    var tmp;
    if (equals(new Char(charSequenceGet(this.g16(), current)), new Char(_Char___init__impl__6a9atx(34)))) {
      current = current + 1 | 0;
      if (current === charSequenceLength(this.g16())) {
        this.n11('EOF', 0, null, 6, null);
      }
      tmp = true;
    } else {
      tmp = false;
    }
    var hasQuotation = tmp;
    var accumulator = new Long(0, 0);
    var isNegative = false;
    var start = current;
    var hasChars = true;
    $l$loop_0: while (hasChars) {
      var ch = charSequenceGet(this.g16(), current);
      if (equals(new Char(ch), new Char(_Char___init__impl__6a9atx(45)))) {
        if (!(current === start)) {
          this.n11("Unexpected symbol '-' in numeric literal", 0, null, 6, null);
        }
        isNegative = true;
        current = current + 1 | 0;
        continue $l$loop_0;
      }
      var token = charToTokenClass(ch);
      if (!(token === 0))
        break $l$loop_0;
      current = current + 1 | 0;
      hasChars = !(current === charSequenceLength(this.g16()));
      var digit = Char__minus_impl_a2frrh(ch, _Char___init__impl__6a9atx(48));
      if (!(0 <= digit ? digit <= 9 : false)) {
        var tmp_0 = "Unexpected symbol '" + new Char(ch) + "' in numeric literal";
        this.n11(tmp_0, 0, null, 6, null);
      }
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_times = accumulator;
          tmp$ret$0 = tmp0_times.ja(new Long(10, 0));
        }
        var tmp1_minus = tmp$ret$0;
        tmp$ret$1 = tmp1_minus.la(toLong_0(digit));
      }
      accumulator = tmp$ret$1;
      if (accumulator.m1(new Long(0, 0)) > 0) {
        this.n11('Numeric value overflow', 0, null, 6, null);
      }
    }
    if (start === current ? true : isNegative ? start === (current - 1 | 0) : false) {
      this.n11('Expected numeric literal', 0, null, 6, null);
    }
    if (hasQuotation) {
      if (!hasChars) {
        this.n11('EOF', 0, null, 6, null);
      }
      if (!equals(new Char(charSequenceGet(this.g16(), current)), new Char(_Char___init__impl__6a9atx(34)))) {
        this.n11('Expected closing quotation mark', 0, null, 6, null);
      }
      current = current + 1 | 0;
    }
    this.tz_1 = current;
    var tmp_1;
    if (isNegative) {
      tmp_1 = accumulator;
    } else {
      var tmp_2 = accumulator;
      Companion_getInstance_0();
      if (!tmp_2.equals(new Long(0, -2147483648))) {
        tmp_1 = accumulator.ha();
      } else {
        this.n11('Numeric value overflow', 0, null, 6, null);
      }
    }
    return tmp_1;
  };
  AbstractJsonLexer.prototype.e14 = function () {
    return consumeBoolean(this, this.p16());
  };
  AbstractJsonLexer.prototype.f14 = function () {
    var current = this.p16();
    if (current === charSequenceLength(this.g16())) {
      this.n11('EOF', 0, null, 6, null);
    }
    var tmp;
    if (equals(new Char(charSequenceGet(this.g16(), current)), new Char(_Char___init__impl__6a9atx(34)))) {
      current = current + 1 | 0;
      tmp = true;
    } else {
      tmp = false;
    }
    var hasQuotation = tmp;
    var result = consumeBoolean(this, current);
    if (hasQuotation) {
      if (this.tz_1 === charSequenceLength(this.g16())) {
        this.n11('EOF', 0, null, 6, null);
      }
      if (!equals(new Char(charSequenceGet(this.g16(), this.tz_1)), new Char(_Char___init__impl__6a9atx(34)))) {
        this.n11('Expected closing quotation mark', 0, null, 6, null);
      }
      var tmp0_this = this;
      tmp0_this.tz_1 = tmp0_this.tz_1 + 1 | 0;
    }
    return result;
  };
  AbstractJsonLexer.$metadata$ = classMeta('AbstractJsonLexer');
  function charToTokenClass(c) {
    var tmp;
    var tmp$ret$0;
    {
      tmp$ret$0 = Char__toInt_impl_vasixd(c);
    }
    if (tmp$ret$0 < 126) {
      var tmp_0 = CharMappings_getInstance().t16_1;
      var tmp$ret$1;
      {
        tmp$ret$1 = Char__toInt_impl_vasixd(c);
      }
      tmp = tmp_0[tmp$ret$1];
    } else {
      tmp = 0;
    }
    return tmp;
  }
  function get_TC_WHITESPACE() {
    return TC_WHITESPACE;
  }
  var TC_WHITESPACE;
  function get_TC_EOF() {
    return TC_EOF;
  }
  var TC_EOF;
  function get_TC_STRING() {
    return TC_STRING;
  }
  var TC_STRING;
  function get_STRING_ESC() {
    return STRING_ESC;
  }
  var STRING_ESC;
  function get_TC_BEGIN_OBJ() {
    return TC_BEGIN_OBJ;
  }
  var TC_BEGIN_OBJ;
  function get_TC_COLON() {
    return TC_COLON;
  }
  var TC_COLON;
  function get_TC_COMMA() {
    return TC_COMMA;
  }
  var TC_COMMA;
  function get_COLON() {
    return COLON;
  }
  var COLON;
  function get_BEGIN_OBJ() {
    return BEGIN_OBJ;
  }
  var BEGIN_OBJ;
  function get_END_OBJ() {
    return END_OBJ;
  }
  var END_OBJ;
  function get_BEGIN_LIST() {
    return BEGIN_LIST;
  }
  var BEGIN_LIST;
  function get_END_LIST() {
    return END_LIST;
  }
  var END_LIST;
  function get_lenientHint() {
    return lenientHint;
  }
  var lenientHint;
  function get_NULL() {
    return NULL;
  }
  var NULL;
  function get_TC_END_OBJ() {
    return TC_END_OBJ;
  }
  var TC_END_OBJ;
  function get_TC_BEGIN_LIST() {
    return TC_BEGIN_LIST;
  }
  var TC_BEGIN_LIST;
  function get_TC_END_LIST() {
    return TC_END_LIST;
  }
  var TC_END_LIST;
  function get_TC_OTHER() {
    return TC_OTHER;
  }
  var TC_OTHER;
  function escapeToChar(c) {
    return c < 117 ? CharMappings_getInstance().s16_1[c] : _Char___init__impl__6a9atx(0);
  }
  function get_ignoreUnknownKeysHint() {
    return ignoreUnknownKeysHint;
  }
  var ignoreUnknownKeysHint;
  function initEscape($this) {
    var inductionVariable = 0;
    if (inductionVariable <= 31)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        initC2ESC($this, i, _Char___init__impl__6a9atx(117));
      }
       while (inductionVariable <= 31);
    initC2ESC($this, 8, _Char___init__impl__6a9atx(98));
    initC2ESC($this, 9, _Char___init__impl__6a9atx(116));
    initC2ESC($this, 10, _Char___init__impl__6a9atx(110));
    initC2ESC($this, 12, _Char___init__impl__6a9atx(102));
    initC2ESC($this, 13, _Char___init__impl__6a9atx(114));
    initC2ESC_0($this, _Char___init__impl__6a9atx(47), _Char___init__impl__6a9atx(47));
    initC2ESC_0($this, _Char___init__impl__6a9atx(34), _Char___init__impl__6a9atx(34));
    initC2ESC_0($this, _Char___init__impl__6a9atx(92), _Char___init__impl__6a9atx(92));
  }
  function initCharToToken($this) {
    var inductionVariable = 0;
    if (inductionVariable <= 32)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        initC2TC($this, i, 127);
      }
       while (inductionVariable <= 32);
    initC2TC($this, 9, 3);
    initC2TC($this, 10, 3);
    initC2TC($this, 13, 3);
    initC2TC($this, 32, 3);
    initC2TC_0($this, _Char___init__impl__6a9atx(44), 4);
    initC2TC_0($this, _Char___init__impl__6a9atx(58), 5);
    initC2TC_0($this, _Char___init__impl__6a9atx(123), 6);
    initC2TC_0($this, _Char___init__impl__6a9atx(125), 7);
    initC2TC_0($this, _Char___init__impl__6a9atx(91), 8);
    initC2TC_0($this, _Char___init__impl__6a9atx(93), 9);
    initC2TC_0($this, _Char___init__impl__6a9atx(34), 1);
    initC2TC_0($this, _Char___init__impl__6a9atx(92), 2);
  }
  function initC2ESC($this, c, esc) {
    if (!equals(new Char(esc), new Char(_Char___init__impl__6a9atx(117)))) {
      var tmp$ret$0;
      {
        tmp$ret$0 = Char__toInt_impl_vasixd(esc);
      }
      $this.s16_1[tmp$ret$0] = numberToChar(c);
    }
  }
  function initC2ESC_0($this, c, esc) {
    var tmp$ret$0;
    {
      tmp$ret$0 = Char__toInt_impl_vasixd(c);
    }
    return initC2ESC($this, tmp$ret$0, esc);
  }
  function initC2TC($this, c, cl) {
    $this.t16_1[c] = cl;
  }
  function initC2TC_0($this, c, cl) {
    var tmp$ret$0;
    {
      tmp$ret$0 = Char__toInt_impl_vasixd(c);
    }
    return initC2TC($this, tmp$ret$0, cl);
  }
  function CharMappings() {
    CharMappings_instance = this;
    this.s16_1 = charArray(117);
    this.t16_1 = new Int8Array(126);
    initEscape(this);
    initCharToToken(this);
  }
  CharMappings.$metadata$ = objectMeta('CharMappings');
  var CharMappings_instance;
  function CharMappings_getInstance() {
    if (CharMappings_instance == null)
      new CharMappings();
    return CharMappings_instance;
  }
  function get_specialFlowingValuesHint() {
    return specialFlowingValuesHint;
  }
  var specialFlowingValuesHint;
  function get_allowStructuredMapKeysHint() {
    return allowStructuredMapKeysHint;
  }
  var allowStructuredMapKeysHint;
  function StringJsonLexer(source) {
    AbstractJsonLexer.call(this);
    this.y16_1 = source;
  }
  StringJsonLexer.prototype.g16 = function () {
    return this.y16_1;
  };
  StringJsonLexer.prototype.h16 = function (position) {
    return position < this.y16_1.length ? position : -1;
  };
  StringJsonLexer.prototype.j12 = function () {
    var source = this.y16_1;
    $l$loop: while (!(this.k16() === -1) ? this.k16() < source.length : false) {
      var tmp0_this = this;
      var tmp1 = tmp0_this.k16();
      tmp0_this.j16(tmp1 + 1 | 0);
      var ch = charSequenceGet(source, tmp1);
      var tc = charToTokenClass(ch);
      var tmp;
      if (tc === get_TC_WHITESPACE()) {
        continue $l$loop;
      } else {
        tmp = tc;
      }
      return tmp;
    }
    return get_TC_EOF();
  };
  StringJsonLexer.prototype.r13 = function () {
    var current = this.p16();
    if (current === this.y16_1.length ? true : current === -1)
      return false;
    if (equals(new Char(charSequenceGet(this.y16_1, current)), new Char(_Char___init__impl__6a9atx(44)))) {
      var tmp0_this = this;
      tmp0_this.j16(tmp0_this.k16() + 1 | 0);
      tmp0_this.k16();
      return true;
    }
    return false;
  };
  StringJsonLexer.prototype.f12 = function () {
    var current = this.k16();
    if (current === -1)
      return false;
    $l$loop: while (current < this.y16_1.length) {
      var c = charSequenceGet(this.y16_1, current);
      if (((equals(new Char(c), new Char(_Char___init__impl__6a9atx(32))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(10)))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(13)))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(9)))) {
        current = current + 1 | 0;
        continue $l$loop;
      }
      this.j16(current);
      return this.l16(c);
    }
    this.j16(current);
    return false;
  };
  StringJsonLexer.prototype.p16 = function () {
    var current = this.k16();
    if (current === -1)
      return current;
    $l$loop: while (current < this.y16_1.length) {
      var c = charSequenceGet(this.y16_1, current);
      if (((equals(new Char(c), new Char(_Char___init__impl__6a9atx(32))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(10)))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(13)))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(9)))) {
        current = current + 1 | 0;
      } else {
        break $l$loop;
      }
    }
    this.j16(current);
    return current;
  };
  StringJsonLexer.prototype.q13 = function (expected) {
    if (this.k16() === -1)
      this.n16(expected);
    var source = this.y16_1;
    $l$loop: while (this.k16() < source.length) {
      var tmp0_this = this;
      var tmp1 = tmp0_this.k16();
      tmp0_this.j16(tmp1 + 1 | 0);
      var c = charSequenceGet(source, tmp1);
      if (((equals(new Char(c), new Char(_Char___init__impl__6a9atx(32))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(10)))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(13)))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(9))))
        continue $l$loop;
      if (equals(new Char(c), new Char(expected)))
        return Unit_getInstance();
      this.n16(expected);
    }
    this.n16(expected);
  };
  StringJsonLexer.prototype.w13 = function () {
    this.q13(get_STRING());
    var current = this.k16();
    var tmp = _Char___init__impl__6a9atx(34);
    var closingQuote = indexOf$default(this.y16_1, tmp, current, false, 4, null);
    if (closingQuote === -1) {
      this.m16(get_TC_STRING());
    }
    var inductionVariable = current;
    if (inductionVariable < closingQuote)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (equals(new Char(charSequenceGet(this.y16_1, i)), new Char(get_STRING_ESC()))) {
          return this.consumeString2(this.y16_1, this.k16(), i);
        }
      }
       while (inductionVariable < closingQuote);
    this.j16(closingQuote + 1 | 0);
    var tmp$ret$1;
    {
      var tmp0_substring = this.y16_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_substring;
      }
      tmp$ret$1 = tmp$ret$0.substring(current, closingQuote);
    }
    return tmp$ret$1;
  };
  StringJsonLexer.prototype.z13 = function (keyToMatch, isLenient) {
    var positionSnapshot = this.k16();
    try {
      if (!(this.j12() === get_TC_BEGIN_OBJ()))
        return null;
      var firstKey = isLenient ? this.w13() : this.x13();
      if (firstKey === keyToMatch) {
        if (!(this.j12() === get_TC_COLON()))
          return null;
        var result = isLenient ? this.g12() : this.x13();
        return result;
      }
      return null;
    }finally {
      this.j16(positionSnapshot);
    }
  };
  StringJsonLexer.$metadata$ = classMeta('StringJsonLexer', undefined, undefined, undefined, undefined, AbstractJsonLexer.prototype);
  function get_schemaCache(_this__u8e3s4) {
    return _this__u8e3s4.kz_1;
  }
  function createMapForCache(initialCapacity) {
    return HashMap_init_$Create$(initialCapacity);
  }
  //region block: post-declaration
  defer$1.prototype.eo = get_isNullable;
  defer$1.prototype.lo = get_isInline;
  defer$1.prototype.jo = get_annotations;
  StreamingJsonDecoder.prototype.mq = decodeSerializableElement$default;
  StreamingJsonDecoder.prototype.nq = decodeSequentially;
  StreamingJsonDecoder.prototype.pq = decodeCollectionSize;
  AbstractJsonTreeDecoder.prototype.mq = decodeSerializableElement$default;
  AbstractJsonTreeDecoder.prototype.nq = decodeSequentially;
  AbstractJsonTreeDecoder.prototype.pq = decodeCollectionSize;
  JsonTreeDecoder.prototype.mq = decodeSerializableElement$default;
  JsonTreeDecoder.prototype.nq = decodeSequentially;
  JsonTreeDecoder.prototype.pq = decodeCollectionSize;
  JsonTreeListDecoder.prototype.mq = decodeSerializableElement$default;
  JsonTreeListDecoder.prototype.nq = decodeSequentially;
  JsonTreeListDecoder.prototype.pq = decodeCollectionSize;
  JsonTreeMapDecoder.prototype.mq = decodeSerializableElement$default;
  JsonTreeMapDecoder.prototype.nq = decodeSequentially;
  JsonTreeMapDecoder.prototype.pq = decodeCollectionSize;
  //endregion
  //region block: init
  STRING = _Char___init__impl__6a9atx(34);
  TC_WHITESPACE = 3;
  TC_EOF = 10;
  TC_STRING = 1;
  STRING_ESC = _Char___init__impl__6a9atx(92);
  TC_BEGIN_OBJ = 6;
  TC_COLON = 5;
  TC_COMMA = 4;
  COLON = _Char___init__impl__6a9atx(58);
  BEGIN_OBJ = _Char___init__impl__6a9atx(123);
  END_OBJ = _Char___init__impl__6a9atx(125);
  BEGIN_LIST = _Char___init__impl__6a9atx(91);
  END_LIST = _Char___init__impl__6a9atx(93);
  lenientHint = "Use 'isLenient = true' in 'Json {}` builder to accept non-compliant JSON.";
  NULL = 'null';
  TC_END_OBJ = 7;
  TC_BEGIN_LIST = 8;
  TC_END_LIST = 9;
  TC_OTHER = 0;
  ignoreUnknownKeysHint = "Use 'ignoreUnknownKeys = true' in 'Json {}' builder to ignore unknown keys.";
  specialFlowingValuesHint = "It is possible to deserialize them using 'JsonBuilder.allowSpecialFloatingPointValues = true'";
  allowStructuredMapKeysHint = "Use 'allowStructuredMapKeys = true' in 'Json {}' builder to convert such maps to [key1, value1, key2, value2,...] arrays.";
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = Default_getInstance;
  _.$_$.b = JsonNull_getInstance;
  _.$_$.c = JsonArray;
  _.$_$.d = JsonObject;
  _.$_$.e = JsonPrimitive;
  _.$_$.f = get_int;
  _.$_$.g = get_jsonObject;
  _.$_$.h = get_jsonPrimitive;
  //endregion
  return _;
}));



/***/ }),

/***/ "./kotlin/kotlinx.coroutines-kotlinx-coroutines-core-js-ir.js":
/*!********************************************************************!*\
  !*** ./kotlin/kotlinx.coroutines-kotlinx-coroutines-core-js-ir.js ***!
  \********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
  if (true)
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ./kotlin-kotlin-stdlib-js-ir.js */ "./kotlin/kotlin-kotlin-stdlib-js-ir.js"), __webpack_require__(/*! ./88b0986a7186d029-atomicfu-js-ir.js */ "./kotlin/88b0986a7186d029-atomicfu-js-ir.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
}(this, function (_, kotlin_kotlin, kotlin_org_jetbrains_kotlinx_atomicfu) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var THROW_CCE = kotlin_kotlin.$_$.tc;
  var isObject = kotlin_kotlin.$_$.i9;
  var Unit_getInstance = kotlin_kotlin.$_$.j3;
  var plus = kotlin_kotlin.$_$.y7;
  var get = kotlin_kotlin.$_$.u7;
  var fold = kotlin_kotlin.$_$.t7;
  var minusKey = kotlin_kotlin.$_$.v7;
  var Continuation = kotlin_kotlin.$_$.s7;
  var classMeta = kotlin_kotlin.$_$.o8;
  var EmptyCoroutineContext_getInstance = kotlin_kotlin.$_$.u2;
  var createCoroutineUnintercepted = kotlin_kotlin.$_$.l7;
  var interfaceMeta = kotlin_kotlin.$_$.x8;
  var isInterface = kotlin_kotlin.$_$.g9;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.u1;
  var toString = kotlin_kotlin.$_$.pd;
  var toString_0 = kotlin_kotlin.$_$.u9;
  var atomic$int$1 = kotlin_org_jetbrains_kotlinx_atomicfu.$_$.d;
  var atomic$ref$1 = kotlin_org_jetbrains_kotlinx_atomicfu.$_$.c;
  var get_COROUTINE_SUSPENDED = kotlin_kotlin.$_$.k7;
  var objectMeta = kotlin_kotlin.$_$.q9;
  var hashCode = kotlin_kotlin.$_$.v8;
  var equals = kotlin_kotlin.$_$.q8;
  var CoroutineImpl = kotlin_kotlin.$_$.z7;
  var atomic$boolean$1 = kotlin_org_jetbrains_kotlinx_atomicfu.$_$.a;
  var CancellationException_init_$Create$ = kotlin_kotlin.$_$.f1;
  var Result__exceptionOrNull_impl_p6xea9 = kotlin_kotlin.$_$.l2;
  var _Result___get_value__impl__bjfvqg = kotlin_kotlin.$_$.n2;
  var AbstractCoroutineContextKey = kotlin_kotlin.$_$.o7;
  var Key_getInstance = kotlin_kotlin.$_$.t2;
  var AbstractCoroutineContextElement = kotlin_kotlin.$_$.n7;
  var get_0 = kotlin_kotlin.$_$.p7;
  var minusKey_0 = kotlin_kotlin.$_$.q7;
  var ContinuationInterceptor = kotlin_kotlin.$_$.r7;
  var Key = kotlin_kotlin.$_$.x7;
  var RuntimeException_init_$Create$ = kotlin_kotlin.$_$.b2;
  var Enum = kotlin_kotlin.$_$.ic;
  var startCoroutine = kotlin_kotlin.$_$.c8;
  var noWhenBranchMatchedException = kotlin_kotlin.$_$.md;
  var Long = kotlin_kotlin.$_$.nc;
  var intercepted = kotlin_kotlin.$_$.m7;
  var Companion_getInstance = kotlin_kotlin.$_$.h3;
  var RuntimeException = kotlin_kotlin.$_$.sc;
  var RuntimeException_init_$Init$ = kotlin_kotlin.$_$.a2;
  var captureStack = kotlin_kotlin.$_$.j8;
  var Error_0 = kotlin_kotlin.$_$.jc;
  var Error_init_$Init$ = kotlin_kotlin.$_$.l1;
  var Element = kotlin_kotlin.$_$.w7;
  var StringBuilder_init_$Create$ = kotlin_kotlin.$_$.i1;
  var anyToString = kotlin_kotlin.$_$.g8;
  var throwUninitializedPropertyAccessException = kotlin_kotlin.$_$.od;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.r;
  var CancellationException = kotlin_kotlin.$_$.j7;
  var ArrayList = kotlin_kotlin.$_$.k3;
  var IllegalStateException_init_$Create$_0 = kotlin_kotlin.$_$.v1;
  var Companion_getInstance_0 = kotlin_kotlin.$_$.i3;
  var _Result___init__impl__xyqfz8 = kotlin_kotlin.$_$.k2;
  var createFailure = kotlin_kotlin.$_$.cd;
  var UnsupportedOperationException = kotlin_kotlin.$_$.yc;
  var UnsupportedOperationException_init_$Create$ = kotlin_kotlin.$_$.d2;
  var isSuspendFunction = kotlin_kotlin.$_$.k9;
  var addSuppressed = kotlin_kotlin.$_$.zc;
  var fillArrayVal = kotlin_kotlin.$_$.r8;
  var fill = kotlin_kotlin.$_$.j5;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.p1;
  var fill$default = kotlin_kotlin.$_$.g;
  var ensureNotNull = kotlin_kotlin.$_$.dd;
  var NoSuchElementException = kotlin_kotlin.$_$.oc;
  var NoSuchElementException_init_$Init$ = kotlin_kotlin.$_$.y1;
  var IllegalStateException = kotlin_kotlin.$_$.mc;
  var IllegalStateException_init_$Init$ = kotlin_kotlin.$_$.t1;
  var arrayCopy = kotlin_kotlin.$_$.d4;
  var toLong = kotlin_kotlin.$_$.s9;
  var toLongOrNull = kotlin_kotlin.$_$.wb;
  var atomic$long$1 = kotlin_org_jetbrains_kotlinx_atomicfu.$_$.b;
  var _Result___get_isFailure__impl__jpiriv = kotlin_kotlin.$_$.m2;
  var getKClassFromExpression = kotlin_kotlin.$_$.c;
  var CancellationException_init_$Init$ = kotlin_kotlin.$_$.g1;
  var getStringHashCode = kotlin_kotlin.$_$.u8;
  var coerceIn = kotlin_kotlin.$_$.ea;
  var HashSet_init_$Create$ = kotlin_kotlin.$_$.x;
  var UnsupportedOperationException_init_$Create$_0 = kotlin_kotlin.$_$.c2;
  //endregion
  //region block: pre-declaration
  function cancel$default(cause, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      cause = null;
    return $handler == null ? this.u18(cause) : $handler(cause);
  }
  function invokeOnCompletion$default(onCancelling, invokeImmediately, handler, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      onCancelling = false;
    if (!(($mask0 & 2) === 0))
      invokeImmediately = true;
    return $handler == null ? this.q18(onCancelling, invokeImmediately, handler) : $handler(onCancelling, invokeImmediately, handler);
  }
  AbstractCoroutine.prototype = Object.create(JobSupport.prototype);
  AbstractCoroutine.prototype.constructor = AbstractCoroutine;
  StandaloneCoroutine.prototype = Object.create(AbstractCoroutine.prototype);
  StandaloneCoroutine.prototype.constructor = StandaloneCoroutine;
  LazyStandaloneCoroutine.prototype = Object.create(StandaloneCoroutine.prototype);
  LazyStandaloneCoroutine.prototype.constructor = LazyStandaloneCoroutine;
  DeferredCoroutine.prototype = Object.create(AbstractCoroutine.prototype);
  DeferredCoroutine.prototype.constructor = DeferredCoroutine;
  LazyDeferredCoroutine.prototype = Object.create(DeferredCoroutine.prototype);
  LazyDeferredCoroutine.prototype.constructor = LazyDeferredCoroutine;
  function tryResume$default(value, idempotent, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      idempotent = null;
    return $handler == null ? this.d1a(value, idempotent) : $handler(value, idempotent);
  }
  CancelHandler.prototype = Object.create(CancelHandlerBase.prototype);
  CancelHandler.prototype.constructor = CancelHandler;
  DisposeOnCancel.prototype = Object.create(CancelHandler.prototype);
  DisposeOnCancel.prototype.constructor = DisposeOnCancel;
  BeforeResumeCancelHandler.prototype = Object.create(CancelHandler.prototype);
  BeforeResumeCancelHandler.prototype.constructor = BeforeResumeCancelHandler;
  RemoveOnCancel.prototype = Object.create(BeforeResumeCancelHandler.prototype);
  RemoveOnCancel.prototype.constructor = RemoveOnCancel;
  DispatchedTask.prototype = Object.create(SchedulerTask.prototype);
  DispatchedTask.prototype.constructor = DispatchedTask;
  CancellableContinuationImpl.prototype = Object.create(DispatchedTask.prototype);
  CancellableContinuationImpl.prototype.constructor = CancellableContinuationImpl;
  InvokeOnCancel.prototype = Object.create(CancelHandler.prototype);
  InvokeOnCancel.prototype.constructor = InvokeOnCancel;
  $awaitCOROUTINE$1.prototype = Object.create(CoroutineImpl.prototype);
  $awaitCOROUTINE$1.prototype.constructor = $awaitCOROUTINE$1;
  CompletableDeferredImpl.prototype = Object.create(JobSupport.prototype);
  CompletableDeferredImpl.prototype.constructor = CompletableDeferredImpl;
  CancelledContinuation.prototype = Object.create(CompletedExceptionally.prototype);
  CancelledContinuation.prototype.constructor = CancelledContinuation;
  Key_0.prototype = Object.create(AbstractCoroutineContextKey.prototype);
  Key_0.prototype.constructor = Key_0;
  CoroutineDispatcher.prototype = Object.create(AbstractCoroutineContextElement.prototype);
  CoroutineDispatcher.prototype.constructor = CoroutineDispatcher;
  CoroutineStart.prototype = Object.create(Enum.prototype);
  CoroutineStart.prototype.constructor = CoroutineStart;
  EventLoop.prototype = Object.create(CoroutineDispatcher.prototype);
  EventLoop.prototype.constructor = EventLoop;
  CompletionHandlerException.prototype = Object.create(RuntimeException.prototype);
  CompletionHandlerException.prototype.constructor = CompletionHandlerException;
  CoroutinesInternalError.prototype = Object.create(Error_0.prototype);
  CoroutinesInternalError.prototype.constructor = CoroutinesInternalError;
  LinkedListHead.prototype = Object.create(LinkedListNode.prototype);
  LinkedListHead.prototype.constructor = LinkedListHead;
  NodeList.prototype = Object.create(LinkedListHead.prototype);
  NodeList.prototype.constructor = NodeList;
  CompletionHandlerBase.prototype = Object.create(LinkedListNode.prototype);
  CompletionHandlerBase.prototype.constructor = CompletionHandlerBase;
  JobNode.prototype = Object.create(CompletionHandlerBase.prototype);
  JobNode.prototype.constructor = JobNode;
  ChildCompletion.prototype = Object.create(JobNode.prototype);
  ChildCompletion.prototype.constructor = ChildCompletion;
  AwaitContinuation.prototype = Object.create(CancellableContinuationImpl.prototype);
  AwaitContinuation.prototype.constructor = AwaitContinuation;
  JobCancellingNode.prototype = Object.create(JobNode.prototype);
  JobCancellingNode.prototype.constructor = JobCancellingNode;
  ChildHandleNode.prototype = Object.create(JobCancellingNode.prototype);
  ChildHandleNode.prototype.constructor = ChildHandleNode;
  InvokeOnCancelling.prototype = Object.create(JobCancellingNode.prototype);
  InvokeOnCancelling.prototype.constructor = InvokeOnCancelling;
  InvokeOnCompletion.prototype = Object.create(JobNode.prototype);
  InvokeOnCompletion.prototype.constructor = InvokeOnCompletion;
  ResumeAwaitOnCompletion.prototype = Object.create(JobNode.prototype);
  ResumeAwaitOnCompletion.prototype.constructor = ResumeAwaitOnCompletion;
  SelectAwaitOnCompletion.prototype = Object.create(JobNode.prototype);
  SelectAwaitOnCompletion.prototype.constructor = SelectAwaitOnCompletion;
  ChildContinuation.prototype = Object.create(JobCancellingNode.prototype);
  ChildContinuation.prototype.constructor = ChildContinuation;
  JobImpl.prototype = Object.create(JobSupport.prototype);
  JobImpl.prototype.constructor = JobImpl;
  MainCoroutineDispatcher.prototype = Object.create(CoroutineDispatcher.prototype);
  MainCoroutineDispatcher.prototype.constructor = MainCoroutineDispatcher;
  TimeoutCancellationException.prototype = Object.create(CancellationException.prototype);
  TimeoutCancellationException.prototype.constructor = TimeoutCancellationException;
  Unconfined.prototype = Object.create(CoroutineDispatcher.prototype);
  Unconfined.prototype.constructor = Unconfined;
  AbstractAtomicDesc.prototype = Object.create(AtomicDesc.prototype);
  AbstractAtomicDesc.prototype.constructor = AbstractAtomicDesc;
  RemoveFirstDesc.prototype = Object.create(AbstractAtomicDesc.prototype);
  RemoveFirstDesc.prototype.constructor = RemoveFirstDesc;
  TryPollDesc.prototype = Object.create(RemoveFirstDesc.prototype);
  TryPollDesc.prototype.constructor = TryPollDesc;
  RemoveReceiveOnCancel.prototype = Object.create(BeforeResumeCancelHandler.prototype);
  RemoveReceiveOnCancel.prototype.constructor = RemoveReceiveOnCancel;
  Receive.prototype = Object.create(LinkedListNode.prototype);
  Receive.prototype.constructor = Receive;
  ReceiveHasNext.prototype = Object.create(Receive.prototype);
  ReceiveHasNext.prototype.constructor = ReceiveHasNext;
  ReceiveSelect.prototype = Object.create(Receive.prototype);
  ReceiveSelect.prototype.constructor = ReceiveSelect;
  AbstractChannel.prototype = Object.create(AbstractSendChannel.prototype);
  AbstractChannel.prototype.constructor = AbstractChannel;
  Send.prototype = Object.create(LinkedListNode.prototype);
  Send.prototype.constructor = Send;
  SendBuffered.prototype = Object.create(Send.prototype);
  SendBuffered.prototype.constructor = SendBuffered;
  Closed.prototype = Object.create(Send.prototype);
  Closed.prototype.constructor = Closed;
  SendElement.prototype = Object.create(Send.prototype);
  SendElement.prototype.constructor = SendElement;
  SendElementWithUndeliveredHandler.prototype = Object.create(SendElement.prototype);
  SendElementWithUndeliveredHandler.prototype.constructor = SendElementWithUndeliveredHandler;
  ArrayChannel.prototype = Object.create(AbstractChannel.prototype);
  ArrayChannel.prototype.constructor = ArrayChannel;
  BufferOverflow.prototype = Object.create(Enum.prototype);
  BufferOverflow.prototype.constructor = BufferOverflow;
  Closed_0.prototype = Object.create(Failed.prototype);
  Closed_0.prototype.constructor = Closed_0;
  ClosedReceiveChannelException.prototype = Object.create(NoSuchElementException.prototype);
  ClosedReceiveChannelException.prototype.constructor = ClosedReceiveChannelException;
  ClosedSendChannelException.prototype = Object.create(IllegalStateException.prototype);
  ClosedSendChannelException.prototype.constructor = ClosedSendChannelException;
  ConflatedChannel.prototype = Object.create(AbstractChannel.prototype);
  ConflatedChannel.prototype.constructor = ConflatedChannel;
  LinkedListChannel.prototype = Object.create(AbstractChannel.prototype);
  LinkedListChannel.prototype.constructor = LinkedListChannel;
  RendezvousChannel.prototype = Object.create(AbstractChannel.prototype);
  RendezvousChannel.prototype.constructor = RendezvousChannel;
  AtomicOp.prototype = Object.create(OpDescriptor.prototype);
  AtomicOp.prototype.constructor = AtomicOp;
  DispatchedContinuation.prototype = Object.create(DispatchedTask.prototype);
  DispatchedContinuation.prototype.constructor = DispatchedContinuation;
  UndeliveredElementException.prototype = Object.create(RuntimeException.prototype);
  UndeliveredElementException.prototype.constructor = UndeliveredElementException;
  SelectOnCancelling.prototype = Object.create(JobCancellingNode.prototype);
  SelectOnCancelling.prototype.constructor = SelectOnCancelling;
  PairSelectOp.prototype = Object.create(OpDescriptor.prototype);
  PairSelectOp.prototype.constructor = PairSelectOp;
  AtomicSelectOp.prototype = Object.create(AtomicOp.prototype);
  AtomicSelectOp.prototype.constructor = AtomicSelectOp;
  DisposeNode.prototype = Object.create(LinkedListNode.prototype);
  DisposeNode.prototype.constructor = DisposeNode;
  SelectBuilderImpl.prototype = Object.create(LinkedListHead.prototype);
  SelectBuilderImpl.prototype.constructor = SelectBuilderImpl;
  JsMainDispatcher.prototype = Object.create(MainCoroutineDispatcher.prototype);
  JsMainDispatcher.prototype.constructor = JsMainDispatcher;
  UnconfinedEventLoop.prototype = Object.create(EventLoop.prototype);
  UnconfinedEventLoop.prototype.constructor = UnconfinedEventLoop;
  JobCancellationException.prototype = Object.create(CancellationException.prototype);
  JobCancellationException.prototype.constructor = JobCancellationException;
  SetTimeoutBasedDispatcher.prototype = Object.create(CoroutineDispatcher.prototype);
  SetTimeoutBasedDispatcher.prototype.constructor = SetTimeoutBasedDispatcher;
  NodeDispatcher.prototype = Object.create(SetTimeoutBasedDispatcher.prototype);
  NodeDispatcher.prototype.constructor = NodeDispatcher;
  SetTimeoutDispatcher.prototype = Object.create(SetTimeoutBasedDispatcher.prototype);
  SetTimeoutDispatcher.prototype.constructor = SetTimeoutDispatcher;
  MessageQueue.prototype = Object.create(ArrayQueue.prototype);
  MessageQueue.prototype.constructor = MessageQueue;
  ScheduledMessageQueue.prototype = Object.create(MessageQueue.prototype);
  ScheduledMessageQueue.prototype.constructor = ScheduledMessageQueue;
  ClearTimeout.prototype = Object.create(CancelHandler.prototype);
  ClearTimeout.prototype.constructor = ClearTimeout;
  WindowDispatcher.prototype = Object.create(CoroutineDispatcher.prototype);
  WindowDispatcher.prototype.constructor = WindowDispatcher;
  WindowMessageQueue.prototype = Object.create(MessageQueue.prototype);
  WindowMessageQueue.prototype.constructor = WindowMessageQueue;
  PrepareOp.prototype = Object.create(OpDescriptor.prototype);
  PrepareOp.prototype.constructor = PrepareOp;
  //endregion
  function AbstractCoroutine(parentContext, initParentJob, active) {
    JobSupport.call(this, active);
    if (initParentJob)
      this.k17(parentContext.f8(Key_getInstance_2()));
    this.n17_1 = parentContext.m8(this);
  }
  AbstractCoroutine.prototype.s4 = function () {
    return this.n17_1;
  };
  AbstractCoroutine.prototype.o17 = function () {
    return this.n17_1;
  };
  AbstractCoroutine.prototype.p17 = function () {
    return JobSupport.prototype.p17.call(this);
  };
  AbstractCoroutine.prototype.q17 = function (value) {
  };
  AbstractCoroutine.prototype.r17 = function (cause, handled) {
  };
  AbstractCoroutine.prototype.s17 = function () {
    return get_classSimpleName(this) + ' was cancelled';
  };
  AbstractCoroutine.prototype.t17 = function (state) {
    if (state instanceof CompletedExceptionally)
      this.r17(state.u17_1, state.w17());
    else {
      this.q17((state == null ? true : isObject(state)) ? state : THROW_CCE());
    }
  };
  AbstractCoroutine.prototype.q4 = function (result) {
    var state = this.x17(toState$default(result, null, 1, null));
    if (state === get_COMPLETING_WAITING_CHILDREN())
      return Unit_getInstance();
    this.y17(state);
  };
  AbstractCoroutine.prototype.y17 = function (state) {
    return this.z17(state);
  };
  AbstractCoroutine.prototype.a18 = function (exception) {
    handleCoroutineException(this.n17_1, exception);
  };
  AbstractCoroutine.prototype.b18 = function () {
    var tmp0_elvis_lhs = get_coroutineName(this.n17_1);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return JobSupport.prototype.b18.call(this);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var coroutineName = tmp;
    return '"' + coroutineName + '":' + JobSupport.prototype.b18.call(this);
  };
  AbstractCoroutine.prototype.c18 = function (start, receiver, block) {
    start.f18(block, receiver, this);
  };
  AbstractCoroutine.$metadata$ = classMeta('AbstractCoroutine', [Job, Continuation, CoroutineScope], undefined, undefined, undefined, JobSupport.prototype);
  function launch(_this__u8e3s4, context, start, block) {
    var newContext = newCoroutineContext(_this__u8e3s4, context);
    var coroutine = start.j19() ? new LazyStandaloneCoroutine(newContext, block) : new StandaloneCoroutine(newContext, true);
    coroutine.c18(start, coroutine, block);
    return coroutine;
  }
  function launch$default(_this__u8e3s4, context, start, block, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      context = EmptyCoroutineContext_getInstance();
    if (!(($mask0 & 2) === 0))
      start = CoroutineStart_DEFAULT_getInstance();
    return launch(_this__u8e3s4, context, start, block);
  }
  function async(_this__u8e3s4, context, start, block) {
    var newContext = newCoroutineContext(_this__u8e3s4, context);
    var coroutine = start.j19() ? new LazyDeferredCoroutine(newContext, block) : new DeferredCoroutine(newContext, true);
    coroutine.c18(start, coroutine, block);
    return coroutine;
  }
  function async$default(_this__u8e3s4, context, start, block, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      context = EmptyCoroutineContext_getInstance();
    if (!(($mask0 & 2) === 0))
      start = CoroutineStart_DEFAULT_getInstance();
    return async(_this__u8e3s4, context, start, block);
  }
  function StandaloneCoroutine(parentContext, active) {
    AbstractCoroutine.call(this, parentContext, true, active);
  }
  StandaloneCoroutine.prototype.g19 = function (exception) {
    handleCoroutineException(this.s4(), exception);
    return true;
  };
  StandaloneCoroutine.$metadata$ = classMeta('StandaloneCoroutine', undefined, undefined, undefined, undefined, AbstractCoroutine.prototype);
  function LazyStandaloneCoroutine(parentContext, block) {
    StandaloneCoroutine.call(this, parentContext, false);
    this.q19_1 = createCoroutineUnintercepted(block, this, this);
  }
  LazyStandaloneCoroutine.prototype.l18 = function () {
    startCoroutineCancellable_0(this.q19_1, this);
  };
  LazyStandaloneCoroutine.$metadata$ = classMeta('LazyStandaloneCoroutine', undefined, undefined, undefined, undefined, StandaloneCoroutine.prototype);
  function DeferredCoroutine(parentContext, active) {
    AbstractCoroutine.call(this, parentContext, true, active);
  }
  DeferredCoroutine.prototype.u19 = function () {
    var tmp = this.v19();
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  DeferredCoroutine.prototype.w19 = function (select, block) {
    return this.x19(select, block);
  };
  DeferredCoroutine.prototype.y19 = function (select, block) {
    return this.w19(select, block);
  };
  DeferredCoroutine.$metadata$ = classMeta('DeferredCoroutine', [Deferred, SelectClause1], undefined, undefined, undefined, AbstractCoroutine.prototype);
  function LazyDeferredCoroutine(parentContext, block) {
    DeferredCoroutine.call(this, parentContext, false);
    this.c1a_1 = createCoroutineUnintercepted(block, this, this);
  }
  LazyDeferredCoroutine.prototype.l18 = function () {
    startCoroutineCancellable_0(this.c1a_1, this);
  };
  LazyDeferredCoroutine.$metadata$ = classMeta('LazyDeferredCoroutine', undefined, undefined, undefined, undefined, DeferredCoroutine.prototype);
  function CancellableContinuation() {
  }
  CancellableContinuation.$metadata$ = interfaceMeta('CancellableContinuation', [Continuation]);
  function disposeOnCancellation(_this__u8e3s4, handle) {
    var tmp$ret$1;
    {
      var tmp0__get_asHandler__gq3rkj = new DisposeOnCancel(handle);
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0__get_asHandler__gq3rkj;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return _this__u8e3s4.i1a(tmp$ret$1);
  }
  function DisposeOnCancel(handle) {
    CancelHandler.call(this);
    this.l1a_1 = handle;
  }
  DisposeOnCancel.prototype.m1a = function (cause) {
    return this.l1a_1.n1a();
  };
  DisposeOnCancel.prototype.invoke = function (cause) {
    return this.m1a(cause);
  };
  DisposeOnCancel.prototype.toString = function () {
    return 'DisposeOnCancel[' + this.l1a_1 + ']';
  };
  DisposeOnCancel.$metadata$ = classMeta('DisposeOnCancel', undefined, undefined, undefined, undefined, CancelHandler.prototype);
  function removeOnCancellation(_this__u8e3s4, node) {
    var tmp$ret$1;
    {
      var tmp0__get_asHandler__gq3rkj = new RemoveOnCancel(node);
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0__get_asHandler__gq3rkj;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return _this__u8e3s4.i1a(tmp$ret$1);
  }
  function getOrCreateCancellableContinuation(delegate) {
    if (!(delegate instanceof DispatchedContinuation)) {
      return new CancellableContinuationImpl(delegate, get_MODE_CANCELLABLE());
    }
    var tmp0_safe_receiver = delegate.u1a();
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp_0;
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_safe_receiver.b1b();
        }
        if (tmp$ret$0) {
          tmp_0 = tmp0_safe_receiver;
        } else {
          tmp_0 = null;
        }
        tmp$ret$1 = tmp_0;
      }
      tmp = tmp$ret$1;
    }
    var tmp1_elvis_lhs = tmp;
    var tmp_1;
    if (tmp1_elvis_lhs == null) {
      return new CancellableContinuationImpl(delegate, get_MODE_CANCELLABLE_REUSABLE());
    } else {
      tmp_1 = tmp1_elvis_lhs;
    }
    return tmp_1;
  }
  function RemoveOnCancel(node) {
    BeforeResumeCancelHandler.call(this);
    this.c1b_1 = node;
  }
  RemoveOnCancel.prototype.m1a = function (cause) {
    this.c1b_1.g1b();
  };
  RemoveOnCancel.prototype.invoke = function (cause) {
    return this.m1a(cause);
  };
  RemoveOnCancel.prototype.toString = function () {
    return 'RemoveOnCancel[' + this.c1b_1 + ']';
  };
  RemoveOnCancel.$metadata$ = classMeta('RemoveOnCancel', undefined, undefined, undefined, undefined, BeforeResumeCancelHandler.prototype);
  function get_RESUME_TOKEN() {
    init_properties_CancellableContinuationImpl_kt_jcze1b();
    return RESUME_TOKEN;
  }
  var RESUME_TOKEN;
  function _get_stateDebugRepresentation__bf18u4($this) {
    var tmp0_subject = $this.i18();
    var tmp;
    if (!(tmp0_subject == null) ? isInterface(tmp0_subject, NotCompleted) : false) {
      tmp = 'Active';
    } else {
      if (tmp0_subject instanceof CancelledContinuation) {
        tmp = 'Cancelled';
      } else {
        tmp = 'Completed';
      }
    }
    return tmp;
  }
  function isReusable($this) {
    var tmp;
    if (get_isReusableMode($this.j1b())) {
      var tmp_0 = $this.w1a_1;
      tmp = (tmp_0 instanceof DispatchedContinuation ? tmp_0 : THROW_CCE()).h1b();
    } else {
      tmp = false;
    }
    return tmp;
  }
  function cancelLater($this, cause) {
    if (!isReusable($this))
      return false;
    var tmp = $this.w1a_1;
    var dispatched = tmp instanceof DispatchedContinuation ? tmp : THROW_CCE();
    return dispatched.k1b(cause);
  }
  function callCancelHandler($this, handler, cause) {
    var tmp;
    try {
      tmp = invokeIt(handler, cause);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        tmp_0 = handleCoroutineException($this.s4(), new CompletionHandlerException('Exception in invokeOnCancellation handler for ' + $this, $p));
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function trySuspend($this) {
    {
      var tmp0_loop = $this.y1a_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.a17_1;
          var tmp0_subject = tmp1__anonymous__uwfjfc;
          switch (tmp0_subject) {
            case 0:
              if ($this.y1a_1.atomicfu$compareAndSet(0, 1))
                return true;
              break;
            case 2:
              return false;
            default:
              throw IllegalStateException_init_$Create$('Already suspended');
          }
        }
      }
    }
  }
  function tryResume($this) {
    {
      var tmp0_loop = $this.y1a_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.a17_1;
          var tmp0_subject = tmp1__anonymous__uwfjfc;
          switch (tmp0_subject) {
            case 0:
              if ($this.y1a_1.atomicfu$compareAndSet(0, 2))
                return true;
              break;
            case 1:
              return false;
            default:
              throw IllegalStateException_init_$Create$('Already resumed');
          }
        }
      }
    }
  }
  function installParentHandle($this) {
    var tmp0_elvis_lhs = $this.s4().f8(Key_getInstance_2());
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var parent = tmp;
    var tmp$ret$1;
    {
      var tmp0__get_asHandler__gq3rkj = new ChildContinuation($this);
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0__get_asHandler__gq3rkj;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    var handle = parent.r18(true, false, tmp$ret$1, 2, null);
    $this.a1b_1 = handle;
    return handle;
  }
  function releaseClaimedReusableContinuation($this) {
    var tmp = $this.w1a_1;
    var tmp0_safe_receiver = tmp instanceof DispatchedContinuation ? tmp : null;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.l1b($this);
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      return Unit_getInstance();
    } else {
      tmp_0 = tmp1_elvis_lhs;
    }
    var cancellationCause = tmp_0;
    $this.m1b();
    $this.n1b(cancellationCause);
  }
  function multipleHandlersError($this, handler, state) {
    {
      var tmp0_error = "It's prohibited to register multiple handlers, tried to register " + handler + ', already has ' + toString(state);
      throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
    }
  }
  function makeCancelHandler($this, handler) {
    var tmp;
    if (handler instanceof CancelHandler) {
      tmp = handler;
    } else {
      tmp = new InvokeOnCancel(handler);
    }
    return tmp;
  }
  function dispatchResume($this, mode) {
    if (tryResume($this))
      return Unit_getInstance();
    dispatch($this, mode);
  }
  function resumedState($this, state, proposedUpdate, resumeMode, onCancellation, idempotent) {
    var tmp;
    if (proposedUpdate instanceof CompletedExceptionally) {
      {
      }
      {
      }
      tmp = proposedUpdate;
    } else {
      if (!get_isCancellableMode(resumeMode) ? idempotent == null : false) {
        tmp = proposedUpdate;
      } else {
        var tmp_0;
        var tmp_1;
        if (!(onCancellation == null)) {
          tmp_1 = true;
        } else {
          var tmp_2;
          if (state instanceof CancelHandler) {
            tmp_2 = !(state instanceof BeforeResumeCancelHandler);
          } else {
            tmp_2 = false;
          }
          tmp_1 = tmp_2;
        }
        if (tmp_1) {
          tmp_0 = true;
        } else {
          tmp_0 = !(idempotent == null);
        }
        if (tmp_0) {
          var tmp_3 = state instanceof CancelHandler ? state : null;
          tmp = CompletedContinuation_init_$Create$(proposedUpdate, tmp_3, onCancellation, idempotent, null, 16, null);
        } else {
          tmp = proposedUpdate;
        }
      }
    }
    return tmp;
  }
  function resumeImpl($this, proposedUpdate, resumeMode, onCancellation) {
    {
      var tmp0_loop = $this.z1a_1;
      while (true) {
        var tmp$ret$0;
        $l$block: {
          var tmp1__anonymous__uwfjfc = tmp0_loop.z16_1;
          var tmp0_subject = tmp1__anonymous__uwfjfc;
          if (!(tmp0_subject == null) ? isInterface(tmp0_subject, NotCompleted) : false) {
            var update = resumedState($this, tmp1__anonymous__uwfjfc, proposedUpdate, resumeMode, onCancellation, null);
            if (!$this.z1a_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, update)) {
              tmp$ret$0 = Unit_getInstance();
              break $l$block;
            }
            detachChildIfNonResuable($this);
            dispatchResume($this, resumeMode);
            return Unit_getInstance();
          } else {
            if (tmp0_subject instanceof CancelledContinuation) {
              if (tmp1__anonymous__uwfjfc.s1b()) {
                var tmp1_safe_receiver = onCancellation;
                if (tmp1_safe_receiver == null)
                  null;
                else {
                  var tmp$ret$1;
                  {
                    {
                    }
                    tmp$ret$1 = $this.o1b(tmp1_safe_receiver, tmp1__anonymous__uwfjfc.r1());
                  }
                }
                return Unit_getInstance();
              }
            }
          }
          alreadyResumedError($this, proposedUpdate);
        }
      }
    }
  }
  function resumeImpl$default($this, proposedUpdate, resumeMode, onCancellation, $mask0, $handler) {
    if (!(($mask0 & 8) === 0))
      onCancellation = null;
    return resumeImpl($this, proposedUpdate, resumeMode, onCancellation);
  }
  function tryResumeImpl($this, proposedUpdate, idempotent, onCancellation) {
    {
      var tmp0_loop = $this.z1a_1;
      while (true) {
        var tmp$ret$0;
        $l$block: {
          var tmp1__anonymous__uwfjfc = tmp0_loop.z16_1;
          var tmp0_subject = tmp1__anonymous__uwfjfc;
          if (!(tmp0_subject == null) ? isInterface(tmp0_subject, NotCompleted) : false) {
            var update = resumedState($this, tmp1__anonymous__uwfjfc, proposedUpdate, $this.j1b(), onCancellation, idempotent);
            if (!$this.z1a_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, update)) {
              tmp$ret$0 = Unit_getInstance();
              break $l$block;
            }
            detachChildIfNonResuable($this);
            return get_RESUME_TOKEN();
          } else {
            if (tmp0_subject instanceof CompletedContinuation) {
              var tmp;
              if (!(idempotent == null) ? tmp1__anonymous__uwfjfc.w1b_1 === idempotent : false) {
                {
                }
                tmp = get_RESUME_TOKEN();
              } else {
                tmp = null;
              }
              return tmp;
            } else {
              return null;
            }
          }
        }
      }
    }
  }
  function alreadyResumedError($this, proposedUpdate) {
    {
      var tmp0_error = 'Already resumed, but proposed with update ' + toString(proposedUpdate);
      throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
    }
  }
  function detachChildIfNonResuable($this) {
    if (!isReusable($this))
      $this.m1b();
  }
  function CancellableContinuationImpl(delegate, resumeMode) {
    DispatchedTask.call(this, resumeMode);
    this.w1a_1 = delegate;
    {
    }
    this.x1a_1 = this.w1a_1.s4();
    this.y1a_1 = atomic$int$1(0);
    this.z1a_1 = atomic$ref$1(Active_getInstance());
    this.a1b_1 = null;
  }
  CancellableContinuationImpl.prototype.y1b = function () {
    return this.w1a_1;
  };
  CancellableContinuationImpl.prototype.s4 = function () {
    return this.x1a_1;
  };
  CancellableContinuationImpl.prototype.i18 = function () {
    return this.z1a_1.z16_1;
  };
  CancellableContinuationImpl.prototype.j18 = function () {
    var tmp = this.i18();
    return !(!(tmp == null) ? isInterface(tmp, NotCompleted) : false);
  };
  CancellableContinuationImpl.prototype.z1b = function () {
    var tmp0_elvis_lhs = installParentHandle(this);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return Unit_getInstance();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var handle = tmp;
    if (this.j18()) {
      handle.n1a();
      this.a1b_1 = NonDisposableHandle_getInstance();
    }
  };
  CancellableContinuationImpl.prototype.b1b = function () {
    {
    }
    {
    }
    var state = this.z1a_1.z16_1;
    {
    }
    var tmp;
    if (state instanceof CompletedContinuation) {
      tmp = !(state.w1b_1 == null);
    } else {
      tmp = false;
    }
    if (tmp) {
      this.m1b();
      return false;
    }
    this.y1a_1.a17_1 = 0;
    this.z1a_1.z16_1 = Active_getInstance();
    return true;
  };
  CancellableContinuationImpl.prototype.a1c = function () {
    return this.i18();
  };
  CancellableContinuationImpl.prototype.b1c = function (takenState, cause) {
    var tmp0_loop = this.z1a_1;
    while (true) {
      {
        var tmp1__anonymous__uwfjfc = tmp0_loop.z16_1;
        var tmp0_subject = tmp1__anonymous__uwfjfc;
        if (!(tmp0_subject == null) ? isInterface(tmp0_subject, NotCompleted) : false) {
          throw IllegalStateException_init_$Create$('Not completed');
        } else {
          if (tmp0_subject instanceof CompletedExceptionally)
            return Unit_getInstance();
          else {
            if (tmp0_subject instanceof CompletedContinuation) {
              {
                var tmp0_check = !tmp1__anonymous__uwfjfc.c1c();
                {
                }
                if (!tmp0_check) {
                  var tmp$ret$0;
                  {
                    tmp$ret$0 = 'Must be called at most once';
                  }
                  var message = tmp$ret$0;
                  throw IllegalStateException_init_$Create$(toString_0(message));
                }
              }
              var update = tmp1__anonymous__uwfjfc.d1c(null, null, null, null, cause, 15, null);
              if (this.z1a_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, update)) {
                tmp1__anonymous__uwfjfc.e1c(this, cause);
                return Unit_getInstance();
              }
            } else {
              if (this.z1a_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, CompletedContinuation_init_$Create$(tmp1__anonymous__uwfjfc, null, null, null, cause, 14, null))) {
                return Unit_getInstance();
              }
            }
          }
        }
      }
    }
    return Unit_getInstance();
  };
  CancellableContinuationImpl.prototype.n1b = function (cause) {
    {
      var tmp0_loop = this.z1a_1;
      while (true) {
        var tmp$ret$0;
        $l$block: {
          var tmp1__anonymous__uwfjfc = tmp0_loop.z16_1;
          if (!(!(tmp1__anonymous__uwfjfc == null) ? isInterface(tmp1__anonymous__uwfjfc, NotCompleted) : false))
            return false;
          var update = new CancelledContinuation(this, cause, tmp1__anonymous__uwfjfc instanceof CancelHandler);
          if (!this.z1a_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, update)) {
            tmp$ret$0 = Unit_getInstance();
            break $l$block;
          }
          var tmp0_safe_receiver = tmp1__anonymous__uwfjfc instanceof CancelHandler ? tmp1__anonymous__uwfjfc : null;
          if (tmp0_safe_receiver == null)
            null;
          else {
            var tmp$ret$1;
            {
              {
              }
              tmp$ret$1 = this.f1c(tmp0_safe_receiver, cause);
            }
          }
          detachChildIfNonResuable(this);
          dispatchResume(this, this.j1b());
          return true;
        }
      }
    }
  };
  CancellableContinuationImpl.prototype.g1c = function (cause) {
    if (cancelLater(this, cause))
      return Unit_getInstance();
    this.n1b(cause);
    detachChildIfNonResuable(this);
  };
  CancellableContinuationImpl.prototype.f1c = function (handler, cause) {
    var tmp;
    try {
      tmp = handler.invoke(cause);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        tmp_0 = handleCoroutineException(this.s4(), new CompletionHandlerException('Exception in invokeOnCancellation handler for ' + this, $p));
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  CancellableContinuationImpl.prototype.o1b = function (onCancellation, cause) {
    try {
      onCancellation(cause);
    } catch ($p) {
      if ($p instanceof Error) {
        handleCoroutineException(this.s4(), new CompletionHandlerException('Exception in resume onCancellation handler for ' + this, $p));
      } else {
        throw $p;
      }
    }
  };
  CancellableContinuationImpl.prototype.h1c = function (parent) {
    return parent.m18();
  };
  CancellableContinuationImpl.prototype.i1c = function () {
    var isReusable_0 = isReusable(this);
    if (trySuspend(this)) {
      if (this.a1b_1 == null) {
        installParentHandle(this);
      }
      if (isReusable_0) {
        releaseClaimedReusableContinuation(this);
      }
      return get_COROUTINE_SUSPENDED();
    }
    if (isReusable_0) {
      releaseClaimedReusableContinuation(this);
    }
    var state = this.i18();
    if (state instanceof CompletedExceptionally)
      throw recoverStackTrace(state.u17_1, this);
    if (get_isCancellableMode(this.j1b())) {
      var job = this.s4().f8(Key_getInstance_2());
      if (!(job == null) ? !job.p17() : false) {
        var cause = job.m18();
        this.b1c(state, cause);
        throw recoverStackTrace(cause, this);
      }
    }
    return this.j1c(state);
  };
  CancellableContinuationImpl.prototype.q4 = function (result) {
    var tmp = toState(result, this);
    var tmp_0 = this.j1b();
    return resumeImpl$default(this, tmp, tmp_0, null, 8, null);
  };
  CancellableContinuationImpl.prototype.k1a = function (value, onCancellation) {
    return resumeImpl(this, value, this.j1b(), onCancellation);
  };
  CancellableContinuationImpl.prototype.i1a = function (handler) {
    var cancelHandler = makeCancelHandler(this, handler);
    {
      var tmp0_loop = this.z1a_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.z16_1;
          var tmp0_subject = tmp1__anonymous__uwfjfc;
          if (tmp0_subject instanceof Active) {
            if (this.z1a_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, cancelHandler))
              return Unit_getInstance();
          } else {
            if (tmp0_subject instanceof CancelHandler)
              multipleHandlersError(this, handler, tmp1__anonymous__uwfjfc);
            else {
              if (tmp0_subject instanceof CompletedExceptionally) {
                if (!tmp1__anonymous__uwfjfc.k1c())
                  multipleHandlersError(this, handler, tmp1__anonymous__uwfjfc);
                if (tmp1__anonymous__uwfjfc instanceof CancelledContinuation) {
                  var tmp1_safe_receiver = tmp1__anonymous__uwfjfc instanceof CompletedExceptionally ? tmp1__anonymous__uwfjfc : null;
                  callCancelHandler(this, handler, tmp1_safe_receiver == null ? null : tmp1_safe_receiver.u17_1);
                }
                return Unit_getInstance();
              } else {
                if (tmp0_subject instanceof CompletedContinuation) {
                  if (!(tmp1__anonymous__uwfjfc.u1b_1 == null))
                    multipleHandlersError(this, handler, tmp1__anonymous__uwfjfc);
                  if (cancelHandler instanceof BeforeResumeCancelHandler)
                    return Unit_getInstance();
                  if (tmp1__anonymous__uwfjfc.c1c()) {
                    callCancelHandler(this, handler, tmp1__anonymous__uwfjfc.x1b_1);
                    return Unit_getInstance();
                  }
                  var update = tmp1__anonymous__uwfjfc.d1c(null, cancelHandler, null, null, null, 29, null);
                  if (this.z1a_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, update))
                    return Unit_getInstance();
                } else {
                  if (cancelHandler instanceof BeforeResumeCancelHandler)
                    return Unit_getInstance();
                  var update_0 = CompletedContinuation_init_$Create$(tmp1__anonymous__uwfjfc, cancelHandler, null, null, null, 28, null);
                  if (this.z1a_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, update_0))
                    return Unit_getInstance();
                }
              }
            }
          }
        }
      }
    }
  };
  CancellableContinuationImpl.prototype.m1b = function () {
    var tmp0_elvis_lhs = this.a1b_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return Unit_getInstance();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var handle = tmp;
    handle.n1a();
    this.a1b_1 = NonDisposableHandle_getInstance();
  };
  CancellableContinuationImpl.prototype.d1a = function (value, idempotent) {
    return tryResumeImpl(this, value, idempotent, null);
  };
  CancellableContinuationImpl.prototype.f1a = function (value, idempotent, onCancellation) {
    return tryResumeImpl(this, value, idempotent, onCancellation);
  };
  CancellableContinuationImpl.prototype.g1a = function (exception) {
    return tryResumeImpl(this, CompletedExceptionally_init_$Create$(exception, false, 2, null), null, null);
  };
  CancellableContinuationImpl.prototype.h1a = function (token) {
    {
    }
    dispatchResume(this, this.j1b());
  };
  CancellableContinuationImpl.prototype.j1a = function (_this__u8e3s4, value) {
    var tmp = this.w1a_1;
    var dc = tmp instanceof DispatchedContinuation ? tmp : null;
    var tmp_0;
    var tmp0_safe_receiver = dc;
    if ((tmp0_safe_receiver == null ? null : tmp0_safe_receiver.p1a_1) === _this__u8e3s4) {
      tmp_0 = get_MODE_UNDISPATCHED();
    } else {
      tmp_0 = this.j1b();
    }
    var tmp_1 = tmp_0;
    resumeImpl$default(this, value, tmp_1, null, 8, null);
  };
  CancellableContinuationImpl.prototype.j1c = function (state) {
    var tmp0_subject = state;
    var tmp;
    if (tmp0_subject instanceof CompletedContinuation) {
      var tmp_0 = state.t1b_1;
      tmp = (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
    } else {
      tmp = (state == null ? true : isObject(state)) ? state : THROW_CCE();
    }
    return tmp;
  };
  CancellableContinuationImpl.prototype.l1c = function (state) {
    var tmp0_safe_receiver = DispatchedTask.prototype.l1c.call(this, state);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          tmp$ret$0 = recoverStackTrace(tmp0_safe_receiver, this.w1a_1);
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    return tmp;
  };
  CancellableContinuationImpl.prototype.toString = function () {
    return this.b18() + '(' + toDebugString(this.w1a_1) + '){' + _get_stateDebugRepresentation__bf18u4(this) + '}@' + get_hexAddress(this);
  };
  CancellableContinuationImpl.prototype.b18 = function () {
    return 'CancellableContinuation';
  };
  CancellableContinuationImpl.$metadata$ = classMeta('CancellableContinuationImpl', [CancellableContinuation, CoroutineStackFrame], undefined, undefined, undefined, DispatchedTask.prototype);
  function CancelHandler() {
    CancelHandlerBase.call(this);
  }
  CancelHandler.$metadata$ = classMeta('CancelHandler', [NotCompleted], undefined, undefined, undefined, CancelHandlerBase.prototype);
  function get_UNDECIDED() {
    return UNDECIDED;
  }
  var UNDECIDED;
  function Active() {
    Active_instance = this;
  }
  Active.prototype.toString = function () {
    return 'Active';
  };
  Active.$metadata$ = objectMeta('Active', [NotCompleted]);
  var Active_instance;
  function Active_getInstance() {
    if (Active_instance == null)
      new Active();
    return Active_instance;
  }
  function NotCompleted() {
  }
  NotCompleted.$metadata$ = interfaceMeta('NotCompleted');
  function CompletedContinuation_init_$Init$(result, cancelHandler, onCancellation, idempotentResume, cancelCause, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      cancelHandler = null;
    if (!(($mask0 & 4) === 0))
      onCancellation = null;
    if (!(($mask0 & 8) === 0))
      idempotentResume = null;
    if (!(($mask0 & 16) === 0))
      cancelCause = null;
    CompletedContinuation.call($this, result, cancelHandler, onCancellation, idempotentResume, cancelCause);
    return $this;
  }
  function CompletedContinuation_init_$Create$(result, cancelHandler, onCancellation, idempotentResume, cancelCause, $mask0, $marker) {
    return CompletedContinuation_init_$Init$(result, cancelHandler, onCancellation, idempotentResume, cancelCause, $mask0, $marker, Object.create(CompletedContinuation.prototype));
  }
  function CompletedContinuation(result, cancelHandler, onCancellation, idempotentResume, cancelCause) {
    this.t1b_1 = result;
    this.u1b_1 = cancelHandler;
    this.v1b_1 = onCancellation;
    this.w1b_1 = idempotentResume;
    this.x1b_1 = cancelCause;
  }
  CompletedContinuation.prototype.o1c = function () {
    return this.u1b_1;
  };
  CompletedContinuation.prototype.p1c = function () {
    return this.w1b_1;
  };
  CompletedContinuation.prototype.q1c = function () {
    return this.x1b_1;
  };
  CompletedContinuation.prototype.c1c = function () {
    return !(this.x1b_1 == null);
  };
  CompletedContinuation.prototype.e1c = function (cont, cause) {
    var tmp0_safe_receiver = this.u1b_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        tmp$ret$0 = cont.f1c(tmp0_safe_receiver, cause);
      }
    }
    var tmp1_safe_receiver = this.v1b_1;
    if (tmp1_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      {
        {
        }
        tmp$ret$1 = cont.o1b(tmp1_safe_receiver, cause);
      }
    }
  };
  CompletedContinuation.prototype.r1c = function (result, cancelHandler, onCancellation, idempotentResume, cancelCause) {
    return new CompletedContinuation(result, cancelHandler, onCancellation, idempotentResume, cancelCause);
  };
  CompletedContinuation.prototype.d1c = function (result, cancelHandler, onCancellation, idempotentResume, cancelCause, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      result = this.t1b_1;
    if (!(($mask0 & 2) === 0))
      cancelHandler = this.u1b_1;
    if (!(($mask0 & 4) === 0))
      onCancellation = this.v1b_1;
    if (!(($mask0 & 8) === 0))
      idempotentResume = this.w1b_1;
    if (!(($mask0 & 16) === 0))
      cancelCause = this.x1b_1;
    return this.r1c(result, cancelHandler, onCancellation, idempotentResume, cancelCause);
  };
  CompletedContinuation.prototype.toString = function () {
    return 'CompletedContinuation(result=' + toString(this.t1b_1) + ', cancelHandler=' + this.u1b_1 + ', onCancellation=' + this.v1b_1 + ', idempotentResume=' + toString(this.w1b_1) + ', cancelCause=' + this.x1b_1 + ')';
  };
  CompletedContinuation.prototype.hashCode = function () {
    var result = this.t1b_1 == null ? 0 : hashCode(this.t1b_1);
    result = imul(result, 31) + (this.u1b_1 == null ? 0 : hashCode(this.u1b_1)) | 0;
    result = imul(result, 31) + (this.v1b_1 == null ? 0 : hashCode(this.v1b_1)) | 0;
    result = imul(result, 31) + (this.w1b_1 == null ? 0 : hashCode(this.w1b_1)) | 0;
    result = imul(result, 31) + (this.x1b_1 == null ? 0 : hashCode(this.x1b_1)) | 0;
    return result;
  };
  CompletedContinuation.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CompletedContinuation))
      return false;
    var tmp0_other_with_cast = other instanceof CompletedContinuation ? other : THROW_CCE();
    if (!equals(this.t1b_1, tmp0_other_with_cast.t1b_1))
      return false;
    if (!equals(this.u1b_1, tmp0_other_with_cast.u1b_1))
      return false;
    if (!equals(this.v1b_1, tmp0_other_with_cast.v1b_1))
      return false;
    if (!equals(this.w1b_1, tmp0_other_with_cast.w1b_1))
      return false;
    if (!equals(this.x1b_1, tmp0_other_with_cast.x1b_1))
      return false;
    return true;
  };
  CompletedContinuation.$metadata$ = classMeta('CompletedContinuation');
  function get_SUSPENDED() {
    return SUSPENDED;
  }
  var SUSPENDED;
  function get_RESUMED() {
    return RESUMED;
  }
  var RESUMED;
  function BeforeResumeCancelHandler() {
    CancelHandler.call(this);
  }
  BeforeResumeCancelHandler.$metadata$ = classMeta('BeforeResumeCancelHandler', undefined, undefined, undefined, undefined, CancelHandler.prototype);
  function InvokeOnCancel(handler) {
    CancelHandler.call(this);
    this.s1c_1 = handler;
  }
  InvokeOnCancel.prototype.m1a = function (cause) {
    this.s1c_1(cause);
  };
  InvokeOnCancel.prototype.invoke = function (cause) {
    return this.m1a(cause);
  };
  InvokeOnCancel.prototype.toString = function () {
    return 'InvokeOnCancel[' + get_classSimpleName(this.s1c_1) + '@' + get_hexAddress(this) + ']';
  };
  InvokeOnCancel.$metadata$ = classMeta('InvokeOnCancel', undefined, undefined, undefined, undefined, CancelHandler.prototype);
  var properties_initialized_CancellableContinuationImpl_kt_xtzb03;
  function init_properties_CancellableContinuationImpl_kt_jcze1b() {
    if (properties_initialized_CancellableContinuationImpl_kt_xtzb03) {
    } else {
      properties_initialized_CancellableContinuationImpl_kt_xtzb03 = true;
      RESUME_TOKEN = new Symbol('RESUME_TOKEN');
    }
  }
  function CompletableDeferred() {
  }
  CompletableDeferred.$metadata$ = interfaceMeta('CompletableDeferred', [Deferred]);
  function CompletableDeferred_0(parent) {
    return new CompletableDeferredImpl(parent);
  }
  function CompletableDeferred$default(parent, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      parent = null;
    return CompletableDeferred_0(parent);
  }
  function $awaitCOROUTINE$1(_this__u8e3s4, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.e1d_1 = _this__u8e3s4;
  }
  $awaitCOROUTINE$1.prototype.r7 = function () {
    var suspendResult = this.m7_1;
    $sm: do
      try {
        var tmp = this.k7_1;
        switch (tmp) {
          case 0:
            this.l7_1 = 2;
            this.k7_1 = 1;
            suspendResult = this.e1d_1.f1d(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return (suspendResult == null ? true : isObject(suspendResult)) ? suspendResult : THROW_CCE();
          case 2:
            throw this.n7_1;
        }
      } catch ($p) {
        if (this.l7_1 === 2) {
          throw $p;
        } else {
          this.k7_1 = this.l7_1;
          this.n7_1 = $p;
        }
      }
     while (true);
  };
  $awaitCOROUTINE$1.$metadata$ = classMeta('$awaitCOROUTINE$1', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function CompletableDeferredImpl(parent) {
    JobSupport.call(this, true);
    this.k17(parent);
  }
  CompletableDeferredImpl.prototype.t18 = function () {
    return true;
  };
  CompletableDeferredImpl.prototype.u19 = function () {
    var tmp = this.v19();
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  CompletableDeferredImpl.prototype.v1c = function ($cont) {
    var tmp = new $awaitCOROUTINE$1(this, $cont);
    tmp.m7_1 = Unit_getInstance();
    tmp.n7_1 = null;
    return tmp.r7();
  };
  CompletableDeferredImpl.prototype.w19 = function (select, block) {
    return this.x19(select, block);
  };
  CompletableDeferredImpl.prototype.y19 = function (select, block) {
    return this.w19(select, block);
  };
  CompletableDeferredImpl.prototype.t1c = function (value) {
    return this.i1d(value);
  };
  CompletableDeferredImpl.prototype.u1c = function (exception) {
    return this.i1d(CompletedExceptionally_init_$Create$(exception, false, 2, null));
  };
  CompletableDeferredImpl.$metadata$ = classMeta('CompletableDeferredImpl', [CompletableDeferred, SelectClause1], undefined, undefined, undefined, JobSupport.prototype);
  function CompletableJob() {
  }
  CompletableJob.$metadata$ = interfaceMeta('CompletableJob', [Job]);
  function CompletedExceptionally_init_$Init$(cause, handled, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      handled = false;
    CompletedExceptionally.call($this, cause, handled);
    return $this;
  }
  function CompletedExceptionally_init_$Create$(cause, handled, $mask0, $marker) {
    return CompletedExceptionally_init_$Init$(cause, handled, $mask0, $marker, Object.create(CompletedExceptionally.prototype));
  }
  function CompletedExceptionally(cause, handled) {
    this.u17_1 = cause;
    this.v17_1 = atomic$boolean$1(handled);
  }
  CompletedExceptionally.prototype.r1 = function () {
    return this.u17_1;
  };
  CompletedExceptionally.prototype.w17 = function () {
    return this.v17_1.d17_1;
  };
  CompletedExceptionally.prototype.k1c = function () {
    return this.v17_1.atomicfu$compareAndSet(false, true);
  };
  CompletedExceptionally.prototype.toString = function () {
    return get_classSimpleName(this) + '[' + this.u17_1 + ']';
  };
  CompletedExceptionally.$metadata$ = classMeta('CompletedExceptionally');
  function CancelledContinuation(continuation, cause, handled) {
    var tmp0_elvis_lhs = cause;
    CompletedExceptionally.call(this, tmp0_elvis_lhs == null ? CancellationException_init_$Create$('Continuation ' + continuation + ' was cancelled normally') : tmp0_elvis_lhs, handled);
    this.r1b_1 = atomic$boolean$1(false);
  }
  CancelledContinuation.prototype.s1b = function () {
    return this.r1b_1.atomicfu$compareAndSet(false, true);
  };
  CancelledContinuation.$metadata$ = classMeta('CancelledContinuation', undefined, undefined, undefined, undefined, CompletedExceptionally.prototype);
  function toState(_this__u8e3s4, caller) {
    var tmp$ret$2;
    {
      {
      }
      var exception = Result__exceptionOrNull_impl_p6xea9(_this__u8e3s4);
      var tmp;
      if (exception == null) {
        var tmp$ret$0;
        {
          var tmp_0 = _Result___get_value__impl__bjfvqg(_this__u8e3s4);
          var tmp0__anonymous__q1qw7t = (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
          tmp$ret$0 = tmp0__anonymous__q1qw7t;
        }
        tmp = tmp$ret$0;
      } else {
        var tmp$ret$1;
        {
          var tmp_1 = recoverStackTrace(exception, caller);
          tmp$ret$1 = CompletedExceptionally_init_$Create$(tmp_1, false, 2, null);
        }
        tmp = tmp$ret$1;
      }
      tmp$ret$2 = tmp;
    }
    return tmp$ret$2;
  }
  function toState_0(_this__u8e3s4, onCancellation) {
    var tmp$ret$2;
    {
      {
      }
      var exception = Result__exceptionOrNull_impl_p6xea9(_this__u8e3s4);
      var tmp;
      if (exception == null) {
        var tmp$ret$0;
        {
          var tmp_0 = _Result___get_value__impl__bjfvqg(_this__u8e3s4);
          var tmp0__anonymous__q1qw7t = (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
          tmp$ret$0 = !(onCancellation == null) ? new CompletedWithCancellation(tmp0__anonymous__q1qw7t, onCancellation) : tmp0__anonymous__q1qw7t;
        }
        tmp = tmp$ret$0;
      } else {
        var tmp$ret$1;
        {
          tmp$ret$1 = CompletedExceptionally_init_$Create$(exception, false, 2, null);
        }
        tmp = tmp$ret$1;
      }
      tmp$ret$2 = tmp;
    }
    return tmp$ret$2;
  }
  function toState$default(_this__u8e3s4, onCancellation, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      onCancellation = null;
    return toState_0(_this__u8e3s4, onCancellation);
  }
  function CompletedWithCancellation(result, onCancellation) {
    this.j1d_1 = result;
    this.k1d_1 = onCancellation;
  }
  CompletedWithCancellation.prototype.toString = function () {
    return 'CompletedWithCancellation(result=' + toString(this.j1d_1) + ', onCancellation=' + this.k1d_1 + ')';
  };
  CompletedWithCancellation.prototype.hashCode = function () {
    var result = this.j1d_1 == null ? 0 : hashCode(this.j1d_1);
    result = imul(result, 31) + hashCode(this.k1d_1) | 0;
    return result;
  };
  CompletedWithCancellation.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CompletedWithCancellation))
      return false;
    var tmp0_other_with_cast = other instanceof CompletedWithCancellation ? other : THROW_CCE();
    if (!equals(this.j1d_1, tmp0_other_with_cast.j1d_1))
      return false;
    if (!equals(this.k1d_1, tmp0_other_with_cast.k1d_1))
      return false;
    return true;
  };
  CompletedWithCancellation.$metadata$ = classMeta('CompletedWithCancellation');
  function CoroutineDispatcher$Key$_init_$lambda_akl8b5() {
    return function (it) {
      return it instanceof CoroutineDispatcher ? it : null;
    };
  }
  function Key_0() {
    Key_instance = this;
    var tmp = Key_getInstance();
    AbstractCoroutineContextKey.call(this, tmp, CoroutineDispatcher$Key$_init_$lambda_akl8b5());
  }
  Key_0.$metadata$ = objectMeta('Key', undefined, undefined, undefined, undefined, AbstractCoroutineContextKey.prototype);
  var Key_instance;
  function Key_getInstance_0() {
    if (Key_instance == null)
      new Key_0();
    return Key_instance;
  }
  function CoroutineDispatcher() {
    Key_getInstance_0();
    AbstractCoroutineContextElement.call(this, Key_getInstance());
  }
  CoroutineDispatcher.prototype.m1d = function (context) {
    return true;
  };
  CoroutineDispatcher.prototype.d8 = function (continuation) {
    return new DispatchedContinuation(this, continuation);
  };
  CoroutineDispatcher.prototype.e8 = function (continuation) {
    var dispatched = continuation instanceof DispatchedContinuation ? continuation : THROW_CCE();
    dispatched.o1d();
  };
  CoroutineDispatcher.prototype.toString = function () {
    return get_classSimpleName(this) + '@' + get_hexAddress(this);
  };
  CoroutineDispatcher.$metadata$ = classMeta('CoroutineDispatcher', [ContinuationInterceptor], undefined, undefined, undefined, AbstractCoroutineContextElement.prototype);
  function handleCoroutineException(context, exception) {
    try {
      var tmp0_safe_receiver = context.f8(Key_getInstance_1());
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$0;
        {
          {
          }
          tmp0_safe_receiver.p1d(context, exception);
          return Unit_getInstance();
        }
      }
    } catch ($p) {
      if ($p instanceof Error) {
        handleCoroutineExceptionImpl(context, handlerException(exception, $p));
        return Unit_getInstance();
      } else {
        throw $p;
      }
    }
    handleCoroutineExceptionImpl(context, exception);
  }
  function Key_1() {
    Key_instance_0 = this;
  }
  Key_1.$metadata$ = objectMeta('Key', [Key]);
  var Key_instance_0;
  function Key_getInstance_1() {
    if (Key_instance_0 == null)
      new Key_1();
    return Key_instance_0;
  }
  function handlerException(originalException, thrownException) {
    if (originalException === thrownException)
      return originalException;
    var tmp$ret$0;
    {
      var tmp0_apply = RuntimeException_init_$Create$('Exception while trying to handle coroutine exception', thrownException);
      {
      }
      {
        {
        }
      }
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0;
  }
  function CoroutineScope() {
  }
  CoroutineScope.$metadata$ = interfaceMeta('CoroutineScope');
  function CoroutineScope_0(context) {
    var tmp;
    if (!(context.f8(Key_getInstance_2()) == null)) {
      tmp = context;
    } else {
      tmp = context.m8(Job$default(null, 1, null));
    }
    return new ContextScope(tmp);
  }
  var CoroutineStart_DEFAULT_instance;
  var CoroutineStart_LAZY_instance;
  var CoroutineStart_ATOMIC_instance;
  var CoroutineStart_UNDISPATCHED_instance;
  var CoroutineStart_entriesInitialized;
  function CoroutineStart_initEntries() {
    if (CoroutineStart_entriesInitialized)
      return Unit_getInstance();
    CoroutineStart_entriesInitialized = true;
    CoroutineStart_DEFAULT_instance = new CoroutineStart('DEFAULT', 0);
    CoroutineStart_LAZY_instance = new CoroutineStart('LAZY', 1);
    CoroutineStart_ATOMIC_instance = new CoroutineStart('ATOMIC', 2);
    CoroutineStart_UNDISPATCHED_instance = new CoroutineStart('UNDISPATCHED', 3);
  }
  function CoroutineStart(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  CoroutineStart.prototype.f18 = function (block, receiver, completion) {
    var tmp0_subject = this;
    var tmp0 = tmp0_subject.y1();
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = startCoroutineCancellable$default(block, receiver, completion, null, 4, null);
        break;
      case 2:
        tmp = startCoroutine(block, receiver, completion);
        break;
      case 3:
        tmp = startCoroutineUndispatched(block, receiver, completion);
        break;
      case 1:
        tmp = Unit_getInstance();
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  CoroutineStart.prototype.j19 = function () {
    return this === CoroutineStart_LAZY_getInstance();
  };
  CoroutineStart.$metadata$ = classMeta('CoroutineStart', undefined, undefined, undefined, undefined, Enum.prototype);
  function CoroutineStart_DEFAULT_getInstance() {
    CoroutineStart_initEntries();
    return CoroutineStart_DEFAULT_instance;
  }
  function CoroutineStart_LAZY_getInstance() {
    CoroutineStart_initEntries();
    return CoroutineStart_LAZY_instance;
  }
  function CopyableThrowable() {
  }
  CopyableThrowable.$metadata$ = interfaceMeta('CopyableThrowable');
  function Deferred() {
  }
  Deferred.$metadata$ = interfaceMeta('Deferred', [Job]);
  function Delay() {
  }
  Delay.$metadata$ = interfaceMeta('Delay');
  function delay(timeMillis, $cont) {
    if (timeMillis.m1(new Long(0, 0)) <= 0)
      return Unit_getInstance();
    var tmp$ret$0;
    {
      var tmp0__anonymous__q1qw7t = $cont;
      var cancellable = new CancellableContinuationImpl(intercepted(tmp0__anonymous__q1qw7t), get_MODE_CANCELLABLE());
      cancellable.z1b();
      {
        Companion_getInstance();
        if (timeMillis.m1(new Long(-1, 2147483647)) < 0) {
          get_delay(cancellable.s4()).q1d(timeMillis, cancellable);
        }
      }
      tmp$ret$0 = cancellable.i1c();
    }
    return tmp$ret$0;
  }
  function get_delay(_this__u8e3s4) {
    var tmp = _this__u8e3s4.f8(Key_getInstance());
    var tmp0_elvis_lhs = (!(tmp == null) ? isInterface(tmp, Delay) : false) ? tmp : null;
    return tmp0_elvis_lhs == null ? get_DefaultDelay() : tmp0_elvis_lhs;
  }
  function delta($this, unconfined) {
    return unconfined ? new Long(0, 1) : new Long(1, 0);
  }
  function EventLoop() {
    CoroutineDispatcher.call(this);
    this.s1d_1 = new Long(0, 0);
    this.t1d_1 = false;
    this.u1d_1 = null;
  }
  EventLoop.prototype.v1d = function () {
    var tmp0_elvis_lhs = this.u1d_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var queue = tmp;
    var tmp1_elvis_lhs = queue.z1d();
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      return false;
    } else {
      tmp_0 = tmp1_elvis_lhs;
    }
    var task = tmp_0;
    task.m1c();
    return true;
  };
  EventLoop.prototype.a1e = function (task) {
    var tmp0_elvis_lhs = this.u1d_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$0;
      {
        var tmp0_also = new ArrayQueue();
        {
        }
        {
          this.u1d_1 = tmp0_also;
        }
        tmp$ret$0 = tmp0_also;
      }
      tmp = tmp$ret$0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var queue = tmp;
    queue.b1e(task);
  };
  EventLoop.prototype.c1e = function () {
    return this.s1d_1.m1(delta(this, true)) >= 0;
  };
  EventLoop.prototype.d1e = function () {
    var tmp0_safe_receiver = this.u1d_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.e1e();
    return tmp1_elvis_lhs == null ? true : tmp1_elvis_lhs;
  };
  EventLoop.prototype.f1e = function (unconfined) {
    var tmp0_this = this;
    tmp0_this.s1d_1 = tmp0_this.s1d_1.ka(delta(this, unconfined));
    if (!unconfined)
      this.t1d_1 = true;
  };
  EventLoop.prototype.g1e = function (unconfined) {
    var tmp0_this = this;
    tmp0_this.s1d_1 = tmp0_this.s1d_1.la(delta(this, unconfined));
    if (this.s1d_1.m1(new Long(0, 0)) > 0)
      return Unit_getInstance();
    {
    }
    if (this.t1d_1) {
      this.h1e();
    }
  };
  EventLoop.prototype.h1e = function () {
  };
  EventLoop.$metadata$ = classMeta('EventLoop', undefined, undefined, undefined, undefined, CoroutineDispatcher.prototype);
  function ThreadLocalEventLoop() {
    ThreadLocalEventLoop_instance = this;
    this.i1e_1 = new CommonThreadLocal();
  }
  ThreadLocalEventLoop.prototype.j1e = function () {
    var tmp0_elvis_lhs = this.i1e_1.l1e();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$0;
      {
        var tmp0_also = createEventLoop();
        {
        }
        {
          ThreadLocalEventLoop_getInstance().i1e_1.m1e(tmp0_also);
        }
        tmp$ret$0 = tmp0_also;
      }
      tmp = tmp$ret$0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  ThreadLocalEventLoop.$metadata$ = objectMeta('ThreadLocalEventLoop');
  var ThreadLocalEventLoop_instance;
  function ThreadLocalEventLoop_getInstance() {
    if (ThreadLocalEventLoop_instance == null)
      new ThreadLocalEventLoop();
    return ThreadLocalEventLoop_instance;
  }
  function CompletionHandlerException(message, cause) {
    RuntimeException_init_$Init$(message, cause, this);
    captureStack(this, CompletionHandlerException);
  }
  CompletionHandlerException.$metadata$ = classMeta('CompletionHandlerException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function CoroutinesInternalError(message, cause) {
    Error_init_$Init$(message, cause, this);
    captureStack(this, CoroutinesInternalError);
  }
  CoroutinesInternalError.$metadata$ = classMeta('CoroutinesInternalError', undefined, undefined, undefined, undefined, Error_0.prototype);
  function DisposableHandle() {
  }
  DisposableHandle.$metadata$ = interfaceMeta('DisposableHandle');
  function Key_2() {
    Key_instance_1 = this;
  }
  Key_2.$metadata$ = objectMeta('Key', [Key]);
  var Key_instance_1;
  function Key_getInstance_2() {
    if (Key_instance_1 == null)
      new Key_2();
    return Key_instance_1;
  }
  function Job() {
  }
  Job.$metadata$ = interfaceMeta('Job', [Element]);
  function ChildJob() {
  }
  ChildJob.$metadata$ = interfaceMeta('ChildJob', [Job]);
  function ParentJob() {
  }
  ParentJob.$metadata$ = interfaceMeta('ParentJob', [Job]);
  function ChildHandle() {
  }
  ChildHandle.$metadata$ = interfaceMeta('ChildHandle', [DisposableHandle]);
  function NonDisposableHandle() {
    NonDisposableHandle_instance = this;
  }
  NonDisposableHandle.prototype.n1a = function () {
  };
  NonDisposableHandle.prototype.y18 = function (cause) {
    return false;
  };
  NonDisposableHandle.prototype.toString = function () {
    return 'NonDisposableHandle';
  };
  NonDisposableHandle.$metadata$ = objectMeta('NonDisposableHandle', [DisposableHandle, ChildHandle]);
  var NonDisposableHandle_instance;
  function NonDisposableHandle_getInstance() {
    if (NonDisposableHandle_instance == null)
      new NonDisposableHandle();
    return NonDisposableHandle_instance;
  }
  function Job_0(parent) {
    return new JobImpl(parent);
  }
  function Job$default(parent, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      parent = null;
    return Job_0(parent);
  }
  function get_COMPLETING_ALREADY() {
    init_properties_JobSupport_kt_iaxwag();
    return COMPLETING_ALREADY;
  }
  var COMPLETING_ALREADY;
  function get_COMPLETING_WAITING_CHILDREN() {
    init_properties_JobSupport_kt_iaxwag();
    return COMPLETING_WAITING_CHILDREN;
  }
  var COMPLETING_WAITING_CHILDREN;
  function get_COMPLETING_RETRY() {
    init_properties_JobSupport_kt_iaxwag();
    return COMPLETING_RETRY;
  }
  var COMPLETING_RETRY;
  function get_TOO_LATE_TO_CANCEL() {
    init_properties_JobSupport_kt_iaxwag();
    return TOO_LATE_TO_CANCEL;
  }
  var TOO_LATE_TO_CANCEL;
  function get_SEALED() {
    init_properties_JobSupport_kt_iaxwag();
    return SEALED;
  }
  var SEALED;
  function get_EMPTY_NEW() {
    init_properties_JobSupport_kt_iaxwag();
    return EMPTY_NEW;
  }
  var EMPTY_NEW;
  function get_EMPTY_ACTIVE() {
    init_properties_JobSupport_kt_iaxwag();
    return EMPTY_ACTIVE;
  }
  var EMPTY_ACTIVE;
  function Empty(isActive) {
    this.n1e_1 = isActive;
  }
  Empty.prototype.p17 = function () {
    return this.n1e_1;
  };
  Empty.prototype.o1e = function () {
    return null;
  };
  Empty.prototype.toString = function () {
    return 'Empty{' + (this.n1e_1 ? 'Active' : 'New') + '}';
  };
  Empty.$metadata$ = classMeta('Empty', [Incomplete]);
  function Incomplete() {
  }
  Incomplete.$metadata$ = interfaceMeta('Incomplete');
  function NodeList() {
    LinkedListHead.call(this);
  }
  NodeList.prototype.p17 = function () {
    return true;
  };
  NodeList.prototype.o1e = function () {
    return this;
  };
  NodeList.prototype.s1e = function (state) {
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        var tmp0_apply = StringBuilder_init_$Create$();
        {
        }
        {
          tmp0_apply.ga('List{');
          tmp0_apply.ga(state);
          tmp0_apply.ga('}[');
          var first = true;
          {
            var cur = this.t1e();
            while (!equals(cur, this)) {
              if (cur instanceof JobNode) {
                var tmp0__anonymous__q1qw7t = cur;
                if (first)
                  first = false;
                else {
                  tmp0_apply.ga(', ');
                }
                tmp0_apply.ob(tmp0__anonymous__q1qw7t);
              }
              cur = cur.d1b_1;
            }
          }
          tmp0_apply.ga(']');
        }
        tmp$ret$0 = tmp0_apply;
      }
      tmp$ret$1 = tmp$ret$0.toString();
    }
    return tmp$ret$1;
  };
  NodeList.prototype.toString = function () {
    return get_DEBUG() ? this.s1e('Active') : anyToString(this);
  };
  NodeList.$metadata$ = classMeta('NodeList', [Incomplete], undefined, undefined, undefined, LinkedListHead.prototype);
  function JobNode() {
    CompletionHandlerBase.call(this);
  }
  JobNode.prototype.j1f = function () {
    var tmp = this.i1f_1;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('job');
    }
  };
  JobNode.prototype.p17 = function () {
    return true;
  };
  JobNode.prototype.o1e = function () {
    return null;
  };
  JobNode.prototype.n1a = function () {
    return this.j1f().s18(this);
  };
  JobNode.prototype.toString = function () {
    return get_classSimpleName(this) + '@' + get_hexAddress(this) + '[job@' + get_hexAddress(this.j1f()) + ']';
  };
  JobNode.$metadata$ = classMeta('JobNode', [DisposableHandle, Incomplete], undefined, undefined, undefined, CompletionHandlerBase.prototype);
  function _set_exceptionsHolder__tqm22h($this, value) {
    $this.o1f_1.z16_1 = value;
  }
  function _get_exceptionsHolder__nhszp($this) {
    return $this.o1f_1.z16_1;
  }
  function allocateList($this) {
    return ArrayList_init_$Create$(4);
  }
  function finalizeFinishingState($this, state, proposedUpdate) {
    {
    }
    {
    }
    {
    }
    var tmp0_safe_receiver = proposedUpdate instanceof CompletedExceptionally ? proposedUpdate : null;
    var proposedException = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.u17_1;
    var wasCancelling = false;
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        wasCancelling = state.p1f();
        var exceptions = state.q1f(proposedException);
        var finalCause = getFinalRootCause($this, state, exceptions);
        if (!(finalCause == null))
          addSuppressedExceptions($this, finalCause, exceptions);
        tmp$ret$0 = finalCause;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    var finalException = tmp$ret$1;
    var tmp;
    if (finalException == null) {
      tmp = proposedUpdate;
    } else if (finalException === proposedException) {
      tmp = proposedUpdate;
    } else {
      tmp = CompletedExceptionally_init_$Create$(finalException, false, 2, null);
    }
    var finalState = tmp;
    if (!(finalException == null)) {
      var handled = cancelParent($this, finalException) ? true : $this.g19(finalException);
      if (handled) {
        (finalState instanceof CompletedExceptionally ? finalState : THROW_CCE()).k1c();
      }
    }
    if (!wasCancelling)
      $this.d19(finalException);
    $this.t17(finalState);
    var casSuccess = $this.i17_1.atomicfu$compareAndSet(state, boxIncomplete(finalState));
    {
    }
    completeStateFinalization($this, state, finalState);
    return finalState;
  }
  function getFinalRootCause($this, state, exceptions) {
    if (exceptions.q()) {
      if (state.p1f()) {
        var tmp$ret$0;
        {
          var tmp0_elvis_lhs = null;
          tmp$ret$0 = new JobCancellationException(tmp0_elvis_lhs == null ? $this.s17() : tmp0_elvis_lhs, null, $this);
        }
        return tmp$ret$0;
      }
      return null;
    }
    var tmp$ret$2;
    $l$block: {
      var tmp0_iterator = exceptions.h();
      while (tmp0_iterator.n()) {
        var element = tmp0_iterator.o();
        var tmp$ret$1;
        {
          tmp$ret$1 = !(element instanceof CancellationException);
        }
        if (tmp$ret$1) {
          tmp$ret$2 = element;
          break $l$block;
        }
      }
      tmp$ret$2 = null;
    }
    var firstNonCancellation = tmp$ret$2;
    if (!(firstNonCancellation == null))
      return firstNonCancellation;
    var first = exceptions.r(0);
    if (first instanceof TimeoutCancellationException) {
      var tmp$ret$4;
      $l$block_0: {
        var tmp0_iterator_0 = exceptions.h();
        while (tmp0_iterator_0.n()) {
          var element_0 = tmp0_iterator_0.o();
          var tmp$ret$3;
          {
            var tmp;
            if (!(element_0 === first)) {
              tmp = element_0 instanceof TimeoutCancellationException;
            } else {
              tmp = false;
            }
            tmp$ret$3 = tmp;
          }
          if (tmp$ret$3) {
            tmp$ret$4 = element_0;
            break $l$block_0;
          }
        }
        tmp$ret$4 = null;
      }
      var detailedTimeoutException = tmp$ret$4;
      if (!(detailedTimeoutException == null))
        return detailedTimeoutException;
    }
    return first;
  }
  function addSuppressedExceptions($this, rootCause, exceptions) {
    if (exceptions.m() <= 1)
      return Unit_getInstance();
    var seenExceptions = identitySet(exceptions.m());
    var unwrappedCause = unwrap(rootCause);
    var tmp0_iterator = exceptions.h();
    while (tmp0_iterator.n()) {
      var exception = tmp0_iterator.o();
      var unwrapped = unwrap(exception);
      var tmp;
      var tmp_0;
      if (!(unwrapped === rootCause) ? !(unwrapped === unwrappedCause) : false) {
        tmp_0 = !(unwrapped instanceof CancellationException);
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        tmp = seenExceptions.b(unwrapped);
      } else {
        tmp = false;
      }
      if (tmp) {
        {
        }
      }
    }
  }
  function tryFinalizeSimpleState($this, state, update) {
    {
    }
    {
    }
    if (!$this.i17_1.atomicfu$compareAndSet(state, boxIncomplete(update)))
      return false;
    $this.d19(null);
    $this.t17(update);
    completeStateFinalization($this, state, update);
    return true;
  }
  function completeStateFinalization($this, state, update) {
    var tmp0_safe_receiver = $this.h18();
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        tmp0_safe_receiver.n1a();
        tmp$ret$0 = $this.g18(NonDisposableHandle_getInstance());
      }
    }
    var tmp1_safe_receiver = update instanceof CompletedExceptionally ? update : null;
    var cause = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.u17_1;
    if (state instanceof JobNode) {
      try {
        state.invoke(cause);
      } catch ($p) {
        if ($p instanceof Error) {
          $this.a18(new CompletionHandlerException('Exception in completion handler ' + state + ' for ' + $this, $p));
        } else {
          throw $p;
        }
      }
    } else {
      var tmp2_safe_receiver = state.o1e();
      if (tmp2_safe_receiver == null)
        null;
      else {
        notifyCompletion(tmp2_safe_receiver, $this, cause);
      }
    }
  }
  function notifyCancelling($this, list, cause) {
    $this.d19(cause);
    {
      var exception = null;
      {
        var cur = list.t1e();
        while (!equals(cur, list)) {
          if (cur instanceof JobCancellingNode) {
            var tmp0__anonymous__q1qw7t = cur;
            try {
              tmp0__anonymous__q1qw7t.invoke(cause);
            } catch ($p) {
              if ($p instanceof Error) {
                var tmp0_safe_receiver = exception;
                var tmp;
                if (tmp0_safe_receiver == null) {
                  tmp = null;
                } else {
                  var tmp$ret$0;
                  {
                    {
                    }
                    {
                      {
                      }
                    }
                    tmp$ret$0 = tmp0_safe_receiver;
                  }
                  tmp = tmp$ret$0;
                }
                var tmp1_elvis_lhs = tmp;
                if (tmp1_elvis_lhs == null) {
                  var tmp$ret$1;
                  {
                    {
                    }
                    exception = new CompletionHandlerException('Exception in completion handler ' + tmp0__anonymous__q1qw7t + ' for ' + $this, $p);
                    tmp$ret$1 = Unit_getInstance();
                  }
                } else
                  tmp1_elvis_lhs;
              } else {
                throw $p;
              }
            }
          }
          cur = cur.d1b_1;
        }
      }
      var tmp0_safe_receiver_0 = exception;
      if (tmp0_safe_receiver_0 == null)
        null;
      else {
        var tmp$ret$2;
        {
          {
          }
          tmp$ret$2 = $this.a18(tmp0_safe_receiver_0);
        }
      }
    }
    cancelParent($this, cause);
  }
  function cancelParent($this, cause) {
    if ($this.e19())
      return true;
    var isCancellation = cause instanceof CancellationException;
    var parent = $this.h18();
    if (parent === null ? true : parent === NonDisposableHandle_getInstance()) {
      return isCancellation;
    }
    return parent.y18(cause) ? true : isCancellation;
  }
  function notifyCompletion(_this__u8e3s4, $this, cause) {
    var exception = null;
    {
      var cur = _this__u8e3s4.t1e();
      while (!equals(cur, _this__u8e3s4)) {
        if (cur instanceof JobNode) {
          var tmp0__anonymous__q1qw7t = cur;
          try {
            tmp0__anonymous__q1qw7t.invoke(cause);
          } catch ($p) {
            if ($p instanceof Error) {
              var tmp0_safe_receiver = exception;
              var tmp;
              if (tmp0_safe_receiver == null) {
                tmp = null;
              } else {
                var tmp$ret$0;
                {
                  {
                  }
                  {
                    {
                    }
                  }
                  tmp$ret$0 = tmp0_safe_receiver;
                }
                tmp = tmp$ret$0;
              }
              var tmp1_elvis_lhs = tmp;
              if (tmp1_elvis_lhs == null) {
                var tmp$ret$1;
                {
                  {
                  }
                  exception = new CompletionHandlerException('Exception in completion handler ' + tmp0__anonymous__q1qw7t + ' for ' + $this, $p);
                  tmp$ret$1 = Unit_getInstance();
                }
              } else
                tmp1_elvis_lhs;
            } else {
              throw $p;
            }
          }
        }
        cur = cur.d1b_1;
      }
    }
    var tmp0_safe_receiver_0 = exception;
    if (tmp0_safe_receiver_0 == null)
      null;
    else {
      var tmp$ret$2;
      {
        {
        }
        tmp$ret$2 = $this.a18(tmp0_safe_receiver_0);
      }
    }
    return Unit_getInstance();
  }
  function startInternal($this, state) {
    var tmp0_subject = state;
    if (tmp0_subject instanceof Empty) {
      if (state.n1e_1)
        return 0;
      if (!$this.i17_1.atomicfu$compareAndSet(state, get_EMPTY_ACTIVE()))
        return -1;
      $this.l18();
      return 1;
    } else {
      if (tmp0_subject instanceof InactiveNodeList) {
        if (!$this.i17_1.atomicfu$compareAndSet(state, state.r1f_1))
          return -1;
        $this.l18();
        return 1;
      } else {
        return 0;
      }
    }
  }
  function makeNode($this, handler, onCancelling) {
    var tmp;
    if (onCancelling) {
      var tmp0_elvis_lhs = handler instanceof JobCancellingNode ? handler : null;
      tmp = tmp0_elvis_lhs == null ? new InvokeOnCancelling(handler) : tmp0_elvis_lhs;
    } else {
      var tmp1_safe_receiver = handler instanceof JobNode ? handler : null;
      var tmp_0;
      if (tmp1_safe_receiver == null) {
        tmp_0 = null;
      } else {
        var tmp$ret$0;
        {
          {
          }
          {
            {
            }
          }
          tmp$ret$0 = tmp1_safe_receiver;
        }
        tmp_0 = tmp$ret$0;
      }
      var tmp2_elvis_lhs = tmp_0;
      tmp = tmp2_elvis_lhs == null ? new InvokeOnCompletion(handler) : tmp2_elvis_lhs;
    }
    var node = tmp;
    node.i1f_1 = $this;
    return node;
  }
  function addLastAtomic($this, expect, list, node) {
    var tmp$ret$1;
    $l$block: {
      var tmp$ret$0;
      {
        tmp$ret$0 = $this.i18() === expect;
      }
      if (!tmp$ret$0) {
        tmp$ret$1 = false;
        break $l$block;
      }
      list.a1f(node);
      tmp$ret$1 = true;
    }
    return tmp$ret$1;
  }
  function promoteEmptyToNodeList($this, state) {
    var list = new NodeList();
    var update = state.n1e_1 ? list : new InactiveNodeList(list);
    $this.i17_1.atomicfu$compareAndSet(state, update);
  }
  function promoteSingleToNodeList($this, state) {
    state.k1f(new NodeList());
    var tmp$ret$0;
    {
      tmp$ret$0 = state.d1b_1;
    }
    var list = tmp$ret$0;
    $this.i17_1.atomicfu$compareAndSet(state, list);
  }
  function cancelMakeCompleting($this, cause) {
    {
      while (true) {
        {
          var tmp0__anonymous__q1qw7t = $this.i18();
          var tmp;
          if (!(!(tmp0__anonymous__q1qw7t == null) ? isInterface(tmp0__anonymous__q1qw7t, Incomplete) : false)) {
            tmp = true;
          } else {
            var tmp_0;
            if (tmp0__anonymous__q1qw7t instanceof Finishing) {
              tmp_0 = tmp0__anonymous__q1qw7t.s1f();
            } else {
              tmp_0 = false;
            }
            tmp = tmp_0;
          }
          if (tmp) {
            return get_COMPLETING_ALREADY();
          }
          var tmp_1 = createCauseException($this, cause);
          var proposedUpdate = CompletedExceptionally_init_$Create$(tmp_1, false, 2, null);
          var finalState = tryMakeCompleting($this, tmp0__anonymous__q1qw7t, proposedUpdate);
          if (!(finalState === get_COMPLETING_RETRY()))
            return finalState;
        }
      }
    }
  }
  function createCauseException($this, cause) {
    var tmp0_subject = cause;
    var tmp;
    if (tmp0_subject == null ? true : tmp0_subject instanceof Error) {
      var tmp1_elvis_lhs = cause;
      var tmp_0;
      if (tmp1_elvis_lhs == null) {
        var tmp$ret$0;
        {
          var tmp0_elvis_lhs = null;
          tmp$ret$0 = new JobCancellationException(tmp0_elvis_lhs == null ? $this.s17() : tmp0_elvis_lhs, null, $this);
        }
        tmp_0 = tmp$ret$0;
      } else {
        tmp_0 = tmp1_elvis_lhs;
      }
      tmp = tmp_0;
    } else {
      tmp = ((!(cause == null) ? isInterface(cause, ParentJob) : false) ? cause : THROW_CCE()).b19();
    }
    return tmp;
  }
  function makeCancelling($this, cause) {
    var causeExceptionCache = null;
    {
      while (true) {
        var tmp$ret$7;
        $l$block: {
          var tmp0__anonymous__q1qw7t = $this.i18();
          var tmp0_subject = tmp0__anonymous__q1qw7t;
          if (tmp0_subject instanceof Finishing) {
            var tmp$ret$4;
            {
              var tmp$ret$3;
              {
                if (tmp0__anonymous__q1qw7t.t1f())
                  return get_TOO_LATE_TO_CANCEL();
                var wasCancelling = tmp0__anonymous__q1qw7t.p1f();
                if (!(cause == null) ? true : !wasCancelling) {
                  var tmp0_elvis_lhs = causeExceptionCache;
                  var tmp;
                  if (tmp0_elvis_lhs == null) {
                    var tmp$ret$0;
                    {
                      var tmp0_also = createCauseException($this, cause);
                      {
                      }
                      {
                        causeExceptionCache = tmp0_also;
                      }
                      tmp$ret$0 = tmp0_also;
                    }
                    tmp = tmp$ret$0;
                  } else {
                    tmp = tmp0_elvis_lhs;
                  }
                  var causeException = tmp;
                  tmp0__anonymous__q1qw7t.u1f(causeException);
                }
                var tmp$ret$2;
                {
                  var tmp1_takeIf = tmp0__anonymous__q1qw7t.v1f();
                  {
                  }
                  var tmp_0;
                  var tmp$ret$1;
                  {
                    tmp$ret$1 = !wasCancelling;
                  }
                  if (tmp$ret$1) {
                    tmp_0 = tmp1_takeIf;
                  } else {
                    tmp_0 = null;
                  }
                  tmp$ret$2 = tmp_0;
                }
                tmp$ret$3 = tmp$ret$2;
              }
              tmp$ret$4 = tmp$ret$3;
            }
            var notifyRootCause = tmp$ret$4;
            var tmp1_safe_receiver = notifyRootCause;
            if (tmp1_safe_receiver == null)
              null;
            else {
              var tmp$ret$5;
              {
                {
                }
                tmp$ret$5 = notifyCancelling($this, tmp0__anonymous__q1qw7t.l1f_1, tmp1_safe_receiver);
              }
            }
            return get_COMPLETING_ALREADY();
          } else {
            if (!(tmp0_subject == null) ? isInterface(tmp0_subject, Incomplete) : false) {
              var tmp2_elvis_lhs = causeExceptionCache;
              var tmp_1;
              if (tmp2_elvis_lhs == null) {
                var tmp$ret$6;
                {
                  var tmp0_also_0 = createCauseException($this, cause);
                  {
                  }
                  {
                    causeExceptionCache = tmp0_also_0;
                  }
                  tmp$ret$6 = tmp0_also_0;
                }
                tmp_1 = tmp$ret$6;
              } else {
                tmp_1 = tmp2_elvis_lhs;
              }
              var causeException_0 = tmp_1;
              if (tmp0__anonymous__q1qw7t.p17()) {
                if (tryMakeCancelling($this, tmp0__anonymous__q1qw7t, causeException_0))
                  return get_COMPLETING_ALREADY();
              } else {
                var finalState = tryMakeCompleting($this, tmp0__anonymous__q1qw7t, CompletedExceptionally_init_$Create$(causeException_0, false, 2, null));
                if (finalState === get_COMPLETING_ALREADY()) {
                  var tmp1_error = 'Cannot happen in ' + toString(tmp0__anonymous__q1qw7t);
                  throw IllegalStateException_init_$Create$(toString_0(tmp1_error));
                } else if (finalState === get_COMPLETING_RETRY()) {
                  tmp$ret$7 = Unit_getInstance();
                  break $l$block;
                } else
                  return finalState;
              }
            } else {
              return get_TOO_LATE_TO_CANCEL();
            }
          }
        }
      }
    }
  }
  function getOrPromoteCancellingList($this, state) {
    var tmp1_elvis_lhs = state.o1e();
    var tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp0_subject = state;
      var tmp_0;
      if (tmp0_subject instanceof Empty) {
        tmp_0 = new NodeList();
      } else {
        if (tmp0_subject instanceof JobNode) {
          promoteSingleToNodeList($this, state);
          tmp_0 = null;
        } else {
          var tmp0_error = 'State should have list: ' + state;
          throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
        }
      }
      tmp = tmp_0;
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  }
  function tryMakeCancelling($this, state, rootCause) {
    {
    }
    {
    }
    var tmp0_elvis_lhs = getOrPromoteCancellingList($this, state);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var list = tmp;
    var cancelling = new Finishing(list, false, rootCause);
    if (!$this.i17_1.atomicfu$compareAndSet(state, cancelling))
      return false;
    notifyCancelling($this, list, rootCause);
    return true;
  }
  function tryMakeCompleting($this, state, proposedUpdate) {
    if (!(!(state == null) ? isInterface(state, Incomplete) : false))
      return get_COMPLETING_ALREADY();
    var tmp;
    var tmp_0;
    var tmp_1;
    if (state instanceof Empty) {
      tmp_1 = true;
    } else {
      tmp_1 = state instanceof JobNode;
    }
    if (tmp_1) {
      tmp_0 = !(state instanceof ChildHandleNode);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = !(proposedUpdate instanceof CompletedExceptionally);
    } else {
      tmp = false;
    }
    if (tmp) {
      if (tryFinalizeSimpleState($this, state, proposedUpdate)) {
        return proposedUpdate;
      }
      return get_COMPLETING_RETRY();
    }
    return tryMakeCompletingSlowPath($this, state, proposedUpdate);
  }
  function tryMakeCompletingSlowPath($this, state, proposedUpdate) {
    var tmp0_elvis_lhs = getOrPromoteCancellingList($this, state);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return get_COMPLETING_RETRY();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var list = tmp;
    var tmp1_elvis_lhs = state instanceof Finishing ? state : null;
    var finishing = tmp1_elvis_lhs == null ? new Finishing(list, false, null) : tmp1_elvis_lhs;
    var notifyRootCause = null;
    var tmp$ret$3;
    {
      if (finishing.s1f())
        return get_COMPLETING_ALREADY();
      finishing.w1f(true);
      if (!(finishing === state)) {
        if (!$this.i17_1.atomicfu$compareAndSet(state, finishing))
          return get_COMPLETING_RETRY();
      }
      {
      }
      var wasCancelling = finishing.p1f();
      var tmp0_safe_receiver = proposedUpdate instanceof CompletedExceptionally ? proposedUpdate : null;
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$0;
        {
          {
          }
          tmp$ret$0 = finishing.u1f(tmp0_safe_receiver.u17_1);
        }
      }
      var tmp$ret$2;
      {
        var tmp0_takeIf = finishing.v1f();
        {
        }
        var tmp_0;
        var tmp$ret$1;
        {
          tmp$ret$1 = !wasCancelling;
        }
        if (tmp$ret$1) {
          tmp_0 = tmp0_takeIf;
        } else {
          tmp_0 = null;
        }
        tmp$ret$2 = tmp_0;
      }
      notifyRootCause = tmp$ret$2;
      tmp$ret$3 = Unit_getInstance();
    }
    var tmp2_safe_receiver = notifyRootCause;
    if (tmp2_safe_receiver == null)
      null;
    else {
      var tmp$ret$4;
      {
        {
        }
        tmp$ret$4 = notifyCancelling($this, list, tmp2_safe_receiver);
      }
    }
    var child = firstChild($this, state);
    if (!(child == null) ? tryWaitForChild($this, finishing, child, proposedUpdate) : false)
      return get_COMPLETING_WAITING_CHILDREN();
    return finalizeFinishingState($this, finishing, proposedUpdate);
  }
  function _get_exceptionOrNull__b3j7js(_this__u8e3s4, $this) {
    var tmp0_safe_receiver = _this__u8e3s4 instanceof CompletedExceptionally ? _this__u8e3s4 : null;
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.u17_1;
  }
  function firstChild($this, state) {
    var tmp1_elvis_lhs = state instanceof ChildHandleNode ? state : null;
    var tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp0_safe_receiver = state.o1e();
      tmp = tmp0_safe_receiver == null ? null : nextChild(tmp0_safe_receiver, $this);
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  }
  function tryWaitForChild($this, state, child, proposedUpdate) {
    var $this_0 = $this;
    var state_0 = state;
    var child_0 = child;
    var proposedUpdate_0 = proposedUpdate;
    while (true) {
      var $this_1 = $this_0;
      var state_1 = state_0;
      var child_1 = child_0;
      var proposedUpdate_1 = proposedUpdate_0;
      var tmp$ret$1;
      {
        var tmp0__get_asHandler__gq3rkj = new ChildCompletion($this_1, state_1, child_1, proposedUpdate_1);
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0__get_asHandler__gq3rkj;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      var handle = child_1.b1g_1.r18(false, false, tmp$ret$1, 1, null);
      if (!(handle === NonDisposableHandle_getInstance()))
        return true;
      var tmp0_elvis_lhs = nextChild(child_1, $this_1);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return false;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var nextChild_0 = tmp;
      var tmp0 = $this_1;
      var tmp1 = state_1;
      var tmp2 = nextChild_0;
      var tmp3 = proposedUpdate_1;
      $this_0 = tmp0;
      state_0 = tmp1;
      child_0 = tmp2;
      proposedUpdate_0 = tmp3;
      continue;
    }
  }
  function continueCompleting($this, state, lastChild, proposedUpdate) {
    {
    }
    var waitChild = nextChild(lastChild, $this);
    if (!(waitChild == null) ? tryWaitForChild($this, state, waitChild, proposedUpdate) : false)
      return Unit_getInstance();
    var finalState = finalizeFinishingState($this, state, proposedUpdate);
    $this.z17(finalState);
  }
  function nextChild(_this__u8e3s4, $this) {
    var cur = _this__u8e3s4;
    $l$loop: while (true) {
      var tmp$ret$0;
      {
        var tmp0__get_isRemoved__hsfvgr = cur;
        tmp$ret$0 = tmp0__get_isRemoved__hsfvgr.f1b_1;
      }
      if (!tmp$ret$0) {
        break $l$loop;
      }
      var tmp$ret$1;
      {
        var tmp1__get_prevNode__b1i0ed = cur;
        tmp$ret$1 = tmp1__get_prevNode__b1i0ed.e1b_1;
      }
      cur = tmp$ret$1;
    }
    $l$loop_0: while (true) {
      var tmp$ret$2;
      {
        var tmp2__get_nextNode__ek7k4a = cur;
        tmp$ret$2 = tmp2__get_nextNode__ek7k4a.d1b_1;
      }
      cur = tmp$ret$2;
      var tmp$ret$3;
      {
        var tmp3__get_isRemoved__lodk3s = cur;
        tmp$ret$3 = tmp3__get_isRemoved__lodk3s.f1b_1;
      }
      if (tmp$ret$3)
        continue $l$loop_0;
      if (cur instanceof ChildHandleNode)
        return cur;
      if (cur instanceof NodeList)
        return null;
    }
  }
  function stateString($this, state) {
    var tmp0_subject = state;
    var tmp;
    if (tmp0_subject instanceof Finishing) {
      tmp = state.p1f() ? 'Cancelling' : state.s1f() ? 'Completing' : 'Active';
    } else {
      if (!(tmp0_subject == null) ? isInterface(tmp0_subject, Incomplete) : false) {
        tmp = state.p17() ? 'Active' : 'New';
      } else {
        if (tmp0_subject instanceof CompletedExceptionally) {
          tmp = 'Cancelled';
        } else {
          tmp = 'Completed';
        }
      }
    }
    return tmp;
  }
  function Finishing(list, isCompleting, rootCause) {
    this.l1f_1 = list;
    this.m1f_1 = atomic$boolean$1(isCompleting);
    this.n1f_1 = atomic$ref$1(rootCause);
    this.o1f_1 = atomic$ref$1(null);
  }
  Finishing.prototype.o1e = function () {
    return this.l1f_1;
  };
  Finishing.prototype.w1f = function (value) {
    this.m1f_1.d17_1 = value;
  };
  Finishing.prototype.s1f = function () {
    return this.m1f_1.d17_1;
  };
  Finishing.prototype.c1g = function (value) {
    this.n1f_1.z16_1 = value;
  };
  Finishing.prototype.v1f = function () {
    return this.n1f_1.z16_1;
  };
  Finishing.prototype.t1f = function () {
    return _get_exceptionsHolder__nhszp(this) === get_SEALED();
  };
  Finishing.prototype.p1f = function () {
    return !(this.v1f() == null);
  };
  Finishing.prototype.p17 = function () {
    return this.v1f() == null;
  };
  Finishing.prototype.q1f = function (proposedException) {
    var eh = _get_exceptionsHolder__nhszp(this);
    var tmp;
    if (eh == null) {
      tmp = allocateList(this);
    } else {
      if (eh instanceof Error) {
        var tmp$ret$0;
        {
          var tmp0_also = allocateList(this);
          {
          }
          {
            tmp0_also.b(eh);
          }
          tmp$ret$0 = tmp0_also;
        }
        tmp = tmp$ret$0;
      } else {
        if (eh instanceof ArrayList) {
          tmp = eh instanceof ArrayList ? eh : THROW_CCE();
        } else {
          var tmp1_error = 'State is ' + toString(eh);
          throw IllegalStateException_init_$Create$(toString_0(tmp1_error));
        }
      }
    }
    var list = tmp;
    var rootCause = this.v1f();
    var tmp0_safe_receiver = rootCause;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      {
        {
        }
        tmp$ret$1 = list.cf(0, tmp0_safe_receiver);
      }
    }
    if (!(proposedException == null) ? !equals(proposedException, rootCause) : false) {
      list.b(proposedException);
    }
    _set_exceptionsHolder__tqm22h(this, get_SEALED());
    return list;
  };
  Finishing.prototype.u1f = function (exception) {
    var rootCause = this.v1f();
    if (rootCause == null) {
      this.c1g(exception);
      return Unit_getInstance();
    }
    if (exception === rootCause)
      return Unit_getInstance();
    var eh = _get_exceptionsHolder__nhszp(this);
    if (eh == null)
      _set_exceptionsHolder__tqm22h(this, exception);
    else {
      if (eh instanceof Error) {
        if (exception === eh)
          return Unit_getInstance();
        var tmp$ret$0;
        {
          var tmp0_apply = allocateList(this);
          {
          }
          {
            tmp0_apply.b(eh);
            tmp0_apply.b(exception);
          }
          tmp$ret$0 = tmp0_apply;
        }
        _set_exceptionsHolder__tqm22h(this, tmp$ret$0);
      } else {
        if (eh instanceof ArrayList) {
          (eh instanceof ArrayList ? eh : THROW_CCE()).b(exception);
        } else {
          var tmp1_error = 'State is ' + toString(eh);
          throw IllegalStateException_init_$Create$(toString_0(tmp1_error));
        }
      }
    }
  };
  Finishing.prototype.toString = function () {
    return 'Finishing[cancelling=' + this.p1f() + ', completing=' + this.s1f() + ', rootCause=' + this.v1f() + ', exceptions=' + toString(_get_exceptionsHolder__nhszp(this)) + ', list=' + this.l1f_1 + ']';
  };
  Finishing.$metadata$ = classMeta('Finishing', [Incomplete]);
  function ChildCompletion(parent, state, child, proposedUpdate) {
    JobNode.call(this);
    this.h1g_1 = parent;
    this.i1g_1 = state;
    this.j1g_1 = child;
    this.k1g_1 = proposedUpdate;
  }
  ChildCompletion.prototype.m1a = function (cause) {
    continueCompleting(this.h1g_1, this.i1g_1, this.j1g_1, this.k1g_1);
  };
  ChildCompletion.prototype.invoke = function (cause) {
    return this.m1a(cause);
  };
  ChildCompletion.$metadata$ = classMeta('ChildCompletion', undefined, undefined, undefined, undefined, JobNode.prototype);
  function AwaitContinuation(delegate, job) {
    CancellableContinuationImpl.call(this, delegate, get_MODE_CANCELLABLE());
    this.r1g_1 = job;
  }
  AwaitContinuation.prototype.h1c = function (parent) {
    var state = this.r1g_1.i18();
    if (state instanceof Finishing) {
      var tmp0_safe_receiver = state.v1f();
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$0;
        {
          {
          }
          return tmp0_safe_receiver;
        }
      }
    }
    if (state instanceof CompletedExceptionally)
      return state.u17_1;
    return parent.m18();
  };
  AwaitContinuation.prototype.b18 = function () {
    return 'AwaitContinuation';
  };
  AwaitContinuation.$metadata$ = classMeta('AwaitContinuation', undefined, undefined, undefined, undefined, CancellableContinuationImpl.prototype);
  function awaitSuspend($this, $cont) {
    var tmp$ret$2;
    {
      var tmp0__anonymous__q1qw7t = $cont;
      var cont = new AwaitContinuation(intercepted(tmp0__anonymous__q1qw7t), $this);
      cont.z1b();
      var tmp$ret$1;
      {
        var tmp0__get_asHandler__gq3rkj = new ResumeAwaitOnCompletion(cont);
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0__get_asHandler__gq3rkj;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      disposeOnCancellation(cont, $this.p18(tmp$ret$1));
      tmp$ret$2 = cont.i1c();
    }
    return tmp$ret$2;
  }
  function JobSupport(active) {
    this.i17_1 = atomic$ref$1(active ? get_EMPTY_ACTIVE() : get_EMPTY_NEW());
    this.j17_1 = atomic$ref$1(null);
  }
  JobSupport.prototype.l2 = function () {
    return Key_getInstance_2();
  };
  JobSupport.prototype.g18 = function (value) {
    this.j17_1.z16_1 = value;
  };
  JobSupport.prototype.h18 = function () {
    return this.j17_1.z16_1;
  };
  JobSupport.prototype.k17 = function (parent) {
    {
    }
    if (parent == null) {
      this.g18(NonDisposableHandle_getInstance());
      return Unit_getInstance();
    }
    parent.k18();
    var handle = parent.c19(this);
    this.g18(handle);
    if (this.j18()) {
      handle.n1a();
      this.g18(NonDisposableHandle_getInstance());
    }
  };
  JobSupport.prototype.i18 = function () {
    {
      var tmp0_loop = this.i17_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.z16_1;
          if (!(tmp1__anonymous__uwfjfc instanceof OpDescriptor))
            return tmp1__anonymous__uwfjfc;
          tmp1__anonymous__uwfjfc.s1g(this);
        }
      }
    }
  };
  JobSupport.prototype.p17 = function () {
    var state = this.i18();
    var tmp;
    if (!(state == null) ? isInterface(state, Incomplete) : false) {
      tmp = state.p17();
    } else {
      tmp = false;
    }
    return tmp;
  };
  JobSupport.prototype.j18 = function () {
    var tmp = this.i18();
    return !(!(tmp == null) ? isInterface(tmp, Incomplete) : false);
  };
  JobSupport.prototype.k18 = function () {
    {
      while (true) {
        {
          var tmp0__anonymous__q1qw7t = this.i18();
          var tmp0_subject = startInternal(this, tmp0__anonymous__q1qw7t);
          if (tmp0_subject === 0)
            return false;
          else if (tmp0_subject === 1)
            return true;
        }
      }
    }
  };
  JobSupport.prototype.l18 = function () {
  };
  JobSupport.prototype.m18 = function () {
    var state = this.i18();
    var tmp;
    if (state instanceof Finishing) {
      var tmp0_safe_receiver = state.v1f();
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : this.n18(tmp0_safe_receiver, get_classSimpleName(this) + ' is cancelling');
      var tmp_0;
      if (tmp1_elvis_lhs == null) {
        var tmp0_error = 'Job is still new or active: ' + this;
        throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
      } else {
        tmp_0 = tmp1_elvis_lhs;
      }
      tmp = tmp_0;
    } else {
      if (!(state == null) ? isInterface(state, Incomplete) : false) {
        var tmp1_error = 'Job is still new or active: ' + this;
        throw IllegalStateException_init_$Create$(toString_0(tmp1_error));
      } else {
        if (state instanceof CompletedExceptionally) {
          tmp = this.o18(state.u17_1, null, 1, null);
        } else {
          tmp = new JobCancellationException(get_classSimpleName(this) + ' has completed normally', null, this);
        }
      }
    }
    return tmp;
  };
  JobSupport.prototype.n18 = function (_this__u8e3s4, message) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof CancellationException ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$0;
      {
        var tmp0_elvis_lhs_0 = message;
        tmp$ret$0 = new JobCancellationException(tmp0_elvis_lhs_0 == null ? this.s17() : tmp0_elvis_lhs_0, _this__u8e3s4, this);
      }
      tmp = tmp$ret$0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  JobSupport.prototype.o18 = function (_this__u8e3s4, message, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      message = null;
    return this.n18(_this__u8e3s4, message);
  };
  JobSupport.prototype.p18 = function (handler) {
    return this.q18(false, true, handler);
  };
  JobSupport.prototype.q18 = function (onCancelling, invokeImmediately, handler) {
    var node = makeNode(this, handler, onCancelling);
    {
      while (true) {
        var tmp$ret$1;
        $l$block: {
          var tmp0__anonymous__q1qw7t = this.i18();
          var tmp0_subject = tmp0__anonymous__q1qw7t;
          if (tmp0_subject instanceof Empty) {
            if (tmp0__anonymous__q1qw7t.n1e_1) {
              if (this.i17_1.atomicfu$compareAndSet(tmp0__anonymous__q1qw7t, node))
                return node;
            } else
              promoteEmptyToNodeList(this, tmp0__anonymous__q1qw7t);
          } else {
            if (!(tmp0_subject == null) ? isInterface(tmp0_subject, Incomplete) : false) {
              var list = tmp0__anonymous__q1qw7t.o1e();
              if (list == null) {
                promoteSingleToNodeList(this, tmp0__anonymous__q1qw7t instanceof JobNode ? tmp0__anonymous__q1qw7t : THROW_CCE());
              } else {
                var rootCause = null;
                var handle = NonDisposableHandle_getInstance();
                var tmp;
                if (onCancelling) {
                  tmp = tmp0__anonymous__q1qw7t instanceof Finishing;
                } else {
                  tmp = false;
                }
                if (tmp) {
                  var tmp$ret$2;
                  {
                    rootCause = tmp0__anonymous__q1qw7t.v1f();
                    var tmp_0;
                    var tmp_1;
                    if (rootCause == null) {
                      tmp_1 = true;
                    } else {
                      var tmp_2;
                      var tmp$ret$0;
                      {
                        tmp$ret$0 = handler instanceof ChildHandleNode;
                      }
                      if (tmp$ret$0) {
                        tmp_2 = !tmp0__anonymous__q1qw7t.s1f();
                      } else {
                        tmp_2 = false;
                      }
                      tmp_1 = tmp_2;
                    }
                    if (tmp_1) {
                      if (!addLastAtomic(this, tmp0__anonymous__q1qw7t, list, node)) {
                        tmp$ret$1 = Unit_getInstance();
                        break $l$block;
                      }
                      if (rootCause == null)
                        return node;
                      handle = node;
                      tmp_0 = Unit_getInstance();
                    }
                    tmp$ret$2 = tmp_0;
                  }
                }
                if (!(rootCause == null)) {
                  if (invokeImmediately)
                    invokeIt(handler, rootCause);
                  return handle;
                } else {
                  if (addLastAtomic(this, tmp0__anonymous__q1qw7t, list, node))
                    return node;
                }
              }
            } else {
              if (invokeImmediately) {
                var tmp1_safe_receiver = tmp0__anonymous__q1qw7t instanceof CompletedExceptionally ? tmp0__anonymous__q1qw7t : null;
                invokeIt(handler, tmp1_safe_receiver == null ? null : tmp1_safe_receiver.u17_1);
              }
              return NonDisposableHandle_getInstance();
            }
          }
        }
      }
    }
  };
  JobSupport.prototype.s18 = function (node) {
    {
      while (true) {
        {
          var tmp0__anonymous__q1qw7t = this.i18();
          var tmp0_subject = tmp0__anonymous__q1qw7t;
          if (tmp0_subject instanceof JobNode) {
            if (!(tmp0__anonymous__q1qw7t === node))
              return Unit_getInstance();
            if (this.i17_1.atomicfu$compareAndSet(tmp0__anonymous__q1qw7t, get_EMPTY_ACTIVE()))
              return Unit_getInstance();
          } else {
            if (!(tmp0_subject == null) ? isInterface(tmp0_subject, Incomplete) : false) {
              if (!(tmp0__anonymous__q1qw7t.o1e() == null)) {
                node.g1b();
              }
              return Unit_getInstance();
            } else {
              return Unit_getInstance();
            }
          }
        }
      }
    }
  };
  JobSupport.prototype.t18 = function () {
    return false;
  };
  JobSupport.prototype.u18 = function (cause) {
    var tmp0_elvis_lhs = cause;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$0;
      {
        var tmp0_elvis_lhs_0 = null;
        tmp$ret$0 = new JobCancellationException(tmp0_elvis_lhs_0 == null ? this.s17() : tmp0_elvis_lhs_0, null, this);
      }
      tmp = tmp$ret$0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    this.w18(tmp);
  };
  JobSupport.prototype.s17 = function () {
    return 'Job was cancelled';
  };
  JobSupport.prototype.w18 = function (cause) {
    this.z18(cause);
  };
  JobSupport.prototype.x18 = function (parentJob) {
    this.z18(parentJob);
  };
  JobSupport.prototype.y18 = function (cause) {
    if (cause instanceof CancellationException)
      return true;
    return this.z18(cause) ? this.f19() : false;
  };
  JobSupport.prototype.z18 = function (cause) {
    var finalState = get_COMPLETING_ALREADY();
    if (this.t18()) {
      finalState = cancelMakeCompleting(this, cause);
      if (finalState === get_COMPLETING_WAITING_CHILDREN())
        return true;
    }
    if (finalState === get_COMPLETING_ALREADY()) {
      finalState = makeCancelling(this, cause);
    }
    var tmp;
    if (finalState === get_COMPLETING_ALREADY()) {
      tmp = true;
    } else if (finalState === get_COMPLETING_WAITING_CHILDREN()) {
      tmp = true;
    } else if (finalState === get_TOO_LATE_TO_CANCEL()) {
      tmp = false;
    } else {
      this.z17(finalState);
      tmp = true;
    }
    return tmp;
  };
  JobSupport.prototype.a19 = function (message, cause) {
    var tmp0_elvis_lhs = message;
    return new JobCancellationException(tmp0_elvis_lhs == null ? this.s17() : tmp0_elvis_lhs, cause, this);
  };
  JobSupport.prototype.b19 = function () {
    var state = this.i18();
    var tmp0_subject = state;
    var tmp;
    if (tmp0_subject instanceof Finishing) {
      tmp = state.v1f();
    } else {
      if (tmp0_subject instanceof CompletedExceptionally) {
        tmp = state.u17_1;
      } else {
        if (!(tmp0_subject == null) ? isInterface(tmp0_subject, Incomplete) : false) {
          var tmp0_error = 'Cannot be cancelling child in this state: ' + toString(state);
          throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
        } else {
          tmp = null;
        }
      }
    }
    var rootCause = tmp;
    var tmp1_elvis_lhs = rootCause instanceof CancellationException ? rootCause : null;
    return tmp1_elvis_lhs == null ? new JobCancellationException('Parent job is ' + stateString(this, state), rootCause, this) : tmp1_elvis_lhs;
  };
  JobSupport.prototype.i1d = function (proposedUpdate) {
    {
      while (true) {
        var tmp$ret$0;
        $l$block: {
          var tmp0__anonymous__q1qw7t = this.i18();
          var finalState = tryMakeCompleting(this, tmp0__anonymous__q1qw7t, proposedUpdate);
          if (finalState === get_COMPLETING_ALREADY())
            return false;
          else if (finalState === get_COMPLETING_WAITING_CHILDREN())
            return true;
          else if (finalState === get_COMPLETING_RETRY()) {
            tmp$ret$0 = Unit_getInstance();
            break $l$block;
          } else {
            this.z17(finalState);
            return true;
          }
        }
      }
    }
  };
  JobSupport.prototype.x17 = function (proposedUpdate) {
    {
      while (true) {
        var tmp$ret$0;
        $l$block: {
          var tmp0__anonymous__q1qw7t = this.i18();
          var finalState = tryMakeCompleting(this, tmp0__anonymous__q1qw7t, proposedUpdate);
          if (finalState === get_COMPLETING_ALREADY())
            throw IllegalStateException_init_$Create$_0('Job ' + this + ' is already complete or completing, ' + ('but is being completed with ' + toString(proposedUpdate)), _get_exceptionOrNull__b3j7js(proposedUpdate, this));
          else if (finalState === get_COMPLETING_RETRY()) {
            tmp$ret$0 = Unit_getInstance();
            break $l$block;
          } else
            return finalState;
        }
      }
    }
  };
  JobSupport.prototype.c19 = function (child) {
    var tmp$ret$1;
    {
      var tmp0__get_asHandler__gq3rkj = new ChildHandleNode(child);
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0__get_asHandler__gq3rkj;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    var tmp = this.r18(true, false, tmp$ret$1, 2, null);
    return isInterface(tmp, ChildHandle) ? tmp : THROW_CCE();
  };
  JobSupport.prototype.a18 = function (exception) {
    throw exception;
  };
  JobSupport.prototype.d19 = function (cause) {
  };
  JobSupport.prototype.e19 = function () {
    return false;
  };
  JobSupport.prototype.f19 = function () {
    return true;
  };
  JobSupport.prototype.g19 = function (exception) {
    return false;
  };
  JobSupport.prototype.t17 = function (state) {
  };
  JobSupport.prototype.z17 = function (state) {
  };
  JobSupport.prototype.toString = function () {
    return this.h19() + '@' + get_hexAddress(this);
  };
  JobSupport.prototype.h19 = function () {
    return this.b18() + '{' + stateString(this, this.i18()) + '}';
  };
  JobSupport.prototype.b18 = function () {
    return get_classSimpleName(this);
  };
  JobSupport.prototype.v19 = function () {
    var state = this.i18();
    {
      {
      }
      if (!!(!(state == null) ? isInterface(state, Incomplete) : false)) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'This job has not completed yet';
        }
        var message = tmp$ret$0;
        throw IllegalStateException_init_$Create$(toString_0(message));
      }
    }
    if (state instanceof CompletedExceptionally)
      throw state.u17_1;
    return unboxState(state);
  };
  JobSupport.prototype.f1d = function ($cont) {
    $l$loop: while (true) {
      var state = this.i18();
      if (!(!(state == null) ? isInterface(state, Incomplete) : false)) {
        if (state instanceof CompletedExceptionally) {
          {
            var tmp0_recoverAndThrow = state.u17_1;
            throw tmp0_recoverAndThrow;
          }
        }
        return unboxState(state);
      }
      if (startInternal(this, state) >= 0)
        break $l$loop;
    }
    return awaitSuspend(this, $cont);
  };
  JobSupport.prototype.x19 = function (select, block) {
    {
      while (true) {
        {
          var tmp0__anonymous__q1qw7t = this.i18();
          if (select.t1g())
            return Unit_getInstance();
          if (!(!(tmp0__anonymous__q1qw7t == null) ? isInterface(tmp0__anonymous__q1qw7t, Incomplete) : false)) {
            if (select.w1g()) {
              if (tmp0__anonymous__q1qw7t instanceof CompletedExceptionally) {
                select.v1g(tmp0__anonymous__q1qw7t.u17_1);
              } else {
                var tmp = unboxState(tmp0__anonymous__q1qw7t);
                startCoroutineUnintercepted(block, (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE(), select.u1g());
              }
            }
            return Unit_getInstance();
          }
          if (startInternal(this, tmp0__anonymous__q1qw7t) === 0) {
            var tmp$ret$1;
            {
              var tmp0__get_asHandler__gq3rkj = new SelectAwaitOnCompletion(select, block);
              var tmp$ret$0;
              {
                tmp$ret$0 = tmp0__get_asHandler__gq3rkj;
              }
              tmp$ret$1 = tmp$ret$0;
            }
            select.x1g(this.p18(tmp$ret$1));
            return Unit_getInstance();
          }
        }
      }
    }
  };
  JobSupport.prototype.i19 = function (select, block) {
    var state = this.i18();
    if (state instanceof CompletedExceptionally)
      select.v1g(state.u17_1);
    else {
      var tmp = unboxState(state);
      var tmp_0 = (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
      var tmp_1 = select.u1g();
      startCoroutineCancellable$default(block, tmp_0, tmp_1, null, 4, null);
    }
  };
  JobSupport.$metadata$ = classMeta('JobSupport', [Job, ChildJob, ParentJob, SelectClause0]);
  function boxIncomplete(_this__u8e3s4) {
    init_properties_JobSupport_kt_iaxwag();
    var tmp;
    if (!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Incomplete) : false) {
      tmp = new IncompleteStateBox(_this__u8e3s4);
    } else {
      tmp = _this__u8e3s4;
    }
    return tmp;
  }
  function JobCancellingNode() {
    JobNode.call(this);
  }
  JobCancellingNode.$metadata$ = classMeta('JobCancellingNode', undefined, undefined, undefined, undefined, JobNode.prototype);
  function get_FALSE() {
    return FALSE;
  }
  var FALSE;
  function get_TRUE() {
    return TRUE;
  }
  var TRUE;
  function InactiveNodeList(list) {
    this.r1f_1 = list;
  }
  InactiveNodeList.prototype.o1e = function () {
    return this.r1f_1;
  };
  InactiveNodeList.prototype.p17 = function () {
    return false;
  };
  InactiveNodeList.prototype.toString = function () {
    return get_DEBUG() ? this.r1f_1.s1e('New') : anyToString(this);
  };
  InactiveNodeList.$metadata$ = classMeta('InactiveNodeList', [Incomplete]);
  function ChildHandleNode(childJob) {
    JobCancellingNode.call(this);
    this.b1g_1 = childJob;
  }
  ChildHandleNode.prototype.m1a = function (cause) {
    return this.b1g_1.x18(this.j1f());
  };
  ChildHandleNode.prototype.invoke = function (cause) {
    return this.m1a(cause);
  };
  ChildHandleNode.prototype.y18 = function (cause) {
    return this.j1f().y18(cause);
  };
  ChildHandleNode.$metadata$ = classMeta('ChildHandleNode', [ChildHandle], undefined, undefined, undefined, JobCancellingNode.prototype);
  function InvokeOnCancelling(handler) {
    JobCancellingNode.call(this);
    this.c1h_1 = handler;
    this.d1h_1 = atomic$int$1(0);
  }
  InvokeOnCancelling.prototype.m1a = function (cause) {
    if (this.d1h_1.atomicfu$compareAndSet(0, 1))
      this.c1h_1(cause);
  };
  InvokeOnCancelling.prototype.invoke = function (cause) {
    return this.m1a(cause);
  };
  InvokeOnCancelling.$metadata$ = classMeta('InvokeOnCancelling', undefined, undefined, undefined, undefined, JobCancellingNode.prototype);
  function InvokeOnCompletion(handler) {
    JobNode.call(this);
    this.i1h_1 = handler;
  }
  InvokeOnCompletion.prototype.m1a = function (cause) {
    return this.i1h_1(cause);
  };
  InvokeOnCompletion.prototype.invoke = function (cause) {
    return this.m1a(cause);
  };
  InvokeOnCompletion.$metadata$ = classMeta('InvokeOnCompletion', undefined, undefined, undefined, undefined, JobNode.prototype);
  function unboxState(_this__u8e3s4) {
    init_properties_JobSupport_kt_iaxwag();
    var tmp0_safe_receiver = _this__u8e3s4 instanceof IncompleteStateBox ? _this__u8e3s4 : null;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.j1h_1;
    return tmp1_elvis_lhs == null ? _this__u8e3s4 : tmp1_elvis_lhs;
  }
  function ResumeAwaitOnCompletion(continuation) {
    JobNode.call(this);
    this.o1h_1 = continuation;
  }
  ResumeAwaitOnCompletion.prototype.m1a = function (cause) {
    var state = this.j1f().i18();
    {
    }
    if (state instanceof CompletedExceptionally) {
      var tmp$ret$1;
      {
        var tmp0_resumeWithException = this.o1h_1;
        var tmp1_resumeWithException = state.u17_1;
        var tmp$ret$0;
        {
          var tmp0_failure = Companion_getInstance_0();
          tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(tmp1_resumeWithException));
        }
        tmp$ret$1 = tmp0_resumeWithException.q4(tmp$ret$0);
      }
    } else {
      var tmp$ret$3;
      {
        var tmp2_resume = this.o1h_1;
        var tmp = unboxState(state);
        var tmp3_resume = (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
        var tmp$ret$2;
        {
          var tmp0_success = Companion_getInstance_0();
          tmp$ret$2 = _Result___init__impl__xyqfz8(tmp3_resume);
        }
        tmp$ret$3 = tmp2_resume.q4(tmp$ret$2);
      }
    }
  };
  ResumeAwaitOnCompletion.prototype.invoke = function (cause) {
    return this.m1a(cause);
  };
  ResumeAwaitOnCompletion.$metadata$ = classMeta('ResumeAwaitOnCompletion', undefined, undefined, undefined, undefined, JobNode.prototype);
  function SelectAwaitOnCompletion(select, block) {
    JobNode.call(this);
    this.t1h_1 = select;
    this.u1h_1 = block;
  }
  SelectAwaitOnCompletion.prototype.m1a = function (cause) {
    if (this.t1h_1.w1g())
      this.j1f().i19(this.t1h_1, this.u1h_1);
  };
  SelectAwaitOnCompletion.prototype.invoke = function (cause) {
    return this.m1a(cause);
  };
  SelectAwaitOnCompletion.$metadata$ = classMeta('SelectAwaitOnCompletion', undefined, undefined, undefined, undefined, JobNode.prototype);
  function IncompleteStateBox(state) {
    this.j1h_1 = state;
  }
  IncompleteStateBox.$metadata$ = classMeta('IncompleteStateBox');
  function ChildContinuation(child) {
    JobCancellingNode.call(this);
    this.z1h_1 = child;
  }
  ChildContinuation.prototype.m1a = function (cause) {
    this.z1h_1.g1c(this.z1h_1.h1c(this.j1f()));
  };
  ChildContinuation.prototype.invoke = function (cause) {
    return this.m1a(cause);
  };
  ChildContinuation.$metadata$ = classMeta('ChildContinuation', undefined, undefined, undefined, undefined, JobCancellingNode.prototype);
  function handlesException($this) {
    var tmp = $this.h18();
    var tmp0_safe_receiver = tmp instanceof ChildHandleNode ? tmp : null;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.j1f();
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      return false;
    } else {
      tmp_0 = tmp1_elvis_lhs;
    }
    var parentJob = tmp_0;
    while (true) {
      if (parentJob.f19())
        return true;
      var tmp_1 = parentJob.h18();
      var tmp2_safe_receiver = tmp_1 instanceof ChildHandleNode ? tmp_1 : null;
      var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.j1f();
      var tmp_2;
      if (tmp3_elvis_lhs == null) {
        return false;
      } else {
        tmp_2 = tmp3_elvis_lhs;
      }
      parentJob = tmp_2;
    }
  }
  function JobImpl(parent) {
    JobSupport.call(this, true);
    this.k17(parent);
    this.c1i_1 = handlesException(this);
  }
  JobImpl.prototype.t18 = function () {
    return true;
  };
  JobImpl.prototype.f19 = function () {
    return this.c1i_1;
  };
  JobImpl.$metadata$ = classMeta('JobImpl', [CompletableJob], undefined, undefined, undefined, JobSupport.prototype);
  var properties_initialized_JobSupport_kt_5iq8a4;
  function init_properties_JobSupport_kt_iaxwag() {
    if (properties_initialized_JobSupport_kt_5iq8a4) {
    } else {
      properties_initialized_JobSupport_kt_5iq8a4 = true;
      COMPLETING_ALREADY = new Symbol('COMPLETING_ALREADY');
      COMPLETING_WAITING_CHILDREN = new Symbol('COMPLETING_WAITING_CHILDREN');
      COMPLETING_RETRY = new Symbol('COMPLETING_RETRY');
      TOO_LATE_TO_CANCEL = new Symbol('TOO_LATE_TO_CANCEL');
      SEALED = new Symbol('SEALED');
      EMPTY_NEW = new Empty(false);
      EMPTY_ACTIVE = new Empty(true);
    }
  }
  function MainCoroutineDispatcher() {
    CoroutineDispatcher.call(this);
  }
  MainCoroutineDispatcher.prototype.toString = function () {
    var tmp0_elvis_lhs = this.f1i();
    return tmp0_elvis_lhs == null ? get_classSimpleName(this) + '@' + get_hexAddress(this) : tmp0_elvis_lhs;
  };
  MainCoroutineDispatcher.prototype.f1i = function () {
    var main = Dispatchers_getInstance().k1i();
    if (this === main)
      return 'Dispatchers.Main';
    var tmp;
    try {
      tmp = main.e1i();
    } catch ($p) {
      var tmp_0;
      if ($p instanceof UnsupportedOperationException) {
        tmp_0 = null;
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    var immediate = tmp;
    if (this === immediate)
      return 'Dispatchers.Main.immediate';
    return null;
  };
  MainCoroutineDispatcher.$metadata$ = classMeta('MainCoroutineDispatcher', undefined, undefined, undefined, undefined, CoroutineDispatcher.prototype);
  function TimeoutCancellationException() {
  }
  TimeoutCancellationException.$metadata$ = classMeta('TimeoutCancellationException', [CopyableThrowable], undefined, undefined, undefined, CancellationException.prototype);
  function Unconfined() {
    Unconfined_instance = this;
    CoroutineDispatcher.call(this);
  }
  Unconfined.prototype.m1d = function (context) {
    return false;
  };
  Unconfined.prototype.n1d = function (context, block) {
    var yieldContext = context.f8(Key_getInstance_3());
    if (!(yieldContext == null)) {
      yieldContext.n1i_1 = true;
      return Unit_getInstance();
    }
    throw UnsupportedOperationException_init_$Create$('Dispatchers.Unconfined.dispatch function can only be used by the yield function. If you wrap Unconfined dispatcher in your code, make sure you properly delegate isDispatchNeeded and dispatch calls.');
  };
  Unconfined.prototype.toString = function () {
    return 'Dispatchers.Unconfined';
  };
  Unconfined.$metadata$ = objectMeta('Unconfined', undefined, undefined, undefined, undefined, CoroutineDispatcher.prototype);
  var Unconfined_instance;
  function Unconfined_getInstance() {
    if (Unconfined_instance == null)
      new Unconfined();
    return Unconfined_instance;
  }
  function Key_3() {
    Key_instance_2 = this;
  }
  Key_3.$metadata$ = objectMeta('Key', [Key]);
  var Key_instance_2;
  function Key_getInstance_3() {
    if (Key_instance_2 == null)
      new Key_3();
    return Key_instance_2;
  }
  function get_EMPTY() {
    init_properties_AbstractChannel_kt_mjk5bh();
    return EMPTY;
  }
  var EMPTY;
  function get_OFFER_SUCCESS() {
    init_properties_AbstractChannel_kt_mjk5bh();
    return OFFER_SUCCESS;
  }
  var OFFER_SUCCESS;
  function get_OFFER_FAILED() {
    init_properties_AbstractChannel_kt_mjk5bh();
    return OFFER_FAILED;
  }
  var OFFER_FAILED;
  function get_POLL_FAILED() {
    init_properties_AbstractChannel_kt_mjk5bh();
    return POLL_FAILED;
  }
  var POLL_FAILED;
  function get_ENQUEUE_FAILED() {
    init_properties_AbstractChannel_kt_mjk5bh();
    return ENQUEUE_FAILED;
  }
  var ENQUEUE_FAILED;
  var HANDLER_INVOKED;
  function hasNextResult($this, result) {
    if (result instanceof Closed) {
      if (!(result.r1i_1 == null))
        throw recoverStackTrace_0(result.s1i());
      return false;
    }
    return true;
  }
  function hasNextSuspend($this, $cont) {
    var tmp$ret$5;
    {
      var tmp0__anonymous__q1qw7t = $cont;
      var cancellable = getOrCreateCancellableContinuation(intercepted(tmp0__anonymous__q1qw7t));
      var tmp$ret$0;
      $l$block_1: {
        var receive = new ReceiveHasNext($this, cancellable);
        while (true) {
          if (enqueueReceive($this.t1i_1, receive)) {
            removeReceiveOnCancel($this.t1i_1, cancellable, receive);
            tmp$ret$0 = Unit_getInstance();
            break $l$block_1;
          }
          var result = $this.t1i_1.y1i();
          $this.u1i_1 = result;
          if (result instanceof Closed) {
            if (result.r1i_1 == null) {
              var tmp$ret$2;
              {
                var tmp$ret$1;
                {
                  var tmp0_success = Companion_getInstance_0();
                  tmp$ret$1 = _Result___init__impl__xyqfz8(false);
                }
                tmp$ret$2 = cancellable.q4(tmp$ret$1);
              }
            } else {
              var tmp$ret$4;
              {
                var tmp0_resumeWithException = result.s1i();
                var tmp$ret$3;
                {
                  var tmp0_failure = Companion_getInstance_0();
                  tmp$ret$3 = _Result___init__impl__xyqfz8(createFailure(tmp0_resumeWithException));
                }
                tmp$ret$4 = cancellable.q4(tmp$ret$3);
              }
            }
            tmp$ret$0 = Unit_getInstance();
            break $l$block_1;
          }
          if (!(result === get_POLL_FAILED())) {
            var tmp0_safe_receiver = $this.t1i_1.c1j();
            var tmp;
            if (tmp0_safe_receiver == null) {
              tmp = null;
            } else {
              tmp = bindCancellationFun(tmp0_safe_receiver, (result == null ? true : isObject(result)) ? result : THROW_CCE(), cancellable.s4());
            }
            cancellable.k1a(true, tmp);
            tmp$ret$0 = Unit_getInstance();
            break $l$block_1;
          }
        }
      }
      tmp$ret$5 = cancellable.i1c();
    }
    return tmp$ret$5;
  }
  function enqueueReceive($this, receive) {
    var tmp$ret$0;
    {
      var tmp0_also = $this.d1j(receive);
      {
      }
      {
        if (tmp0_also)
          $this.e1j();
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  }
  function TryPollDesc(queue) {
    RemoveFirstDesc.call(this, queue);
  }
  TryPollDesc.prototype.i1j = function (affected) {
    var tmp0_subject = affected;
    var tmp;
    if (tmp0_subject instanceof Closed) {
      tmp = affected;
    } else {
      if (!(tmp0_subject instanceof Send)) {
        tmp = get_POLL_FAILED();
      } else {
        tmp = null;
      }
    }
    return tmp;
  };
  TryPollDesc.prototype.j1j = function (prepareOp) {
    var tmp = prepareOp.k1j_1;
    var affected = tmp instanceof Send ? tmp : THROW_CCE();
    var tmp0_elvis_lhs = affected.q1j(prepareOp);
    var tmp_0;
    if (tmp0_elvis_lhs == null) {
      return get_REMOVE_PREPARED();
    } else {
      tmp_0 = tmp0_elvis_lhs;
    }
    var token = tmp_0;
    if (token === get_RETRY_ATOMIC())
      return get_RETRY_ATOMIC();
    {
    }
    return null;
  };
  TryPollDesc.$metadata$ = classMeta('TryPollDesc', undefined, undefined, undefined, undefined, RemoveFirstDesc.prototype);
  function registerSelectReceiveMode($this, select, receiveMode, block) {
    while (true) {
      if (select.t1g())
        return Unit_getInstance();
      if ($this.c1k()) {
        if (enqueueReceiveSelect($this, select, block, receiveMode))
          return Unit_getInstance();
      } else {
        var pollResult = $this.b1k(select);
        if (pollResult === get_ALREADY_SELECTED())
          return Unit_getInstance();
        else if (pollResult === get_POLL_FAILED()) {
        } else if (pollResult === get_RETRY_ATOMIC()) {
        } else
          tryStartBlockUnintercepted(block, $this, select, receiveMode, pollResult);
      }
    }
  }
  function tryStartBlockUnintercepted(_this__u8e3s4, $this, select, receiveMode, value) {
    var tmp0_subject = value;
    if (tmp0_subject instanceof Closed) {
      var tmp1_subject = receiveMode;
      if (tmp1_subject === 0) {
        throw recoverStackTrace_0(value.s1i());
      } else if (tmp1_subject === 1) {
        if (!select.w1g())
          return Unit_getInstance();
        startCoroutineUnintercepted(_this__u8e3s4, new ChannelResult(Companion_getInstance_1().f1k(value.r1i_1)), select.u1g());
      }
    } else {
      if (receiveMode === 1) {
        var tmp$ret$0;
        {
          var tmp;
          if (value instanceof Closed) {
            tmp = Companion_getInstance_1().f1k(value.r1i_1);
          } else {
            var tmp_0 = Companion_getInstance_1();
            tmp = tmp_0.e1k((value == null ? true : isObject(value)) ? value : THROW_CCE());
          }
          tmp$ret$0 = tmp;
        }
        startCoroutineUnintercepted(_this__u8e3s4, new ChannelResult(tmp$ret$0), select.u1g());
      } else {
        startCoroutineUnintercepted(_this__u8e3s4, value, select.u1g());
      }
    }
  }
  function enqueueReceiveSelect($this, select, block, receiveMode) {
    var node = new ReceiveSelect($this, select, block, receiveMode);
    var result = enqueueReceive($this, node);
    if (result)
      select.x1g(node);
    return result;
  }
  function removeReceiveOnCancel($this, cont, receive) {
    var tmp$ret$1;
    {
      var tmp0__get_asHandler__gq3rkj = new RemoveReceiveOnCancel($this, receive);
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0__get_asHandler__gq3rkj;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return cont.i1a(tmp$ret$1);
  }
  function RemoveReceiveOnCancel($outer, receive) {
    this.h1k_1 = $outer;
    BeforeResumeCancelHandler.call(this);
    this.g1k_1 = receive;
  }
  RemoveReceiveOnCancel.prototype.m1a = function (cause) {
    if (this.g1k_1.g1b())
      this.h1k_1.i1k();
  };
  RemoveReceiveOnCancel.prototype.invoke = function (cause) {
    return this.m1a(cause);
  };
  RemoveReceiveOnCancel.prototype.toString = function () {
    return 'RemoveReceiveOnCancel[' + this.g1k_1 + ']';
  };
  RemoveReceiveOnCancel.$metadata$ = classMeta('RemoveReceiveOnCancel', undefined, undefined, undefined, undefined, BeforeResumeCancelHandler.prototype);
  function Itr(channel) {
    this.t1i_1 = channel;
    this.u1i_1 = get_POLL_FAILED();
  }
  Itr.prototype.j1k = function () {
    return this.t1i_1;
  };
  Itr.prototype.k1k = function (_set____db54di) {
    this.u1i_1 = _set____db54di;
  };
  Itr.prototype.l1k = function ($cont) {
    if (!(this.u1i_1 === get_POLL_FAILED()))
      return hasNextResult(this, this.u1i_1);
    this.u1i_1 = this.t1i_1.y1i();
    if (!(this.u1i_1 === get_POLL_FAILED()))
      return hasNextResult(this, this.u1i_1);
    return hasNextSuspend(this, $cont);
  };
  Itr.prototype.o = function () {
    var result = this.u1i_1;
    if (result instanceof Closed)
      throw recoverStackTrace_0(result.s1i());
    if (!(result === get_POLL_FAILED())) {
      this.u1i_1 = get_POLL_FAILED();
      return (result == null ? true : isObject(result)) ? result : THROW_CCE();
    }
    throw IllegalStateException_init_$Create$("'hasNext' should be called prior to 'next' invocation");
  };
  Itr.$metadata$ = classMeta('Itr', [ChannelIterator]);
  function ReceiveHasNext(iterator, cont) {
    Receive.call(this);
    this.p1k_1 = iterator;
    this.q1k_1 = cont;
  }
  ReceiveHasNext.prototype.r1k = function (value, otherOp) {
    var tmp0_safe_receiver = otherOp;
    var tmp1_elvis_lhs = this.q1k_1.f1a(true, tmp0_safe_receiver == null ? null : tmp0_safe_receiver.l1j_1, this.s1k(value));
    var tmp;
    if (tmp1_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp1_elvis_lhs;
    }
    var token = tmp;
    {
    }
    var tmp2_safe_receiver = otherOp;
    if (tmp2_safe_receiver == null)
      null;
    else {
      tmp2_safe_receiver.t1k();
    }
    return get_RESUME_TOKEN();
  };
  ReceiveHasNext.prototype.u1k = function (value) {
    this.p1k_1.u1i_1 = value;
    this.q1k_1.h1a(get_RESUME_TOKEN());
  };
  ReceiveHasNext.prototype.v1k = function (closed) {
    var tmp;
    if (closed.r1i_1 == null) {
      tmp = this.q1k_1.e1a(false, null, 2, null);
    } else {
      tmp = this.q1k_1.g1a(closed.s1i());
    }
    var token = tmp;
    if (!(token == null)) {
      this.p1k_1.u1i_1 = closed;
      this.q1k_1.h1a(token);
    }
  };
  ReceiveHasNext.prototype.s1k = function (value) {
    var tmp0_safe_receiver = this.p1k_1.t1i_1.c1j();
    return tmp0_safe_receiver == null ? null : bindCancellationFun(tmp0_safe_receiver, value, this.q1k_1.s4());
  };
  ReceiveHasNext.prototype.toString = function () {
    return 'ReceiveHasNext@' + get_hexAddress(this);
  };
  ReceiveHasNext.$metadata$ = classMeta('ReceiveHasNext', undefined, undefined, undefined, undefined, Receive.prototype);
  function ReceiveSelect(channel, select, block, receiveMode) {
    Receive.call(this);
    this.e1l_1 = channel;
    this.f1l_1 = select;
    this.g1l_1 = block;
    this.h1l_1 = receiveMode;
  }
  ReceiveSelect.prototype.r1k = function (value, otherOp) {
    var tmp = this.f1l_1.i1l(otherOp);
    return (tmp == null ? true : tmp instanceof Symbol) ? tmp : THROW_CCE();
  };
  ReceiveSelect.prototype.u1k = function (value) {
    startCoroutineCancellable(this.g1l_1, this.h1l_1 === 1 ? new ChannelResult(Companion_getInstance_1().e1k(value)) : value, this.f1l_1.u1g(), this.s1k(value));
  };
  ReceiveSelect.prototype.v1k = function (closed) {
    if (!this.f1l_1.w1g())
      return Unit_getInstance();
    var tmp0_subject = this.h1l_1;
    if (tmp0_subject === 0)
      this.f1l_1.v1g(closed.s1i());
    else if (tmp0_subject === 1) {
      var tmp = new ChannelResult(Companion_getInstance_1().f1k(closed.r1i_1));
      var tmp_0 = this.f1l_1.u1g();
      startCoroutineCancellable$default(this.g1l_1, tmp, tmp_0, null, 4, null);
    }
  };
  ReceiveSelect.prototype.n1a = function () {
    if (this.g1b())
      this.e1l_1.i1k();
  };
  ReceiveSelect.prototype.s1k = function (value) {
    var tmp0_safe_receiver = this.e1l_1.c1j();
    return tmp0_safe_receiver == null ? null : bindCancellationFun(tmp0_safe_receiver, value, this.f1l_1.u1g().s4());
  };
  ReceiveSelect.prototype.toString = function () {
    return 'ReceiveSelect@' + get_hexAddress(this) + '[' + this.f1l_1 + ',receiveMode=' + this.h1l_1 + ']';
  };
  ReceiveSelect.$metadata$ = classMeta('ReceiveSelect', [DisposableHandle], undefined, undefined, undefined, Receive.prototype);
  function AbstractChannel$onReceive$1(this$0) {
    this.j1l_1 = this$0;
  }
  AbstractChannel$onReceive$1.prototype.k1l = function (select, block) {
    registerSelectReceiveMode(this.j1l_1, select, 0, isSuspendFunction(block, 1) ? block : THROW_CCE());
  };
  AbstractChannel$onReceive$1.prototype.y19 = function (select, block) {
    return this.k1l(select, block);
  };
  AbstractChannel$onReceive$1.$metadata$ = classMeta(undefined, [SelectClause1]);
  function AbstractChannel(onUndeliveredElement) {
    AbstractSendChannel.call(this, onUndeliveredElement);
  }
  AbstractChannel.prototype.y1i = function () {
    while (true) {
      var tmp0_elvis_lhs = this.n1l();
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return get_POLL_FAILED();
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var send = tmp;
      var token = send.q1j(null);
      if (!(token == null)) {
        {
        }
        send.o1l();
        return send.p1l();
      }
      send.q1l();
    }
  };
  AbstractChannel.prototype.b1k = function (select) {
    var pollOp = this.r1l();
    var failure = select.s1l(pollOp);
    if (!(failure == null))
      return failure;
    var send = pollOp.u1j();
    send.o1l();
    return pollOp.u1j().p1l();
  };
  AbstractChannel.prototype.c1k = function () {
    var tmp;
    var tmp$ret$0;
    {
      var tmp0__get_nextNode__vg4li4 = this.t1l();
      tmp$ret$0 = tmp0__get_nextNode__vg4li4.d1b_1;
    }
    var tmp_0 = tmp$ret$0;
    if (!(tmp_0 instanceof Send)) {
      tmp = this.m1l();
    } else {
      tmp = false;
    }
    return tmp;
  };
  AbstractChannel.prototype.d1j = function (receive) {
    var tmp;
    if (this.l1l()) {
      var tmp$ret$1;
      $l$block: {
        var tmp0_addLastIfPrev = this.t1l();
        var tmp$ret$0;
        {
          var tmp1__anonymous__uwfjfc = tmp0_addLastIfPrev.e1b_1;
          tmp$ret$0 = !(tmp1__anonymous__uwfjfc instanceof Send);
        }
        if (!tmp$ret$0) {
          tmp$ret$1 = false;
          break $l$block;
        }
        tmp0_addLastIfPrev.a1f(receive);
        tmp$ret$1 = true;
      }
      tmp = tmp$ret$1;
    } else {
      var tmp$ret$3;
      $l$block_1: {
        var tmp2_addLastIfPrevAndIf = this.t1l();
        var tmp$ret$2;
        {
          var tmp3__anonymous__ufb84q = tmp2_addLastIfPrevAndIf.e1b_1;
          tmp$ret$2 = !(tmp3__anonymous__ufb84q instanceof Send);
        }
        if (!tmp$ret$2) {
          tmp$ret$3 = false;
          break $l$block_1;
        }
        var tmp$ret$4;
        {
          tmp$ret$4 = this.m1l();
        }
        if (!tmp$ret$4) {
          tmp$ret$3 = false;
          break $l$block_1;
        }
        tmp2_addLastIfPrevAndIf.a1f(receive);
        tmp$ret$3 = true;
      }
      tmp = tmp$ret$3;
    }
    return tmp;
  };
  AbstractChannel.prototype.h = function () {
    return new Itr(this);
  };
  AbstractChannel.prototype.r1l = function () {
    return new TryPollDesc(this.t1l());
  };
  AbstractChannel.prototype.u1l = function () {
    return new AbstractChannel$onReceive$1(this);
  };
  AbstractChannel.prototype.v1l = function () {
    var tmp$ret$0;
    {
      var tmp0_also = AbstractSendChannel.prototype.v1l.call(this);
      {
      }
      {
        var tmp;
        if (!(tmp0_also == null)) {
          tmp = !(tmp0_also instanceof Closed);
        } else {
          tmp = false;
        }
        if (tmp)
          this.i1k();
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  AbstractChannel.prototype.e1j = function () {
  };
  AbstractChannel.prototype.i1k = function () {
  };
  AbstractChannel.$metadata$ = classMeta('AbstractChannel', [Channel], undefined, undefined, undefined, AbstractSendChannel.prototype);
  function _get_isFullImpl__v905xu($this) {
    var tmp;
    var tmp$ret$0;
    {
      var tmp0__get_nextNode__vg4li4 = $this.a1j_1;
      tmp$ret$0 = tmp0__get_nextNode__vg4li4.d1b_1;
    }
    var tmp_0 = tmp$ret$0;
    if (!isInterface(tmp_0, ReceiveOrClosed)) {
      tmp = $this.x1l();
    } else {
      tmp = false;
    }
    return tmp;
  }
  function sendSuspend($this, element, $cont) {
    var tmp$ret$3;
    {
      var tmp0__anonymous__q1qw7t = $cont;
      var cancellable = getOrCreateCancellableContinuation(intercepted(tmp0__anonymous__q1qw7t));
      var tmp$ret$0;
      $l$block_2: {
        loop: while (true) {
          if (_get_isFullImpl__v905xu($this)) {
            var send = $this.z1i_1 == null ? new SendElement(element, cancellable) : new SendElementWithUndeliveredHandler(element, cancellable, $this.z1i_1);
            var enqueueResult = $this.a1m(send);
            if (enqueueResult == null) {
              removeOnCancellation(cancellable, send);
              tmp$ret$0 = Unit_getInstance();
              break $l$block_2;
            } else {
              if (enqueueResult instanceof Closed) {
                helpCloseAndResumeWithSendException(cancellable, $this, element, enqueueResult);
                tmp$ret$0 = Unit_getInstance();
                break $l$block_2;
              } else {
                if (enqueueResult === get_ENQUEUE_FAILED()) {
                } else {
                  if (enqueueResult instanceof Receive) {
                  } else {
                    var tmp0_error = 'enqueueSend returned ' + toString(enqueueResult);
                    throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
                  }
                }
              }
            }
          }
          var offerResult = $this.y1l(element);
          if (offerResult === get_OFFER_SUCCESS()) {
            var tmp$ret$2;
            {
              var tmp$ret$1;
              {
                var tmp0_success = Companion_getInstance_0();
                tmp$ret$1 = _Result___init__impl__xyqfz8(Unit_getInstance());
              }
              tmp$ret$2 = cancellable.q4(tmp$ret$1);
            }
            tmp$ret$0 = Unit_getInstance();
            break $l$block_2;
          } else {
            if (offerResult === get_OFFER_FAILED())
              continue loop;
            else {
              if (offerResult instanceof Closed) {
                helpCloseAndResumeWithSendException(cancellable, $this, element, offerResult);
                tmp$ret$0 = Unit_getInstance();
                break $l$block_2;
              } else {
                var tmp1_error = 'offerInternal returned ' + toString_0(offerResult);
                throw IllegalStateException_init_$Create$(toString_0(tmp1_error));
              }
            }
          }
        }
      }
      tmp$ret$3 = cancellable.i1c();
    }
    return tmp$ret$3;
  }
  function helpCloseAndResumeWithSendException(_this__u8e3s4, $this, element, closed) {
    helpClose($this, closed);
    var sendException = closed.d1m();
    var tmp0_safe_receiver = $this.z1i_1;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      tmp = callUndeliveredElementCatchingException$default(tmp0_safe_receiver, element, null, 2, null);
    }
    var tmp1_safe_receiver = tmp;
    if (tmp1_safe_receiver == null)
      null;
    else {
      var tmp$ret$2;
      {
        {
        }
        addSuppressed(tmp1_safe_receiver, sendException);
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            var tmp0_failure = Companion_getInstance_0();
            tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(tmp1_safe_receiver));
          }
          tmp$ret$1 = _this__u8e3s4.q4(tmp$ret$0);
        }
        return Unit_getInstance();
      }
    }
    var tmp$ret$4;
    {
      var tmp$ret$3;
      {
        var tmp0_failure_0 = Companion_getInstance_0();
        tmp$ret$3 = _Result___init__impl__xyqfz8(createFailure(sendException));
      }
      tmp$ret$4 = _this__u8e3s4.q4(tmp$ret$3);
    }
  }
  function helpClose($this, closed) {
    var closedList = _InlineList___init__impl__z8n56_0(null, 1, null);
    $l$loop_0: while (true) {
      var tmp$ret$0;
      {
        tmp$ret$0 = closed.e1b_1;
      }
      var tmp = tmp$ret$0;
      var tmp0_elvis_lhs = tmp instanceof Receive ? tmp : null;
      var tmp_0;
      if (tmp0_elvis_lhs == null) {
        break $l$loop_0;
      } else {
        tmp_0 = tmp0_elvis_lhs;
      }
      var previous = tmp_0;
      if (!previous.g1b()) {
        previous.a1l();
        continue $l$loop_0;
      }
      closedList = InlineList__plus_impl_nuetvo(closedList, previous);
    }
    var tmp$ret$1;
    $l$block: {
      var tmp0_forEachReversed = closedList;
      var tmp0_subject = _get_holder__f6h5pd(tmp0_forEachReversed);
      if (tmp0_subject == null) {
        tmp$ret$1 = Unit_getInstance();
        break $l$block;
      } else {
        if (!(tmp0_subject instanceof ArrayList)) {
          var tmp_1 = _get_holder__f6h5pd(tmp0_forEachReversed);
          var tmp1__anonymous__uwfjfc = (tmp_1 == null ? true : isObject(tmp_1)) ? tmp_1 : THROW_CCE();
          tmp1__anonymous__uwfjfc.v1k(closed);
        } else {
          var tmp_2 = _get_holder__f6h5pd(tmp0_forEachReversed);
          var list = tmp_2 instanceof ArrayList ? tmp_2 : THROW_CCE();
          var inductionVariable = list.m() - 1 | 0;
          if (0 <= inductionVariable)
            do {
              var i = inductionVariable;
              inductionVariable = inductionVariable + -1 | 0;
              {
                var tmp2__anonymous__z9zvc9 = list.r(i);
                tmp2__anonymous__z9zvc9.v1k(closed);
              }
            }
             while (0 <= inductionVariable);
        }
      }
    }
    $this.b1m(closed);
  }
  function _get_queueDebugStateString__k7jj75($this) {
    var tmp$ret$0;
    {
      var tmp0__get_nextNode__vg4li4 = $this.a1j_1;
      tmp$ret$0 = tmp0__get_nextNode__vg4li4.d1b_1;
    }
    var head = tmp$ret$0;
    if (head === $this.a1j_1)
      return 'EmptyQueue';
    var tmp0_subject = head;
    var tmp;
    if (tmp0_subject instanceof Closed) {
      tmp = toString_0(head);
    } else {
      if (tmp0_subject instanceof Receive) {
        tmp = 'ReceiveQueued';
      } else {
        if (tmp0_subject instanceof Send) {
          tmp = 'SendQueued';
        } else {
          tmp = 'UNEXPECTED:' + head;
        }
      }
    }
    var result = tmp;
    var tmp$ret$1;
    {
      var tmp1__get_prevNode__b1i0ed = $this.a1j_1;
      tmp$ret$1 = tmp1__get_prevNode__b1i0ed.e1b_1;
    }
    var tail = tmp$ret$1;
    if (!(tail === head)) {
      result = result + (',queueSize=' + countQueueSize($this));
      if (tail instanceof Closed)
        result = result + (',closedForSend=' + tail);
    }
    return result;
  }
  function countQueueSize($this) {
    var size = 0;
    {
      var tmp0_forEach = $this.a1j_1;
      var cur = tmp0_forEach.t1e();
      while (!equals(cur, tmp0_forEach)) {
        if (cur instanceof LinkedListNode) {
          var tmp1__anonymous__uwfjfc = cur;
          var tmp0 = size;
          size = tmp0 + 1 | 0;
        }
        cur = cur.d1b_1;
      }
    }
    return size;
  }
  function SendBuffered(element) {
    Send.call(this);
    this.h1m_1 = element;
  }
  SendBuffered.prototype.p1l = function () {
    return this.h1m_1;
  };
  SendBuffered.prototype.q1j = function (otherOp) {
    var tmp$ret$0;
    {
      var tmp0_also = get_RESUME_TOKEN();
      {
      }
      {
        var tmp0_safe_receiver = otherOp;
        if (tmp0_safe_receiver == null)
          null;
        else {
          tmp0_safe_receiver.t1k();
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  SendBuffered.prototype.o1l = function () {
  };
  SendBuffered.prototype.toString = function () {
    return 'SendBuffered@' + get_hexAddress(this) + '(' + this.h1m_1 + ')';
  };
  SendBuffered.$metadata$ = classMeta('SendBuffered', undefined, undefined, undefined, undefined, Send.prototype);
  function AbstractSendChannel(onUndeliveredElement) {
    this.z1i_1 = onUndeliveredElement;
    this.a1j_1 = new LinkedListHead();
    this.b1j_1 = atomic$ref$1(null);
  }
  AbstractSendChannel.prototype.c1j = function () {
    return this.z1i_1;
  };
  AbstractSendChannel.prototype.t1l = function () {
    return this.a1j_1;
  };
  AbstractSendChannel.prototype.y1l = function (element) {
    while (true) {
      var tmp0_elvis_lhs = this.v1l();
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return get_OFFER_FAILED();
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var receive = tmp;
      var token = receive.r1k(element, null);
      if (!(token == null)) {
        {
        }
        receive.u1k(element);
        return receive.z1k();
      }
    }
  };
  AbstractSendChannel.prototype.i1m = function () {
    var tmp$ret$0;
    {
      var tmp0__get_prevNode__2ljhpg = this.a1j_1;
      tmp$ret$0 = tmp0__get_prevNode__2ljhpg.e1b_1;
    }
    var tmp = tmp$ret$0;
    var tmp0_safe_receiver = tmp instanceof Closed ? tmp : null;
    var tmp_0;
    if (tmp0_safe_receiver == null) {
      tmp_0 = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        {
          helpClose(this, tmp0_safe_receiver);
        }
        tmp$ret$1 = tmp0_safe_receiver;
      }
      tmp_0 = tmp$ret$1;
    }
    return tmp_0;
  };
  AbstractSendChannel.prototype.n1l = function () {
    var tmp$ret$0;
    $l$block_1: {
      var tmp1_removeFirstIfIsInstanceOfOrPeekIf = this.a1j_1;
      var next = tmp1_removeFirstIfIsInstanceOfOrPeekIf.d1b_1;
      if (next === tmp1_removeFirstIfIsInstanceOfOrPeekIf) {
        tmp$ret$0 = null;
        break $l$block_1;
      }
      if (!(next instanceof Send)) {
        tmp$ret$0 = null;
        break $l$block_1;
      }
      var tmp$ret$1;
      {
        var tmp2__anonymous__z9zvc9 = next;
        tmp$ret$1 = tmp2__anonymous__z9zvc9 instanceof Closed;
      }
      if (tmp$ret$1) {
        tmp$ret$0 = next;
        break $l$block_1;
      }
      {
        var tmp0_check = next.b1f();
        {
        }
        if (!tmp0_check) {
          var tmp$ret$2;
          {
            tmp$ret$2 = 'Should remove';
          }
          var message = tmp$ret$2;
          throw IllegalStateException_init_$Create$(toString_0(message));
        }
      }
      tmp$ret$0 = next;
    }
    return tmp$ret$0;
  };
  AbstractSendChannel.prototype.j1m = function (element) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_addLastIfPrev = this.a1j_1;
      var tmp1_addLastIfPrev = new SendBuffered(element);
      var tmp$ret$0;
      {
        var tmp2__anonymous__z9zvc9 = tmp0_addLastIfPrev.e1b_1;
        if (isInterface(tmp2__anonymous__z9zvc9, ReceiveOrClosed))
          return tmp2__anonymous__z9zvc9;
        tmp$ret$0 = true;
      }
      if (!tmp$ret$0) {
        tmp$ret$1 = false;
        break $l$block;
      }
      tmp0_addLastIfPrev.a1f(tmp1_addLastIfPrev);
      tmp$ret$1 = true;
    }
    return null;
  };
  AbstractSendChannel.prototype.z1l = function (element, $cont) {
    if (this.y1l(element) === get_OFFER_SUCCESS())
      return Unit_getInstance();
    return sendSuspend(this, element, $cont);
  };
  AbstractSendChannel.prototype.a1m = function (send) {
    if (this.w1l()) {
      var tmp$ret$1;
      $l$block: {
        var tmp0_addLastIfPrev = this.a1j_1;
        var tmp$ret$0;
        {
          var tmp1__anonymous__uwfjfc = tmp0_addLastIfPrev.e1b_1;
          if (isInterface(tmp1__anonymous__uwfjfc, ReceiveOrClosed))
            return tmp1__anonymous__uwfjfc;
          tmp$ret$0 = true;
        }
        if (!tmp$ret$0) {
          tmp$ret$1 = false;
          break $l$block;
        }
        tmp0_addLastIfPrev.a1f(send);
        tmp$ret$1 = true;
      }
    } else {
      var tmp$ret$3;
      $l$block_1: {
        var tmp2_addLastIfPrevAndIf = this.a1j_1;
        var tmp$ret$2;
        {
          var tmp3__anonymous__ufb84q = tmp2_addLastIfPrevAndIf.e1b_1;
          if (isInterface(tmp3__anonymous__ufb84q, ReceiveOrClosed))
            return tmp3__anonymous__ufb84q;
          tmp$ret$2 = true;
        }
        if (!tmp$ret$2) {
          tmp$ret$3 = false;
          break $l$block_1;
        }
        var tmp$ret$4;
        {
          tmp$ret$4 = this.x1l();
        }
        if (!tmp$ret$4) {
          tmp$ret$3 = false;
          break $l$block_1;
        }
        tmp2_addLastIfPrevAndIf.a1f(send);
        tmp$ret$3 = true;
      }
      if (!tmp$ret$3)
        return get_ENQUEUE_FAILED();
    }
    return null;
  };
  AbstractSendChannel.prototype.b1m = function (closed) {
  };
  AbstractSendChannel.prototype.v1l = function () {
    var tmp$ret$0;
    $l$block_1: {
      var tmp1_removeFirstIfIsInstanceOfOrPeekIf = this.a1j_1;
      var next = tmp1_removeFirstIfIsInstanceOfOrPeekIf.d1b_1;
      if (next === tmp1_removeFirstIfIsInstanceOfOrPeekIf) {
        tmp$ret$0 = null;
        break $l$block_1;
      }
      if (!isInterface(next, ReceiveOrClosed)) {
        tmp$ret$0 = null;
        break $l$block_1;
      }
      var tmp$ret$1;
      {
        var tmp2__anonymous__z9zvc9 = next;
        tmp$ret$1 = tmp2__anonymous__z9zvc9 instanceof Closed;
      }
      if (tmp$ret$1) {
        tmp$ret$0 = next;
        break $l$block_1;
      }
      {
        var tmp0_check = next.b1f();
        {
        }
        if (!tmp0_check) {
          var tmp$ret$2;
          {
            tmp$ret$2 = 'Should remove';
          }
          var message = tmp$ret$2;
          throw IllegalStateException_init_$Create$(toString_0(message));
        }
      }
      tmp$ret$0 = next;
    }
    return tmp$ret$0;
  };
  AbstractSendChannel.prototype.toString = function () {
    return get_classSimpleName(this) + '@' + get_hexAddress(this) + '{' + _get_queueDebugStateString__k7jj75(this) + '}' + this.c1m();
  };
  AbstractSendChannel.prototype.c1m = function () {
    return '';
  };
  AbstractSendChannel.$metadata$ = classMeta('AbstractSendChannel', [SendChannel]);
  function Send() {
    LinkedListNode.call(this);
  }
  Send.prototype.q1l = function () {
  };
  Send.$metadata$ = classMeta('Send', undefined, undefined, undefined, undefined, LinkedListNode.prototype);
  function ReceiveOrClosed() {
  }
  ReceiveOrClosed.$metadata$ = interfaceMeta('ReceiveOrClosed');
  function Closed() {
  }
  Closed.prototype.k1m = function () {
    return this.r1i_1;
  };
  Closed.prototype.d1m = function () {
    var tmp0_elvis_lhs = this.r1i_1;
    return tmp0_elvis_lhs == null ? new ClosedSendChannelException(get_DEFAULT_CLOSE_MESSAGE()) : tmp0_elvis_lhs;
  };
  Closed.prototype.s1i = function () {
    var tmp0_elvis_lhs = this.r1i_1;
    return tmp0_elvis_lhs == null ? new ClosedReceiveChannelException(get_DEFAULT_CLOSE_MESSAGE()) : tmp0_elvis_lhs;
  };
  Closed.$metadata$ = classMeta('Closed', [ReceiveOrClosed], undefined, undefined, undefined, Send.prototype);
  function Receive() {
    LinkedListNode.call(this);
  }
  Receive.prototype.z1k = function () {
    return get_OFFER_SUCCESS();
  };
  Receive.$metadata$ = classMeta('Receive', [ReceiveOrClosed], undefined, undefined, undefined, LinkedListNode.prototype);
  function toResult(_this__u8e3s4) {
    init_properties_AbstractChannel_kt_mjk5bh();
    var tmp;
    if (_this__u8e3s4 instanceof Closed) {
      tmp = Companion_getInstance_1().f1k(_this__u8e3s4.r1i_1);
    } else {
      var tmp_0 = Companion_getInstance_1();
      tmp = tmp_0.e1k((_this__u8e3s4 == null ? true : isObject(_this__u8e3s4)) ? _this__u8e3s4 : THROW_CCE());
    }
    return tmp;
  }
  function SendElement(pollResult, cont) {
    Send.call(this);
    this.o1m_1 = pollResult;
    this.p1m_1 = cont;
  }
  SendElement.prototype.p1l = function () {
    return this.o1m_1;
  };
  SendElement.prototype.q1m = function () {
    return this.p1m_1;
  };
  SendElement.prototype.q1j = function (otherOp) {
    var tmp0_safe_receiver = otherOp;
    var tmp1_elvis_lhs = this.p1m_1.d1a(Unit_getInstance(), tmp0_safe_receiver == null ? null : tmp0_safe_receiver.l1j_1);
    var tmp;
    if (tmp1_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp1_elvis_lhs;
    }
    var token = tmp;
    {
    }
    var tmp2_safe_receiver = otherOp;
    if (tmp2_safe_receiver == null)
      null;
    else {
      tmp2_safe_receiver.t1k();
    }
    return get_RESUME_TOKEN();
  };
  SendElement.prototype.o1l = function () {
    return this.p1m_1.h1a(get_RESUME_TOKEN());
  };
  SendElement.prototype.toString = function () {
    return get_classSimpleName(this) + '@' + get_hexAddress(this) + '(' + this.p1l() + ')';
  };
  SendElement.$metadata$ = classMeta('SendElement', undefined, undefined, undefined, undefined, Send.prototype);
  function SendElementWithUndeliveredHandler(pollResult, cont, onUndeliveredElement) {
    SendElement.call(this, pollResult, cont);
    this.w1m_1 = onUndeliveredElement;
  }
  SendElementWithUndeliveredHandler.prototype.g1b = function () {
    if (!SendElement.prototype.g1b.call(this))
      return false;
    this.q1l();
    return true;
  };
  SendElementWithUndeliveredHandler.prototype.q1l = function () {
    callUndeliveredElement(this.w1m_1, this.p1l(), this.q1m().s4());
  };
  SendElementWithUndeliveredHandler.$metadata$ = classMeta('SendElementWithUndeliveredHandler', undefined, undefined, undefined, undefined, SendElement.prototype);
  var properties_initialized_AbstractChannel_kt_uwqnpt;
  function init_properties_AbstractChannel_kt_mjk5bh() {
    if (properties_initialized_AbstractChannel_kt_uwqnpt) {
    } else {
      properties_initialized_AbstractChannel_kt_uwqnpt = true;
      EMPTY = new Symbol('EMPTY');
      OFFER_SUCCESS = new Symbol('OFFER_SUCCESS');
      OFFER_FAILED = new Symbol('OFFER_FAILED');
      POLL_FAILED = new Symbol('POLL_FAILED');
      ENQUEUE_FAILED = new Symbol('ENQUEUE_FAILED');
      HANDLER_INVOKED = new Symbol('ON_CLOSE_HANDLER_INVOKED');
    }
  }
  function updateBufferSize($this, currentSize) {
    if (currentSize < $this.a1n_1) {
      $this.f1n_1.a17_1 = currentSize + 1 | 0;
      return null;
    }
    var tmp0_subject = $this.b1n_1;
    var tmp0 = tmp0_subject.y1();
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = get_OFFER_FAILED();
        break;
      case 2:
        tmp = get_OFFER_SUCCESS();
        break;
      case 1:
        tmp = null;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function enqueueElement($this, currentSize, element) {
    if (currentSize < $this.a1n_1) {
      ensureCapacity($this, currentSize);
      $this.d1n_1[($this.e1n_1 + currentSize | 0) % $this.d1n_1.length | 0] = element;
    } else {
      {
      }
      $this.d1n_1[$this.e1n_1 % $this.d1n_1.length | 0] = null;
      $this.d1n_1[($this.e1n_1 + currentSize | 0) % $this.d1n_1.length | 0] = element;
      $this.e1n_1 = ($this.e1n_1 + 1 | 0) % $this.d1n_1.length | 0;
    }
  }
  function ensureCapacity($this, currentSize) {
    if (currentSize >= $this.d1n_1.length) {
      var tmp$ret$0;
      {
        var tmp0_min = imul($this.d1n_1.length, 2);
        var tmp1_min = $this.a1n_1;
        tmp$ret$0 = Math.min(tmp0_min, tmp1_min);
      }
      var newSize = tmp$ret$0;
      var tmp$ret$1;
      {
        tmp$ret$1 = fillArrayVal(Array(newSize), null);
      }
      var newBuffer = tmp$ret$1;
      var inductionVariable = 0;
      if (inductionVariable < currentSize)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          newBuffer[i] = $this.d1n_1[($this.e1n_1 + i | 0) % $this.d1n_1.length | 0];
        }
         while (inductionVariable < currentSize);
      fill(newBuffer, get_EMPTY(), currentSize, newSize);
      $this.d1n_1 = newBuffer;
      $this.e1n_1 = 0;
    }
  }
  function ArrayChannel(capacity, onBufferOverflow, onUndeliveredElement) {
    AbstractChannel.call(this, onUndeliveredElement);
    this.a1n_1 = capacity;
    this.b1n_1 = onBufferOverflow;
    {
      var tmp0_require = this.a1n_1 >= 1;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'ArrayChannel capacity must be at least 1, but ' + this.a1n_1 + ' was specified';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString_0(message));
      }
    }
    this.c1n_1 = new NoOpLock();
    var tmp = this;
    var tmp$ret$3;
    {
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          var tmp0_min = this.a1n_1;
          tmp$ret$1 = Math.min(tmp0_min, 8);
        }
        var tmp1_arrayOfNulls = tmp$ret$1;
        tmp$ret$2 = fillArrayVal(Array(tmp1_arrayOfNulls), null);
      }
      var tmp2_apply = tmp$ret$2;
      {
      }
      {
        var tmp_0 = get_EMPTY();
        fill$default(tmp2_apply, tmp_0, 0, 0, 6, null);
      }
      tmp$ret$3 = tmp2_apply;
    }
    tmp.d1n_1 = tmp$ret$3;
    this.e1n_1 = 0;
    this.f1n_1 = atomic$int$1(0);
  }
  ArrayChannel.prototype.l1l = function () {
    return false;
  };
  ArrayChannel.prototype.m1l = function () {
    return this.f1n_1.a17_1 === 0;
  };
  ArrayChannel.prototype.w1l = function () {
    return false;
  };
  ArrayChannel.prototype.x1l = function () {
    return this.f1n_1.a17_1 === this.a1n_1 ? this.b1n_1.equals(BufferOverflow_SUSPEND_getInstance()) : false;
  };
  ArrayChannel.prototype.y1l = function (element) {
    var receive = null;
    var tmp$ret$3;
    {
      var tmp0_withLock = this.c1n_1;
      var tmp$ret$2;
      $l$block: {
        var size = this.f1n_1.a17_1;
        var tmp0_safe_receiver = this.i1m();
        if (tmp0_safe_receiver == null)
          null;
        else {
          var tmp$ret$0;
          {
            {
            }
            return tmp0_safe_receiver;
          }
        }
        var tmp1_safe_receiver = updateBufferSize(this, size);
        if (tmp1_safe_receiver == null)
          null;
        else {
          var tmp$ret$1;
          {
            {
            }
            return tmp1_safe_receiver;
          }
        }
        if (size === 0) {
          loop: while (true) {
            var tmp2_elvis_lhs = this.v1l();
            var tmp;
            if (tmp2_elvis_lhs == null) {
              break loop;
            } else {
              tmp = tmp2_elvis_lhs;
            }
            receive = tmp;
            if (receive instanceof Closed) {
              this.f1n_1.a17_1 = size;
              return ensureNotNull(receive);
            }
            var token = ensureNotNull(receive).r1k(element, null);
            if (!(token == null)) {
              {
              }
              this.f1n_1.a17_1 = size;
              tmp$ret$2 = Unit_getInstance();
              break $l$block;
            }
          }
        }
        enqueueElement(this, size, element);
        return get_OFFER_SUCCESS();
      }
      tmp$ret$3 = tmp$ret$2;
    }
    ensureNotNull(receive).u1k(element);
    return ensureNotNull(receive).z1k();
  };
  ArrayChannel.prototype.a1m = function (send) {
    var tmp$ret$1;
    {
      var tmp0_withLock = this.c1n_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = AbstractChannel.prototype.a1m.call(this, send);
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  ArrayChannel.prototype.y1i = function () {
    var send = null;
    var resumed = false;
    var result = null;
    var tmp$ret$0;
    {
      var tmp0_withLock = this.c1n_1;
      var size = this.f1n_1.a17_1;
      if (size === 0) {
        var tmp0_elvis_lhs = this.i1m();
        return tmp0_elvis_lhs == null ? get_POLL_FAILED() : tmp0_elvis_lhs;
      }
      result = this.d1n_1[this.e1n_1];
      this.d1n_1[this.e1n_1] = null;
      this.f1n_1.a17_1 = size - 1 | 0;
      var replacement = get_POLL_FAILED();
      if (size === this.a1n_1) {
        loop: while (true) {
          var tmp1_elvis_lhs = this.n1l();
          var tmp;
          if (tmp1_elvis_lhs == null) {
            break loop;
          } else {
            tmp = tmp1_elvis_lhs;
          }
          send = tmp;
          var token = ensureNotNull(send).q1j(null);
          if (!(token == null)) {
            {
            }
            resumed = true;
            replacement = ensureNotNull(send).p1l();
            break loop;
          }
          ensureNotNull(send).q1l();
        }
      }
      var tmp_0;
      if (!(replacement === get_POLL_FAILED())) {
        tmp_0 = !(replacement instanceof Closed);
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        this.f1n_1.a17_1 = size;
        this.d1n_1[(this.e1n_1 + size | 0) % this.d1n_1.length | 0] = replacement;
      }
      this.e1n_1 = (this.e1n_1 + 1 | 0) % this.d1n_1.length | 0;
      tmp$ret$0 = Unit_getInstance();
    }
    if (resumed)
      ensureNotNull(send).o1l();
    return result;
  };
  ArrayChannel.prototype.b1k = function (select) {
    var send = null;
    var success = false;
    var result = null;
    var tmp$ret$0;
    {
      var tmp0_withLock = this.c1n_1;
      var size = this.f1n_1.a17_1;
      if (size === 0) {
        var tmp0_elvis_lhs = this.i1m();
        return tmp0_elvis_lhs == null ? get_POLL_FAILED() : tmp0_elvis_lhs;
      }
      result = this.d1n_1[this.e1n_1];
      this.d1n_1[this.e1n_1] = null;
      this.f1n_1.a17_1 = size - 1 | 0;
      var replacement = get_POLL_FAILED();
      if (size === this.a1n_1) {
        loop: while (true) {
          var pollOp = this.r1l();
          var failure = select.s1l(pollOp);
          if (failure == null) {
            send = pollOp.u1j();
            success = true;
            replacement = ensureNotNull(send).p1l();
            break loop;
          } else {
            if (failure === get_POLL_FAILED())
              break loop;
            else {
              if (failure === get_RETRY_ATOMIC()) {
              } else {
                if (failure === get_ALREADY_SELECTED()) {
                  this.f1n_1.a17_1 = size;
                  this.d1n_1[this.e1n_1] = result;
                  return failure;
                } else {
                  if (failure instanceof Closed) {
                    send = failure;
                    success = true;
                    replacement = failure;
                    break loop;
                  } else {
                    var tmp0_error = 'performAtomicTrySelect(describeTryOffer) returned ' + toString(failure);
                    throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
                  }
                }
              }
            }
          }
        }
      }
      var tmp;
      if (!(replacement === get_POLL_FAILED())) {
        tmp = !(replacement instanceof Closed);
      } else {
        tmp = false;
      }
      if (tmp) {
        this.f1n_1.a17_1 = size;
        this.d1n_1[(this.e1n_1 + size | 0) % this.d1n_1.length | 0] = replacement;
      } else {
        if (!select.w1g()) {
          this.f1n_1.a17_1 = size;
          this.d1n_1[this.e1n_1] = result;
          return get_ALREADY_SELECTED();
        }
      }
      this.e1n_1 = (this.e1n_1 + 1 | 0) % this.d1n_1.length | 0;
      tmp$ret$0 = Unit_getInstance();
    }
    if (success)
      ensureNotNull(send).o1l();
    return result;
  };
  ArrayChannel.prototype.d1j = function (receive) {
    var tmp$ret$1;
    {
      var tmp0_withLock = this.c1n_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = AbstractChannel.prototype.d1j.call(this, receive);
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  ArrayChannel.prototype.c1m = function () {
    return '(buffer:capacity=' + this.a1n_1 + ',size=' + this.f1n_1.a17_1 + ')';
  };
  ArrayChannel.$metadata$ = classMeta('ArrayChannel', undefined, undefined, undefined, undefined, AbstractChannel.prototype);
  var BufferOverflow_SUSPEND_instance;
  var BufferOverflow_DROP_OLDEST_instance;
  var BufferOverflow_DROP_LATEST_instance;
  var BufferOverflow_entriesInitialized;
  function BufferOverflow_initEntries() {
    if (BufferOverflow_entriesInitialized)
      return Unit_getInstance();
    BufferOverflow_entriesInitialized = true;
    BufferOverflow_SUSPEND_instance = new BufferOverflow('SUSPEND', 0);
    BufferOverflow_DROP_OLDEST_instance = new BufferOverflow('DROP_OLDEST', 1);
    BufferOverflow_DROP_LATEST_instance = new BufferOverflow('DROP_LATEST', 2);
  }
  function BufferOverflow(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  BufferOverflow.$metadata$ = classMeta('BufferOverflow', undefined, undefined, undefined, undefined, Enum.prototype);
  function BufferOverflow_SUSPEND_getInstance() {
    BufferOverflow_initEntries();
    return BufferOverflow_SUSPEND_instance;
  }
  function BufferOverflow_DROP_OLDEST_getInstance() {
    BufferOverflow_initEntries();
    return BufferOverflow_DROP_OLDEST_instance;
  }
  function Factory() {
    Factory_instance = this;
    this.g1n_1 = 2147483647;
    this.h1n_1 = 0;
    this.i1n_1 = -1;
    this.j1n_1 = -2;
    this.k1n_1 = -3;
    this.l1n_1 = 'kotlinx.coroutines.channels.defaultBuffer';
    this.m1n_1 = systemProp('kotlinx.coroutines.channels.defaultBuffer', 64, 1, 2147483646);
  }
  Factory.$metadata$ = objectMeta('Factory');
  var Factory_instance;
  function Factory_getInstance() {
    if (Factory_instance == null)
      new Factory();
    return Factory_instance;
  }
  function Channel() {
  }
  Channel.$metadata$ = interfaceMeta('Channel', [SendChannel, ReceiveChannel]);
  function Channel_0(capacity, onBufferOverflow, onUndeliveredElement) {
    var tmp0_subject = capacity;
    var tmp;
    Factory_getInstance();
    if (tmp0_subject === 0) {
      tmp = onBufferOverflow.equals(BufferOverflow_SUSPEND_getInstance()) ? new RendezvousChannel(onUndeliveredElement) : new ArrayChannel(1, onBufferOverflow, onUndeliveredElement);
    } else {
      Factory_getInstance();
      if (tmp0_subject === -1) {
        {
          var tmp0_require = onBufferOverflow.equals(BufferOverflow_SUSPEND_getInstance());
          {
          }
          if (!tmp0_require) {
            var tmp$ret$0;
            {
              tmp$ret$0 = 'CONFLATED capacity cannot be used with non-default onBufferOverflow';
            }
            var message = tmp$ret$0;
            throw IllegalArgumentException_init_$Create$(toString_0(message));
          }
        }
        tmp = new ConflatedChannel(onUndeliveredElement);
      } else {
        Factory_getInstance();
        if (tmp0_subject === 2147483647) {
          tmp = new LinkedListChannel(onUndeliveredElement);
        } else {
          Factory_getInstance();
          if (tmp0_subject === -2) {
            tmp = new ArrayChannel(onBufferOverflow.equals(BufferOverflow_SUSPEND_getInstance()) ? Factory_getInstance().m1n_1 : 1, onBufferOverflow, onUndeliveredElement);
          } else {
            tmp = (capacity === 1 ? onBufferOverflow.equals(BufferOverflow_DROP_OLDEST_getInstance()) : false) ? new ConflatedChannel(onUndeliveredElement) : new ArrayChannel(capacity, onBufferOverflow, onUndeliveredElement);
          }
        }
      }
    }
    return tmp;
  }
  function Channel$default(capacity, onBufferOverflow, onUndeliveredElement, $mask0, $handler) {
    if (!(($mask0 & 1) === 0)) {
      Factory_getInstance();
      capacity = 0;
    }
    if (!(($mask0 & 2) === 0))
      onBufferOverflow = BufferOverflow_SUSPEND_getInstance();
    if (!(($mask0 & 4) === 0))
      onUndeliveredElement = null;
    return Channel_0(capacity, onBufferOverflow, onUndeliveredElement);
  }
  function ReceiveChannel() {
  }
  ReceiveChannel.$metadata$ = interfaceMeta('ReceiveChannel');
  function SendChannel() {
  }
  SendChannel.$metadata$ = interfaceMeta('SendChannel');
  function ChannelIterator() {
  }
  ChannelIterator.$metadata$ = interfaceMeta('ChannelIterator');
  function _ChannelResult___init__impl__siwsuf(holder) {
    return holder;
  }
  function _ChannelResult___get_holder__impl__pm9gzw($this) {
    return $this;
  }
  function Failed() {
  }
  Failed.prototype.toString = function () {
    return 'Failed';
  };
  Failed.$metadata$ = classMeta('Failed');
  function Closed_0(cause) {
    Failed.call(this);
    this.n1n_1 = cause;
  }
  Closed_0.prototype.equals = function (other) {
    var tmp;
    if (other instanceof Closed_0) {
      tmp = equals(this.n1n_1, other.n1n_1);
    } else {
      tmp = false;
    }
    return tmp;
  };
  Closed_0.prototype.hashCode = function () {
    var tmp$ret$0;
    {
      var tmp0_hashCode = this.n1n_1;
      var tmp0_safe_receiver = tmp0_hashCode;
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
      tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    }
    return tmp$ret$0;
  };
  Closed_0.prototype.toString = function () {
    return 'Closed(' + this.n1n_1 + ')';
  };
  Closed_0.$metadata$ = classMeta('Closed', undefined, undefined, undefined, undefined, Failed.prototype);
  function Companion() {
    Companion_instance = this;
    this.d1k_1 = new Failed();
  }
  Companion.prototype.e1k = function (value) {
    return _ChannelResult___init__impl__siwsuf(value);
  };
  Companion.prototype.f1k = function (cause) {
    return _ChannelResult___init__impl__siwsuf(new Closed_0(cause));
  };
  Companion.$metadata$ = objectMeta('Companion');
  var Companion_instance;
  function Companion_getInstance_1() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function ChannelResult__toString_impl_rrcqu7($this) {
    var tmp0_subject = _ChannelResult___get_holder__impl__pm9gzw($this);
    var tmp;
    if (tmp0_subject instanceof Closed_0) {
      tmp = toString_0(_ChannelResult___get_holder__impl__pm9gzw($this));
    } else {
      tmp = 'Value(' + toString(_ChannelResult___get_holder__impl__pm9gzw($this)) + ')';
    }
    return tmp;
  }
  function ChannelResult__hashCode_impl_lilec2($this) {
    return $this == null ? 0 : hashCode($this);
  }
  function ChannelResult__equals_impl_f471ri($this, other) {
    if (!(other instanceof ChannelResult))
      return false;
    var tmp0_other_with_cast = other instanceof ChannelResult ? other.o1n_1 : THROW_CCE();
    if (!equals($this, tmp0_other_with_cast))
      return false;
    return true;
  }
  function ChannelResult(holder) {
    Companion_getInstance_1();
    this.o1n_1 = holder;
  }
  ChannelResult.prototype.toString = function () {
    return ChannelResult__toString_impl_rrcqu7(this.o1n_1);
  };
  ChannelResult.prototype.hashCode = function () {
    return ChannelResult__hashCode_impl_lilec2(this.o1n_1);
  };
  ChannelResult.prototype.equals = function (other) {
    return ChannelResult__equals_impl_f471ri(this.o1n_1, other);
  };
  ChannelResult.$metadata$ = classMeta('ChannelResult');
  function ClosedReceiveChannelException(message) {
    NoSuchElementException_init_$Init$(message, this);
    captureStack(this, ClosedReceiveChannelException);
  }
  ClosedReceiveChannelException.$metadata$ = classMeta('ClosedReceiveChannelException', undefined, undefined, undefined, undefined, NoSuchElementException.prototype);
  function ClosedSendChannelException(message) {
    IllegalStateException_init_$Init$(message, this);
    captureStack(this, ClosedSendChannelException);
  }
  ClosedSendChannelException.$metadata$ = classMeta('ClosedSendChannelException', undefined, undefined, undefined, undefined, IllegalStateException.prototype);
  function get_DEFAULT_CLOSE_MESSAGE() {
    return DEFAULT_CLOSE_MESSAGE;
  }
  var DEFAULT_CLOSE_MESSAGE;
  function updateValueLocked($this, element) {
    var old = $this.t1n_1;
    var tmp;
    if (old === get_EMPTY()) {
      tmp = null;
    } else {
      var tmp0_safe_receiver = $this.c1j();
      var tmp_0;
      if (tmp0_safe_receiver == null) {
        tmp_0 = null;
      } else {
        var tmp_1 = (old == null ? true : isObject(old)) ? old : THROW_CCE();
        tmp_0 = callUndeliveredElementCatchingException$default(tmp0_safe_receiver, tmp_1, null, 2, null);
      }
      tmp = tmp_0;
    }
    var undeliveredElementException = tmp;
    $this.t1n_1 = element;
    return undeliveredElementException;
  }
  function ConflatedChannel(onUndeliveredElement) {
    AbstractChannel.call(this, onUndeliveredElement);
    this.s1n_1 = new NoOpLock();
    this.t1n_1 = get_EMPTY();
  }
  ConflatedChannel.prototype.l1l = function () {
    return false;
  };
  ConflatedChannel.prototype.m1l = function () {
    var tmp$ret$1;
    {
      var tmp0_withLock = this.s1n_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = this.t1n_1 === get_EMPTY();
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  ConflatedChannel.prototype.w1l = function () {
    return false;
  };
  ConflatedChannel.prototype.x1l = function () {
    return false;
  };
  ConflatedChannel.prototype.y1l = function (element) {
    var receive = null;
    var tmp$ret$3;
    {
      var tmp0_withLock = this.s1n_1;
      var tmp$ret$1;
      $l$block: {
        var tmp0_safe_receiver = this.i1m();
        if (tmp0_safe_receiver == null)
          null;
        else {
          var tmp$ret$0;
          {
            {
            }
            return tmp0_safe_receiver;
          }
        }
        if (this.t1n_1 === get_EMPTY()) {
          loop: while (true) {
            var tmp1_elvis_lhs = this.v1l();
            var tmp;
            if (tmp1_elvis_lhs == null) {
              break loop;
            } else {
              tmp = tmp1_elvis_lhs;
            }
            receive = tmp;
            if (receive instanceof Closed) {
              return ensureNotNull(receive);
            }
            var token = ensureNotNull(receive).r1k(element, null);
            if (!(token == null)) {
              {
              }
              tmp$ret$1 = Unit_getInstance();
              break $l$block;
            }
          }
        }
        var tmp2_safe_receiver = updateValueLocked(this, element);
        if (tmp2_safe_receiver == null)
          null;
        else {
          var tmp$ret$2;
          {
            {
            }
            throw tmp2_safe_receiver;
          }
        }
        return get_OFFER_SUCCESS();
      }
      tmp$ret$3 = tmp$ret$1;
    }
    ensureNotNull(receive).u1k(element);
    return ensureNotNull(receive).z1k();
  };
  ConflatedChannel.prototype.y1i = function () {
    var result = null;
    var tmp$ret$0;
    {
      var tmp0_withLock = this.s1n_1;
      if (this.t1n_1 === get_EMPTY()) {
        var tmp0_elvis_lhs = this.i1m();
        return tmp0_elvis_lhs == null ? get_POLL_FAILED() : tmp0_elvis_lhs;
      }
      result = this.t1n_1;
      this.t1n_1 = get_EMPTY();
      tmp$ret$0 = Unit_getInstance();
    }
    return result;
  };
  ConflatedChannel.prototype.b1k = function (select) {
    var result = null;
    var tmp$ret$0;
    {
      var tmp0_withLock = this.s1n_1;
      if (this.t1n_1 === get_EMPTY()) {
        var tmp0_elvis_lhs = this.i1m();
        return tmp0_elvis_lhs == null ? get_POLL_FAILED() : tmp0_elvis_lhs;
      }
      if (!select.w1g())
        return get_ALREADY_SELECTED();
      result = this.t1n_1;
      this.t1n_1 = get_EMPTY();
      tmp$ret$0 = Unit_getInstance();
    }
    return result;
  };
  ConflatedChannel.prototype.d1j = function (receive) {
    var tmp$ret$1;
    {
      var tmp0_withLock = this.s1n_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = AbstractChannel.prototype.d1j.call(this, receive);
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  ConflatedChannel.prototype.c1m = function () {
    var tmp$ret$1;
    {
      var tmp0_withLock = this.s1n_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = '(value=' + toString(this.t1n_1) + ')';
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  ConflatedChannel.$metadata$ = classMeta('ConflatedChannel', undefined, undefined, undefined, undefined, AbstractChannel.prototype);
  function LinkedListChannel(onUndeliveredElement) {
    AbstractChannel.call(this, onUndeliveredElement);
  }
  LinkedListChannel.prototype.l1l = function () {
    return true;
  };
  LinkedListChannel.prototype.m1l = function () {
    return true;
  };
  LinkedListChannel.prototype.w1l = function () {
    return false;
  };
  LinkedListChannel.prototype.x1l = function () {
    return false;
  };
  LinkedListChannel.prototype.y1l = function (element) {
    while (true) {
      var result = AbstractChannel.prototype.y1l.call(this, element);
      if (result === get_OFFER_SUCCESS())
        return get_OFFER_SUCCESS();
      else {
        if (result === get_OFFER_FAILED()) {
          var sendResult = this.j1m(element);
          if (sendResult == null)
            return get_OFFER_SUCCESS();
          else {
            if (sendResult instanceof Closed)
              return sendResult;
          }
        } else {
          if (result instanceof Closed)
            return result;
          else {
            var tmp0_error = 'Invalid offerInternal result ' + toString_0(result);
            throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
          }
        }
      }
    }
  };
  LinkedListChannel.$metadata$ = classMeta('LinkedListChannel', undefined, undefined, undefined, undefined, AbstractChannel.prototype);
  function RendezvousChannel(onUndeliveredElement) {
    AbstractChannel.call(this, onUndeliveredElement);
  }
  RendezvousChannel.prototype.l1l = function () {
    return true;
  };
  RendezvousChannel.prototype.m1l = function () {
    return true;
  };
  RendezvousChannel.prototype.w1l = function () {
    return true;
  };
  RendezvousChannel.prototype.x1l = function () {
    return true;
  };
  RendezvousChannel.$metadata$ = classMeta('RendezvousChannel', undefined, undefined, undefined, undefined, AbstractChannel.prototype);
  function ensureCapacity_0($this) {
    var currentSize = $this.w1d_1.length;
    var newCapacity = currentSize << 1;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(newCapacity), null);
    }
    var newElements = tmp$ret$0;
    var tmp$ret$1;
    {
      var tmp0_copyInto = $this.w1d_1;
      var tmp1_copyInto = $this.x1d_1;
      var tmp2_copyInto = tmp0_copyInto.length;
      arrayCopy(tmp0_copyInto, newElements, 0, tmp1_copyInto, tmp2_copyInto);
      tmp$ret$1 = newElements;
    }
    var tmp$ret$2;
    {
      var tmp3_copyInto = $this.w1d_1;
      var tmp4_copyInto = $this.w1d_1.length - $this.x1d_1 | 0;
      var tmp5_copyInto = $this.x1d_1;
      arrayCopy(tmp3_copyInto, newElements, tmp4_copyInto, 0, tmp5_copyInto);
      tmp$ret$2 = newElements;
    }
    $this.w1d_1 = newElements;
    $this.x1d_1 = 0;
    $this.y1d_1 = currentSize;
  }
  function ArrayQueue() {
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(16), null);
    }
    tmp.w1d_1 = tmp$ret$0;
    this.x1d_1 = 0;
    this.y1d_1 = 0;
  }
  ArrayQueue.prototype.e1e = function () {
    return this.x1d_1 === this.y1d_1;
  };
  ArrayQueue.prototype.b1e = function (element) {
    this.w1d_1[this.y1d_1] = element;
    this.y1d_1 = (this.y1d_1 + 1 | 0) & (this.w1d_1.length - 1 | 0);
    if (this.y1d_1 === this.x1d_1)
      ensureCapacity_0(this);
  };
  ArrayQueue.prototype.z1d = function () {
    if (this.x1d_1 === this.y1d_1)
      return null;
    var element = this.w1d_1[this.x1d_1];
    this.w1d_1[this.x1d_1] = null;
    this.x1d_1 = (this.x1d_1 + 1 | 0) & (this.w1d_1.length - 1 | 0);
    return isObject(element) ? element : THROW_CCE();
  };
  ArrayQueue.$metadata$ = classMeta('ArrayQueue');
  function get_NO_DECISION() {
    init_properties_Atomic_kt_3h20tt();
    return NO_DECISION;
  }
  var NO_DECISION;
  function get_RETRY_ATOMIC() {
    init_properties_Atomic_kt_3h20tt();
    return RETRY_ATOMIC;
  }
  var RETRY_ATOMIC;
  function OpDescriptor() {
  }
  OpDescriptor.prototype.toString = function () {
    return get_classSimpleName(this) + '@' + get_hexAddress(this);
  };
  OpDescriptor.prototype.b1o = function (that) {
    var tmp0_elvis_lhs = this.a1o();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var thisOp = tmp;
    var tmp1_elvis_lhs = that.a1o();
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      return false;
    } else {
      tmp_0 = tmp1_elvis_lhs;
    }
    var thatOp = tmp_0;
    return thisOp.d1o().m1(thatOp.d1o()) < 0;
  };
  OpDescriptor.$metadata$ = classMeta('OpDescriptor');
  function AtomicOp() {
    OpDescriptor.call(this);
    this.c1o_1 = atomic$ref$1(get_NO_DECISION());
  }
  AtomicOp.prototype.d1o = function () {
    return new Long(0, 0);
  };
  AtomicOp.prototype.a1o = function () {
    return this;
  };
  AtomicOp.prototype.e1o = function (decision) {
    {
    }
    var current = this.c1o_1.z16_1;
    if (!(current === get_NO_DECISION()))
      return current;
    if (this.c1o_1.atomicfu$compareAndSet(get_NO_DECISION(), decision))
      return decision;
    return this.c1o_1.z16_1;
  };
  AtomicOp.prototype.s1g = function (affected) {
    var decision = this.c1o_1.z16_1;
    if (decision === get_NO_DECISION()) {
      decision = this.e1o(this.f1o((affected == null ? true : isObject(affected)) ? affected : THROW_CCE()));
    }
    this.g1o((affected == null ? true : isObject(affected)) ? affected : THROW_CCE(), decision);
    return decision;
  };
  AtomicOp.$metadata$ = classMeta('AtomicOp', undefined, undefined, undefined, undefined, OpDescriptor.prototype);
  function AtomicDesc() {
  }
  AtomicDesc.$metadata$ = classMeta('AtomicDesc');
  var properties_initialized_Atomic_kt_vn225v;
  function init_properties_Atomic_kt_3h20tt() {
    if (properties_initialized_Atomic_kt_vn225v) {
    } else {
      properties_initialized_Atomic_kt_vn225v = true;
      NO_DECISION = new Symbol('NO_DECISION');
      RETRY_ATOMIC = new Symbol('RETRY_ATOMIC');
    }
  }
  function get_UNDEFINED() {
    init_properties_DispatchedContinuation_kt_s7rtw6();
    return UNDEFINED;
  }
  var UNDEFINED;
  function get_REUSABLE_CLAIMED() {
    init_properties_DispatchedContinuation_kt_s7rtw6();
    return REUSABLE_CLAIMED;
  }
  var REUSABLE_CLAIMED;
  function resumeCancellableWith(_this__u8e3s4, result, onCancellation) {
    init_properties_DispatchedContinuation_kt_s7rtw6();
    var tmp0_subject = _this__u8e3s4;
    var tmp;
    if (tmp0_subject instanceof DispatchedContinuation) {
      var tmp1_resumeCancellableWith = _this__u8e3s4;
      var state = toState_0(result, onCancellation);
      var tmp_0;
      if (tmp1_resumeCancellableWith.p1a_1.m1d(tmp1_resumeCancellableWith.s4())) {
        tmp1_resumeCancellableWith.r1a_1 = state;
        tmp1_resumeCancellableWith.i1o(get_MODE_CANCELLABLE());
        tmp_0 = tmp1_resumeCancellableWith.p1a_1.n1d(tmp1_resumeCancellableWith.s4(), tmp1_resumeCancellableWith);
      } else {
        var tmp$ret$0;
        $l$block: {
          var tmp0_executeUnconfined = get_MODE_CANCELLABLE();
          {
          }
          var eventLoop = ThreadLocalEventLoop_getInstance().j1e();
          if (false) {}
          var tmp_1;
          if (eventLoop.c1e()) {
            tmp1_resumeCancellableWith.r1a_1 = state;
            tmp1_resumeCancellableWith.i1o(tmp0_executeUnconfined);
            eventLoop.a1e(tmp1_resumeCancellableWith);
            tmp_1 = true;
          } else {
            {
              eventLoop.f1e(true);
              try {
                {
                  var tmp$ret$3;
                  $l$block_0: {
                    var job = tmp1_resumeCancellableWith.s4().f8(Key_getInstance_2());
                    if (!(job == null) ? !job.p17() : false) {
                      var cause = job.m18();
                      tmp1_resumeCancellableWith.b1c(state, cause);
                      var tmp$ret$2;
                      {
                        var tmp$ret$1;
                        {
                          var tmp0_failure = Companion_getInstance_0();
                          tmp$ret$1 = _Result___init__impl__xyqfz8(createFailure(cause));
                        }
                        tmp$ret$2 = tmp1_resumeCancellableWith.q4(tmp$ret$1);
                      }
                      tmp$ret$3 = true;
                      break $l$block_0;
                    }
                    tmp$ret$3 = false;
                  }
                  if (!tmp$ret$3) {
                    {
                      var tmp$ret$4;
                      {
                        var tmp0_withContinuationContext = tmp1_resumeCancellableWith.q1a_1;
                        var tmp1_withContinuationContext = tmp1_resumeCancellableWith.s1a_1;
                        tmp$ret$4 = tmp1_resumeCancellableWith.q1a_1.q4(result);
                      }
                    }
                  }
                }
                $l$loop: while (true) {
                  if (!eventLoop.v1d())
                    break $l$loop;
                }
              } catch ($p) {
                if ($p instanceof Error) {
                  tmp1_resumeCancellableWith.n1c($p, null);
                } else {
                  throw $p;
                }
              }
              finally {
                eventLoop.g1e(true);
              }
            }
            tmp_1 = false;
          }
          tmp$ret$0 = tmp_1;
        }
        tmp_0 = Unit_getInstance();
      }
      tmp = tmp_0;
    } else {
      tmp = _this__u8e3s4.q4(result);
    }
    return tmp;
  }
  function resumeCancellableWith$default(_this__u8e3s4, result, onCancellation, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      onCancellation = null;
    return resumeCancellableWith(_this__u8e3s4, result, onCancellation);
  }
  function _get_reusableCancellableContinuation__9qex09($this) {
    var tmp = $this.t1a_1.z16_1;
    return tmp instanceof CancellableContinuationImpl ? tmp : null;
  }
  function DispatchedContinuation(dispatcher, continuation) {
    DispatchedTask.call(this, get_MODE_UNINITIALIZED());
    this.p1a_1 = dispatcher;
    this.q1a_1 = continuation;
    this.r1a_1 = get_UNDEFINED();
    this.s1a_1 = threadContextElements(this.s4());
    this.t1a_1 = atomic$ref$1(null);
  }
  DispatchedContinuation.prototype.j1o = function () {
    return this.q1a_1;
  };
  DispatchedContinuation.prototype.s4 = function () {
    return this.q1a_1.s4();
  };
  DispatchedContinuation.prototype.k1o = function () {
    return this.s1a_1;
  };
  DispatchedContinuation.prototype.h1b = function () {
    return !(this.t1a_1.z16_1 == null);
  };
  DispatchedContinuation.prototype.l1o = function () {
    {
      var tmp0_loop = this.t1a_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.z16_1;
          if (!(tmp1__anonymous__uwfjfc === get_REUSABLE_CLAIMED()))
            return Unit_getInstance();
        }
      }
    }
  };
  DispatchedContinuation.prototype.o1d = function () {
    this.l1o();
    var tmp0_safe_receiver = _get_reusableCancellableContinuation__9qex09(this);
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.m1b();
    }
  };
  DispatchedContinuation.prototype.u1a = function () {
    {
      var tmp0_loop = this.t1a_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.z16_1;
          if (tmp1__anonymous__uwfjfc === null) {
            this.t1a_1.z16_1 = get_REUSABLE_CLAIMED();
            return null;
          } else {
            if (tmp1__anonymous__uwfjfc instanceof CancellableContinuationImpl) {
              if (this.t1a_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, get_REUSABLE_CLAIMED())) {
                return tmp1__anonymous__uwfjfc instanceof CancellableContinuationImpl ? tmp1__anonymous__uwfjfc : THROW_CCE();
              }
            } else {
              if (tmp1__anonymous__uwfjfc === get_REUSABLE_CLAIMED()) {
              } else {
                if (tmp1__anonymous__uwfjfc instanceof Error) {
                } else {
                  var tmp0_error = 'Inconsistent state ' + toString(tmp1__anonymous__uwfjfc);
                  throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
                }
              }
            }
          }
        }
      }
    }
  };
  DispatchedContinuation.prototype.l1b = function (continuation) {
    {
      var tmp0_loop = this.t1a_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.z16_1;
          if (tmp1__anonymous__uwfjfc === get_REUSABLE_CLAIMED()) {
            if (this.t1a_1.atomicfu$compareAndSet(get_REUSABLE_CLAIMED(), continuation))
              return null;
          } else {
            if (tmp1__anonymous__uwfjfc instanceof Error) {
              {
                var tmp0_require = this.t1a_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, null);
                {
                }
                {
                  {
                  }
                  if (!tmp0_require) {
                    var tmp$ret$0;
                    {
                      tmp$ret$0 = 'Failed requirement.';
                    }
                    var message = tmp$ret$0;
                    throw IllegalArgumentException_init_$Create$(toString_0(message));
                  }
                }
              }
              return tmp1__anonymous__uwfjfc;
            } else {
              var tmp1_error = 'Inconsistent state ' + toString(tmp1__anonymous__uwfjfc);
              throw IllegalStateException_init_$Create$(toString_0(tmp1_error));
            }
          }
        }
      }
    }
  };
  DispatchedContinuation.prototype.k1b = function (cause) {
    {
      var tmp0_loop = this.t1a_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.z16_1;
          var tmp0_subject = tmp1__anonymous__uwfjfc;
          if (equals(tmp0_subject, get_REUSABLE_CLAIMED())) {
            if (this.t1a_1.atomicfu$compareAndSet(get_REUSABLE_CLAIMED(), cause))
              return true;
          } else {
            if (tmp0_subject instanceof Error)
              return true;
            else {
              if (this.t1a_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, null))
                return false;
            }
          }
        }
      }
    }
  };
  DispatchedContinuation.prototype.a1c = function () {
    var state = this.r1a_1;
    {
    }
    this.r1a_1 = get_UNDEFINED();
    return state;
  };
  DispatchedContinuation.prototype.y1b = function () {
    return this;
  };
  DispatchedContinuation.prototype.q4 = function (result) {
    var context = this.q1a_1.s4();
    var state = toState$default(result, null, 1, null);
    if (this.p1a_1.m1d(context)) {
      this.r1a_1 = state;
      this.i1o(get_MODE_ATOMIC());
      this.p1a_1.n1d(context, this);
    } else {
      var tmp$ret$0;
      $l$block: {
        var tmp0_executeUnconfined = get_MODE_ATOMIC();
        {
        }
        var eventLoop = ThreadLocalEventLoop_getInstance().j1e();
        if (false) {}
        var tmp;
        if (eventLoop.c1e()) {
          this.r1a_1 = state;
          this.i1o(tmp0_executeUnconfined);
          eventLoop.a1e(this);
          tmp = true;
        } else {
          {
            eventLoop.f1e(true);
            try {
              {
                var tmp$ret$1;
                {
                  var tmp0_withCoroutineContext = this.s4();
                  var tmp1_withCoroutineContext = this.s1a_1;
                  tmp$ret$1 = this.q1a_1.q4(result);
                }
              }
              $l$loop: while (true) {
                if (!eventLoop.v1d())
                  break $l$loop;
              }
            } catch ($p) {
              if ($p instanceof Error) {
                this.n1c($p, null);
              } else {
                throw $p;
              }
            }
            finally {
              eventLoop.g1e(true);
            }
          }
          tmp = false;
        }
        tmp$ret$0 = tmp;
      }
    }
  };
  DispatchedContinuation.prototype.b1c = function (takenState, cause) {
    if (takenState instanceof CompletedWithCancellation) {
      takenState.k1d_1(cause);
    }
  };
  DispatchedContinuation.prototype.m1o = function (state) {
    var job = this.s4().f8(Key_getInstance_2());
    if (!(job == null) ? !job.p17() : false) {
      var cause = job.m18();
      this.b1c(state, cause);
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_failure = Companion_getInstance_0();
          tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(cause));
        }
        tmp$ret$1 = this.q4(tmp$ret$0);
      }
      return true;
    }
    return false;
  };
  DispatchedContinuation.prototype.n1o = function (result) {
    var tmp$ret$0;
    {
      var tmp0_withContinuationContext = this.q1a_1;
      var tmp1_withContinuationContext = this.s1a_1;
      tmp$ret$0 = this.q1a_1.q4(result);
    }
  };
  DispatchedContinuation.prototype.toString = function () {
    return 'DispatchedContinuation[' + this.p1a_1 + ', ' + toDebugString(this.q1a_1) + ']';
  };
  DispatchedContinuation.$metadata$ = classMeta('DispatchedContinuation', [CoroutineStackFrame, Continuation], undefined, undefined, undefined, DispatchedTask.prototype);
  function executeUnconfined(_this__u8e3s4, contState, mode, doYield, block) {
    init_properties_DispatchedContinuation_kt_s7rtw6();
    {
    }
    var eventLoop = ThreadLocalEventLoop_getInstance().j1e();
    if (doYield ? eventLoop.d1e() : false)
      return false;
    var tmp;
    if (eventLoop.c1e()) {
      _this__u8e3s4.r1a_1 = contState;
      _this__u8e3s4.i1o(mode);
      eventLoop.a1e(_this__u8e3s4);
      tmp = true;
    } else {
      {
        eventLoop.f1e(true);
        try {
          block();
          $l$loop: while (true) {
            if (!eventLoop.v1d())
              break $l$loop;
          }
        } catch ($p) {
          if ($p instanceof Error) {
            _this__u8e3s4.n1c($p, null);
          } else {
            throw $p;
          }
        }
        finally {
          eventLoop.g1e(true);
        }
      }
      tmp = false;
    }
    return tmp;
  }
  var properties_initialized_DispatchedContinuation_kt_2siadq;
  function init_properties_DispatchedContinuation_kt_s7rtw6() {
    if (properties_initialized_DispatchedContinuation_kt_2siadq) {
    } else {
      properties_initialized_DispatchedContinuation_kt_2siadq = true;
      UNDEFINED = new Symbol('UNDEFINED');
      REUSABLE_CLAIMED = new Symbol('REUSABLE_CLAIMED');
    }
  }
  function get_MODE_CANCELLABLE() {
    return MODE_CANCELLABLE;
  }
  var MODE_CANCELLABLE;
  function DispatchedTask(resumeMode) {
    SchedulerTask.call(this);
    this.i1b_1 = resumeMode;
  }
  DispatchedTask.prototype.i1o = function (_set____db54di) {
    this.i1b_1 = _set____db54di;
  };
  DispatchedTask.prototype.j1b = function () {
    return this.i1b_1;
  };
  DispatchedTask.prototype.b1c = function (takenState, cause) {
  };
  DispatchedTask.prototype.j1c = function (state) {
    return (state == null ? true : isObject(state)) ? state : THROW_CCE();
  };
  DispatchedTask.prototype.l1c = function (state) {
    var tmp0_safe_receiver = state instanceof CompletedExceptionally ? state : null;
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.u17_1;
  };
  DispatchedTask.prototype.m1c = function () {
    {
    }
    var taskContext = get_taskContext(this);
    var fatalException = null;
    try {
      var tmp = this.y1b();
      var delegate = tmp instanceof DispatchedContinuation ? tmp : THROW_CCE();
      var continuation = delegate.q1a_1;
      var tmp$ret$5;
      {
        var tmp0_withContinuationContext = delegate.s1a_1;
        var context = continuation.s4();
        var state = this.a1c();
        var exception = this.l1c(state);
        var job = (exception == null ? get_isCancellableMode(this.i1b_1) : false) ? context.f8(Key_getInstance_2()) : null;
        var tmp_0;
        if (!(job == null) ? !job.p17() : false) {
          var cause = job.m18();
          this.b1c(state, cause);
          var tmp$ret$0;
          {
            var tmp0_failure = Companion_getInstance_0();
            var tmp1_failure = recoverStackTrace(cause, continuation);
            tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(tmp1_failure));
          }
          tmp_0 = continuation.q4(tmp$ret$0);
        } else {
          var tmp_1;
          if (!(exception == null)) {
            var tmp$ret$2;
            {
              var tmp$ret$1;
              {
                var tmp0_failure_0 = Companion_getInstance_0();
                tmp$ret$1 = _Result___init__impl__xyqfz8(createFailure(exception));
              }
              tmp$ret$2 = continuation.q4(tmp$ret$1);
            }
            tmp_1 = tmp$ret$2;
          } else {
            var tmp$ret$4;
            {
              var tmp2_resume = this.j1c(state);
              var tmp$ret$3;
              {
                var tmp0_success = Companion_getInstance_0();
                tmp$ret$3 = _Result___init__impl__xyqfz8(tmp2_resume);
              }
              tmp$ret$4 = continuation.q4(tmp$ret$3);
            }
            tmp_1 = tmp$ret$4;
          }
          tmp_0 = tmp_1;
        }
        tmp$ret$5 = tmp_0;
      }
    } catch ($p) {
      if ($p instanceof Error) {
        fatalException = $p;
      } else {
        throw $p;
      }
    }
    finally {
      var tmp$ret$8;
      {
        var tmp_2;
        try {
          var tmp$ret$6;
          {
            var tmp0_success_0 = Companion_getInstance_0();
            var tmp1_success = Unit_getInstance();
            tmp$ret$6 = _Result___init__impl__xyqfz8(Unit_getInstance());
          }
          tmp_2 = tmp$ret$6;
        } catch ($p) {
          var tmp_3;
          if ($p instanceof Error) {
            var tmp$ret$7;
            {
              var tmp2_failure = Companion_getInstance_0();
              tmp$ret$7 = _Result___init__impl__xyqfz8(createFailure($p));
            }
            tmp_3 = tmp$ret$7;
          } else {
            throw $p;
          }
          tmp_2 = tmp_3;
        }
        tmp$ret$8 = tmp_2;
      }
      var result = tmp$ret$8;
      this.n1c(fatalException, Result__exceptionOrNull_impl_p6xea9(result));
    }
  };
  DispatchedTask.prototype.n1c = function (exception, finallyException) {
    if (exception === null ? finallyException === null : false)
      return Unit_getInstance();
    if (!(exception === null) ? !(finallyException === null) : false) {
      {
      }
    }
    var tmp0_elvis_lhs = exception;
    var cause = tmp0_elvis_lhs == null ? finallyException : tmp0_elvis_lhs;
    var reason = new CoroutinesInternalError('Fatal exception in coroutines machinery for ' + this + '. ' + "Please read KDoc to 'handleFatalException' method and report this incident to maintainers", ensureNotNull(cause));
    handleCoroutineException(this.y1b().s4(), reason);
  };
  DispatchedTask.$metadata$ = classMeta('DispatchedTask', undefined, undefined, undefined, undefined, SchedulerTask.prototype);
  function get_MODE_UNINITIALIZED() {
    return MODE_UNINITIALIZED;
  }
  var MODE_UNINITIALIZED;
  function get_isReusableMode(_this__u8e3s4) {
    return _this__u8e3s4 === 2;
  }
  function get_MODE_CANCELLABLE_REUSABLE() {
    return MODE_CANCELLABLE_REUSABLE;
  }
  var MODE_CANCELLABLE_REUSABLE;
  function get_isCancellableMode(_this__u8e3s4) {
    return _this__u8e3s4 === 1 ? true : _this__u8e3s4 === 2;
  }
  function dispatch(_this__u8e3s4, mode) {
    {
    }
    var delegate = _this__u8e3s4.y1b();
    var undispatched = mode === 4;
    var tmp;
    var tmp_0;
    if (!undispatched) {
      tmp_0 = delegate instanceof DispatchedContinuation;
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = get_isCancellableMode(mode) === get_isCancellableMode(_this__u8e3s4.i1b_1);
    } else {
      tmp = false;
    }
    if (tmp) {
      var dispatcher = delegate.p1a_1;
      var context = delegate.s4();
      if (dispatcher.m1d(context)) {
        dispatcher.n1d(context, _this__u8e3s4);
      } else {
        resumeUnconfined(_this__u8e3s4);
      }
    } else {
      resume(_this__u8e3s4, delegate, undispatched);
    }
  }
  function get_MODE_UNDISPATCHED() {
    return MODE_UNDISPATCHED;
  }
  var MODE_UNDISPATCHED;
  function get_MODE_ATOMIC() {
    return MODE_ATOMIC;
  }
  var MODE_ATOMIC;
  function runUnconfinedEventLoop(_this__u8e3s4, eventLoop, block) {
    eventLoop.f1e(true);
    try {
      block();
      $l$loop: while (true) {
        if (!eventLoop.v1d())
          break $l$loop;
      }
    } catch ($p) {
      if ($p instanceof Error) {
        _this__u8e3s4.n1c($p, null);
      } else {
        throw $p;
      }
    }
    finally {
      eventLoop.g1e(true);
    }
  }
  function resumeWithStackTrace(_this__u8e3s4, exception) {
    var tmp$ret$0;
    {
      var tmp0_failure = Companion_getInstance_0();
      var tmp1_failure = recoverStackTrace(exception, _this__u8e3s4);
      tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(tmp1_failure));
    }
    _this__u8e3s4.q4(tmp$ret$0);
  }
  function resumeUnconfined(_this__u8e3s4) {
    var eventLoop = ThreadLocalEventLoop_getInstance().j1e();
    if (eventLoop.c1e()) {
      eventLoop.a1e(_this__u8e3s4);
    } else {
      {
        eventLoop.f1e(true);
        try {
          {
            resume(_this__u8e3s4, _this__u8e3s4.y1b(), true);
          }
          $l$loop: while (true) {
            if (!eventLoop.v1d())
              break $l$loop;
          }
        } catch ($p) {
          if ($p instanceof Error) {
            _this__u8e3s4.n1c($p, null);
          } else {
            throw $p;
          }
        }
        finally {
          eventLoop.g1e(true);
        }
      }
    }
  }
  function resume(_this__u8e3s4, delegate, undispatched) {
    var state = _this__u8e3s4.a1c();
    var exception = _this__u8e3s4.l1c(state);
    var tmp;
    if (!(exception == null)) {
      var tmp$ret$0;
      {
        var tmp0_failure = Companion_getInstance_0();
        tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(exception));
      }
      tmp = tmp$ret$0;
    } else {
      var tmp$ret$1;
      {
        var tmp1_success = Companion_getInstance_0();
        var tmp2_success = _this__u8e3s4.j1c(state);
        tmp$ret$1 = _Result___init__impl__xyqfz8(tmp2_success);
      }
      tmp = tmp$ret$1;
    }
    var result = tmp;
    if (undispatched) {
      var tmp3_resumeUndispatchedWith = delegate instanceof DispatchedContinuation ? delegate : THROW_CCE();
      var tmp$ret$2;
      {
        var tmp0_withContinuationContext = tmp3_resumeUndispatchedWith.q1a_1;
        var tmp1_withContinuationContext = tmp3_resumeUndispatchedWith.s1a_1;
        tmp$ret$2 = tmp3_resumeUndispatchedWith.q1a_1.q4(result);
      }
    } else
      delegate.q4(result);
  }
  function _InlineList___init__impl__z8n56(holder) {
    return holder;
  }
  function _InlineList___init__impl__z8n56_0(holder, $mask0, $marker) {
    if (!(($mask0 & 1) === 0))
      holder = null;
    var tmp = _InlineList___init__impl__z8n56(holder);
    return tmp;
  }
  function _get_holder__f6h5pd($this) {
    return $this;
  }
  function InlineList__plus_impl_nuetvo($this, element) {
    {
    }
    var tmp0_subject = _get_holder__f6h5pd($this);
    var tmp;
    if (tmp0_subject == null) {
      tmp = _InlineList___init__impl__z8n56(element);
    } else {
      if (tmp0_subject instanceof ArrayList) {
        var tmp_0 = _get_holder__f6h5pd($this);
        (tmp_0 instanceof ArrayList ? tmp_0 : THROW_CCE()).b(element);
        tmp = _InlineList___init__impl__z8n56(_get_holder__f6h5pd($this));
      } else {
        var list = ArrayList_init_$Create$(4);
        var tmp_1 = _get_holder__f6h5pd($this);
        list.b((tmp_1 == null ? true : isObject(tmp_1)) ? tmp_1 : THROW_CCE());
        list.b(element);
        tmp = _InlineList___init__impl__z8n56(list);
      }
    }
    return tmp;
  }
  function InlineList__forEachReversed_impl_jituug($this, action) {
    var tmp0_subject = _get_holder__f6h5pd($this);
    if (tmp0_subject == null)
      return Unit_getInstance();
    else {
      if (!(tmp0_subject instanceof ArrayList)) {
        var tmp = _get_holder__f6h5pd($this);
        action((tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE());
      } else {
        var tmp_0 = _get_holder__f6h5pd($this);
        var list = tmp_0 instanceof ArrayList ? tmp_0 : THROW_CCE();
        var inductionVariable = list.m() - 1 | 0;
        if (0 <= inductionVariable)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + -1 | 0;
            action(list.r(i));
          }
           while (0 <= inductionVariable);
      }
    }
  }
  function InlineList__toString_impl_1aej86($this) {
    return 'InlineList(holder=' + toString($this) + ')';
  }
  function InlineList__hashCode_impl_n1kg11($this) {
    return $this == null ? 0 : hashCode($this);
  }
  function InlineList__equals_impl_wwe0i1($this, other) {
    if (!(other instanceof InlineList))
      return false;
    var tmp0_other_with_cast = other instanceof InlineList ? other.o1o_1 : THROW_CCE();
    if (!equals($this, tmp0_other_with_cast))
      return false;
    return true;
  }
  function InlineList(holder) {
    this.o1o_1 = holder;
  }
  InlineList.prototype.toString = function () {
    return InlineList__toString_impl_1aej86(this.o1o_1);
  };
  InlineList.prototype.hashCode = function () {
    return InlineList__hashCode_impl_n1kg11(this.o1o_1);
  };
  InlineList.prototype.equals = function (other) {
    return InlineList__equals_impl_wwe0i1(this.o1o_1, other);
  };
  InlineList.$metadata$ = classMeta('InlineList');
  function get_REMOVE_PREPARED() {
    init_properties_LockFreeLinkedList_common_kt_ecmrzd();
    return REMOVE_PREPARED;
  }
  var REMOVE_PREPARED;
  var properties_initialized_LockFreeLinkedList_common_kt_b0cmf9;
  function init_properties_LockFreeLinkedList_common_kt_ecmrzd() {
    if (properties_initialized_LockFreeLinkedList_common_kt_b0cmf9) {
    } else {
      properties_initialized_LockFreeLinkedList_common_kt_b0cmf9 = true;
      REMOVE_PREPARED = new Symbol('REMOVE_PREPARED');
    }
  }
  function bindCancellationFun(_this__u8e3s4, element, context) {
    return bindCancellationFun$lambda(_this__u8e3s4, element, context);
  }
  function UndeliveredElementException(message, cause) {
    RuntimeException_init_$Init$(message, cause, this);
    captureStack(this, UndeliveredElementException);
  }
  UndeliveredElementException.$metadata$ = classMeta('UndeliveredElementException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function callUndeliveredElementCatchingException(_this__u8e3s4, element, undeliveredElementException) {
    try {
      _this__u8e3s4(element);
    } catch ($p) {
      if ($p instanceof Error) {
        if (!(undeliveredElementException == null) ? !(undeliveredElementException.cause === $p) : false) {
          {
          }
        } else {
          return new UndeliveredElementException('Exception in undelivered element handler for ' + element, $p);
        }
      } else {
        throw $p;
      }
    }
    return undeliveredElementException;
  }
  function callUndeliveredElementCatchingException$default(_this__u8e3s4, element, undeliveredElementException, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      undeliveredElementException = null;
    return callUndeliveredElementCatchingException(_this__u8e3s4, element, undeliveredElementException);
  }
  function callUndeliveredElement(_this__u8e3s4, element, context) {
    var tmp0_safe_receiver = callUndeliveredElementCatchingException(_this__u8e3s4, element, null);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        tmp$ret$0 = handleCoroutineException(context, tmp0_safe_receiver);
      }
    }
  }
  function bindCancellationFun$lambda($this_bindCancellationFun, $element, $context) {
    return function (_anonymous_parameter_0__qggqh8) {
      callUndeliveredElement($this_bindCancellationFun, $element, $context);
      return Unit_getInstance();
    };
  }
  function ContextScope(context) {
    this.p1o_1 = context;
  }
  ContextScope.prototype.o17 = function () {
    return this.p1o_1;
  };
  ContextScope.prototype.toString = function () {
    return 'CoroutineScope(coroutineContext=' + this.p1o_1 + ')';
  };
  ContextScope.$metadata$ = classMeta('ContextScope', [CoroutineScope]);
  function Symbol(symbol) {
    this.q1o_1 = symbol;
  }
  Symbol.prototype.toString = function () {
    return '<' + this.q1o_1 + '>';
  };
  Symbol.$metadata$ = classMeta('Symbol');
  function systemProp(propertyName, defaultValue, minValue, maxValue) {
    return systemProp_0(propertyName, toLong(defaultValue), toLong(minValue), toLong(maxValue)).fb();
  }
  function systemProp_0(propertyName, defaultValue, minValue, maxValue) {
    var tmp0_elvis_lhs = systemProp_1(propertyName);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return defaultValue;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var value = tmp;
    var tmp1_elvis_lhs = toLongOrNull(value);
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      var tmp0_error = "System property '" + propertyName + "' has unrecognized value '" + value + "'";
      throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
    } else {
      tmp_0 = tmp1_elvis_lhs;
    }
    var parsed = tmp_0;
    if (!(minValue.m1(parsed) <= 0 ? parsed.m1(maxValue) <= 0 : false)) {
      {
        var tmp1_error = "System property '" + propertyName + "' should be in range " + toString_0(minValue) + '..' + toString_0(maxValue) + ", but is '" + toString_0(parsed) + "'";
        throw IllegalStateException_init_$Create$(toString_0(tmp1_error));
      }
    }
    return parsed;
  }
  function startCoroutineCancellable(_this__u8e3s4, receiver, completion, onCancellation) {
    var tmp;
    try {
      var tmp_0 = intercepted(createCoroutineUnintercepted(_this__u8e3s4, receiver, completion));
      var tmp$ret$0;
      {
        var tmp0_success = Companion_getInstance_0();
        tmp$ret$0 = _Result___init__impl__xyqfz8(Unit_getInstance());
      }
      tmp = resumeCancellableWith(tmp_0, tmp$ret$0, onCancellation);
    } catch ($p) {
      var tmp_1;
      if ($p instanceof Error) {
        tmp_1 = dispatcherFailure$accessor$paksz7(completion, $p);
      } else {
        throw $p;
      }
      tmp = tmp_1;
    }
    return tmp;
  }
  function startCoroutineCancellable$default(_this__u8e3s4, receiver, completion, onCancellation, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      onCancellation = null;
    return startCoroutineCancellable(_this__u8e3s4, receiver, completion, onCancellation);
  }
  function dispatcherFailure(completion, e) {
    var tmp$ret$0;
    {
      var tmp0_failure = Companion_getInstance_0();
      tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(e));
    }
    completion.q4(tmp$ret$0);
    throw e;
  }
  function startCoroutineCancellable_0(_this__u8e3s4, fatalCompletion) {
    var tmp;
    try {
      var tmp_0 = intercepted(_this__u8e3s4);
      var tmp$ret$0;
      {
        var tmp0_success = Companion_getInstance_0();
        tmp$ret$0 = _Result___init__impl__xyqfz8(Unit_getInstance());
      }
      var tmp_1 = tmp$ret$0;
      tmp = resumeCancellableWith$default(tmp_0, tmp_1, null, 2, null);
    } catch ($p) {
      var tmp_2;
      if ($p instanceof Error) {
        tmp_2 = dispatcherFailure$accessor$paksz7(fatalCompletion, $p);
      } else {
        throw $p;
      }
      tmp = tmp_2;
    }
    return tmp;
  }
  function dispatcherFailure$accessor$paksz7(completion, e) {
    return dispatcherFailure(completion, e);
  }
  function startCoroutineUnintercepted(_this__u8e3s4, receiver, completion) {
    var tmp$ret$6;
    $l$block: {
      var tmp$ret$0;
      {
        tmp$ret$0 = completion;
      }
      var actualCompletion = tmp$ret$0;
      var tmp;
      try {
        var tmp$ret$3;
        {
          var tmp$ret$2;
          {
            var tmp$ret$1;
            {
              tmp$ret$1 = _this__u8e3s4;
            }
            var a = tmp$ret$1;
            tmp$ret$2 = typeof a === 'function' ? a(receiver, actualCompletion) : _this__u8e3s4.s7(receiver, actualCompletion);
          }
          tmp$ret$3 = tmp$ret$2;
        }
        tmp = tmp$ret$3;
      } catch ($p) {
        var tmp_0;
        if ($p instanceof Error) {
          var tmp$ret$5;
          {
            var tmp$ret$4;
            {
              var tmp0_failure = Companion_getInstance_0();
              tmp$ret$4 = _Result___init__impl__xyqfz8(createFailure($p));
            }
            tmp$ret$5 = actualCompletion.q4(tmp$ret$4);
          }
          tmp$ret$6 = Unit_getInstance();
          break $l$block;
        } else {
          throw $p;
        }
        tmp = tmp_0;
      }
      var value = tmp;
      if (!(value === get_COROUTINE_SUSPENDED())) {
        var tmp$ret$8;
        {
          var tmp0_resume = (value == null ? true : isObject(value)) ? value : THROW_CCE();
          var tmp$ret$7;
          {
            var tmp0_success = Companion_getInstance_0();
            tmp$ret$7 = _Result___init__impl__xyqfz8(tmp0_resume);
          }
          tmp$ret$8 = actualCompletion.q4(tmp$ret$7);
        }
      }
    }
  }
  function startDirect(completion, block) {
    var tmp$ret$0;
    {
      tmp$ret$0 = completion;
    }
    var actualCompletion = tmp$ret$0;
    var tmp;
    try {
      tmp = block(actualCompletion);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        var tmp$ret$2;
        {
          var tmp$ret$1;
          {
            var tmp0_failure = Companion_getInstance_0();
            tmp$ret$1 = _Result___init__impl__xyqfz8(createFailure($p));
          }
          tmp$ret$2 = actualCompletion.q4(tmp$ret$1);
        }
        return Unit_getInstance();
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    var value = tmp;
    if (!(value === get_COROUTINE_SUSPENDED())) {
      var tmp$ret$4;
      {
        var tmp0_resume = (value == null ? true : isObject(value)) ? value : THROW_CCE();
        var tmp$ret$3;
        {
          var tmp0_success = Companion_getInstance_0();
          tmp$ret$3 = _Result___init__impl__xyqfz8(tmp0_resume);
        }
        tmp$ret$4 = actualCompletion.q4(tmp$ret$3);
      }
    }
  }
  function startCoroutineUndispatched(_this__u8e3s4, receiver, completion) {
    var tmp$ret$8;
    $l$block: {
      var tmp$ret$0;
      {
        tmp$ret$0 = completion;
      }
      var actualCompletion = tmp$ret$0;
      var tmp;
      try {
        var tmp$ret$5;
        {
          var tmp$ret$4;
          {
            var tmp0_withCoroutineContext = completion.s4();
            var tmp$ret$3;
            {
              var tmp$ret$2;
              {
                var tmp$ret$1;
                {
                  tmp$ret$1 = _this__u8e3s4;
                }
                var a = tmp$ret$1;
                tmp$ret$2 = typeof a === 'function' ? a(receiver, actualCompletion) : _this__u8e3s4.s7(receiver, actualCompletion);
              }
              tmp$ret$3 = tmp$ret$2;
            }
            tmp$ret$4 = tmp$ret$3;
          }
          tmp$ret$5 = tmp$ret$4;
        }
        tmp = tmp$ret$5;
      } catch ($p) {
        var tmp_0;
        if ($p instanceof Error) {
          var tmp$ret$7;
          {
            var tmp$ret$6;
            {
              var tmp0_failure = Companion_getInstance_0();
              tmp$ret$6 = _Result___init__impl__xyqfz8(createFailure($p));
            }
            tmp$ret$7 = actualCompletion.q4(tmp$ret$6);
          }
          tmp$ret$8 = Unit_getInstance();
          break $l$block;
        } else {
          throw $p;
        }
        tmp = tmp_0;
      }
      var value = tmp;
      if (!(value === get_COROUTINE_SUSPENDED())) {
        var tmp$ret$10;
        {
          var tmp0_resume = (value == null ? true : isObject(value)) ? value : THROW_CCE();
          var tmp$ret$9;
          {
            var tmp0_success = Companion_getInstance_0();
            tmp$ret$9 = _Result___init__impl__xyqfz8(tmp0_resume);
          }
          tmp$ret$10 = actualCompletion.q4(tmp$ret$9);
        }
      }
    }
  }
  function get_NOT_SELECTED() {
    init_properties_Select_kt_rcehwi();
    return NOT_SELECTED;
  }
  var NOT_SELECTED;
  function get_ALREADY_SELECTED() {
    init_properties_Select_kt_rcehwi();
    return ALREADY_SELECTED;
  }
  var ALREADY_SELECTED;
  function get_UNDECIDED_0() {
    init_properties_Select_kt_rcehwi();
    return UNDECIDED_0;
  }
  var UNDECIDED_0;
  function get_RESUMED_0() {
    init_properties_Select_kt_rcehwi();
    return RESUMED_0;
  }
  var RESUMED_0;
  function get_selectOpSequenceNumber() {
    init_properties_Select_kt_rcehwi();
    return selectOpSequenceNumber;
  }
  var selectOpSequenceNumber;
  function SelectClause0() {
  }
  SelectClause0.$metadata$ = interfaceMeta('SelectClause0');
  function SelectInstance() {
  }
  SelectInstance.$metadata$ = interfaceMeta('SelectInstance');
  function SeqNumber() {
    this.r1o_1 = atomic$long$1(new Long(1, 0));
  }
  SeqNumber.prototype.o = function () {
    return this.r1o_1.atomicfu$incrementAndGet$long();
  };
  SeqNumber.$metadata$ = classMeta('SeqNumber');
  function SelectClause1() {
  }
  SelectClause1.$metadata$ = interfaceMeta('SelectClause1');
  function SelectBuilder() {
  }
  SelectBuilder.$metadata$ = interfaceMeta('SelectBuilder');
  function prepareSelectOp($this) {
    {
      var tmp0_loop = $this.b1p_1.x1o_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.z16_1;
          if (tmp1__anonymous__uwfjfc === $this)
            return null;
          else {
            if (tmp1__anonymous__uwfjfc instanceof OpDescriptor) {
              tmp1__anonymous__uwfjfc.s1g($this.b1p_1);
            } else {
              if (tmp1__anonymous__uwfjfc === get_NOT_SELECTED()) {
                if ($this.b1p_1.x1o_1.atomicfu$compareAndSet(get_NOT_SELECTED(), $this))
                  return null;
              } else {
                return get_ALREADY_SELECTED();
              }
            }
          }
        }
      }
    }
  }
  function undoPrepare($this) {
    $this.b1p_1.x1o_1.atomicfu$compareAndSet($this, get_NOT_SELECTED());
  }
  function completeSelect($this, failure) {
    var selectSuccess = failure == null;
    var update = selectSuccess ? null : get_NOT_SELECTED();
    if ($this.b1p_1.x1o_1.atomicfu$compareAndSet($this, update)) {
      if (selectSuccess)
        doAfterSelect($this.b1p_1);
    }
  }
  function _set_parentHandle__bde57($this, value) {
    $this.z1o_1.z16_1 = value;
  }
  function _get_parentHandle__f8dcex($this) {
    return $this.z1o_1.z16_1;
  }
  function initCancellability($this) {
    var tmp0_elvis_lhs = $this.s4().f8(Key_getInstance_2());
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return Unit_getInstance();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var parent = tmp;
    var tmp$ret$1;
    {
      var tmp0__get_asHandler__gq3rkj = new SelectOnCancelling($this);
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0__get_asHandler__gq3rkj;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    var newRegistration = parent.r18(true, false, tmp$ret$1, 2, null);
    _set_parentHandle__bde57($this, newRegistration);
    if ($this.t1g())
      newRegistration.n1a();
  }
  function SelectOnCancelling($outer) {
    this.i1p_1 = $outer;
    JobCancellingNode.call(this);
  }
  SelectOnCancelling.prototype.m1a = function (cause) {
    if (this.i1p_1.w1g())
      this.i1p_1.v1g(this.j1f().m18());
  };
  SelectOnCancelling.prototype.invoke = function (cause) {
    return this.m1a(cause);
  };
  SelectOnCancelling.$metadata$ = classMeta('SelectOnCancelling', undefined, undefined, undefined, undefined, JobCancellingNode.prototype);
  function doAfterSelect($this) {
    var tmp0_safe_receiver = _get_parentHandle__f8dcex($this);
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.n1a();
    }
    {
      var cur = $this.t1e();
      while (!equals(cur, $this)) {
        if (cur instanceof DisposeNode) {
          var tmp0__anonymous__q1qw7t = cur;
          tmp0__anonymous__q1qw7t.m1p_1.n1a();
        }
        cur = cur.d1b_1;
      }
    }
  }
  function PairSelectOp(otherOp) {
    OpDescriptor.call(this);
    this.n1p_1 = otherOp;
  }
  PairSelectOp.prototype.s1g = function (affected) {
    var impl = affected instanceof SelectBuilderImpl ? affected : THROW_CCE();
    this.n1p_1.t1k();
    var decision = this.n1p_1.m1j_1.e1o(null);
    var update = decision == null ? this.n1p_1.l1j_1 : get_NOT_SELECTED();
    impl.x1o_1.atomicfu$compareAndSet(this, update);
    return decision;
  };
  PairSelectOp.prototype.a1o = function () {
    return this.n1p_1.m1j_1;
  };
  PairSelectOp.$metadata$ = classMeta('PairSelectOp', undefined, undefined, undefined, undefined, OpDescriptor.prototype);
  function AtomicSelectOp(impl, desc) {
    AtomicOp.call(this);
    this.b1p_1 = impl;
    this.c1p_1 = desc;
    this.d1p_1 = get_selectOpSequenceNumber().o();
    this.c1p_1.h1o_1 = this;
  }
  AtomicSelectOp.prototype.o1p = function () {
    return this.b1p_1;
  };
  AtomicSelectOp.prototype.d1o = function () {
    return this.d1p_1;
  };
  AtomicSelectOp.prototype.p1p = function (affected) {
    if (affected == null) {
      var tmp0_safe_receiver = prepareSelectOp(this);
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$0;
        {
          {
          }
          return tmp0_safe_receiver;
        }
      }
    }
    try {
      return this.c1p_1.z1j(this);
    } catch ($p) {
      if ($p instanceof Error) {
        if (affected == null)
          undoPrepare(this);
        throw $p;
      } else {
        throw $p;
      }
    }
  };
  AtomicSelectOp.prototype.f1o = function (affected) {
    return this.p1p((affected == null ? true : isObject(affected)) ? affected : THROW_CCE());
  };
  AtomicSelectOp.prototype.q1p = function (affected, failure) {
    completeSelect(this, failure);
    this.c1p_1.a1k(this, failure);
  };
  AtomicSelectOp.prototype.g1o = function (affected, failure) {
    return this.q1p((affected == null ? true : isObject(affected)) ? affected : THROW_CCE(), failure);
  };
  AtomicSelectOp.prototype.toString = function () {
    return 'AtomicSelectOp(sequence=' + toString_0(this.d1p_1) + ')';
  };
  AtomicSelectOp.$metadata$ = classMeta('AtomicSelectOp', undefined, undefined, undefined, undefined, AtomicOp.prototype);
  function DisposeNode(handle) {
    LinkedListNode.call(this);
    this.m1p_1 = handle;
  }
  DisposeNode.prototype.r1p = function () {
    return this.m1p_1;
  };
  DisposeNode.$metadata$ = classMeta('DisposeNode', undefined, undefined, undefined, undefined, LinkedListNode.prototype);
  function SelectBuilderImpl(uCont) {
    LinkedListHead.call(this);
    this.w1o_1 = uCont;
    this.x1o_1 = atomic$ref$1(get_NOT_SELECTED());
    this.y1o_1 = atomic$ref$1(get_UNDECIDED_0());
    this.z1o_1 = atomic$ref$1(null);
  }
  SelectBuilderImpl.prototype.s4 = function () {
    return this.w1o_1.s4();
  };
  SelectBuilderImpl.prototype.u1g = function () {
    return this;
  };
  SelectBuilderImpl.prototype.jc = function (result) {
    var tmp$ret$1;
    $l$block_0: {
      {
      }
      {
        var tmp0_loop = this.y1o_1;
        while (true) {
          {
            var tmp1__anonymous__uwfjfc = tmp0_loop.z16_1;
            if (tmp1__anonymous__uwfjfc === get_UNDECIDED_0()) {
              var tmp$ret$0;
              {
                tmp$ret$0 = toState$default(result, null, 1, null);
              }
              var update = tmp$ret$0;
              if (this.y1o_1.atomicfu$compareAndSet(get_UNDECIDED_0(), update)) {
                tmp$ret$1 = Unit_getInstance();
                break $l$block_0;
              }
            } else if (tmp1__anonymous__uwfjfc === get_COROUTINE_SUSPENDED()) {
              if (this.y1o_1.atomicfu$compareAndSet(get_COROUTINE_SUSPENDED(), get_RESUMED_0())) {
                {
                  if (_Result___get_isFailure__impl__jpiriv(result)) {
                    {
                      var tmp0_resumeWithStackTrace = this.w1o_1;
                      var tmp1_resumeWithStackTrace = ensureNotNull(Result__exceptionOrNull_impl_p6xea9(result));
                      var tmp$ret$2;
                      {
                        var tmp0_failure = Companion_getInstance_0();
                        var tmp1_failure = recoverStackTrace(tmp1_resumeWithStackTrace, tmp0_resumeWithStackTrace);
                        tmp$ret$2 = _Result___init__impl__xyqfz8(createFailure(tmp1_failure));
                      }
                      tmp0_resumeWithStackTrace.q4(tmp$ret$2);
                    }
                  } else {
                    this.w1o_1.q4(result);
                  }
                }
                tmp$ret$1 = Unit_getInstance();
                break $l$block_0;
              }
            } else
              throw IllegalStateException_init_$Create$('Already resumed');
          }
        }
      }
    }
  };
  SelectBuilderImpl.prototype.q4 = function (result) {
    return this.jc(result);
  };
  SelectBuilderImpl.prototype.v1g = function (exception) {
    var tmp$ret$1;
    $l$block_0: {
      {
      }
      {
        var tmp0_loop = this.y1o_1;
        while (true) {
          {
            var tmp1__anonymous__uwfjfc = tmp0_loop.z16_1;
            if (tmp1__anonymous__uwfjfc === get_UNDECIDED_0()) {
              var tmp$ret$0;
              {
                var tmp = recoverStackTrace(exception, this.w1o_1);
                tmp$ret$0 = CompletedExceptionally_init_$Create$(tmp, false, 2, null);
              }
              var update = tmp$ret$0;
              if (this.y1o_1.atomicfu$compareAndSet(get_UNDECIDED_0(), update)) {
                tmp$ret$1 = Unit_getInstance();
                break $l$block_0;
              }
            } else if (tmp1__anonymous__uwfjfc === get_COROUTINE_SUSPENDED()) {
              if (this.y1o_1.atomicfu$compareAndSet(get_COROUTINE_SUSPENDED(), get_RESUMED_0())) {
                {
                  var tmp_0 = intercepted(this.w1o_1);
                  var tmp$ret$2;
                  {
                    var tmp0_failure = Companion_getInstance_0();
                    tmp$ret$2 = _Result___init__impl__xyqfz8(createFailure(exception));
                  }
                  tmp_0.q4(tmp$ret$2);
                }
                tmp$ret$1 = Unit_getInstance();
                break $l$block_0;
              }
            } else
              throw IllegalStateException_init_$Create$('Already resumed');
          }
        }
      }
    }
  };
  SelectBuilderImpl.prototype.i1c = function () {
    if (!this.t1g())
      initCancellability(this);
    var result = this.y1o_1.z16_1;
    if (result === get_UNDECIDED_0()) {
      if (this.y1o_1.atomicfu$compareAndSet(get_UNDECIDED_0(), get_COROUTINE_SUSPENDED()))
        return get_COROUTINE_SUSPENDED();
      result = this.y1o_1.z16_1;
    }
    if (result === get_RESUMED_0())
      throw IllegalStateException_init_$Create$('Already resumed');
    else {
      if (result instanceof CompletedExceptionally)
        throw result.u17_1;
      else {
        return result;
      }
    }
  };
  SelectBuilderImpl.prototype.s1p = function (e) {
    if (this.w1g()) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_failure = Companion_getInstance_0();
          tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(e));
        }
        tmp$ret$1 = this.q4(tmp$ret$0);
      }
    } else {
      if (!(e instanceof CancellationException)) {
        var result = this.i1c();
        var tmp;
        if (!(result instanceof CompletedExceptionally)) {
          tmp = true;
        } else {
          tmp = !(unwrap(result.u17_1) === unwrap(e));
        }
        if (tmp) {
          handleCoroutineException(this.s4(), e);
        }
      }
    }
  };
  SelectBuilderImpl.prototype.t1g = function () {
    var tmp0_loop = this.x1o_1;
    while (true) {
      {
        var tmp1__anonymous__uwfjfc = tmp0_loop.z16_1;
        if (tmp1__anonymous__uwfjfc === get_NOT_SELECTED())
          return false;
        else {
          if (tmp1__anonymous__uwfjfc instanceof OpDescriptor) {
            tmp1__anonymous__uwfjfc.s1g(this);
          } else {
            return true;
          }
        }
      }
    }
    return Unit_getInstance();
  };
  SelectBuilderImpl.prototype.x1g = function (handle) {
    var node = new DisposeNode(handle);
    if (!this.t1g()) {
      this.a1f(node);
      if (!this.t1g())
        return Unit_getInstance();
    }
    handle.n1a();
  };
  SelectBuilderImpl.prototype.w1g = function () {
    var result = this.i1l(null);
    var tmp;
    if (result === get_RESUME_TOKEN()) {
      tmp = true;
    } else if (result == null) {
      tmp = false;
    } else {
      var tmp0_error = 'Unexpected trySelectIdempotent result ' + toString(result);
      throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
    }
    return tmp;
  };
  SelectBuilderImpl.prototype.i1l = function (otherOp) {
    {
      var tmp0_loop = this.x1o_1;
      while (true) {
        var tmp$ret$0;
        $l$block_0: {
          var tmp1__anonymous__uwfjfc = tmp0_loop.z16_1;
          if (tmp1__anonymous__uwfjfc === get_NOT_SELECTED()) {
            if (otherOp == null) {
              if (!this.x1o_1.atomicfu$compareAndSet(get_NOT_SELECTED(), null)) {
                tmp$ret$0 = Unit_getInstance();
                break $l$block_0;
              }
            } else {
              var pairSelectOp = new PairSelectOp(otherOp);
              if (!this.x1o_1.atomicfu$compareAndSet(get_NOT_SELECTED(), pairSelectOp)) {
                tmp$ret$0 = Unit_getInstance();
                break $l$block_0;
              }
              var decision = pairSelectOp.s1g(this);
              if (!(decision === null))
                return decision;
            }
            doAfterSelect(this);
            return get_RESUME_TOKEN();
          } else {
            if (tmp1__anonymous__uwfjfc instanceof OpDescriptor) {
              if (!(otherOp == null)) {
                var otherAtomicOp = otherOp.m1j_1;
                var tmp;
                if (otherAtomicOp instanceof AtomicSelectOp) {
                  tmp = otherAtomicOp.b1p_1 === this;
                } else {
                  tmp = false;
                }
                if (tmp) {
                  {
                    throw IllegalStateException_init_$Create$('Cannot use matching select clauses on the same object');
                  }
                } else {
                  if (otherAtomicOp.b1o(tmp1__anonymous__uwfjfc)) {
                    return get_RETRY_ATOMIC();
                  }
                }
              }
              tmp1__anonymous__uwfjfc.s1g(this);
            } else {
              if (otherOp == null)
                return null;
              else {
                if (tmp1__anonymous__uwfjfc === otherOp.l1j_1)
                  return get_RESUME_TOKEN();
                else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  };
  SelectBuilderImpl.prototype.s1l = function (desc) {
    return (new AtomicSelectOp(this, desc)).s1g(null);
  };
  SelectBuilderImpl.prototype.toString = function () {
    return 'SelectInstance(state=' + toString(this.x1o_1.z16_1) + ', result=' + toString(this.y1o_1.z16_1) + ')';
  };
  SelectBuilderImpl.prototype.s1o = function (_this__u8e3s4, block) {
    _this__u8e3s4.y19(this, block);
  };
  SelectBuilderImpl.$metadata$ = classMeta('SelectBuilderImpl', [SelectBuilder, SelectInstance, Continuation, CoroutineStackFrame], undefined, undefined, undefined, LinkedListHead.prototype);
  var properties_initialized_Select_kt_7rpl36;
  function init_properties_Select_kt_rcehwi() {
    if (properties_initialized_Select_kt_7rpl36) {
    } else {
      properties_initialized_Select_kt_7rpl36 = true;
      NOT_SELECTED = new Symbol('NOT_SELECTED');
      ALREADY_SELECTED = new Symbol('ALREADY_SELECTED');
      UNDECIDED_0 = new Symbol('UNDECIDED');
      RESUMED_0 = new Symbol('RESUMED');
      selectOpSequenceNumber = new SeqNumber();
    }
  }
  function CompletionHandlerBase() {
    LinkedListNode.call(this);
  }
  CompletionHandlerBase.$metadata$ = classMeta('CompletionHandlerBase', undefined, undefined, undefined, undefined, LinkedListNode.prototype);
  function invokeIt(_this__u8e3s4, cause) {
    var tmp0_subject = typeof _this__u8e3s4;
    if (tmp0_subject === 'function')
      _this__u8e3s4(cause);
    else {
      var tmp$ret$0;
      {
        tmp$ret$0 = _this__u8e3s4;
      }
      tmp$ret$0.invoke(cause);
    }
  }
  function get_asHandler(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0;
  }
  function get_asHandler_0(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0;
  }
  function CancelHandlerBase() {
  }
  CancelHandlerBase.$metadata$ = classMeta('CancelHandlerBase');
  function toDebugString(_this__u8e3s4) {
    return toString_0(_this__u8e3s4);
  }
  function withCoroutineContext(context, countOrElement, block) {
    return block();
  }
  function withContinuationContext(continuation, countOrElement, block) {
    return block();
  }
  function get_DefaultDelay() {
    var tmp = Dispatchers_getInstance().g1i_1;
    return isInterface(tmp, Delay) ? tmp : THROW_CCE();
  }
  function createDefaultDispatcher() {
    var tmp;
    if (isJsdom()) {
      tmp = NodeDispatcher_getInstance();
    } else {
      var tmp_0;
      var tmp_1;
      if (!(typeof window === 'undefined')) {
        var tmp$ret$0;
        {
          var tmp0_asDynamic = window;
          tmp$ret$0 = tmp0_asDynamic;
        }
        tmp_1 = tmp$ret$0 != null;
      } else {
        tmp_1 = false;
      }
      if (tmp_1) {
        var tmp$ret$1;
        {
          var tmp1_asDynamic = window;
          tmp$ret$1 = tmp1_asDynamic;
        }
        tmp_0 = !(typeof tmp$ret$1.addEventListener === 'undefined');
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        tmp = asCoroutineDispatcher(window);
      } else {
        if (typeof process === 'undefined' ? true : typeof process.nextTick === 'undefined') {
          tmp = SetTimeoutDispatcher_getInstance();
        } else {
          tmp = NodeDispatcher_getInstance();
        }
      }
    }
    return tmp;
  }
  function isJsdom() {
    return ((((!(typeof navigator === 'undefined') ? navigator != null : false) ? navigator.userAgent != null : false) ? !(typeof navigator.userAgent === 'undefined') : false) ? !(typeof navigator.userAgent.match === 'undefined') : false) ? navigator.userAgent.match('\\bjsdom\\b') : false;
  }
  function newCoroutineContext(_this__u8e3s4, context) {
    var combined = _this__u8e3s4.o17().m8(context);
    return (!(combined === Dispatchers_getInstance().g1i_1) ? combined.f8(Key_getInstance()) == null : false) ? combined.m8(Dispatchers_getInstance().g1i_1) : combined;
  }
  function get_coroutineName(_this__u8e3s4) {
    return null;
  }
  function handleCoroutineExceptionImpl(context, exception) {
    console.error(exception);
  }
  var counter;
  function get_DEBUG() {
    return DEBUG;
  }
  var DEBUG;
  function get_classSimpleName(_this__u8e3s4) {
    var tmp0_elvis_lhs = getKClassFromExpression(_this__u8e3s4).ei();
    return tmp0_elvis_lhs == null ? 'Unknown' : tmp0_elvis_lhs;
  }
  function get_hexAddress(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    var result = tmp$ret$0.__debug_counter;
    if (!(typeof result === 'number')) {
      counter = counter + 1 | 0;
      result = counter;
      var tmp$ret$1;
      {
        tmp$ret$1 = _this__u8e3s4;
      }
      tmp$ret$1.__debug_counter = result;
    }
    return ((!(result == null) ? typeof result === 'number' : false) ? result : THROW_CCE()).toString();
  }
  function assert(value) {
  }
  function Dispatchers() {
    Dispatchers_instance = this;
    this.g1i_1 = createDefaultDispatcher();
    this.h1i_1 = Unconfined_getInstance();
    this.i1i_1 = new JsMainDispatcher(this.g1i_1, false);
    this.j1i_1 = null;
  }
  Dispatchers.prototype.k1i = function () {
    var tmp0_elvis_lhs = this.j1i_1;
    return tmp0_elvis_lhs == null ? this.i1i_1 : tmp0_elvis_lhs;
  };
  Dispatchers.$metadata$ = objectMeta('Dispatchers');
  var Dispatchers_instance;
  function Dispatchers_getInstance() {
    if (Dispatchers_instance == null)
      new Dispatchers();
    return Dispatchers_instance;
  }
  function JsMainDispatcher(delegate, invokeImmediately) {
    MainCoroutineDispatcher.call(this);
    this.u1p_1 = delegate;
    this.v1p_1 = invokeImmediately;
    this.w1p_1 = this.v1p_1 ? this : new JsMainDispatcher(this.u1p_1, true);
  }
  JsMainDispatcher.prototype.e1i = function () {
    return this.w1p_1;
  };
  JsMainDispatcher.prototype.m1d = function (context) {
    return !this.v1p_1;
  };
  JsMainDispatcher.prototype.n1d = function (context, block) {
    return this.u1p_1.n1d(context, block);
  };
  JsMainDispatcher.prototype.toString = function () {
    var tmp0_elvis_lhs = this.f1i();
    return tmp0_elvis_lhs == null ? this.u1p_1.toString() : tmp0_elvis_lhs;
  };
  JsMainDispatcher.$metadata$ = classMeta('JsMainDispatcher', undefined, undefined, undefined, undefined, MainCoroutineDispatcher.prototype);
  function createEventLoop() {
    return new UnconfinedEventLoop();
  }
  function UnconfinedEventLoop() {
    EventLoop.call(this);
  }
  UnconfinedEventLoop.prototype.n1d = function (context, block) {
    unsupported();
  };
  UnconfinedEventLoop.$metadata$ = classMeta('UnconfinedEventLoop', undefined, undefined, undefined, undefined, EventLoop.prototype);
  function unsupported() {
    throw UnsupportedOperationException_init_$Create$('runBlocking event loop is not supported');
  }
  function JobCancellationException(message, cause, job) {
    CancellationException_init_$Init$(message, cause, this);
    this.b1q_1 = job;
    captureStack(this, JobCancellationException);
  }
  JobCancellationException.prototype.toString = function () {
    return CancellationException.prototype.toString.call(this) + '; job=' + this.b1q_1;
  };
  JobCancellationException.prototype.equals = function (other) {
    var tmp;
    if (other === this) {
      tmp = true;
    } else {
      var tmp_0;
      var tmp_1;
      var tmp_2;
      if (other instanceof JobCancellationException) {
        tmp_2 = other.message == this.message;
      } else {
        tmp_2 = false;
      }
      if (tmp_2) {
        tmp_1 = equals(other.b1q_1, this.b1q_1);
      } else {
        tmp_1 = false;
      }
      if (tmp_1) {
        tmp_0 = equals(other.cause, this.cause);
      } else {
        tmp_0 = false;
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  JobCancellationException.prototype.hashCode = function () {
    var tmp = imul(imul(getStringHashCode(ensureNotNull(this.message)), 31) + hashCode(this.b1q_1) | 0, 31);
    var tmp0_safe_receiver = this.cause;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
    return tmp + (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs) | 0;
  };
  JobCancellationException.$metadata$ = classMeta('JobCancellationException', undefined, undefined, undefined, undefined, CancellationException.prototype);
  function addSuppressedThrowable(_this__u8e3s4, other) {
  }
  function NodeDispatcher() {
    NodeDispatcher_instance = this;
    SetTimeoutBasedDispatcher.call(this);
  }
  NodeDispatcher.prototype.e1q = function () {
    process.nextTick(this.o1q().k1q_1);
  };
  NodeDispatcher.$metadata$ = objectMeta('NodeDispatcher', undefined, undefined, undefined, undefined, SetTimeoutBasedDispatcher.prototype);
  var NodeDispatcher_instance;
  function NodeDispatcher_getInstance() {
    if (NodeDispatcher_instance == null)
      new NodeDispatcher();
    return NodeDispatcher_instance;
  }
  function SetTimeoutDispatcher() {
    SetTimeoutDispatcher_instance = this;
    SetTimeoutBasedDispatcher.call(this);
  }
  SetTimeoutDispatcher.prototype.e1q = function () {
    setTimeout(this.o1q().k1q_1, 0);
  };
  SetTimeoutDispatcher.$metadata$ = objectMeta('SetTimeoutDispatcher', undefined, undefined, undefined, undefined, SetTimeoutBasedDispatcher.prototype);
  var SetTimeoutDispatcher_instance;
  function SetTimeoutDispatcher_getInstance() {
    if (SetTimeoutDispatcher_instance == null)
      new SetTimeoutDispatcher();
    return SetTimeoutDispatcher_instance;
  }
  function SetTimeoutBasedDispatcher$ScheduledMessageQueue$processQueue$lambda(this$0) {
    return function () {
      this$0.w1q();
      return Unit_getInstance();
    };
  }
  function ScheduledMessageQueue($outer) {
    this.l1q_1 = $outer;
    MessageQueue.call(this);
    var tmp = this;
    tmp.k1q_1 = SetTimeoutBasedDispatcher$ScheduledMessageQueue$processQueue$lambda(this);
  }
  ScheduledMessageQueue.prototype.x1q = function () {
    this.l1q_1.e1q();
  };
  ScheduledMessageQueue.prototype.y1q = function () {
    setTimeout(this.k1q_1, 0);
  };
  ScheduledMessageQueue.$metadata$ = classMeta('ScheduledMessageQueue', undefined, undefined, undefined, undefined, MessageQueue.prototype);
  function SetTimeoutBasedDispatcher$scheduleResumeAfterDelay$lambda($continuation, this$0) {
    return function () {
      var tmp$ret$0;
      {
        {
        }
        tmp$ret$0 = $continuation.j1a(this$0, Unit_getInstance());
      }
      return Unit_getInstance();
    };
  }
  function SetTimeoutBasedDispatcher() {
    CoroutineDispatcher.call(this);
    this.n1q_1 = new ScheduledMessageQueue(this);
  }
  SetTimeoutBasedDispatcher.prototype.o1q = function () {
    return this.n1q_1;
  };
  SetTimeoutBasedDispatcher.prototype.n1d = function (context, block) {
    this.n1q_1.z1q(block);
  };
  SetTimeoutBasedDispatcher.prototype.q1d = function (timeMillis, continuation) {
    var handle = setTimeout(SetTimeoutBasedDispatcher$scheduleResumeAfterDelay$lambda(continuation, this), delayToInt(timeMillis));
    var tmp$ret$1;
    {
      var tmp0__get_asHandler__gq3rkj = new ClearTimeout(handle);
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0__get_asHandler__gq3rkj;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    continuation.i1a(tmp$ret$1);
  };
  SetTimeoutBasedDispatcher.$metadata$ = classMeta('SetTimeoutBasedDispatcher', [Delay], undefined, undefined, undefined, CoroutineDispatcher.prototype);
  function MessageQueue() {
    ArrayQueue.call(this);
    this.u1q_1 = 16;
    this.v1q_1 = false;
  }
  MessageQueue.prototype.z1q = function (element) {
    this.b1e(element);
    if (!this.v1q_1) {
      this.v1q_1 = true;
      this.x1q();
    }
  };
  MessageQueue.prototype.w1q = function () {
    try {
      {
        var tmp0_repeat = this.u1q_1;
        {
        }
        var inductionVariable = 0;
        if (inductionVariable < tmp0_repeat)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            {
              var tmp0_elvis_lhs = this.z1d();
              var tmp;
              if (tmp0_elvis_lhs == null) {
                return Unit_getInstance();
              } else {
                tmp = tmp0_elvis_lhs;
              }
              var element = tmp;
              element.m1c();
            }
          }
           while (inductionVariable < tmp0_repeat);
      }
    }finally {
      if (this.e1e()) {
        this.v1q_1 = false;
      } else {
        this.y1q();
      }
    }
  };
  MessageQueue.$metadata$ = classMeta('MessageQueue', undefined, undefined, undefined, undefined, ArrayQueue.prototype);
  function delayToInt(timeMillis) {
    return coerceIn(timeMillis, new Long(0, 0), new Long(2147483647, 0)).fb();
  }
  function ClearTimeout(handle) {
    CancelHandler.call(this);
    this.a1r_1 = handle;
  }
  ClearTimeout.prototype.n1a = function () {
    clearTimeout(this.a1r_1);
  };
  ClearTimeout.prototype.m1a = function (cause) {
    this.n1a();
  };
  ClearTimeout.prototype.invoke = function (cause) {
    return this.m1a(cause);
  };
  ClearTimeout.prototype.toString = function () {
    return 'ClearTimeout[' + this.a1r_1 + ']';
  };
  ClearTimeout.$metadata$ = classMeta('ClearTimeout', [DisposableHandle], undefined, undefined, undefined, CancelHandler.prototype);
  function WindowDispatcher$scheduleResumeAfterDelay$lambda($continuation, this$0) {
    return function () {
      var tmp$ret$0;
      {
        {
        }
        tmp$ret$0 = $continuation.j1a(this$0, Unit_getInstance());
      }
      return Unit_getInstance();
    };
  }
  function WindowDispatcher(window_0) {
    CoroutineDispatcher.call(this);
    this.c1r_1 = window_0;
    this.d1r_1 = new WindowMessageQueue(this.c1r_1);
  }
  WindowDispatcher.prototype.n1d = function (context, block) {
    return this.d1r_1.z1q(block);
  };
  WindowDispatcher.prototype.q1d = function (timeMillis, continuation) {
    this.c1r_1.setTimeout(WindowDispatcher$scheduleResumeAfterDelay$lambda(continuation, this), delayToInt(timeMillis));
  };
  WindowDispatcher.$metadata$ = classMeta('WindowDispatcher', [Delay], undefined, undefined, undefined, CoroutineDispatcher.prototype);
  function WindowMessageQueue$lambda(this$0) {
    return function (event) {
      var tmp;
      if (event.source == this$0.j1r_1 ? event.data == this$0.k1r_1 : false) {
        event.stopPropagation();
        tmp = this$0.w1q();
      }
      return Unit_getInstance();
    };
  }
  function WindowMessageQueue$schedule$lambda(this$0) {
    return function (it) {
      this$0.w1q();
      return Unit_getInstance();
    };
  }
  function WindowMessageQueue(window_0) {
    MessageQueue.call(this);
    this.j1r_1 = window_0;
    this.k1r_1 = 'dispatchCoroutine';
    this.j1r_1.addEventListener('message', WindowMessageQueue$lambda(this), true);
  }
  WindowMessageQueue.prototype.x1q = function () {
    var tmp = Promise.resolve(Unit_getInstance());
    tmp.then(WindowMessageQueue$schedule$lambda(this));
  };
  WindowMessageQueue.prototype.y1q = function () {
    this.j1r_1.postMessage(this.k1r_1, '*');
  };
  WindowMessageQueue.$metadata$ = classMeta('WindowMessageQueue', undefined, undefined, undefined, undefined, MessageQueue.prototype);
  function Runnable() {
  }
  Runnable.$metadata$ = interfaceMeta('Runnable');
  function SchedulerTask() {
  }
  SchedulerTask.$metadata$ = classMeta('SchedulerTask', [Runnable]);
  function get_taskContext(_this__u8e3s4) {
    return Unit_getInstance();
  }
  function asCoroutineDispatcher(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    var tmp0_elvis_lhs = tmp$ret$0.coroutineDispatcher;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$2;
      {
        var tmp0_also = new WindowDispatcher(_this__u8e3s4);
        {
        }
        {
          var tmp$ret$1;
          {
            tmp$ret$1 = _this__u8e3s4;
          }
          tmp$ret$1.coroutineDispatcher = tmp0_also;
        }
        tmp$ret$2 = tmp0_also;
      }
      tmp = tmp$ret$2;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function identitySet(expectedSize) {
    return HashSet_init_$Create$(expectedSize);
  }
  function NoOpLock() {
  }
  NoOpLock.$metadata$ = classMeta('NoOpLock');
  function withLock(_this__u8e3s4, action) {
    return action();
  }
  function LinkedListHead() {
    LinkedListNode.call(this);
  }
  LinkedListHead.prototype.g1b = function () {
    throw UnsupportedOperationException_init_$Create$_0();
  };
  LinkedListHead.$metadata$ = classMeta('LinkedListHead', undefined, undefined, undefined, undefined, LinkedListNode.prototype);
  function LinkedListNode() {
    this.d1b_1 = this;
    this.e1b_1 = this;
    this.f1b_1 = false;
  }
  LinkedListNode.prototype.t1e = function () {
    return this.d1b_1;
  };
  LinkedListNode.prototype.x1e = function () {
    return this.d1b_1;
  };
  LinkedListNode.prototype.y1e = function () {
    return this.e1b_1;
  };
  LinkedListNode.prototype.z1e = function () {
    return this.f1b_1;
  };
  LinkedListNode.prototype.a1f = function (node) {
    var prev = this.e1b_1;
    node.d1b_1 = this;
    node.e1b_1 = prev;
    prev.d1b_1 = node;
    this.e1b_1 = node;
  };
  LinkedListNode.prototype.g1b = function () {
    return this.b1f();
  };
  LinkedListNode.prototype.b1f = function () {
    if (this.f1b_1)
      return false;
    var prev = this.e1b_1;
    var next = this.d1b_1;
    prev.d1b_1 = next;
    next.e1b_1 = prev;
    this.f1b_1 = true;
    return true;
  };
  LinkedListNode.prototype.k1f = function (node) {
    if (!(this.d1b_1 === this))
      return false;
    this.a1f(node);
    return true;
  };
  LinkedListNode.prototype.c1f = function (node, condition) {
    if (!condition())
      return false;
    this.a1f(node);
    return true;
  };
  LinkedListNode.prototype.d1f = function (node, predicate) {
    if (!predicate(this.e1b_1))
      return false;
    this.a1f(node);
    return true;
  };
  LinkedListNode.prototype.e1f = function (node, predicate, condition) {
    if (!predicate(this.e1b_1))
      return false;
    if (!condition())
      return false;
    this.a1f(node);
    return true;
  };
  LinkedListNode.prototype.a1l = function () {
  };
  LinkedListNode.prototype.z1d = function () {
    var next = this.d1b_1;
    if (next === this)
      return null;
    {
      var tmp0_check = next.b1f();
      {
      }
      if (!tmp0_check) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Should remove';
        }
        var message = tmp$ret$0;
        throw IllegalStateException_init_$Create$(toString_0(message));
      }
    }
    return next;
  };
  LinkedListNode.$metadata$ = classMeta('LinkedListNode');
  function PrepareOp(affected, desc, atomicOp) {
    OpDescriptor.call(this);
    this.k1j_1 = affected;
    this.l1j_1 = desc;
    this.m1j_1 = atomicOp;
  }
  PrepareOp.prototype.l1r = function () {
    return this.l1j_1;
  };
  PrepareOp.prototype.a1o = function () {
    return this.m1j_1;
  };
  PrepareOp.prototype.s1g = function (affected) {
    return null;
  };
  PrepareOp.prototype.t1k = function () {
  };
  PrepareOp.$metadata$ = classMeta('PrepareOp', undefined, undefined, undefined, undefined, OpDescriptor.prototype);
  function AbstractAtomicDesc() {
    AtomicDesc.call(this);
  }
  AbstractAtomicDesc.prototype.j1j = function (prepareOp) {
    this.w1j(prepareOp);
    return null;
  };
  AbstractAtomicDesc.prototype.z1j = function (op) {
    var affected = this.v1j();
    var failure = this.i1j(affected);
    if (!(failure == null))
      return failure;
    return this.j1j(new PrepareOp(affected, this, op));
  };
  AbstractAtomicDesc.prototype.a1k = function (op, failure) {
    return this.x1j();
  };
  AbstractAtomicDesc.prototype.i1j = function (affected) {
    return null;
  };
  AbstractAtomicDesc.$metadata$ = classMeta('AbstractAtomicDesc', undefined, undefined, undefined, undefined, AtomicDesc.prototype);
  function RemoveFirstDesc(queue) {
    AbstractAtomicDesc.call(this);
    this.s1j_1 = queue;
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0__get_nextNode__vg4li4 = this.s1j_1;
      tmp$ret$0 = tmp0__get_nextNode__vg4li4.d1b_1;
    }
    tmp.t1j_1 = tmp$ret$0;
  }
  RemoveFirstDesc.prototype.u1j = function () {
    var tmp = this.v1j();
    return isObject(tmp) ? tmp : THROW_CCE();
  };
  RemoveFirstDesc.prototype.v1j = function () {
    return this.t1j_1;
  };
  RemoveFirstDesc.prototype.w1j = function (prepareOp) {
  };
  RemoveFirstDesc.prototype.x1j = function () {
    this.s1j_1.z1d();
  };
  RemoveFirstDesc.$metadata$ = classMeta('RemoveFirstDesc', undefined, undefined, undefined, undefined, AbstractAtomicDesc.prototype);
  function probeCoroutineCreated(completion) {
    return completion;
  }
  function unwrap(exception) {
    return exception;
  }
  function CoroutineStackFrame() {
  }
  CoroutineStackFrame.$metadata$ = interfaceMeta('CoroutineStackFrame');
  function recoverStackTrace(exception, continuation) {
    return exception;
  }
  function recoverStackTrace_0(exception) {
    return exception;
  }
  function synchronized(lock, block) {
    return block();
  }
  function systemProp_1(propertyName) {
    return null;
  }
  function threadContextElements(context) {
    return 0;
  }
  function CommonThreadLocal() {
    this.k1e_1 = null;
  }
  CommonThreadLocal.prototype.l1e = function () {
    var tmp = this.k1e_1;
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  CommonThreadLocal.prototype.m1e = function (value) {
    this.k1e_1 = value;
  };
  CommonThreadLocal.$metadata$ = classMeta('CommonThreadLocal');
  //region block: post-declaration
  JobSupport.prototype.r18 = invokeOnCompletion$default;
  JobSupport.prototype.v18 = cancel$default;
  JobSupport.prototype.m8 = plus;
  JobSupport.prototype.f8 = get;
  JobSupport.prototype.l8 = fold;
  JobSupport.prototype.k8 = minusKey;
  AbstractCoroutine.prototype.r18 = invokeOnCompletion$default;
  AbstractCoroutine.prototype.v18 = cancel$default;
  AbstractCoroutine.prototype.m8 = plus;
  AbstractCoroutine.prototype.f8 = get;
  AbstractCoroutine.prototype.l8 = fold;
  AbstractCoroutine.prototype.k8 = minusKey;
  StandaloneCoroutine.prototype.r18 = invokeOnCompletion$default;
  StandaloneCoroutine.prototype.v18 = cancel$default;
  StandaloneCoroutine.prototype.m8 = plus;
  StandaloneCoroutine.prototype.f8 = get;
  StandaloneCoroutine.prototype.l8 = fold;
  StandaloneCoroutine.prototype.k8 = minusKey;
  LazyStandaloneCoroutine.prototype.r18 = invokeOnCompletion$default;
  LazyStandaloneCoroutine.prototype.v18 = cancel$default;
  LazyStandaloneCoroutine.prototype.m8 = plus;
  LazyStandaloneCoroutine.prototype.f8 = get;
  LazyStandaloneCoroutine.prototype.l8 = fold;
  LazyStandaloneCoroutine.prototype.k8 = minusKey;
  DeferredCoroutine.prototype.r18 = invokeOnCompletion$default;
  DeferredCoroutine.prototype.v18 = cancel$default;
  DeferredCoroutine.prototype.m8 = plus;
  DeferredCoroutine.prototype.f8 = get;
  DeferredCoroutine.prototype.l8 = fold;
  DeferredCoroutine.prototype.k8 = minusKey;
  LazyDeferredCoroutine.prototype.r18 = invokeOnCompletion$default;
  LazyDeferredCoroutine.prototype.v18 = cancel$default;
  LazyDeferredCoroutine.prototype.m8 = plus;
  LazyDeferredCoroutine.prototype.f8 = get;
  LazyDeferredCoroutine.prototype.l8 = fold;
  LazyDeferredCoroutine.prototype.k8 = minusKey;
  CancellableContinuationImpl.prototype.e1a = tryResume$default;
  CompletableDeferredImpl.prototype.r18 = invokeOnCompletion$default;
  CompletableDeferredImpl.prototype.v18 = cancel$default;
  CompletableDeferredImpl.prototype.m8 = plus;
  CompletableDeferredImpl.prototype.f8 = get;
  CompletableDeferredImpl.prototype.l8 = fold;
  CompletableDeferredImpl.prototype.k8 = minusKey;
  CoroutineDispatcher.prototype.f8 = get_0;
  CoroutineDispatcher.prototype.l8 = fold;
  CoroutineDispatcher.prototype.k8 = minusKey_0;
  CoroutineDispatcher.prototype.m8 = plus;
  EventLoop.prototype.m8 = plus;
  EventLoop.prototype.f8 = get_0;
  EventLoop.prototype.l8 = fold;
  EventLoop.prototype.k8 = minusKey_0;
  AwaitContinuation.prototype.e1a = tryResume$default;
  JobImpl.prototype.r18 = invokeOnCompletion$default;
  JobImpl.prototype.v18 = cancel$default;
  JobImpl.prototype.m8 = plus;
  JobImpl.prototype.f8 = get;
  JobImpl.prototype.l8 = fold;
  JobImpl.prototype.k8 = minusKey;
  MainCoroutineDispatcher.prototype.m8 = plus;
  MainCoroutineDispatcher.prototype.f8 = get_0;
  MainCoroutineDispatcher.prototype.l8 = fold;
  MainCoroutineDispatcher.prototype.k8 = minusKey_0;
  Unconfined.prototype.m8 = plus;
  Unconfined.prototype.f8 = get_0;
  Unconfined.prototype.l8 = fold;
  Unconfined.prototype.k8 = minusKey_0;
  JsMainDispatcher.prototype.m8 = plus;
  JsMainDispatcher.prototype.f8 = get_0;
  JsMainDispatcher.prototype.l8 = fold;
  JsMainDispatcher.prototype.k8 = minusKey_0;
  UnconfinedEventLoop.prototype.m8 = plus;
  UnconfinedEventLoop.prototype.f8 = get_0;
  UnconfinedEventLoop.prototype.l8 = fold;
  UnconfinedEventLoop.prototype.k8 = minusKey_0;
  SetTimeoutBasedDispatcher.prototype.m8 = plus;
  SetTimeoutBasedDispatcher.prototype.f8 = get_0;
  SetTimeoutBasedDispatcher.prototype.l8 = fold;
  SetTimeoutBasedDispatcher.prototype.k8 = minusKey_0;
  NodeDispatcher.prototype.m8 = plus;
  NodeDispatcher.prototype.f8 = get_0;
  NodeDispatcher.prototype.l8 = fold;
  NodeDispatcher.prototype.k8 = minusKey_0;
  SetTimeoutDispatcher.prototype.m8 = plus;
  SetTimeoutDispatcher.prototype.f8 = get_0;
  SetTimeoutDispatcher.prototype.l8 = fold;
  SetTimeoutDispatcher.prototype.k8 = minusKey_0;
  WindowDispatcher.prototype.m8 = plus;
  WindowDispatcher.prototype.f8 = get_0;
  WindowDispatcher.prototype.l8 = fold;
  WindowDispatcher.prototype.k8 = minusKey_0;
  //endregion
  //region block: init
  UNDECIDED = 0;
  SUSPENDED = 1;
  RESUMED = 2;
  FALSE = 0;
  TRUE = 1;
  DEFAULT_CLOSE_MESSAGE = 'Channel was closed';
  MODE_CANCELLABLE = 1;
  MODE_UNINITIALIZED = -1;
  MODE_CANCELLABLE_REUSABLE = 2;
  MODE_UNDISPATCHED = 4;
  MODE_ATOMIC = 0;
  counter = 0;
  DEBUG = false;
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = delay;
  _.$_$.b = Channel$default;
  _.$_$.c = CompletableDeferred$default;
  _.$_$.d = Job$default;
  _.$_$.e = async$default;
  _.$_$.f = launch$default;
  _.$_$.g = Factory_getInstance;
  _.$_$.h = SelectBuilderImpl;
  _.$_$.i = CompletableDeferred_0;
  _.$_$.j = CoroutineScope_0;
  _.$_$.k = CoroutineScope;
  //endregion
  return _;
}));



/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./kotlin/Infinner.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=Infinner.js.map